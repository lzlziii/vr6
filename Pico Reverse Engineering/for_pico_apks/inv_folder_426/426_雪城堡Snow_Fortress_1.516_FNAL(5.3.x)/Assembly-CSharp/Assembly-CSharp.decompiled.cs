using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Net;
using System.Net.Security;
using System.Net.Sockets;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Security.Cryptography.X509Certificates;
using System.Text;
using System.Text.RegularExpressions;
using Bhaptics.Tact;
using Bhaptics.Tact.Unity;
using Bhaptics.fastJSON;
using DG.Tweening;
using Data;
using DestroyIt;
using DeviceNetwork;
using ExitGames.Client.Photon;
using ExitGames.Client.Photon.LoadBalancing;
using ExitGames.Client.Photon.Voice;
using FMOD;
using FMOD.Studio;
using FMODUnity;
using Il2CppDummyDll;
using KTSuperVRGame;
using LitJson;
using NewtonVR;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using POpusCodec.Enums;
using Photon;
using Photon.Realtime;
using PubNubMessaging.Core;
using Pvr_UnitySDKAPI;
using Pvr_UnitySDKAPI.Achievement;
using SofaVR;
using Steamworks;
using SynthesisvrArcade;
using TMPro;
using UnityEngine;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Profiling;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.XR;
using Unitycoding.UIWidgets;
using Valve.VR;
using Viveport;
using Viveport.Internal;
using WSMGameStudio.RailroadSystem;
using WSMGameStudio.Splines;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class GUIView : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private float progress;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool muted;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int score;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string playername;

	[Token(Token = "0x4000005")]
	private const string PROGRESS_KEY = "Progress";

	[Token(Token = "0x4000006")]
	private const string MUTED_KEY = "IsSoundMuted";

	[Token(Token = "0x4000007")]
	private const string SCORE_KEY = "Highscore";

	[Token(Token = "0x4000008")]
	private const string PLAYERNAME_KEY = "PlayerName";

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x5F4314", Offset = "0x5F4314", VA = "0x5F4314")]
	private void Start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x5F4548", Offset = "0x5F4548", VA = "0x5F4548")]
	private void Update()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x5F4570", Offset = "0x5F4570", VA = "0x5F4570")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x5F445C", Offset = "0x5F445C", VA = "0x5F445C")]
	public void RefreshData()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x5F4384", Offset = "0x5F4384", VA = "0x5F4384")]
	public void SaveData()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x5F4DC8", Offset = "0x5F4DC8", VA = "0x5F4DC8")]
	public GUIView()
	{
	}
}
[Token(Token = "0x2000003")]
public class StepSounds : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000007")]
	[Address(RVA = "0x554700", Offset = "0x554700", VA = "0x554700")]
	private void Start()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x554704", Offset = "0x554704", VA = "0x554704")]
	private void Update()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x554838", Offset = "0x554838", VA = "0x554838")]
	public StepSounds()
	{
	}
}
[Token(Token = "0x2000004")]
public class UvScrollingAnimation : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector2 UvSpeed;

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x654660", Offset = "0x654660", VA = "0x654660")]
	private void Start()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x654664", Offset = "0x654664", VA = "0x654664")]
	private void Update()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x654774", Offset = "0x654774", VA = "0x654774")]
	public UvScrollingAnimation()
	{
	}
}
[Token(Token = "0x2000005")]
public class DAX_CameraControl_V2_1 : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float sensitivityX;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float sensitivityY;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float mHdg;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float mPitch;

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x7E85CC", Offset = "0x7E85CC", VA = "0x7E85CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x7E87AC", Offset = "0x7E87AC", VA = "0x7E87AC")]
	private void Start()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x7E8828", Offset = "0x7E8828", VA = "0x7E8828")]
	private void Update()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x7E8DDC", Offset = "0x7E8DDC", VA = "0x7E8DDC")]
	private void MoveForwards(float aVal)
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x7E8B88", Offset = "0x7E8B88", VA = "0x7E8B88")]
	private void Strafe(float aVal)
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x7E8CC8", Offset = "0x7E8CC8", VA = "0x7E8CC8")]
	private void ChangeHeight(float aVal)
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x7E8F54", Offset = "0x7E8F54", VA = "0x7E8F54")]
	private void ChangeHeading(float aVal)
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x7E9014", Offset = "0x7E9014", VA = "0x7E9014")]
	private void ChangePitch(float aVal)
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x7E90D4", Offset = "0x7E90D4", VA = "0x7E90D4")]
	public static void WrapAngle(ref float angle)
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x7E9120", Offset = "0x7E9120", VA = "0x7E9120")]
	public DAX_CameraControl_V2_1()
	{
	}
}
[Token(Token = "0x2000006")]
public class DAX_PrefGen_V1_2_Snow : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject[] Items;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string[] Descr;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Text OutText;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text OutDescr;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int curIndex;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject tmpPref;

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x7E9134", Offset = "0x7E9134", VA = "0x7E9134")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x7E92F4", Offset = "0x7E92F4", VA = "0x7E92F4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x7E93D8", Offset = "0x7E93D8", VA = "0x7E93D8")]
	private void Update()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x7E93DC", Offset = "0x7E93DC", VA = "0x7E93DC")]
	public void Next()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x7E9420", Offset = "0x7E9420", VA = "0x7E9420")]
	public void Prev()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x7E9138", Offset = "0x7E9138", VA = "0x7E9138")]
	public void showPrefab()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x7E9468", Offset = "0x7E9468", VA = "0x7E9468")]
	public DAX_PrefGen_V1_2_Snow()
	{
	}
}
[Token(Token = "0x2000007")]
public class Basics : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform cubeA;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform cubeB;

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x6F2EA4", Offset = "0x6F2EA4", VA = "0x6F2EA4")]
	private void Start()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x6F3104", Offset = "0x6F3104", VA = "0x6F3104")]
	public Basics()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x6F310C", Offset = "0x6F310C", VA = "0x6F310C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5F90", Offset = "0x3A5F90")]
	private Vector3 <Start>b__2_0()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x6F313C", Offset = "0x6F313C", VA = "0x6F313C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5FA0", Offset = "0x3A5FA0")]
	private void <Start>b__2_1(Vector3 x)
	{
	}
}
[Token(Token = "0x2000008")]
public class Sequences : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform target;

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x822750", Offset = "0x822750", VA = "0x822750")]
	private void Start()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x8228FC", Offset = "0x8228FC", VA = "0x8228FC")]
	public Sequences()
	{
	}
}
[Token(Token = "0x2000009")]
public class FlashingLight : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20005D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B3E0", Offset = "0x39B3E0")]
	private sealed class <Flashing>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400237D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400237E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400237F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FlashingLight <>4__this;

		[Token(Token = "0x1700043C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B53")]
			[Address(RVA = "0x803590", Offset = "0x803590", VA = "0x803590", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B55")]
			[Address(RVA = "0x803610", Offset = "0x803610", VA = "0x803610", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B50")]
		[Address(RVA = "0x803448", Offset = "0x803448", VA = "0x803448")]
		[DebuggerHidden]
		public <Flashing>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002B51")]
		[Address(RVA = "0x803478", Offset = "0x803478", VA = "0x803478", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B52")]
		[Address(RVA = "0x80347C", Offset = "0x80347C", VA = "0x80347C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B54")]
		[Address(RVA = "0x803598", Offset = "0x803598", VA = "0x803598", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float flashInterval;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Light flashingLight;

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x803350", Offset = "0x803350", VA = "0x803350")]
	private void Start()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x8033C8", Offset = "0x8033C8", VA = "0x8033C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A5FB0", Offset = "0x3A5FB0")]
	private IEnumerator Flashing()
	{
		return null;
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x803468", Offset = "0x803468", VA = "0x803468")]
	public FlashingLight()
	{
	}
}
[Token(Token = "0x200000A")]
public class Fireworks : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20005D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B3F0", Offset = "0x39B3F0")]
	private sealed class <PlayDelayedSound>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float distance;

		[Token(Token = "0x4002383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Fireworks <>4__this;

		[Token(Token = "0x4002384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string type;

		[Token(Token = "0x4002385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AudioClip clip;

		[Token(Token = "0x1700043E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B59")]
			[Address(RVA = "0x8032C8", Offset = "0x8032C8", VA = "0x8032C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B5B")]
			[Address(RVA = "0x803348", Offset = "0x803348", VA = "0x803348", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B56")]
		[Address(RVA = "0x802E60", Offset = "0x802E60", VA = "0x802E60")]
		[DebuggerHidden]
		public <PlayDelayedSound>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002B57")]
		[Address(RVA = "0x8030EC", Offset = "0x8030EC", VA = "0x8030EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B58")]
		[Address(RVA = "0x8030F0", Offset = "0x8030F0", VA = "0x8030F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B5A")]
		[Address(RVA = "0x8032D0", Offset = "0x8032D0", VA = "0x8032D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AudioClip[] mortarSounds;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AudioClip[] explodeSounds;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public ParticleSystem[] mortars;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 listenerPosition;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float speedOfSound;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private AudioClip clip;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float distance;

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x802AB4", Offset = "0x802AB4", VA = "0x802AB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x802B1C", Offset = "0x802B1C", VA = "0x802B1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x802D94", Offset = "0x802D94", VA = "0x802D94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A6020", Offset = "0x3A6020")]
	private IEnumerator PlayDelayedSound(AudioClip clip, float distance, string type)
	{
		return null;
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x802E80", Offset = "0x802E80", VA = "0x802E80")]
	private void LaunchRocket(int mortarTube)
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x803074", Offset = "0x803074", VA = "0x803074")]
	public Fireworks()
	{
	}
}
[Token(Token = "0x200000B")]
public static class FmodGvrAudio
{
	[Token(Token = "0x20005D5")]
	private struct RoomProperties
	{
		[Token(Token = "0x4002386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float positionX;

		[Token(Token = "0x4002387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float positionY;

		[Token(Token = "0x4002388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float positionZ;

		[Token(Token = "0x4002389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rotationX;

		[Token(Token = "0x400238A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float rotationY;

		[Token(Token = "0x400238B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rotationZ;

		[Token(Token = "0x400238C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rotationW;

		[Token(Token = "0x400238D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float dimensionsX;

		[Token(Token = "0x400238E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float dimensionsY;

		[Token(Token = "0x400238F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float dimensionsZ;

		[Token(Token = "0x4002390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FmodGvrAudioRoom.SurfaceMaterial materialLeft;

		[Token(Token = "0x4002391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public FmodGvrAudioRoom.SurfaceMaterial materialRight;

		[Token(Token = "0x4002392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FmodGvrAudioRoom.SurfaceMaterial materialBottom;

		[Token(Token = "0x4002393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public FmodGvrAudioRoom.SurfaceMaterial materialTop;

		[Token(Token = "0x4002394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FmodGvrAudioRoom.SurfaceMaterial materialFront;

		[Token(Token = "0x4002395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public FmodGvrAudioRoom.SurfaceMaterial materialBack;

		[Token(Token = "0x4002396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float reflectionScalar;

		[Token(Token = "0x4002397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float reverbGain;

		[Token(Token = "0x4002398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float reverbTime;

		[Token(Token = "0x4002399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float reverbBrightness;
	}

	[Token(Token = "0x4000021")]
	public const float maxGainDb = 24f;

	[Token(Token = "0x4000022")]
	public const float minGainDb = -24f;

	[Token(Token = "0x4000023")]
	public const float maxReverbBrightness = 1f;

	[Token(Token = "0x4000024")]
	public const float minReverbBrightness = -1f;

	[Token(Token = "0x4000025")]
	public const float maxReverbTime = 3f;

	[Token(Token = "0x4000026")]
	public const float maxReflectivity = 2f;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Matrix4x4 flipZ;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static readonly string listenerPluginName;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private static readonly int roomPropertiesSize;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly int roomPropertiesIndex;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private static Bounds bounds;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static List<FmodGvrAudioRoom> enabledRooms;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static VECTOR listenerPositionFmod;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private static DSP listenerPlugin;

	[Token(Token = "0x17000001")]
	private static DSP ListenerPlugin
	{
		[Token(Token = "0x600002E")]
		[Address(RVA = "0x803D34", Offset = "0x803D34", VA = "0x803D34")]
		get
		{
			return default(DSP);
		}
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x80370C", Offset = "0x80370C", VA = "0x80370C")]
	public static void UpdateAudioRoom(FmodGvrAudioRoom room, bool roomEnabled)
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x803F00", Offset = "0x803F00", VA = "0x803F00")]
	public static bool IsListenerInsideRoom(FmodGvrAudioRoom room)
	{
		return default(bool);
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x804718", Offset = "0x804718", VA = "0x804718")]
	private static float ConvertAmplitudeFromDb(float db)
	{
		return default(float);
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x8047B0", Offset = "0x8047B0", VA = "0x8047B0")]
	private static void ConvertAudioTransformFromUnity(ref Vector3 position, ref Quaternion rotation)
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x803E1C", Offset = "0x803E1C", VA = "0x803E1C")]
	private static byte[] GetBytes(IntPtr ptr, int length)
	{
		return null;
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x803ACC", Offset = "0x803ACC", VA = "0x803ACC")]
	private static RoomProperties GetRoomProperties(FmodGvrAudioRoom room)
	{
		return default(RoomProperties);
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x804238", Offset = "0x804238", VA = "0x804238")]
	private static DSP Initialize()
	{
		return default(DSP);
	}
}
[Token(Token = "0x200000C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x3992E4", Offset = "0x3992E4")]
public class FmodGvrAudioRoom : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20005D6")]
	public enum SurfaceMaterial
	{
		[Token(Token = "0x400239B")]
		Transparent,
		[Token(Token = "0x400239C")]
		AcousticCeilingTiles,
		[Token(Token = "0x400239D")]
		BrickBare,
		[Token(Token = "0x400239E")]
		BrickPainted,
		[Token(Token = "0x400239F")]
		ConcreteBlockCoarse,
		[Token(Token = "0x40023A0")]
		ConcreteBlockPainted,
		[Token(Token = "0x40023A1")]
		CurtainHeavy,
		[Token(Token = "0x40023A2")]
		FiberglassInsulation,
		[Token(Token = "0x40023A3")]
		GlassThin,
		[Token(Token = "0x40023A4")]
		GlassThick,
		[Token(Token = "0x40023A5")]
		Grass,
		[Token(Token = "0x40023A6")]
		LinoleumOnConcrete,
		[Token(Token = "0x40023A7")]
		Marble,
		[Token(Token = "0x40023A8")]
		Metal,
		[Token(Token = "0x40023A9")]
		ParquetOnConcrete,
		[Token(Token = "0x40023AA")]
		PlasterRough,
		[Token(Token = "0x40023AB")]
		PlasterSmooth,
		[Token(Token = "0x40023AC")]
		PlywoodPanel,
		[Token(Token = "0x40023AD")]
		PolishedConcreteOrTile,
		[Token(Token = "0x40023AE")]
		Sheetrock,
		[Token(Token = "0x40023AF")]
		WaterOrIceSurface,
		[Token(Token = "0x40023B0")]
		WoodCeiling,
		[Token(Token = "0x40023B1")]
		WoodPanel
	}

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public SurfaceMaterial leftWall;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SurfaceMaterial rightWall;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public SurfaceMaterial floor;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SurfaceMaterial ceiling;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public SurfaceMaterial backWall;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SurfaceMaterial frontWall;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float reflectivity;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float reverbGainDb;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float reverbBrightness;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float reverbTime;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 size;

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x5EE668", Offset = "0x5EE668", VA = "0x5EE668")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x5EE6F4", Offset = "0x5EE6F4", VA = "0x5EE6F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x5EE774", Offset = "0x5EE774", VA = "0x5EE774")]
	private void Update()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x5EE800", Offset = "0x5EE800", VA = "0x5EE800")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x5EE978", Offset = "0x5EE978", VA = "0x5EE978")]
	public FmodGvrAudioRoom()
	{
	}
}
[Token(Token = "0x200000D")]
public class TestCtrl : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x600003A")]
	[Address(RVA = "0x569368", Offset = "0x569368", VA = "0x569368")]
	private void Start()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x5693E0", Offset = "0x5693E0", VA = "0x5693E0")]
	public void TestView()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x5693E4", Offset = "0x5693E4", VA = "0x5693E4")]
	private void YYYYY()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x569468", Offset = "0x569468", VA = "0x569468")]
	private void NNNNN()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x5694EC", Offset = "0x5694EC", VA = "0x5694EC")]
	public TestCtrl()
	{
	}
}
[Token(Token = "0x200000E")]
public class BufferedAudioStream
{
	[Token(Token = "0x400003A")]
	private const bool VerboseLogging = false;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private AudioSource audio;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private float[] audioBuffer;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int writePos;

	[Token(Token = "0x400003E")]
	private const float bufferLengthSeconds = 0.25f;

	[Token(Token = "0x400003F")]
	private const int sampleRate = 48000;

	[Token(Token = "0x4000040")]
	private const int bufferSize = 12000;

	[Token(Token = "0x4000041")]
	private const float playbackDelayTimeSeconds = 0.05f;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float playbackDelayRemaining;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float remainingBufferTime;

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x683694", Offset = "0x683694", VA = "0x683694")]
	public BufferedAudioStream(AudioSource audio)
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x6837E0", Offset = "0x6837E0", VA = "0x6837E0")]
	public void Update()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x683780", Offset = "0x683780", VA = "0x683780")]
	private void Stop()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x683A48", Offset = "0x683A48", VA = "0x683A48")]
	public void AddData(float[] samples)
	{
	}
}
[Token(Token = "0x200000F")]
public class ONSPAmbisonicsNative : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20005D7")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x40023B3")]
		Uninitialized = -1,
		[Token(Token = "0x40023B4")]
		NotEnabled,
		[Token(Token = "0x40023B5")]
		Success,
		[Token(Token = "0x40023B6")]
		StreamError,
		[Token(Token = "0x40023B7")]
		ProcessError,
		[Token(Token = "0x40023B8")]
		MaxStatValue
	}

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x17000002")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x6000043")]
		[Address(RVA = "0x7AD4EC", Offset = "0x7AD4EC", VA = "0x7AD4EC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000044")]
		[Address(RVA = "0x7AD4F4", Offset = "0x7AD4F4", VA = "0x7AD4F4")]
		set
		{
		}
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x7AD4FC", Offset = "0x7AD4FC", VA = "0x7AD4FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x7AD7B4", Offset = "0x7AD7B4", VA = "0x7AD7B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x7ADAE0", Offset = "0x7ADAE0", VA = "0x7ADAE0")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x2000010")]
public class ONSPAudioSource : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20005D8")]
	private enum Parameters
	{
		[Token(Token = "0x40023BA")]
		P_GAIN,
		[Token(Token = "0x40023BB")]
		P_USEINVSQR,
		[Token(Token = "0x40023BC")]
		P_NEAR,
		[Token(Token = "0x40023BD")]
		P_FAR,
		[Token(Token = "0x40023BE")]
		P_RADIUS,
		[Token(Token = "0x40023BF")]
		P_DISABLE_RFL,
		[Token(Token = "0x40023C0")]
		P_VSPEAKERMODE,
		[Token(Token = "0x40023C1")]
		P_AMBISTAT,
		[Token(Token = "0x40023C2")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x40023C3")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x40023C4")]
		P_SENDLEVEL,
		[Token(Token = "0x40023C5")]
		P_NUM
	}

	[Token(Token = "0x4000049")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float near;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float far;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x17000003")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x600004A")]
		[Address(RVA = "0x7ADC58", Offset = "0x7ADC58", VA = "0x7ADC58")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600004B")]
		[Address(RVA = "0x7ADC60", Offset = "0x7ADC60", VA = "0x7ADC60")]
		set
		{
		}
	}

	[Token(Token = "0x17000004")]
	public float Gain
	{
		[Token(Token = "0x600004C")]
		[Address(RVA = "0x7ADC68", Offset = "0x7ADC68", VA = "0x7ADC68")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600004D")]
		[Address(RVA = "0x7ADC70", Offset = "0x7ADC70", VA = "0x7ADC70")]
		set
		{
		}
	}

	[Token(Token = "0x17000005")]
	public bool UseInvSqr
	{
		[Token(Token = "0x600004E")]
		[Address(RVA = "0x7ADD00", Offset = "0x7ADD00", VA = "0x7ADD00")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600004F")]
		[Address(RVA = "0x7ADD08", Offset = "0x7ADD08", VA = "0x7ADD08")]
		set
		{
		}
	}

	[Token(Token = "0x17000006")]
	public float Near
	{
		[Token(Token = "0x6000050")]
		[Address(RVA = "0x7ADD10", Offset = "0x7ADD10", VA = "0x7ADD10")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000051")]
		[Address(RVA = "0x7ADD18", Offset = "0x7ADD18", VA = "0x7ADD18")]
		set
		{
		}
	}

	[Token(Token = "0x17000007")]
	public float Far
	{
		[Token(Token = "0x6000052")]
		[Address(RVA = "0x7ADDA8", Offset = "0x7ADDA8", VA = "0x7ADDA8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000053")]
		[Address(RVA = "0x7ADDB0", Offset = "0x7ADDB0", VA = "0x7ADDB0")]
		set
		{
		}
	}

	[Token(Token = "0x17000008")]
	public float VolumetricRadius
	{
		[Token(Token = "0x6000054")]
		[Address(RVA = "0x7ADE40", Offset = "0x7ADE40", VA = "0x7ADE40")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000055")]
		[Address(RVA = "0x7ADE48", Offset = "0x7ADE48", VA = "0x7ADE48")]
		set
		{
		}
	}

	[Token(Token = "0x17000009")]
	public float ReverbSend
	{
		[Token(Token = "0x6000056")]
		[Address(RVA = "0x7ADED8", Offset = "0x7ADED8", VA = "0x7ADED8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000057")]
		[Address(RVA = "0x7ADEE0", Offset = "0x7ADEE0", VA = "0x7ADEE0")]
		set
		{
		}
	}

	[Token(Token = "0x1700000A")]
	public bool EnableRfl
	{
		[Token(Token = "0x6000058")]
		[Address(RVA = "0x7ADF74", Offset = "0x7ADF74", VA = "0x7ADF74")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000059")]
		[Address(RVA = "0x7ADF7C", Offset = "0x7ADF7C", VA = "0x7ADF7C")]
		set
		{
		}
	}

	[PreserveSig]
	[Token(Token = "0x6000049")]
	[Address(RVA = "0x7ADB68", Offset = "0x7ADB68", VA = "0x7ADB68")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x7ADF84", Offset = "0x7ADF84", VA = "0x7ADF84")]
	private void Awake()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x7AE168", Offset = "0x7AE168", VA = "0x7AE168")]
	private void Start()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x7AE16C", Offset = "0x7AE16C", VA = "0x7AE16C")]
	private void Update()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x7ADFF8", Offset = "0x7ADFF8", VA = "0x7ADFF8")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x7AE264", Offset = "0x7AE264", VA = "0x7AE264")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x7AE83C", Offset = "0x7AE83C", VA = "0x7AE83C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x7AE930", Offset = "0x7AE930", VA = "0x7AE930")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x2000011")]
public class ONSPProfiler : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool profilerEnabled;

	[Token(Token = "0x4000054")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int port;

	[Token(Token = "0x4000056")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x7AE958", Offset = "0x7AE958", VA = "0x7AE958")]
	private void Start()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x7AE964", Offset = "0x7AE964", VA = "0x7AE964")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000064")]
	[Address(RVA = "0x7AEA30", Offset = "0x7AEA30", VA = "0x7AEA30")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x6000065")]
	[Address(RVA = "0x7AE990", Offset = "0x7AE990", VA = "0x7AE990")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x7AEAD0", Offset = "0x7AEAD0", VA = "0x7AEAD0")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x2000012")]
public class ONSPPropagationGeometry : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20005D9")]
	private struct MeshMaterial
	{
		[Token(Token = "0x40023C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x40023C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x20005DA")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x40023C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x40023C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x40023CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string filePathRelative;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool fileEnabled;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool includeChildMeshes;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private IntPtr geometryHandle;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int OSPSuccess;

	[Token(Token = "0x400005D")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int terrainDecimation;

	[Token(Token = "0x1700000B")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x6000067")]
		[Address(RVA = "0x7B1BE4", Offset = "0x7B1BE4", VA = "0x7B1BE4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000C")]
	public string filePath
	{
		[Token(Token = "0x6000068")]
		[Address(RVA = "0x7B1C84", Offset = "0x7B1C84", VA = "0x7B1C84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x7B1D14", Offset = "0x7B1D14", VA = "0x7B1D14")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x7B1EB8", Offset = "0x7B1EB8", VA = "0x7B1EB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x7B1EBC", Offset = "0x7B1EBC", VA = "0x7B1EBC")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x7B258C", Offset = "0x7B258C", VA = "0x7B258C")]
	private void Update()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x7B2A80", Offset = "0x7B2A80", VA = "0x7B2A80")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x7B2C14", Offset = "0x7B2C14", VA = "0x7B2C14")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x7B3514", Offset = "0x7B3514", VA = "0x7B3514")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x7B35B4", Offset = "0x7B35B4", VA = "0x7B35B4")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x7B57A8", Offset = "0x7B57A8", VA = "0x7B57A8")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x7B5678", Offset = "0x7B5678", VA = "0x7B5678")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x7B22F0", Offset = "0x7B22F0", VA = "0x7B22F0")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x7B20D8", Offset = "0x7B20D8", VA = "0x7B20D8")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x7B6000", Offset = "0x7B6000", VA = "0x7B6000")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x7B65A0", Offset = "0x7B65A0", VA = "0x7B65A0")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x2000013")]
internal class ONSPPropagation
{
	[Token(Token = "0x20005DB")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x40023CC")]
		Int8,
		[Token(Token = "0x40023CD")]
		UInt8,
		[Token(Token = "0x40023CE")]
		Int16,
		[Token(Token = "0x40023CF")]
		UInt16,
		[Token(Token = "0x40023D0")]
		Int32,
		[Token(Token = "0x40023D1")]
		UInt32,
		[Token(Token = "0x40023D2")]
		Int64,
		[Token(Token = "0x40023D3")]
		UInt64,
		[Token(Token = "0x40023D4")]
		Float16,
		[Token(Token = "0x40023D5")]
		Float32,
		[Token(Token = "0x40023D6")]
		Float64
	}

	[Token(Token = "0x20005DC")]
	public class ClientType
	{
		[Token(Token = "0x40023D7")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x40023D8")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x40023D9")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x40023DA")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x40023DB")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x40023DC")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x40023DD")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x40023DE")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x40023DF")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x40023E0")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x40023E1")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x40023E2")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x40023E3")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x6002B5C")]
		[Address(RVA = "0x7AF040", Offset = "0x7AF040", VA = "0x7AF040")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x20005DD")]
	public interface PropagationInterface
	{
		[Token(Token = "0x6002B5D")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x6002B5E")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x6002B5F")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x6002B60")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6002B61")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x6002B62")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6002B63")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6002B64")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002B65")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002B66")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6002B67")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6002B68")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x6002B69")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6002B6A")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6002B6B")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x20005DE")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x40023E4")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x40023E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr context_;

		[Token(Token = "0x17000440")]
		private IntPtr context
		{
			[Token(Token = "0x6002B6C")]
			[Address(RVA = "0x7AFE9C", Offset = "0x7AFE9C", VA = "0x7AFE9C")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6002B6D")]
		[Address(RVA = "0x7AFF08", Offset = "0x7AFF08", VA = "0x7AFF08")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6002B6E")]
		[Address(RVA = "0x7AFFB0", Offset = "0x7AFFB0", VA = "0x7AFFB0")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6002B6F")]
		[Address(RVA = "0x7B0058", Offset = "0x7B0058", VA = "0x7B0058", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002B70")]
		[Address(RVA = "0x7B0078", Offset = "0x7B0078", VA = "0x7B0078")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6002B71")]
		[Address(RVA = "0x7B0128", Offset = "0x7B0128", VA = "0x7B0128", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002B72")]
		[Address(RVA = "0x7B0158", Offset = "0x7B0158", VA = "0x7B0158")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6002B73")]
		[Address(RVA = "0x7B0200", Offset = "0x7B0200", VA = "0x7B0200", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002B74")]
		[Address(RVA = "0x7B0220", Offset = "0x7B0220", VA = "0x7B0220")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6002B75")]
		[Address(RVA = "0x7B02C0", Offset = "0x7B02C0", VA = "0x7B02C0", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002B76")]
		[Address(RVA = "0x7B02C8", Offset = "0x7B02C8", VA = "0x7B02C8")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6002B77")]
		[Address(RVA = "0x7B03E0", Offset = "0x7B03E0", VA = "0x7B03E0", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002B78")]
		[Address(RVA = "0x7B04E8", Offset = "0x7B04E8", VA = "0x7B04E8")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6002B79")]
		[Address(RVA = "0x7B0598", Offset = "0x7B0598", VA = "0x7B0598", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002B7A")]
		[Address(RVA = "0x7B05A8", Offset = "0x7B05A8", VA = "0x7B05A8")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6002B7B")]
		[Address(RVA = "0x7B070C", Offset = "0x7B070C", VA = "0x7B070C", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002B7C")]
		[Address(RVA = "0x7B0718", Offset = "0x7B0718", VA = "0x7B0718")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002B7D")]
		[Address(RVA = "0x7B07E4", Offset = "0x7B07E4", VA = "0x7B07E4", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002B7E")]
		[Address(RVA = "0x7B07F0", Offset = "0x7B07F0", VA = "0x7B07F0")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002B7F")]
		[Address(RVA = "0x7B08BC", Offset = "0x7B08BC", VA = "0x7B08BC", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002B80")]
		[Address(RVA = "0x7B08C8", Offset = "0x7B08C8", VA = "0x7B08C8")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6002B81")]
		[Address(RVA = "0x7B0994", Offset = "0x7B0994", VA = "0x7B0994", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002B82")]
		[Address(RVA = "0x7B09A0", Offset = "0x7B09A0", VA = "0x7B09A0")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6002B83")]
		[Address(RVA = "0x7B0A48", Offset = "0x7B0A48", VA = "0x7B0A48", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002B84")]
		[Address(RVA = "0x7B0A68", Offset = "0x7B0A68", VA = "0x7B0A68")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6002B85")]
		[Address(RVA = "0x7B0B08", Offset = "0x7B0B08", VA = "0x7B0B08", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002B86")]
		[Address(RVA = "0x7B0B10", Offset = "0x7B0B10", VA = "0x7B0B10")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6002B87")]
		[Address(RVA = "0x7B0BC8", Offset = "0x7B0BC8", VA = "0x7B0BC8", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002B88")]
		[Address(RVA = "0x7B0BF8", Offset = "0x7B0BF8", VA = "0x7B0BF8")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6002B89")]
		[Address(RVA = "0x7B0CB0", Offset = "0x7B0CB0", VA = "0x7B0CB0", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002B8A")]
		[Address(RVA = "0x7B0CE0", Offset = "0x7B0CE0", VA = "0x7B0CE0")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6002B8B")]
		[Address(RVA = "0x7B0D88", Offset = "0x7B0D88", VA = "0x7B0D88", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6002B8C")]
		[Address(RVA = "0x7AEFE0", Offset = "0x7AEFE0", VA = "0x7AEFE0")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x20005DF")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x40023E6")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x40023E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr context_;

		[Token(Token = "0x17000441")]
		private IntPtr context
		{
			[Token(Token = "0x6002B8D")]
			[Address(RVA = "0x7B0D94", Offset = "0x7B0D94", VA = "0x7B0D94")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6002B8E")]
		[Address(RVA = "0x7AEDE0", Offset = "0x7AEDE0", VA = "0x7AEDE0")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6002B8F")]
		[Address(RVA = "0x7B0E00", Offset = "0x7B0E00", VA = "0x7B0E00")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6002B90")]
		[Address(RVA = "0x7B0EA8", Offset = "0x7B0EA8", VA = "0x7B0EA8", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002B91")]
		[Address(RVA = "0x7B0EC8", Offset = "0x7B0EC8", VA = "0x7B0EC8")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6002B92")]
		[Address(RVA = "0x7B0F78", Offset = "0x7B0F78", VA = "0x7B0F78", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002B93")]
		[Address(RVA = "0x7B0FA8", Offset = "0x7B0FA8", VA = "0x7B0FA8")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6002B94")]
		[Address(RVA = "0x7B1050", Offset = "0x7B1050", VA = "0x7B1050", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002B95")]
		[Address(RVA = "0x7B1070", Offset = "0x7B1070", VA = "0x7B1070")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6002B96")]
		[Address(RVA = "0x7B1110", Offset = "0x7B1110", VA = "0x7B1110", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002B97")]
		[Address(RVA = "0x7B1118", Offset = "0x7B1118", VA = "0x7B1118")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6002B98")]
		[Address(RVA = "0x7B1230", Offset = "0x7B1230", VA = "0x7B1230", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002B99")]
		[Address(RVA = "0x7B1338", Offset = "0x7B1338", VA = "0x7B1338")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6002B9A")]
		[Address(RVA = "0x7B13E8", Offset = "0x7B13E8", VA = "0x7B13E8", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002B9B")]
		[Address(RVA = "0x7B13F8", Offset = "0x7B13F8", VA = "0x7B13F8")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6002B9C")]
		[Address(RVA = "0x7B155C", Offset = "0x7B155C", VA = "0x7B155C", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002B9D")]
		[Address(RVA = "0x7B1568", Offset = "0x7B1568", VA = "0x7B1568")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002B9E")]
		[Address(RVA = "0x7B1634", Offset = "0x7B1634", VA = "0x7B1634", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002B9F")]
		[Address(RVA = "0x7B1640", Offset = "0x7B1640", VA = "0x7B1640")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002BA0")]
		[Address(RVA = "0x7B170C", Offset = "0x7B170C", VA = "0x7B170C", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002BA1")]
		[Address(RVA = "0x7B1718", Offset = "0x7B1718", VA = "0x7B1718")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6002BA2")]
		[Address(RVA = "0x7B17E4", Offset = "0x7B17E4", VA = "0x7B17E4", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002BA3")]
		[Address(RVA = "0x7B17F0", Offset = "0x7B17F0", VA = "0x7B17F0")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6002BA4")]
		[Address(RVA = "0x7B1898", Offset = "0x7B1898", VA = "0x7B1898", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002BA5")]
		[Address(RVA = "0x7B18B8", Offset = "0x7B18B8", VA = "0x7B18B8")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6002BA6")]
		[Address(RVA = "0x7B1958", Offset = "0x7B1958", VA = "0x7B1958", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002BA7")]
		[Address(RVA = "0x7B1960", Offset = "0x7B1960", VA = "0x7B1960")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6002BA8")]
		[Address(RVA = "0x7B1A18", Offset = "0x7B1A18", VA = "0x7B1A18", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002BA9")]
		[Address(RVA = "0x7B1A48", Offset = "0x7B1A48", VA = "0x7B1A48")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6002BAA")]
		[Address(RVA = "0x7B1B00", Offset = "0x7B1B00", VA = "0x7B1B00", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002BAB")]
		[Address(RVA = "0x7B1B30", Offset = "0x7B1B30", VA = "0x7B1B30")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6002BAC")]
		[Address(RVA = "0x7B1BD8", Offset = "0x7B1BD8", VA = "0x7B1BD8", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6002BAD")]
		[Address(RVA = "0x7AEE88", Offset = "0x7AEE88", VA = "0x7AEE88")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x20005E0")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x40023E8")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x40023E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr context_;

		[Token(Token = "0x17000442")]
		private IntPtr context
		{
			[Token(Token = "0x6002BAE")]
			[Address(RVA = "0x7AF048", Offset = "0x7AF048", VA = "0x7AF048")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6002BAF")]
		[Address(RVA = "0x7AEEE0", Offset = "0x7AEEE0", VA = "0x7AEEE0")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6002BB0")]
		[Address(RVA = "0x7AF0B8", Offset = "0x7AF0B8", VA = "0x7AF0B8")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6002BB1")]
		[Address(RVA = "0x7AF160", Offset = "0x7AF160", VA = "0x7AF160", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002BB2")]
		[Address(RVA = "0x7AF180", Offset = "0x7AF180", VA = "0x7AF180")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6002BB3")]
		[Address(RVA = "0x7AF230", Offset = "0x7AF230", VA = "0x7AF230", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002BB4")]
		[Address(RVA = "0x7AF260", Offset = "0x7AF260", VA = "0x7AF260")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6002BB5")]
		[Address(RVA = "0x7AF308", Offset = "0x7AF308", VA = "0x7AF308", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002BB6")]
		[Address(RVA = "0x7AF328", Offset = "0x7AF328", VA = "0x7AF328")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6002BB7")]
		[Address(RVA = "0x7AF3C8", Offset = "0x7AF3C8", VA = "0x7AF3C8", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002BB8")]
		[Address(RVA = "0x7AF3D0", Offset = "0x7AF3D0", VA = "0x7AF3D0")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6002BB9")]
		[Address(RVA = "0x7AF4E8", Offset = "0x7AF4E8", VA = "0x7AF4E8", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002BBA")]
		[Address(RVA = "0x7AF5F0", Offset = "0x7AF5F0", VA = "0x7AF5F0")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6002BBB")]
		[Address(RVA = "0x7AF6A0", Offset = "0x7AF6A0", VA = "0x7AF6A0", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002BBC")]
		[Address(RVA = "0x7AF6B0", Offset = "0x7AF6B0", VA = "0x7AF6B0")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6002BBD")]
		[Address(RVA = "0x7AF814", Offset = "0x7AF814", VA = "0x7AF814", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002BBE")]
		[Address(RVA = "0x7AF820", Offset = "0x7AF820", VA = "0x7AF820")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002BBF")]
		[Address(RVA = "0x7AF8EC", Offset = "0x7AF8EC", VA = "0x7AF8EC", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002BC0")]
		[Address(RVA = "0x7AF8F8", Offset = "0x7AF8F8", VA = "0x7AF8F8")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002BC1")]
		[Address(RVA = "0x7AF9C4", Offset = "0x7AF9C4", VA = "0x7AF9C4", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002BC2")]
		[Address(RVA = "0x7AF9D0", Offset = "0x7AF9D0", VA = "0x7AF9D0")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6002BC3")]
		[Address(RVA = "0x7AFA9C", Offset = "0x7AFA9C", VA = "0x7AFA9C", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002BC4")]
		[Address(RVA = "0x7AFAA8", Offset = "0x7AFAA8", VA = "0x7AFAA8")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6002BC5")]
		[Address(RVA = "0x7AFB50", Offset = "0x7AFB50", VA = "0x7AFB50", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002BC6")]
		[Address(RVA = "0x7AFB70", Offset = "0x7AFB70", VA = "0x7AFB70")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6002BC7")]
		[Address(RVA = "0x7AFC10", Offset = "0x7AFC10", VA = "0x7AFC10", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002BC8")]
		[Address(RVA = "0x7AFC18", Offset = "0x7AFC18", VA = "0x7AFC18")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6002BC9")]
		[Address(RVA = "0x7AFCD0", Offset = "0x7AFCD0", VA = "0x7AFCD0", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002BCA")]
		[Address(RVA = "0x7AFD00", Offset = "0x7AFD00", VA = "0x7AFD00")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6002BCB")]
		[Address(RVA = "0x7AFDB8", Offset = "0x7AFDB8", VA = "0x7AFDB8", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002BCC")]
		[Address(RVA = "0x7AFDE8", Offset = "0x7AFDE8", VA = "0x7AFDE8")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6002BCD")]
		[Address(RVA = "0x7AFE90", Offset = "0x7AFE90", VA = "0x7AFE90", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6002BCE")]
		[Address(RVA = "0x7AEF88", Offset = "0x7AEF88", VA = "0x7AEF88")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x1700000D")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x6000078")]
		[Address(RVA = "0x7AEAE0", Offset = "0x7AEAE0", VA = "0x7AEAE0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x7AEB5C", Offset = "0x7AEB5C", VA = "0x7AEB5C")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x7AF038", Offset = "0x7AF038", VA = "0x7AF038")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x2000014")]
public sealed class ONSPPropagationMaterial : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20005E1")]
	public enum Preset
	{
		[Token(Token = "0x40023EB")]
		Custom,
		[Token(Token = "0x40023EC")]
		AcousticTile,
		[Token(Token = "0x40023ED")]
		Brick,
		[Token(Token = "0x40023EE")]
		BrickPainted,
		[Token(Token = "0x40023EF")]
		Carpet,
		[Token(Token = "0x40023F0")]
		CarpetHeavy,
		[Token(Token = "0x40023F1")]
		CarpetHeavyPadded,
		[Token(Token = "0x40023F2")]
		CeramicTile,
		[Token(Token = "0x40023F3")]
		Concrete,
		[Token(Token = "0x40023F4")]
		ConcreteRough,
		[Token(Token = "0x40023F5")]
		ConcreteBlock,
		[Token(Token = "0x40023F6")]
		ConcreteBlockPainted,
		[Token(Token = "0x40023F7")]
		Curtain,
		[Token(Token = "0x40023F8")]
		Foliage,
		[Token(Token = "0x40023F9")]
		Glass,
		[Token(Token = "0x40023FA")]
		GlassHeavy,
		[Token(Token = "0x40023FB")]
		Grass,
		[Token(Token = "0x40023FC")]
		Gravel,
		[Token(Token = "0x40023FD")]
		GypsumBoard,
		[Token(Token = "0x40023FE")]
		PlasterOnBrick,
		[Token(Token = "0x40023FF")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x4002400")]
		Soil,
		[Token(Token = "0x4002401")]
		SoundProof,
		[Token(Token = "0x4002402")]
		Snow,
		[Token(Token = "0x4002403")]
		Steel,
		[Token(Token = "0x4002404")]
		Water,
		[Token(Token = "0x4002405")]
		WoodThin,
		[Token(Token = "0x4002406")]
		WoodThick,
		[Token(Token = "0x4002407")]
		WoodFloor,
		[Token(Token = "0x4002408")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x20005E2")]
	public sealed class Point
	{
		[Token(Token = "0x4002409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float frequency;

		[Token(Token = "0x400240A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float data;

		[Token(Token = "0x6002BCF")]
		[Address(RVA = "0x7C1B10", Offset = "0x7C1B10", VA = "0x7C1B10")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x6002BD0")]
		[Address(RVA = "0x7C1C64", Offset = "0x7C1C64", VA = "0x7C1C64")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x6002BD1")]
		[Address(RVA = "0x7C1CD8", Offset = "0x7C1CD8", VA = "0x7C1CD8")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x20005E3")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x39B400", Offset = "0x39B400")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x2000920")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DB40", Offset = "0x39DB40")]
		private sealed class <>c
		{
			[Token(Token = "0x4002BF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002BFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x4002BFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x6003873")]
			[Address(RVA = "0x7C2240", Offset = "0x7C2240", VA = "0x7C2240")]
			public <>c()
			{
			}

			[Token(Token = "0x6003874")]
			[Address(RVA = "0x7C2248", Offset = "0x7C2248", VA = "0x7C2248")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x6003875")]
			[Address(RVA = "0x7C2268", Offset = "0x7C2268", VA = "0x7C2268")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x400240B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int selection;

		[Token(Token = "0x400240C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public List<Point> points;

		[Token(Token = "0x17000443")]
		public float Item
		{
			[Token(Token = "0x6002BD2")]
			[Address(RVA = "0x7C1D34", Offset = "0x7C1D34", VA = "0x7C1D34")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002BD3")]
		[Address(RVA = "0x7C1BD8", Offset = "0x7C1BD8", VA = "0x7C1BD8")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public IntPtr materialHandle;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x39DBE0", Offset = "0x39DBE0")]
	public Spectrum absorption;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x39DC14", Offset = "0x39DC14")]
	public Spectrum transmission;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x39DC48", Offset = "0x39DC48")]
	public Spectrum scattering;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x1700000E")]
	public Preset preset
	{
		[Token(Token = "0x600007B")]
		[Address(RVA = "0x7B6698", Offset = "0x7B6698", VA = "0x7B6698")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x600007C")]
		[Address(RVA = "0x7B66A0", Offset = "0x7B66A0", VA = "0x7B66A0")]
		set
		{
		}
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x7B66BC", Offset = "0x7B66BC", VA = "0x7B66BC")]
	private void Start()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x7B5E70", Offset = "0x7B5E70", VA = "0x7B5E70")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x7B6E68", Offset = "0x7B6E68", VA = "0x7B6E68")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x7B6E6C", Offset = "0x7B6E6C", VA = "0x7B6E6C")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x7B66C0", Offset = "0x7B66C0", VA = "0x7B66C0")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x7B547C", Offset = "0x7B547C", VA = "0x7B547C")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x7B6F64", Offset = "0x7B6F64", VA = "0x7B6F64")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x7B75B0", Offset = "0x7B75B0", VA = "0x7B75B0")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x7B7C08", Offset = "0x7B7C08", VA = "0x7B7C08")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x7B8244", Offset = "0x7B8244", VA = "0x7B8244")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x7B88A4", Offset = "0x7B88A4", VA = "0x7B88A4")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x7B8F00", Offset = "0x7B8F00", VA = "0x7B8F00")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x7B955C", Offset = "0x7B955C", VA = "0x7B955C")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x7B9BA0", Offset = "0x7B9BA0", VA = "0x7B9BA0")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x7BA1E4", Offset = "0x7BA1E4", VA = "0x7BA1E4")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x7BA848", Offset = "0x7BA848", VA = "0x7BA848")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x7BAEAC", Offset = "0x7BAEAC", VA = "0x7BAEAC")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x7BB510", Offset = "0x7BB510", VA = "0x7BB510")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x7BBB6C", Offset = "0x7BBB6C", VA = "0x7BBB6C")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x7BC1BC", Offset = "0x7BC1BC", VA = "0x7BC1BC")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x7BC7F4", Offset = "0x7BC7F4", VA = "0x7BC7F4")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x7BCE34", Offset = "0x7BCE34", VA = "0x7BCE34")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x7BD2E0", Offset = "0x7BD2E0", VA = "0x7BD2E0")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x7BD78C", Offset = "0x7BD78C", VA = "0x7BD78C")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x7BDDF0", Offset = "0x7BDDF0", VA = "0x7BDDF0")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x7BE448", Offset = "0x7BE448", VA = "0x7BE448")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x7BEAA0", Offset = "0x7BEAA0", VA = "0x7BEAA0")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x7BEF44", Offset = "0x7BEF44", VA = "0x7BEF44")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x7BF124", Offset = "0x7BF124", VA = "0x7BF124")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x7BF5BC", Offset = "0x7BF5BC", VA = "0x7BF5BC")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x7BFBE8", Offset = "0x7BFBE8", VA = "0x7BFBE8")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x7C0218", Offset = "0x7C0218", VA = "0x7C0218")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x7C0854", Offset = "0x7C0854", VA = "0x7C0854")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x7C0E8C", Offset = "0x7C0E8C", VA = "0x7C0E8C")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x7C14CC", Offset = "0x7C14CC", VA = "0x7C14CC")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x7C1B38", Offset = "0x7C1B38", VA = "0x7C1B38")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x2000015")]
public class ONSPPropagationSettings : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float quality;

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x7C2288", Offset = "0x7C2288", VA = "0x7C2288")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x7C2374", Offset = "0x7C2374", VA = "0x7C2374")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x2000016")]
public class ONSPVersion : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000066")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x7C2A58", Offset = "0x7C2A58", VA = "0x7C2A58")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x7C2B08", Offset = "0x7C2B08", VA = "0x7C2B08")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x7C2C20", Offset = "0x7C2C20", VA = "0x7C2C20")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x7C2C24", Offset = "0x7C2C24", VA = "0x7C2C24")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x7C2C28", Offset = "0x7C2C28", VA = "0x7C2C28")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x2000017")]
public class OculusSpatializerUnity : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20005E4")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public LayerMask layerMask;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool visualizeRoom;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int raysPerSecond;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float roomInterpSpeed;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxWallDistance;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int rayCacheSize;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioRaycastCallback _raycastCallback;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float particleSize;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float particleOffset;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private GameObject room;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float[] dims;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float[] coefs;

	[Token(Token = "0x4000076")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3[] points;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] normals;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private ParticleSystem sys;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x400007C")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xA6D914", Offset = "0xA6D914", VA = "0xA6D914")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xA6D944", Offset = "0xA6D944", VA = "0xA6D944")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xA6DBBC", Offset = "0xA6DBBC", VA = "0xA6DBBC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xA6DCA0", Offset = "0xA6DCA0", VA = "0xA6DCA0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xA6DDC0", Offset = "0xA6DDC0", VA = "0xA6DDC0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xA6EAC0", Offset = "0xA6EAC0", VA = "0xA6EAC0")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xA6DC7C", Offset = "0xA6DC7C", VA = "0xA6DC7C")]
	private static extern int OSP_Unity_AssignRaycastCallback(MulticastDelegate callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xA6DD18", Offset = "0xA6DD18", VA = "0xA6DD18")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xA6E7A0", Offset = "0xA6E7A0", VA = "0xA6E7A0")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xA6E840", Offset = "0xA6E840", VA = "0xA6E840")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xA6E8E0", Offset = "0xA6E8E0", VA = "0xA6E8E0")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xA6E980", Offset = "0xA6E980", VA = "0xA6E980")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xA6EA20", Offset = "0xA6EA20", VA = "0xA6EA20")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xA6FF90", Offset = "0xA6FF90", VA = "0xA6FF90")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xA70050", Offset = "0xA70050", VA = "0xA70050")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xA70110", Offset = "0xA70110", VA = "0xA70110")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x2000018")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float fadeTime;
}
[Token(Token = "0x2000019")]
public class ONSPReflectionZone : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float fadeTime;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x7C2388", Offset = "0x7C2388", VA = "0x7C2388")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x7C238C", Offset = "0x7C238C", VA = "0x7C238C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x7C2390", Offset = "0x7C2390", VA = "0x7C2390")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x7C2530", Offset = "0x7C2530", VA = "0x7C2530")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x7C23D4", Offset = "0x7C23D4", VA = "0x7C23D4")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x7C247C", Offset = "0x7C247C", VA = "0x7C247C")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x7C2574", Offset = "0x7C2574", VA = "0x7C2574")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x7C2634", Offset = "0x7C2634", VA = "0x7C2634")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x7C27F4", Offset = "0x7C27F4", VA = "0x7C27F4")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x7C29B4", Offset = "0x7C29B4", VA = "0x7C29B4")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x200001A")]
public class OculusDK2DebugSwitches : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform CameraRigTransform;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject Fox;

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xA6D76C", Offset = "0xA6D76C", VA = "0xA6D76C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xA6D7F4", Offset = "0xA6D7F4", VA = "0xA6D7F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xA6D7F8", Offset = "0xA6D7F8", VA = "0xA6D7F8")]
	public OculusDK2DebugSwitches()
	{
	}
}
[Token(Token = "0x200001B")]
[DisallowMultipleComponent]
public class PhotonVoiceHandler : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int updateInterval;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int nextSendTickCount;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool sendThreadShouldRun;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static Stopwatch timerToStopConnectionInBackground;

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x620A64", Offset = "0x620A64", VA = "0x620A64")]
	private static void StartFallbackSendAckThread()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x620B5C", Offset = "0x620B5C", VA = "0x620B5C")]
	private static void StopFallbackSendAckThread()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x620BB8", Offset = "0x620BB8", VA = "0x620BB8")]
	private static bool FallbackSendAckThread()
	{
		return default(bool);
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x620FF0", Offset = "0x620FF0", VA = "0x620FF0")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x3A6090", Offset = "0x3A6090")]
	private static void RuntimeInitializeOnLoad()
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x62119C", Offset = "0x62119C", VA = "0x62119C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x621618", Offset = "0x621618", VA = "0x621618")]
	protected void Update()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x6218EC", Offset = "0x6218EC", VA = "0x6218EC")]
	protected void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x621A20", Offset = "0x621A20", VA = "0x621A20")]
	protected void OnDestroy()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x621A7C", Offset = "0x621A7C", VA = "0x621A7C")]
	protected void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x621B3C", Offset = "0x621B3C", VA = "0x621B3C")]
	public PhotonVoiceHandler()
	{
	}
}
[Token(Token = "0x200001C")]
[DisallowMultipleComponent]
public class PhotonVoiceNetwork : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PhotonVoiceNetwork _instance;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static object instanceLock;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool destroyed;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float BackgroundTimeout;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	internal UnityVoiceFrontend client;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DC8C", Offset = "0x39DC8C")]
	private static Func<PhotonVoiceRecorder, IAudioSource> <AudioSourceFactory>k__BackingField;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string unityMicrophoneDevice;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int photonMicrophoneDeviceID;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioInEnumerator photonMicEnumerator;

	[Token(Token = "0x1700000F")]
	internal static PhotonVoiceNetwork instance
	{
		[Token(Token = "0x60000D1")]
		[Address(RVA = "0x6212A0", Offset = "0x6212A0", VA = "0x6212A0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000D2")]
		[Address(RVA = "0x621B44", Offset = "0x621B44", VA = "0x621B44")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public static Func<PhotonVoiceRecorder, IAudioSource> AudioSourceFactory
	{
		[Token(Token = "0x60000D7")]
		[Address(RVA = "0x6221EC", Offset = "0x6221EC", VA = "0x6221EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A60B0", Offset = "0x3A60B0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000D8")]
		[Address(RVA = "0x622264", Offset = "0x622264", VA = "0x622264")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A60C0", Offset = "0x3A60C0")]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public static UnityVoiceFrontend Client
	{
		[Token(Token = "0x60000DB")]
		[Address(RVA = "0x620ED0", Offset = "0x620ED0", VA = "0x620ED0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000012")]
	public static VoiceClient VoiceClient
	{
		[Token(Token = "0x60000DC")]
		[Address(RVA = "0x622774", Offset = "0x622774", VA = "0x622774")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000013")]
	public static ExitGames.Client.Photon.LoadBalancing.ClientState ClientState
	{
		[Token(Token = "0x60000DD")]
		[Address(RVA = "0x622808", Offset = "0x622808", VA = "0x622808")]
		get
		{
			return default(ExitGames.Client.Photon.LoadBalancing.ClientState);
		}
	}

	[Token(Token = "0x17000014")]
	public static string CurrentRoomName
	{
		[Token(Token = "0x60000DE")]
		[Address(RVA = "0x62289C", Offset = "0x62289C", VA = "0x62289C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000015")]
	public static AudioInEnumerator PhotonMicrophoneEnumerator
	{
		[Token(Token = "0x60000DF")]
		[Address(RVA = "0x6229A4", Offset = "0x6229A4", VA = "0x6229A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000016")]
	public static string MicrophoneDevice
	{
		[Token(Token = "0x60000E0")]
		[Address(RVA = "0x622A28", Offset = "0x622A28", VA = "0x622A28")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000E1")]
		[Address(RVA = "0x622AAC", Offset = "0x622AAC", VA = "0x622AAC")]
		set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public static int PhotonMicrophoneDeviceID
	{
		[Token(Token = "0x60000E2")]
		[Address(RVA = "0x6231B4", Offset = "0x6231B4", VA = "0x6231B4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000E3")]
		[Address(RVA = "0x623238", Offset = "0x623238", VA = "0x623238")]
		set
		{
		}
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x621EF8", Offset = "0x621EF8", VA = "0x621EF8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x622028", Offset = "0x622028", VA = "0x622028")]
	private PhotonVoiceNetwork()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x6220CC", Offset = "0x6220CC", VA = "0x6220CC")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x3A60A0", Offset = "0x3A60A0")]
	public static void RuntimeInitializeOnLoad()
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x622174", Offset = "0x622174", VA = "0x622174")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x6222E0", Offset = "0x6222E0", VA = "0x6222E0")]
	public static bool Connect()
	{
		return default(bool);
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x620F54", Offset = "0x620F54", VA = "0x620F54")]
	public static void Disconnect()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x623718", Offset = "0x623718", VA = "0x623718")]
	protected void OnEnable()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x6237D4", Offset = "0x6237D4", VA = "0x6237D4")]
	protected void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x6238D0", Offset = "0x6238D0", VA = "0x6238D0")]
	protected void Update()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x623A1C", Offset = "0x623A1C", VA = "0x623A1C")]
	private void OnJoinedRoom()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x623C58", Offset = "0x623C58", VA = "0x623C58")]
	private void OnLeftRoom()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x623E5C", Offset = "0x623E5C", VA = "0x623E5C")]
	private void OnDisconnectedFromPhoton()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x624060", Offset = "0x624060", VA = "0x624060")]
	internal static void LinkSpeakerToRemoteVoice(PhotonVoiceSpeaker speaker)
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x624104", Offset = "0x624104", VA = "0x624104")]
	internal static void UnlinkSpeakerFromRemoteVoice(PhotonVoiceSpeaker speaker)
	{
	}
}
[Token(Token = "0x200001D")]
public class UnityVoiceFrontend : LoadBalancingFrontend
{
	[Token(Token = "0x20005E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B434", Offset = "0x39B434")]
	private sealed class <>c__DisplayClass27_0
	{
		[Token(Token = "0x400240D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UnityVoiceFrontend <>4__this;

		[Token(Token = "0x400240E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int playerId;

		[Token(Token = "0x400240F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte voiceId;

		[Token(Token = "0x6002BD8")]
		[Address(RVA = "0x649F54", Offset = "0x649F54", VA = "0x649F54")]
		public <>c__DisplayClass27_0()
		{
		}

		[Token(Token = "0x6002BD9")]
		[Address(RVA = "0x64B114", Offset = "0x64B114", VA = "0x64B114")]
		internal void <OnRemoteVoiceInfo>b__0(float[] frame)
		{
		}

		[Token(Token = "0x6002BDA")]
		[Address(RVA = "0x64B158", Offset = "0x64B158", VA = "0x64B158")]
		internal void <OnRemoteVoiceInfo>b__1()
		{
		}
	}

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Dictionary<KeyValuePair<int, byte>, PhotonVoiceSpeaker> voiceSpeakers;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DC9C", Offset = "0x39DC9C")]
	private Action<int, byte, VoiceInfo> <OnRemoteVoiceInfoAction>k__BackingField;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DCAC", Offset = "0x39DCAC")]
	private Action<int, byte> <OnRemoteVoiceRemoveAction>k__BackingField;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DCBC", Offset = "0x39DCBC")]
	private Action<int, byte, float[]> <OnAudioFrameAction>k__BackingField;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DCCC", Offset = "0x39DCCC")]
	private Action<ExitGames.Client.Photon.LoadBalancing.ClientState> <OnStateChangeAction>k__BackingField;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DCDC", Offset = "0x39DCDC")]
	private Action<OperationResponse> <OnOpResponseAction>k__BackingField;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool reconnect;

	[Token(Token = "0x17000018")]
	public Action<int, byte, VoiceInfo> OnRemoteVoiceInfoAction
	{
		[Token(Token = "0x60000ED")]
		[Address(RVA = "0x648FB8", Offset = "0x648FB8", VA = "0x648FB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A60D0", Offset = "0x3A60D0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000EE")]
		[Address(RVA = "0x648FC0", Offset = "0x648FC0", VA = "0x648FC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A60E0", Offset = "0x3A60E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000019")]
	public Action<int, byte> OnRemoteVoiceRemoveAction
	{
		[Token(Token = "0x60000EF")]
		[Address(RVA = "0x648FC8", Offset = "0x648FC8", VA = "0x648FC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A60F0", Offset = "0x3A60F0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000F0")]
		[Address(RVA = "0x648FD0", Offset = "0x648FD0", VA = "0x648FD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6100", Offset = "0x3A6100")]
		set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	public Action<int, byte, float[]> OnAudioFrameAction
	{
		[Token(Token = "0x60000F1")]
		[Address(RVA = "0x648FD8", Offset = "0x648FD8", VA = "0x648FD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6110", Offset = "0x3A6110")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000F2")]
		[Address(RVA = "0x648FE0", Offset = "0x648FE0", VA = "0x648FE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6120", Offset = "0x3A6120")]
		set
		{
		}
	}

	[Token(Token = "0x1700001B")]
	public new Action<ExitGames.Client.Photon.LoadBalancing.ClientState> OnStateChangeAction
	{
		[Token(Token = "0x60000F3")]
		[Address(RVA = "0x648FE8", Offset = "0x648FE8", VA = "0x648FE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6130", Offset = "0x3A6130")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000F4")]
		[Address(RVA = "0x648FF0", Offset = "0x648FF0", VA = "0x648FF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6140", Offset = "0x3A6140")]
		set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public new Action<OperationResponse> OnOpResponseAction
	{
		[Token(Token = "0x60000F5")]
		[Address(RVA = "0x648FF8", Offset = "0x648FF8", VA = "0x648FF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6150", Offset = "0x3A6150")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000F6")]
		[Address(RVA = "0x649000", Offset = "0x649000", VA = "0x649000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6160", Offset = "0x3A6160")]
		set
		{
		}
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x649008", Offset = "0x649008", VA = "0x649008")]
	internal UnityVoiceFrontend(ConnectionProtocol connetProtocol)
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x649218", Offset = "0x649218", VA = "0x649218")]
	public void Reconnect()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x6492B8", Offset = "0x6492B8", VA = "0x6492B8", Slot = "14")]
	public override void DebugReturn(DebugLevel level, string message)
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x649480", Offset = "0x649480", VA = "0x649480")]
	public void OnOpResponse(OperationResponse resp)
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x6494F0", Offset = "0x6494F0", VA = "0x6494F0")]
	private void linkVoice(int playerId, byte voiceId, VoiceInfo voiceInfo, PhotonVoiceSpeaker speaker)
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x649990", Offset = "0x649990", VA = "0x649990")]
	public void OnRemoteVoiceInfo(int channelId, int playerId, byte voiceId, VoiceInfo voiceInfo, ref RemoteVoiceOptions options)
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x649F5C", Offset = "0x649F5C", VA = "0x649F5C")]
	public void LinkSpeakerToRemoteVoice(PhotonVoiceSpeaker speaker)
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x64A340", Offset = "0x64A340", VA = "0x64A340")]
	public void OnRemoteVoiceRemove(int playerId, byte voiceId)
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x64A66C", Offset = "0x64A66C", VA = "0x64A66C")]
	private bool unlinkSpeaker(KeyValuePair<int, byte> key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x64A754", Offset = "0x64A754", VA = "0x64A754")]
	public void UnlinkSpeakerFromRemoteVoice(PhotonVoiceSpeaker speaker)
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x64ABA4", Offset = "0x64ABA4", VA = "0x64ABA4")]
	public void OnAudioFrame(int playerId, byte voiceId, float[] frame)
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x64AE00", Offset = "0x64AE00", VA = "0x64AE00")]
	public void OnStateChange(ExitGames.Client.Photon.LoadBalancing.ClientState state)
	{
	}
}
[Token(Token = "0x200001E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x399338", Offset = "0x399338")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x399338", Offset = "0x399338")]
public class PhotonVoiceRecorder : Photon.MonoBehaviour
{
	[Token(Token = "0x20005E6")]
	public enum AudioSource
	{
		[Token(Token = "0x4002411")]
		Microphone,
		[Token(Token = "0x4002412")]
		AudioClip,
		[Token(Token = "0x4002413")]
		Factory
	}

	[Token(Token = "0x20005E7")]
	public enum MicAudioSourceType
	{
		[Token(Token = "0x4002415")]
		Settings,
		[Token(Token = "0x4002416")]
		Unity,
		[Token(Token = "0x4002417")]
		Photon
	}

	[Token(Token = "0x20005E8")]
	public enum SampleTypeConv
	{
		[Token(Token = "0x4002419")]
		None,
		[Token(Token = "0x400241A")]
		Short,
		[Token(Token = "0x400241B")]
		ShortAuto
	}

	[Token(Token = "0x20005E9")]
	public class PhotonVoiceCreatedParams
	{
		[Token(Token = "0x400241C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5C50", Offset = "0x3A5C50")]
		private LocalVoice <Voice>k__BackingField;

		[Token(Token = "0x400241D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5C60", Offset = "0x3A5C60")]
		private IAudioSource <AudioSource>k__BackingField;

		[Token(Token = "0x17000444")]
		public LocalVoice Voice
		{
			[Token(Token = "0x6002BDB")]
			[Address(RVA = "0x627088", Offset = "0x627088", VA = "0x627088")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADF8C", Offset = "0x3ADF8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002BDC")]
			[Address(RVA = "0x627090", Offset = "0x627090", VA = "0x627090")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADF9C", Offset = "0x3ADF9C")]
			internal set
			{
			}
		}

		[Token(Token = "0x17000445")]
		public IAudioSource AudioSource
		{
			[Token(Token = "0x6002BDD")]
			[Address(RVA = "0x627098", Offset = "0x627098", VA = "0x627098")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADFAC", Offset = "0x3ADFAC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002BDE")]
			[Address(RVA = "0x6270A0", Offset = "0x6270A0", VA = "0x6270A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADFBC", Offset = "0x3ADFBC")]
			internal set
			{
			}
		}

		[Token(Token = "0x6002BDF")]
		[Address(RVA = "0x626818", Offset = "0x626818", VA = "0x626818")]
		public PhotonVoiceCreatedParams()
		{
		}
	}

	[Token(Token = "0x20005EA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B444", Offset = "0x39B444")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x400241E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public LocalVoiceAudio<float> localVoice;

		[Token(Token = "0x6002BE0")]
		[Address(RVA = "0x626728", Offset = "0x626728", VA = "0x626728")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x6002BE1")]
		[Address(RVA = "0x626FA0", Offset = "0x626FA0", VA = "0x626FA0")]
		internal void <createLocalVoiceAudio>b__0(float[] buf)
		{
		}
	}

	[Token(Token = "0x20005EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B454", Offset = "0x39B454")]
	private sealed class <>c__DisplayClass33_1
	{
		[Token(Token = "0x400241F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public LocalVoiceAudio<short> localVoice;

		[Token(Token = "0x6002BE2")]
		[Address(RVA = "0x626730", Offset = "0x626730", VA = "0x626730")]
		public <>c__DisplayClass33_1()
		{
		}

		[Token(Token = "0x6002BE3")]
		[Address(RVA = "0x627014", Offset = "0x627014", VA = "0x627014")]
		internal void <createLocalVoiceAudio>b__1(short[] buf)
		{
		}
	}

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private LocalVoice voice;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private string microphoneDevice;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int photonMicrophoneDeviceID;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private IAudioSource audioSource;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource Source;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public MicAudioSourceType MicrophoneType;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SampleTypeConv TypeConvert;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool forceShort;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip AudioClip;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool LoopAudioClip;

	[Token(Token = "0x1700001D")]
	protected ILocalVoiceAudio voiceAudio
	{
		[Token(Token = "0x6000103")]
		[Address(RVA = "0x62426C", Offset = "0x62426C", VA = "0x62426C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001E")]
	public AudioUtil.IVoiceDetector VoiceDetector
	{
		[Token(Token = "0x6000104")]
		[Address(RVA = "0x6242F4", Offset = "0x6242F4", VA = "0x6242F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001F")]
	public string MicrophoneDevice
	{
		[Token(Token = "0x6000105")]
		[Address(RVA = "0x6243FC", Offset = "0x6243FC", VA = "0x6243FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000106")]
		[Address(RVA = "0x6230C4", Offset = "0x6230C4", VA = "0x6230C4")]
		set
		{
		}
	}

	[Token(Token = "0x17000020")]
	public int PhotonMicrophoneDeviceID
	{
		[Token(Token = "0x6000107")]
		[Address(RVA = "0x624ABC", Offset = "0x624ABC", VA = "0x624ABC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000108")]
		[Address(RVA = "0x6235D8", Offset = "0x6235D8", VA = "0x6235D8")]
		set
		{
		}
	}

	[Token(Token = "0x17000021")]
	public byte AudioGroup
	{
		[Token(Token = "0x600010A")]
		[Address(RVA = "0x625634", Offset = "0x625634", VA = "0x625634")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x600010B")]
		[Address(RVA = "0x625654", Offset = "0x625654", VA = "0x625654")]
		set
		{
		}
	}

	[Token(Token = "0x17000022")]
	public bool IsTransmitting
	{
		[Token(Token = "0x600010C")]
		[Address(RVA = "0x625678", Offset = "0x625678", VA = "0x625678")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000023")]
	public AudioUtil.ILevelMeter LevelMeter
	{
		[Token(Token = "0x600010D")]
		[Address(RVA = "0x625698", Offset = "0x625698", VA = "0x625698")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000024")]
	public bool Transmit
	{
		[Token(Token = "0x6000114")]
		[Address(RVA = "0x626954", Offset = "0x626954", VA = "0x626954")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000115")]
		[Address(RVA = "0x626974", Offset = "0x626974", VA = "0x626974")]
		set
		{
		}
	}

	[Token(Token = "0x17000025")]
	public bool Detect
	{
		[Token(Token = "0x6000116")]
		[Address(RVA = "0x626998", Offset = "0x626998", VA = "0x626998")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000117")]
		[Address(RVA = "0x626AF4", Offset = "0x626AF4", VA = "0x626AF4")]
		set
		{
		}
	}

	[Token(Token = "0x17000026")]
	public bool DebugEchoMode
	{
		[Token(Token = "0x6000118")]
		[Address(RVA = "0x624AC4", Offset = "0x624AC4", VA = "0x624AC4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000119")]
		[Address(RVA = "0x624AE4", Offset = "0x624AE4", VA = "0x624AE4")]
		set
		{
		}
	}

	[Token(Token = "0x17000027")]
	public bool VoiceDetectorCalibrating
	{
		[Token(Token = "0x600011B")]
		[Address(RVA = "0x626D64", Offset = "0x626D64", VA = "0x626D64")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x624404", Offset = "0x624404", VA = "0x624404")]
	public void UpdateAudioSource()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x62576C", Offset = "0x62576C", VA = "0x62576C")]
	private void Start()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x624B14", Offset = "0x624B14", VA = "0x624B14")]
	private LocalVoice createLocalVoiceAudioAndSource()
	{
		return null;
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x625C18", Offset = "0x625C18", VA = "0x625C18", Slot = "4")]
	protected virtual LocalVoice createLocalVoiceAudio(VoiceInfo voiceInfo, IAudioSource source)
	{
		return null;
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x626738", Offset = "0x626738", VA = "0x626738", Slot = "5")]
	protected virtual void sendPhotonVoiceCreatedMessage()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x626820", Offset = "0x626820", VA = "0x626820")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x626950", Offset = "0x626950", VA = "0x626950")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x626C58", Offset = "0x626C58", VA = "0x626C58")]
	public void VoiceDetectorCalibrate(int durationMs)
	{
	}

	[Token(Token = "0x600011C")]
	private string tostr<T>(T[] x, int lim = 10)
	{
		return null;
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x626E38", Offset = "0x626E38", VA = "0x626E38")]
	public string ToStringFull()
	{
		return null;
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x626F04", Offset = "0x626F04", VA = "0x626F04")]
	public PhotonVoiceRecorder()
	{
	}
}
[Token(Token = "0x200001F")]
[DisallowMultipleComponent]
public class PhotonVoiceSettings : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20005EC")]
	public enum MicAudioSourceType
	{
		[Token(Token = "0x4002421")]
		Unity,
		[Token(Token = "0x4002422")]
		Photon
	}

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool WorkInOfflineMode;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public bool AutoConnect;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	public bool AutoDisconnect;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
	public bool AutoTransmit;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SamplingRate SamplingRate;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public OpusCodec.FrameDuration FrameDuration;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int Bitrate;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool VoiceDetection;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float VoiceDetectionThreshold;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int PlayDelayMs;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MicAudioSourceType MicrophoneType;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int DebugLostPercent;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool DebugInfo;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool Encrypt;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PhotonVoiceSettings instance;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static object instanceLock;

	[Token(Token = "0x17000028")]
	public static PhotonVoiceSettings Instance
	{
		[Token(Token = "0x600011F")]
		[Address(RVA = "0x622DEC", Offset = "0x622DEC", VA = "0x622DEC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000120")]
		[Address(RVA = "0x6270A8", Offset = "0x6270A8", VA = "0x6270A8")]
		private set
		{
		}
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x62745C", Offset = "0x62745C", VA = "0x62745C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x6274D4", Offset = "0x6274D4", VA = "0x6274D4")]
	public PhotonVoiceSettings()
	{
	}
}
[Token(Token = "0x2000020")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x3993F0", Offset = "0x3993F0")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x3993F0", Offset = "0x3993F0")]
public class PhotonVoiceSpeaker : Photon.MonoBehaviour
{
	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IAudioOut player;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private bool started;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DCEC", Offset = "0x39DCEC")]
	private long <LastRecvTime>k__BackingField;

	[Token(Token = "0x17000029")]
	public long LastRecvTime
	{
		[Token(Token = "0x6000124")]
		[Address(RVA = "0x627588", Offset = "0x627588", VA = "0x627588")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6170", Offset = "0x3A6170")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000125")]
		[Address(RVA = "0x627590", Offset = "0x627590", VA = "0x627590")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6180", Offset = "0x3A6180")]
		private set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000126")]
		[Address(RVA = "0x6275A0", Offset = "0x6275A0", VA = "0x6275A0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002B")]
	public int CurrentBufferLag
	{
		[Token(Token = "0x6000127")]
		[Address(RVA = "0x62766C", Offset = "0x62766C", VA = "0x62766C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700002C")]
	public bool IsVoiceLinked
	{
		[Token(Token = "0x6000128")]
		[Address(RVA = "0x627738", Offset = "0x627738", VA = "0x627738")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x627758", Offset = "0x627758", VA = "0x627758")]
	private void Awake()
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x627848", Offset = "0x627848", VA = "0x627848")]
	private void Start()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x6278C0", Offset = "0x6278C0", VA = "0x6278C0")]
	internal void OnVoiceLinked(int frequency, int channels, int frameSamplesPerChannel, int playDelayMs)
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x6279C8", Offset = "0x6279C8", VA = "0x6279C8")]
	internal void OnVoiceUnlinked()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x627AA0", Offset = "0x627AA0", VA = "0x627AA0")]
	private void Update()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x627B6C", Offset = "0x627B6C", VA = "0x627B6C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x627BEC", Offset = "0x627BEC", VA = "0x627BEC")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x6279CC", Offset = "0x6279CC", VA = "0x6279CC")]
	private void Cleanup()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x627BF0", Offset = "0x627BF0", VA = "0x627BF0")]
	internal void OnAudioFrame(float[] frame)
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x627D2C", Offset = "0x627D2C", VA = "0x627D2C")]
	public PhotonVoiceSpeaker()
	{
	}
}
[Token(Token = "0x2000021")]
internal class DelayProcessor : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20005ED")]
	private abstract class Processor<T> : LocalVoiceFramed<T>.IProcessor, IDisposable
	{
		[Token(Token = "0x4002423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float factor;

		[Token(Token = "0x4002424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T[] prevBuf;

		[Token(Token = "0x4002425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int prevBufPosWrite;

		[Token(Token = "0x4002426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int prevBufPosRead;

		[Token(Token = "0x6002BE4")]
		public Processor(int delaySamples, float factor)
		{
		}

		[Token(Token = "0x6002BE5")]
		protected abstract void mix(float factor, T[] buf, T[] prevBuf, ref int prevBufPosRead);

		[Token(Token = "0x6002BE6")]
		public T[] Process(T[] buf)
		{
			return null;
		}

		[Token(Token = "0x6002BE7")]
		public void Dispose()
		{
		}
	}

	[Token(Token = "0x20005EE")]
	private class ProcessorFloat : Processor<float>
	{
		[Token(Token = "0x6002BE8")]
		[Address(RVA = "0x7E9998", Offset = "0x7E9998", VA = "0x7E9998")]
		public ProcessorFloat(int delaySamples, float factor)
		{
		}

		[Token(Token = "0x6002BE9")]
		[Address(RVA = "0x7E9A78", Offset = "0x7E9A78", VA = "0x7E9A78", Slot = "6")]
		protected override void mix(float factor, float[] buf, float[] prevBuf, ref int prevBufPosRead)
		{
		}
	}

	[Token(Token = "0x20005EF")]
	private class ProcessorShort : Processor<short>
	{
		[Token(Token = "0x6002BEA")]
		[Address(RVA = "0x7E9A04", Offset = "0x7E9A04", VA = "0x7E9A04")]
		public ProcessorShort(int delaySamples, float factor)
		{
		}

		[Token(Token = "0x6002BEB")]
		[Address(RVA = "0x7E9B38", Offset = "0x7E9B38", VA = "0x7E9B38", Slot = "6")]
		protected override void mix(float factor, short[] buf, short[] prevBuf, ref int prevBufPosRead)
		{
		}
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x7E9478", Offset = "0x7E9478", VA = "0x7E9478")]
	private void PhotonVoiceCreated(PhotonVoiceRecorder.PhotonVoiceCreatedParams p)
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x7E9A70", Offset = "0x7E9A70", VA = "0x7E9A70")]
	public DelayProcessor()
	{
	}
}
[Token(Token = "0x2000022")]
public class Gui : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B464", Offset = "0x39B464")]
	private sealed class <>c
	{
		[Token(Token = "0x4002427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static Func<PhotonVoiceRecorder, IAudioSource> <>9__0_0;

		[Token(Token = "0x4002429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<PhotonVoiceRecorder, IAudioSource> <>9__0_1;

		[Token(Token = "0x6002BED")]
		[Address(RVA = "0x6AC02C", Offset = "0x6AC02C", VA = "0x6AC02C")]
		public <>c()
		{
		}

		[Token(Token = "0x6002BEE")]
		[Address(RVA = "0x6AC034", Offset = "0x6AC034", VA = "0x6AC034")]
		internal IAudioSource <Start>b__0_0(PhotonVoiceRecorder rec)
		{
			return null;
		}

		[Token(Token = "0x6002BEF")]
		[Address(RVA = "0x6AC13C", Offset = "0x6AC13C", VA = "0x6AC13C")]
		internal IAudioSource <Start>b__0_1(PhotonVoiceRecorder rec)
		{
			return null;
		}
	}

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private float dataRateNextTime;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int prevInBytes;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int prevOutBytes;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int dataRateIn;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int dataRateOut;

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x6A7A48", Offset = "0x6A7A48", VA = "0x6A7A48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x6A7D98", Offset = "0x6A7D98", VA = "0x6A7D98")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x6ABFB8", Offset = "0x6ABFB8", VA = "0x6ABFB8")]
	public Gui()
	{
	}
}
[Token(Token = "0x2000023")]
public class HighlightRecorder : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private PhotonVoiceRecorder recorder;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Renderer rendererComp;

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x6ADBE8", Offset = "0x6ADBE8", VA = "0x6ADBE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x6ADD34", Offset = "0x6ADD34", VA = "0x6ADD34")]
	private void Update()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x6ADE00", Offset = "0x6ADE00", VA = "0x6ADE00")]
	public HighlightRecorder()
	{
	}
}
[Token(Token = "0x2000024")]
public class HighlightSpeaker : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private PhotonVoiceSpeaker speaker;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Renderer rendererComp;

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x6ADE08", Offset = "0x6ADE08", VA = "0x6ADE08")]
	private void Start()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x6ADF54", Offset = "0x6ADF54", VA = "0x6ADF54")]
	private void Update()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x6AE020", Offset = "0x6AE020", VA = "0x6AE020")]
	public HighlightSpeaker()
	{
	}
}
[Token(Token = "0x2000025")]
internal class ToneAudioReader : IAudioReader<float>, IDataReader<float>, IDisposable, IAudioSource
{
	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private double k;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private long timeSamples;

	[Token(Token = "0x1700002D")]
	public int Channels
	{
		[Token(Token = "0x600013F")]
		[Address(RVA = "0x5699EC", Offset = "0x5699EC", VA = "0x5699EC", Slot = "7")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700002E")]
	public int SamplingRate
	{
		[Token(Token = "0x6000140")]
		[Address(RVA = "0x5699E4", Offset = "0x5699E4", VA = "0x5699E4", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x5699B8", Offset = "0x5699B8", VA = "0x5699B8")]
	public ToneAudioReader()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x5699F4", Offset = "0x5699F4", VA = "0x5699F4", Slot = "5")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x5699F8", Offset = "0x5699F8", VA = "0x5699F8", Slot = "4")]
	public bool Read(float[] buf)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000026")]
public class ViewDrag : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Vector3 hit_position;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 current_position;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 camera_position;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool invert;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool yBecomesZ;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float speed;

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x86BA50", Offset = "0x86BA50", VA = "0x86BA50")]
	private void Start()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x86BA54", Offset = "0x86BA54", VA = "0x86BA54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x86BB0C", Offset = "0x86BB0C", VA = "0x86BB0C")]
	private void LeftMouseDrag()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x86BD70", Offset = "0x86BD70", VA = "0x86BD70")]
	public ViewDrag()
	{
	}
}
[Token(Token = "0x2000027")]
internal static class CustomTypes
{
	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly byte[] memVector3;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly byte[] memVector2;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly byte[] memQuarternion;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static readonly byte[] memPlayer;

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x68AA6C", Offset = "0x68AA6C", VA = "0x68AA6C")]
	internal static void Register()
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x68AD5C", Offset = "0x68AD5C", VA = "0x68AD5C")]
	private static short SerializeVector3(StreamBuffer outStream, object customobject)
	{
		return default(short);
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x68AF94", Offset = "0x68AF94", VA = "0x68AF94")]
	private static object DeserializeVector3(StreamBuffer inStream, short length)
	{
		return null;
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x68B1BC", Offset = "0x68B1BC", VA = "0x68B1BC")]
	private static short SerializeVector2(StreamBuffer outStream, object customobject)
	{
		return default(short);
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x68B3D0", Offset = "0x68B3D0", VA = "0x68B3D0")]
	private static object DeserializeVector2(StreamBuffer inStream, short length)
	{
		return null;
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x68B5D4", Offset = "0x68B5D4", VA = "0x68B5D4")]
	private static short SerializeQuaternion(StreamBuffer outStream, object customobject)
	{
		return default(short);
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x68B828", Offset = "0x68B828", VA = "0x68B828")]
	private static object DeserializeQuaternion(StreamBuffer inStream, short length)
	{
		return null;
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x68BA68", Offset = "0x68BA68", VA = "0x68BA68")]
	private static short SerializePhotonPlayer(StreamBuffer outStream, object customobject)
	{
		return default(short);
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x68BCA0", Offset = "0x68BCA0", VA = "0x68BCA0")]
	private static object DeserializePhotonPlayer(StreamBuffer inStream, short length)
	{
		return null;
	}
}
[Token(Token = "0x2000028")]
public enum PhotonNetworkingMessage
{
	[Token(Token = "0x40000CC")]
	OnConnectedToPhoton,
	[Token(Token = "0x40000CD")]
	OnLeftRoom,
	[Token(Token = "0x40000CE")]
	OnMasterClientSwitched,
	[Token(Token = "0x40000CF")]
	OnPhotonCreateRoomFailed,
	[Token(Token = "0x40000D0")]
	OnPhotonJoinRoomFailed,
	[Token(Token = "0x40000D1")]
	OnCreatedRoom,
	[Token(Token = "0x40000D2")]
	OnJoinedLobby,
	[Token(Token = "0x40000D3")]
	OnLeftLobby,
	[Token(Token = "0x40000D4")]
	OnDisconnectedFromPhoton,
	[Token(Token = "0x40000D5")]
	OnConnectionFail,
	[Token(Token = "0x40000D6")]
	OnFailedToConnectToPhoton,
	[Token(Token = "0x40000D7")]
	OnReceivedRoomListUpdate,
	[Token(Token = "0x40000D8")]
	OnJoinedRoom,
	[Token(Token = "0x40000D9")]
	OnPhotonPlayerConnected,
	[Token(Token = "0x40000DA")]
	OnPhotonPlayerDisconnected,
	[Token(Token = "0x40000DB")]
	OnPhotonRandomJoinFailed,
	[Token(Token = "0x40000DC")]
	OnConnectedToMaster,
	[Token(Token = "0x40000DD")]
	OnPhotonSerializeView,
	[Token(Token = "0x40000DE")]
	OnPhotonInstantiate,
	[Token(Token = "0x40000DF")]
	OnPhotonMaxCccuReached,
	[Token(Token = "0x40000E0")]
	OnPhotonCustomRoomPropertiesChanged,
	[Token(Token = "0x40000E1")]
	OnPhotonPlayerPropertiesChanged,
	[Token(Token = "0x40000E2")]
	OnUpdatedFriendList,
	[Token(Token = "0x40000E3")]
	OnCustomAuthenticationFailed,
	[Token(Token = "0x40000E4")]
	OnCustomAuthenticationResponse,
	[Token(Token = "0x40000E5")]
	OnWebRpcResponse,
	[Token(Token = "0x40000E6")]
	OnOwnershipRequest,
	[Token(Token = "0x40000E7")]
	OnLobbyStatisticsUpdate,
	[Token(Token = "0x40000E8")]
	OnPhotonPlayerActivityChanged,
	[Token(Token = "0x40000E9")]
	OnOwnershipTransfered
}
[Token(Token = "0x2000029")]
public enum PhotonLogLevel
{
	[Token(Token = "0x40000EB")]
	ErrorsOnly,
	[Token(Token = "0x40000EC")]
	Informational,
	[Token(Token = "0x40000ED")]
	Full
}
[Token(Token = "0x200002A")]
public enum PhotonTargets
{
	[Token(Token = "0x40000EF")]
	All,
	[Token(Token = "0x40000F0")]
	Others,
	[Token(Token = "0x40000F1")]
	MasterClient,
	[Token(Token = "0x40000F2")]
	AllBuffered,
	[Token(Token = "0x40000F3")]
	OthersBuffered,
	[Token(Token = "0x40000F4")]
	AllViaServer,
	[Token(Token = "0x40000F5")]
	AllBufferedViaServer
}
[Token(Token = "0x200002B")]
public enum CloudRegionCode
{
	[Token(Token = "0x40000F7")]
	eu = 0,
	[Token(Token = "0x40000F8")]
	us = 1,
	[Token(Token = "0x40000F9")]
	asia = 2,
	[Token(Token = "0x40000FA")]
	jp = 3,
	[Token(Token = "0x40000FB")]
	au = 5,
	[Token(Token = "0x40000FC")]
	usw = 6,
	[Token(Token = "0x40000FD")]
	sa = 7,
	[Token(Token = "0x40000FE")]
	cae = 8,
	[Token(Token = "0x40000FF")]
	kr = 9,
	[Token(Token = "0x4000100")]
	@in = 10,
	[Token(Token = "0x4000101")]
	ru = 11,
	[Token(Token = "0x4000102")]
	rue = 12,
	[Token(Token = "0x4000103")]
	none = 4
}
[Token(Token = "0x200002C")]
[Flags]
public enum CloudRegionFlag
{
	[Token(Token = "0x4000105")]
	eu = 1,
	[Token(Token = "0x4000106")]
	us = 2,
	[Token(Token = "0x4000107")]
	asia = 4,
	[Token(Token = "0x4000108")]
	jp = 8,
	[Token(Token = "0x4000109")]
	au = 0x10,
	[Token(Token = "0x400010A")]
	usw = 0x20,
	[Token(Token = "0x400010B")]
	sa = 0x40,
	[Token(Token = "0x400010C")]
	cae = 0x80,
	[Token(Token = "0x400010D")]
	kr = 0x100,
	[Token(Token = "0x400010E")]
	@in = 0x200,
	[Token(Token = "0x400010F")]
	ru = 0x400,
	[Token(Token = "0x4000110")]
	rue = 0x800
}
[Token(Token = "0x200002D")]
public enum ConnectionState
{
	[Token(Token = "0x4000112")]
	Disconnected,
	[Token(Token = "0x4000113")]
	Connecting,
	[Token(Token = "0x4000114")]
	Connected,
	[Token(Token = "0x4000115")]
	Disconnecting,
	[Token(Token = "0x4000116")]
	InitializingApplication
}
[Token(Token = "0x200002E")]
public enum EncryptionMode
{
	[Token(Token = "0x4000118")]
	PayloadEncryption = 0,
	[Token(Token = "0x4000119")]
	DatagramEncryption = 10
}
[Token(Token = "0x200002F")]
public static class EncryptionDataParameters
{
	[Token(Token = "0x400011A")]
	public const byte Mode = 0;

	[Token(Token = "0x400011B")]
	public const byte Secret1 = 1;

	[Token(Token = "0x400011C")]
	public const byte Secret2 = 2;
}
[Token(Token = "0x2000030")]
public static class Extensions
{
	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<MethodInfo, ParameterInfo[]> ParametersOfMethods;

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x800EF0", Offset = "0x800EF0", VA = "0x800EF0")]
	public static ParameterInfo[] GetCachedParemeters(this MethodInfo mo)
	{
		return null;
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x801038", Offset = "0x801038", VA = "0x801038")]
	public static PhotonView[] GetPhotonViewsInChildren(this GameObject go)
	{
		return null;
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x8010A4", Offset = "0x8010A4", VA = "0x8010A4")]
	public static PhotonView GetPhotonView(this GameObject go)
	{
		return null;
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x80110C", Offset = "0x80110C", VA = "0x80110C")]
	public static bool AlmostEquals(this Vector3 target, Vector3 second, float sqrMagnitudePrecision)
	{
		return default(bool);
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x80120C", Offset = "0x80120C", VA = "0x80120C")]
	public static bool AlmostEquals(this Vector2 target, Vector2 second, float sqrMagnitudePrecision)
	{
		return default(bool);
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x8012E8", Offset = "0x8012E8", VA = "0x8012E8")]
	public static bool AlmostEquals(this Quaternion target, Quaternion second, float maxAngle)
	{
		return default(bool);
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x8013DC", Offset = "0x8013DC", VA = "0x8013DC")]
	public static bool AlmostEquals(this float target, float second, float floatDiff)
	{
		return default(bool);
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x801480", Offset = "0x801480", VA = "0x801480")]
	public static void Merge(this IDictionary target, IDictionary addHash)
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x801924", Offset = "0x801924", VA = "0x801924")]
	public static void MergeStringKeys(this IDictionary target, IDictionary addHash)
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x801DE0", Offset = "0x801DE0", VA = "0x801DE0")]
	public static string ToStringFull(this IDictionary origin)
	{
		return null;
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x801E60", Offset = "0x801E60", VA = "0x801E60")]
	public static string ToStringFull(this object[] data)
	{
		return null;
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x801FC8", Offset = "0x801FC8", VA = "0x801FC8")]
	public static ExitGames.Client.Photon.Hashtable StripToStringKeys(this IDictionary original)
	{
		return null;
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x8023F8", Offset = "0x8023F8", VA = "0x8023F8")]
	public static void StripKeysWithNullValues(this IDictionary original)
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x8029B4", Offset = "0x8029B4", VA = "0x8029B4")]
	public static bool Contains(this int[] target, int nr)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000031")]
public static class GameObjectExtensions
{
	[Token(Token = "0x6000160")]
	[Address(RVA = "0x697884", Offset = "0x697884", VA = "0x697884")]
	public static bool GetActive(this GameObject target)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000032")]
public class FriendInfo
{
	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DCFC", Offset = "0x39DCFC")]
	private string <UserId>k__BackingField;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DD0C", Offset = "0x39DD0C")]
	private bool <IsOnline>k__BackingField;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DD1C", Offset = "0x39DD1C")]
	private string <Room>k__BackingField;

	[Token(Token = "0x1700002F")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3B1E4C", Offset = "0x3B1E4C")]
	public string Name
	{
		[Token(Token = "0x6000161")]
		[Address(RVA = "0x5F143C", Offset = "0x5F143C", VA = "0x5F143C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000030")]
	public string UserId
	{
		[Token(Token = "0x6000162")]
		[Address(RVA = "0x5F1444", Offset = "0x5F1444", VA = "0x5F1444")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6280", Offset = "0x3A6280")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000163")]
		[Address(RVA = "0x5F144C", Offset = "0x5F144C", VA = "0x5F144C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6290", Offset = "0x3A6290")]
		protected internal set
		{
		}
	}

	[Token(Token = "0x17000031")]
	public bool IsOnline
	{
		[Token(Token = "0x6000164")]
		[Address(RVA = "0x5F1454", Offset = "0x5F1454", VA = "0x5F1454")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A62A0", Offset = "0x3A62A0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000165")]
		[Address(RVA = "0x5F145C", Offset = "0x5F145C", VA = "0x5F145C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A62B0", Offset = "0x3A62B0")]
		protected internal set
		{
		}
	}

	[Token(Token = "0x17000032")]
	public string Room
	{
		[Token(Token = "0x6000166")]
		[Address(RVA = "0x5F1464", Offset = "0x5F1464", VA = "0x5F1464")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A62C0", Offset = "0x3A62C0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000167")]
		[Address(RVA = "0x5F146C", Offset = "0x5F146C", VA = "0x5F146C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A62D0", Offset = "0x3A62D0")]
		protected internal set
		{
		}
	}

	[Token(Token = "0x17000033")]
	public bool IsInRoom
	{
		[Token(Token = "0x6000168")]
		[Address(RVA = "0x5F1474", Offset = "0x5F1474", VA = "0x5F1474")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x5F14A0", Offset = "0x5F14A0", VA = "0x5F14A0", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x5F1554", Offset = "0x5F1554", VA = "0x5F1554")]
	public FriendInfo()
	{
	}
}
[Token(Token = "0x2000033")]
internal class LoadBalancingPeer : PhotonPeer
{
	[Token(Token = "0x20005F1")]
	private enum RoomOptionBit
	{
		[Token(Token = "0x400242B")]
		CheckUserOnJoin = 1,
		[Token(Token = "0x400242C")]
		DeleteCacheOnLeave = 2,
		[Token(Token = "0x400242D")]
		SuppressRoomEvents = 4,
		[Token(Token = "0x400242E")]
		PublishUserId = 8,
		[Token(Token = "0x400242F")]
		DeleteNullProps = 0x10,
		[Token(Token = "0x4002430")]
		BroadcastPropsChangeToAll = 0x20
	}

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private readonly Dictionary<byte, object> opParameters;

	[Token(Token = "0x17000034")]
	internal bool IsProtocolSecure
	{
		[Token(Token = "0x600016B")]
		[Address(RVA = "0x6C0204", Offset = "0x6C0204", VA = "0x6C0204")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x6C0224", Offset = "0x6C0224", VA = "0x6C0224")]
	public LoadBalancingPeer(ConnectionProtocol protocolType)
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x6C02DC", Offset = "0x6C02DC", VA = "0x6C02DC")]
	public LoadBalancingPeer(IPhotonPeerListener listener, ConnectionProtocol protocolType)
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x6C0364", Offset = "0x6C0364", VA = "0x6C0364", Slot = "16")]
	public virtual bool OpGetRegions(string appId)
	{
		return default(bool);
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x6C0468", Offset = "0x6C0468", VA = "0x6C0468", Slot = "17")]
	public virtual bool OpJoinLobby([Optional] TypedLobby lobby)
	{
		return default(bool);
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x6C0684", Offset = "0x6C0684", VA = "0x6C0684", Slot = "18")]
	public virtual bool OpLeaveLobby()
	{
		return default(bool);
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x6C07D8", Offset = "0x6C07D8", VA = "0x6C07D8")]
	private void RoomOptionsToOpParameters(Dictionary<byte, object> op, RoomOptions roomOptions)
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x6C0CF4", Offset = "0x6C0CF4", VA = "0x6C0CF4", Slot = "19")]
	public virtual bool OpCreateRoom(EnterRoomParams opParams)
	{
		return default(bool);
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x6C1074", Offset = "0x6C1074", VA = "0x6C1074", Slot = "20")]
	public virtual bool OpJoinRoom(EnterRoomParams opParams)
	{
		return default(bool);
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x6C1478", Offset = "0x6C1478", VA = "0x6C1478", Slot = "21")]
	public virtual bool OpJoinRandomRoom(OpJoinRandomRoomParams opJoinRandomRoomParams)
	{
		return default(bool);
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x6C18BC", Offset = "0x6C18BC", VA = "0x6C18BC", Slot = "22")]
	public virtual bool OpLeaveRoom(bool becomeInactive)
	{
		return default(bool);
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x6C19F0", Offset = "0x6C19F0", VA = "0x6C19F0", Slot = "23")]
	public virtual bool OpGetGameList(TypedLobby lobby, string queryData)
	{
		return default(bool);
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x6C1D74", Offset = "0x6C1D74", VA = "0x6C1D74", Slot = "24")]
	public virtual bool OpFindFriends(string[] friendsToFind)
	{
		return default(bool);
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x6C1E8C", Offset = "0x6C1E8C", VA = "0x6C1E8C")]
	public bool OpSetCustomPropertiesOfActor(int actorNr, ExitGames.Client.Photon.Hashtable actorProperties)
	{
		return default(bool);
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x6C1F34", Offset = "0x6C1F34", VA = "0x6C1F34")]
	protected internal bool OpSetPropertiesOfActor(int actorNr, ExitGames.Client.Photon.Hashtable actorProperties, [Optional] ExitGames.Client.Photon.Hashtable expectedProperties, bool webForward = false)
	{
		return default(bool);
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x6C22E0", Offset = "0x6C22E0", VA = "0x6C22E0")]
	protected internal void OpSetPropertyOfRoom(byte propCode, object value)
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x6C2644", Offset = "0x6C2644", VA = "0x6C2644")]
	public bool OpSetCustomPropertiesOfRoom(ExitGames.Client.Photon.Hashtable gameProperties, bool broadcast, byte channelId)
	{
		return default(bool);
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x6C23A8", Offset = "0x6C23A8", VA = "0x6C23A8")]
	protected internal bool OpSetPropertiesOfRoom(ExitGames.Client.Photon.Hashtable gameProperties, [Optional] ExitGames.Client.Photon.Hashtable expectedProperties, bool webForward = false)
	{
		return default(bool);
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x6C26E0", Offset = "0x6C26E0", VA = "0x6C26E0", Slot = "25")]
	public virtual bool OpAuthenticate(string appId, string appVersion, AuthenticationValues authValues, string regionCode, bool getLobbyStatistics)
	{
		return default(bool);
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x6C2C98", Offset = "0x6C2C98", VA = "0x6C2C98", Slot = "26")]
	public virtual bool OpAuthenticateOnce(string appId, string appVersion, AuthenticationValues authValues, string regionCode, EncryptionMode encryptionMode, ConnectionProtocol expectedProtocol)
	{
		return default(bool);
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x6C31D0", Offset = "0x6C31D0", VA = "0x6C31D0", Slot = "27")]
	public virtual bool OpChangeGroups(byte[] groupsToRemove, byte[] groupsToAdd)
	{
		return default(bool);
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x6C33CC", Offset = "0x6C33CC", VA = "0x6C33CC", Slot = "28")]
	public virtual bool OpRaiseEvent(byte eventCode, object customEventContent, bool sendReliable, RaiseEventOptions raiseEventOptions)
	{
		return default(bool);
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x6C36FC", Offset = "0x6C36FC", VA = "0x6C36FC", Slot = "29")]
	public virtual bool OpSettings(bool receiveLobbyStats)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000034")]
internal class OpJoinRandomRoomParams
{
	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ExitGames.Client.Photon.Hashtable ExpectedCustomRoomProperties;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public byte ExpectedMaxPlayers;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public MatchmakingMode MatchingType;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TypedLobby TypedLobby;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string SqlLobbyFilter;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] ExpectedUsers;

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xA72384", Offset = "0xA72384", VA = "0xA72384")]
	public OpJoinRandomRoomParams()
	{
	}
}
[Token(Token = "0x2000035")]
internal class EnterRoomParams
{
	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string RoomName;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public RoomOptions RoomOptions;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TypedLobby Lobby;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public ExitGames.Client.Photon.Hashtable PlayerProperties;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool OnGameServer;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool CreateIfNotExists;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool RejoinOnly;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public string[] ExpectedUsers;

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x7FEEDC", Offset = "0x7FEEDC", VA = "0x7FEEDC")]
	public EnterRoomParams()
	{
	}
}
[Token(Token = "0x2000036")]
public class ErrorCode
{
	[Token(Token = "0x4000130")]
	public const int Ok = 0;

	[Token(Token = "0x4000131")]
	public const int OperationNotAllowedInCurrentState = -3;

	[Token(Token = "0x4000132")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x39DD2C", Offset = "0x39DD2C")]
	public const int InvalidOperationCode = -2;

	[Token(Token = "0x4000133")]
	public const int InvalidOperation = -2;

	[Token(Token = "0x4000134")]
	public const int InternalServerError = -1;

	[Token(Token = "0x4000135")]
	public const int InvalidAuthentication = 32767;

	[Token(Token = "0x4000136")]
	public const int GameIdAlreadyExists = 32766;

	[Token(Token = "0x4000137")]
	public const int GameFull = 32765;

	[Token(Token = "0x4000138")]
	public const int GameClosed = 32764;

	[Token(Token = "0x4000139")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x39DD60", Offset = "0x39DD60")]
	public const int AlreadyMatched = 32763;

	[Token(Token = "0x400013A")]
	public const int ServerFull = 32762;

	[Token(Token = "0x400013B")]
	public const int UserBlocked = 32761;

	[Token(Token = "0x400013C")]
	public const int NoRandomMatchFound = 32760;

	[Token(Token = "0x400013D")]
	public const int GameDoesNotExist = 32758;

	[Token(Token = "0x400013E")]
	public const int MaxCcuReached = 32757;

	[Token(Token = "0x400013F")]
	public const int InvalidRegion = 32756;

	[Token(Token = "0x4000140")]
	public const int CustomAuthenticationFailed = 32755;

	[Token(Token = "0x4000141")]
	public const int AuthenticationTicketExpired = 32753;

	[Token(Token = "0x4000142")]
	public const int PluginReportedError = 32752;

	[Token(Token = "0x4000143")]
	public const int PluginMismatch = 32751;

	[Token(Token = "0x4000144")]
	public const int JoinFailedPeerAlreadyJoined = 32750;

	[Token(Token = "0x4000145")]
	public const int JoinFailedFoundInactiveJoiner = 32749;

	[Token(Token = "0x4000146")]
	public const int JoinFailedWithRejoinerNotFound = 32748;

	[Token(Token = "0x4000147")]
	public const int JoinFailedFoundExcludedUserId = 32747;

	[Token(Token = "0x4000148")]
	public const int JoinFailedFoundActiveJoiner = 32746;

	[Token(Token = "0x4000149")]
	public const int HttpLimitReached = 32745;

	[Token(Token = "0x400014A")]
	public const int ExternalHttpCallFailed = 32744;

	[Token(Token = "0x400014B")]
	public const int SlotError = 32742;

	[Token(Token = "0x400014C")]
	public const int InvalidEncryptionParameters = 32741;

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x7FEEF4", Offset = "0x7FEEF4", VA = "0x7FEEF4")]
	public ErrorCode()
	{
	}
}
[Token(Token = "0x2000037")]
public class ActorProperties
{
	[Token(Token = "0x400014D")]
	public const byte PlayerName = byte.MaxValue;

	[Token(Token = "0x400014E")]
	public const byte IsInactive = 254;

	[Token(Token = "0x400014F")]
	public const byte UserId = 253;

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x6E5938", Offset = "0x6E5938", VA = "0x6E5938")]
	public ActorProperties()
	{
	}
}
[Token(Token = "0x2000038")]
public class GamePropertyKey
{
	[Token(Token = "0x4000150")]
	public const byte MaxPlayers = byte.MaxValue;

	[Token(Token = "0x4000151")]
	public const byte IsVisible = 254;

	[Token(Token = "0x4000152")]
	public const byte IsOpen = 253;

	[Token(Token = "0x4000153")]
	public const byte PlayerCount = 252;

	[Token(Token = "0x4000154")]
	public const byte Removed = 251;

	[Token(Token = "0x4000155")]
	public const byte PropsListedInLobby = 250;

	[Token(Token = "0x4000156")]
	public const byte CleanupCacheOnLeave = 249;

	[Token(Token = "0x4000157")]
	public const byte MasterClientId = 248;

	[Token(Token = "0x4000158")]
	public const byte ExpectedUsers = 247;

	[Token(Token = "0x4000159")]
	public const byte PlayerTtl = 246;

	[Token(Token = "0x400015A")]
	public const byte EmptyRoomTtl = 245;

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x6978AC", Offset = "0x6978AC", VA = "0x6978AC")]
	public GamePropertyKey()
	{
	}
}
[Token(Token = "0x2000039")]
public class EventCode
{
	[Token(Token = "0x400015B")]
	public const byte GameList = 230;

	[Token(Token = "0x400015C")]
	public const byte GameListUpdate = 229;

	[Token(Token = "0x400015D")]
	public const byte QueueState = 228;

	[Token(Token = "0x400015E")]
	public const byte Match = 227;

	[Token(Token = "0x400015F")]
	public const byte AppStats = 226;

	[Token(Token = "0x4000160")]
	public const byte LobbyStats = 224;

	[Token(Token = "0x4000161")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x39DD94", Offset = "0x39DD94")]
	public const byte AzureNodeInfo = 210;

	[Token(Token = "0x4000162")]
	public const byte Join = byte.MaxValue;

	[Token(Token = "0x4000163")]
	public const byte Leave = 254;

	[Token(Token = "0x4000164")]
	public const byte PropertiesChanged = 253;

	[Token(Token = "0x4000165")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x39DDC8", Offset = "0x39DDC8")]
	public const byte SetProperties = 253;

	[Token(Token = "0x4000166")]
	public const byte ErrorInfo = 251;

	[Token(Token = "0x4000167")]
	public const byte CacheSliceChanged = 250;

	[Token(Token = "0x4000168")]
	public const byte AuthEvent = 223;

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x7FEEFC", Offset = "0x7FEEFC", VA = "0x7FEEFC")]
	public EventCode()
	{
	}
}
[Token(Token = "0x200003A")]
public class ParameterCode
{
	[Token(Token = "0x4000169")]
	public const byte SuppressRoomEvents = 237;

	[Token(Token = "0x400016A")]
	public const byte EmptyRoomTTL = 236;

	[Token(Token = "0x400016B")]
	public const byte PlayerTTL = 235;

	[Token(Token = "0x400016C")]
	public const byte EventForward = 234;

	[Token(Token = "0x400016D")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x39DDFC", Offset = "0x39DDFC")]
	public const byte IsComingBack = 233;

	[Token(Token = "0x400016E")]
	public const byte IsInactive = 233;

	[Token(Token = "0x400016F")]
	public const byte CheckUserOnJoin = 232;

	[Token(Token = "0x4000170")]
	public const byte ExpectedValues = 231;

	[Token(Token = "0x4000171")]
	public const byte Address = 230;

	[Token(Token = "0x4000172")]
	public const byte PeerCount = 229;

	[Token(Token = "0x4000173")]
	public const byte GameCount = 228;

	[Token(Token = "0x4000174")]
	public const byte MasterPeerCount = 227;

	[Token(Token = "0x4000175")]
	public const byte UserId = 225;

	[Token(Token = "0x4000176")]
	public const byte ApplicationId = 224;

	[Token(Token = "0x4000177")]
	public const byte Position = 223;

	[Token(Token = "0x4000178")]
	public const byte MatchMakingType = 223;

	[Token(Token = "0x4000179")]
	public const byte GameList = 222;

	[Token(Token = "0x400017A")]
	public const byte Secret = 221;

	[Token(Token = "0x400017B")]
	public const byte AppVersion = 220;

	[Token(Token = "0x400017C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x39DE30", Offset = "0x39DE30")]
	public const byte AzureNodeInfo = 210;

	[Token(Token = "0x400017D")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x39DE64", Offset = "0x39DE64")]
	public const byte AzureLocalNodeId = 209;

	[Token(Token = "0x400017E")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x39DE98", Offset = "0x39DE98")]
	public const byte AzureMasterNodeId = 208;

	[Token(Token = "0x400017F")]
	public const byte RoomName = byte.MaxValue;

	[Token(Token = "0x4000180")]
	public const byte Broadcast = 250;

	[Token(Token = "0x4000181")]
	public const byte ActorList = 252;

	[Token(Token = "0x4000182")]
	public const byte ActorNr = 254;

	[Token(Token = "0x4000183")]
	public const byte PlayerProperties = 249;

	[Token(Token = "0x4000184")]
	public const byte CustomEventContent = 245;

	[Token(Token = "0x4000185")]
	public const byte Data = 245;

	[Token(Token = "0x4000186")]
	public const byte Code = 244;

	[Token(Token = "0x4000187")]
	public const byte GameProperties = 248;

	[Token(Token = "0x4000188")]
	public const byte Properties = 251;

	[Token(Token = "0x4000189")]
	public const byte TargetActorNr = 253;

	[Token(Token = "0x400018A")]
	public const byte ReceiverGroup = 246;

	[Token(Token = "0x400018B")]
	public const byte Cache = 247;

	[Token(Token = "0x400018C")]
	public const byte CleanupCacheOnLeave = 241;

	[Token(Token = "0x400018D")]
	public const byte Group = 240;

	[Token(Token = "0x400018E")]
	public const byte Remove = 239;

	[Token(Token = "0x400018F")]
	public const byte PublishUserId = 239;

	[Token(Token = "0x4000190")]
	public const byte Add = 238;

	[Token(Token = "0x4000191")]
	public const byte Info = 218;

	[Token(Token = "0x4000192")]
	public const byte ClientAuthenticationType = 217;

	[Token(Token = "0x4000193")]
	public const byte ClientAuthenticationParams = 216;

	[Token(Token = "0x4000194")]
	public const byte JoinMode = 215;

	[Token(Token = "0x4000195")]
	public const byte ClientAuthenticationData = 214;

	[Token(Token = "0x4000196")]
	public const byte MasterClientId = 203;

	[Token(Token = "0x4000197")]
	public const byte FindFriendsRequestList = 1;

	[Token(Token = "0x4000198")]
	public const byte FindFriendsResponseOnlineList = 1;

	[Token(Token = "0x4000199")]
	public const byte FindFriendsResponseRoomIdList = 2;

	[Token(Token = "0x400019A")]
	public const byte LobbyName = 213;

	[Token(Token = "0x400019B")]
	public const byte LobbyType = 212;

	[Token(Token = "0x400019C")]
	public const byte LobbyStats = 211;

	[Token(Token = "0x400019D")]
	public const byte Region = 210;

	[Token(Token = "0x400019E")]
	public const byte UriPath = 209;

	[Token(Token = "0x400019F")]
	public const byte WebRpcParameters = 208;

	[Token(Token = "0x40001A0")]
	public const byte WebRpcReturnCode = 207;

	[Token(Token = "0x40001A1")]
	public const byte WebRpcReturnMessage = 206;

	[Token(Token = "0x40001A2")]
	public const byte CacheSliceIndex = 205;

	[Token(Token = "0x40001A3")]
	public const byte Plugins = 204;

	[Token(Token = "0x40001A4")]
	public const byte NickName = 202;

	[Token(Token = "0x40001A5")]
	public const byte PluginName = 201;

	[Token(Token = "0x40001A6")]
	public const byte PluginVersion = 200;

	[Token(Token = "0x40001A7")]
	public const byte ExpectedProtocol = 195;

	[Token(Token = "0x40001A8")]
	public const byte CustomInitData = 194;

	[Token(Token = "0x40001A9")]
	public const byte EncryptionMode = 193;

	[Token(Token = "0x40001AA")]
	public const byte EncryptionData = 192;

	[Token(Token = "0x40001AB")]
	public const byte RoomOptionFlags = 191;

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xA750C4", Offset = "0xA750C4", VA = "0xA750C4")]
	public ParameterCode()
	{
	}
}
[Token(Token = "0x200003B")]
public class OperationCode
{
	[Token(Token = "0x40001AC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x39DECC", Offset = "0x39DECC")]
	public const byte ExchangeKeysForEncryption = 250;

	[Token(Token = "0x40001AD")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x39DF00", Offset = "0x39DF00")]
	public const byte Join = byte.MaxValue;

	[Token(Token = "0x40001AE")]
	public const byte AuthenticateOnce = 231;

	[Token(Token = "0x40001AF")]
	public const byte Authenticate = 230;

	[Token(Token = "0x40001B0")]
	public const byte JoinLobby = 229;

	[Token(Token = "0x40001B1")]
	public const byte LeaveLobby = 228;

	[Token(Token = "0x40001B2")]
	public const byte CreateGame = 227;

	[Token(Token = "0x40001B3")]
	public const byte JoinGame = 226;

	[Token(Token = "0x40001B4")]
	public const byte JoinRandomGame = 225;

	[Token(Token = "0x40001B5")]
	public const byte Leave = 254;

	[Token(Token = "0x40001B6")]
	public const byte RaiseEvent = 253;

	[Token(Token = "0x40001B7")]
	public const byte SetProperties = 252;

	[Token(Token = "0x40001B8")]
	public const byte GetProperties = 251;

	[Token(Token = "0x40001B9")]
	public const byte ChangeGroups = 248;

	[Token(Token = "0x40001BA")]
	public const byte FindFriends = 222;

	[Token(Token = "0x40001BB")]
	public const byte GetLobbyStats = 221;

	[Token(Token = "0x40001BC")]
	public const byte GetRegions = 220;

	[Token(Token = "0x40001BD")]
	public const byte WebRpc = 219;

	[Token(Token = "0x40001BE")]
	public const byte ServerSettings = 218;

	[Token(Token = "0x40001BF")]
	public const byte GetGameList = 217;

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xA7238C", Offset = "0xA7238C", VA = "0xA7238C")]
	public OperationCode()
	{
	}
}
[Token(Token = "0x200003C")]
public enum JoinMode : byte
{
	[Token(Token = "0x40001C1")]
	Default,
	[Token(Token = "0x40001C2")]
	CreateIfNotExists,
	[Token(Token = "0x40001C3")]
	JoinOrRejoin,
	[Token(Token = "0x40001C4")]
	RejoinOnly
}
[Token(Token = "0x200003D")]
public enum MatchmakingMode : byte
{
	[Token(Token = "0x40001C6")]
	FillRoom,
	[Token(Token = "0x40001C7")]
	SerialMatching,
	[Token(Token = "0x40001C8")]
	RandomMatching
}
[Token(Token = "0x200003E")]
public enum ReceiverGroup : byte
{
	[Token(Token = "0x40001CA")]
	Others,
	[Token(Token = "0x40001CB")]
	All,
	[Token(Token = "0x40001CC")]
	MasterClient
}
[Token(Token = "0x200003F")]
public enum EventCaching : byte
{
	[Token(Token = "0x40001CE")]
	DoNotCache = 0,
	[Token(Token = "0x40001CF")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x39DF10", Offset = "0x39DF10")]
	MergeCache = 1,
	[Token(Token = "0x40001D0")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x39DF20", Offset = "0x39DF20")]
	ReplaceCache = 2,
	[Token(Token = "0x40001D1")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x39DF30", Offset = "0x39DF30")]
	RemoveCache = 3,
	[Token(Token = "0x40001D2")]
	AddToRoomCache = 4,
	[Token(Token = "0x40001D3")]
	AddToRoomCacheGlobal = 5,
	[Token(Token = "0x40001D4")]
	RemoveFromRoomCache = 6,
	[Token(Token = "0x40001D5")]
	RemoveFromRoomCacheForActorsLeft = 7,
	[Token(Token = "0x40001D6")]
	SliceIncreaseIndex = 10,
	[Token(Token = "0x40001D7")]
	SliceSetIndex = 11,
	[Token(Token = "0x40001D8")]
	SlicePurgeIndex = 12,
	[Token(Token = "0x40001D9")]
	SlicePurgeUpToIndex = 13
}
[Token(Token = "0x2000040")]
[Flags]
public enum PropertyTypeFlag : byte
{
	[Token(Token = "0x40001DB")]
	None = 0,
	[Token(Token = "0x40001DC")]
	Game = 1,
	[Token(Token = "0x40001DD")]
	Actor = 2,
	[Token(Token = "0x40001DE")]
	GameAndActor = 3
}
[Token(Token = "0x2000041")]
public class RoomOptions
{
	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private bool isVisibleField;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	private bool isOpenField;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
	public byte MaxPlayers;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int PlayerTtl;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int EmptyRoomTtl;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private bool cleanupCacheOnLeaveField;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExitGames.Client.Photon.Hashtable CustomRoomProperties;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public string[] CustomRoomPropertiesForLobby;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] Plugins;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool suppressRoomEventsField;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	private bool publishUserIdField;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	private bool deleteNullPropertiesField;

	[Token(Token = "0x17000035")]
	public bool IsVisible
	{
		[Token(Token = "0x600018A")]
		[Address(RVA = "0x81E8C0", Offset = "0x81E8C0", VA = "0x81E8C0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600018B")]
		[Address(RVA = "0x81E8C8", Offset = "0x81E8C8", VA = "0x81E8C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000036")]
	public bool IsOpen
	{
		[Token(Token = "0x600018C")]
		[Address(RVA = "0x81E8D0", Offset = "0x81E8D0", VA = "0x81E8D0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600018D")]
		[Address(RVA = "0x81E8D8", Offset = "0x81E8D8", VA = "0x81E8D8")]
		set
		{
		}
	}

	[Token(Token = "0x17000037")]
	public bool CleanupCacheOnLeave
	{
		[Token(Token = "0x600018E")]
		[Address(RVA = "0x81E8E0", Offset = "0x81E8E0", VA = "0x81E8E0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600018F")]
		[Address(RVA = "0x81E8E8", Offset = "0x81E8E8", VA = "0x81E8E8")]
		set
		{
		}
	}

	[Token(Token = "0x17000038")]
	public bool SuppressRoomEvents
	{
		[Token(Token = "0x6000190")]
		[Address(RVA = "0x81E8F0", Offset = "0x81E8F0", VA = "0x81E8F0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000039")]
	public bool PublishUserId
	{
		[Token(Token = "0x6000191")]
		[Address(RVA = "0x81E8F8", Offset = "0x81E8F8", VA = "0x81E8F8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000192")]
		[Address(RVA = "0x81E900", Offset = "0x81E900", VA = "0x81E900")]
		set
		{
		}
	}

	[Token(Token = "0x1700003A")]
	public bool DeleteNullProperties
	{
		[Token(Token = "0x6000193")]
		[Address(RVA = "0x81E908", Offset = "0x81E908", VA = "0x81E908")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000194")]
		[Address(RVA = "0x81E910", Offset = "0x81E910", VA = "0x81E910")]
		set
		{
		}
	}

	[Token(Token = "0x1700003B")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3B1E80", Offset = "0x3B1E80")]
	public bool isVisible
	{
		[Token(Token = "0x6000195")]
		[Address(RVA = "0x81E918", Offset = "0x81E918", VA = "0x81E918")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000196")]
		[Address(RVA = "0x81E920", Offset = "0x81E920", VA = "0x81E920")]
		set
		{
		}
	}

	[Token(Token = "0x1700003C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3B1EB4", Offset = "0x3B1EB4")]
	public bool isOpen
	{
		[Token(Token = "0x6000197")]
		[Address(RVA = "0x81E928", Offset = "0x81E928", VA = "0x81E928")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000198")]
		[Address(RVA = "0x81E930", Offset = "0x81E930", VA = "0x81E930")]
		set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3B1EE8", Offset = "0x3B1EE8")]
	public byte maxPlayers
	{
		[Token(Token = "0x6000199")]
		[Address(RVA = "0x81E938", Offset = "0x81E938", VA = "0x81E938")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x600019A")]
		[Address(RVA = "0x81E940", Offset = "0x81E940", VA = "0x81E940")]
		set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3B1F1C", Offset = "0x3B1F1C")]
	public bool cleanupCacheOnLeave
	{
		[Token(Token = "0x600019B")]
		[Address(RVA = "0x81E948", Offset = "0x81E948", VA = "0x81E948")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600019C")]
		[Address(RVA = "0x81E950", Offset = "0x81E950", VA = "0x81E950")]
		set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3B1F50", Offset = "0x3B1F50")]
	public ExitGames.Client.Photon.Hashtable customRoomProperties
	{
		[Token(Token = "0x600019D")]
		[Address(RVA = "0x81E958", Offset = "0x81E958", VA = "0x81E958")]
		get
		{
			return null;
		}
		[Token(Token = "0x600019E")]
		[Address(RVA = "0x81E960", Offset = "0x81E960", VA = "0x81E960")]
		set
		{
		}
	}

	[Token(Token = "0x17000040")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3B1F84", Offset = "0x3B1F84")]
	public string[] customRoomPropertiesForLobby
	{
		[Token(Token = "0x600019F")]
		[Address(RVA = "0x81E968", Offset = "0x81E968", VA = "0x81E968")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001A0")]
		[Address(RVA = "0x81E970", Offset = "0x81E970", VA = "0x81E970")]
		set
		{
		}
	}

	[Token(Token = "0x17000041")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3B1FB8", Offset = "0x3B1FB8")]
	public string[] plugins
	{
		[Token(Token = "0x60001A1")]
		[Address(RVA = "0x81E978", Offset = "0x81E978", VA = "0x81E978")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001A2")]
		[Address(RVA = "0x81E980", Offset = "0x81E980", VA = "0x81E980")]
		set
		{
		}
	}

	[Token(Token = "0x17000042")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3B1FEC", Offset = "0x3B1FEC")]
	public bool suppressRoomEvents
	{
		[Token(Token = "0x60001A3")]
		[Address(RVA = "0x81E988", Offset = "0x81E988", VA = "0x81E988")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000043")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3B2020", Offset = "0x3B2020")]
	public bool publishUserId
	{
		[Token(Token = "0x60001A4")]
		[Address(RVA = "0x81E990", Offset = "0x81E990", VA = "0x81E990")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001A5")]
		[Address(RVA = "0x81E998", Offset = "0x81E998", VA = "0x81E998")]
		set
		{
		}
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x81CB64", Offset = "0x81CB64", VA = "0x81CB64")]
	public RoomOptions()
	{
	}
}
[Token(Token = "0x2000042")]
public class RaiseEventOptions
{
	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly RaiseEventOptions Default;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public EventCaching CachingOption;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public byte InterestGroup;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int[] TargetActors;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ReceiverGroup Receivers;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public byte SequenceChannel;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public bool ForwardToWebhook;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	public bool Encrypt;

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x81A1BC", Offset = "0x81A1BC", VA = "0x81A1BC")]
	public void Reset()
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x81A324", Offset = "0x81A324", VA = "0x81A324")]
	public RaiseEventOptions()
	{
	}
}
[Token(Token = "0x2000043")]
public enum LobbyType : byte
{
	[Token(Token = "0x40001F4")]
	Default = 0,
	[Token(Token = "0x40001F5")]
	SqlLobby = 2,
	[Token(Token = "0x40001F6")]
	AsyncRandomLobby = 3
}
[Token(Token = "0x2000044")]
public class TypedLobby
{
	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string Name;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public LobbyType Type;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly TypedLobby Default;

	[Token(Token = "0x17000044")]
	public bool IsDefault
	{
		[Token(Token = "0x60001AA")]
		[Address(RVA = "0x56EBAC", Offset = "0x56EBAC", VA = "0x56EBAC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x56EBC8", Offset = "0x56EBC8", VA = "0x56EBC8")]
	public TypedLobby()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x56EC3C", Offset = "0x56EC3C", VA = "0x56EC3C")]
	public TypedLobby(string name, LobbyType type)
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x56EC64", Offset = "0x56EC64", VA = "0x56EC64", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000045")]
public class TypedLobbyInfo : TypedLobby
{
	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int PlayerCount;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int RoomCount;

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x56ED5C", Offset = "0x56ED5C", VA = "0x56ED5C", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x56EF70", Offset = "0x56EF70", VA = "0x56EF70")]
	public TypedLobbyInfo()
	{
	}
}
[Token(Token = "0x2000046")]
public enum AuthModeOption
{
	[Token(Token = "0x40001FD")]
	Auth,
	[Token(Token = "0x40001FE")]
	AuthOnce,
	[Token(Token = "0x40001FF")]
	AuthOnceWss
}
[Token(Token = "0x2000047")]
public enum CustomAuthenticationType : byte
{
	[Token(Token = "0x4000201")]
	Custom = 0,
	[Token(Token = "0x4000202")]
	Steam = 1,
	[Token(Token = "0x4000203")]
	Facebook = 2,
	[Token(Token = "0x4000204")]
	Oculus = 3,
	[Token(Token = "0x4000205")]
	PlayStation = 4,
	[Token(Token = "0x4000206")]
	Xbox = 5,
	[Token(Token = "0x4000207")]
	Viveport = 10,
	[Token(Token = "0x4000208")]
	None = byte.MaxValue
}
[Token(Token = "0x2000048")]
public class AuthenticationValues
{
	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private CustomAuthenticationType authType;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DF40", Offset = "0x39DF40")]
	private string <AuthGetParameters>k__BackingField;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DF50", Offset = "0x39DF50")]
	private object <AuthPostData>k__BackingField;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DF60", Offset = "0x39DF60")]
	private string <Token>k__BackingField;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DF70", Offset = "0x39DF70")]
	private string <UserId>k__BackingField;

	[Token(Token = "0x17000045")]
	public CustomAuthenticationType AuthType
	{
		[Token(Token = "0x60001B1")]
		[Address(RVA = "0x6F2AF4", Offset = "0x6F2AF4", VA = "0x6F2AF4")]
		get
		{
			return default(CustomAuthenticationType);
		}
		[Token(Token = "0x60001B2")]
		[Address(RVA = "0x6F2AFC", Offset = "0x6F2AFC", VA = "0x6F2AFC")]
		set
		{
		}
	}

	[Token(Token = "0x17000046")]
	public string AuthGetParameters
	{
		[Token(Token = "0x60001B3")]
		[Address(RVA = "0x6F2B04", Offset = "0x6F2B04", VA = "0x6F2B04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A62E0", Offset = "0x3A62E0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001B4")]
		[Address(RVA = "0x6F2B0C", Offset = "0x6F2B0C", VA = "0x6F2B0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A62F0", Offset = "0x3A62F0")]
		set
		{
		}
	}

	[Token(Token = "0x17000047")]
	public object AuthPostData
	{
		[Token(Token = "0x60001B5")]
		[Address(RVA = "0x6F2B14", Offset = "0x6F2B14", VA = "0x6F2B14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6300", Offset = "0x3A6300")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001B6")]
		[Address(RVA = "0x6F2B1C", Offset = "0x6F2B1C", VA = "0x6F2B1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6310", Offset = "0x3A6310")]
		private set
		{
		}
	}

	[Token(Token = "0x17000048")]
	public string Token
	{
		[Token(Token = "0x60001B7")]
		[Address(RVA = "0x6F2B24", Offset = "0x6F2B24", VA = "0x6F2B24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6320", Offset = "0x3A6320")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001B8")]
		[Address(RVA = "0x6F2B2C", Offset = "0x6F2B2C", VA = "0x6F2B2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6330", Offset = "0x3A6330")]
		set
		{
		}
	}

	[Token(Token = "0x17000049")]
	public string UserId
	{
		[Token(Token = "0x60001B9")]
		[Address(RVA = "0x6F2B34", Offset = "0x6F2B34", VA = "0x6F2B34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6340", Offset = "0x3A6340")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001BA")]
		[Address(RVA = "0x6F2B3C", Offset = "0x6F2B3C", VA = "0x6F2B3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6350", Offset = "0x3A6350")]
		set
		{
		}
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x6F2B44", Offset = "0x6F2B44", VA = "0x6F2B44")]
	public AuthenticationValues()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x6F2B54", Offset = "0x6F2B54", VA = "0x6F2B54")]
	public AuthenticationValues(string userId)
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x6F2B80", Offset = "0x6F2B80", VA = "0x6F2B80", Slot = "4")]
	public virtual void SetAuthPostData(string stringData)
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x6F2BB8", Offset = "0x6F2BB8", VA = "0x6F2BB8", Slot = "5")]
	public virtual void SetAuthPostData(byte[] byteData)
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x6F2BC0", Offset = "0x6F2BC0", VA = "0x6F2BC0", Slot = "6")]
	public virtual void SetAuthPostData(Dictionary<string, object> dictData)
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x6F2BC8", Offset = "0x6F2BC8", VA = "0x6F2BC8", Slot = "7")]
	public virtual void AddAuthParameter(string key, string value)
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x6F2E00", Offset = "0x6F2E00", VA = "0x6F2E00", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000049")]
public enum ClientState
{
	[Token(Token = "0x400020F")]
	Uninitialized,
	[Token(Token = "0x4000210")]
	PeerCreated,
	[Token(Token = "0x4000211")]
	Queued,
	[Token(Token = "0x4000212")]
	Authenticated,
	[Token(Token = "0x4000213")]
	JoinedLobby,
	[Token(Token = "0x4000214")]
	DisconnectingFromMasterserver,
	[Token(Token = "0x4000215")]
	ConnectingToGameserver,
	[Token(Token = "0x4000216")]
	ConnectedToGameserver,
	[Token(Token = "0x4000217")]
	Joining,
	[Token(Token = "0x4000218")]
	Joined,
	[Token(Token = "0x4000219")]
	Leaving,
	[Token(Token = "0x400021A")]
	DisconnectingFromGameserver,
	[Token(Token = "0x400021B")]
	ConnectingToMasterserver,
	[Token(Token = "0x400021C")]
	QueuedComingFromGameserver,
	[Token(Token = "0x400021D")]
	Disconnecting,
	[Token(Token = "0x400021E")]
	Disconnected,
	[Token(Token = "0x400021F")]
	ConnectedToMaster,
	[Token(Token = "0x4000220")]
	ConnectingToNameServer,
	[Token(Token = "0x4000221")]
	ConnectedToNameServer,
	[Token(Token = "0x4000222")]
	DisconnectingFromNameServer,
	[Token(Token = "0x4000223")]
	Authenticating
}
[Token(Token = "0x200004A")]
internal enum JoinType
{
	[Token(Token = "0x4000225")]
	CreateRoom,
	[Token(Token = "0x4000226")]
	JoinRoom,
	[Token(Token = "0x4000227")]
	JoinRandomRoom,
	[Token(Token = "0x4000228")]
	JoinOrCreateRoom
}
[Token(Token = "0x200004B")]
public enum DisconnectCause
{
	[Token(Token = "0x400022A")]
	DisconnectByServerUserLimit = 1042,
	[Token(Token = "0x400022B")]
	ExceptionOnConnect = 1023,
	[Token(Token = "0x400022C")]
	DisconnectByServerTimeout = 1041,
	[Token(Token = "0x400022D")]
	DisconnectByServerLogic = 1043,
	[Token(Token = "0x400022E")]
	Exception = 1026,
	[Token(Token = "0x400022F")]
	InvalidAuthentication = 32767,
	[Token(Token = "0x4000230")]
	MaxCcuReached = 32757,
	[Token(Token = "0x4000231")]
	InvalidRegion = 32756,
	[Token(Token = "0x4000232")]
	SecurityExceptionOnConnect = 1022,
	[Token(Token = "0x4000233")]
	DisconnectByClientTimeout = 1040,
	[Token(Token = "0x4000234")]
	InternalReceiveException = 1039,
	[Token(Token = "0x4000235")]
	AuthenticationTicketExpired = 32753
}
[Token(Token = "0x200004C")]
public enum ServerConnection
{
	[Token(Token = "0x4000237")]
	MasterServer,
	[Token(Token = "0x4000238")]
	GameServer,
	[Token(Token = "0x4000239")]
	NameServer
}
[Token(Token = "0x200004D")]
internal class NetworkingPeer : LoadBalancingPeer, IPhotonPeerListener
{
	[Token(Token = "0x20005F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B474", Offset = "0x39B474")]
	private sealed class <>c__DisplayClass161_0
	{
		[Token(Token = "0x4002431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public CloudRegionCode bestFromPrefs;

		[Token(Token = "0x6002BF0")]
		[Address(RVA = "0x939238", Offset = "0x939238", VA = "0x939238")]
		public <>c__DisplayClass161_0()
		{
		}

		[Token(Token = "0x6002BF1")]
		[Address(RVA = "0x939240", Offset = "0x939240", VA = "0x939240")]
		internal bool <OnOperationResponse>b__0(Region x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected internal string AppId;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DF80", Offset = "0x39DF80")]
	private AuthenticationValues <AuthValues>k__BackingField;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string tokenCache;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public AuthModeOption AuthMode;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public EncryptionMode EncryptionMode;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DF90", Offset = "0x39DF90")]
	private bool <IsUsingNameServer>k__BackingField;

	[Token(Token = "0x4000240")]
	public const string NameServerHost = "ns.exitgames.com";

	[Token(Token = "0x4000241")]
	public const string NameServerHttp = "http://ns.exitgamescloud.com:80/photon/n";

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<ConnectionProtocol, int> ProtocolToNameServerPort;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DFA0", Offset = "0x39DFA0")]
	private string <MasterServerAddress>k__BackingField;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DFB0", Offset = "0x39DFB0")]
	private string <GameServerAddress>k__BackingField;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DFC0", Offset = "0x39DFC0")]
	private ServerConnection <Server>k__BackingField;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DFD0", Offset = "0x39DFD0")]
	private ClientState <State>k__BackingField;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool IsInitialConnect;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	public bool insideLobby;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DFE0", Offset = "0x39DFE0")]
	private TypedLobby <lobby>k__BackingField;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	protected internal List<TypedLobbyInfo> LobbyStatistics;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public Dictionary<string, RoomInfo> mGameList;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public RoomInfo[] mGameListCopy;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private string playername;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool mPlayernameHasToBeUpdated;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Room currentRoom;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DFF0", Offset = "0x39DFF0")]
	private PhotonPlayer <LocalPlayer>k__BackingField;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39E000", Offset = "0x39E000")]
	private int <PlayersOnMasterCount>k__BackingField;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39E010", Offset = "0x39E010")]
	private int <PlayersInRoomsCount>k__BackingField;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39E020", Offset = "0x39E020")]
	private int <RoomsCount>k__BackingField;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private JoinType lastJoinType;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	protected internal EnterRoomParams enterRoomParamsCache;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool didAuthenticate;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private string[] friendListRequested;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private int friendListTimestamp;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private bool isFetchingFriendList;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39E030", Offset = "0x39E030")]
	private List<Region> <AvailableRegions>k__BackingField;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39E040", Offset = "0x39E040")]
	private CloudRegionCode <CloudRegion>k__BackingField;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Dictionary<int, PhotonPlayer> mActors;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public PhotonPlayer[] mOtherPlayerListCopy;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public PhotonPlayer[] mPlayerListCopy;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public bool hasSwitchedMC;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private HashSet<byte> allowedReceivingGroups;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private HashSet<byte> blockSendingGroups;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	protected internal Dictionary<int, PhotonView> photonViewList;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private readonly PhotonStream readStream;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private readonly PhotonStream pStream;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private readonly Dictionary<int, ExitGames.Client.Photon.Hashtable> dataPerGroupReliable;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private readonly Dictionary<int, ExitGames.Client.Photon.Hashtable> dataPerGroupUnreliable;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	protected internal short currentLevelPrefix;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x136")]
	protected internal bool loadingLevelAndPausedNetwork;

	[Token(Token = "0x4000269")]
	protected internal const string CurrentSceneProperty = "curScn";

	[Token(Token = "0x400026A")]
	protected internal const string CurrentScenePropertyLoadAsync = "curScnLa";

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool UsePrefabCache;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	internal IPunPrefabPool ObjectPool;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Dictionary<string, GameObject> PrefabCache;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private Dictionary<Type, List<MethodInfo>> monoRPCMethodsCache;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private readonly Dictionary<string, int> rpcShortcuts;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly string OnPhotonInstantiateString;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private string cachedServerAddress;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private string cachedApplicationName;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private ServerConnection cachedServerType;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private UnityEngine.AsyncOperation _AsyncLevelLoadingOperation;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private RaiseEventOptions _levelReloadEventOptions;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private bool _isReconnecting;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private Dictionary<int, object[]> tempInstantiationData;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int ObjectsInOneUpdate;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private RaiseEventOptions options;

	[Token(Token = "0x400027A")]
	public const int SyncViewId = 0;

	[Token(Token = "0x400027B")]
	public const int SyncCompressed = 1;

	[Token(Token = "0x400027C")]
	public const int SyncNullValues = 2;

	[Token(Token = "0x400027D")]
	public const int SyncFirstValue = 3;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public bool IsReloadingLevel;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x165")]
	public bool AsynchLevelLoadCall;

	[Token(Token = "0x1700004A")]
	protected internal string AppVersion
	{
		[Token(Token = "0x60001C2")]
		[Address(RVA = "0x79070C", Offset = "0x79070C", VA = "0x79070C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700004B")]
	public AuthenticationValues AuthValues
	{
		[Token(Token = "0x60001C3")]
		[Address(RVA = "0x790800", Offset = "0x790800", VA = "0x790800")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6360", Offset = "0x3A6360")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001C4")]
		[Address(RVA = "0x790808", Offset = "0x790808", VA = "0x790808")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6370", Offset = "0x3A6370")]
		set
		{
		}
	}

	[Token(Token = "0x1700004C")]
	private string TokenForInit
	{
		[Token(Token = "0x60001C5")]
		[Address(RVA = "0x790810", Offset = "0x790810", VA = "0x790810")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700004D")]
	public bool IsUsingNameServer
	{
		[Token(Token = "0x60001C6")]
		[Address(RVA = "0x790830", Offset = "0x790830", VA = "0x790830")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6380", Offset = "0x3A6380")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001C7")]
		[Address(RVA = "0x790838", Offset = "0x790838", VA = "0x790838")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6390", Offset = "0x3A6390")]
		protected internal set
		{
		}
	}

	[Token(Token = "0x1700004E")]
	public string NameServerAddress
	{
		[Token(Token = "0x60001C8")]
		[Address(RVA = "0x790840", Offset = "0x790840", VA = "0x790840")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700004F")]
	public string MasterServerAddress
	{
		[Token(Token = "0x60001C9")]
		[Address(RVA = "0x790A40", Offset = "0x790A40", VA = "0x790A40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A63A0", Offset = "0x3A63A0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001CA")]
		[Address(RVA = "0x790A48", Offset = "0x790A48", VA = "0x790A48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A63B0", Offset = "0x3A63B0")]
		protected internal set
		{
		}
	}

	[Token(Token = "0x17000050")]
	public string GameServerAddress
	{
		[Token(Token = "0x60001CB")]
		[Address(RVA = "0x790A50", Offset = "0x790A50", VA = "0x790A50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A63C0", Offset = "0x3A63C0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001CC")]
		[Address(RVA = "0x790A58", Offset = "0x790A58", VA = "0x790A58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A63D0", Offset = "0x3A63D0")]
		protected internal set
		{
		}
	}

	[Token(Token = "0x17000051")]
	protected internal ServerConnection Server
	{
		[Token(Token = "0x60001CD")]
		[Address(RVA = "0x790A60", Offset = "0x790A60", VA = "0x790A60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A63E0", Offset = "0x3A63E0")]
		get
		{
			return default(ServerConnection);
		}
		[Token(Token = "0x60001CE")]
		[Address(RVA = "0x790A68", Offset = "0x790A68", VA = "0x790A68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A63F0", Offset = "0x3A63F0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000052")]
	public ClientState State
	{
		[Token(Token = "0x60001CF")]
		[Address(RVA = "0x790A70", Offset = "0x790A70", VA = "0x790A70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6400", Offset = "0x3A6400")]
		get
		{
			return default(ClientState);
		}
		[Token(Token = "0x60001D0")]
		[Address(RVA = "0x790A78", Offset = "0x790A78", VA = "0x790A78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6410", Offset = "0x3A6410")]
		internal set
		{
		}
	}

	[Token(Token = "0x17000053")]
	public TypedLobby lobby
	{
		[Token(Token = "0x60001D1")]
		[Address(RVA = "0x790A80", Offset = "0x790A80", VA = "0x790A80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6420", Offset = "0x3A6420")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001D2")]
		[Address(RVA = "0x790A88", Offset = "0x790A88", VA = "0x790A88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6430", Offset = "0x3A6430")]
		set
		{
		}
	}

	[Token(Token = "0x17000054")]
	private bool requestLobbyStatistics
	{
		[Token(Token = "0x60001D3")]
		[Address(RVA = "0x790A90", Offset = "0x790A90", VA = "0x790A90")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000055")]
	public string PlayerName
	{
		[Token(Token = "0x60001D4")]
		[Address(RVA = "0x790B20", Offset = "0x790B20", VA = "0x790B20")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001D5")]
		[Address(RVA = "0x790B28", Offset = "0x790B28", VA = "0x790B28")]
		set
		{
		}
	}

	[Token(Token = "0x17000056")]
	public Room CurrentRoom
	{
		[Token(Token = "0x60001D6")]
		[Address(RVA = "0x790BB4", Offset = "0x790BB4", VA = "0x790BB4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001D7")]
		[Address(RVA = "0x790D08", Offset = "0x790D08", VA = "0x790D08")]
		private set
		{
		}
	}

	[Token(Token = "0x17000057")]
	public PhotonPlayer LocalPlayer
	{
		[Token(Token = "0x60001D8")]
		[Address(RVA = "0x790D10", Offset = "0x790D10", VA = "0x790D10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6440", Offset = "0x3A6440")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001D9")]
		[Address(RVA = "0x790D18", Offset = "0x790D18", VA = "0x790D18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6450", Offset = "0x3A6450")]
		internal set
		{
		}
	}

	[Token(Token = "0x17000058")]
	public int PlayersOnMasterCount
	{
		[Token(Token = "0x60001DA")]
		[Address(RVA = "0x790D20", Offset = "0x790D20", VA = "0x790D20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6460", Offset = "0x3A6460")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60001DB")]
		[Address(RVA = "0x790D28", Offset = "0x790D28", VA = "0x790D28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6470", Offset = "0x3A6470")]
		internal set
		{
		}
	}

	[Token(Token = "0x17000059")]
	public int PlayersInRoomsCount
	{
		[Token(Token = "0x60001DC")]
		[Address(RVA = "0x790D30", Offset = "0x790D30", VA = "0x790D30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6480", Offset = "0x3A6480")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60001DD")]
		[Address(RVA = "0x790D38", Offset = "0x790D38", VA = "0x790D38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6490", Offset = "0x3A6490")]
		internal set
		{
		}
	}

	[Token(Token = "0x1700005A")]
	public int RoomsCount
	{
		[Token(Token = "0x60001DE")]
		[Address(RVA = "0x790D40", Offset = "0x790D40", VA = "0x790D40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A64A0", Offset = "0x3A64A0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60001DF")]
		[Address(RVA = "0x790D48", Offset = "0x790D48", VA = "0x790D48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A64B0", Offset = "0x3A64B0")]
		internal set
		{
		}
	}

	[Token(Token = "0x1700005B")]
	protected internal int FriendListAge
	{
		[Token(Token = "0x60001E0")]
		[Address(RVA = "0x790D50", Offset = "0x790D50", VA = "0x790D50")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700005C")]
	public bool IsAuthorizeSecretAvailable
	{
		[Token(Token = "0x60001E1")]
		[Address(RVA = "0x790D8C", Offset = "0x790D8C", VA = "0x790D8C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005D")]
	public List<Region> AvailableRegions
	{
		[Token(Token = "0x60001E2")]
		[Address(RVA = "0x790DB8", Offset = "0x790DB8", VA = "0x790DB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A64C0", Offset = "0x3A64C0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001E3")]
		[Address(RVA = "0x790DC0", Offset = "0x790DC0", VA = "0x790DC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A64D0", Offset = "0x3A64D0")]
		protected internal set
		{
		}
	}

	[Token(Token = "0x1700005E")]
	public CloudRegionCode CloudRegion
	{
		[Token(Token = "0x60001E4")]
		[Address(RVA = "0x790DC8", Offset = "0x790DC8", VA = "0x790DC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A64E0", Offset = "0x3A64E0")]
		get
		{
			return default(CloudRegionCode);
		}
		[Token(Token = "0x60001E5")]
		[Address(RVA = "0x790DD0", Offset = "0x790DD0", VA = "0x790DD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A64F0", Offset = "0x3A64F0")]
		protected internal set
		{
		}
	}

	[Token(Token = "0x1700005F")]
	public int mMasterClientId
	{
		[Token(Token = "0x60001E6")]
		[Address(RVA = "0x790DD8", Offset = "0x790DD8", VA = "0x790DD8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60001E7")]
		[Address(RVA = "0x790EE0", Offset = "0x790EE0", VA = "0x790EE0")]
		private set
		{
		}
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x790EF8", Offset = "0x790EF8", VA = "0x790EF8")]
	public NetworkingPeer(string playername, ConnectionProtocol connectionProtocol)
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x790844", Offset = "0x790844", VA = "0x790844")]
	private string GetNameServerAddress()
	{
		return null;
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x791590", Offset = "0x791590", VA = "0x791590", Slot = "6")]
	public override bool Connect(string serverAddress, string applicationName)
	{
		return default(bool);
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x791618", Offset = "0x791618", VA = "0x791618")]
	public bool ReconnectToMaster()
	{
		return default(bool);
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x791948", Offset = "0x791948", VA = "0x791948")]
	public bool ReconnectAndRejoin()
	{
		return default(bool);
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x7916F4", Offset = "0x7916F4", VA = "0x7916F4")]
	public bool Connect(string serverAddress, ServerConnection type)
	{
		return default(bool);
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x792158", Offset = "0x792158", VA = "0x792158")]
	private bool Reconnect()
	{
		return default(bool);
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x79227C", Offset = "0x79227C", VA = "0x79227C")]
	public bool ConnectToNameServer()
	{
		return default(bool);
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x7923F8", Offset = "0x7923F8", VA = "0x7923F8")]
	public bool ConnectToRegionMaster(CloudRegionCode region)
	{
		return default(bool);
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x791A58", Offset = "0x791A58", VA = "0x791A58")]
	protected internal void SetupProtocol(ServerConnection serverType)
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x7927F0", Offset = "0x7927F0", VA = "0x7927F0", Slot = "8")]
	public override void Disconnect()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x792584", Offset = "0x792584", VA = "0x792584")]
	private bool CallAuthenticate()
	{
		return default(bool);
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x792924", Offset = "0x792924", VA = "0x792924")]
	private void DisconnectToReconnect()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x792960", Offset = "0x792960", VA = "0x792960")]
	public bool GetRegions()
	{
		return default(bool);
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x7929AC", Offset = "0x7929AC", VA = "0x7929AC", Slot = "24")]
	public override bool OpFindFriends(string[] friendsToFind)
	{
		return default(bool);
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x7929D0", Offset = "0x7929D0", VA = "0x7929D0")]
	public bool OpCreateGame(EnterRoomParams enterRoomParams)
	{
		return default(bool);
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x792B80", Offset = "0x792B80", VA = "0x792B80", Slot = "20")]
	public override bool OpJoinRoom(EnterRoomParams opParams)
	{
		return default(bool);
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x792BDC", Offset = "0x792BDC", VA = "0x792BDC", Slot = "21")]
	public override bool OpJoinRandomRoom(OpJoinRandomRoomParams opJoinRandomRoomParams)
	{
		return default(bool);
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x792C98", Offset = "0x792C98", VA = "0x792C98", Slot = "28")]
	public override bool OpRaiseEvent(byte eventCode, object customEventContent, bool sendReliable, RaiseEventOptions raiseEventOptions)
	{
		return default(bool);
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x792DB0", Offset = "0x792DB0", VA = "0x792DB0")]
	private void ReadoutProperties(ExitGames.Client.Photon.Hashtable gameProperties, ExitGames.Client.Photon.Hashtable pActorProperties, int targetActorNr)
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x793500", Offset = "0x793500", VA = "0x793500")]
	private ExitGames.Client.Photon.Hashtable ReadoutPropertiesForActorNr(ExitGames.Client.Photon.Hashtable actorProperties, int actorNr)
	{
		return null;
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x793D44", Offset = "0x793D44", VA = "0x793D44")]
	public void ChangeLocalID(int newID)
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x79411C", Offset = "0x79411C", VA = "0x79411C")]
	private void LeftLobbyCleanup()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x7942A8", Offset = "0x7942A8", VA = "0x7942A8")]
	private void LeftRoomCleanup()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x794628", Offset = "0x794628", VA = "0x794628")]
	protected internal void LocalCleanupAnythingInstantiated(bool destroyInstantiatedGameObjects)
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x794E9C", Offset = "0x794E9C", VA = "0x794E9C")]
	private void GameEnteredOnGameServer(OperationResponse operationResponse)
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x791454", Offset = "0x791454", VA = "0x791454")]
	private void AddNewPlayer(int ID, PhotonPlayer player)
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x795C14", Offset = "0x795C14", VA = "0x795C14")]
	private void RemovePlayer(int ID, PhotonPlayer player)
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x793F48", Offset = "0x793F48", VA = "0x793F48")]
	private void RebuildPlayerListCopies()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x795CAC", Offset = "0x795CAC", VA = "0x795CAC")]
	private void ResetPhotonViewsOnSerialize()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x795DFC", Offset = "0x795DFC", VA = "0x795DFC")]
	private void HandleEventLeave(int actorID, EventData evLeave)
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x79598C", Offset = "0x79598C", VA = "0x79598C")]
	private void CheckMasterClient(int leavingPlayerId)
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x796704", Offset = "0x796704", VA = "0x796704")]
	protected internal void UpdateMasterClient()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x796D2C", Offset = "0x796D2C", VA = "0x796D2C")]
	private static int ReturnLowestPlayerId(PhotonPlayer[] players, int playerIdToIgnore)
	{
		return default(int);
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x796DC4", Offset = "0x796DC4", VA = "0x796DC4")]
	protected internal bool SetMasterClient(int playerId, bool sync)
	{
		return default(bool);
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x797010", Offset = "0x797010", VA = "0x797010")]
	public bool SetMasterClient(int nextMasterId)
	{
		return default(bool);
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x793470", Offset = "0x793470", VA = "0x793470")]
	protected internal PhotonPlayer GetPlayerWithId(int number)
	{
		return null;
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x790BD4", Offset = "0x790BD4", VA = "0x790BD4")]
	private void SendPlayerName()
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x792A40", Offset = "0x792A40", VA = "0x792A40")]
	private ExitGames.Client.Photon.Hashtable GetLocalActorProperties()
	{
		return null;
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x79718C", Offset = "0x79718C", VA = "0x79718C", Slot = "30")]
	public void DebugReturn(DebugLevel level, string message)
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x797334", Offset = "0x797334", VA = "0x797334", Slot = "31")]
	public void OnOperationResponse(OperationResponse operationResponse)
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x79B0F4", Offset = "0x79B0F4", VA = "0x79B0F4", Slot = "32")]
	public void OnStatusChanged(StatusCode statusCode)
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x79C548", Offset = "0x79C548", VA = "0x79C548", Slot = "33")]
	public void OnEvent(EventData photonEvent)
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x7A3A58", Offset = "0x7A3A58", VA = "0x7A3A58")]
	public void OnMessage(object messages)
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x79AD5C", Offset = "0x79AD5C", VA = "0x79AD5C")]
	private void SetupEncryption(Dictionary<byte, object> encryptionData)
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x795850", Offset = "0x795850", VA = "0x795850")]
	protected internal void UpdatedActorList(int[] actorsInRoom)
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x7A3A5C", Offset = "0x7A3A5C", VA = "0x7A3A5C")]
	private void SendVacantViewIds()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x79362C", Offset = "0x79362C", VA = "0x79362C")]
	public static void SendMonoMessage(PhotonNetworkingMessage methodString, params object[] parameters)
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x79F8CC", Offset = "0x79F8CC", VA = "0x79F8CC")]
	protected internal void ExecuteRpc(ExitGames.Client.Photon.Hashtable rpcData, int senderID = 0)
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x7A3F50", Offset = "0x7A3F50", VA = "0x7A3F50")]
	private bool CheckTypeMatch(ParameterInfo[] methodParameters, Type[] callParameterTypes)
	{
		return default(bool);
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x7A4190", Offset = "0x7A4190", VA = "0x7A4190")]
	internal ExitGames.Client.Photon.Hashtable SendInstantiate(string prefabName, Vector3 position, Quaternion rotation, byte group, int[] viewIDs, object[] data, bool isGlobalObject)
	{
		return null;
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x7A285C", Offset = "0x7A285C", VA = "0x7A285C")]
	internal GameObject DoInstantiate(ExitGames.Client.Photon.Hashtable evData, PhotonPlayer photonPlayer, GameObject resourceGameObject)
	{
		return null;
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x7A46DC", Offset = "0x7A46DC", VA = "0x7A46DC")]
	private void StoreInstantiationData(int instantiationId, object[] instantiationData)
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x7A47CC", Offset = "0x7A47CC", VA = "0x7A47CC")]
	public object[] FetchInstantiationData(int instantiationId)
	{
		return null;
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x7A4758", Offset = "0x7A4758", VA = "0x7A4758")]
	private void RemoveInstantiationData(int instantiationId)
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x796824", Offset = "0x796824", VA = "0x796824")]
	public void DestroyPlayerObjects(int playerId, bool localOnly)
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x7A3A24", Offset = "0x7A3A24", VA = "0x7A3A24")]
	public void DestroyAll(bool localOnly)
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x7949A4", Offset = "0x7949A4", VA = "0x7949A4")]
	protected internal void RemoveInstantiatedGO(GameObject go, bool localOnly)
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x7A4D04", Offset = "0x7A4D04", VA = "0x7A4D04")]
	private void ServerCleanInstantiateAndDestroy(int instantiateId, int creatorId, bool isRuntimeInstantiated)
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x7A4A48", Offset = "0x7A4A48", VA = "0x7A4A48")]
	private void SendDestroyOfPlayer(int actorNr)
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x7A4C08", Offset = "0x7A4C08", VA = "0x7A4C08")]
	private void SendDestroyOfAll()
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x7A4860", Offset = "0x7A4860", VA = "0x7A4860")]
	private void OpRemoveFromServerInstantiationsOfPlayer(int actorNr)
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x7A51B0", Offset = "0x7A51B0", VA = "0x7A51B0")]
	protected internal void RequestOwnership(int viewID, int fromOwner)
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x7A557C", Offset = "0x7A557C", VA = "0x7A557C")]
	protected internal void TransferOwnership(int viewID, int playerID)
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x7A4FCC", Offset = "0x7A4FCC", VA = "0x7A4FCC")]
	public bool LocalCleanPhotonView(PhotonView view)
	{
		return default(bool);
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x7A3D2C", Offset = "0x7A3D2C", VA = "0x7A3D2C")]
	public PhotonView GetPhotonView(int viewID)
	{
		return null;
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x7A5948", Offset = "0x7A5948", VA = "0x7A5948")]
	public void RegisterPhotonView(PhotonView netView)
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x7A4954", Offset = "0x7A4954", VA = "0x7A4954")]
	public void OpCleanRpcBuffer(int actorNumber)
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x7A5C38", Offset = "0x7A5C38", VA = "0x7A5C38")]
	public void OpRemoveCompleteCacheOfPlayer(int actorNumber)
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x7A4B44", Offset = "0x7A4B44", VA = "0x7A4B44")]
	public void OpRemoveCompleteCache()
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x7A5D2C", Offset = "0x7A5D2C", VA = "0x7A5D2C")]
	private void RemoveCacheOfLeftPlayers()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x7A5E8C", Offset = "0x7A5E8C", VA = "0x7A5E8C")]
	public void CleanRpcBufferIfMine(PhotonView view)
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x7A5070", Offset = "0x7A5070", VA = "0x7A5070")]
	public void OpCleanRpcBuffer(PhotonView view)
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x7A6124", Offset = "0x7A6124", VA = "0x7A6124")]
	public void RemoveRPCsInGroup(int group)
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x7A628C", Offset = "0x7A628C", VA = "0x7A628C")]
	public void SetLevelPrefix(short prefix)
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x7A6298", Offset = "0x7A6298", VA = "0x7A6298")]
	internal void RPC(PhotonView view, string methodName, PhotonTargets target, PhotonPlayer player, bool encrypt, params object[] parameters)
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x7A7110", Offset = "0x7A7110", VA = "0x7A7110")]
	public void SetInterestGroups(byte[] disableGroups, byte[] enableGroups)
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x7A74D8", Offset = "0x7A74D8", VA = "0x7A74D8")]
	public void SetSendingEnabled(byte group, bool enabled)
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x7A7578", Offset = "0x7A7578", VA = "0x7A7578")]
	public void SetSendingEnabled(byte[] disableGroups, byte[] enableGroups)
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x7A76AC", Offset = "0x7A76AC", VA = "0x7A76AC")]
	public void NewSceneLoaded()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x7A7A34", Offset = "0x7A7A34", VA = "0x7A7A34")]
	public void RunViewUpdate()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x7A8C78", Offset = "0x7A8C78", VA = "0x7A8C78")]
	private object[] OnSerializeWrite(PhotonView view)
	{
		return null;
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x7A1EA4", Offset = "0x7A1EA4", VA = "0x7A1EA4")]
	private void OnSerializeRead(object[] data, PhotonPlayer sender, int networkTime, short correctPrefix)
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x7A9078", Offset = "0x7A9078", VA = "0x7A9078")]
	private object[] DeltaCompressionWrite(object[] previousContent, object[] currentContent)
	{
		return null;
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x7A9414", Offset = "0x7A9414", VA = "0x7A9414")]
	private object[] DeltaCompressionRead(object[] lastOnSerializeDataReceived, object[] incomingData)
	{
		return null;
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x7A8FB4", Offset = "0x7A8FB4", VA = "0x7A8FB4")]
	private bool AlmostEquals(object[] lastData, object[] currentContent)
	{
		return default(bool);
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x7A9624", Offset = "0x7A9624", VA = "0x7A9624")]
	private bool AlmostEquals(object one, object two)
	{
		return default(bool);
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x7A9AAC", Offset = "0x7A9AAC", VA = "0x7A9AAC")]
	protected internal static bool GetMethod(UnityEngine.MonoBehaviour monob, string methodType, out MethodInfo mi)
	{
		return default(bool);
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x7938D0", Offset = "0x7938D0", VA = "0x7938D0")]
	protected internal void LoadLevelIfSynced()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x7A9C50", Offset = "0x7A9C50", VA = "0x7A9C50")]
	protected internal void SetLevelInPropsIfSynced(object levelId, bool initiatingCall, bool asyncLoading = false)
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x7AA2D4", Offset = "0x7AA2D4", VA = "0x7AA2D4")]
	private void SendLevelReloadEvent()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x7AA3B0", Offset = "0x7AA3B0", VA = "0x7AA3B0")]
	public void SetApp(string appId, string gameVersion)
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x7AA4D4", Offset = "0x7AA4D4", VA = "0x7AA4D4")]
	public bool WebRpc(string uriPath, object parameters)
	{
		return default(bool);
	}
}
[Token(Token = "0x200004E")]
public interface IPunObservable
{
	[Token(Token = "0x6000246")]
	void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info);
}
[Token(Token = "0x200004F")]
public interface IPunCallbacks
{
	[Token(Token = "0x6000247")]
	void OnConnectedToPhoton();

	[Token(Token = "0x6000248")]
	void OnLeftRoom();

	[Token(Token = "0x6000249")]
	void OnMasterClientSwitched(PhotonPlayer newMasterClient);

	[Token(Token = "0x600024A")]
	void OnPhotonCreateRoomFailed(object[] codeAndMsg);

	[Token(Token = "0x600024B")]
	void OnPhotonJoinRoomFailed(object[] codeAndMsg);

	[Token(Token = "0x600024C")]
	void OnCreatedRoom();

	[Token(Token = "0x600024D")]
	void OnJoinedLobby();

	[Token(Token = "0x600024E")]
	void OnLeftLobby();

	[Token(Token = "0x600024F")]
	void OnFailedToConnectToPhoton(DisconnectCause cause);

	[Token(Token = "0x6000250")]
	void OnConnectionFail(DisconnectCause cause);

	[Token(Token = "0x6000251")]
	void OnDisconnectedFromPhoton();

	[Token(Token = "0x6000252")]
	void OnPhotonInstantiate(PhotonMessageInfo info);

	[Token(Token = "0x6000253")]
	void OnReceivedRoomListUpdate();

	[Token(Token = "0x6000254")]
	void OnJoinedRoom();

	[Token(Token = "0x6000255")]
	void OnPhotonPlayerConnected(PhotonPlayer newPlayer);

	[Token(Token = "0x6000256")]
	void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer);

	[Token(Token = "0x6000257")]
	void OnPhotonRandomJoinFailed(object[] codeAndMsg);

	[Token(Token = "0x6000258")]
	void OnConnectedToMaster();

	[Token(Token = "0x6000259")]
	void OnPhotonMaxCccuReached();

	[Token(Token = "0x600025A")]
	void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged);

	[Token(Token = "0x600025B")]
	void OnPhotonPlayerPropertiesChanged(object[] playerAndUpdatedProps);

	[Token(Token = "0x600025C")]
	void OnUpdatedFriendList();

	[Token(Token = "0x600025D")]
	void OnCustomAuthenticationFailed(string debugMessage);

	[Token(Token = "0x600025E")]
	void OnCustomAuthenticationResponse(Dictionary<string, object> data);

	[Token(Token = "0x600025F")]
	void OnWebRpcResponse(OperationResponse response);

	[Token(Token = "0x6000260")]
	void OnOwnershipRequest(object[] viewAndPlayer);

	[Token(Token = "0x6000261")]
	void OnLobbyStatisticsUpdate();

	[Token(Token = "0x6000262")]
	void OnPhotonPlayerActivityChanged(PhotonPlayer otherPlayer);

	[Token(Token = "0x6000263")]
	void OnOwnershipTransfered(object[] viewAndPlayers);
}
[Token(Token = "0x2000050")]
public interface IPunPrefabPool
{
	[Token(Token = "0x6000264")]
	GameObject Instantiate(string prefabId, Vector3 position, Quaternion rotation);

	[Token(Token = "0x6000265")]
	void Destroy(GameObject gameObject);
}
[Token(Token = "0x2000051")]
public struct PhotonMessageInfo
{
	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private readonly int timeInt;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public readonly PhotonPlayer sender;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public readonly PhotonView photonView;

	[Token(Token = "0x17000060")]
	public double timestamp
	{
		[Token(Token = "0x6000267")]
		[Address(RVA = "0x45D2E0", Offset = "0x45D2E0", VA = "0x45D2E0")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x45D2D0", Offset = "0x45D2D0", VA = "0x45D2D0")]
	public PhotonMessageInfo(PhotonPlayer player, int timestamp, PhotonView view)
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x45D300", Offset = "0x45D300", VA = "0x45D300", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000052")]
internal class PunEvent
{
	[Token(Token = "0x4000283")]
	public const byte RPC = 200;

	[Token(Token = "0x4000284")]
	public const byte SendSerialize = 201;

	[Token(Token = "0x4000285")]
	public const byte Instantiation = 202;

	[Token(Token = "0x4000286")]
	public const byte CloseConnection = 203;

	[Token(Token = "0x4000287")]
	public const byte Destroy = 204;

	[Token(Token = "0x4000288")]
	public const byte RemoveCachedRPCs = 205;

	[Token(Token = "0x4000289")]
	public const byte SendSerializeReliable = 206;

	[Token(Token = "0x400028A")]
	public const byte DestroyPlayer = 207;

	[Token(Token = "0x400028B")]
	public const byte AssignMaster = 208;

	[Token(Token = "0x400028C")]
	public const byte OwnershipRequest = 209;

	[Token(Token = "0x400028D")]
	public const byte OwnershipTransfer = 210;

	[Token(Token = "0x400028E")]
	public const byte VacantViewIds = 211;

	[Token(Token = "0x400028F")]
	public const byte levelReload = 212;

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x890A38", Offset = "0x890A38", VA = "0x890A38")]
	public PunEvent()
	{
	}
}
[Token(Token = "0x2000053")]
public class PhotonStream
{
	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private bool write;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Queue<object> writeData;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private object[] readData;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	internal byte currentItem;

	[Token(Token = "0x17000061")]
	public bool isWriting
	{
		[Token(Token = "0x600026D")]
		[Address(RVA = "0x619994", Offset = "0x619994", VA = "0x619994")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000062")]
	public bool isReading
	{
		[Token(Token = "0x600026E")]
		[Address(RVA = "0x61999C", Offset = "0x61999C", VA = "0x61999C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000063")]
	public int Count
	{
		[Token(Token = "0x600026F")]
		[Address(RVA = "0x6199AC", Offset = "0x6199AC", VA = "0x6199AC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x619870", Offset = "0x619870", VA = "0x619870")]
	public PhotonStream(bool write, object[] incomingData)
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x619914", Offset = "0x619914", VA = "0x619914")]
	public void SetReadStream(object[] incomingData, byte pos = 0)
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x619928", Offset = "0x619928", VA = "0x619928")]
	internal void ResetWriteStream()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x61798C", Offset = "0x61798C", VA = "0x61798C")]
	public object ReceiveNext()
	{
		return null;
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x619A2C", Offset = "0x619A2C", VA = "0x619A2C")]
	public object PeekNext()
	{
		return null;
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x6178C4", Offset = "0x6178C4", VA = "0x6178C4")]
	public void SendNext(object obj)
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x619B00", Offset = "0x619B00", VA = "0x619B00")]
	public object[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x619B80", Offset = "0x619B80", VA = "0x619B80")]
	public void Serialize(ref bool myBool)
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x619CE0", Offset = "0x619CE0", VA = "0x619CE0")]
	public void Serialize(ref int myInt)
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x619E38", Offset = "0x619E38", VA = "0x619E38")]
	public void Serialize(ref string value)
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x619F78", Offset = "0x619F78", VA = "0x619F78")]
	public void Serialize(ref char value)
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x61A0D0", Offset = "0x61A0D0", VA = "0x61A0D0")]
	public void Serialize(ref short value)
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x61A228", Offset = "0x61A228", VA = "0x61A228")]
	public void Serialize(ref float obj)
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x61A380", Offset = "0x61A380", VA = "0x61A380")]
	public void Serialize(ref PhotonPlayer obj)
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x61A4F8", Offset = "0x61A4F8", VA = "0x61A4F8")]
	public void Serialize(ref Vector3 obj)
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x61A668", Offset = "0x61A668", VA = "0x61A668")]
	public void Serialize(ref Vector2 obj)
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x61A7C8", Offset = "0x61A7C8", VA = "0x61A7C8")]
	public void Serialize(ref Quaternion obj)
	{
	}
}
[Token(Token = "0x2000054")]
public class SceneManagerHelper
{
	[Token(Token = "0x17000064")]
	public static string ActiveSceneName
	{
		[Token(Token = "0x600027E")]
		[Address(RVA = "0x8207B4", Offset = "0x8207B4", VA = "0x8207B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000065")]
	public static int ActiveSceneBuildIndex
	{
		[Token(Token = "0x600027F")]
		[Address(RVA = "0x8207E0", Offset = "0x8207E0", VA = "0x8207E0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x82080C", Offset = "0x82080C", VA = "0x82080C")]
	public SceneManagerHelper()
	{
	}
}
[Token(Token = "0x2000055")]
public class WebRpcResponse
{
	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39E050", Offset = "0x39E050")]
	private string <Name>k__BackingField;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39E060", Offset = "0x39E060")]
	private int <ReturnCode>k__BackingField;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39E070", Offset = "0x39E070")]
	private string <DebugMessage>k__BackingField;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39E080", Offset = "0x39E080")]
	private Dictionary<string, object> <Parameters>k__BackingField;

	[Token(Token = "0x17000066")]
	public string Name
	{
		[Token(Token = "0x6000281")]
		[Address(RVA = "0xEEB2B8", Offset = "0xEEB2B8", VA = "0xEEB2B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6500", Offset = "0x3A6500")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000282")]
		[Address(RVA = "0xEEB2C0", Offset = "0xEEB2C0", VA = "0xEEB2C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6510", Offset = "0x3A6510")]
		private set
		{
		}
	}

	[Token(Token = "0x17000067")]
	public int ReturnCode
	{
		[Token(Token = "0x6000283")]
		[Address(RVA = "0xEEB2C8", Offset = "0xEEB2C8", VA = "0xEEB2C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6520", Offset = "0x3A6520")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000284")]
		[Address(RVA = "0xEEB2D0", Offset = "0xEEB2D0", VA = "0xEEB2D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6530", Offset = "0x3A6530")]
		private set
		{
		}
	}

	[Token(Token = "0x17000068")]
	public string DebugMessage
	{
		[Token(Token = "0x6000285")]
		[Address(RVA = "0xEEB2D8", Offset = "0xEEB2D8", VA = "0xEEB2D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6540", Offset = "0x3A6540")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000286")]
		[Address(RVA = "0xEEB2E0", Offset = "0xEEB2E0", VA = "0xEEB2E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6550", Offset = "0x3A6550")]
		private set
		{
		}
	}

	[Token(Token = "0x17000069")]
	public Dictionary<string, object> Parameters
	{
		[Token(Token = "0x6000287")]
		[Address(RVA = "0xEEB2E8", Offset = "0xEEB2E8", VA = "0xEEB2E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6560", Offset = "0x3A6560")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000288")]
		[Address(RVA = "0xEEB2F0", Offset = "0xEEB2F0", VA = "0xEEB2F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6570", Offset = "0x3A6570")]
		private set
		{
		}
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0xEEB2F8", Offset = "0xEEB2F8", VA = "0xEEB2F8")]
	public WebRpcResponse(OperationResponse response)
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0xEEB504", Offset = "0xEEB504", VA = "0xEEB504")]
	public string ToStringFull()
	{
		return null;
	}
}
[Token(Token = "0x2000056")]
internal class PhotonHandler : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B484", Offset = "0x39B484")]
	private sealed class <>c
	{
		[Token(Token = "0x4002432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static UnityAction<Scene, LoadSceneMode> <>9__10_0;

		[Token(Token = "0x6002BF3")]
		[Address(RVA = "0xA820E0", Offset = "0xA820E0", VA = "0xA820E0")]
		public <>c()
		{
		}

		[Token(Token = "0x6002BF4")]
		[Address(RVA = "0xA820E8", Offset = "0xA820E8", VA = "0xA820E8")]
		internal void <Start>b__10_0(Scene scene, LoadSceneMode loadingMode)
		{
		}
	}

	[Token(Token = "0x20005F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B494", Offset = "0x39B494")]
	private sealed class <PingAvailableRegionsCoroutine>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool connectToBest;

		[Token(Token = "0x4002437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private PhotonPingManager <pingManager>5__2;

		[Token(Token = "0x17000446")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BF8")]
			[Address(RVA = "0xA82DA4", Offset = "0xA82DA4", VA = "0xA82DA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000447")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BFA")]
			[Address(RVA = "0xA82E24", Offset = "0xA82E24", VA = "0xA82E24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BF5")]
		[Address(RVA = "0xA82048", Offset = "0xA82048", VA = "0xA82048")]
		[DebuggerHidden]
		public <PingAvailableRegionsCoroutine>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6002BF6")]
		[Address(RVA = "0xA821E0", Offset = "0xA821E0", VA = "0xA821E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BF7")]
		[Address(RVA = "0xA821E4", Offset = "0xA821E4", VA = "0xA821E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BF9")]
		[Address(RVA = "0xA82DAC", Offset = "0xA82DAC", VA = "0xA82DAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PhotonHandler SP;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int updateInterval;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int updateIntervalOnSerialize;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int nextSendTickCount;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nextSendTickCountOnSerialize;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static bool sendThreadShouldRun;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Stopwatch timerToStopConnectionInBackground;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected internal static bool AppQuits;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected internal static Type PingImplementation;

	[Token(Token = "0x40002A1")]
	private const string PlayerPrefsKey = "PUNCloudBestRegion";

	[Token(Token = "0x1700006A")]
	internal static CloudRegionCode BestRegionCodeInPreferences
	{
		[Token(Token = "0x6000296")]
		[Address(RVA = "0xA81D94", Offset = "0xA81D94", VA = "0xA81D94")]
		get
		{
			return default(CloudRegionCode);
		}
		[Token(Token = "0x6000297")]
		[Address(RVA = "0xA81E24", Offset = "0xA81E24", VA = "0xA81E24")]
		set
		{
		}
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0xA80598", Offset = "0xA80598", VA = "0xA80598")]
	protected void Awake()
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xA80AB8", Offset = "0xA80AB8", VA = "0xA80AB8")]
	protected void Start()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xA80BBC", Offset = "0xA80BBC", VA = "0xA80BBC")]
	protected void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0xA80EC4", Offset = "0xA80EC4", VA = "0xA80EC4")]
	protected void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0xA810B4", Offset = "0xA810B4", VA = "0xA810B4")]
	protected void OnDestroy()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0xA81124", Offset = "0xA81124", VA = "0xA81124")]
	protected void Update()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0xA817BC", Offset = "0xA817BC", VA = "0xA817BC")]
	protected void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0xA8184C", Offset = "0xA8184C", VA = "0xA8184C")]
	protected void OnCreatedRoom()
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0xA80978", Offset = "0xA80978", VA = "0xA80978")]
	public static void StartFallbackSendAckThread()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xA80C6C", Offset = "0xA80C6C", VA = "0xA80C6C")]
	public static void StopFallbackSendAckThread()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xA81900", Offset = "0xA81900", VA = "0xA81900")]
	public static bool FallbackSendAckThread()
	{
		return default(bool);
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xA81F14", Offset = "0xA81F14", VA = "0xA81F14")]
	protected internal static void PingAvailableRegionsAndConnectToBest()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xA81FC8", Offset = "0xA81FC8", VA = "0xA81FC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A6580", Offset = "0x3A6580")]
	internal IEnumerator PingAvailableRegionsCoroutine(bool connectToBest)
	{
		return null;
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xA82068", Offset = "0xA82068", VA = "0xA82068")]
	public PhotonHandler()
	{
	}
}
[Token(Token = "0x2000057")]
public class PhotonLagSimulationGui : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Rect WindowRect;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int WindowId;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool Visible;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39E090", Offset = "0x39E090")]
	private PhotonPeer <Peer>k__BackingField;

	[Token(Token = "0x1700006B")]
	public PhotonPeer Peer
	{
		[Token(Token = "0x600029C")]
		[Address(RVA = "0xA82E2C", Offset = "0xA82E2C", VA = "0xA82E2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A65F0", Offset = "0x3A65F0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600029D")]
		[Address(RVA = "0xA82E34", Offset = "0xA82E34", VA = "0xA82E34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6600", Offset = "0x3A6600")]
		set
		{
		}
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xA82E3C", Offset = "0xA82E3C", VA = "0xA82E3C")]
	public void Start()
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xA82EBC", Offset = "0xA82EBC", VA = "0xA82EBC")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xA83174", Offset = "0xA83174", VA = "0xA83174")]
	private void NetSimHasNoPeerWindow(int windowId)
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xA83274", Offset = "0xA83274", VA = "0xA83274")]
	private void NetSimWindow(int windowId)
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0xA83CB4", Offset = "0xA83CB4", VA = "0xA83CB4")]
	public PhotonLagSimulationGui()
	{
	}
}
[Token(Token = "0x2000058")]
public static class PhotonNetwork
{
	[Token(Token = "0x20005F5")]
	public delegate void EventCallback(byte eventCode, object content, int senderId);

	[Serializable]
	[Token(Token = "0x20005F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B4A4", Offset = "0x39B4A4")]
	private sealed class <>c
	{
		[Token(Token = "0x4002438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x6002C00")]
		[Address(RVA = "0x614EC4", Offset = "0x614EC4", VA = "0x614EC4")]
		public <>c()
		{
		}

		[Token(Token = "0x6002C01")]
		[Address(RVA = "0x614ECC", Offset = "0x614ECC", VA = "0x614ECC")]
		internal int <.cctor>b__149_0()
		{
			return default(int);
		}
	}

	[Token(Token = "0x40002A6")]
	public const string versionPUN = "1.94";

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39E0A0", Offset = "0x39E0A0")]
	private static string <gameVersion>k__BackingField;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	internal static readonly PhotonHandler photonMono;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	internal static NetworkingPeer networkingPeer;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static readonly int MAX_VIEW_IDS;

	[Token(Token = "0x40002AB")]
	internal const string serverSettingsAssetFile = "PhotonServerSettings";

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static ServerSettings PhotonServerSettings;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static bool InstantiateInRoomOnly;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static PhotonLogLevel logLevel;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39E0B0", Offset = "0x39E0B0")]
	private static List<FriendInfo> <Friends>k__BackingField;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static float precisionForVectorSynchronization;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static float precisionForQuaternionSynchronization;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static float precisionForFloatSynchronization;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static bool UseRpcMonoBehaviourCache;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public static bool UsePrefabCache;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static Dictionary<string, GameObject> PrefabCache;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static HashSet<GameObject> SendMonoMessageTargets;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static Type SendMonoMessageTargetType;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static bool StartRpcsAsCoroutine;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private static bool isOfflineMode;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static Room offlineModeRoom;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x39E0C0", Offset = "0x39E0C0")]
	public static int maxConnections;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static bool _mAutomaticallySyncScene;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private static bool m_autoCleanUpPlayerObjects;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private static int sendInterval;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static int sendIntervalOnSerialize;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static bool m_isMessageQueueRunning;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static Stopwatch startupStopwatch;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public static float BackgroundTimeout;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39E0F4", Offset = "0x39E0F4")]
	private static bool <UseAlternativeUdpPorts>k__BackingField;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	internal static int lastUsedViewSubId;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	internal static int lastUsedViewSubIdStatic;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	internal static List<int> manuallyAllocatedViewIds;

	[Token(Token = "0x1700006C")]
	public static string gameVersion
	{
		[Token(Token = "0x60002A3")]
		[Address(RVA = "0xA83DF8", Offset = "0xA83DF8", VA = "0xA83DF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6610", Offset = "0x3A6610")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002A4")]
		[Address(RVA = "0xA83E70", Offset = "0xA83E70", VA = "0xA83E70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6620", Offset = "0x3A6620")]
		set
		{
		}
	}

	[Token(Token = "0x1700006D")]
	public static string ServerAddress
	{
		[Token(Token = "0x60002A5")]
		[Address(RVA = "0xA83EEC", Offset = "0xA83EEC", VA = "0xA83EEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006E")]
	public static CloudRegionCode CloudRegion
	{
		[Token(Token = "0x60002A6")]
		[Address(RVA = "0xA83FC4", Offset = "0xA83FC4", VA = "0xA83FC4")]
		get
		{
			return default(CloudRegionCode);
		}
	}

	[Token(Token = "0x1700006F")]
	public static bool connected
	{
		[Token(Token = "0x60002A7")]
		[Address(RVA = "0xA7E148", Offset = "0xA7E148", VA = "0xA7E148")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000070")]
	public static bool connecting
	{
		[Token(Token = "0x60002A8")]
		[Address(RVA = "0xA840DC", Offset = "0xA840DC", VA = "0xA840DC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000071")]
	public static bool connectedAndReady
	{
		[Token(Token = "0x60002A9")]
		[Address(RVA = "0xA841FC", Offset = "0xA841FC", VA = "0xA841FC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000072")]
	public static ConnectionState connectionState
	{
		[Token(Token = "0x60002AA")]
		[Address(RVA = "0xA84364", Offset = "0xA84364", VA = "0xA84364")]
		get
		{
			return default(ConnectionState);
		}
	}

	[Token(Token = "0x17000073")]
	public static ClientState connectionStateDetailed
	{
		[Token(Token = "0x60002AB")]
		[Address(RVA = "0xA81634", Offset = "0xA81634", VA = "0xA81634")]
		get
		{
			return default(ClientState);
		}
	}

	[Token(Token = "0x17000074")]
	public static ServerConnection Server
	{
		[Token(Token = "0x60002AC")]
		[Address(RVA = "0xA82CE4", Offset = "0xA82CE4", VA = "0xA82CE4")]
		get
		{
			return default(ServerConnection);
		}
	}

	[Token(Token = "0x17000075")]
	public static AuthenticationValues AuthValues
	{
		[Token(Token = "0x60002AD")]
		[Address(RVA = "0xA844E0", Offset = "0xA844E0", VA = "0xA844E0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002AE")]
		[Address(RVA = "0xA845A0", Offset = "0xA845A0", VA = "0xA845A0")]
		set
		{
		}
	}

	[Token(Token = "0x17000076")]
	public static Room room
	{
		[Token(Token = "0x60002AF")]
		[Address(RVA = "0xA7E3AC", Offset = "0xA7E3AC", VA = "0xA7E3AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000077")]
	public static PhotonPlayer player
	{
		[Token(Token = "0x60002B0")]
		[Address(RVA = "0xA8465C", Offset = "0xA8465C", VA = "0xA8465C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000078")]
	public static PhotonPlayer masterClient
	{
		[Token(Token = "0x60002B1")]
		[Address(RVA = "0xA8471C", Offset = "0xA8471C", VA = "0xA8471C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000079")]
	public static string playerName
	{
		[Token(Token = "0x60002B2")]
		[Address(RVA = "0xA848C8", Offset = "0xA848C8", VA = "0xA848C8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002B3")]
		[Address(RVA = "0xA84950", Offset = "0xA84950", VA = "0xA84950")]
		set
		{
		}
	}

	[Token(Token = "0x1700007A")]
	public static PhotonPlayer[] playerList
	{
		[Token(Token = "0x60002B4")]
		[Address(RVA = "0xA849E8", Offset = "0xA849E8", VA = "0xA849E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700007B")]
	public static PhotonPlayer[] otherPlayers
	{
		[Token(Token = "0x60002B5")]
		[Address(RVA = "0xA84ABC", Offset = "0xA84ABC", VA = "0xA84ABC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700007C")]
	public static List<FriendInfo> Friends
	{
		[Token(Token = "0x60002B6")]
		[Address(RVA = "0xA84B90", Offset = "0xA84B90", VA = "0xA84B90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6630", Offset = "0x3A6630")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002B7")]
		[Address(RVA = "0xA84C08", Offset = "0xA84C08", VA = "0xA84C08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6640", Offset = "0x3A6640")]
		internal set
		{
		}
	}

	[Token(Token = "0x1700007D")]
	public static int FriendsListAge
	{
		[Token(Token = "0x60002B8")]
		[Address(RVA = "0xA84C84", Offset = "0xA84C84", VA = "0xA84C84")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700007E")]
	public static IPunPrefabPool PrefabPool
	{
		[Token(Token = "0x60002B9")]
		[Address(RVA = "0xA84D50", Offset = "0xA84D50", VA = "0xA84D50")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002BA")]
		[Address(RVA = "0xA84DD8", Offset = "0xA84DD8", VA = "0xA84DD8")]
		set
		{
		}
	}

	[Token(Token = "0x1700007F")]
	public static bool offlineMode
	{
		[Token(Token = "0x60002BB")]
		[Address(RVA = "0xA84E64", Offset = "0xA84E64", VA = "0xA84E64")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002BC")]
		[Address(RVA = "0xA84EDC", Offset = "0xA84EDC", VA = "0xA84EDC")]
		set
		{
		}
	}

	[Token(Token = "0x17000080")]
	public static bool automaticallySyncScene
	{
		[Token(Token = "0x60002BD")]
		[Address(RVA = "0xA85238", Offset = "0xA85238", VA = "0xA85238")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002BE")]
		[Address(RVA = "0xA852B0", Offset = "0xA852B0", VA = "0xA852B0")]
		set
		{
		}
	}

	[Token(Token = "0x17000081")]
	public static bool autoCleanUpPlayerObjects
	{
		[Token(Token = "0x60002BF")]
		[Address(RVA = "0xA853AC", Offset = "0xA853AC", VA = "0xA853AC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002C0")]
		[Address(RVA = "0xA85424", Offset = "0xA85424", VA = "0xA85424")]
		set
		{
		}
	}

	[Token(Token = "0x17000082")]
	public static bool autoJoinLobby
	{
		[Token(Token = "0x60002C1")]
		[Address(RVA = "0xA85514", Offset = "0xA85514", VA = "0xA85514")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002C2")]
		[Address(RVA = "0xA8559C", Offset = "0xA8559C", VA = "0xA8559C")]
		set
		{
		}
	}

	[Token(Token = "0x17000083")]
	public static bool EnableLobbyStatistics
	{
		[Token(Token = "0x60002C3")]
		[Address(RVA = "0xA85628", Offset = "0xA85628", VA = "0xA85628")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002C4")]
		[Address(RVA = "0xA856B0", Offset = "0xA856B0", VA = "0xA856B0")]
		set
		{
		}
	}

	[Token(Token = "0x17000084")]
	public static List<TypedLobbyInfo> LobbyStatistics
	{
		[Token(Token = "0x60002C5")]
		[Address(RVA = "0xA8573C", Offset = "0xA8573C", VA = "0xA8573C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002C6")]
		[Address(RVA = "0xA857C4", Offset = "0xA857C4", VA = "0xA857C4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000085")]
	public static bool insideLobby
	{
		[Token(Token = "0x60002C7")]
		[Address(RVA = "0xA85850", Offset = "0xA85850", VA = "0xA85850")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000086")]
	public static TypedLobby lobby
	{
		[Token(Token = "0x60002C8")]
		[Address(RVA = "0xA858D8", Offset = "0xA858D8", VA = "0xA858D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002C9")]
		[Address(RVA = "0xA85960", Offset = "0xA85960", VA = "0xA85960")]
		set
		{
		}
	}

	[Token(Token = "0x17000087")]
	public static int sendRate
	{
		[Token(Token = "0x60002CA")]
		[Address(RVA = "0xA80878", Offset = "0xA80878", VA = "0xA80878")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002CB")]
		[Address(RVA = "0xA859EC", Offset = "0xA859EC", VA = "0xA859EC")]
		set
		{
		}
	}

	[Token(Token = "0x17000088")]
	public static int sendRateOnSerialize
	{
		[Token(Token = "0x60002CC")]
		[Address(RVA = "0xA808F8", Offset = "0xA808F8", VA = "0xA808F8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002CD")]
		[Address(RVA = "0xA85B5C", Offset = "0xA85B5C", VA = "0xA85B5C")]
		set
		{
		}
	}

	[Token(Token = "0x17000089")]
	public static bool isMessageQueueRunning
	{
		[Token(Token = "0x60002CE")]
		[Address(RVA = "0xA85D0C", Offset = "0xA85D0C", VA = "0xA85D0C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002CF")]
		[Address(RVA = "0xA85D84", Offset = "0xA85D84", VA = "0xA85D84")]
		set
		{
		}
	}

	[Token(Token = "0x1700008A")]
	public static double time
	{
		[Token(Token = "0x60002D0")]
		[Address(RVA = "0xA85E60", Offset = "0xA85E60", VA = "0xA85E60")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x1700008B")]
	public static int ServerTimestamp
	{
		[Token(Token = "0x60002D1")]
		[Address(RVA = "0xA85EEC", Offset = "0xA85EEC", VA = "0xA85EEC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700008C")]
	public static bool isMasterClient
	{
		[Token(Token = "0x60002D2")]
		[Address(RVA = "0xA86050", Offset = "0xA86050", VA = "0xA86050")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008D")]
	public static bool inRoom
	{
		[Token(Token = "0x60002D3")]
		[Address(RVA = "0xA712A8", Offset = "0xA712A8", VA = "0xA712A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008E")]
	public static bool isNonMasterClientInRoom
	{
		[Token(Token = "0x60002D4")]
		[Address(RVA = "0xA86194", Offset = "0xA86194", VA = "0xA86194")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008F")]
	public static int countOfPlayersOnMaster
	{
		[Token(Token = "0x60002D5")]
		[Address(RVA = "0xA86240", Offset = "0xA86240", VA = "0xA86240")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000090")]
	public static int countOfPlayersInRooms
	{
		[Token(Token = "0x60002D6")]
		[Address(RVA = "0xA862C8", Offset = "0xA862C8", VA = "0xA862C8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000091")]
	public static int countOfPlayers
	{
		[Token(Token = "0x60002D7")]
		[Address(RVA = "0xA86350", Offset = "0xA86350", VA = "0xA86350")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000092")]
	public static int countOfRooms
	{
		[Token(Token = "0x60002D8")]
		[Address(RVA = "0xA863FC", Offset = "0xA863FC", VA = "0xA863FC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000093")]
	public static bool NetworkStatisticsEnabled
	{
		[Token(Token = "0x60002D9")]
		[Address(RVA = "0xA86484", Offset = "0xA86484", VA = "0xA86484")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002DA")]
		[Address(RVA = "0xA86514", Offset = "0xA86514", VA = "0xA86514")]
		set
		{
		}
	}

	[Token(Token = "0x17000094")]
	public static int ResentReliableCommands
	{
		[Token(Token = "0x60002DB")]
		[Address(RVA = "0xA865AC", Offset = "0xA865AC", VA = "0xA865AC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000095")]
	public static bool CrcCheckEnabled
	{
		[Token(Token = "0x60002DC")]
		[Address(RVA = "0xA8663C", Offset = "0xA8663C", VA = "0xA8663C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002DD")]
		[Address(RVA = "0xA866CC", Offset = "0xA866CC", VA = "0xA866CC")]
		set
		{
		}
	}

	[Token(Token = "0x17000096")]
	public static int PacketLossByCrcCheck
	{
		[Token(Token = "0x60002DE")]
		[Address(RVA = "0xA8687C", Offset = "0xA8687C", VA = "0xA8687C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000097")]
	public static int MaxResendsBeforeDisconnect
	{
		[Token(Token = "0x60002DF")]
		[Address(RVA = "0xA8690C", Offset = "0xA8690C", VA = "0xA8690C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002E0")]
		[Address(RVA = "0xA86994", Offset = "0xA86994", VA = "0xA86994")]
		set
		{
		}
	}

	[Token(Token = "0x17000098")]
	public static int QuickResends
	{
		[Token(Token = "0x60002E1")]
		[Address(RVA = "0xA86A30", Offset = "0xA86A30", VA = "0xA86A30")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002E2")]
		[Address(RVA = "0xA86AC0", Offset = "0xA86AC0", VA = "0xA86AC0")]
		set
		{
		}
	}

	[Token(Token = "0x17000099")]
	public static bool UseAlternativeUdpPorts
	{
		[Token(Token = "0x60002E3")]
		[Address(RVA = "0xA86B64", Offset = "0xA86B64", VA = "0xA86B64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6650", Offset = "0x3A6650")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002E4")]
		[Address(RVA = "0xA86BDC", Offset = "0xA86BDC", VA = "0xA86BDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6660", Offset = "0x3A6660")]
		set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public static event EventCallback OnEventCall
	{
		[Token(Token = "0x60002E5")]
		[Address(RVA = "0xA86C58", Offset = "0xA86C58", VA = "0xA86C58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6670", Offset = "0x3A6670")]
		add
		{
		}
		[Token(Token = "0x60002E6")]
		[Address(RVA = "0xA86D60", Offset = "0xA86D60", VA = "0xA86D60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6680", Offset = "0x3A6680")]
		remove
		{
		}
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xA86E68", Offset = "0xA86E68", VA = "0xA86E68")]
	static PhotonNetwork()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xA873D8", Offset = "0xA873D8", VA = "0xA873D8")]
	public static void SwitchToProtocol(ConnectionProtocol cp)
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xA87464", Offset = "0xA87464", VA = "0xA87464")]
	public static bool ConnectUsingSettings(string gameVersion)
	{
		return default(bool);
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xA87FEC", Offset = "0xA87FEC", VA = "0xA87FEC")]
	public static bool ConnectToMaster(string masterServerAddress, int port, string appID, string gameVersion)
	{
		return default(bool);
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xA884A0", Offset = "0xA884A0", VA = "0xA884A0")]
	public static bool Reconnect()
	{
		return default(bool);
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xA88934", Offset = "0xA88934", VA = "0xA88934")]
	public static bool ReconnectAndRejoin()
	{
		return default(bool);
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xA87CAC", Offset = "0xA87CAC", VA = "0xA87CAC")]
	public static bool ConnectToBestCloudServer(string gameVersion)
	{
		return default(bool);
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xA88E10", Offset = "0xA88E10", VA = "0xA88E10")]
	public static bool ConnectToRegion(CloudRegionCode region, string gameVersion)
	{
		return default(bool);
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xA89200", Offset = "0xA89200", VA = "0xA89200")]
	public static void OverrideBestCloudServer(CloudRegionCode region)
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xA89278", Offset = "0xA89278", VA = "0xA89278")]
	public static void RefreshCloudServerRating()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xA89304", Offset = "0xA89304", VA = "0xA89304")]
	public static void NetworkStatisticsReset()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xA89394", Offset = "0xA89394", VA = "0xA89394")]
	public static string NetworkStatisticsToString()
	{
		return null;
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xA894F0", Offset = "0xA894F0", VA = "0xA894F0")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3A6690", Offset = "0x3A6690")]
	public static void InitializeSecurity()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xA894F4", Offset = "0xA894F4", VA = "0xA894F4")]
	private static bool VerifyCanUseNetwork()
	{
		return default(bool);
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xA80CE8", Offset = "0xA80CE8", VA = "0xA80CE8")]
	public static void Disconnect()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xA895BC", Offset = "0xA895BC", VA = "0xA895BC")]
	public static bool FindFriends(string[] friendsToFind)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xA896C4", Offset = "0xA896C4", VA = "0xA896C4")]
	public static bool CreateRoom(string roomName)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xA89AD8", Offset = "0xA89AD8", VA = "0xA89AD8")]
	public static bool CreateRoom(string roomName, RoomOptions roomOptions, TypedLobby typedLobby)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xA89750", Offset = "0xA89750", VA = "0xA89750")]
	public static bool CreateRoom(string roomName, RoomOptions roomOptions, TypedLobby typedLobby, string[] expectedUsers)
	{
		return default(bool);
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xA89E78", Offset = "0xA89E78", VA = "0xA89E78")]
	public static bool JoinRoom(string roomName)
	{
		return default(bool);
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xA89EF4", Offset = "0xA89EF4", VA = "0xA89EF4")]
	public static bool JoinRoom(string roomName, string[] expectedUsers)
	{
		return default(bool);
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xA8A21C", Offset = "0xA8A21C", VA = "0xA8A21C")]
	public static bool JoinOrCreateRoom(string roomName, RoomOptions roomOptions, TypedLobby typedLobby)
	{
		return default(bool);
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xA8A2B0", Offset = "0xA8A2B0", VA = "0xA8A2B0")]
	public static bool JoinOrCreateRoom(string roomName, RoomOptions roomOptions, TypedLobby typedLobby, string[] expectedUsers)
	{
		return default(bool);
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0xA8A6C0", Offset = "0xA8A6C0", VA = "0xA8A6C0")]
	public static bool JoinRandomRoom()
	{
		return default(bool);
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0xA8AB28", Offset = "0xA8AB28", VA = "0xA8AB28")]
	public static bool JoinRandomRoom(ExitGames.Client.Photon.Hashtable expectedCustomRoomProperties, byte expectedMaxPlayers)
	{
		return default(bool);
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xA8A754", Offset = "0xA8A754", VA = "0xA8A754")]
	public static bool JoinRandomRoom(ExitGames.Client.Photon.Hashtable expectedCustomRoomProperties, byte expectedMaxPlayers, MatchmakingMode matchingType, TypedLobby typedLobby, string sqlLobbyFilter, [Optional] string[] expectedUsers)
	{
		return default(bool);
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0xA8ABC4", Offset = "0xA8ABC4", VA = "0xA8ABC4")]
	public static bool ReJoinRoom(string roomName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0xA89B6C", Offset = "0xA89B6C", VA = "0xA89B6C")]
	private static void EnterOfflineRoom(string roomName, RoomOptions roomOptions, bool createdRoom)
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0xA8AE94", Offset = "0xA8AE94", VA = "0xA8AE94")]
	public static bool JoinLobby()
	{
		return default(bool);
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0xA8AF08", Offset = "0xA8AF08", VA = "0xA8AF08")]
	public static bool JoinLobby(TypedLobby typedLobby)
	{
		return default(bool);
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0xA8B090", Offset = "0xA8B090", VA = "0xA8B090")]
	public static bool LeaveLobby()
	{
		return default(bool);
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xA8B188", Offset = "0xA8B188", VA = "0xA8B188")]
	public static bool LeaveRoom(bool becomeInactive = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xA8B518", Offset = "0xA8B518", VA = "0xA8B518")]
	public static bool GetCustomRoomList(TypedLobby typedLobby, string sqlLobbyFilter)
	{
		return default(bool);
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xA8B5C0", Offset = "0xA8B5C0", VA = "0xA8B5C0")]
	public static RoomInfo[] GetRoomList()
	{
		return null;
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xA8B718", Offset = "0xA8B718", VA = "0xA8B718")]
	public static void SetPlayerCustomProperties(ExitGames.Client.Photon.Hashtable customProperties)
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xA8BA2C", Offset = "0xA8BA2C", VA = "0xA8BA2C")]
	public static void RemovePlayerCustomProperties(string[] customPropertiesToDelete)
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xA8BC40", Offset = "0xA8BC40", VA = "0xA8BC40")]
	public static bool RaiseEvent(byte eventCode, object eventContent, bool sendReliable, RaiseEventOptions options)
	{
		return default(bool);
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xA8BD88", Offset = "0xA8BD88", VA = "0xA8BD88")]
	public static int AllocateViewID()
	{
		return default(int);
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xA8C268", Offset = "0xA8C268", VA = "0xA8C268")]
	public static int AllocateSceneViewID()
	{
		return default(int);
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xA8BE4C", Offset = "0xA8BE4C", VA = "0xA8BE4C")]
	private static int AllocateViewID(int ownerId)
	{
		return default(int);
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xA8C390", Offset = "0xA8C390", VA = "0xA8C390")]
	private static int[] AllocateSceneViewIDs(int countOfNewViews)
	{
		return null;
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xA70D30", Offset = "0xA70D30", VA = "0xA70D30")]
	public static void UnAllocateViewID(int viewID)
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xA71324", Offset = "0xA71324", VA = "0xA71324")]
	public static GameObject Instantiate(string prefabName, Vector3 position, Quaternion rotation, byte group)
	{
		return null;
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xA8C470", Offset = "0xA8C470", VA = "0xA8C470")]
	public static GameObject Instantiate(string prefabName, Vector3 position, Quaternion rotation, byte group, object[] data)
	{
		return null;
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0xA713F4", Offset = "0xA713F4", VA = "0xA713F4")]
	public static GameObject InstantiateSceneObject(string prefabName, Vector3 position, Quaternion rotation, byte group, object[] data)
	{
		return null;
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xA8CC00", Offset = "0xA8CC00", VA = "0xA8CC00")]
	public static int GetPing()
	{
		return default(int);
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xA8CC90", Offset = "0xA8CC90", VA = "0xA8CC90")]
	public static void FetchServerTimestamp()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xA8CD5C", Offset = "0xA8CD5C", VA = "0xA8CD5C")]
	public static void SendOutgoingCommands()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xA8CE24", Offset = "0xA8CE24", VA = "0xA8CE24")]
	public static bool CloseConnection(PhotonPlayer kickPlayer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xA8D05C", Offset = "0xA8D05C", VA = "0xA8D05C")]
	public static bool SetMasterClient(PhotonPlayer masterClientPlayer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xA8D478", Offset = "0xA8D478", VA = "0xA8D478")]
	public static void Destroy(PhotonView targetView)
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xA709D8", Offset = "0xA709D8", VA = "0xA709D8")]
	public static void Destroy(GameObject targetGo)
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xA8D5C4", Offset = "0xA8D5C4", VA = "0xA8D5C4")]
	public static void DestroyPlayerObjects(PhotonPlayer targetPlayer)
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xA8D6BC", Offset = "0xA8D6BC", VA = "0xA8D6BC")]
	public static void DestroyPlayerObjects(int targetPlayerId)
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xA8D8AC", Offset = "0xA8D8AC", VA = "0xA8D8AC")]
	public static void DestroyAll()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xA8D9B4", Offset = "0xA8D9B4", VA = "0xA8D9B4")]
	public static void RemoveRPCs(PhotonPlayer targetPlayer)
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xA8DB08", Offset = "0xA8DB08", VA = "0xA8DB08")]
	public static void RemoveRPCs(PhotonView targetPhotonView)
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xA8DBCC", Offset = "0xA8DBCC", VA = "0xA8DBCC")]
	public static void RemoveRPCsInGroup(int targetGroup)
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xA8DC90", Offset = "0xA8DC90", VA = "0xA8DC90")]
	internal static void RPC(PhotonView view, string methodName, PhotonTargets target, bool encrypt, params object[] parameters)
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xA8DF5C", Offset = "0xA8DF5C", VA = "0xA8DF5C")]
	internal static void RPC(PhotonView view, string methodName, PhotonPlayer targetPlayer, bool encrpyt, params object[] parameters)
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xA8E1D0", Offset = "0xA8E1D0", VA = "0xA8E1D0")]
	public static void CacheSendMonoMessageTargets(Type type)
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xA8E2C4", Offset = "0xA8E2C4", VA = "0xA8E2C4")]
	public static HashSet<GameObject> FindGameObjectsWithComponent(Type type)
	{
		return null;
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0xA8E49C", Offset = "0xA8E49C", VA = "0xA8E49C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3A66C4", Offset = "0x3A66C4")]
	public static void SetReceivingEnabled(int group, bool enabled)
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xA8E54C", Offset = "0xA8E54C", VA = "0xA8E54C")]
	public static void SetInterestGroups(byte group, bool enabled)
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0xA8E6AC", Offset = "0xA8E6AC", VA = "0xA8E6AC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3A66F8", Offset = "0x3A66F8")]
	public static void SetReceivingEnabled(int[] enableGroups, int[] disableGroups)
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0xA8E7F4", Offset = "0xA8E7F4", VA = "0xA8E7F4")]
	public static void SetInterestGroups(byte[] disableGroups, byte[] enableGroups)
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0xA8E8C4", Offset = "0xA8E8C4", VA = "0xA8E8C4")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3A672C", Offset = "0x3A672C")]
	public static void SetSendingEnabled(int group, bool enabled)
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xA8E944", Offset = "0xA8E944", VA = "0xA8E944")]
	public static void SetSendingEnabled(byte group, bool enabled)
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xA8EA14", Offset = "0xA8EA14", VA = "0xA8EA14")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3A6760", Offset = "0x3A6760")]
	public static void SetSendingEnabled(int[] enableGroups, int[] disableGroups)
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xA8EB0C", Offset = "0xA8EB0C", VA = "0xA8EB0C")]
	public static void SetSendingEnabled(byte[] disableGroups, byte[] enableGroups)
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0xA8EBDC", Offset = "0xA8EBDC", VA = "0xA8EBDC")]
	public static void SetLevelPrefix(short prefix)
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xA8EC98", Offset = "0xA8EC98", VA = "0xA8EC98")]
	public static void LoadLevel(int levelNumber)
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0xA8EE5C", Offset = "0xA8EE5C", VA = "0xA8EE5C")]
	public static UnityEngine.AsyncOperation LoadLevelAsync(int levelNumber)
	{
		return null;
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xA8F020", Offset = "0xA8F020", VA = "0xA8F020")]
	public static void LoadLevel(string levelName)
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xA8F1C4", Offset = "0xA8F1C4", VA = "0xA8F1C4")]
	public static UnityEngine.AsyncOperation LoadLevelAsync(string levelName)
	{
		return null;
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xA8F368", Offset = "0xA8F368", VA = "0xA8F368")]
	public static bool WebRpc(string name, object parameters)
	{
		return default(bool);
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xA8F408", Offset = "0xA8F408", VA = "0xA8F408")]
	public static bool CallEvent(byte eventCode, object content, int senderId)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000059")]
public class PhotonPlayer : IComparable<PhotonPlayer>, IComparable<int>, IEquatable<PhotonPlayer>, IEquatable<int>
{
	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private int actorID;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private string nameField;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39E114", Offset = "0x39E114")]
	private string <UserId>k__BackingField;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public readonly bool IsLocal;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39E124", Offset = "0x39E124")]
	private bool <IsInactive>k__BackingField;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39E134", Offset = "0x39E134")]
	private ExitGames.Client.Photon.Hashtable <CustomProperties>k__BackingField;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public object TagObject;

	[Token(Token = "0x1700009A")]
	public int ID
	{
		[Token(Token = "0x6000334")]
		[Address(RVA = "0x616160", Offset = "0x616160", VA = "0x616160")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700009B")]
	public string NickName
	{
		[Token(Token = "0x6000335")]
		[Address(RVA = "0x616168", Offset = "0x616168", VA = "0x616168")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000336")]
		[Address(RVA = "0x616170", Offset = "0x616170", VA = "0x616170")]
		set
		{
		}
	}

	[Token(Token = "0x1700009C")]
	public string UserId
	{
		[Token(Token = "0x6000337")]
		[Address(RVA = "0x616288", Offset = "0x616288", VA = "0x616288")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6794", Offset = "0x3A6794")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000338")]
		[Address(RVA = "0x616290", Offset = "0x616290", VA = "0x616290")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A67A4", Offset = "0x3A67A4")]
		internal set
		{
		}
	}

	[Token(Token = "0x1700009D")]
	public bool IsMasterClient
	{
		[Token(Token = "0x6000339")]
		[Address(RVA = "0x616298", Offset = "0x616298", VA = "0x616298")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700009E")]
	public bool IsInactive
	{
		[Token(Token = "0x600033A")]
		[Address(RVA = "0x61633C", Offset = "0x61633C", VA = "0x61633C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A67B4", Offset = "0x3A67B4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600033B")]
		[Address(RVA = "0x616344", Offset = "0x616344", VA = "0x616344")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A67C4", Offset = "0x3A67C4")]
		set
		{
		}
	}

	[Token(Token = "0x1700009F")]
	public ExitGames.Client.Photon.Hashtable CustomProperties
	{
		[Token(Token = "0x600033C")]
		[Address(RVA = "0x61634C", Offset = "0x61634C", VA = "0x61634C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A67D4", Offset = "0x3A67D4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600033D")]
		[Address(RVA = "0x616354", Offset = "0x616354", VA = "0x616354")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A67E4", Offset = "0x3A67E4")]
		internal set
		{
		}
	}

	[Token(Token = "0x170000A0")]
	public ExitGames.Client.Photon.Hashtable AllProperties
	{
		[Token(Token = "0x600033E")]
		[Address(RVA = "0x61635C", Offset = "0x61635C", VA = "0x61635C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A1")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3B2054", Offset = "0x3B2054")]
	public string name
	{
		[Token(Token = "0x6000351")]
		[Address(RVA = "0x617600", Offset = "0x617600", VA = "0x617600")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000352")]
		[Address(RVA = "0x617608", Offset = "0x617608", VA = "0x617608")]
		set
		{
		}
	}

	[Token(Token = "0x170000A2")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3B2088", Offset = "0x3B2088")]
	public string userId
	{
		[Token(Token = "0x6000353")]
		[Address(RVA = "0x61760C", Offset = "0x61760C", VA = "0x61760C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000354")]
		[Address(RVA = "0x617614", Offset = "0x617614", VA = "0x617614")]
		internal set
		{
		}
	}

	[Token(Token = "0x170000A3")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3B20BC", Offset = "0x3B20BC")]
	public bool isLocal
	{
		[Token(Token = "0x6000355")]
		[Address(RVA = "0x61761C", Offset = "0x61761C", VA = "0x61761C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A4")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3B20F0", Offset = "0x3B20F0")]
	public bool isMasterClient
	{
		[Token(Token = "0x6000356")]
		[Address(RVA = "0x617624", Offset = "0x617624", VA = "0x617624")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A5")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3B2124", Offset = "0x3B2124")]
	public bool isInactive
	{
		[Token(Token = "0x6000357")]
		[Address(RVA = "0x617628", Offset = "0x617628", VA = "0x617628")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000358")]
		[Address(RVA = "0x617630", Offset = "0x617630", VA = "0x617630")]
		set
		{
		}
	}

	[Token(Token = "0x170000A6")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3B2158", Offset = "0x3B2158")]
	public ExitGames.Client.Photon.Hashtable customProperties
	{
		[Token(Token = "0x6000359")]
		[Address(RVA = "0x617638", Offset = "0x617638", VA = "0x617638")]
		get
		{
			return null;
		}
		[Token(Token = "0x600035A")]
		[Address(RVA = "0x617640", Offset = "0x617640", VA = "0x617640")]
		internal set
		{
		}
	}

	[Token(Token = "0x170000A7")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3B218C", Offset = "0x3B218C")]
	public ExitGames.Client.Photon.Hashtable allProperties
	{
		[Token(Token = "0x600035B")]
		[Address(RVA = "0x617648", Offset = "0x617648", VA = "0x617648")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x616454", Offset = "0x616454", VA = "0x616454")]
	public PhotonPlayer(bool isLocal, int actorID, string name)
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x6164FC", Offset = "0x6164FC", VA = "0x6164FC")]
	protected internal PhotonPlayer(bool isLocal, int actorID, ExitGames.Client.Photon.Hashtable properties)
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x61685C", Offset = "0x61685C", VA = "0x61685C", Slot = "0")]
	public override bool Equals(object p)
	{
		return default(bool);
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x616938", Offset = "0x616938", VA = "0x616938", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x616940", Offset = "0x616940", VA = "0x616940")]
	internal void InternalChangeLocalID(int newID)
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x6165AC", Offset = "0x6165AC", VA = "0x6165AC")]
	internal void InternalCacheProperties(ExitGames.Client.Photon.Hashtable properties)
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x6169E0", Offset = "0x6169E0", VA = "0x6169E0")]
	public void SetCustomProperties(ExitGames.Client.Photon.Hashtable propertiesToSet, [Optional] ExitGames.Client.Photon.Hashtable expectedValues, bool webForward = false)
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x616D3C", Offset = "0x616D3C", VA = "0x616D3C")]
	public static PhotonPlayer Find(int ID)
	{
		return null;
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x616E10", Offset = "0x616E10", VA = "0x616E10")]
	public PhotonPlayer Get(int id)
	{
		return null;
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x616E18", Offset = "0x616E18", VA = "0x616E18")]
	public PhotonPlayer GetNext()
	{
		return null;
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x6170E0", Offset = "0x6170E0", VA = "0x6170E0")]
	public PhotonPlayer GetNextFor(PhotonPlayer currentPlayer)
	{
		return null;
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x616E20", Offset = "0x616E20", VA = "0x616E20")]
	public PhotonPlayer GetNextFor(int currentPlayerId)
	{
		return null;
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x6170F4", Offset = "0x6170F4", VA = "0x6170F4", Slot = "4")]
	public int CompareTo(PhotonPlayer other)
	{
		return default(int);
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x61715C", Offset = "0x61715C", VA = "0x61715C", Slot = "5")]
	public int CompareTo(int other)
	{
		return default(int);
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x6171A0", Offset = "0x6171A0", VA = "0x6171A0", Slot = "6")]
	public bool Equals(PhotonPlayer other)
	{
		return default(bool);
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x617208", Offset = "0x617208", VA = "0x617208", Slot = "7")]
	public bool Equals(int other)
	{
		return default(bool);
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x61724C", Offset = "0x61724C", VA = "0x61724C", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x6173BC", Offset = "0x6173BC", VA = "0x6173BC")]
	public string ToStringFull()
	{
		return null;
	}
}
[Token(Token = "0x200005A")]
public class PhotonStatsGui : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool statsWindowOn;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public bool statsOn;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	public bool healthStatsVisible;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
	public bool trafficStatsOn;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool buttonsOn;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Rect statsRect;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int WindowId;

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x617D14", Offset = "0x617D14", VA = "0x617D14")]
	public void Start()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x617D78", Offset = "0x617D78", VA = "0x617D78")]
	public void Update()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x617DC4", Offset = "0x617DC4", VA = "0x617DC4")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x618028", Offset = "0x618028", VA = "0x618028")]
	public void TrafficStatsWindow(int windowID)
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x6197F0", Offset = "0x6197F0", VA = "0x6197F0")]
	public PhotonStatsGui()
	{
	}
}
[Token(Token = "0x200005B")]
public class PhotonStreamQueue
{
	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private int m_SampleRate;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private int m_SampleCount;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int m_ObjectsPerSample;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float m_LastSampleTime;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int m_LastFrameCount;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int m_NextObjectIndex;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<object> m_Objects;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool m_IsWriting;

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x61A928", Offset = "0x61A928", VA = "0x61A928")]
	public PhotonStreamQueue(int sampleRate)
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x61A9D0", Offset = "0x61A9D0", VA = "0x61A9D0")]
	private void BeginWritePackage()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x61AE68", Offset = "0x61AE68", VA = "0x61AE68")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x61AEF4", Offset = "0x61AEF4", VA = "0x61AEF4")]
	public void SendNext(object obj)
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x61AF9C", Offset = "0x61AF9C", VA = "0x61AF9C")]
	public bool HasQueuedObjects()
	{
		return default(bool);
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x61AFB0", Offset = "0x61AFB0", VA = "0x61AFB0")]
	public object ReceiveNext()
	{
		return null;
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x61B068", Offset = "0x61B068", VA = "0x61B068")]
	public void Serialize(PhotonStream stream)
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x61B20C", Offset = "0x61B20C", VA = "0x61B20C")]
	public void Deserialize(PhotonStream stream)
	{
	}
}
[Token(Token = "0x200005C")]
public enum ViewSynchronization
{
	[Token(Token = "0x40002DF")]
	Off,
	[Token(Token = "0x40002E0")]
	ReliableDeltaCompressed,
	[Token(Token = "0x40002E1")]
	Unreliable,
	[Token(Token = "0x40002E2")]
	UnreliableOnChange
}
[Token(Token = "0x200005D")]
public enum OnSerializeTransform
{
	[Token(Token = "0x40002E4")]
	OnlyPosition,
	[Token(Token = "0x40002E5")]
	OnlyRotation,
	[Token(Token = "0x40002E6")]
	OnlyScale,
	[Token(Token = "0x40002E7")]
	PositionAndRotation,
	[Token(Token = "0x40002E8")]
	All
}
[Token(Token = "0x200005E")]
public enum OnSerializeRigidBody
{
	[Token(Token = "0x40002EA")]
	OnlyVelocity,
	[Token(Token = "0x40002EB")]
	OnlyAngularVelocity,
	[Token(Token = "0x40002EC")]
	All
}
[Token(Token = "0x200005F")]
public enum OwnershipOption
{
	[Token(Token = "0x40002EE")]
	Fixed,
	[Token(Token = "0x40002EF")]
	Takeover,
	[Token(Token = "0x40002F0")]
	Request
}
[Token(Token = "0x2000060")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x3994D8", Offset = "0x3994D8")]
public class PhotonView : Photon.MonoBehaviour
{
	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int ownerId;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public byte group;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	protected internal bool mixedModeIsReliable;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	public bool OwnerShipWasTransfered;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int prefixBackup;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	internal object[] instantiationDataField;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected internal object[] lastOnSerializeDataSent;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected internal object[] lastOnSerializeDataReceived;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ViewSynchronization synchronization;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public OnSerializeTransform onSerializeTransformOption;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OnSerializeRigidBody onSerializeRigidBodyOption;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public OwnershipOption ownershipTransfer;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<UnityEngine.Component> ObservedComponents;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Dictionary<UnityEngine.Component, MethodInfo> m_OnSerializeMethodInfos;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private int viewIdField;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int instantiationId;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int currentMasterID;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected internal bool didAwake;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	[SerializeField]
	protected internal bool isRuntimeInstantiated;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	protected internal bool removedFromLocalViewList;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	internal UnityEngine.MonoBehaviour[] RpcMonoBehaviours;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private MethodInfo OnSerializeMethodInfo;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool failedToFindOnSerialize;

	[Token(Token = "0x170000A8")]
	public int prefix
	{
		[Token(Token = "0x6000369")]
		[Address(RVA = "0x61E6A8", Offset = "0x61E6A8", VA = "0x61E6A8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600036A")]
		[Address(RVA = "0x61E780", Offset = "0x61E780", VA = "0x61E780")]
		set
		{
		}
	}

	[Token(Token = "0x170000A9")]
	public object[] instantiationData
	{
		[Token(Token = "0x600036B")]
		[Address(RVA = "0x61E788", Offset = "0x61E788", VA = "0x61E788")]
		get
		{
			return null;
		}
		[Token(Token = "0x600036C")]
		[Address(RVA = "0x61E83C", Offset = "0x61E83C", VA = "0x61E83C")]
		set
		{
		}
	}

	[Token(Token = "0x170000AA")]
	public int viewID
	{
		[Token(Token = "0x600036D")]
		[Address(RVA = "0x61E844", Offset = "0x61E844", VA = "0x61E844")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600036E")]
		[Address(RVA = "0x61E84C", Offset = "0x61E84C", VA = "0x61E84C")]
		set
		{
		}
	}

	[Token(Token = "0x170000AB")]
	public bool isSceneView
	{
		[Token(Token = "0x600036F")]
		[Address(RVA = "0x61E95C", Offset = "0x61E95C", VA = "0x61E95C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000AC")]
	public PhotonPlayer owner
	{
		[Token(Token = "0x6000370")]
		[Address(RVA = "0x61E9FC", Offset = "0x61E9FC", VA = "0x61E9FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000AD")]
	public int OwnerActorNr
	{
		[Token(Token = "0x6000371")]
		[Address(RVA = "0x61EA04", Offset = "0x61EA04", VA = "0x61EA04")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000AE")]
	public bool isOwnerActive
	{
		[Token(Token = "0x6000372")]
		[Address(RVA = "0x61EA0C", Offset = "0x61EA0C", VA = "0x61EA0C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000AF")]
	public int CreatorActorNr
	{
		[Token(Token = "0x6000373")]
		[Address(RVA = "0x61E974", Offset = "0x61E974", VA = "0x61E974")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000B0")]
	public bool isMine
	{
		[Token(Token = "0x6000374")]
		[Address(RVA = "0x61B750", Offset = "0x61B750", VA = "0x61B750")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x61EAD8", Offset = "0x61EAD8", VA = "0x61EAD8")]
	protected internal void Awake()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x61EBB4", Offset = "0x61EBB4", VA = "0x61EBB4")]
	public void RequestOwnership()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x61EC58", Offset = "0x61EC58", VA = "0x61EC58")]
	public void TransferOwnership(PhotonPlayer newOwner)
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x61EC84", Offset = "0x61EC84", VA = "0x61EC84")]
	public void TransferOwnership(int newOwnerId)
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x61ED2C", Offset = "0x61ED2C", VA = "0x61ED2C")]
	public void OnMasterClientSwitched(PhotonPlayer newMasterClient)
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x61ED94", Offset = "0x61ED94", VA = "0x61ED94")]
	protected internal void OnDestroy()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x61EF54", Offset = "0x61EF54", VA = "0x61EF54")]
	public void SerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x61F5CC", Offset = "0x61F5CC", VA = "0x61F5CC")]
	public void DeserializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x61F6B0", Offset = "0x61F6B0", VA = "0x61F6B0")]
	protected internal void DeserializeComponent(UnityEngine.Component component, PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x61F038", Offset = "0x61F038", VA = "0x61F038")]
	protected internal void SerializeComponent(UnityEngine.Component component, PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x61FE28", Offset = "0x61FE28", VA = "0x61FE28")]
	protected internal void ExecuteComponentOnSerialize(UnityEngine.Component component, PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x62029C", Offset = "0x62029C", VA = "0x62029C")]
	public void RefreshRpcMonoBehaviourCache()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x6202FC", Offset = "0x6202FC", VA = "0x6202FC")]
	public void RPC(string methodName, PhotonTargets target, params object[] parameters)
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x6203A0", Offset = "0x6203A0", VA = "0x6203A0")]
	public void RpcSecure(string methodName, PhotonTargets target, bool encrypt, params object[] parameters)
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x620448", Offset = "0x620448", VA = "0x620448")]
	public void RPC(string methodName, PhotonPlayer targetPlayer, params object[] parameters)
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x6204EC", Offset = "0x6204EC", VA = "0x6204EC")]
	public void RpcSecure(string methodName, PhotonPlayer targetPlayer, bool encrypt, params object[] parameters)
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x620594", Offset = "0x620594", VA = "0x620594")]
	public static PhotonView Get(UnityEngine.Component component)
	{
		return null;
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x6205FC", Offset = "0x6205FC", VA = "0x6205FC")]
	public static PhotonView Get(GameObject gameObj)
	{
		return null;
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x620664", Offset = "0x620664", VA = "0x620664")]
	public static PhotonView Find(int viewID)
	{
		return null;
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x6206FC", Offset = "0x6206FC", VA = "0x6206FC", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x6209C0", Offset = "0x6209C0", VA = "0x6209C0")]
	public PhotonView()
	{
	}
}
[Token(Token = "0x2000061")]
public class PhotonPingManager
{
	[Token(Token = "0x20005F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B4B4", Offset = "0x39B4B4")]
	private sealed class <PingSocket>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400243A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400243B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Region region;

		[Token(Token = "0x400243C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public PhotonPingManager <>4__this;

		[Token(Token = "0x400243D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Photon.Realtime.PhotonPing <ping>5__2;

		[Token(Token = "0x400243E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float <rttSum>5__3;

		[Token(Token = "0x400243F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <replyCount>5__4;

		[Token(Token = "0x4002440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private string <regionAddress>5__5;

		[Token(Token = "0x4002441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__6;

		[Token(Token = "0x4002442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool <overtime>5__7;

		[Token(Token = "0x4002443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Stopwatch <sw>5__8;

		[Token(Token = "0x17000448")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C05")]
			[Address(RVA = "0x6160D8", Offset = "0x6160D8", VA = "0x6160D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000449")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C07")]
			[Address(RVA = "0x616158", Offset = "0x616158", VA = "0x616158", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C02")]
		[Address(RVA = "0x6155A0", Offset = "0x6155A0", VA = "0x6155A0")]
		[DebuggerHidden]
		public <PingSocket>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002C03")]
		[Address(RVA = "0x615918", Offset = "0x615918", VA = "0x615918", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C04")]
		[Address(RVA = "0x61591C", Offset = "0x61591C", VA = "0x61591C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C06")]
		[Address(RVA = "0x6160E0", Offset = "0x6160E0", VA = "0x6160E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public bool UseNative;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int Attempts;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool IgnoreInitialAttempt;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int MaxMilliseconsPerPing;

	[Token(Token = "0x400030C")]
	private const string wssProtocolString = "wss://";

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private int PingsRunning;

	[Token(Token = "0x170000B1")]
	public Region BestRegion
	{
		[Token(Token = "0x600038A")]
		[Address(RVA = "0x615314", Offset = "0x615314", VA = "0x615314")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B2")]
	public bool Done
	{
		[Token(Token = "0x600038B")]
		[Address(RVA = "0x6154F8", Offset = "0x6154F8", VA = "0x6154F8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x615508", Offset = "0x615508", VA = "0x615508")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A67F4", Offset = "0x3A67F4")]
	public IEnumerator PingSocket(Region region)
	{
		return null;
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x6155C0", Offset = "0x6155C0", VA = "0x6155C0")]
	public static string ResolveHost(string hostName)
	{
		return null;
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x615898", Offset = "0x615898", VA = "0x615898")]
	public PhotonPingManager()
	{
	}
}
[Token(Token = "0x2000062")]
public class PunRPC : Attribute
{
	[Token(Token = "0x6000390")]
	[Address(RVA = "0x890A48", Offset = "0x890A48", VA = "0x890A48")]
	public PunRPC()
	{
	}
}
[Token(Token = "0x2000063")]
public class Room : RoomInfo
{
	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39E164", Offset = "0x39E164")]
	private string[] <PropertiesListedInLobby>k__BackingField;

	[Token(Token = "0x170000B3")]
	public new string Name
	{
		[Token(Token = "0x6000391")]
		[Address(RVA = "0x81BC78", Offset = "0x81BC78", VA = "0x81BC78")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000392")]
		[Address(RVA = "0x81BC80", Offset = "0x81BC80", VA = "0x81BC80")]
		internal set
		{
		}
	}

	[Token(Token = "0x170000B4")]
	public new bool IsOpen
	{
		[Token(Token = "0x6000393")]
		[Address(RVA = "0x81BC88", Offset = "0x81BC88", VA = "0x81BC88")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000394")]
		[Address(RVA = "0x81BC90", Offset = "0x81BC90", VA = "0x81BC90")]
		set
		{
		}
	}

	[Token(Token = "0x170000B5")]
	public new bool IsVisible
	{
		[Token(Token = "0x6000395")]
		[Address(RVA = "0x81BEFC", Offset = "0x81BEFC", VA = "0x81BEFC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000396")]
		[Address(RVA = "0x81BF04", Offset = "0x81BF04", VA = "0x81BF04")]
		set
		{
		}
	}

	[Token(Token = "0x170000B6")]
	public string[] PropertiesListedInLobby
	{
		[Token(Token = "0x6000397")]
		[Address(RVA = "0x81C170", Offset = "0x81C170", VA = "0x81C170")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6864", Offset = "0x3A6864")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000398")]
		[Address(RVA = "0x81C178", Offset = "0x81C178", VA = "0x81C178")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6874", Offset = "0x3A6874")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B7")]
	public bool AutoCleanUp
	{
		[Token(Token = "0x6000399")]
		[Address(RVA = "0x81C180", Offset = "0x81C180", VA = "0x81C180")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B8")]
	public new int MaxPlayers
	{
		[Token(Token = "0x600039A")]
		[Address(RVA = "0x81C188", Offset = "0x81C188", VA = "0x81C188")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600039B")]
		[Address(RVA = "0x81C190", Offset = "0x81C190", VA = "0x81C190")]
		set
		{
		}
	}

	[Token(Token = "0x170000B9")]
	public new int PlayerCount
	{
		[Token(Token = "0x600039C")]
		[Address(RVA = "0x81C474", Offset = "0x81C474", VA = "0x81C474")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000BA")]
	public string[] ExpectedUsers
	{
		[Token(Token = "0x600039D")]
		[Address(RVA = "0x81C534", Offset = "0x81C534", VA = "0x81C534")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BB")]
	public int PlayerTtl
	{
		[Token(Token = "0x600039E")]
		[Address(RVA = "0x81C53C", Offset = "0x81C53C", VA = "0x81C53C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600039F")]
		[Address(RVA = "0x81C544", Offset = "0x81C544", VA = "0x81C544")]
		set
		{
		}
	}

	[Token(Token = "0x170000BC")]
	public int EmptyRoomTtl
	{
		[Token(Token = "0x60003A0")]
		[Address(RVA = "0x81C72C", Offset = "0x81C72C", VA = "0x81C72C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60003A1")]
		[Address(RVA = "0x81C734", Offset = "0x81C734", VA = "0x81C734")]
		set
		{
		}
	}

	[Token(Token = "0x170000BD")]
	protected internal int MasterClientId
	{
		[Token(Token = "0x60003A2")]
		[Address(RVA = "0x81C91C", Offset = "0x81C91C", VA = "0x81C91C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60003A3")]
		[Address(RVA = "0x81C924", Offset = "0x81C924", VA = "0x81C924")]
		set
		{
		}
	}

	[Token(Token = "0x170000BE")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3B21C0", Offset = "0x3B21C0")]
	public new string name
	{
		[Token(Token = "0x60003AB")]
		[Address(RVA = "0x81E0EC", Offset = "0x81E0EC", VA = "0x81E0EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003AC")]
		[Address(RVA = "0x81E0F4", Offset = "0x81E0F4", VA = "0x81E0F4")]
		internal set
		{
		}
	}

	[Token(Token = "0x170000BF")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3B21F4", Offset = "0x3B21F4")]
	public new bool open
	{
		[Token(Token = "0x60003AD")]
		[Address(RVA = "0x81E0FC", Offset = "0x81E0FC", VA = "0x81E0FC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003AE")]
		[Address(RVA = "0x81E104", Offset = "0x81E104", VA = "0x81E104")]
		set
		{
		}
	}

	[Token(Token = "0x170000C0")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3B2228", Offset = "0x3B2228")]
	public new bool visible
	{
		[Token(Token = "0x60003AF")]
		[Address(RVA = "0x81E108", Offset = "0x81E108", VA = "0x81E108")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003B0")]
		[Address(RVA = "0x81E110", Offset = "0x81E110", VA = "0x81E110")]
		set
		{
		}
	}

	[Token(Token = "0x170000C1")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3B225C", Offset = "0x3B225C")]
	public string[] propertiesListedInLobby
	{
		[Token(Token = "0x60003B1")]
		[Address(RVA = "0x81E114", Offset = "0x81E114", VA = "0x81E114")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003B2")]
		[Address(RVA = "0x81E11C", Offset = "0x81E11C", VA = "0x81E11C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C2")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3B2290", Offset = "0x3B2290")]
	public bool autoCleanUp
	{
		[Token(Token = "0x60003B3")]
		[Address(RVA = "0x81E124", Offset = "0x81E124", VA = "0x81E124")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C3")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3B22C4", Offset = "0x3B22C4")]
	public new int maxPlayers
	{
		[Token(Token = "0x60003B4")]
		[Address(RVA = "0x81E12C", Offset = "0x81E12C", VA = "0x81E12C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60003B5")]
		[Address(RVA = "0x81E134", Offset = "0x81E134", VA = "0x81E134")]
		set
		{
		}
	}

	[Token(Token = "0x170000C4")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3B22F8", Offset = "0x3B22F8")]
	public new int playerCount
	{
		[Token(Token = "0x60003B6")]
		[Address(RVA = "0x81E138", Offset = "0x81E138", VA = "0x81E138")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000C5")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3B232C", Offset = "0x3B232C")]
	public string[] expectedUsers
	{
		[Token(Token = "0x60003B7")]
		[Address(RVA = "0x81E13C", Offset = "0x81E13C", VA = "0x81E13C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C6")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3B2360", Offset = "0x3B2360")]
	protected internal int masterClientId
	{
		[Token(Token = "0x60003B8")]
		[Address(RVA = "0x81E144", Offset = "0x81E144", VA = "0x81E144")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60003B9")]
		[Address(RVA = "0x81E14C", Offset = "0x81E14C", VA = "0x81E14C")]
		set
		{
		}
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x81C92C", Offset = "0x81C92C", VA = "0x81C92C")]
	internal Room(string roomName, RoomOptions options)
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x81D37C", Offset = "0x81D37C", VA = "0x81D37C")]
	public void SetCustomProperties(ExitGames.Client.Photon.Hashtable propertiesToSet, [Optional] ExitGames.Client.Photon.Hashtable expectedValues, bool webForward = false)
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x81D72C", Offset = "0x81D72C", VA = "0x81D72C")]
	public void SetPropertiesListedInLobby(string[] propsListedInLobby)
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x81D844", Offset = "0x81D844", VA = "0x81D844")]
	public void ClearExpectedUsers()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x81D9BC", Offset = "0x81D9BC", VA = "0x81D9BC")]
	public void SetExpectedUsers(string[] expectedUsers)
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x81DB1C", Offset = "0x81DB1C", VA = "0x81DB1C", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x81DDC0", Offset = "0x81DDC0", VA = "0x81DDC0")]
	public new string ToStringFull()
	{
		return null;
	}
}
[Token(Token = "0x2000064")]
public class RoomInfo
{
	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39E174", Offset = "0x39E174")]
	private bool <removedFromList>k__BackingField;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private ExitGames.Client.Photon.Hashtable customPropertiesField;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected byte maxPlayersField;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	protected int emptyRoomTtlField;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected int playerTtlField;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected string[] expectedUsersField;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected bool openField;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	protected bool visibleField;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	protected bool autoCleanUpField;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected string nameField;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected internal int masterClientIdField;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39E184", Offset = "0x39E184")]
	private bool <serverSideMasterClient>k__BackingField;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39E194", Offset = "0x39E194")]
	private int <PlayerCount>k__BackingField;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39E1A4", Offset = "0x39E1A4")]
	private bool <IsLocalClientInside>k__BackingField;

	[Token(Token = "0x170000C7")]
	public bool removedFromList
	{
		[Token(Token = "0x60003BA")]
		[Address(RVA = "0x81E154", Offset = "0x81E154", VA = "0x81E154")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6884", Offset = "0x3A6884")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003BB")]
		[Address(RVA = "0x81E15C", Offset = "0x81E15C", VA = "0x81E15C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6894", Offset = "0x3A6894")]
		internal set
		{
		}
	}

	[Token(Token = "0x170000C8")]
	protected internal bool serverSideMasterClient
	{
		[Token(Token = "0x60003BC")]
		[Address(RVA = "0x81E164", Offset = "0x81E164", VA = "0x81E164")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A68A4", Offset = "0x3A68A4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003BD")]
		[Address(RVA = "0x81E16C", Offset = "0x81E16C", VA = "0x81E16C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A68B4", Offset = "0x3A68B4")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C9")]
	public ExitGames.Client.Photon.Hashtable CustomProperties
	{
		[Token(Token = "0x60003BE")]
		[Address(RVA = "0x81E174", Offset = "0x81E174", VA = "0x81E174")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CA")]
	public string Name
	{
		[Token(Token = "0x60003BF")]
		[Address(RVA = "0x81E17C", Offset = "0x81E17C", VA = "0x81E17C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CB")]
	public int PlayerCount
	{
		[Token(Token = "0x60003C0")]
		[Address(RVA = "0x81E184", Offset = "0x81E184", VA = "0x81E184")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A68C4", Offset = "0x3A68C4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60003C1")]
		[Address(RVA = "0x81E18C", Offset = "0x81E18C", VA = "0x81E18C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A68D4", Offset = "0x3A68D4")]
		private set
		{
		}
	}

	[Token(Token = "0x170000CC")]
	public bool IsLocalClientInside
	{
		[Token(Token = "0x60003C2")]
		[Address(RVA = "0x81E194", Offset = "0x81E194", VA = "0x81E194")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A68E4", Offset = "0x3A68E4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003C3")]
		[Address(RVA = "0x81E19C", Offset = "0x81E19C", VA = "0x81E19C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A68F4", Offset = "0x3A68F4")]
		set
		{
		}
	}

	[Token(Token = "0x170000CD")]
	public byte MaxPlayers
	{
		[Token(Token = "0x60003C4")]
		[Address(RVA = "0x81E1A4", Offset = "0x81E1A4", VA = "0x81E1A4")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000CE")]
	public bool IsOpen
	{
		[Token(Token = "0x60003C5")]
		[Address(RVA = "0x81E1AC", Offset = "0x81E1AC", VA = "0x81E1AC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000CF")]
	public bool IsVisible
	{
		[Token(Token = "0x60003C6")]
		[Address(RVA = "0x81E1B4", Offset = "0x81E1B4", VA = "0x81E1B4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000D0")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3B2394", Offset = "0x3B2394")]
	public ExitGames.Client.Photon.Hashtable customProperties
	{
		[Token(Token = "0x60003CD")]
		[Address(RVA = "0x81E878", Offset = "0x81E878", VA = "0x81E878")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D1")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3B23C8", Offset = "0x3B23C8")]
	public string name
	{
		[Token(Token = "0x60003CE")]
		[Address(RVA = "0x81E880", Offset = "0x81E880", VA = "0x81E880")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D2")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3B23FC", Offset = "0x3B23FC")]
	public int playerCount
	{
		[Token(Token = "0x60003CF")]
		[Address(RVA = "0x81E888", Offset = "0x81E888", VA = "0x81E888")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60003D0")]
		[Address(RVA = "0x81E890", Offset = "0x81E890", VA = "0x81E890")]
		set
		{
		}
	}

	[Token(Token = "0x170000D3")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3B2430", Offset = "0x3B2430")]
	public bool isLocalClientInside
	{
		[Token(Token = "0x60003D1")]
		[Address(RVA = "0x81E898", Offset = "0x81E898", VA = "0x81E898")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003D2")]
		[Address(RVA = "0x81E8A0", Offset = "0x81E8A0", VA = "0x81E8A0")]
		set
		{
		}
	}

	[Token(Token = "0x170000D4")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3B2464", Offset = "0x3B2464")]
	public byte maxPlayers
	{
		[Token(Token = "0x60003D3")]
		[Address(RVA = "0x81E8A8", Offset = "0x81E8A8", VA = "0x81E8A8")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000D5")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3B2498", Offset = "0x3B2498")]
	public bool open
	{
		[Token(Token = "0x60003D4")]
		[Address(RVA = "0x81E8B0", Offset = "0x81E8B0", VA = "0x81E8B0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000D6")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3B24CC", Offset = "0x3B24CC")]
	public bool visible
	{
		[Token(Token = "0x60003D5")]
		[Address(RVA = "0x81E8B8", Offset = "0x81E8B8", VA = "0x81E8B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x81CA40", Offset = "0x81CA40", VA = "0x81CA40")]
	protected internal RoomInfo(string roomName, ExitGames.Client.Photon.Hashtable properties)
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x81E1BC", Offset = "0x81E1BC", VA = "0x81E1BC", Slot = "0")]
	public override bool Equals(object other)
	{
		return default(bool);
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x81E280", Offset = "0x81E280", VA = "0x81E280", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x81E2B0", Offset = "0x81E2B0", VA = "0x81E2B0", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x81E550", Offset = "0x81E550", VA = "0x81E550")]
	public string ToStringFull()
	{
		return null;
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x81CC68", Offset = "0x81CC68", VA = "0x81CC68")]
	protected internal void InternalCacheProperties(ExitGames.Client.Photon.Hashtable propertiesToCache)
	{
	}
}
[Token(Token = "0x2000065")]
public class Region
{
	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public CloudRegionCode Code;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string Cluster;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string HostAndPort;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int Ping;

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x81A984", Offset = "0x81A984", VA = "0x81A984")]
	public Region(CloudRegionCode code)
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x81AA40", Offset = "0x81AA40", VA = "0x81AA40")]
	public Region(CloudRegionCode code, string regionCodeString, string address)
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x81AA70", Offset = "0x81AA70", VA = "0x81AA70")]
	public static CloudRegionCode Parse(string codeAsString)
	{
		return default(CloudRegionCode);
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x81AC54", Offset = "0x81AC54", VA = "0x81AC54")]
	internal static CloudRegionFlag ParseFlag(CloudRegionCode region)
	{
		return default(CloudRegionFlag);
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x81AE9C", Offset = "0x81AE9C", VA = "0x81AE9C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3A6904", Offset = "0x3A6904")]
	internal static CloudRegionFlag ParseFlag(string codeAsString)
	{
		return default(CloudRegionFlag);
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x81B044", Offset = "0x81B044", VA = "0x81B044", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x2000066")]
public class ServerSettings : ScriptableObject
{
	[Token(Token = "0x20005F8")]
	public enum HostingOption
	{
		[Token(Token = "0x4002445")]
		NotSet,
		[Token(Token = "0x4002446")]
		PhotonCloud,
		[Token(Token = "0x4002447")]
		SelfHosted,
		[Token(Token = "0x4002448")]
		OfflineMode,
		[Token(Token = "0x4002449")]
		BestRegion
	}

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string AppID;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string VoiceAppID;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string ChatAppID;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HostingOption HostType;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public CloudRegionCode PreferredRegion;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CloudRegionFlag EnabledRegions;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ConnectionProtocol Protocol;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string ServerAddress;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int ServerPort;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int VoiceServerPort;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool JoinLobby;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool EnableLobbyStatistics;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PhotonLogLevel PunLogging;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public DebugLevel NetworkLogging;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool RunInBackground;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<string> RpcList;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public bool DisableAutoOpenWizard;

	[Token(Token = "0x170000D7")]
	public static CloudRegionCode BestRegionCodeInPreferences
	{
		[Token(Token = "0x60003E1")]
		[Address(RVA = "0x822AA8", Offset = "0x822AA8", VA = "0x822AA8")]
		get
		{
			return default(CloudRegionCode);
		}
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x822904", Offset = "0x822904", VA = "0x822904")]
	public void UseCloudBestRegion(string cloudAppid)
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x822914", Offset = "0x822914", VA = "0x822914")]
	public void UseCloud(string cloudAppid)
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x822924", Offset = "0x822924", VA = "0x822924")]
	public void UseCloud(string cloudAppid, CloudRegionCode code)
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x822938", Offset = "0x822938", VA = "0x822938")]
	public void UseMyServer(string serverAddress, int serverPort, string application)
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x8229C0", Offset = "0x8229C0", VA = "0x8229C0")]
	public static bool IsAppId(string val)
	{
		return default(bool);
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x822B1C", Offset = "0x822B1C", VA = "0x822B1C")]
	public static void ResetBestRegionCodeInPreferences()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x822B94", Offset = "0x822B94", VA = "0x822B94", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x822D7C", Offset = "0x822D7C", VA = "0x822D7C")]
	public ServerSettings()
	{
	}
}
[Token(Token = "0x2000067")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x39950C", Offset = "0x39950C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x39950C", Offset = "0x39950C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x39950C", Offset = "0x39950C")]
public class PhotonAnimatorView : UnityEngine.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x20005F9")]
	public enum ParameterType
	{
		[Token(Token = "0x400244B")]
		Float = 1,
		[Token(Token = "0x400244C")]
		Int = 3,
		[Token(Token = "0x400244D")]
		Bool = 4,
		[Token(Token = "0x400244E")]
		Trigger = 9
	}

	[Token(Token = "0x20005FA")]
	public enum SynchronizeType
	{
		[Token(Token = "0x4002450")]
		Disabled,
		[Token(Token = "0x4002451")]
		Discrete,
		[Token(Token = "0x4002452")]
		Continuous
	}

	[Serializable]
	[Token(Token = "0x20005FB")]
	public class SynchronizedParameter
	{
		[Token(Token = "0x4002453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ParameterType Type;

		[Token(Token = "0x4002454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SynchronizeType SynchronizeType;

		[Token(Token = "0x4002455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x6002C08")]
		[Address(RVA = "0xA7F574", Offset = "0xA7F574", VA = "0xA7F574")]
		public SynchronizedParameter()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005FC")]
	public class SynchronizedLayer
	{
		[Token(Token = "0x4002456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public SynchronizeType SynchronizeType;

		[Token(Token = "0x4002457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int LayerIndex;

		[Token(Token = "0x6002C09")]
		[Address(RVA = "0xA7F390", Offset = "0xA7F390", VA = "0xA7F390")]
		public SynchronizedLayer()
		{
		}
	}

	[Token(Token = "0x20005FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B4C4", Offset = "0x39B4C4")]
	private sealed class <>c__DisplayClass18_0
	{
		[Token(Token = "0x4002458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int layerIndex;

		[Token(Token = "0x6002C0A")]
		[Address(RVA = "0xA7EE28", Offset = "0xA7EE28", VA = "0xA7EE28")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x6002C0B")]
		[Address(RVA = "0xA8046C", Offset = "0xA8046C", VA = "0xA8046C")]
		internal bool <DoesLayerSynchronizeTypeExist>b__0(SynchronizedLayer item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20005FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B4D4", Offset = "0x39B4D4")]
	private sealed class <>c__DisplayClass19_0
	{
		[Token(Token = "0x4002459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string name;

		[Token(Token = "0x6002C0C")]
		[Address(RVA = "0xA7EF28", Offset = "0xA7EF28", VA = "0xA7EF28")]
		public <>c__DisplayClass19_0()
		{
		}

		[Token(Token = "0x6002C0D")]
		[Address(RVA = "0xA804A0", Offset = "0xA804A0", VA = "0xA804A0")]
		internal bool <DoesParameterSynchronizeTypeExist>b__0(SynchronizedParameter item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20005FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B4E4", Offset = "0x39B4E4")]
	private sealed class <>c__DisplayClass22_0
	{
		[Token(Token = "0x400245A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int layerIndex;

		[Token(Token = "0x6002C0E")]
		[Address(RVA = "0xA7F07C", Offset = "0xA7F07C", VA = "0xA7F07C")]
		public <>c__DisplayClass22_0()
		{
		}

		[Token(Token = "0x6002C0F")]
		[Address(RVA = "0xA804D0", Offset = "0xA804D0", VA = "0xA804D0")]
		internal bool <GetLayerSynchronizeType>b__0(SynchronizedLayer item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000600")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B4F4", Offset = "0x39B4F4")]
	private sealed class <>c__DisplayClass23_0
	{
		[Token(Token = "0x400245B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string name;

		[Token(Token = "0x6002C10")]
		[Address(RVA = "0xA7F1C0", Offset = "0xA7F1C0", VA = "0xA7F1C0")]
		public <>c__DisplayClass23_0()
		{
		}

		[Token(Token = "0x6002C11")]
		[Address(RVA = "0xA80504", Offset = "0xA80504", VA = "0xA80504")]
		internal bool <GetParameterSynchronizeType>b__0(SynchronizedParameter item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000601")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B504", Offset = "0x39B504")]
	private sealed class <>c__DisplayClass24_0
	{
		[Token(Token = "0x400245C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int layerIndex;

		[Token(Token = "0x6002C12")]
		[Address(RVA = "0xA7F388", Offset = "0xA7F388", VA = "0xA7F388")]
		public <>c__DisplayClass24_0()
		{
		}

		[Token(Token = "0x6002C13")]
		[Address(RVA = "0xA80534", Offset = "0xA80534", VA = "0xA80534")]
		internal bool <SetLayerSynchronized>b__0(SynchronizedLayer item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000602")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B514", Offset = "0x39B514")]
	private sealed class <>c__DisplayClass25_0
	{
		[Token(Token = "0x400245D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string name;

		[Token(Token = "0x6002C14")]
		[Address(RVA = "0xA7F56C", Offset = "0xA7F56C", VA = "0xA7F56C")]
		public <>c__DisplayClass25_0()
		{
		}

		[Token(Token = "0x6002C15")]
		[Address(RVA = "0xA80568", Offset = "0xA80568", VA = "0xA80568")]
		internal bool <SetParameterSynchronized>b__0(SynchronizedParameter item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Animator m_Animator;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private PhotonStreamQueue m_StreamQueue;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	[SerializeField]
	private bool ShowLayerWeightsInspector;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	[HideInInspector]
	[SerializeField]
	private bool ShowParameterInspector;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	[SerializeField]
	private List<SynchronizedParameter> m_SynchronizeParameters;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	[SerializeField]
	private List<SynchronizedLayer> m_SynchronizeLayers;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 m_ReceiverPosition;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float m_LastDeserializeTime;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool m_WasSynchronizeTypeChanged;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private PhotonView m_PhotonView;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<string> m_raisedDiscreteTriggersCache;

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xA7DEE0", Offset = "0xA7DEE0", VA = "0xA7DEE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xA7DF84", Offset = "0xA7DF84", VA = "0xA7DF84")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0xA7E838", Offset = "0xA7E838", VA = "0xA7E838")]
	public void CacheDiscreteTriggers()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xA7ED30", Offset = "0xA7ED30", VA = "0xA7ED30")]
	public bool DoesLayerSynchronizeTypeExist(int layerIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xA7EE30", Offset = "0xA7EE30", VA = "0xA7EE30")]
	public bool DoesParameterSynchronizeTypeExist(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xA7EF30", Offset = "0xA7EF30", VA = "0xA7EF30")]
	public List<SynchronizedLayer> GetSynchronizedLayers()
	{
		return null;
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xA7EF38", Offset = "0xA7EF38", VA = "0xA7EF38")]
	public List<SynchronizedParameter> GetSynchronizedParameters()
	{
		return null;
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xA7EF40", Offset = "0xA7EF40", VA = "0xA7EF40")]
	public SynchronizeType GetLayerSynchronizeType(int layerIndex)
	{
		return default(SynchronizeType);
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xA7F084", Offset = "0xA7F084", VA = "0xA7F084")]
	public SynchronizeType GetParameterSynchronizeType(string name)
	{
		return default(SynchronizeType);
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xA7F1C8", Offset = "0xA7F1C8", VA = "0xA7F1C8")]
	public void SetLayerSynchronized(int layerIndex, SynchronizeType synchronizeType)
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xA7F398", Offset = "0xA7F398", VA = "0xA7F398")]
	public void SetParameterSynchronized(string name, ParameterType type, SynchronizeType synchronizeType)
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xA7E4A4", Offset = "0xA7E4A4", VA = "0xA7E4A4")]
	private void SerializeDataContinuously()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xA7E960", Offset = "0xA7E960", VA = "0xA7E960")]
	private void DeserializeDataContinuously()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xA7F57C", Offset = "0xA7F57C", VA = "0xA7F57C")]
	private void SerializeDataDiscretly(PhotonStream stream)
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xA7F8F4", Offset = "0xA7F8F4", VA = "0xA7F8F4")]
	private void DeserializeDataDiscretly(PhotonStream stream)
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xA7FE24", Offset = "0xA7FE24", VA = "0xA7FE24")]
	private void SerializeSynchronizationTypeState(PhotonStream stream)
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xA80014", Offset = "0xA80014", VA = "0xA80014")]
	private void DeserializeSynchronizationTypeState(PhotonStream stream)
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xA801FC", Offset = "0xA801FC", VA = "0xA801FC", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xA80370", Offset = "0xA80370", VA = "0xA80370")]
	public PhotonAnimatorView()
	{
	}
}
[Token(Token = "0x2000068")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x3995D0", Offset = "0x3995D0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x3995D0", Offset = "0x3995D0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x3995D0", Offset = "0x3995D0")]
public class PhotonRigidbody2DView : UnityEngine.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private bool m_SynchronizeVelocity;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	[SerializeField]
	private bool m_SynchronizeAngularVelocity;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Rigidbody2D m_Body;

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x61764C", Offset = "0x61764C", VA = "0x61764C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x6176AC", Offset = "0x6176AC", VA = "0x6176AC", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x617A6C", Offset = "0x617A6C", VA = "0x617A6C")]
	public PhotonRigidbody2DView()
	{
	}
}
[Token(Token = "0x2000069")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x399694", Offset = "0x399694")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x399694", Offset = "0x399694")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x399694", Offset = "0x399694")]
public class PhotonRigidbodyView : UnityEngine.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private bool m_SynchronizeVelocity;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	[SerializeField]
	private bool m_SynchronizeAngularVelocity;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Rigidbody m_Body;

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x617A7C", Offset = "0x617A7C", VA = "0x617A7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x617ADC", Offset = "0x617ADC", VA = "0x617ADC", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x617D04", Offset = "0x617D04", VA = "0x617D04")]
	public PhotonRigidbodyView()
	{
	}
}
[Token(Token = "0x200006A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x399758", Offset = "0x399758")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x399758", Offset = "0x399758")]
public class PhotonTransformView : UnityEngine.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	public PhotonTransformViewPositionModel m_PositionModel;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public PhotonTransformViewRotationModel m_RotationModel;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	public PhotonTransformViewScaleModel m_ScaleModel;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PhotonTransformViewPositionControl m_PositionControl;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private PhotonTransformViewRotationControl m_RotationControl;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PhotonTransformViewScaleControl m_ScaleControl;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private PhotonView m_PhotonView;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_ReceivedNetworkUpdate;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool m_firstTake;

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x61B3C0", Offset = "0x61B3C0", VA = "0x61B3C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x61B640", Offset = "0x61B640", VA = "0x61B640")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x61B64C", Offset = "0x61B64C", VA = "0x61B64C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x61B830", Offset = "0x61B830", VA = "0x61B830")]
	private void UpdatePosition()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x61B8F8", Offset = "0x61B8F8", VA = "0x61B8F8")]
	private void UpdateRotation()
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x61B9C8", Offset = "0x61B9C8", VA = "0x61B9C8")]
	private void UpdateScale()
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x61C330", Offset = "0x61C330", VA = "0x61C330")]
	public void SetSynchronizedValues(Vector3 speed, float turnSpeed)
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x61C388", Offset = "0x61C388", VA = "0x61C388", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x61C9CC", Offset = "0x61C9CC", VA = "0x61C9CC")]
	private void DoDrawEstimatedPositionError()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x61CD88", Offset = "0x61CD88", VA = "0x61CD88")]
	public PhotonTransformView()
	{
	}
}
[Token(Token = "0x200006B")]
public class PhotonTransformViewPositionControl
{
	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private PhotonTransformViewPositionModel m_Model;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private float m_CurrentSpeed;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private double m_LastSerializeTime;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_SynchronizedSpeed;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_SynchronizedTurnSpeed;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 m_NetworkPosition;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Queue<Vector3> m_OldNetworkPositions;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_UpdatedPositionAfterOnSerialize;

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x61B49C", Offset = "0x61B49C", VA = "0x61B49C")]
	public PhotonTransformViewPositionControl(PhotonTransformViewPositionModel model)
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x61D1A0", Offset = "0x61D1A0", VA = "0x61D1A0")]
	private Vector3 GetOldestStoredNetworkPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x61C374", Offset = "0x61C374", VA = "0x61C374")]
	public void SetSynchronizedValues(Vector3 speed, float turnSpeed)
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x61BA90", Offset = "0x61BA90", VA = "0x61BA90")]
	public Vector3 UpdatePosition(Vector3 currentPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x61D66C", Offset = "0x61D66C", VA = "0x61D66C")]
	public Vector3 GetNetworkPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x61D264", Offset = "0x61D264", VA = "0x61D264")]
	public Vector3 GetExtrapolatedPositionOffset()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x61C670", Offset = "0x61C670", VA = "0x61C670")]
	public void OnPhotonSerializeView(Vector3 currentPosition, PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x61D680", Offset = "0x61D680", VA = "0x61D680")]
	private void SerializeData(Vector3 currentPosition, PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x61D7D0", Offset = "0x61D7D0", VA = "0x61D7D0")]
	private void DeserializeData(PhotonStream stream, PhotonMessageInfo info)
	{
	}
}
[Serializable]
[Token(Token = "0x200006C")]
public class PhotonTransformViewPositionModel
{
	[Token(Token = "0x2000603")]
	public enum InterpolateOptions
	{
		[Token(Token = "0x400245F")]
		Disabled,
		[Token(Token = "0x4002460")]
		FixedSpeed,
		[Token(Token = "0x4002461")]
		EstimatedSpeed,
		[Token(Token = "0x4002462")]
		SynchronizeValues,
		[Token(Token = "0x4002463")]
		Lerp
	}

	[Token(Token = "0x2000604")]
	public enum ExtrapolateOptions
	{
		[Token(Token = "0x4002465")]
		Disabled,
		[Token(Token = "0x4002466")]
		SynchronizeValues,
		[Token(Token = "0x4002467")]
		EstimateSpeedAndTurn,
		[Token(Token = "0x4002468")]
		FixedSpeed
	}

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public bool SynchronizeEnabled;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public bool TeleportEnabled;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float TeleportIfDistanceGreaterThan;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public InterpolateOptions InterpolateOption;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float InterpolateMoveTowardsSpeed;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float InterpolateLerpSpeed;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float InterpolateMoveTowardsAcceleration;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float InterpolateMoveTowardsDeceleration;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public AnimationCurve InterpolateSpeedCurve;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ExtrapolateOptions ExtrapolateOption;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float ExtrapolateSpeed;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool ExtrapolateIncludingRoundTripTime;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int ExtrapolateNumberOfStoredPositions;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool DrawErrorGizmo;

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x61CE70", Offset = "0x61CE70", VA = "0x61CE70")]
	public PhotonTransformViewPositionModel()
	{
	}
}
[Token(Token = "0x200006D")]
public class PhotonTransformViewRotationControl
{
	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private PhotonTransformViewRotationModel m_Model;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Quaternion m_NetworkRotation;

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x61B57C", Offset = "0x61B57C", VA = "0x61B57C")]
	public PhotonTransformViewRotationControl(PhotonTransformViewRotationModel model)
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x61DA6C", Offset = "0x61DA6C", VA = "0x61DA6C")]
	public Quaternion GetNetworkRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x61BFA8", Offset = "0x61BFA8", VA = "0x61BFA8")]
	public Quaternion GetRotation(Quaternion currentRotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x61C768", Offset = "0x61C768", VA = "0x61C768")]
	public void OnPhotonSerializeView(Quaternion currentRotation, PhotonStream stream, PhotonMessageInfo info)
	{
	}
}
[Serializable]
[Token(Token = "0x200006E")]
public class PhotonTransformViewRotationModel
{
	[Token(Token = "0x2000605")]
	public enum InterpolateOptions
	{
		[Token(Token = "0x400246A")]
		Disabled,
		[Token(Token = "0x400246B")]
		RotateTowards,
		[Token(Token = "0x400246C")]
		Lerp
	}

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public bool SynchronizeEnabled;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public InterpolateOptions InterpolateOption;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float InterpolateRotateTowardsSpeed;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float InterpolateLerpSpeed;

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x61D168", Offset = "0x61D168", VA = "0x61D168")]
	public PhotonTransformViewRotationModel()
	{
	}
}
[Token(Token = "0x200006F")]
public class PhotonTransformViewScaleControl
{
	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private PhotonTransformViewScaleModel m_Model;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Vector3 m_NetworkScale;

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x61B59C", Offset = "0x61B59C", VA = "0x61B59C")]
	public PhotonTransformViewScaleControl(PhotonTransformViewScaleModel model)
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x61DA7C", Offset = "0x61DA7C", VA = "0x61DA7C")]
	public Vector3 GetNetworkScale()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x61C184", Offset = "0x61C184", VA = "0x61C184")]
	public Vector3 GetScale(Vector3 currentScale)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x61C898", Offset = "0x61C898", VA = "0x61C898")]
	public void OnPhotonSerializeView(Vector3 currentScale, PhotonStream stream, PhotonMessageInfo info)
	{
	}
}
[Serializable]
[Token(Token = "0x2000070")]
public class PhotonTransformViewScaleModel
{
	[Token(Token = "0x2000606")]
	public enum InterpolateOptions
	{
		[Token(Token = "0x400246E")]
		Disabled,
		[Token(Token = "0x400246F")]
		MoveTowards,
		[Token(Token = "0x4002470")]
		Lerp
	}

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public bool SynchronizeEnabled;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public InterpolateOptions InterpolateOption;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float InterpolateMoveTowardsSpeed;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float InterpolateLerpSpeed;

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x61D190", Offset = "0x61D190", VA = "0x61D190")]
	public PhotonTransformViewScaleModel()
	{
	}
}
[Token(Token = "0x2000071")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x3997F0", Offset = "0x3997F0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x3997F0", Offset = "0x3997F0")]
public class PhotonTransformViewWorld : UnityEngine.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private PhotonTransformViewPositionModel m_PositionModel;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private PhotonTransformViewRotationModel m_RotationModel;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private PhotonTransformViewScaleModel m_ScaleModel;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PhotonTransformViewPositionControl m_PositionControl;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private PhotonTransformViewRotationControl m_RotationControl;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PhotonTransformViewScaleControl m_ScaleControl;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private PhotonView m_PhotonView;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_ReceivedNetworkUpdate;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool m_firstTake;

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x61DA90", Offset = "0x61DA90", VA = "0x61DA90")]
	private void Awake()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x61DB6C", Offset = "0x61DB6C", VA = "0x61DB6C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x61DB78", Offset = "0x61DB78", VA = "0x61DB78")]
	private void Update()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x61DC7C", Offset = "0x61DC7C", VA = "0x61DC7C")]
	private void UpdatePosition()
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x61DD44", Offset = "0x61DD44", VA = "0x61DD44")]
	private void UpdateRotation()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x61DE14", Offset = "0x61DE14", VA = "0x61DE14")]
	private void UpdateScale()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x61DEDC", Offset = "0x61DEDC", VA = "0x61DEDC")]
	public void SetSynchronizedValues(Vector3 speed, float turnSpeed)
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x61DF20", Offset = "0x61DF20", VA = "0x61DF20", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x61E208", Offset = "0x61E208", VA = "0x61E208")]
	private void DoDrawEstimatedPositionError()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x61E5C4", Offset = "0x61E5C4", VA = "0x61E5C4")]
	public PhotonTransformViewWorld()
	{
	}
}
[Token(Token = "0x2000072")]
public class ConnectAndJoinRandom : Photon.MonoBehaviour
{
	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool AutoConnect;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public byte Version;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	private bool ConnectInUpdate;

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x688EFC", Offset = "0x688EFC", VA = "0x688EFC", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x688F74", Offset = "0x688F74", VA = "0x688F74", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x6890FC", Offset = "0x6890FC", VA = "0x6890FC", Slot = "6")]
	public virtual void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x6891B4", Offset = "0x6891B4", VA = "0x6891B4", Slot = "7")]
	public virtual void OnJoinedLobby()
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x68926C", Offset = "0x68926C", VA = "0x68926C", Slot = "8")]
	public virtual void OnPhotonRandomJoinFailed()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x689364", Offset = "0x689364", VA = "0x689364", Slot = "9")]
	public virtual void OnFailedToConnectToPhoton(DisconnectCause cause)
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x689424", Offset = "0x689424", VA = "0x689424")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x6894A8", Offset = "0x6894A8", VA = "0x6894A8")]
	public ConnectAndJoinRandom()
	{
	}
}
[Token(Token = "0x2000073")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x399888", Offset = "0x399888")]
public class CullArea : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400037A")]
	private const int MAX_NUMBER_OF_ALLOWED_CELLS = 250;

	[Token(Token = "0x400037B")]
	public const int MAX_NUMBER_OF_SUBDIVISIONS = 3;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public readonly byte FIRST_GROUP_ID;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly int[] SUBDIVISION_FIRST_LEVEL_ORDER;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public readonly int[] SUBDIVISION_SECOND_LEVEL_ORDER;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly int[] SUBDIVISION_THIRD_LEVEL_ORDER;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector2 Center;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector2 Size;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector2[] Subdivisions;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int NumberOfSubdivisions;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39E324", Offset = "0x39E324")]
	private int <CellCount>k__BackingField;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39E334", Offset = "0x39E334")]
	private CellTree <CellTree>k__BackingField;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39E344", Offset = "0x39E344")]
	private Dictionary<int, GameObject> <Map>k__BackingField;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool YIsUpAxis;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool RecreateCellHierarchy;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	private byte idCounter;

	[Token(Token = "0x170000D8")]
	public int CellCount
	{
		[Token(Token = "0x600042E")]
		[Address(RVA = "0x689A60", Offset = "0x689A60", VA = "0x689A60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6914", Offset = "0x3A6914")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600042F")]
		[Address(RVA = "0x689A68", Offset = "0x689A68", VA = "0x689A68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6924", Offset = "0x3A6924")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D9")]
	public CellTree CellTree
	{
		[Token(Token = "0x6000430")]
		[Address(RVA = "0x689A70", Offset = "0x689A70", VA = "0x689A70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6934", Offset = "0x3A6934")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000431")]
		[Address(RVA = "0x689A78", Offset = "0x689A78", VA = "0x689A78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6944", Offset = "0x3A6944")]
		private set
		{
		}
	}

	[Token(Token = "0x170000DA")]
	public Dictionary<int, GameObject> Map
	{
		[Token(Token = "0x6000432")]
		[Address(RVA = "0x689A80", Offset = "0x689A80", VA = "0x689A80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6954", Offset = "0x3A6954")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000433")]
		[Address(RVA = "0x689A88", Offset = "0x689A88", VA = "0x689A88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6964", Offset = "0x3A6964")]
		private set
		{
		}
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x689A90", Offset = "0x689A90", VA = "0x689A90")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x68A280", Offset = "0x68A280", VA = "0x68A280")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x689A9C", Offset = "0x689A9C", VA = "0x689A9C")]
	private void CreateCellHierarchy()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x68A37C", Offset = "0x68A37C", VA = "0x68A37C")]
	private void CreateChildCells(CellTreeNode parent, int cellLevelInHierarchy)
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x68A2C4", Offset = "0x68A2C4", VA = "0x68A2C4")]
	private void DrawCells()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x68A2E4", Offset = "0x68A2E4", VA = "0x68A2E4")]
	private bool IsCellCountAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x68A850", Offset = "0x68A850", VA = "0x68A850")]
	public List<byte> GetActiveCells(Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x68A924", Offset = "0x68A924", VA = "0x68A924")]
	public CullArea()
	{
	}
}
[Token(Token = "0x2000074")]
public class CellTree
{
	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39E354", Offset = "0x39E354")]
	private CellTreeNode <RootNode>k__BackingField;

	[Token(Token = "0x170000DB")]
	public CellTreeNode RootNode
	{
		[Token(Token = "0x600043C")]
		[Address(RVA = "0x684D48", Offset = "0x684D48", VA = "0x684D48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6974", Offset = "0x3A6974")]
		get
		{
			return null;
		}
		[Token(Token = "0x600043D")]
		[Address(RVA = "0x684D50", Offset = "0x684D50", VA = "0x684D50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6984", Offset = "0x3A6984")]
		private set
		{
		}
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x684D58", Offset = "0x684D58", VA = "0x684D58")]
	public CellTree()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x684D60", Offset = "0x684D60", VA = "0x684D60")]
	public CellTree(CellTreeNode root)
	{
	}
}
[Token(Token = "0x2000075")]
public class CellTreeNode
{
	[Token(Token = "0x2000607")]
	public enum ENodeType
	{
		[Token(Token = "0x4002472")]
		Root,
		[Token(Token = "0x4002473")]
		Node,
		[Token(Token = "0x4002474")]
		Leaf
	}

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public byte Id;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 Center;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 Size;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 TopLeft;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 BottomRight;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public ENodeType NodeType;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CellTreeNode Parent;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public List<CellTreeNode> Childs;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float maxDistance;

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x684D80", Offset = "0x684D80", VA = "0x684D80")]
	public CellTreeNode()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x684D88", Offset = "0x684D88", VA = "0x684D88")]
	public CellTreeNode(byte id, ENodeType nodeType, CellTreeNode parent)
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x684DB8", Offset = "0x684DB8", VA = "0x684DB8")]
	public void AddChild(CellTreeNode child)
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x684E70", Offset = "0x684E70", VA = "0x684E70")]
	public void Draw()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x684E74", Offset = "0x684E74", VA = "0x684E74")]
	public void GetActiveCells(List<byte> activeCells, bool yIsUpAxis, Vector3 position)
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x6851D0", Offset = "0x6851D0", VA = "0x6851D0")]
	public bool IsPointInsideCell(bool yIsUpAxis, Vector3 point)
	{
		return default(bool);
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x6850A8", Offset = "0x6850A8", VA = "0x6850A8")]
	public bool IsPointNearCell(bool yIsUpAxis, Vector3 point)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000076")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x3998BC", Offset = "0x3998BC")]
public class InRoomChat : Photon.MonoBehaviour
{
	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Rect GuiRect;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsVisible;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool AlignBottom;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public List<string> messages;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string inputLine;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector2 scrollPos;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string ChatRPC;

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x861804", Offset = "0x861804", VA = "0x861804")]
	public void Start()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x861860", Offset = "0x861860", VA = "0x861860")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x862078", Offset = "0x862078", VA = "0x862078")]
	[PunRPC]
	public void Chat(string newLine, PhotonMessageInfo mi)
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x86218C", Offset = "0x86218C", VA = "0x86218C")]
	public void AddLine(string newLine)
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x862200", Offset = "0x862200", VA = "0x862200")]
	public InRoomChat()
	{
	}
}
[Token(Token = "0x2000077")]
public class InputToEvent : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private GameObject lastGo;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 inputHitPos;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool DetectPointedAtGameObject;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39E364", Offset = "0x39E364")]
	private static GameObject <goPointedAt>k__BackingField;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Vector2 pressedPosition;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector2 currentPos;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool Dragging;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera m_Camera;

	[Token(Token = "0x170000DC")]
	public static GameObject goPointedAt
	{
		[Token(Token = "0x600044D")]
		[Address(RVA = "0x863F0C", Offset = "0x863F0C", VA = "0x863F0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A69A4", Offset = "0x3A69A4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600044E")]
		[Address(RVA = "0x863F64", Offset = "0x863F64", VA = "0x863F64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A69B4", Offset = "0x3A69B4")]
		private set
		{
		}
	}

	[Token(Token = "0x170000DD")]
	public Vector2 DragVector
	{
		[Token(Token = "0x600044F")]
		[Address(RVA = "0x863FC0", Offset = "0x863FC0", VA = "0x863FC0")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x8640B8", Offset = "0x8640B8", VA = "0x8640B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x864118", Offset = "0x864118", VA = "0x864118")]
	private void Update()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x864690", Offset = "0x864690", VA = "0x864690")]
	private void Press(Vector2 screenPos)
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x86477C", Offset = "0x86477C", VA = "0x86477C")]
	private void Release(Vector2 screenPos)
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x864518", Offset = "0x864518", VA = "0x864518")]
	private GameObject RaycastObject(Vector2 screenPos)
	{
		return null;
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x86491C", Offset = "0x86491C", VA = "0x86491C")]
	public InputToEvent()
	{
	}
}
[Token(Token = "0x2000078")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x39992C", Offset = "0x39992C")]
public class ManualPhotonViewAllocator : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject Prefab;

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x6C8424", Offset = "0x6C8424", VA = "0x6C8424")]
	public void AllocateManualPhotonView()
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x6C8648", Offset = "0x6C8648", VA = "0x6C8648")]
	[PunRPC]
	public void InstantiateRpc(int viewID)
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x6C886C", Offset = "0x6C886C", VA = "0x6C886C")]
	public ManualPhotonViewAllocator()
	{
	}
}
[Token(Token = "0x2000079")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x39999C", Offset = "0x39999C")]
public class MoveByKeys : Photon.MonoBehaviour
{
	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float Speed;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float JumpForce;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float JumpTimeout;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool isSprite;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float jumpingTime;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Rigidbody body;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody2D body2d;

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x6CAE9C", Offset = "0x6CAE9C", VA = "0x6CAE9C")]
	public void Start()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x6CAF74", Offset = "0x6CAF74", VA = "0x6CAF74")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x6CB4B8", Offset = "0x6CB4B8", VA = "0x6CB4B8")]
	public MoveByKeys()
	{
	}
}
[Token(Token = "0x200007A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x399A0C", Offset = "0x399A0C")]
public class NetworkCullingHandler : UnityEngine.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private int orderIndex;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private CullArea cullArea;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private List<byte> previousActiveCells;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<byte> activeCells;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private PhotonView pView;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 lastPosition;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 currentPosition;

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x78F6C8", Offset = "0x78F6C8", VA = "0x78F6C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x78F8A0", Offset = "0x78F8A0", VA = "0x78F8A0")]
	private void Start()
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x78FA0C", Offset = "0x78FA0C", VA = "0x78FA0C")]
	private void Update()
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x78FFB8", Offset = "0x78FFB8", VA = "0x78FFB8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x78FB48", Offset = "0x78FB48", VA = "0x78FB48")]
	private bool HaveActiveCellsChanged()
	{
		return default(bool);
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x78FD80", Offset = "0x78FD80", VA = "0x78FD80")]
	private void UpdateInterestGroups()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x790468", Offset = "0x790468", VA = "0x790468", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x790704", Offset = "0x790704", VA = "0x790704")]
	public NetworkCullingHandler()
	{
	}
}
[Token(Token = "0x200007B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x399A7C", Offset = "0x399A7C")]
public class OnClickDestroy : Photon.MonoBehaviour
{
	[Token(Token = "0x2000608")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B524", Offset = "0x39B524")]
	private sealed class <DestroyRpc>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClickDestroy <>4__this;

		[Token(Token = "0x1700044A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C19")]
			[Address(RVA = "0xA70F08", Offset = "0xA70F08", VA = "0xA70F08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C1B")]
			[Address(RVA = "0xA70F88", Offset = "0xA70F88", VA = "0xA70F88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C16")]
		[Address(RVA = "0xA70BA0", Offset = "0xA70BA0", VA = "0xA70BA0")]
		[DebuggerHidden]
		public <DestroyRpc>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6002C17")]
		[Address(RVA = "0xA70BD0", Offset = "0xA70BD0", VA = "0xA70BD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C18")]
		[Address(RVA = "0xA70BD4", Offset = "0xA70BD4", VA = "0xA70BD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C1A")]
		[Address(RVA = "0xA70F10", Offset = "0xA70F10", VA = "0xA70F10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool DestroyByRpc;

	[Token(Token = "0x6000464")]
	[Address(RVA = "0xA7084C", Offset = "0xA7084C", VA = "0xA7084C")]
	public void OnClick()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0xA70B20", Offset = "0xA70B20", VA = "0xA70B20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A69D4", Offset = "0x3A69D4")]
	[PunRPC]
	public IEnumerator DestroyRpc()
	{
		return null;
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0xA70BC0", Offset = "0xA70BC0", VA = "0xA70BC0")]
	public OnClickDestroy()
	{
	}
}
[Token(Token = "0x200007C")]
public class OnClickInstantiate : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject Prefab;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int InstantiateType;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private string[] InstantiateTypeNames;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool showGui;

	[Token(Token = "0x6000467")]
	[Address(RVA = "0xA70F90", Offset = "0xA70F90", VA = "0xA70F90")]
	private void OnClick()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0xA71CB4", Offset = "0xA71CB4", VA = "0xA71CB4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0xA71E38", Offset = "0xA71E38", VA = "0xA71E38")]
	public OnClickInstantiate()
	{
	}
}
[Token(Token = "0x200007D")]
public class OnJoinedInstantiate : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform SpawnPosition;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float PositionOffset;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject[] PrefabsToInstantiate;

	[Token(Token = "0x600046A")]
	[Address(RVA = "0xA71F64", Offset = "0xA71F64", VA = "0xA71F64")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0xA722E0", Offset = "0xA722E0", VA = "0xA722E0")]
	public OnJoinedInstantiate()
	{
	}
}
[Token(Token = "0x200007E")]
public class OnStartDelete : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x600046C")]
	[Address(RVA = "0xA722F0", Offset = "0xA722F0", VA = "0xA722F0")]
	private void Start()
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0xA7237C", Offset = "0xA7237C", VA = "0xA7237C")]
	public OnStartDelete()
	{
	}
}
[Token(Token = "0x200007F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x399AEC", Offset = "0x399AEC")]
public class PickupItem : Photon.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float SecondsBeforeRespawn;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool PickupOnTrigger;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool PickupIsMine;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEngine.MonoBehaviour OnPickedUpCall;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool SentPickup;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public double TimeOfRespawn;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HashSet<PickupItem> DisabledPickupItems;

	[Token(Token = "0x170000DE")]
	public int ViewID
	{
		[Token(Token = "0x600046E")]
		[Address(RVA = "0x627D34", Offset = "0x627D34", VA = "0x627D34")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x627D5C", Offset = "0x627D5C", VA = "0x627D5C")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x627F88", Offset = "0x627F88", VA = "0x627F88", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x627E44", Offset = "0x627E44", VA = "0x627E44")]
	public void Pickup()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x62812C", Offset = "0x62812C", VA = "0x62812C")]
	public void Drop()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x628268", Offset = "0x628268", VA = "0x628268")]
	public void Drop(Vector3 newPosition)
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x6283A0", Offset = "0x6283A0", VA = "0x6283A0")]
	[PunRPC]
	public void PunPickup(PhotonMessageInfo msgInfo)
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x628914", Offset = "0x628914", VA = "0x628914")]
	internal void PickedUp(float timeUntilRespawn)
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x628A78", Offset = "0x628A78", VA = "0x628A78")]
	[PunRPC]
	internal void PunRespawn(Vector3 pos)
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x628B70", Offset = "0x628B70", VA = "0x628B70")]
	[PunRPC]
	internal void PunRespawn()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x628CA4", Offset = "0x628CA4", VA = "0x628CA4")]
	public PickupItem()
	{
	}
}
[Token(Token = "0x2000080")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x399B5C", Offset = "0x399B5C")]
public class PickupItemSimple : Photon.MonoBehaviour
{
	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float SecondsBeforeRespawn;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool PickupOnCollide;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool SentPickup;

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x628D3C", Offset = "0x628D3C", VA = "0x628D3C")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x628E24", Offset = "0x628E24", VA = "0x628E24")]
	public void Pickup()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x628F68", Offset = "0x628F68", VA = "0x628F68")]
	[PunRPC]
	public void PunPickupSimple(PhotonMessageInfo msgInfo)
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x62914C", Offset = "0x62914C", VA = "0x62914C")]
	public void RespawnAfter()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x629210", Offset = "0x629210", VA = "0x629210")]
	public PickupItemSimple()
	{
	}
}
[Token(Token = "0x2000081")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x399BCC", Offset = "0x399BCC")]
public class PickupItemSyncer : Photon.MonoBehaviour
{
	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool IsWaitingForPickupInit;

	[Token(Token = "0x40003C5")]
	private const float TimeDeltaToIgnore = 0.2f;

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x629220", Offset = "0x629220", VA = "0x629220")]
	public void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x629DD8", Offset = "0x629DD8", VA = "0x629DD8")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x62A0B4", Offset = "0x62A0B4", VA = "0x62A0B4")]
	public void AskForPickupItemSpawnTimes()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x62A3DC", Offset = "0x62A3DC", VA = "0x62A3DC")]
	[PunRPC]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3A6A94", Offset = "0x3A6A94")]
	public void RequestForPickupTimes(PhotonMessageInfo msgInfo)
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x62A3F4", Offset = "0x62A3F4", VA = "0x62A3F4")]
	[PunRPC]
	public void RequestForPickupItems(PhotonMessageInfo msgInfo)
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x6292B8", Offset = "0x6292B8", VA = "0x6292B8")]
	private void SendPickedUpItems(PhotonPlayer targetPlayer)
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x62A498", Offset = "0x62A498", VA = "0x62A498")]
	[PunRPC]
	public void PickupItemInit(double timeBase, float[] inactivePickupsAndTimes)
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x62A98C", Offset = "0x62A98C", VA = "0x62A98C")]
	public PickupItemSyncer()
	{
	}
}
[Token(Token = "0x2000082")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x399C3C", Offset = "0x399C3C")]
public class PointedAtGameObjectInfo : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000487")]
	[Address(RVA = "0x908144", Offset = "0x908144", VA = "0x908144")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x9084B4", Offset = "0x9084B4", VA = "0x9084B4")]
	public PointedAtGameObjectInfo()
	{
	}
}
[Token(Token = "0x2000083")]
public class PunPlayerScores : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40003C6")]
	public const string PlayerScoreProp = "score";

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x890A40", Offset = "0x890A40", VA = "0x890A40")]
	public PunPlayerScores()
	{
	}
}
[Token(Token = "0x2000084")]
public static class ScoreExtensions
{
	[Token(Token = "0x600048A")]
	[Address(RVA = "0x8212A8", Offset = "0x8212A8", VA = "0x8212A8")]
	public static void SetScore(this PhotonPlayer player, int newScore)
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x82138C", Offset = "0x82138C", VA = "0x82138C")]
	public static void AddScore(this PhotonPlayer player, int scoreToAddToCurrent)
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x821480", Offset = "0x821480", VA = "0x821480")]
	public static int GetScore(this PhotonPlayer player)
	{
		return default(int);
	}
}
[Token(Token = "0x2000085")]
public class PunTeams : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000609")]
	public enum Team : byte
	{
		[Token(Token = "0x4002479")]
		none,
		[Token(Token = "0x400247A")]
		red,
		[Token(Token = "0x400247B")]
		blue
	}

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<Team, List<PhotonPlayer>> PlayersPerTeam;

	[Token(Token = "0x40003C8")]
	public const string TeamPlayerProp = "team";

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x890A50", Offset = "0x890A50", VA = "0x890A50")]
	public void Start()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x890E40", Offset = "0x890E40", VA = "0x890E40")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x890EC8", Offset = "0x890EC8", VA = "0x890EC8")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x891394", Offset = "0x891394", VA = "0x891394")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x891398", Offset = "0x891398", VA = "0x891398")]
	public void OnPhotonPlayerPropertiesChanged(object[] playerAndUpdatedProps)
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x89139C", Offset = "0x89139C", VA = "0x89139C")]
	public void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer)
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x8913A0", Offset = "0x8913A0", VA = "0x8913A0")]
	public void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x890ECC", Offset = "0x890ECC", VA = "0x890ECC")]
	public void UpdateTeams()
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x8913A4", Offset = "0x8913A4", VA = "0x8913A4")]
	public PunTeams()
	{
	}
}
[Token(Token = "0x2000086")]
public static class TeamExtensions
{
	[Token(Token = "0x6000496")]
	[Address(RVA = "0x55A7B8", Offset = "0x55A7B8", VA = "0x55A7B8")]
	public static PunTeams.Team GetTeam(this PhotonPlayer player)
	{
		return default(PunTeams.Team);
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x55A8B0", Offset = "0x55A8B0", VA = "0x55A8B0")]
	public static void SetTeam(this PhotonPlayer player, PunTeams.Team team)
	{
	}
}
[Token(Token = "0x2000087")]
public class PunTurnManager : PunBehaviour
{
	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float TurnDuration;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public IPunTurnManagerCallbacks TurnManagerListener;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly HashSet<PhotonPlayer> finishedPlayers;

	[Token(Token = "0x40003CC")]
	public const byte TurnManagerEventOffset = 0;

	[Token(Token = "0x40003CD")]
	public const byte EvMove = 1;

	[Token(Token = "0x40003CE")]
	public const byte EvFinalMove = 2;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool _isOverCallProcessed;

	[Token(Token = "0x170000DF")]
	public int Turn
	{
		[Token(Token = "0x6000498")]
		[Address(RVA = "0x8913AC", Offset = "0x8913AC", VA = "0x8913AC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000499")]
		[Address(RVA = "0x89145C", Offset = "0x89145C", VA = "0x89145C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E0")]
	public float ElapsedTimeInTurn
	{
		[Token(Token = "0x600049A")]
		[Address(RVA = "0x891524", Offset = "0x891524", VA = "0x891524")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000E1")]
	public float RemainingSecondsInTurn
	{
		[Token(Token = "0x600049B")]
		[Address(RVA = "0x8915FC", Offset = "0x8915FC", VA = "0x8915FC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000E2")]
	public bool IsCompletedByAll
	{
		[Token(Token = "0x600049C")]
		[Address(RVA = "0x891698", Offset = "0x891698", VA = "0x891698")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000E3")]
	public bool IsFinishedByMe
	{
		[Token(Token = "0x600049D")]
		[Address(RVA = "0x891790", Offset = "0x891790", VA = "0x891790")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000E4")]
	public bool IsOver
	{
		[Token(Token = "0x600049E")]
		[Address(RVA = "0x891838", Offset = "0x891838", VA = "0x891838")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x89185C", Offset = "0x89185C", VA = "0x89185C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x891910", Offset = "0x891910", VA = "0x891910")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x891A24", Offset = "0x891A24", VA = "0x891A24")]
	public void BeginTurn()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x891A44", Offset = "0x891A44", VA = "0x891A44")]
	public void SendMove(object move, bool finished)
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x892184", Offset = "0x892184", VA = "0x892184")]
	public bool GetPlayerFinishedTurn(PhotonPlayer player)
	{
		return default(bool);
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x891D28", Offset = "0x891D28", VA = "0x891D28")]
	public void OnEvent(byte eventCode, object content, int senderId)
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x89220C", Offset = "0x89220C", VA = "0x89220C", Slot = "52")]
	public override void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x892358", Offset = "0x892358", VA = "0x892358")]
	public PunTurnManager()
	{
	}
}
[Token(Token = "0x2000088")]
public interface IPunTurnManagerCallbacks
{
	[Token(Token = "0x60004A7")]
	void OnTurnBegins(int turn);

	[Token(Token = "0x60004A8")]
	void OnTurnCompleted(int turn);

	[Token(Token = "0x60004A9")]
	void OnPlayerMove(PhotonPlayer player, int turn, object move);

	[Token(Token = "0x60004AA")]
	void OnPlayerFinished(PhotonPlayer player, int turn, object move);

	[Token(Token = "0x60004AB")]
	void OnTurnTimeEnds(int turn);
}
[Token(Token = "0x2000089")]
public static class TurnExtensions
{
	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string TurnPropKey;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly string TurnStartPropKey;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string FinishedTurnPropKey;

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x56E360", Offset = "0x56E360", VA = "0x56E360")]
	public static void SetTurn(this Room room, int turn, bool setStartTime = false)
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x56E52C", Offset = "0x56E52C", VA = "0x56E52C")]
	public static int GetTurn(this RoomInfo room)
	{
		return default(int);
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x56E67C", Offset = "0x56E67C", VA = "0x56E67C")]
	public static int GetTurnStart(this RoomInfo room)
	{
		return default(int);
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x56E7CC", Offset = "0x56E7CC", VA = "0x56E7CC")]
	public static int GetFinishedTurn(this PhotonPlayer player)
	{
		return default(int);
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x56E990", Offset = "0x56E990", VA = "0x56E990")]
	public static void SetFinishedTurn(this PhotonPlayer player, int turn)
	{
	}
}
[Token(Token = "0x200008A")]
public class QuitOnEscapeOrBack : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x81A18C", Offset = "0x81A18C", VA = "0x81A18C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x81A1B4", Offset = "0x81A1B4", VA = "0x81A1B4")]
	public QuitOnEscapeOrBack()
	{
	}
}
[Token(Token = "0x200008B")]
public class ShowStatusWhenConnecting : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GUISkin Skin;

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x8235D4", Offset = "0x8235D4", VA = "0x8235D4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x8239F8", Offset = "0x8239F8", VA = "0x8239F8")]
	private string GetConnectingDots()
	{
		return null;
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x823AE4", Offset = "0x823AE4", VA = "0x823AE4")]
	public ShowStatusWhenConnecting()
	{
	}
}
[Token(Token = "0x200008C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x399CDC", Offset = "0x399CDC")]
public class SmoothSyncMovement : Photon.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float SmoothingDelay;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Vector3 correctPlayerPos;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Quaternion correctPlayerRot;

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x6F91B8", Offset = "0x6F91B8", VA = "0x6F91B8")]
	public void Awake()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x6F93A0", Offset = "0x6F93A0", VA = "0x6F93A0", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x6F9598", Offset = "0x6F9598", VA = "0x6F9598")]
	public void Update()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x6F97DC", Offset = "0x6F97DC", VA = "0x6F97DC")]
	public SmoothSyncMovement()
	{
	}
}
[Token(Token = "0x200008D")]
public class SupportLogger : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool LogTrafficStats;

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x557B54", Offset = "0x557B54", VA = "0x557B54")]
	public void Start()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x557C84", Offset = "0x557C84", VA = "0x557C84")]
	public SupportLogger()
	{
	}
}
[Token(Token = "0x200008E")]
public class SupportLogging : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool LogTrafficStats;

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x557C94", Offset = "0x557C94", VA = "0x557C94")]
	public void Start()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x557D18", Offset = "0x557D18", VA = "0x557D18")]
	protected void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x557E2C", Offset = "0x557E2C", VA = "0x557E2C")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x557E34", Offset = "0x557E34", VA = "0x557E34")]
	public void LogStats()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x557F14", Offset = "0x557F14", VA = "0x557F14")]
	private void LogBasics()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x558200", Offset = "0x558200", VA = "0x558200")]
	public void OnConnectedToPhoton()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x5582D4", Offset = "0x5582D4", VA = "0x5582D4")]
	public void OnFailedToConnectToPhoton(DisconnectCause cause)
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x5583A8", Offset = "0x5583A8", VA = "0x5583A8")]
	public void OnJoinedLobby()
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x558484", Offset = "0x558484", VA = "0x558484")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x558764", Offset = "0x558764", VA = "0x558764")]
	public void OnCreatedRoom()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x558A44", Offset = "0x558A44", VA = "0x558A44")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x558AC8", Offset = "0x558AC8", VA = "0x558AC8")]
	public void OnDisconnectedFromPhoton()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x558B4C", Offset = "0x558B4C", VA = "0x558B4C")]
	public SupportLogging()
	{
	}
}
[Token(Token = "0x200008F")]
public class AchievementSample : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Text dataOutput;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public InputField getDefinitionsByNameInputField;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public InputField getProgressByNameInputField;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InputField unLockInputField;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public InputField addCountInputField;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField addFieldsInputField;

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x6E1954", Offset = "0x6E1954", VA = "0x6E1954")]
	private void Start()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x6E19C8", Offset = "0x6E19C8", VA = "0x6E19C8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x6E1A3C", Offset = "0x6E1A3C", VA = "0x6E1A3C")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x6E1C40", Offset = "0x6E1C40", VA = "0x6E1C40")]
	private void Update()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x6E1C4C", Offset = "0x6E1C4C", VA = "0x6E1C4C")]
	public void AsyncInitialize()
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x6E1CE4", Offset = "0x6E1CE4", VA = "0x6E1CE4")]
	public void GetDefinitionsByName()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x6E1F1C", Offset = "0x6E1F1C", VA = "0x6E1F1C")]
	public void GetProgressByName()
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x6E2154", Offset = "0x6E2154", VA = "0x6E2154")]
	public void GetAllDefinitions()
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x6E22A8", Offset = "0x6E22A8", VA = "0x6E22A8")]
	public void GetAllProgress()
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x6E23FC", Offset = "0x6E23FC", VA = "0x6E23FC")]
	public void UnLock()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x6E25D0", Offset = "0x6E25D0", VA = "0x6E25D0")]
	public void AddCount()
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x6E2994", Offset = "0x6E2994", VA = "0x6E2994")]
	public void AddFields()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x6E1B84", Offset = "0x6E1B84", VA = "0x6E1B84")]
	private void achievementInit()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x6E21EC", Offset = "0x6E21EC", VA = "0x6E21EC")]
	private void getAchievementAllDefinition()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x6E2340", Offset = "0x6E2340", VA = "0x6E2340")]
	private void getAchievementAllProgress()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x6E2B28", Offset = "0x6E2B28", VA = "0x6E2B28")]
	private void addFieldsAchievement(string achievementName, string fields)
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x6E2880", Offset = "0x6E2880", VA = "0x6E2880")]
	private void addCountAchievement(string achievementName, string count)
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x6E250C", Offset = "0x6E250C", VA = "0x6E250C")]
	private void unlockAchievement(string achievementName)
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x6E2090", Offset = "0x6E2090", VA = "0x6E2090")]
	private void getAchievementProgress(string[] achievementNames)
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x6E1E58", Offset = "0x6E1E58", VA = "0x6E1E58")]
	private void getAchievementDefinition(string[] achievementNames)
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x6E1AB0", Offset = "0x6E1AB0", VA = "0x6E1AB0")]
	private void printOutputLine(string newLine)
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x6E2BF4", Offset = "0x6E2BF4", VA = "0x6E2BF4")]
	private void achievementAllDefinitionCallback(Pvr_Message<Pvr_AchievementDefinitionList> msg)
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x6E35E8", Offset = "0x6E35E8", VA = "0x6E35E8")]
	private void achievementAllProgressCallback(Pvr_Message<Pvr_AchievementProgressList> msg)
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x6E3DB0", Offset = "0x6E3DB0", VA = "0x6E3DB0")]
	private void achievementFieldsCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x6E40E8", Offset = "0x6E40E8", VA = "0x6E40E8")]
	private void achievementCountCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x6E4420", Offset = "0x6E4420", VA = "0x6E4420")]
	private void achievementUnlockCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x6E4758", Offset = "0x6E4758", VA = "0x6E4758")]
	private void achievementProgressCallback(Pvr_Message<Pvr_AchievementProgressList> msg)
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x6E4DD0", Offset = "0x6E4DD0", VA = "0x6E4DD0")]
	private void achievementDefinitionCallback(Pvr_Message<Pvr_AchievementDefinitionList> msg)
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x6E54C4", Offset = "0x6E54C4", VA = "0x6E54C4")]
	private void initAchievementCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x6E57FC", Offset = "0x6E57FC", VA = "0x6E57FC")]
	private void LoginCallback(string LoginInfo)
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x6E58C4", Offset = "0x6E58C4", VA = "0x6E58C4")]
	public AchievementSample()
	{
	}
}
[Token(Token = "0x2000090")]
public class Pvr_Controller : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200060A")]
	public enum UserHandNess
	{
		[Token(Token = "0x400247D")]
		Right,
		[Token(Token = "0x400247E")]
		Left
	}

	[Token(Token = "0x200060B")]
	public enum GazeType
	{
		[Token(Token = "0x4002480")]
		Never,
		[Token(Token = "0x4002481")]
		DuringMotion,
		[Token(Token = "0x4002482")]
		Always
	}

	[Token(Token = "0x200060C")]
	public enum ControllerAxis
	{
		[Token(Token = "0x4002484")]
		Controller,
		[Token(Token = "0x4002485")]
		Wrist,
		[Token(Token = "0x4002486")]
		Elbow,
		[Token(Token = "0x4002487")]
		Shoulder
	}

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject controller0;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject controller1;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static UserHandNess handness;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public ControllerAxis Axis;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GazeType Gazetype;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x39E374", Offset = "0x39E374")]
	public float ElbowHeight;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x39E390", Offset = "0x39E390")]
	public float ElbowDepth;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x39E3AC", Offset = "0x39E3AC")]
	public float PointerTiltAngle;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float mouseX;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float mouseY;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float mouseZ;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3[] inputDirection;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39E3C8", Offset = "0x39E3C8")]
	private static Vector3 <pointerPosition>k__BackingField;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39E3D8", Offset = "0x39E3D8")]
	private static Quaternion <pointerRotation>k__BackingField;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39E3E8", Offset = "0x39E3E8")]
	private static Vector3 <elbowPosition>k__BackingField;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39E3F8", Offset = "0x39E3F8")]
	private static Quaternion <elbowRotation>k__BackingField;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39E408", Offset = "0x39E408")]
	private static Vector3 <wristPosition>k__BackingField;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39E418", Offset = "0x39E418")]
	private static Quaternion <wristRotation>k__BackingField;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39E428", Offset = "0x39E428")]
	private static Vector3 <shoulderPosition>k__BackingField;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39E438", Offset = "0x39E438")]
	private static Quaternion <shoulderRotation>k__BackingField;

	[Token(Token = "0x170000E5")]
	public static Vector3 pointerPosition
	{
		[Token(Token = "0x60004FC")]
		[Address(RVA = "0x895954", Offset = "0x895954", VA = "0x895954")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6B9C", Offset = "0x3A6B9C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60004FD")]
		[Address(RVA = "0x8959BC", Offset = "0x8959BC", VA = "0x8959BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6BAC", Offset = "0x3A6BAC")]
		set
		{
		}
	}

	[Token(Token = "0x170000E6")]
	public static Quaternion pointerRotation
	{
		[Token(Token = "0x60004FE")]
		[Address(RVA = "0x895A28", Offset = "0x895A28", VA = "0x895A28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6BBC", Offset = "0x3A6BBC")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60004FF")]
		[Address(RVA = "0x895A8C", Offset = "0x895A8C", VA = "0x895A8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6BCC", Offset = "0x3A6BCC")]
		set
		{
		}
	}

	[Token(Token = "0x170000E7")]
	public static Vector3 elbowPosition
	{
		[Token(Token = "0x6000500")]
		[Address(RVA = "0x895B00", Offset = "0x895B00", VA = "0x895B00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6BDC", Offset = "0x3A6BDC")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000501")]
		[Address(RVA = "0x895B68", Offset = "0x895B68", VA = "0x895B68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6BEC", Offset = "0x3A6BEC")]
		set
		{
		}
	}

	[Token(Token = "0x170000E8")]
	public static Quaternion elbowRotation
	{
		[Token(Token = "0x6000502")]
		[Address(RVA = "0x895BD4", Offset = "0x895BD4", VA = "0x895BD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6BFC", Offset = "0x3A6BFC")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000503")]
		[Address(RVA = "0x895C38", Offset = "0x895C38", VA = "0x895C38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6C0C", Offset = "0x3A6C0C")]
		set
		{
		}
	}

	[Token(Token = "0x170000E9")]
	public static Vector3 wristPosition
	{
		[Token(Token = "0x6000504")]
		[Address(RVA = "0x895CAC", Offset = "0x895CAC", VA = "0x895CAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6C1C", Offset = "0x3A6C1C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000505")]
		[Address(RVA = "0x895D14", Offset = "0x895D14", VA = "0x895D14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6C2C", Offset = "0x3A6C2C")]
		set
		{
		}
	}

	[Token(Token = "0x170000EA")]
	public static Quaternion wristRotation
	{
		[Token(Token = "0x6000506")]
		[Address(RVA = "0x895D80", Offset = "0x895D80", VA = "0x895D80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6C3C", Offset = "0x3A6C3C")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000507")]
		[Address(RVA = "0x895DE4", Offset = "0x895DE4", VA = "0x895DE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6C4C", Offset = "0x3A6C4C")]
		set
		{
		}
	}

	[Token(Token = "0x170000EB")]
	public static Vector3 shoulderPosition
	{
		[Token(Token = "0x6000508")]
		[Address(RVA = "0x895E58", Offset = "0x895E58", VA = "0x895E58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6C5C", Offset = "0x3A6C5C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000509")]
		[Address(RVA = "0x895EC0", Offset = "0x895EC0", VA = "0x895EC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6C6C", Offset = "0x3A6C6C")]
		set
		{
		}
	}

	[Token(Token = "0x170000EC")]
	public static Quaternion shoulderRotation
	{
		[Token(Token = "0x600050A")]
		[Address(RVA = "0x895F2C", Offset = "0x895F2C", VA = "0x895F2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6C7C", Offset = "0x3A6C7C")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x600050B")]
		[Address(RVA = "0x895F90", Offset = "0x895F90", VA = "0x895F90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6C8C", Offset = "0x3A6C8C")]
		set
		{
		}
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x892450", Offset = "0x892450", VA = "0x892450")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x8929E0", Offset = "0x8929E0", VA = "0x8929E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x892A58", Offset = "0x892A58", VA = "0x892A58")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x892FE8", Offset = "0x892FE8", VA = "0x892FE8")]
	private void MainControllerChanged(string index)
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x8930A8", Offset = "0x8930A8", VA = "0x8930A8")]
	private void HandnessChanged(string index)
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x8930AC", Offset = "0x8930AC", VA = "0x8930AC")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x892FEC", Offset = "0x892FEC", VA = "0x892FEC")]
	private void RefreshHandness()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x893114", Offset = "0x893114", VA = "0x893114")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x893318", Offset = "0x893318", VA = "0x893318")]
	private void ShowController()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x8934D8", Offset = "0x8934D8", VA = "0x8934D8")]
	private void CheckControllerState(string data)
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x8935C4", Offset = "0x8935C4", VA = "0x8935C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x8930B0", Offset = "0x8930B0", VA = "0x8930B0")]
	public static void ChangeHandNess()
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x893894", Offset = "0x893894", VA = "0x893894")]
	private void DoUpdateControler0()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x89392C", Offset = "0x89392C", VA = "0x89392C")]
	private void DoUpdateControler1()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x8939CC", Offset = "0x8939CC", VA = "0x8939CC")]
	private void UpdateControlloerRay(bool update0 = true, bool update1 = true)
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x895750", Offset = "0x895750", VA = "0x895750")]
	private Quaternion UpdateSimulatedFrameParams()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x893B90", Offset = "0x893B90", VA = "0x893B90")]
	private void SetArmParaToSo(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle)
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x893BCC", Offset = "0x893BCC", VA = "0x893BCC")]
	private void CalcArmModelfromSo(int hand)
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x8942F0", Offset = "0x8942F0", VA = "0x8942F0")]
	public void UpdateControllerDataSO(int hand)
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x896004", Offset = "0x896004", VA = "0x896004")]
	public Pvr_Controller()
	{
	}
}
[Token(Token = "0x2000091")]
public class Pvr_ControllerDemo : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject HeadSetController;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject controller0;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject controller1;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cube;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Ray ray;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private GameObject currentController;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform lastHit;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Transform currentHit;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Material normat;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private Material gazemat;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Material clickmat;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool noClick;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject referenceObj;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float rayDefaultLength;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isHasController;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool headcontrolmode;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private RaycastHit hit;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject rayLine;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private GameObject dot;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform dragObj;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float disX;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float disY;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float disZ;

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x89607C", Offset = "0x89607C", VA = "0x89607C")]
	private void Start()
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x89647C", Offset = "0x89647C", VA = "0x89647C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x8967CC", Offset = "0x8967CC", VA = "0x8967CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x898D04", Offset = "0x898D04", VA = "0x898D04")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x898DA0", Offset = "0x898DA0", VA = "0x898DA0")]
	private void ControllerStateListener(string data)
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x898E3C", Offset = "0x898E3C", VA = "0x898E3C")]
	private void CheckControllerStateForGoblin(string state)
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x898EE4", Offset = "0x898EE4", VA = "0x898EE4")]
	public void SwitchControlMode()
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x898EE8", Offset = "0x898EE8", VA = "0x898EE8")]
	public Pvr_ControllerDemo()
	{
	}
}
[Token(Token = "0x2000092")]
public class Pvr_ControllerEventsExamples : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000515")]
	[Address(RVA = "0x898EFC", Offset = "0x898EFC", VA = "0x898EFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x899168", Offset = "0x899168", VA = "0x899168")]
	private void UIPointerElementEnter(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x899234", Offset = "0x899234", VA = "0x899234")]
	private void UIPointerElementExit(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x899300", Offset = "0x899300", VA = "0x899300")]
	private void UIPointerElementClick(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x8993CC", Offset = "0x8993CC", VA = "0x8993CC")]
	private void UIPointerElementDragStart(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x899498", Offset = "0x899498", VA = "0x899498")]
	private void UIPointerElementDragEnd(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x899564", Offset = "0x899564", VA = "0x899564")]
	public Pvr_ControllerEventsExamples()
	{
	}
}
[Token(Token = "0x2000093")]
public class Pvr_ControllerInit : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200060D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B534", Offset = "0x39B534")]
	private sealed class <RefreshController>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400248A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x400248B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Pvr_ControllerInit <>4__this;

		[Token(Token = "0x1700044C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C1F")]
			[Address(RVA = "0x89BBB4", Offset = "0x89BBB4", VA = "0x89BBB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C21")]
			[Address(RVA = "0x89BC34", Offset = "0x89BC34", VA = "0x89BC34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C1C")]
		[Address(RVA = "0x89A64C", Offset = "0x89A64C", VA = "0x89A64C")]
		[DebuggerHidden]
		public <RefreshController>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6002C1D")]
		[Address(RVA = "0x89B650", Offset = "0x89B650", VA = "0x89B650", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C1E")]
		[Address(RVA = "0x89B654", Offset = "0x89B654", VA = "0x89B654", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C20")]
		[Address(RVA = "0x89BBBC", Offset = "0x89BBBC", VA = "0x89BBBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private ControllerVariety Variety;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool isCustomModel;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private GameObject goblin;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject g2;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private GameObject neo2L;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject neo2R;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private GameObject neo3L;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject neo3R;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private Material standardMat;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Material unlitMat;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int controllerType;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool loadModelSuccess;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int systemOrUnity;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private JsonData curControllerData;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private string modelName;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string texFormat;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private string prePath;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string modelFilePath;

	[Token(Token = "0x400041C")]
	private const string goblinTexbasePath = "Controller/controller1/controller1";

	[Token(Token = "0x400041D")]
	private const string g2TexbasePath = "Controller/controller3/controller3";

	[Token(Token = "0x400041E")]
	private const string neo2TexbasePath = "Controller/controller4/controller4";

	[Token(Token = "0x400041F")]
	private const string neo3TexbasePath = "Controller/controller5/controller5";

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x89956C", Offset = "0x89956C", VA = "0x89956C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x899740", Offset = "0x899740", VA = "0x899740")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x899870", Offset = "0x899870", VA = "0x899870")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x899BD8", Offset = "0x899BD8", VA = "0x899BD8")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x899E3C", Offset = "0x899E3C", VA = "0x899E3C")]
	private void LoadResFromJson()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x89A09C", Offset = "0x89A09C", VA = "0x89A09C")]
	private void CheckControllerStateForGoblin(string state)
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x89A4D4", Offset = "0x89A4D4", VA = "0x89A4D4")]
	private void CheckControllerStateOfAbility(string data)
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x89987C", Offset = "0x89987C", VA = "0x89987C")]
	private void DestroyLocalController()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x89A17C", Offset = "0x89A17C", VA = "0x89A17C")]
	private void DestroySysController()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x89A004", Offset = "0x89A004", VA = "0x89A004")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A6C9C", Offset = "0x3A6C9C")]
	private IEnumerator RefreshController(int id)
	{
		return null;
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x89A66C", Offset = "0x89A66C", VA = "0x89A66C")]
	private void LoadControllerFromPrefab()
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x89ADF8", Offset = "0x89ADF8", VA = "0x89ADF8")]
	private void LoadControllerFromSystem(int id)
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x89A9E4", Offset = "0x89A9E4", VA = "0x89A9E4")]
	private void LoadTexture(Pvr_ControllerVisual visual, string controllerName, bool fromRes)
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x89B330", Offset = "0x89B330", VA = "0x89B330")]
	private Texture2D LoadOneTexture(string filepath, bool fromRes)
	{
		return null;
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x89B458", Offset = "0x89B458", VA = "0x89B458")]
	private byte[] ReadPNG(string path)
	{
		return null;
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x89B5C8", Offset = "0x89B5C8", VA = "0x89B5C8")]
	public Pvr_ControllerInit()
	{
	}
}
[Token(Token = "0x2000094")]
public class Pvr_ControllerLink
{
	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public AndroidJavaClass javaHummingbirdClass;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AndroidJavaClass javaPico2ReceiverClass;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AndroidJavaClass javaserviceClass;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public AndroidJavaClass javavractivityclass;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AndroidJavaClass javaCVClass;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public AndroidJavaObject activity;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string gameobjname;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool picoDevice;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string hummingBirdMac;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int hummingBirdRSSI;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool goblinserviceStarted;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool neoserviceStarted;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool controller0Connected;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool controller1Connected;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int mainHandID;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Pvr_Controller.UserHandNess handness;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int controllerType;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ControllerHand Controller0;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public ControllerHand Controller1;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int platFormType;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int trackingmode;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int systemProp;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int enablehand6dofbyhead;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool switchHomeKey;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int iPhoneHMDModeEnabled;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] hbPoseData;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float[] sensorData;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int[] keyData;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int[] neo3TouchValue;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float[] fixedState;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float[] neoposeData;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int[] goblinKeyArray;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int[] neoKeyArray;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int[] neotriggerV;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float[] velocity;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float[] angularVelocity;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float[] acceData;

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x89BC3C", Offset = "0x89BC3C", VA = "0x89BC3C")]
	public Pvr_ControllerLink(string name)
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x89C090", Offset = "0x89C090", VA = "0x89C090")]
	private void StartHummingBirdService()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x89CBE4", Offset = "0x89CBE4", VA = "0x89CBE4")]
	public bool IsServiceExisted()
	{
		return default(bool);
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x89C91C", Offset = "0x89C91C", VA = "0x89C91C")]
	public void SetGameObjectToJar(string name)
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x89CA50", Offset = "0x89CA50", VA = "0x89CA50")]
	public void BindService()
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x89CDBC", Offset = "0x89CDBC", VA = "0x89CDBC")]
	public void UnBindService()
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x89CF50", Offset = "0x89CF50", VA = "0x89CF50")]
	public void StopLark2Receiver()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x89D0FC", Offset = "0x89D0FC", VA = "0x89D0FC")]
	public void StartLark2Receiver()
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x89D268", Offset = "0x89D268", VA = "0x89D268")]
	public void StopLark2Service()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x89D414", Offset = "0x89D414", VA = "0x89D414")]
	public void StartLark2Service()
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x89D60C", Offset = "0x89D60C", VA = "0x89D60C")]
	public int getHandness()
	{
		return default(int);
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x89D870", Offset = "0x89D870", VA = "0x89D870")]
	public void setHandness(int hand)
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x89D9E8", Offset = "0x89D9E8", VA = "0x89D9E8")]
	public void StartScan()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x89DB30", Offset = "0x89DB30", VA = "0x89DB30")]
	public void StopScan()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x89C770", Offset = "0x89C770", VA = "0x89C770")]
	public int GetSysproc()
	{
		return default(int);
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x89DC84", Offset = "0x89DC84", VA = "0x89DC84")]
	public void ResetController(int num)
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x89DED0", Offset = "0x89DED0", VA = "0x89DED0")]
	public void ConnectBLE()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x89E028", Offset = "0x89E028", VA = "0x89E028")]
	public void DisConnectBLE()
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x89E178", Offset = "0x89E178", VA = "0x89E178")]
	public bool StartUpgrade()
	{
		return default(bool);
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x89E2F4", Offset = "0x89E2F4", VA = "0x89E2F4")]
	public void setBinPath(string path, bool isasset)
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x89E4B0", Offset = "0x89E4B0", VA = "0x89E4B0")]
	public string GetBLEImageType()
	{
		return null;
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x89E654", Offset = "0x89E654", VA = "0x89E654")]
	public long GetBLEVersion()
	{
		return default(long);
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x89E800", Offset = "0x89E800", VA = "0x89E800")]
	public string GetFileImageType()
	{
		return null;
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x89E9A4", Offset = "0x89E9A4", VA = "0x89E9A4")]
	public long GetFileVersion()
	{
		return default(long);
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x89EB50", Offset = "0x89EB50", VA = "0x89EB50")]
	public int GetControllerConnectionState(int num)
	{
		return default(int);
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x89EF84", Offset = "0x89EF84", VA = "0x89EF84")]
	public void RebackToLauncher()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x89F1B4", Offset = "0x89F1B4", VA = "0x89F1B4")]
	public void TurnUpVolume()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x89F384", Offset = "0x89F384", VA = "0x89F384")]
	public void TurnDownVolume()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x89F554", Offset = "0x89F554", VA = "0x89F554")]
	public float[] GetHBControllerPoseData()
	{
		return null;
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x89FA9C", Offset = "0x89FA9C", VA = "0x89FA9C")]
	public float[] GetControllerSensorData()
	{
		return null;
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x89FCC4", Offset = "0x89FCC4", VA = "0x89FCC4")]
	public int[] GetControllerKeyData()
	{
		return null;
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x89FDF4", Offset = "0x89FDF4", VA = "0x89FDF4")]
	public int[] GetNeo3TouchData(int hand)
	{
		return null;
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x8A0960", Offset = "0x8A0960", VA = "0x8A0960")]
	public int GetNeo3GripValue(int hand)
	{
		return default(int);
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x8A0B24", Offset = "0x8A0B24", VA = "0x8A0B24")]
	public float[] GetControllerFixedSensorState(int hand)
	{
		return null;
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x8A13A8", Offset = "0x8A13A8", VA = "0x8A13A8")]
	public float[] GetCvControllerPoseData(int hand)
	{
		return null;
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x8A1C70", Offset = "0x8A1C70", VA = "0x8A1C70")]
	public int[] GetHBControllerKeyData()
	{
		return null;
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x8A3A60", Offset = "0x8A3A60", VA = "0x8A3A60")]
	public int GetHBKeyValue()
	{
		return default(int);
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x8A3C40", Offset = "0x8A3C40", VA = "0x8A3C40")]
	public int[] GetCvControllerKeyData(int hand)
	{
		return null;
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x8A6698", Offset = "0x8A6698", VA = "0x8A6698")]
	public int GetCVTriggerValue(int hand)
	{
		return default(int);
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x8A68A8", Offset = "0x8A68A8", VA = "0x8A68A8")]
	public void AutoConnectHbController(int scanTimeMs)
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x8A6A60", Offset = "0x8A6A60", VA = "0x8A6A60")]
	public void StartControllerThread(int headSensorState, int handSensorState)
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x8A6C60", Offset = "0x8A6C60", VA = "0x8A6C60")]
	public void StopControllerThread(int headSensorState, int handSensorState)
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x8A6E60", Offset = "0x8A6E60", VA = "0x8A6E60")]
	public void SetUnityVersionToJar(string version)
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x8A6FA4", Offset = "0x8A6FA4", VA = "0x8A6FA4")]
	public Vector3 GetVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x8A74D8", Offset = "0x8A74D8", VA = "0x8A74D8")]
	public Vector3 GetAngularVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x8A7A5C", Offset = "0x8A7A5C", VA = "0x8A7A5C")]
	public Vector3 GetAcceleration(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x8A7F3C", Offset = "0x8A7F3C", VA = "0x8A7F3C")]
	public string GetConnectedDeviceMac()
	{
		return null;
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x8A80E0", Offset = "0x8A80E0", VA = "0x8A80E0")]
	public void VibrateNeo2Controller(float strength, int time, int hand)
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x8A84BC", Offset = "0x8A84BC", VA = "0x8A84BC")]
	public int GetMainControllerIndex()
	{
		return default(int);
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x8A8674", Offset = "0x8A8674", VA = "0x8A8674")]
	public void SetMainController(int index)
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x8A87EC", Offset = "0x8A87EC", VA = "0x8A87EC")]
	public void ResetHeadSensorForController()
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x8A8948", Offset = "0x8A8948", VA = "0x8A8948")]
	public void GetDeviceVersion(int deviceType)
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x8A8ACC", Offset = "0x8A8ACC", VA = "0x8A8ACC")]
	public void GetControllerSnCode(int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x8A8C50", Offset = "0x8A8C50", VA = "0x8A8C50")]
	public void SetControllerUnbind(int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x8A8DD4", Offset = "0x8A8DD4", VA = "0x8A8DD4")]
	public void SetStationRestart()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x8A8F30", Offset = "0x8A8F30", VA = "0x8A8F30")]
	public void StartStationOtaUpdate()
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x8A908C", Offset = "0x8A908C", VA = "0x8A908C")]
	public void StartControllerOtaUpdate(int mode, int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x8A9288", Offset = "0x8A9288", VA = "0x8A9288")]
	public void EnterPairMode(int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x8A940C", Offset = "0x8A940C", VA = "0x8A940C")]
	public void SetControllerShutdown(int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x8A9590", Offset = "0x8A9590", VA = "0x8A9590")]
	public int GetStationPairState()
	{
		return default(int);
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x8A9748", Offset = "0x8A9748", VA = "0x8A9748")]
	public int GetStationOtaUpdateProgress()
	{
		return default(int);
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x8A9900", Offset = "0x8A9900", VA = "0x8A9900")]
	public int GetControllerOtaUpdateProgress()
	{
		return default(int);
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x8A9AB8", Offset = "0x8A9AB8", VA = "0x8A9AB8")]
	public void GetControllerVersionAndSN(int controllerSerialNum)
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x8A9C3C", Offset = "0x8A9C3C", VA = "0x8A9C3C")]
	public void GetControllerUniqueID()
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x8A9D98", Offset = "0x8A9D98", VA = "0x8A9D98")]
	public void InterruptStationPairMode()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x8A9EF4", Offset = "0x8A9EF4", VA = "0x8A9EF4")]
	public int GetControllerAbility(int controllerSerialNum)
	{
		return default(int);
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x8AA09C", Offset = "0x8AA09C", VA = "0x8AA09C")]
	public void SwitchHomeKey(bool state)
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x8AA158", Offset = "0x8AA158", VA = "0x8AA158")]
	public void SetBootReconnect()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x8AA2A8", Offset = "0x8AA2A8", VA = "0x8AA2A8")]
	public int GetTemperature()
	{
		return default(int);
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x8AA454", Offset = "0x8AA454", VA = "0x8AA454")]
	public int GetDeviceType()
	{
		return default(int);
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x8AA600", Offset = "0x8AA600", VA = "0x8AA600")]
	public int GetControllerType()
	{
		return default(int);
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x8AA734", Offset = "0x8AA734", VA = "0x8AA734")]
	public string GetHummingBird2SN()
	{
		return null;
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x8AA8CC", Offset = "0x8AA8CC", VA = "0x8AA8CC")]
	public string GetControllerVersion()
	{
		return null;
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x8AAA64", Offset = "0x8AAA64", VA = "0x8AAA64")]
	public bool IsEnbleTrigger()
	{
		return default(bool);
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x8AAC00", Offset = "0x8AAC00", VA = "0x8AAC00")]
	public void StartCV2PairingMode(int devicetype)
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x8AAD84", Offset = "0x8AAD84", VA = "0x8AAD84")]
	public void StopCV2PairingMode(int devicetype)
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x8AAF08", Offset = "0x8AAF08", VA = "0x8AAF08")]
	public int GetControllerBindingState(int id)
	{
		return default(int);
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x8AB098", Offset = "0x8AB098", VA = "0x8AB098")]
	public void setIsEnbleHomeKey(bool state)
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x8AB210", Offset = "0x8AB210", VA = "0x8AB210")]
	public int getControllerSensorStatus(int id)
	{
		return default(int);
	}
}
[Token(Token = "0x2000095")]
public class Pvr_ControllerManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200060E")]
	public delegate void PvrServiceStartSuccess();

	[Token(Token = "0x200060F")]
	public delegate void PvrControllerStateChanged(string data);

	[Token(Token = "0x2000610")]
	public delegate void ChangeMainControllerCallBack(string index);

	[Token(Token = "0x2000611")]
	public delegate void ChangeHandNessCallBack(string index);

	[Token(Token = "0x2000612")]
	public delegate void SetHbServiceBindState();

	[Token(Token = "0x2000613")]
	public delegate void ControllerThreadStartedCallback();

	[Token(Token = "0x2000614")]
	public delegate void SetControllerServiceBindState();

	[Token(Token = "0x2000615")]
	public delegate void ControllerStatusChange(string isconnect);

	[Token(Token = "0x2000616")]
	public delegate void SetControllerAbility(string data);

	[Token(Token = "0x2000617")]
	public delegate void SetControllerStateChanged(string data);

	[Token(Token = "0x2000618")]
	public delegate void SetHbControllerMac(string mac);

	[Token(Token = "0x2000619")]
	public delegate void ControllerDeviceVersionCallback(string data);

	[Token(Token = "0x200061A")]
	public delegate void ControllerSnCodeCallback(string data);

	[Token(Token = "0x200061B")]
	public delegate void ControllerUnbindCallback(string status);

	[Token(Token = "0x200061C")]
	public delegate void ControllerStationStatusCallback(string status);

	[Token(Token = "0x200061D")]
	public delegate void ControllerStationBusyCallback(string status);

	[Token(Token = "0x200061E")]
	public delegate void ControllerOtaStartCodeCallback(string data);

	[Token(Token = "0x200061F")]
	public delegate void ControllerDeviceVersionAndSNCallback(string data);

	[Token(Token = "0x2000620")]
	public delegate void ControllerUniqueIDCallback(string data);

	[Token(Token = "0x2000621")]
	public delegate void ControllerCombinedKeyUnbindCallback(string data);

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_ControllerManager instance;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static Pvr_ControllerLink controllerlink;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private float cTime;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool stopConnect;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Text toast;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool controllerServicestate;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float disConnectTime;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool LengthAdaptiveRay;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float[] sensorData;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int[] keyData;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float[] g2SensorData;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int[] g2KeyData;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int keyOffset;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int rotControllerMode;

	[Token(Token = "0x170000ED")]
	public static Pvr_ControllerManager Instance
	{
		[Token(Token = "0x600057B")]
		[Address(RVA = "0x895494", Offset = "0x895494", VA = "0x895494")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000002")]
	public static event PvrServiceStartSuccess PvrServiceStartSuccessEvent
	{
		[Token(Token = "0x600057C")]
		[Address(RVA = "0x8925C0", Offset = "0x8925C0", VA = "0x8925C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6D0C", Offset = "0x3A6D0C")]
		add
		{
		}
		[Token(Token = "0x600057D")]
		[Address(RVA = "0x892BC8", Offset = "0x892BC8", VA = "0x892BC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6D1C", Offset = "0x3A6D1C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public static event PvrControllerStateChanged PvrControllerStateChangedEvent
	{
		[Token(Token = "0x600057E")]
		[Address(RVA = "0x8AB3A0", Offset = "0x8AB3A0", VA = "0x8AB3A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6D2C", Offset = "0x3A6D2C")]
		add
		{
		}
		[Token(Token = "0x600057F")]
		[Address(RVA = "0x8AB4A8", Offset = "0x8AB4A8", VA = "0x8AB4A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6D3C", Offset = "0x3A6D3C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public static event ChangeMainControllerCallBack ChangeMainControllerCallBackEvent
	{
		[Token(Token = "0x6000580")]
		[Address(RVA = "0x8927D0", Offset = "0x8927D0", VA = "0x8927D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6D4C", Offset = "0x3A6D4C")]
		add
		{
		}
		[Token(Token = "0x6000581")]
		[Address(RVA = "0x892DD8", Offset = "0x892DD8", VA = "0x892DD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6D5C", Offset = "0x3A6D5C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public static event ChangeHandNessCallBack ChangeHandNessCallBackEvent
	{
		[Token(Token = "0x6000582")]
		[Address(RVA = "0x8928D8", Offset = "0x8928D8", VA = "0x8928D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6D6C", Offset = "0x3A6D6C")]
		add
		{
		}
		[Token(Token = "0x6000583")]
		[Address(RVA = "0x892EE0", Offset = "0x892EE0", VA = "0x892EE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6D7C", Offset = "0x3A6D7C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public static event SetHbServiceBindState SetHbServiceBindStateEvent
	{
		[Token(Token = "0x6000584")]
		[Address(RVA = "0x8AB5B0", Offset = "0x8AB5B0", VA = "0x8AB5B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6D8C", Offset = "0x3A6D8C")]
		add
		{
		}
		[Token(Token = "0x6000585")]
		[Address(RVA = "0x8AB6B8", Offset = "0x8AB6B8", VA = "0x8AB6B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6D9C", Offset = "0x3A6D9C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public static event ControllerThreadStartedCallback ControllerThreadStartedCallbackEvent
	{
		[Token(Token = "0x6000586")]
		[Address(RVA = "0x8AB7C0", Offset = "0x8AB7C0", VA = "0x8AB7C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6DAC", Offset = "0x3A6DAC")]
		add
		{
		}
		[Token(Token = "0x6000587")]
		[Address(RVA = "0x8AB8C8", Offset = "0x8AB8C8", VA = "0x8AB8C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6DBC", Offset = "0x3A6DBC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public static event SetControllerServiceBindState SetControllerServiceBindStateEvent
	{
		[Token(Token = "0x6000588")]
		[Address(RVA = "0x8AB9D0", Offset = "0x8AB9D0", VA = "0x8AB9D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6DCC", Offset = "0x3A6DCC")]
		add
		{
		}
		[Token(Token = "0x6000589")]
		[Address(RVA = "0x8ABAD8", Offset = "0x8ABAD8", VA = "0x8ABAD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6DDC", Offset = "0x3A6DDC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public static event ControllerStatusChange ControllerStatusChangeEvent
	{
		[Token(Token = "0x600058A")]
		[Address(RVA = "0x896374", Offset = "0x896374", VA = "0x896374")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6DEC", Offset = "0x3A6DEC")]
		add
		{
		}
		[Token(Token = "0x600058B")]
		[Address(RVA = "0x8966C4", Offset = "0x8966C4", VA = "0x8966C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6DFC", Offset = "0x3A6DFC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public static event SetControllerAbility SetControllerAbilityEvent
	{
		[Token(Token = "0x600058C")]
		[Address(RVA = "0x8926C8", Offset = "0x8926C8", VA = "0x8926C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6E0C", Offset = "0x3A6E0C")]
		add
		{
		}
		[Token(Token = "0x600058D")]
		[Address(RVA = "0x892CD0", Offset = "0x892CD0", VA = "0x892CD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6E1C", Offset = "0x3A6E1C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public static event SetControllerStateChanged SetControllerStateChangedEvent
	{
		[Token(Token = "0x600058E")]
		[Address(RVA = "0x89626C", Offset = "0x89626C", VA = "0x89626C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6E2C", Offset = "0x3A6E2C")]
		add
		{
		}
		[Token(Token = "0x600058F")]
		[Address(RVA = "0x8965BC", Offset = "0x8965BC", VA = "0x8965BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6E3C", Offset = "0x3A6E3C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public static event SetHbControllerMac SetHbControllerMacEvent
	{
		[Token(Token = "0x6000590")]
		[Address(RVA = "0x8ABBE0", Offset = "0x8ABBE0", VA = "0x8ABBE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6E4C", Offset = "0x3A6E4C")]
		add
		{
		}
		[Token(Token = "0x6000591")]
		[Address(RVA = "0x8ABCE8", Offset = "0x8ABCE8", VA = "0x8ABCE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6E5C", Offset = "0x3A6E5C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public static event ControllerDeviceVersionCallback ControllerDeviceVersionCallbackEvent
	{
		[Token(Token = "0x6000592")]
		[Address(RVA = "0x8ABDF0", Offset = "0x8ABDF0", VA = "0x8ABDF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6E6C", Offset = "0x3A6E6C")]
		add
		{
		}
		[Token(Token = "0x6000593")]
		[Address(RVA = "0x8ABEF8", Offset = "0x8ABEF8", VA = "0x8ABEF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6E7C", Offset = "0x3A6E7C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public static event ControllerSnCodeCallback ControllerSnCodeCallbackEvent
	{
		[Token(Token = "0x6000594")]
		[Address(RVA = "0x8AC000", Offset = "0x8AC000", VA = "0x8AC000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6E8C", Offset = "0x3A6E8C")]
		add
		{
		}
		[Token(Token = "0x6000595")]
		[Address(RVA = "0x8AC108", Offset = "0x8AC108", VA = "0x8AC108")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6E9C", Offset = "0x3A6E9C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public static event ControllerUnbindCallback ControllerUnbindCallbackEvent
	{
		[Token(Token = "0x6000596")]
		[Address(RVA = "0x8AC210", Offset = "0x8AC210", VA = "0x8AC210")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6EAC", Offset = "0x3A6EAC")]
		add
		{
		}
		[Token(Token = "0x6000597")]
		[Address(RVA = "0x8AC318", Offset = "0x8AC318", VA = "0x8AC318")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6EBC", Offset = "0x3A6EBC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public static event ControllerStationStatusCallback ControllerStationStatusCallbackEvent
	{
		[Token(Token = "0x6000598")]
		[Address(RVA = "0x8AC420", Offset = "0x8AC420", VA = "0x8AC420")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6ECC", Offset = "0x3A6ECC")]
		add
		{
		}
		[Token(Token = "0x6000599")]
		[Address(RVA = "0x8AC528", Offset = "0x8AC528", VA = "0x8AC528")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6EDC", Offset = "0x3A6EDC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	public static event ControllerStationBusyCallback ControllerStationBusyCallbackEvent
	{
		[Token(Token = "0x600059A")]
		[Address(RVA = "0x8AC630", Offset = "0x8AC630", VA = "0x8AC630")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6EEC", Offset = "0x3A6EEC")]
		add
		{
		}
		[Token(Token = "0x600059B")]
		[Address(RVA = "0x8AC738", Offset = "0x8AC738", VA = "0x8AC738")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6EFC", Offset = "0x3A6EFC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public static event ControllerOtaStartCodeCallback ControllerOtaStartCodeCallbackEvent
	{
		[Token(Token = "0x600059C")]
		[Address(RVA = "0x8AC840", Offset = "0x8AC840", VA = "0x8AC840")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6F0C", Offset = "0x3A6F0C")]
		add
		{
		}
		[Token(Token = "0x600059D")]
		[Address(RVA = "0x8AC948", Offset = "0x8AC948", VA = "0x8AC948")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6F1C", Offset = "0x3A6F1C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public static event ControllerDeviceVersionAndSNCallback ControllerDeviceVersionAndSNCallbackEvent
	{
		[Token(Token = "0x600059E")]
		[Address(RVA = "0x8ACA50", Offset = "0x8ACA50", VA = "0x8ACA50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6F2C", Offset = "0x3A6F2C")]
		add
		{
		}
		[Token(Token = "0x600059F")]
		[Address(RVA = "0x8ACB58", Offset = "0x8ACB58", VA = "0x8ACB58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6F3C", Offset = "0x3A6F3C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000014")]
	public static event ControllerUniqueIDCallback ControllerUniqueIDCallbackEvent
	{
		[Token(Token = "0x60005A0")]
		[Address(RVA = "0x8ACC60", Offset = "0x8ACC60", VA = "0x8ACC60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6F4C", Offset = "0x3A6F4C")]
		add
		{
		}
		[Token(Token = "0x60005A1")]
		[Address(RVA = "0x8ACD68", Offset = "0x8ACD68", VA = "0x8ACD68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6F5C", Offset = "0x3A6F5C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	public static event ControllerCombinedKeyUnbindCallback ControllerCombinedKeyUnbindCallbackEvent
	{
		[Token(Token = "0x60005A2")]
		[Address(RVA = "0x8ACE70", Offset = "0x8ACE70", VA = "0x8ACE70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6F6C", Offset = "0x3A6F6C")]
		add
		{
		}
		[Token(Token = "0x60005A3")]
		[Address(RVA = "0x8ACF78", Offset = "0x8ACF78", VA = "0x8ACF78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6F7C", Offset = "0x3A6F7C")]
		remove
		{
		}
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x8AD080", Offset = "0x8AD080", VA = "0x8AD080")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x8AD404", Offset = "0x8AD404", VA = "0x8AD404")]
	private void Start()
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x8AD4CC", Offset = "0x8AD4CC", VA = "0x8AD4CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x8B0200", Offset = "0x8B0200", VA = "0x8B0200")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x8B07D0", Offset = "0x8B07D0", VA = "0x8B07D0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x8B08CC", Offset = "0x8B08CC", VA = "0x8B08CC")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x8B0A64", Offset = "0x8B0A64", VA = "0x8B0A64")]
	public void StopLark2Service()
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x8B0B28", Offset = "0x8B0B28", VA = "0x8B0B28")]
	public Vector3 GetAngularVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x8B0C2C", Offset = "0x8B0C2C", VA = "0x8B0C2C")]
	public Vector3 GetAcceleration(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x8AD340", Offset = "0x8AD340", VA = "0x8AD340")]
	public void BindService()
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x8B0D30", Offset = "0x8B0D30", VA = "0x8B0D30")]
	public void StartScan()
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x8B0DF4", Offset = "0x8B0DF4", VA = "0x8B0DF4")]
	public void StopScan()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x8B0EB8", Offset = "0x8B0EB8", VA = "0x8B0EB8")]
	public void ResetController(int num)
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x8B073C", Offset = "0x8B073C", VA = "0x8B073C")]
	public static int GetControllerConnectionState(int num)
	{
		return default(int);
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x8B0F84", Offset = "0x8B0F84", VA = "0x8B0F84")]
	public void ConnectBLE()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x8B1048", Offset = "0x8B1048", VA = "0x8B1048")]
	public void DisConnectBLE()
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x8B110C", Offset = "0x8B110C", VA = "0x8B110C")]
	public void SetBinPath(string path, bool isAsset)
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x8B11E0", Offset = "0x8B11E0", VA = "0x8B11E0")]
	public void StartUpgrade()
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x8B12A0", Offset = "0x8B12A0", VA = "0x8B12A0")]
	public static string GetBLEImageType()
	{
		return null;
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x8B132C", Offset = "0x8B132C", VA = "0x8B132C")]
	public static long GetBLEVersion()
	{
		return default(long);
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x8B13B8", Offset = "0x8B13B8", VA = "0x8B13B8")]
	public static string GetFileImageType()
	{
		return null;
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x8B1444", Offset = "0x8B1444", VA = "0x8B1444")]
	public static long GetFileVersion()
	{
		return default(long);
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x8B14D0", Offset = "0x8B14D0", VA = "0x8B14D0")]
	public static void AutoConnectHbController(int scans)
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x8B159C", Offset = "0x8B159C", VA = "0x8B159C")]
	public static string GetConnectedDeviceMac()
	{
		return null;
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x8B1674", Offset = "0x8B1674", VA = "0x8B1674")]
	public void setHbControllerMac(string mac)
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x8B1878", Offset = "0x8B1878", VA = "0x8B1878")]
	public int GetControllerRSSI()
	{
		return default(int);
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x8B1900", Offset = "0x8B1900", VA = "0x8B1900")]
	public void setHbServiceBindState(string state)
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x8B1C5C", Offset = "0x8B1C5C", VA = "0x8B1C5C")]
	public void setControllerServiceBindState(string state)
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x8B1F88", Offset = "0x8B1F88", VA = "0x8B1F88")]
	public void setHbControllerConnectState(string isconnect)
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x8B22E4", Offset = "0x8B22E4", VA = "0x8B22E4")]
	public void setControllerStateChanged(string state)
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x8B2A70", Offset = "0x8B2A70", VA = "0x8B2A70")]
	public void setControllerAbility(string data)
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x8B2B98", Offset = "0x8B2B98", VA = "0x8B2B98")]
	public void controllerThreadStartedCallback()
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x8B3134", Offset = "0x8B3134", VA = "0x8B3134")]
	public void controllerDeviceVersionCallback(string data)
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x8B325C", Offset = "0x8B325C", VA = "0x8B325C")]
	public void controllerSnCodeCallback(string data)
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x8B3384", Offset = "0x8B3384", VA = "0x8B3384")]
	public void controllerUnbindCallback(string status)
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x8B34AC", Offset = "0x8B34AC", VA = "0x8B34AC")]
	public void controllerStationStatusCallback(string status)
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x8B35D4", Offset = "0x8B35D4", VA = "0x8B35D4")]
	public void controllerStationBusyCallback(string status)
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x8B36FC", Offset = "0x8B36FC", VA = "0x8B36FC")]
	public void controllerOTAStartCodeCallback(string data)
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x8B3824", Offset = "0x8B3824", VA = "0x8B3824")]
	public void controllerDeviceVersionAndSNCallback(string data)
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x8B394C", Offset = "0x8B394C", VA = "0x8B394C")]
	public void controllerUniqueIDCallback(string data)
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x8B3A74", Offset = "0x8B3A74", VA = "0x8B3A74")]
	public void controllerCombinedKeyUnbindCallback(string controllerSerialNum)
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x8B3B44", Offset = "0x8B3B44", VA = "0x8B3B44")]
	public void setupdateFailed()
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x8B3B48", Offset = "0x8B3B48", VA = "0x8B3B48")]
	public void setupdateSuccess()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x8B3B4C", Offset = "0x8B3B4C", VA = "0x8B3B4C")]
	public void setupdateProgress(string progress)
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x8B3B50", Offset = "0x8B3B50", VA = "0x8B3B50")]
	public void setHbAutoConnectState(string state)
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x8B3ED4", Offset = "0x8B3ED4", VA = "0x8B3ED4")]
	public void callbackControllerServiceState(string state)
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x8B4040", Offset = "0x8B4040", VA = "0x8B4040")]
	public void changeMainControllerCallback(string index)
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x8B41C4", Offset = "0x8B41C4", VA = "0x8B41C4")]
	public void changeHandnessCallback(string index)
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x8B3CC4", Offset = "0x8B3CC4", VA = "0x8B3CC4")]
	private void ShowToast(int type)
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x8B4348", Offset = "0x8B4348", VA = "0x8B4348")]
	private void HideToast()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x8B4408", Offset = "0x8B4408", VA = "0x8B4408")]
	private void CheckControllerService()
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x8B2D28", Offset = "0x8B2D28", VA = "0x8B2D28")]
	private void GetCVControllerState()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x8AF890", Offset = "0x8AF890", VA = "0x8AF890")]
	private void SetSystemKey()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x8AF334", Offset = "0x8AF334", VA = "0x8AF334")]
	private void TransformData(ControllerHand hand, int handId, int[] data)
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x8B441C", Offset = "0x8B441C", VA = "0x8B441C")]
	private void TransSingleKey(PvrControllerKey key, int beginIndex, int[] data)
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x8B45A0", Offset = "0x8B45A0", VA = "0x8B45A0")]
	private void TransformTouchData(ControllerHand hand, int handId, int[] data)
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x8B46C4", Offset = "0x8B46C4", VA = "0x8B46C4")]
	private void TransSingleTouchValue(PvrControllerKey key, int beginIndex, int[] data)
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x8B47E8", Offset = "0x8B47E8", VA = "0x8B47E8")]
	public Pvr_ControllerManager()
	{
	}
}
[Token(Token = "0x2000096")]
public class Pvr_ControllerModuleInit : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000622")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B544", Offset = "0x39B544")]
	private sealed class <ShowOrHideRay>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400248C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400248D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400248E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Pvr_ControllerModuleInit <>4__this;

		[Token(Token = "0x400248F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int id;

		[Token(Token = "0x1700044E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C75")]
			[Address(RVA = "0xD12FDC", Offset = "0xD12FDC", VA = "0xD12FDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C77")]
			[Address(RVA = "0xD1305C", Offset = "0xD1305C", VA = "0xD1305C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C72")]
		[Address(RVA = "0xD12A5C", Offset = "0xD12A5C", VA = "0xD12A5C")]
		[DebuggerHidden]
		public <ShowOrHideRay>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002C73")]
		[Address(RVA = "0xD12EE4", Offset = "0xD12EE4", VA = "0xD12EE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C74")]
		[Address(RVA = "0xD12EE8", Offset = "0xD12EE8", VA = "0xD12EE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C76")]
		[Address(RVA = "0xD12FE4", Offset = "0xD12FE4", VA = "0xD12FE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public ControllerVariety Variety;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool IsCustomModel;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private GameObject dot;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject rayLine;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private GameObject controller;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool moduleState;

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xD12490", Offset = "0xD12490", VA = "0xD12490")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xD126C8", Offset = "0xD126C8", VA = "0xD126C8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xD127F4", Offset = "0xD127F4", VA = "0xD127F4")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xD12858", Offset = "0xD12858", VA = "0xD12858")]
	private void ControllerStateChanged(string data)
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xD129C0", Offset = "0xD129C0", VA = "0xD129C0")]
	private void MainControllerIDChanged(string data)
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xD127F8", Offset = "0xD127F8", VA = "0xD127F8")]
	private void RefreshRay()
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xD129C4", Offset = "0xD129C4", VA = "0xD129C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A6F8C", Offset = "0x3A6F8C")]
	private IEnumerator ShowOrHideRay(int id)
	{
		return null;
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xD12A7C", Offset = "0xD12A7C", VA = "0xD12A7C")]
	public void ForceHideOrShow(bool state)
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xD12BD0", Offset = "0xD12BD0", VA = "0xD12BD0")]
	public void UpdateRay()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xD12ED4", Offset = "0xD12ED4", VA = "0xD12ED4")]
	public Pvr_ControllerModuleInit()
	{
	}
}
[Token(Token = "0x2000097")]
public class Pvr_ControllerPower : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private Sprite power1;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private Sprite power2;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private Sprite power3;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Sprite power4;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Sprite power5;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public ControllerDevice currentDevice;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Image powerImage;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int powerValue;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float power;

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xD13064", Offset = "0xD13064", VA = "0xD13064")]
	private void Start()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xD13180", Offset = "0xD13180", VA = "0xD13180")]
	private void Update()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xD131B4", Offset = "0xD131B4", VA = "0xD131B4")]
	private void RefreshPower(int hand)
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xD132F4", Offset = "0xD132F4", VA = "0xD132F4")]
	public Pvr_ControllerPower()
	{
	}
}
[Token(Token = "0x2000098")]
public class Pvr_ControllerVisual : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public ControllerDevice currentDevice;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Texture2D m_idle;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Texture2D m_app;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D m_home;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Texture2D m_touchpad;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D m_volUp;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Texture2D m_volDn;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D m_trigger;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Texture2D m_a;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D m_b;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Texture2D m_x;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D m_y;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Texture2D m_grip;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Renderer controllerRenderMat;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xD132FC", Offset = "0xD132FC", VA = "0xD132FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xD1335C", Offset = "0xD1335C", VA = "0xD1335C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xD133EC", Offset = "0xD133EC", VA = "0xD133EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xD13420", Offset = "0xD13420", VA = "0xD13420")]
	private void ChangeKeyEffects(int hand)
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xD1384C", Offset = "0xD1384C", VA = "0xD1384C")]
	public Pvr_ControllerVisual()
	{
	}
}
[Token(Token = "0x2000099")]
public class Pvr_ToolTips : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000623")]
	public enum TipBtn
	{
		[Token(Token = "0x4002491")]
		app,
		[Token(Token = "0x4002492")]
		touchpad,
		[Token(Token = "0x4002493")]
		home,
		[Token(Token = "0x4002494")]
		volup,
		[Token(Token = "0x4002495")]
		voldown,
		[Token(Token = "0x4002496")]
		trigger,
		[Token(Token = "0x4002497")]
		grip
	}

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private ControllerDevice currentDevice;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float tipsAlpha;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Pvr_ToolTips tooltips;

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xD19FC8", Offset = "0xD19FC8", VA = "0xD19FC8")]
	public void ChangeTipsText(TipBtn tip, string key)
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xD1A1D8", Offset = "0xD1A1D8", VA = "0xD1A1D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xD1A268", Offset = "0xD1A268", VA = "0xD1A268")]
	private void Update()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0xD1A594", Offset = "0xD1A594", VA = "0xD1A594")]
	private void LoadTextFromJson()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0xD1AB48", Offset = "0xD1AB48", VA = "0xD1AB48")]
	public static void RefreshTips()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0xD1AC04", Offset = "0xD1AC04", VA = "0xD1AC04")]
	public Pvr_ToolTips()
	{
	}
}
[Token(Token = "0x200009A")]
public class Pvr_TouchPadScroll : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private ScrollRect scrollRect;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool isHoving;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int mainHand;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SwipeDirection direction;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector2 currPos;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector2 tarPos;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float lerpSpeed;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform tranViewport;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float ignoreDis;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2 lastTouchDownPos;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector2 lastTouchUpPos;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isTouching;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool isClosed;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector2 vecOrigin;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector2 vecOriginNeo2;

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xD1AC0C", Offset = "0xD1AC0C", VA = "0xD1AC0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0xD1ACC4", Offset = "0xD1ACC4", VA = "0xD1ACC4")]
	private void Update()
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0xD1B278", Offset = "0xD1B278", VA = "0xD1B278")]
	private bool IsControllerConnect()
	{
		return default(bool);
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0xD1AE4C", Offset = "0xD1AE4C", VA = "0xD1AE4C")]
	private void UpdateTargetPos()
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0xD1B4C0", Offset = "0xD1B4C0", VA = "0xD1B4C0")]
	private void ComputeTouchPos()
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0xD1B998", Offset = "0xD1B998", VA = "0xD1B998")]
	private void ComputeRockerPos()
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xD1BE7C", Offset = "0xD1BE7C", VA = "0xD1BE7C")]
	private bool VerifyNeo2TouchValid(Vector2 nowTouchPos)
	{
		return default(bool);
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xD1AFE0", Offset = "0xD1AFE0", VA = "0xD1AFE0")]
	private void UpdatePos()
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xD1B38C", Offset = "0xD1B38C", VA = "0xD1B38C")]
	private void ResetParameter()
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xD1ACE8", Offset = "0xD1ACE8", VA = "0xD1ACE8")]
	private void Process()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xD1BED4", Offset = "0xD1BED4", VA = "0xD1BED4")]
	private bool IsHovering(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xD1C12C", Offset = "0xD1C12C", VA = "0xD1C12C")]
	private bool FindTree(Transform tran)
	{
		return default(bool);
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0xD1C22C", Offset = "0xD1C22C", VA = "0xD1C22C")]
	public Pvr_TouchPadScroll()
	{
	}
}
[Token(Token = "0x200009B")]
public class Pvr_TouchVisual : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[HideInInspector]
	public ControllerDevice currentDevice;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private MeshRenderer touchRenderer;

	[Token(Token = "0x6000605")]
	[Address(RVA = "0xD1C318", Offset = "0xD1C318", VA = "0xD1C318")]
	private void Start()
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xD1C3F4", Offset = "0xD1C3F4", VA = "0xD1C3F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xD1C428", Offset = "0xD1C428", VA = "0xD1C428")]
	private void ChangeEffects(int hand)
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xD1C550", Offset = "0xD1C550", VA = "0xD1C550")]
	public Pvr_TouchVisual()
	{
	}
}
[Token(Token = "0x200009C")]
public class DemoController : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000624")]
	public delegate void showLoadingEventHandler();

	[Token(Token = "0x2000625")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B554", Offset = "0x39B554")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x4002498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject btnObj;

		[Token(Token = "0x4002499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public DemoController <>4__this;

		[Token(Token = "0x6002C7C")]
		[Address(RVA = "0x7EA79C", Offset = "0x7EA79C", VA = "0x7EA79C")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x6002C7D")]
		[Address(RVA = "0x7EB2EC", Offset = "0x7EB2EC", VA = "0x7EB2EC")]
		internal void <InitDelegate>b__0()
		{
		}
	}

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Callback callback;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameObject msg;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Pvr_UnitySDKManager picoVrManager;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string currentOrderID;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject loading;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject BG;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject InputPanel;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static showLoadingEventHandler showLoading;

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x7E9E28", Offset = "0x7E9E28", VA = "0x7E9E28")]
	private void Awake()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x7EA024", Offset = "0x7EA024", VA = "0x7EA024")]
	private void Start()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x7EA5DC", Offset = "0x7EA5DC", VA = "0x7EA5DC")]
	private void Update()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x7EA114", Offset = "0x7EA114", VA = "0x7EA114")]
	private void InitDelegate()
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x7EA7A4", Offset = "0x7EA7A4", VA = "0x7EA7A4")]
	private void OnClick(GameObject btnObj)
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x7EAC14", Offset = "0x7EAC14", VA = "0x7EAC14")]
	public string getRamdomTestOrderID()
	{
		return null;
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x7EABC4", Offset = "0x7EABC4", VA = "0x7EABC4")]
	private void StartLoading()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x7EAC58", Offset = "0x7EAC58", VA = "0x7EAC58")]
	public void StopLoading()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x7EADA0", Offset = "0x7EADA0", VA = "0x7EADA0")]
	public void DoPayByCode()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x7EB1C4", Offset = "0x7EB1C4", VA = "0x7EB1C4")]
	private bool VerifyLocalToken()
	{
		return default(bool);
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x7EB2E4", Offset = "0x7EB2E4", VA = "0x7EB2E4")]
	public DemoController()
	{
	}
}
[Token(Token = "0x200009D")]
public class LoadingRatation : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000614")]
	[Address(RVA = "0x6C3918", Offset = "0x6C3918", VA = "0x6C3918")]
	private void Start()
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x6C391C", Offset = "0x6C391C", VA = "0x6C391C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x6C39A8", Offset = "0x6C39A8", VA = "0x6C39A8")]
	public LoadingRatation()
	{
	}
}
[Token(Token = "0x200009E")]
public class InputManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000626")]
	public delegate void doEnterEventHandler();

	[Token(Token = "0x2000627")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B564", Offset = "0x39B564")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x400249A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject btnObj;

		[Token(Token = "0x400249B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public InputManager <>4__this;

		[Token(Token = "0x6002C82")]
		[Address(RVA = "0x862F78", Offset = "0x862F78", VA = "0x862F78")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x6002C83")]
		[Address(RVA = "0x863E94", Offset = "0x863E94", VA = "0x863E94")]
		internal void <InitKeyBoard>b__0()
		{
		}
	}

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static doEnterEventHandler doEnter;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private StringBuilder sb;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private ArrayList btnsName;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private GameObject enter;

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x8623A0", Offset = "0x8623A0", VA = "0x8623A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x862F70", Offset = "0x862F70", VA = "0x862F70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x862F74", Offset = "0x862F74", VA = "0x862F74")]
	private void Update()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x8623A4", Offset = "0x8623A4", VA = "0x8623A4")]
	private void InitKeyBoard()
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x862F80", Offset = "0x862F80", VA = "0x862F80")]
	private void OnClick(GameObject btnObj)
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x863CBC", Offset = "0x863CBC", VA = "0x863CBC")]
	private void EnterChar(string s)
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x8632CC", Offset = "0x8632CC", VA = "0x8632CC")]
	private void DoCapslock(bool IsUpper)
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x8639D4", Offset = "0x8639D4", VA = "0x8639D4")]
	private void ClearBuffer()
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x863DFC", Offset = "0x863DFC", VA = "0x863DFC")]
	public InputManager()
	{
	}
}
[Token(Token = "0x200009F")]
public class Callback : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string IS_SUCCESS;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static string MSG;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string CODE;

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x683CA4", Offset = "0x683CA4", VA = "0x683CA4")]
	public void LoginCallback(string LoginInfo)
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x68416C", Offset = "0x68416C", VA = "0x68416C")]
	public void QueryOrPayCallback(string queryOrPayInfo)
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x684458", Offset = "0x684458", VA = "0x684458")]
	public void UserInfoCallback(string userInfo)
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x683F78", Offset = "0x683F78", VA = "0x683F78")]
	public void SetMassage(string massage)
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x68454C", Offset = "0x68454C", VA = "0x68454C")]
	public GameObject GetCurrentGameObject()
	{
		return null;
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x6845A4", Offset = "0x6845A4", VA = "0x6845A4")]
	public void ActivityForResultCallback(string activity)
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x684710", Offset = "0x684710", VA = "0x684710")]
	public Callback()
	{
	}
}
[Token(Token = "0x20000A0")]
public class CommonDic
{
	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CommonDic dic;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static Dictionary<string, string> mydic;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private string _app_ID;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private string _app_Key;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string _user_token;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private string _access_token;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _open_id;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private string _refresh_token;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _expires_in;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private string _user_info;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _subject;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private string _body;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _order_id;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private string _total;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string _goods_tag;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private string _notify_url;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _trade_type;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private string _pay_code;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _order_info;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private string _code;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _msg;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private string _merchant_ID;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string _payKey;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private string _isSuucess;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string _loginMsg;

	[Token(Token = "0x170000EE")]
	public string subject
	{
		[Token(Token = "0x600062C")]
		[Address(RVA = "0x688D8C", Offset = "0x688D8C", VA = "0x688D8C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600062D")]
		[Address(RVA = "0x688D94", Offset = "0x688D94", VA = "0x688D94")]
		set
		{
		}
	}

	[Token(Token = "0x170000EF")]
	public string body
	{
		[Token(Token = "0x600062E")]
		[Address(RVA = "0x688D9C", Offset = "0x688D9C", VA = "0x688D9C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600062F")]
		[Address(RVA = "0x688DA4", Offset = "0x688DA4", VA = "0x688DA4")]
		set
		{
		}
	}

	[Token(Token = "0x170000F0")]
	public string order_id
	{
		[Token(Token = "0x6000630")]
		[Address(RVA = "0x688DAC", Offset = "0x688DAC", VA = "0x688DAC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000631")]
		[Address(RVA = "0x688DB4", Offset = "0x688DB4", VA = "0x688DB4")]
		set
		{
		}
	}

	[Token(Token = "0x170000F1")]
	public string total
	{
		[Token(Token = "0x6000632")]
		[Address(RVA = "0x688DBC", Offset = "0x688DBC", VA = "0x688DBC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000633")]
		[Address(RVA = "0x688DC4", Offset = "0x688DC4", VA = "0x688DC4")]
		set
		{
		}
	}

	[Token(Token = "0x170000F2")]
	public string goods_tag
	{
		[Token(Token = "0x6000634")]
		[Address(RVA = "0x688DCC", Offset = "0x688DCC", VA = "0x688DCC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000635")]
		[Address(RVA = "0x688DD4", Offset = "0x688DD4", VA = "0x688DD4")]
		set
		{
		}
	}

	[Token(Token = "0x170000F3")]
	public string notify_url
	{
		[Token(Token = "0x6000636")]
		[Address(RVA = "0x688DDC", Offset = "0x688DDC", VA = "0x688DDC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000637")]
		[Address(RVA = "0x688DE4", Offset = "0x688DE4", VA = "0x688DE4")]
		set
		{
		}
	}

	[Token(Token = "0x170000F4")]
	public string pay_code
	{
		[Token(Token = "0x6000638")]
		[Address(RVA = "0x688DEC", Offset = "0x688DEC", VA = "0x688DEC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000639")]
		[Address(RVA = "0x688DF4", Offset = "0x688DF4", VA = "0x688DF4")]
		set
		{
		}
	}

	[Token(Token = "0x170000F5")]
	public string trade_type
	{
		[Token(Token = "0x600063A")]
		[Address(RVA = "0x688DFC", Offset = "0x688DFC", VA = "0x688DFC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600063B")]
		[Address(RVA = "0x688E04", Offset = "0x688E04", VA = "0x688E04")]
		set
		{
		}
	}

	[Token(Token = "0x170000F6")]
	public string user_token
	{
		[Token(Token = "0x600063C")]
		[Address(RVA = "0x688E0C", Offset = "0x688E0C", VA = "0x688E0C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600063D")]
		[Address(RVA = "0x688E14", Offset = "0x688E14", VA = "0x688E14")]
		set
		{
		}
	}

	[Token(Token = "0x170000F7")]
	public string access_token
	{
		[Token(Token = "0x600063E")]
		[Address(RVA = "0x688E1C", Offset = "0x688E1C", VA = "0x688E1C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600063F")]
		[Address(RVA = "0x688E24", Offset = "0x688E24", VA = "0x688E24")]
		set
		{
		}
	}

	[Token(Token = "0x170000F8")]
	public string open_id
	{
		[Token(Token = "0x6000640")]
		[Address(RVA = "0x688E2C", Offset = "0x688E2C", VA = "0x688E2C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000641")]
		[Address(RVA = "0x688E34", Offset = "0x688E34", VA = "0x688E34")]
		set
		{
		}
	}

	[Token(Token = "0x170000F9")]
	public string refresh_token
	{
		[Token(Token = "0x6000642")]
		[Address(RVA = "0x688E3C", Offset = "0x688E3C", VA = "0x688E3C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000643")]
		[Address(RVA = "0x688E44", Offset = "0x688E44", VA = "0x688E44")]
		set
		{
		}
	}

	[Token(Token = "0x170000FA")]
	public string expires_in
	{
		[Token(Token = "0x6000644")]
		[Address(RVA = "0x688E4C", Offset = "0x688E4C", VA = "0x688E4C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000645")]
		[Address(RVA = "0x688E54", Offset = "0x688E54", VA = "0x688E54")]
		set
		{
		}
	}

	[Token(Token = "0x170000FB")]
	public string isSuccess
	{
		[Token(Token = "0x6000646")]
		[Address(RVA = "0x688E5C", Offset = "0x688E5C", VA = "0x688E5C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000647")]
		[Address(RVA = "0x688E64", Offset = "0x688E64", VA = "0x688E64")]
		set
		{
		}
	}

	[Token(Token = "0x170000FC")]
	public string loginMsg
	{
		[Token(Token = "0x6000648")]
		[Address(RVA = "0x688E6C", Offset = "0x688E6C", VA = "0x688E6C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000649")]
		[Address(RVA = "0x688E74", Offset = "0x688E74", VA = "0x688E74")]
		set
		{
		}
	}

	[Token(Token = "0x170000FD")]
	public string user_info
	{
		[Token(Token = "0x600064A")]
		[Address(RVA = "0x688E7C", Offset = "0x688E7C", VA = "0x688E7C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600064B")]
		[Address(RVA = "0x688E84", Offset = "0x688E84", VA = "0x688E84")]
		set
		{
		}
	}

	[Token(Token = "0x170000FE")]
	public string order_info
	{
		[Token(Token = "0x600064C")]
		[Address(RVA = "0x688E8C", Offset = "0x688E8C", VA = "0x688E8C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600064D")]
		[Address(RVA = "0x688E94", Offset = "0x688E94", VA = "0x688E94")]
		set
		{
		}
	}

	[Token(Token = "0x170000FF")]
	public string code
	{
		[Token(Token = "0x600064E")]
		[Address(RVA = "0x688E9C", Offset = "0x688E9C", VA = "0x688E9C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600064F")]
		[Address(RVA = "0x688EA4", Offset = "0x688EA4", VA = "0x688EA4")]
		set
		{
		}
	}

	[Token(Token = "0x17000100")]
	public string msg
	{
		[Token(Token = "0x6000650")]
		[Address(RVA = "0x688EAC", Offset = "0x688EAC", VA = "0x688EAC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000651")]
		[Address(RVA = "0x688EB4", Offset = "0x688EB4", VA = "0x688EB4")]
		set
		{
		}
	}

	[Token(Token = "0x17000101")]
	public string app_ID
	{
		[Token(Token = "0x6000652")]
		[Address(RVA = "0x688EBC", Offset = "0x688EBC", VA = "0x688EBC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000653")]
		[Address(RVA = "0x688EC4", Offset = "0x688EC4", VA = "0x688EC4")]
		set
		{
		}
	}

	[Token(Token = "0x17000102")]
	public string app_Key
	{
		[Token(Token = "0x6000654")]
		[Address(RVA = "0x688ECC", Offset = "0x688ECC", VA = "0x688ECC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000655")]
		[Address(RVA = "0x688ED4", Offset = "0x688ED4", VA = "0x688ED4")]
		set
		{
		}
	}

	[Token(Token = "0x17000103")]
	public string merchant_ID
	{
		[Token(Token = "0x6000656")]
		[Address(RVA = "0x688EDC", Offset = "0x688EDC", VA = "0x688EDC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000657")]
		[Address(RVA = "0x688EE4", Offset = "0x688EE4", VA = "0x688EE4")]
		set
		{
		}
	}

	[Token(Token = "0x17000104")]
	public string paykey
	{
		[Token(Token = "0x6000658")]
		[Address(RVA = "0x688EEC", Offset = "0x688EEC", VA = "0x688EEC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000659")]
		[Address(RVA = "0x688EF4", Offset = "0x688EF4", VA = "0x688EF4")]
		set
		{
		}
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x68408C", Offset = "0x68408C", VA = "0x68408C")]
	public static CommonDic getInstance()
	{
		return null;
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x688AE8", Offset = "0x688AE8", VA = "0x688AE8")]
	public Dictionary<string, string> getDic()
	{
		return null;
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x688B40", Offset = "0x688B40", VA = "0x688B40")]
	public void setParameters(string name, string value)
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x688D0C", Offset = "0x688D0C", VA = "0x688D0C")]
	public string PayOrderString()
	{
		return null;
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x6881D8", Offset = "0x6881D8", VA = "0x6881D8")]
	public static void InitDicData(Dictionary<string, string> mydic)
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x68815C", Offset = "0x68815C", VA = "0x68815C")]
	public CommonDic()
	{
	}
}
[Token(Token = "0x20000A1")]
public class LoginSDK
{
	[Token(Token = "0x600065C")]
	[Address(RVA = "0x6C3CE0", Offset = "0x6C3CE0", VA = "0x6C3CE0")]
	public static void Login()
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x6C3D54", Offset = "0x6C3D54", VA = "0x6C3D54")]
	public static void GetUserAPI()
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x6C3DC8", Offset = "0x6C3DC8", VA = "0x6C3DC8")]
	public LoginSDK()
	{
	}
}
[Token(Token = "0x20000A2")]
public class PicoPaymentSDK
{
	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AndroidJavaObject _jo;

	[Token(Token = "0x17000105")]
	public static AndroidJavaObject jo
	{
		[Token(Token = "0x600065F")]
		[Address(RVA = "0x62A994", Offset = "0x62A994", VA = "0x62A994")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000660")]
		[Address(RVA = "0x62AA0C", Offset = "0x62AA0C", VA = "0x62AA0C")]
		set
		{
		}
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x62AA88", Offset = "0x62AA88", VA = "0x62AA88")]
	public static void Login()
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x62AD84", Offset = "0x62AD84", VA = "0x62AD84")]
	public static void Pay(string payOrderJson)
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x62B048", Offset = "0x62B048", VA = "0x62B048")]
	public static void QueryOrder(string orderId)
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x62B30C", Offset = "0x62B30C", VA = "0x62B30C")]
	public static void GetUserAPI()
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x62B608", Offset = "0x62B608", VA = "0x62B608")]
	public PicoPaymentSDK()
	{
	}
}
[Token(Token = "0x20000A3")]
public class Pvr_ToBService : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Text deviceInfoText;

	[Token(Token = "0x6000667")]
	[Address(RVA = "0xD19A00", Offset = "0xD19A00", VA = "0xD19A00")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0xD19A30", Offset = "0xD19A30", VA = "0xD19A30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0xD19A40", Offset = "0xD19A40", VA = "0xD19A40")]
	private void OnDestory()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0xD19A04", Offset = "0xD19A04", VA = "0xD19A04")]
	private void InitToBService()
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0xD19A38", Offset = "0xD19A38", VA = "0xD19A38")]
	private void BindToBService()
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0xD19A48", Offset = "0xD19A48", VA = "0xD19A48")]
	private void UnBindToBService()
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0xD19A50", Offset = "0xD19A50", VA = "0xD19A50")]
	private void BoolCallback(string value)
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0xD19B18", Offset = "0xD19B18", VA = "0xD19B18")]
	private void IntCallback(string value)
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0xD19BB8", Offset = "0xD19BB8", VA = "0xD19BB8")]
	private void LongCallback(string value)
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0xD19C68", Offset = "0xD19C68", VA = "0xD19C68")]
	public void StateGetDeviceInfo()
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0xD19D00", Offset = "0xD19D00", VA = "0xD19D00")]
	public void ControlSetDeviceAction()
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0xD19D98", Offset = "0xD19D98", VA = "0xD19D98")]
	private void ControlSetDeviceActionCallBack(int value)
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0xD19E58", Offset = "0xD19E58", VA = "0xD19E58")]
	public void AppManager()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0xD19F00", Offset = "0xD19F00", VA = "0xD19F00")]
	private void AppManagerCallBack(int value)
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0xD19FC0", Offset = "0xD19FC0", VA = "0xD19FC0")]
	public Pvr_ToBService()
	{
	}
}
[Token(Token = "0x20000A4")]
public class PLOG : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int logLevel;

	[Token(Token = "0x6000676")]
	[Address(RVA = "0xA728E8", Offset = "0xA728E8", VA = "0xA728E8")]
	public static void getConfigTraceLevel()
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0xA72968", Offset = "0xA72968", VA = "0xA72968")]
	public static void D(string msg)
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0xA72A24", Offset = "0xA72A24", VA = "0xA72A24")]
	public static void I(string msg)
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0xA72AE0", Offset = "0xA72AE0", VA = "0xA72AE0")]
	public static void W(string msg)
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0xA72BA0", Offset = "0xA72BA0", VA = "0xA72BA0")]
	public static void E(string msg)
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0xA72C1C", Offset = "0xA72C1C", VA = "0xA72C1C")]
	public PLOG()
	{
	}
}
[Token(Token = "0x20000A5")]
public class CPicoSDKSettingAsset : ScriptableObject
{
	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool IgnoreSDKSetting;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public bool DontshowBuildWaring;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	public bool AppIDChecked;

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x683C9C", Offset = "0x683C9C", VA = "0x683C9C")]
	public CPicoSDKSettingAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x20000A6")]
public class Pvr_UnitySDKProjectSetting : ScriptableObject
{
	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public RenderTextureAntiAliasing rtAntiAlising;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public RenderTextureDepth rtBitDepth;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public RenderTextureFormat rtFormat;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool usedefaultRenderTexture;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector2 customRTSize;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool usedefaultfps;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int customfps;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool usesinglepass;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool usecontentprotect;

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x805E9C", Offset = "0x805E9C", VA = "0x805E9C")]
	public static Pvr_UnitySDKProjectSetting GetProjectConfig()
	{
		return null;
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x80F6E4", Offset = "0x80F6E4", VA = "0x80F6E4")]
	public Pvr_UnitySDKProjectSetting()
	{
	}
}
[Token(Token = "0x20000A7")]
public sealed class Pvr_UnitySDKPlatformSetting : ScriptableObject
{
	[Token(Token = "0x2000628")]
	public enum simulationType
	{
		[Token(Token = "0x400249D")]
		Null,
		[Token(Token = "0x400249E")]
		Invalid,
		[Token(Token = "0x400249F")]
		Valid
	}

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private bool entitlementchecksimulation;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	[SerializeField]
	private bool startTimeEntitlementCheck;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public string appID;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public List<string> deviceSN;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKPlatformSetting instance;

	[Token(Token = "0x17000106")]
	public static bool Entitlementchecksimulation
	{
		[Token(Token = "0x6000680")]
		[Address(RVA = "0x80E420", Offset = "0x80E420", VA = "0x80E420")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000681")]
		[Address(RVA = "0x80E444", Offset = "0x80E444", VA = "0x80E444")]
		set
		{
		}
	}

	[Token(Token = "0x17000107")]
	public static bool StartTimeEntitlementCheck
	{
		[Token(Token = "0x6000682")]
		[Address(RVA = "0x80DFC8", Offset = "0x80DFC8", VA = "0x80DFC8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000683")]
		[Address(RVA = "0x80E498", Offset = "0x80E498", VA = "0x80E498")]
		set
		{
		}
	}

	[Token(Token = "0x17000108")]
	public static Pvr_UnitySDKPlatformSetting Instance
	{
		[Token(Token = "0x6000684")]
		[Address(RVA = "0x80DFEC", Offset = "0x80DFEC", VA = "0x80DFEC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000685")]
		[Address(RVA = "0x80E4EC", Offset = "0x80E4EC", VA = "0x80E4EC")]
		set
		{
		}
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x80E548", Offset = "0x80E548", VA = "0x80E548")]
	public Pvr_UnitySDKPlatformSetting()
	{
	}
}
[Token(Token = "0x20000A8")]
public class Pvr_UnitySDKManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000629")]
	public delegate void EntitlementCheckResult(int ReturnValue);

	[Token(Token = "0x200062A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B574", Offset = "0x39B574")]
	private sealed class <ToastManager>d__97 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40024A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40024A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float time;

		[Token(Token = "0x40024A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int type;

		[Token(Token = "0x40024A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x40024A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool state;

		[Token(Token = "0x17000450")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C8B")]
			[Address(RVA = "0x80E2E4", Offset = "0x80E2E4", VA = "0x80E2E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000451")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C8D")]
			[Address(RVA = "0x80E364", Offset = "0x80E364", VA = "0x80E364", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C88")]
		[Address(RVA = "0x80797C", Offset = "0x80797C", VA = "0x80797C")]
		[DebuggerHidden]
		public <ToastManager>d__97(int <>1__state)
		{
		}

		[Token(Token = "0x6002C89")]
		[Address(RVA = "0x80E14C", Offset = "0x80E14C", VA = "0x80E14C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C8A")]
		[Address(RVA = "0x80E150", Offset = "0x80E150", VA = "0x80E150", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C8C")]
		[Address(RVA = "0x80E2EC", Offset = "0x80E2EC", VA = "0x80E2EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200062B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B584", Offset = "0x39B584")]
	private sealed class <>c__DisplayClass102_0
	{
		[Token(Token = "0x40024A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x40024A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Transform trans;

		[Token(Token = "0x6002C8E")]
		[Address(RVA = "0x809414", Offset = "0x809414", VA = "0x809414")]
		public <>c__DisplayClass102_0()
		{
		}

		[Token(Token = "0x6002C8F")]
		[Address(RVA = "0x80CDEC", Offset = "0x80CDEC", VA = "0x80CDEC")]
		internal void <SetProperty>b__0()
		{
		}
	}

	[Token(Token = "0x200062C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B594", Offset = "0x39B594")]
	private sealed class <G3TipsManager>d__106 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40024A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40024AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float time;

		[Token(Token = "0x40024AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public GameObject tip;

		[Token(Token = "0x17000452")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C93")]
			[Address(RVA = "0x80CF30", Offset = "0x80CF30", VA = "0x80CF30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000453")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C95")]
			[Address(RVA = "0x80CFB0", Offset = "0x80CFB0", VA = "0x80CFB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C90")]
		[Address(RVA = "0x809850", Offset = "0x809850", VA = "0x809850")]
		[DebuggerHidden]
		public <G3TipsManager>d__106(int <>1__state)
		{
		}

		[Token(Token = "0x6002C91")]
		[Address(RVA = "0x80CE60", Offset = "0x80CE60", VA = "0x80CE60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C92")]
		[Address(RVA = "0x80CE64", Offset = "0x80CE64", VA = "0x80CE64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C94")]
		[Address(RVA = "0x80CF38", Offset = "0x80CF38", VA = "0x80CF38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200062D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B5A4", Offset = "0x39B5A4")]
	private sealed class <Start>d__118 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40024AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40024AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x17000454")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C99")]
			[Address(RVA = "0x80E0C4", Offset = "0x80E0C4", VA = "0x80E0C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000455")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C9B")]
			[Address(RVA = "0x80E144", Offset = "0x80E144", VA = "0x80E144", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C96")]
		[Address(RVA = "0x80BE80", Offset = "0x80BE80", VA = "0x80BE80")]
		[DebuggerHidden]
		public <Start>d__118(int <>1__state)
		{
		}

		[Token(Token = "0x6002C97")]
		[Address(RVA = "0x80DCE4", Offset = "0x80DCE4", VA = "0x80DCE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C98")]
		[Address(RVA = "0x80DCE8", Offset = "0x80DCE8", VA = "0x80DCE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C9A")]
		[Address(RVA = "0x80E0CC", Offset = "0x80E0CC", VA = "0x80E0CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200062E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B5B4", Offset = "0x39B5B4")]
	private sealed class <InitRenderThreadRoutine>d__119 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40024B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40024B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <i>5__2;

		[Token(Token = "0x17000456")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C9F")]
			[Address(RVA = "0x80D36C", Offset = "0x80D36C", VA = "0x80D36C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000457")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CA1")]
			[Address(RVA = "0x80D3EC", Offset = "0x80D3EC", VA = "0x80D3EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C9C")]
		[Address(RVA = "0x80BF0C", Offset = "0x80BF0C", VA = "0x80BF0C")]
		[DebuggerHidden]
		public <InitRenderThreadRoutine>d__119(int <>1__state)
		{
		}

		[Token(Token = "0x6002C9D")]
		[Address(RVA = "0x80CFB8", Offset = "0x80CFB8", VA = "0x80CFB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C9E")]
		[Address(RVA = "0x80CFBC", Offset = "0x80CFBC", VA = "0x80CFBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CA0")]
		[Address(RVA = "0x80D374", Offset = "0x80D374", VA = "0x80D374", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200062F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B5C4", Offset = "0x39B5C4")]
	private sealed class <OnResume>d__132 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40024B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40024B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x40024B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int <ability6dof>5__2;

		[Token(Token = "0x40024B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int <waitNum>5__3;

		[Token(Token = "0x40024B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int <resetNum>5__4;

		[Token(Token = "0x40024B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <i>5__5;

		[Token(Token = "0x17000458")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CA5")]
			[Address(RVA = "0x80DC5C", Offset = "0x80DC5C", VA = "0x80DC5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000459")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CA7")]
			[Address(RVA = "0x80DCDC", Offset = "0x80DCDC", VA = "0x80DCDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CA2")]
		[Address(RVA = "0x80CCE0", Offset = "0x80CCE0", VA = "0x80CCE0")]
		[DebuggerHidden]
		public <OnResume>d__132(int <>1__state)
		{
		}

		[Token(Token = "0x6002CA3")]
		[Address(RVA = "0x80D3F4", Offset = "0x80D3F4", VA = "0x80D3F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CA4")]
		[Address(RVA = "0x80D3F8", Offset = "0x80D3F8", VA = "0x80D3F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CA6")]
		[Address(RVA = "0x80DC64", Offset = "0x80DC64", VA = "0x80DC64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlatForm platform;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static Pvr_UnitySDKManager sdk;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[HideInInspector]
	public float EyesAspect;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public int posStatus;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public bool ismirroring;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Vector3 resetBasePos;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public int trackingmode;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public int systemprop;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public bool systemFPS;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public float[] headData;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool rotfoldout;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	[SerializeField]
	private bool hmdOnlyrot;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	[SerializeField]
	private bool controllerOnlyrot;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TrackingOrigin trackingOrigin;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool ResetTrackerOnLoad;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public Vector3 leftEyeOffset;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[HideInInspector]
	public Vector3 rightEyeOffset;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public Rect leftEyeRect;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public Rect rightEyeRect;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public Matrix4x4 leftEyeView;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public Matrix4x4 rightEyeView;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[HideInInspector]
	public Pvr_UnitySDKEditor pvr_UnitySDKEditor;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[SerializeField]
	private bool vrModeEnabled;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[HideInInspector]
	public Material Eyematerial;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	[HideInInspector]
	public Material Middlematerial;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39E8A8", Offset = "0x39E8A8")]
	private bool <picovrTriggered>k__BackingField;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
	[HideInInspector]
	public bool newPicovrTriggered;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10A")]
	[SerializeField]
	private bool showFPS;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	[HideInInspector]
	public Vector3 neckOffset;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private bool pVRNeck;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
	[HideInInspector]
	public bool UseCustomNeckPara;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11A")]
	[HideInInspector]
	public bool onResume;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11B")]
	[HideInInspector]
	public bool isEnterVRMode;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public bool isHasController;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Pvr_UnitySDKConfigProfile pvr_UnitySDKConfig;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private GameObject calltoast;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private GameObject msgtoast;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private GameObject lowhmdBatterytoast;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private GameObject lowphoneBatterytoast;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private GameObject LowPhoneHealthtoast;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private GameObject LowcontrollerBatterytoast;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private bool lowControllerpowerstate;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float controllerpowershowtime;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private bool UseToast;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private int iPhoneHMDModeEnabled;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private GameObject G3LiteTips;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private bool monoscopic;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x151")]
	private bool mIsAndroid7;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Func<bool> eventEnterVRMode;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x152")]
	[HideInInspector]
	public bool ShowVideoSeethrough;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public int SystemDebugFFRLevel;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public int SystemFFRLevel;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public int AppCheckResult;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Action longPressHomeKeyAction;

	[Token(Token = "0x17000109")]
	public static Pvr_UnitySDKManager SDK
	{
		[Token(Token = "0x6000687")]
		[Address(RVA = "0x805B48", Offset = "0x805B48", VA = "0x805B48")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700010A")]
	public bool Rotfoldout
	{
		[Token(Token = "0x6000688")]
		[Address(RVA = "0x805D90", Offset = "0x805D90", VA = "0x805D90")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000689")]
		[Address(RVA = "0x805D98", Offset = "0x805D98", VA = "0x805D98")]
		set
		{
		}
	}

	[Token(Token = "0x1700010B")]
	public bool HmdOnlyrot
	{
		[Token(Token = "0x600068A")]
		[Address(RVA = "0x805DB4", Offset = "0x805DB4", VA = "0x805DB4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600068B")]
		[Address(RVA = "0x805DBC", Offset = "0x805DBC", VA = "0x805DBC")]
		set
		{
		}
	}

	[Token(Token = "0x1700010C")]
	public bool ControllerOnlyrot
	{
		[Token(Token = "0x600068C")]
		[Address(RVA = "0x805DD8", Offset = "0x805DD8", VA = "0x805DD8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600068D")]
		[Address(RVA = "0x805DE0", Offset = "0x805DE0", VA = "0x805DE0")]
		set
		{
		}
	}

	[Token(Token = "0x1700010D")]
	public TrackingOrigin TrackingOrigin
	{
		[Token(Token = "0x600068E")]
		[Address(RVA = "0x805DFC", Offset = "0x805DFC", VA = "0x805DFC")]
		get
		{
			return default(TrackingOrigin);
		}
		[Token(Token = "0x600068F")]
		[Address(RVA = "0x805E04", Offset = "0x805E04", VA = "0x805E04")]
		set
		{
		}
	}

	[Token(Token = "0x1700010E")]
	[HideInInspector]
	public bool VRModeEnabled
	{
		[Token(Token = "0x6000693")]
		[Address(RVA = "0x805F40", Offset = "0x805F40", VA = "0x805F40")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000694")]
		[Address(RVA = "0x805F48", Offset = "0x805F48", VA = "0x805F48")]
		set
		{
		}
	}

	[Token(Token = "0x1700010F")]
	[HideInInspector]
	public bool picovrTriggered
	{
		[Token(Token = "0x6000695")]
		[Address(RVA = "0x805F64", Offset = "0x805F64", VA = "0x805F64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A6FFC", Offset = "0x3A6FFC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000696")]
		[Address(RVA = "0x805F6C", Offset = "0x805F6C", VA = "0x805F6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A700C", Offset = "0x3A700C")]
		set
		{
		}
	}

	[Token(Token = "0x17000110")]
	public bool ShowFPS
	{
		[Token(Token = "0x6000697")]
		[Address(RVA = "0x805F74", Offset = "0x805F74", VA = "0x805F74")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000698")]
		[Address(RVA = "0x805F7C", Offset = "0x805F7C", VA = "0x805F7C")]
		set
		{
		}
	}

	[Token(Token = "0x17000111")]
	public bool PVRNeck
	{
		[Token(Token = "0x6000699")]
		[Address(RVA = "0x805F98", Offset = "0x805F98", VA = "0x805F98")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600069A")]
		[Address(RVA = "0x805FA0", Offset = "0x805FA0", VA = "0x805FA0")]
		set
		{
		}
	}

	[Token(Token = "0x17000112")]
	[HideInInspector]
	public bool Monoscopic
	{
		[Token(Token = "0x600069B")]
		[Address(RVA = "0x805FBC", Offset = "0x805FBC", VA = "0x805FBC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600069C")]
		[Address(RVA = "0x805FC4", Offset = "0x805FC4", VA = "0x805FC4")]
		set
		{
		}
	}

	[Token(Token = "0x14000016")]
	public static event EntitlementCheckResult EntitlementCheckResultEvent
	{
		[Token(Token = "0x600069D")]
		[Address(RVA = "0x805FEC", Offset = "0x805FEC", VA = "0x805FEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A701C", Offset = "0x3A701C")]
		add
		{
		}
		[Token(Token = "0x600069E")]
		[Address(RVA = "0x8060F4", Offset = "0x8060F4", VA = "0x8060F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A702C", Offset = "0x3A702C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x805E30", Offset = "0x805E30", VA = "0x805E30")]
	public void ChangeDefaultCustomRtSize(int w, int h)
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x805F00", Offset = "0x805F00", VA = "0x805F00")]
	public Vector3 EyeOffset(Eye eye)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x805F28", Offset = "0x805F28", VA = "0x805F28")]
	public Rect EyeRect(Eye eye)
	{
		return default(Rect);
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x8061FC", Offset = "0x8061FC", VA = "0x8061FC")]
	private bool SDKManagerInit()
	{
		return default(bool);
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x806378", Offset = "0x806378", VA = "0x806378")]
	private bool SDKManagerInitCoreAbility()
	{
		return default(bool);
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x8065E4", Offset = "0x8065E4", VA = "0x8065E4")]
	public void smsReceivedCallback(string msg)
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x807020", Offset = "0x807020", VA = "0x807020")]
	public void phoneStateCallback(string state)
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x8074E8", Offset = "0x8074E8", VA = "0x8074E8")]
	public void phoneBatteryStateCallback(string state)
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x807810", Offset = "0x807810", VA = "0x807810")]
	public void hmdLowBatteryCallback(string level)
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x806AAC", Offset = "0x806AAC", VA = "0x806AAC")]
	private string TransformNumber(string number)
	{
		return null;
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x807978", Offset = "0x807978", VA = "0x807978")]
	public void onHmdOrientationReseted()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x806F54", Offset = "0x806F54", VA = "0x806F54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A703C", Offset = "0x3A703C")]
	private IEnumerator ToastManager(int type, bool state, float time)
	{
		return null;
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x80799C", Offset = "0x80799C", VA = "0x80799C")]
	private void CheckControllerStateForG2(string state)
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x807B68", Offset = "0x807B68", VA = "0x807B68")]
	public void notificationCallback(string data)
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x8090E8", Offset = "0x8090E8", VA = "0x8090E8")]
	private Sprite LoadSprite(Vector2 size, string filepath)
	{
		return null;
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x80925C", Offset = "0x80925C", VA = "0x80925C")]
	private byte[] ReadTex(string path)
	{
		return null;
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x808034", Offset = "0x808034", VA = "0x808034")]
	private void SetProperty(int type, JsonData data, string value)
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x808708", Offset = "0x808708", VA = "0x808708")]
	private void SetBaseProperty(Transform trans, JsonData data, string value)
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x808CC4", Offset = "0x808CC4", VA = "0x808CC4")]
	private void SetImageProperty(Transform image, JsonData data, string value)
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x80941C", Offset = "0x80941C", VA = "0x80941C")]
	private void SetTextProperty(Transform text, JsonData data, string value)
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x809044", Offset = "0x809044", VA = "0x809044")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A70AC", Offset = "0x3A70AC")]
	private IEnumerator G3TipsManager(GameObject tip, float time)
	{
		return null;
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x8097C4", Offset = "0x8097C4", VA = "0x8097C4")]
	private float JsonToFloat(JsonData data)
	{
		return default(float);
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x809870", Offset = "0x809870", VA = "0x809870")]
	private bool SDKManagerInitFPS()
	{
		return default(bool);
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x8062F4", Offset = "0x8062F4", VA = "0x8062F4")]
	private bool SDKManagerInitConfigProfile()
	{
		return default(bool);
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x809A84", Offset = "0x809A84", VA = "0x809A84")]
	private bool SDKManagerInitEditor()
	{
		return default(bool);
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x809B50", Offset = "0x809B50", VA = "0x809B50")]
	private bool SDKManagerInitPara()
	{
		return default(bool);
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x809B58", Offset = "0x809B58", VA = "0x809B58")]
	public void SDKManagerLongHomeKey()
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x809EAC", Offset = "0x809EAC", VA = "0x809EAC")]
	private void setLongHomeKey()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x80A37C", Offset = "0x80A37C", VA = "0x80A37C")]
	public void verifyAPPCallback(string code)
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x80A7AC", Offset = "0x80A7AC", VA = "0x80A7AC")]
	public void IpdRefreshCallBack(string ipd)
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x80A928", Offset = "0x80A928", VA = "0x80A928")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x80BE00", Offset = "0x80BE00", VA = "0x80BE00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A711C", Offset = "0x3A711C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x80BEA0", Offset = "0x80BEA0", VA = "0x80BEA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A718C", Offset = "0x3A718C")]
	private IEnumerator InitRenderThreadRoutine()
	{
		return null;
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x80BF2C", Offset = "0x80BF2C", VA = "0x80BF2C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x80C2A4", Offset = "0x80C2A4", VA = "0x80C2A4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x80C450", Offset = "0x80C450", VA = "0x80C450")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x80C5BC", Offset = "0x80C5BC", VA = "0x80C5BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x80C5C4", Offset = "0x80C5C4", VA = "0x80C5C4")]
	private void OnPause()
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x80C87C", Offset = "0x80C87C", VA = "0x80C87C")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x80CB98", Offset = "0x80CB98", VA = "0x80CB98")]
	public void EnterVRMode()
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x80C68C", Offset = "0x80C68C", VA = "0x80C68C")]
	public void LeaveVRMode()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x80CCD8", Offset = "0x80CCD8", VA = "0x80CCD8")]
	public void SixDofForceQuit()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x80B57C", Offset = "0x80B57C", VA = "0x80B57C")]
	private void InitUI()
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x80B86C", Offset = "0x80B86C", VA = "0x80B86C")]
	private void RefreshTextByLanguage()
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x80B078", Offset = "0x80B078", VA = "0x80B078")]
	private void LoadIsMirroringValue()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x80CB18", Offset = "0x80CB18", VA = "0x80CB18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A71FC", Offset = "0x3A71FC")]
	private IEnumerator OnResume()
	{
		return null;
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x80CD00", Offset = "0x80CD00", VA = "0x80CD00")]
	public Pvr_UnitySDKManager()
	{
	}
}
[Token(Token = "0x20000A9")]
public class QuitGame : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x81A158", Offset = "0x81A158", VA = "0x81A158")]
	private void Start()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x81A15C", Offset = "0x81A15C", VA = "0x81A15C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x81A184", Offset = "0x81A184", VA = "0x81A184")]
	public QuitGame()
	{
	}
}
[Token(Token = "0x20000AA")]
public class Pvr_UnityEyeMask : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000630")]
	private class EyeMaskData
	{
		[Token(Token = "0x40024B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Eye eyeSide;

		[Token(Token = "0x40024BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Camera camera;

		[Token(Token = "0x40024BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CommandBuffer cmdBuf;

		[Token(Token = "0x6002CA8")]
		[Address(RVA = "0xD23254", Offset = "0xD23254", VA = "0xD23254")]
		public EyeMaskData()
		{
		}
	}

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Shader eyeMaskShader;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Material eyeMaskMaterial;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Mesh eyeMaskMeshLeft;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mesh eyeMaskMeshRight;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Mesh eyeMaskMeshBoth;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float zDir;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Color eyeMaskColor;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private List<EyeMaskData> cameraDataList;

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0xD21058", Offset = "0xD21058", VA = "0xD21058")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0xD2112C", Offset = "0xD2112C", VA = "0xD2112C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0xD22184", Offset = "0xD22184", VA = "0xD22184")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0xD21868", Offset = "0xD21868", VA = "0xD21868")]
	private void CreateCommandBuffer()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0xD2301C", Offset = "0xD2301C", VA = "0xD2301C")]
	private void OnCustomPreRender(Camera cam)
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0xD225A8", Offset = "0xD225A8", VA = "0xD225A8")]
	private Mesh GetStencilMesh(Eye eyeSide)
	{
		return null;
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0xD22A18", Offset = "0xD22A18", VA = "0xD22A18")]
	private Mesh GetStencilMeshBoth(Mesh leftMesh, Mesh rightMesh)
	{
		return null;
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0xD22470", Offset = "0xD22470", VA = "0xD22470")]
	private bool VerifyCommadBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0xD213FC", Offset = "0xD213FC", VA = "0xD213FC")]
	private void PrepareCameras()
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0xD23200", Offset = "0xD23200", VA = "0xD23200")]
	private void AddCameraCommandBuffer(EyeMaskData data)
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0xD2239C", Offset = "0xD2239C", VA = "0xD2239C")]
	private void RemoveCameraCommandBuffer(EyeMaskData data)
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0xD223F0", Offset = "0xD223F0", VA = "0xD223F0")]
	private void CleanEyeMask()
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0xD2325C", Offset = "0xD2325C", VA = "0xD2325C")]
	public Pvr_UnityEyeMask()
	{
	}
}
[Token(Token = "0x20000AB")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x399D4C", Offset = "0x399D4C")]
public class Pvr_UnitySDKEye : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UnitySDKEye> Instances;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Eye eyeSide;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39E958", Offset = "0x39E958")]
	private Camera <eyecamera>k__BackingField;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int eyeCameraOriginCullingMask;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CameraClearFlags eyeCameraOriginClearFlag;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Color eyeCameraOriginBackgroundColor;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int lastBoundaryState;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Matrix4x4 realProj;

	[Token(Token = "0x400051E")]
	private const int bufferSize = 3;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int IDIndex;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private RenderEventType eventType;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int previousId;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool setLevel;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Material mat_Vignette;

	[Token(Token = "0x17000113")]
	public Camera eyecamera
	{
		[Token(Token = "0x60006DC")]
		[Address(RVA = "0x14F3DD8", Offset = "0x14F3DD8", VA = "0x14F3DD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A726C", Offset = "0x3A726C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006DD")]
		[Address(RVA = "0x14F3DE0", Offset = "0x14F3DE0", VA = "0x14F3DE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A727C", Offset = "0x3A727C")]
		private set
		{
		}
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x14F3DE8", Offset = "0x14F3DE8", VA = "0x14F3DE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x14F3EA8", Offset = "0x14F3EA8", VA = "0x14F3EA8")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x14F4600", Offset = "0x14F4600", VA = "0x14F4600")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x14F491C", Offset = "0x14F491C", VA = "0x14F491C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x14F4A68", Offset = "0x14F4A68", VA = "0x14F4A68")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x14F4BB4", Offset = "0x14F4BB4", VA = "0x14F4BB4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x14F4C58", Offset = "0x14F4C58", VA = "0x14F4C58")]
	public void MyPreRender(Camera camera)
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x14F4EB8", Offset = "0x14F4EB8", VA = "0x14F4EB8")]
	public void MyPreRender(ScriptableRenderContext context, Camera camera)
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x14F4F7C", Offset = "0x14F4F7C", VA = "0x14F4F7C")]
	public void MyPostRender(ScriptableRenderContext context, Camera camera)
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x14F4D1C", Offset = "0x14F4D1C", VA = "0x14F4D1C")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x14F5040", Offset = "0x14F5040", VA = "0x14F5040")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x14F5458", Offset = "0x14F5458", VA = "0x14F5458")]
	public void EyeRender()
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x14F3FC4", Offset = "0x14F3FC4", VA = "0x14F3FC4")]
	private void Setup(Eye eyeSide)
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x14F4258", Offset = "0x14F4258", VA = "0x14F4258")]
	private void SetupUpdate()
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x14E952C", Offset = "0x14E952C", VA = "0x14E952C")]
	public void RefreshCameraPosition(float ipd)
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x14F5654", Offset = "0x14F5654", VA = "0x14F5654")]
	private void DrawVignetteLine()
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x14F579C", Offset = "0x14F579C", VA = "0x14F579C")]
	private void vignette()
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x14F5258", Offset = "0x14F5258", VA = "0x14F5258")]
	private void SetFFRParameter()
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x14F5A34", Offset = "0x14F5A34", VA = "0x14F5A34")]
	public Pvr_UnitySDKEye()
	{
	}
}
[Token(Token = "0x20000AC")]
public class Pvr_UnitySDKEyeManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000631")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B5D4", Offset = "0x39B5D4")]
	private sealed class <EndOfFrame>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40024BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40024BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Pvr_UnitySDKEyeManager <>4__this;

		[Token(Token = "0x1700045A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CAC")]
			[Address(RVA = "0x14FAF58", Offset = "0x14FAF58", VA = "0x14FAF58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CAE")]
			[Address(RVA = "0x14FAFD8", Offset = "0x14FAFD8", VA = "0x14FAFD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CA9")]
		[Address(RVA = "0x14F8264", Offset = "0x14F8264", VA = "0x14F8264")]
		[DebuggerHidden]
		public <EndOfFrame>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6002CAA")]
		[Address(RVA = "0x14F8E24", Offset = "0x14F8E24", VA = "0x14F8E24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CAB")]
		[Address(RVA = "0x14F8E28", Offset = "0x14F8E28", VA = "0x14F8E28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CAD")]
		[Address(RVA = "0x14FAF60", Offset = "0x14FAF60", VA = "0x14FAF60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000632")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B5E4", Offset = "0x39B5E4")]
	private sealed class <ScreenFade>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40024C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40024C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Pvr_UnitySDKEyeManager <>4__this;

		[Token(Token = "0x40024C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float startAlpha;

		[Token(Token = "0x40024C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float endAlpha;

		[Token(Token = "0x40024C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x1700045C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CB2")]
			[Address(RVA = "0x14FB138", Offset = "0x14FB138", VA = "0x14FB138", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CB4")]
			[Address(RVA = "0x14FB1B8", Offset = "0x14FB1B8", VA = "0x14FB1B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CAF")]
		[Address(RVA = "0x14F8D70", Offset = "0x14F8D70", VA = "0x14F8D70")]
		[DebuggerHidden]
		public <ScreenFade>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6002CB0")]
		[Address(RVA = "0x14FAFE0", Offset = "0x14FAFE0", VA = "0x14FAFE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CB1")]
		[Address(RVA = "0x14FAFE4", Offset = "0x14FAFE4", VA = "0x14FAFE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CB3")]
		[Address(RVA = "0x14FB140", Offset = "0x14FB140", VA = "0x14FB140", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKEyeManager instance;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Pvr_UnitySDKEye[] eyes;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public Camera LeftEyeCamera;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public Camera RightEyeCamera;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Camera MonoEyeCamera;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public Camera BothEyeCamera;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int MonoEyeTextureID;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private readonly int WaitSplashScreenFrames;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frameNum;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[HideInInspector]
	private bool foveatedRendering;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[HideInInspector]
	private EFoveationLevel foveationLevel;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int eyeTextureId;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RenderEventType eventType;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Pvr_UnitySDKEyeOverlay compositeLayer;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int overlayLayerDepth;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int underlayLayerDepth;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isHeadLocked;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int layerFlags;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public bool EyeTracking;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public Vector3 eyePoint;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private EyeTrackingData eyePoseData;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[HideInInspector]
	public static bool supportEyeTracking;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x39EA38", Offset = "0x39EA38")]
	public bool screenFade;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x39EA6C", Offset = "0x39EA6C")]
	public float fadeTime;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x39EAA0", Offset = "0x39EAA0")]
	public Color fadeColor;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public int renderQueue;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private MeshRenderer fadeMeshRenderer;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private MeshFilter fadeMeshFilter;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Material fadeMaterial;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float elapsedTime;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private bool isFading;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float currentAlpha;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float nowFadeAlpha;

	[Token(Token = "0x17000114")]
	public static Pvr_UnitySDKEyeManager Instance
	{
		[Token(Token = "0x60006F2")]
		[Address(RVA = "0x14E934C", Offset = "0x14E934C", VA = "0x14E934C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000115")]
	public Pvr_UnitySDKEye[] Eyes
	{
		[Token(Token = "0x60006F3")]
		[Address(RVA = "0x14E947C", Offset = "0x14E947C", VA = "0x14E947C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000116")]
	[HideInInspector]
	public bool FoveatedRendering
	{
		[Token(Token = "0x60006F4")]
		[Address(RVA = "0x14F5BA0", Offset = "0x14F5BA0", VA = "0x14F5BA0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006F5")]
		[Address(RVA = "0x14F5BA8", Offset = "0x14F5BA8", VA = "0x14F5BA8")]
		set
		{
		}
	}

	[Token(Token = "0x17000117")]
	[HideInInspector]
	public EFoveationLevel FoveationLevel
	{
		[Token(Token = "0x60006F6")]
		[Address(RVA = "0x14F5C04", Offset = "0x14F5C04", VA = "0x14F5C04")]
		get
		{
			return default(EFoveationLevel);
		}
		[Token(Token = "0x60006F7")]
		[Address(RVA = "0x14F5C0C", Offset = "0x14F5C0C", VA = "0x14F5C0C")]
		set
		{
		}
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x14F5C1C", Offset = "0x14F5C1C", VA = "0x14F5C1C")]
	private void SetCameraEnableEditor()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x14F5F34", Offset = "0x14F5F34", VA = "0x14F5F34")]
	private void SetCamerasEnableByStereoRendering()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x14F603C", Offset = "0x14F603C", VA = "0x14F603C")]
	private void SetupMonoCamera()
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x14F61B4", Offset = "0x14F61B4", VA = "0x14F61B4")]
	private void SetupUpdate()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x14F62F0", Offset = "0x14F62F0", VA = "0x14F62F0")]
	private void MonoEyeRender()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x14F64EC", Offset = "0x14F64EC", VA = "0x14F64EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x14F7020", Offset = "0x14F7020", VA = "0x14F7020")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x14F7A88", Offset = "0x14F7A88", VA = "0x14F7A88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x14F7AA4", Offset = "0x14F7AA4", VA = "0x14F7AA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x14F7E14", Offset = "0x14F7E14", VA = "0x14F7E14")]
	private void OnPause()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x14F7F10", Offset = "0x14F7F10", VA = "0x14F7F10")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x14F7F18", Offset = "0x14F7F18", VA = "0x14F7F18")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x14F80B4", Offset = "0x14F80B4", VA = "0x14F80B4")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x14F81E4", Offset = "0x14F81E4", VA = "0x14F81E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A728C", Offset = "0x3A728C")]
	private IEnumerator EndOfFrame()
	{
		return null;
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x14F8284", Offset = "0x14F8284", VA = "0x14F8284")]
	private void CreateExternalSurface(Pvr_UnitySDKEyeOverlay overlayInstance, int layerDepth)
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x14F84E4", Offset = "0x14F84E4", VA = "0x14F84E4")]
	public bool SetEyeTrackingMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x14EA634", Offset = "0x14EA634", VA = "0x14EA634")]
	public Vector3 GetEyeTrackingPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x14F887C", Offset = "0x14F887C", VA = "0x14F887C")]
	private EyeDeviceInfo GetDeviceInfo()
	{
		return default(EyeDeviceInfo);
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x14F6954", Offset = "0x14F6954", VA = "0x14F6954")]
	private void CreateFadeMesh()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x14F7F1C", Offset = "0x14F7F1C", VA = "0x14F7F1C")]
	private void DestoryFadeMesh()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x14F7018", Offset = "0x14F7018", VA = "0x14F7018")]
	public void SetCurrentAlpha(float alpha)
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x14F79CC", Offset = "0x14F79CC", VA = "0x14F79CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A72FC", Offset = "0x3A72FC")]
	private IEnumerator ScreenFade(float startAlpha, float endAlpha)
	{
		return null;
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x14F8BB8", Offset = "0x14F8BB8", VA = "0x14F8BB8")]
	private void SetMaterialAlpha()
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x14F7844", Offset = "0x14F7844", VA = "0x14F7844")]
	public bool GfxDeviceAdvanceFrameGLES()
	{
		return default(bool);
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x14F8D90", Offset = "0x14F8D90", VA = "0x14F8D90")]
	public Pvr_UnitySDKEyeManager()
	{
	}
}
[Token(Token = "0x20000AD")]
public class Pvr_UnitySDKEyeOverlay : UnityEngine.MonoBehaviour, IComparable<Pvr_UnitySDKEyeOverlay>
{
	[Token(Token = "0x2000633")]
	public delegate void ExternalAndroidSurfaceObjectCreated();

	[Token(Token = "0x2000634")]
	public enum OverlayShape
	{
		[Token(Token = "0x40024C6")]
		Quad,
		[Token(Token = "0x40024C7")]
		Cylinder,
		[Token(Token = "0x40024C8")]
		Equirect
	}

	[Token(Token = "0x2000635")]
	public enum OverlayType
	{
		[Token(Token = "0x40024CA")]
		Overlay,
		[Token(Token = "0x40024CB")]
		Underlay
	}

	[Token(Token = "0x2000636")]
	public enum OverlayTexFilterMode
	{
		[Token(Token = "0x40024CD")]
		NotCare,
		[Token(Token = "0x40024CE")]
		Nearest,
		[Token(Token = "0x40024CF")]
		Linear,
		[Token(Token = "0x40024D0")]
		Nearest_Mipmap_Nearest,
		[Token(Token = "0x40024D1")]
		Linear_Mipmap_Nearest,
		[Token(Token = "0x40024D2")]
		Nearest_Mipmap_Linear,
		[Token(Token = "0x40024D3")]
		Linear_Mipmap_Linear
	}

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UnitySDKEyeOverlay> Instances;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int layerIndex;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public OverlayType overlayType;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public OverlayShape overlayShape;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform layerTransform;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Texture[] layerTextures;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[] layerTextureIds;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Matrix4x4[] MVMatrixs;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3[] ModelScales;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Quaternion[] ModelRotations;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3[] ModelTranslations;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Quaternion[] CameraRotations;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3[] CameraTranslations;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Camera[] layerEyeCamera;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool overrideColorScaleAndOffset;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector4 colorScale;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector4 colorOffset;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector4 overlayLayerColorScaleDefault;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector4 overlayLayerColorOffsetDefault;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool isExternalAndroidSurface;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public IntPtr externalAndroidSurfaceObject;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public ExternalAndroidSurfaceObjectCreated externalAndroidSurfaceObjectCreated;

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x14FB1C0", Offset = "0x14FB1C0", VA = "0x14FB1C0", Slot = "4")]
	public int CompareTo(Pvr_UnitySDKEyeOverlay other)
	{
		return default(int);
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x14FB1F0", Offset = "0x14FB1F0", VA = "0x14FB1F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x14FB88C", Offset = "0x14FB88C", VA = "0x14FB88C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x14FC2F0", Offset = "0x14FC2F0", VA = "0x14FC2F0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x14F74F0", Offset = "0x14F74F0", VA = "0x14F74F0")]
	public void RefreshCamera()
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x14FB690", Offset = "0x14FB690", VA = "0x14FB690")]
	private void InitializeBuffer()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x14FB890", Offset = "0x14FB890", VA = "0x14FB890")]
	private void UpdateCoords()
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0x14FC394", Offset = "0x14FC394", VA = "0x14FC394")]
	public void SetTexture(Texture texture)
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x14FC434", Offset = "0x14FC434", VA = "0x14FC434")]
	public void SetLayerColorScaleAndOffset(Vector4 scale, Vector4 offset)
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x14FAF20", Offset = "0x14FAF20", VA = "0x14FAF20")]
	public Vector4 GetLayerColorScale()
	{
		return default(Vector4);
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x14FAF3C", Offset = "0x14FAF3C", VA = "0x14FAF3C")]
	public Vector4 GetLayerColorOffset()
	{
		return default(Vector4);
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x14FC460", Offset = "0x14FC460", VA = "0x14FC460")]
	public Pvr_UnitySDKEyeOverlay()
	{
	}
}
[Token(Token = "0x20000AE")]
public class Pvr_UnitySDKRender
{
	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKRender instance;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public AndroidJavaObject activity;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static AndroidJavaClass javaVrActivityClass;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static AndroidJavaClass javaSysActivityClass;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static AndroidJavaClass javaserviceClass;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static AndroidJavaClass javaVrActivityLongReceiver;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static AndroidJavaClass javaVrActivityClientClass;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool canConnecttoActivity;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	private bool isInitrenderThread;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string model;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Vector2 prefinger1;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector2 prefinger2;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int eyeTextureCount;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RenderTexture[] eyeTextures;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int[] eyeTextureIds;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int currEyeTextureIdx;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int nextEyeTextureIdx;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int lastEyeTextureIdx;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool isSwitchSDK;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int RenderviewNumber;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool isFirstStartup;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool isShellMode;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private StereoRenderingPathPico stereoRenderPath;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39EAD4", Offset = "0x39EAD4")]
	private SDKStereoRendering <StereoRendering>k__BackingField;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float rtScaleFactor;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float eyeVFov;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float eyeHFov;

	[Token(Token = "0x17000118")]
	public static Pvr_UnitySDKRender Instance
	{
		[Token(Token = "0x600071F")]
		[Address(RVA = "0x806500", Offset = "0x806500", VA = "0x806500")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000720")]
		[Address(RVA = "0x80F830", Offset = "0x80F830", VA = "0x80F830")]
		set
		{
		}
	}

	[Token(Token = "0x17000119")]
	public StereoRenderingPathPico StereoRenderPath
	{
		[Token(Token = "0x6000722")]
		[Address(RVA = "0x8103B0", Offset = "0x8103B0", VA = "0x8103B0")]
		get
		{
			return default(StereoRenderingPathPico);
		}
	}

	[Token(Token = "0x1700011A")]
	public SDKStereoRendering StereoRendering
	{
		[Token(Token = "0x6000723")]
		[Address(RVA = "0x8103B8", Offset = "0x8103B8", VA = "0x8103B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A736C", Offset = "0x3A736C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000724")]
		[Address(RVA = "0x8103C0", Offset = "0x8103C0", VA = "0x8103C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A737C", Offset = "0x3A737C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700011B")]
	public float RtScaleFactor
	{
		[Token(Token = "0x6000725")]
		[Address(RVA = "0x8103C8", Offset = "0x8103C8", VA = "0x8103C8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000726")]
		[Address(RVA = "0x8103D0", Offset = "0x8103D0", VA = "0x8103D0")]
		set
		{
		}
	}

	[Token(Token = "0x1700011C")]
	public float EyeVFoV
	{
		[Token(Token = "0x6000727")]
		[Address(RVA = "0x810588", Offset = "0x810588", VA = "0x810588")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000728")]
		[Address(RVA = "0x810590", Offset = "0x810590", VA = "0x810590")]
		set
		{
		}
	}

	[Token(Token = "0x1700011D")]
	public float EyeHFoV
	{
		[Token(Token = "0x6000729")]
		[Address(RVA = "0x8105A8", Offset = "0x8105A8", VA = "0x8105A8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600072A")]
		[Address(RVA = "0x8105B0", Offset = "0x8105B0", VA = "0x8105B0")]
		set
		{
		}
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x80F6EC", Offset = "0x80F6EC", VA = "0x80F6EC")]
	public Pvr_UnitySDKRender()
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x80F8AC", Offset = "0x80F8AC", VA = "0x80F8AC")]
	public void ConnectToAndriod()
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x810318", Offset = "0x810318", VA = "0x810318")]
	public void Init()
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0x810B0C", Offset = "0x810B0C", VA = "0x810B0C")]
	private bool InitRenderAbility()
	{
		return default(bool);
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0x810C58", Offset = "0x810C58", VA = "0x810C58")]
	private bool UpdateRenderParaFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0x810D28", Offset = "0x810D28", VA = "0x810D28")]
	private bool CreateEyeBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0x8118C8", Offset = "0x8118C8", VA = "0x8118C8")]
	private void InitSinglePass()
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x811160", Offset = "0x811160", VA = "0x811160")]
	public float GetEyeVFOV()
	{
		return default(float);
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x8112EC", Offset = "0x8112EC", VA = "0x8112EC")]
	public float GetEyeHFOV()
	{
		return default(float);
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x811B50", Offset = "0x811B50", VA = "0x811B50")]
	private void ConfigureEyeBuffer(int eyeTextureIndex, Vector2 resolution)
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x8103FC", Offset = "0x8103FC", VA = "0x8103FC")]
	public bool ReCreateEyeBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x80DFB0", Offset = "0x80DFB0", VA = "0x80DFB0")]
	public void ReInit()
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x80D1D4", Offset = "0x80D1D4", VA = "0x80D1D4")]
	public void IssueRenderThread()
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x81226C", Offset = "0x81226C", VA = "0x81226C")]
	private void AutoAdpatForPico1s()
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x811478", Offset = "0x811478", VA = "0x811478")]
	public Vector2 GetEyeBufferResolution()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x812588", Offset = "0x812588", VA = "0x812588")]
	public bool GetUsePredictedMatrix()
	{
		return default(bool);
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x8105C8", Offset = "0x8105C8", VA = "0x8105C8")]
	public bool GetIsShellMode()
	{
		return default(bool);
	}
}
[Token(Token = "0x20000AF")]
public class Pvr_UnitySDKSinglePass : SDKStereoRendering
{
	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Camera bothCamera;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private Matrix4x4[] unity_StereoMatrixP;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Matrix4x4[] unity_StereoMatrixInvP;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static Matrix4x4[] unity_StereoWorldToCamera;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Matrix4x4[] unity_StereoCameraToWorld;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Matrix4x4[] unity_StereoMatrixVP;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3[] eyesOffset;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Matrix4x4[] eyesOffsetMatrix;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private CommandBuffer commandBufferBeforeForwardOpaque;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CommandBuffer commandBufferBeforeSkybox;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private CommandBuffer commandBufferAfterSkybox;

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x815C58", Offset = "0x815C58", VA = "0x815C58", Slot = "4")]
	public override void InitEye(Camera eye)
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x8168D4", Offset = "0x8168D4", VA = "0x8168D4", Slot = "5")]
	public override void OnSDKRenderInited()
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x816A58", Offset = "0x816A58", VA = "0x816A58", Slot = "6")]
	public override void OnSDKPreRender()
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x817B9C", Offset = "0x817B9C", VA = "0x817B9C", Slot = "7")]
	public override void OnSDKPostRender()
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x8168D8", Offset = "0x8168D8", VA = "0x8168D8")]
	public void OnSDKRenderInited_SinglePass()
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x817C6C", Offset = "0x817C6C", VA = "0x817C6C")]
	private void SetAntiAliasing()
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x81607C", Offset = "0x81607C", VA = "0x81607C")]
	public void SetEyesPosition()
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x816620", Offset = "0x816620", VA = "0x816620")]
	public void SetEyeProjection()
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x817D94", Offset = "0x817D94", VA = "0x817D94")]
	private static Matrix4x4 GetProjection(float near, float far)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x8181A4", Offset = "0x8181A4", VA = "0x8181A4")]
	public static Matrix4x4 MakeProjection(float n, float f)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x817E7C", Offset = "0x817E7C", VA = "0x817E7C")]
	public void SetStereoProjectionMatrix(Matrix4x4 left, Matrix4x4 right)
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x817BA4", Offset = "0x817BA4", VA = "0x817BA4")]
	private void SwitchKeywordAndDeviceView(bool enable)
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x81841C", Offset = "0x81841C", VA = "0x81841C")]
	public static Matrix4x4[] GetStereoWorldToCameraMat()
	{
		return null;
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x816A5C", Offset = "0x816A5C", VA = "0x816A5C")]
	public void SinglePassPreRender()
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x8189F0", Offset = "0x8189F0", VA = "0x8189F0")]
	private void SetCommandBuffers()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x818920", Offset = "0x818920", VA = "0x818920")]
	private void SetRenderTextureWithDepth()
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x8121B4", Offset = "0x8121B4", VA = "0x8121B4")]
	public Pvr_UnitySDKSinglePass()
	{
	}
}
[Token(Token = "0x20000B0")]
public abstract class SDKStereoRendering
{
	[Token(Token = "0x600074E")]
	public abstract void InitEye(Camera eye);

	[Token(Token = "0x600074F")]
	public abstract void OnSDKRenderInited();

	[Token(Token = "0x6000750")]
	public abstract void OnSDKPreRender();

	[Token(Token = "0x6000751")]
	public abstract void OnSDKPostRender();

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x8195E4", Offset = "0x8195E4", VA = "0x8195E4")]
	protected SDKStereoRendering()
	{
	}
}
[Token(Token = "0x20000B1")]
public class HighlightAtGaze : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Color HighlightColor;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float AnimationTime;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer myRenderer;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Color originalColor;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Color targetColor;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private EyeTrackingGazeRay gazeRay;

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x6AD864", Offset = "0x6AD864", VA = "0x6AD864")]
	private void Start()
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x6AD91C", Offset = "0x6AD91C", VA = "0x6AD91C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x6ADB98", Offset = "0x6ADB98", VA = "0x6ADB98")]
	public HighlightAtGaze()
	{
	}
}
[Token(Token = "0x20000B2")]
public class RayVisualizer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private LineRenderer _line;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private EyeTrackingGazeRay gazeRay;

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x81A608", Offset = "0x81A608", VA = "0x81A608")]
	private void Start()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x81A6CC", Offset = "0x81A6CC", VA = "0x81A6CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0x81A8E0", Offset = "0x81A8E0", VA = "0x81A8E0")]
	public RayVisualizer()
	{
	}
}
[Token(Token = "0x20000B3")]
public class GetSeeThroughImage : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public RawImage viewImage_left;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public RawImage viewImage_right;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int width;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int height;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private RenderTexture cameraTex_left;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RenderTexture cameraTex_right;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool cameraPreview;

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x6978C4", Offset = "0x6978C4", VA = "0x6978C4")]
	private void Start()
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x697A24", Offset = "0x697A24", VA = "0x697A24")]
	private void Update()
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x697A9C", Offset = "0x697A9C", VA = "0x697A9C")]
	private void OnDestory()
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x6978C8", Offset = "0x6978C8", VA = "0x6978C8")]
	private void CreateTexture()
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x697A50", Offset = "0x697A50", VA = "0x697A50")]
	private void DrawTexture()
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x697AB8", Offset = "0x697AB8", VA = "0x697AB8")]
	public GetSeeThroughImage()
	{
	}
}
[Token(Token = "0x20000B4")]
public class OverlayExternalSurfaceDemo : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000637")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B5F4", Offset = "0x39B5F4")]
	private sealed class <>c
	{
		[Token(Token = "0x40024D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40024D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static Pvr_UnitySDKEyeOverlay.ExternalAndroidSurfaceObjectCreated <>9__7_0;

		[Token(Token = "0x6002CBA")]
		[Address(RVA = "0xA7285C", Offset = "0xA7285C", VA = "0xA7285C")]
		public <>c()
		{
		}

		[Token(Token = "0x6002CBB")]
		[Address(RVA = "0xA72864", Offset = "0xA72864", VA = "0xA72864")]
		internal void <StartPlay>b__7_0()
		{
		}
	}

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string movieName;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Pvr_UnitySDKEyeOverlay.OverlayType overlayType;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Pvr_UnitySDKEyeOverlay.OverlayShape overlayShape;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Pvr_UnitySDKEyeOverlay overlay;

	[Token(Token = "0x4000594")]
	private const string TAG = "[ExternalSurface]>>>>>>";

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xA72394", Offset = "0xA72394", VA = "0xA72394")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xA72508", Offset = "0xA72508", VA = "0xA72508")]
	private void Start()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0xA72590", Offset = "0xA72590", VA = "0xA72590")]
	private void StartPlay(string moviePath, string licenceUrl)
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0xA727E8", Offset = "0xA727E8", VA = "0xA727E8")]
	public OverlayExternalSurfaceDemo()
	{
	}
}
[Token(Token = "0x20000B5")]
public class MoveCylinder : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Vector3 startingPosition;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Quaternion startingRotation;

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x6CB4E0", Offset = "0x6CB4E0", VA = "0x6CB4E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x6CB570", Offset = "0x6CB570", VA = "0x6CB570")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x6CB60C", Offset = "0x6CB60C", VA = "0x6CB60C")]
	public MoveCylinder()
	{
	}
}
[Token(Token = "0x20000B6")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x399DBC", Offset = "0x399DBC")]
public class MoveSphere : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Vector3 startingPosition;

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x6CB614", Offset = "0x6CB614", VA = "0x6CB614")]
	private void Start()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x6CB838", Offset = "0x6CB838", VA = "0x6CB838")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x6CB758", Offset = "0x6CB758", VA = "0x6CB758")]
	public void SetGazedAt(bool gazedAt)
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x6CB83C", Offset = "0x6CB83C", VA = "0x6CB83C")]
	public void Reset()
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x6CB9C8", Offset = "0x6CB9C8", VA = "0x6CB9C8")]
	public void TeleportRandomly()
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x6CBB14", Offset = "0x6CBB14", VA = "0x6CBB14")]
	public MoveSphere()
	{
	}
}
[Token(Token = "0x20000B7")]
public class Resetbutton : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x600076C")]
	[Address(RVA = "0x81B6E8", Offset = "0x81B6E8", VA = "0x81B6E8")]
	public void DemoResetTracking()
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x81B79C", Offset = "0x81B79C", VA = "0x81B79C")]
	public Resetbutton()
	{
	}
}
[Token(Token = "0x20000B8")]
public class UserEntitlementCheck : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x600076E")]
	[Address(RVA = "0x654134", Offset = "0x654134", VA = "0x654134")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x6541E8", Offset = "0x6541E8", VA = "0x6541E8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x65429C", Offset = "0x65429C", VA = "0x65429C")]
	private void HandelEntitlementCheckResult(int resultCode)
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x654658", Offset = "0x654658", VA = "0x654658")]
	public UserEntitlementCheck()
	{
	}
}
[Token(Token = "0x20000B9")]
public class Pvr_UnitySDKHeadTrack : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x39EAE4", Offset = "0x39EAE4")]
	public bool trackRotation;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x39EB18", Offset = "0x39EB18")]
	public bool trackPosition;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform target;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private bool updated;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	private bool dataClock;

	[Token(Token = "0x1700011E")]
	public Ray Gaze
	{
		[Token(Token = "0x6000772")]
		[Address(RVA = "0x80549C", Offset = "0x80549C", VA = "0x80549C")]
		get
		{
			return default(Ray);
		}
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x805B3C", Offset = "0x805B3C", VA = "0x805B3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x80555C", Offset = "0x80555C", VA = "0x80555C")]
	private void UpdateHead()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x805D80", Offset = "0x805D80", VA = "0x805D80")]
	public Pvr_UnitySDKHeadTrack()
	{
	}
}
[Token(Token = "0x20000BA")]
public class Pvr_UnitySDKPose
{
	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static readonly Matrix4x4 flipZ;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39EB4C", Offset = "0x39EB4C")]
	private Vector3 <Position>k__BackingField;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39EB5C", Offset = "0x39EB5C")]
	private Quaternion <Orientation>k__BackingField;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39EB6C", Offset = "0x39EB6C")]
	private Matrix4x4 <Matrix>k__BackingField;

	[Token(Token = "0x1700011F")]
	public Matrix4x4 RightHandedMatrix
	{
		[Token(Token = "0x6000776")]
		[Address(RVA = "0x80EB18", Offset = "0x80EB18", VA = "0x80EB18")]
		get
		{
			return default(Matrix4x4);
		}
	}

	[Token(Token = "0x17000120")]
	public Vector3 Position
	{
		[Token(Token = "0x6000777")]
		[Address(RVA = "0x80EF00", Offset = "0x80EF00", VA = "0x80EF00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A738C", Offset = "0x3A738C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000778")]
		[Address(RVA = "0x80EF14", Offset = "0x80EF14", VA = "0x80EF14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A739C", Offset = "0x3A739C")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000121")]
	public Quaternion Orientation
	{
		[Token(Token = "0x6000779")]
		[Address(RVA = "0x80EF20", Offset = "0x80EF20", VA = "0x80EF20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A73AC", Offset = "0x3A73AC")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x600077A")]
		[Address(RVA = "0x80EF30", Offset = "0x80EF30", VA = "0x80EF30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A73BC", Offset = "0x3A73BC")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000122")]
	public Matrix4x4 Matrix
	{
		[Token(Token = "0x600077B")]
		[Address(RVA = "0x80EF40", Offset = "0x80EF40", VA = "0x80EF40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A73CC", Offset = "0x3A73CC")]
		get
		{
			return default(Matrix4x4);
		}
		[Token(Token = "0x600077C")]
		[Address(RVA = "0x80EF68", Offset = "0x80EF68", VA = "0x80EF68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A73DC", Offset = "0x3A73DC")]
		protected set
		{
		}
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x80EFD4", Offset = "0x80EFD4", VA = "0x80EFD4")]
	public Pvr_UnitySDKPose(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x80F2F8", Offset = "0x80F2F8", VA = "0x80F2F8")]
	public Pvr_UnitySDKPose(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x80F34C", Offset = "0x80F34C", VA = "0x80F34C")]
	public void Set(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x80F078", Offset = "0x80F078", VA = "0x80F078")]
	protected void Set(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x80F4B8", Offset = "0x80F4B8", VA = "0x80F4B8")]
	private Quaternion NormalizeQuaternion(ref Quaternion q)
	{
		return default(Quaternion);
	}
}
[Token(Token = "0x20000BB")]
public class Pvr_UnitySDKSensor
{
	[Token(Token = "0x2000638")]
	public delegate void Enter3DofModel();

	[Token(Token = "0x2000639")]
	public delegate void Exit3DofModel();

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKSensor instance;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private bool SensorStart;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	private bool SensorInit;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Quaternion UnityQuaternion;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 UnityPosition;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Sensorindex sensorIndex;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool dofClock;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static Action EyeFovChanged;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Pvr_UnitySDKPose HeadPose;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float vfov;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float hfov;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float w;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float x;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float y;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float z;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float px;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float py;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float pz;

	[Token(Token = "0x17000123")]
	public static Pvr_UnitySDKSensor Instance
	{
		[Token(Token = "0x6000783")]
		[Address(RVA = "0x805C9C", Offset = "0x805C9C", VA = "0x805C9C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000784")]
		[Address(RVA = "0x812694", Offset = "0x812694", VA = "0x812694")]
		set
		{
		}
	}

	[Token(Token = "0x14000017")]
	public static event Enter3DofModel Enter3DofModelEvent
	{
		[Token(Token = "0x6000786")]
		[Address(RVA = "0x812850", Offset = "0x812850", VA = "0x812850")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A73EC", Offset = "0x3A73EC")]
		add
		{
		}
		[Token(Token = "0x6000787")]
		[Address(RVA = "0x812958", Offset = "0x812958", VA = "0x812958")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A73FC", Offset = "0x3A73FC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000018")]
	public static event Exit3DofModel Exit3DofModelEvent
	{
		[Token(Token = "0x6000788")]
		[Address(RVA = "0x812A60", Offset = "0x812A60", VA = "0x812A60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A740C", Offset = "0x3A740C")]
		add
		{
		}
		[Token(Token = "0x6000789")]
		[Address(RVA = "0x812B68", Offset = "0x812B68", VA = "0x812B68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A741C", Offset = "0x3A741C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x812594", Offset = "0x812594", VA = "0x812594")]
	public Pvr_UnitySDKSensor()
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x812710", Offset = "0x812710", VA = "0x812710")]
	public void Init()
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x80C244", Offset = "0x80C244", VA = "0x80C244")]
	public void SensorUpdate()
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x812F30", Offset = "0x812F30", VA = "0x812F30")]
	public bool InitUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x812C70", Offset = "0x812C70", VA = "0x812C70")]
	public bool InitUnitySDK6DofSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x80DAF8", Offset = "0x80DAF8", VA = "0x80DAF8")]
	public bool StartUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x80C718", Offset = "0x80C718", VA = "0x80C718")]
	public bool StopUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x80A1C4", Offset = "0x80A1C4", VA = "0x80A1C4")]
	public bool ResetUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x809C8C", Offset = "0x809C8C", VA = "0x809C8C")]
	public bool OptionalResetUnitySDKSensor(int resetRot, int resetPos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x813094", Offset = "0x813094", VA = "0x813094")]
	public bool GetUnitySDKSensorState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x814A98", Offset = "0x814A98", VA = "0x814A98")]
	public bool GetUnitySDKPSensorState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x81483C", Offset = "0x81483C", VA = "0x81483C")]
	private void RefreshHeadData(float x, float y, float z, float w, float px, float py, float pz)
	{
	}
}
[Token(Token = "0x20000BC")]
public class CLoadingAsset : ScriptableObject
{
	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int SplashScreenType;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<Texture2D> splashImage;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Texture2D Inside_background;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool UseSplashText;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public string DefaultText;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string ChineseText;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public string EnglishText;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string JapaneseText;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public string KoreanText;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string FontSize;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Color FontColor;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public string TextHeight;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool UseCarousel;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int SplashTextAlignment;

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x683C18", Offset = "0x683C18", VA = "0x683C18")]
	public CLoadingAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x20000BD")]
public class Pvr_UnitySDKConfigProfile
{
	[Token(Token = "0x200063A")]
	public struct Lenses
	{
		[Token(Token = "0x40024D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float separation;

		[Token(Token = "0x40024D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float offset;

		[Token(Token = "0x40024D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float distance;

		[Token(Token = "0x40024D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int alignment;

		[Token(Token = "0x40024DA")]
		public const int AlignTop = -1;

		[Token(Token = "0x40024DB")]
		public const int AlignCenter = 0;

		[Token(Token = "0x40024DC")]
		public const int AlignBottom = 1;
	}

	[Token(Token = "0x200063B")]
	public struct MaxFOV
	{
		[Token(Token = "0x40024DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float upper;

		[Token(Token = "0x40024DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float lower;

		[Token(Token = "0x40024DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float inner;

		[Token(Token = "0x40024E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float outer;
	}

	[Token(Token = "0x200063C")]
	public struct Distortion
	{
		[Token(Token = "0x40024E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float k1;

		[Token(Token = "0x40024E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float k2;

		[Token(Token = "0x40024E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float k3;

		[Token(Token = "0x40024E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float k4;

		[Token(Token = "0x40024E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float k5;

		[Token(Token = "0x40024E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float k6;

		[Token(Token = "0x6002CC4")]
		[Address(RVA = "0x47E2D4", Offset = "0x47E2D4", VA = "0x47E2D4")]
		public float distort(float r)
		{
			return default(float);
		}

		[Token(Token = "0x6002CC5")]
		[Address(RVA = "0x47E2DC", Offset = "0x47E2DC", VA = "0x47E2DC")]
		public float distort(float r, float dist)
		{
			return default(float);
		}

		[Token(Token = "0x6002CC6")]
		[Address(RVA = "0x47E2E4", Offset = "0x47E2E4", VA = "0x47E2E4")]
		public float diatortInv(float radious)
		{
			return default(float);
		}
	}

	[Token(Token = "0x200063D")]
	public struct Device
	{
		[Token(Token = "0x40024E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Lenses devLenses;

		[Token(Token = "0x40024E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MaxFOV devMaxFov;

		[Token(Token = "0x40024E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Distortion devDistortion;

		[Token(Token = "0x40024EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Distortion devDistortionInv;
	}

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Device SimulateDevice;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Device device;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static readonly Pvr_UnitySDKConfigProfile Default;

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x14F18B8", Offset = "0x14F18B8", VA = "0x14F18B8")]
	public Pvr_UnitySDKConfigProfile Clone()
	{
		return null;
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x14F195C", Offset = "0x14F195C", VA = "0x14F195C")]
	public static Pvr_UnitySDKConfigProfile GetPicoProfile()
	{
		return null;
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x14F1A18", Offset = "0x14F1A18", VA = "0x14F1A18")]
	public float[] GetLeftEyeVisibleTanAngles(float width, float height)
	{
		return null;
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x14F1E40", Offset = "0x14F1E40", VA = "0x14F1E40")]
	public float[] GetLeftEyeNoLensTanAngles(float width, float height)
	{
		return null;
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x14F2114", Offset = "0x14F2114", VA = "0x14F2114")]
	public Rect GetLeftEyeVisibleScreenRect(float[] undistortedFrustum, float width, float height)
	{
		return default(Rect);
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x14F1954", Offset = "0x14F1954", VA = "0x14F1954")]
	public Pvr_UnitySDKConfigProfile()
	{
	}
}
[Token(Token = "0x20000BE")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x399E2C", Offset = "0x399E2C")]
public class Pvr_UnitySDKFPS : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Text fpsText;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float updateInterval;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float accum;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int frames;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float timeLeft;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string strFps;

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x8052C8", Offset = "0x8052C8", VA = "0x8052C8")]
	private void Update()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x80535C", Offset = "0x80535C", VA = "0x80535C")]
	private void ShowFps()
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x80548C", Offset = "0x80548C", VA = "0x80548C")]
	public Pvr_UnitySDKFPS()
	{
	}
}
[Token(Token = "0x20000BF")]
public class Pvr_GazeFuse : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject gazeGameObject;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Image image;

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0xD1385C", Offset = "0xD1385C", VA = "0xD1385C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0xD138BC", Offset = "0xD138BC", VA = "0xD138BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0xD13A28", Offset = "0xD13A28", VA = "0xD13A28")]
	private void FuseAmountChanged(float fuseAmount)
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0xD13ADC", Offset = "0xD13ADC", VA = "0xD13ADC")]
	public Pvr_GazeFuse()
	{
	}
}
[Token(Token = "0x20000C0")]
public class Pvr_GazeInputModule : PointerInputModule
{
	[Token(Token = "0x200063E")]
	public enum Mode
	{
		[Token(Token = "0x40024EC")]
		Click,
		[Token(Token = "0x40024ED")]
		Gaze
	}

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Mode mode;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39EB9C", Offset = "0x39EB9C")]
	public string ClickInputName;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39EBD0", Offset = "0x39EBD0")]
	public float GazeTimeInSeconds;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39EC04", Offset = "0x39EC04")]
	private static float <gazeFraction>k__BackingField;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39EC14", Offset = "0x39EC14")]
	private static GameObject <gazeGameObject>k__BackingField;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RaycastResult CurrentRaycast;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private PointerEventData pointerEventData;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private GameObject currentLookAtHandler;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float currentLookAtHandlerClickTime;

	[Token(Token = "0x17000124")]
	public static float gazeFraction
	{
		[Token(Token = "0x60007A5")]
		[Address(RVA = "0xD13AE4", Offset = "0xD13AE4", VA = "0xD13AE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A742C", Offset = "0x3A742C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60007A6")]
		[Address(RVA = "0xD13B3C", Offset = "0xD13B3C", VA = "0xD13B3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A743C", Offset = "0x3A743C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000125")]
	public static GameObject gazeGameObject
	{
		[Token(Token = "0x60007A7")]
		[Address(RVA = "0xD13BA0", Offset = "0xD13BA0", VA = "0xD13BA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A744C", Offset = "0x3A744C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007A8")]
		[Address(RVA = "0xD13BF8", Offset = "0xD13BF8", VA = "0xD13BF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A745C", Offset = "0x3A745C")]
		private set
		{
		}
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xD13C54", Offset = "0xD13C54", VA = "0xD13C54", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0xD13C70", Offset = "0xD13C70", VA = "0xD13C70")]
	private void HandleLook()
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0xD13F9C", Offset = "0xD13F9C", VA = "0xD13F9C")]
	private void HandleSelection()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0xD14570", Offset = "0xD14570", VA = "0xD14570")]
	public Pvr_GazeInputModule()
	{
	}
}
[Token(Token = "0x20000C1")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x399E9C", Offset = "0x399E9C")]
public class Pvr_GazeInputModuleCrosshair : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool DisplayCrosshair;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x39EC24", Offset = "0x39EC24")]
	public Transform Crosshair;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Pvr_GazeInputModule gazeInputModule;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Vector3 CrosshairOriginalScale;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float CrosshairOriginalDistance;

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0xD145DC", Offset = "0xD145DC", VA = "0xD145DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0xD1463C", Offset = "0xD1463C", VA = "0xD1463C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0xD146E8", Offset = "0xD146E8", VA = "0xD146E8")]
	private void Update()
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xD14824", Offset = "0xD14824", VA = "0xD14824")]
	private void SetCrossHairAtDistance(float dist)
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0xD14968", Offset = "0xD14968", VA = "0xD14968")]
	public Pvr_GazeInputModuleCrosshair()
	{
	}
}
[Token(Token = "0x20000C2")]
public enum RenderEventType
{
	[Token(Token = "0x40005DD")]
	InitRenderThread = 1024,
	[Token(Token = "0x40005DE")]
	Pause,
	[Token(Token = "0x40005DF")]
	Resume,
	[Token(Token = "0x40005E0")]
	LeftEyeEndFrame,
	[Token(Token = "0x40005E1")]
	RightEyeEndFrame,
	[Token(Token = "0x40005E2")]
	TimeWarp,
	[Token(Token = "0x40005E3")]
	ResetVrModeParms,
	[Token(Token = "0x40005E4")]
	ShutdownRenderThread,
	[Token(Token = "0x40005E5")]
	BeginEye,
	[Token(Token = "0x40005E6")]
	EndEye,
	[Token(Token = "0x40005E7")]
	BoundaryRenderLeft,
	[Token(Token = "0x40005E8")]
	BoundaryRenderRight,
	[Token(Token = "0x40005E9")]
	BothEyeEndFrame,
	[Token(Token = "0x40005EA")]
	CameraFrameLeft,
	[Token(Token = "0x40005EB")]
	CameraFrameRight,
	[Token(Token = "0x40005EC")]
	StartCameraFrame,
	[Token(Token = "0x40005ED")]
	StopCameraFrame
}
[Token(Token = "0x20000C3")]
public static class Pvr_UnitySDKPluginEvent
{
	[Token(Token = "0x200063F")]
	private delegate void RenderEventDelegate(int eventId);

	[Token(Token = "0x40005EE")]
	private const uint IS_DATA_FLAG = 2147483648u;

	[Token(Token = "0x40005EF")]
	private const uint DATA_POS_MASK = 1073741824u;

	[Token(Token = "0x40005F0")]
	private const int DATA_POS_SHIFT = 30;

	[Token(Token = "0x40005F1")]
	private const uint EVENT_TYPE_MASK = 1056899072u;

	[Token(Token = "0x40005F2")]
	private const int EVENT_TYPE_SHIFT = 17;

	[Token(Token = "0x40005F3")]
	private const uint PAYLOAD_MASK = 65535u;

	[Token(Token = "0x40005F4")]
	private const int PAYLOAD_SHIFT = 16;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RenderEventDelegate SetSinglePassBeforeForwardOpaqueHandle;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static IntPtr SetSinglePassBeforeForwardOpaquePtr;

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0x80CCB4", Offset = "0x80CCB4", VA = "0x80CCB4")]
	public static void Issue(RenderEventType eventType)
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0x80E5D4", Offset = "0x80E5D4", VA = "0x80E5D4")]
	private static int EncodeType(int eventType)
	{
		return default(int);
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x80E5DC", Offset = "0x80E5DC", VA = "0x80E5DC")]
	private static int EncodeData(int eventId, int eventData, int pos)
	{
		return default(int);
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x80E608", Offset = "0x80E608", VA = "0x80E608")]
	private static int DecodeData(int eventData)
	{
		return default(int);
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x80E5CC", Offset = "0x80E5CC", VA = "0x80E5CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x3A746C", Offset = "0x3A746C")]
	private static void SetSinglePassBeforeForwardOpaque(int eventId)
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x80E61C", Offset = "0x80E61C", VA = "0x80E61C")]
	public static void SetSinglePassBeforeForwardOpaque(CommandBuffer cmd)
	{
	}
}
[Token(Token = "0x20000C4")]
public class Pvr_UnitySDKSightInputModule : BaseInputModule
{
	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x39EC58", Offset = "0x39EC58")]
	public GameObject cursor;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int trigger;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public float clickTime;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Vector2 hotspot;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PointerEventData pointerData;

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x814C98", Offset = "0x814C98", VA = "0x814C98", Slot = "21")]
	public override bool ShouldActivateModule()
	{
		return default(bool);
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x814D44", Offset = "0x814D44", VA = "0x814D44", Slot = "22")]
	public override void DeactivateModule()
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x815114", Offset = "0x815114", VA = "0x815114", Slot = "20")]
	public override bool IsPointerOverGameObject(int pointerId)
	{
		return default(bool);
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x8151AC", Offset = "0x8151AC", VA = "0x8151AC", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x8151E0", Offset = "0x8151E0", VA = "0x8151E0")]
	private void CastRayFromGaze()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x8153B8", Offset = "0x8153B8", VA = "0x8153B8")]
	private void UpdateCurrentObject()
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x8155B8", Offset = "0x8155B8", VA = "0x8155B8")]
	private void PlaceCursor()
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x814E6C", Offset = "0x814E6C", VA = "0x814E6C")]
	private void HandlePendingClick()
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x815868", Offset = "0x815868", VA = "0x815868")]
	private void HandleTrigger()
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x815BFC", Offset = "0x815BFC", VA = "0x815BFC")]
	public Pvr_UnitySDKSightInputModule()
	{
	}
}
[Token(Token = "0x20000C5")]
public class Pvr_ObjImporter
{
	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_ObjImporter _instance;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private List<int> triangles;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private List<Vector3> vertices;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<Vector2> uv;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private List<Vector3> normals;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<PvrVector3Int> faceData;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private List<int> intArray;

	[Token(Token = "0x4000603")]
	private const int MIN_POW_10 = -16;

	[Token(Token = "0x4000604")]
	private const int MAX_POW_10 = 16;

	[Token(Token = "0x4000605")]
	private const int NUM_POWS_10 = 33;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly float[] pow10;

	[Token(Token = "0x17000126")]
	public static Pvr_ObjImporter Instance
	{
		[Token(Token = "0x60007C4")]
		[Address(RVA = "0xD181F4", Offset = "0xD181F4", VA = "0xD181F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0xD182BC", Offset = "0xD182BC", VA = "0xD182BC")]
	public Mesh ImportFile(string filePath)
	{
		return null;
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0xD18898", Offset = "0xD18898", VA = "0xD18898")]
	private void LoadMeshData(string fileName)
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0xD19194", Offset = "0xD19194", VA = "0xD19194")]
	private float GetFloat(StringBuilder sb, ref int start, ref StringBuilder sbFloat)
	{
		return default(float);
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0xD1936C", Offset = "0xD1936C", VA = "0xD1936C")]
	private int GetInt(StringBuilder sb, ref int start, ref StringBuilder sbInt)
	{
		return default(int);
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xD1987C", Offset = "0xD1987C", VA = "0xD1987C")]
	private static float[] GenerateLookupTable()
	{
		return null;
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xD194F4", Offset = "0xD194F4", VA = "0xD194F4")]
	private float ParseFloat(StringBuilder value)
	{
		return default(float);
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0xD19810", Offset = "0xD19810", VA = "0xD19810")]
	private int IntParseFast(StringBuilder value)
	{
		return default(int);
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0xD182B4", Offset = "0xD182B4", VA = "0xD182B4")]
	public Pvr_ObjImporter()
	{
	}
}
[Token(Token = "0x20000C6")]
public sealed class PvrVector3Int
{
	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39ECAC", Offset = "0x39ECAC")]
	private int <x>k__BackingField;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39ECBC", Offset = "0x39ECBC")]
	private int <y>k__BackingField;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39ECCC", Offset = "0x39ECCC")]
	private int <z>k__BackingField;

	[Token(Token = "0x17000127")]
	public int x
	{
		[Token(Token = "0x60007CE")]
		[Address(RVA = "0x8923E8", Offset = "0x8923E8", VA = "0x8923E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A74DC", Offset = "0x3A74DC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007CF")]
		[Address(RVA = "0x8923F0", Offset = "0x8923F0", VA = "0x8923F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A74EC", Offset = "0x3A74EC")]
		set
		{
		}
	}

	[Token(Token = "0x17000128")]
	public int y
	{
		[Token(Token = "0x60007D0")]
		[Address(RVA = "0x8923F8", Offset = "0x8923F8", VA = "0x8923F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A74FC", Offset = "0x3A74FC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007D1")]
		[Address(RVA = "0x892400", Offset = "0x892400", VA = "0x892400")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A750C", Offset = "0x3A750C")]
		set
		{
		}
	}

	[Token(Token = "0x17000129")]
	public int z
	{
		[Token(Token = "0x60007D2")]
		[Address(RVA = "0x892408", Offset = "0x892408", VA = "0x892408")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A751C", Offset = "0x3A751C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007D3")]
		[Address(RVA = "0x892410", Offset = "0x892410", VA = "0x892410")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A752C", Offset = "0x3A752C")]
		set
		{
		}
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x892418", Offset = "0x892418", VA = "0x892418")]
	public PvrVector3Int()
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x892420", Offset = "0x892420", VA = "0x892420")]
	public PvrVector3Int(int x, int y, int z)
	{
	}
}
[Token(Token = "0x20000C7")]
public class Pvr_EnumFlags : PropertyAttribute
{
	[Token(Token = "0x60007D6")]
	[Address(RVA = "0xD13854", Offset = "0xD13854", VA = "0xD13854")]
	public Pvr_EnumFlags()
	{
	}
}
[Token(Token = "0x20000C8")]
public enum ConfirmBtn
{
	[Token(Token = "0x400060B")]
	App = 1,
	[Token(Token = "0x400060C")]
	TouchPad = 2,
	[Token(Token = "0x400060D")]
	Trigger = 4
}
[Token(Token = "0x20000C9")]
public class Pvr_InputModule : PointerInputModule
{
	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UIPointer> pointers;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Pvr_EnumFlags]
	public ConfirmBtn confirmBtn;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<RaycastResult> rayCasts;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private RaycastResult rayCastResult;

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0xD149CC", Offset = "0xD149CC", VA = "0xD149CC", Slot = "30")]
	public virtual void Initialise()
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0xD14A68", Offset = "0xD14A68", VA = "0xD14A68")]
	public static void AddPoint(Pvr_UIPointer point)
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0xD14B6C", Offset = "0xD14B6C", VA = "0xD14B6C")]
	public static void RemovePoint(Pvr_UIPointer point)
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0xD14C6C", Offset = "0xD14C6C", VA = "0xD14C6C", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0xD150B0", Offset = "0xD150B0", VA = "0xD150B0", Slot = "31")]
	protected virtual List<RaycastResult> CheckRaycasts(Pvr_UIPointer pointer)
	{
		return null;
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0xD15218", Offset = "0xD15218", VA = "0xD15218", Slot = "32")]
	protected virtual bool CheckTransformTree(Transform target, Transform source)
	{
		return default(bool);
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0xD15328", Offset = "0xD15328", VA = "0xD15328", Slot = "33")]
	protected virtual bool NoValidCollision(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
		return default(bool);
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0xD15410", Offset = "0xD15410", VA = "0xD15410", Slot = "34")]
	protected virtual bool IsHovering(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0xD15678", Offset = "0xD15678", VA = "0xD15678", Slot = "35")]
	protected virtual bool ValidElement(GameObject obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xD15744", Offset = "0xD15744", VA = "0xD15744", Slot = "36")]
	protected virtual void CheckPointerHoverClick(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xD157E0", Offset = "0xD157E0", VA = "0xD157E0", Slot = "37")]
	protected virtual void Hover(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0xD16BF4", Offset = "0xD16BF4", VA = "0xD16BF4", Slot = "38")]
	protected virtual void Click(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0xD16C7C", Offset = "0xD16C7C", VA = "0xD16C7C", Slot = "39")]
	protected virtual void ClickOnUp(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0xD16D20", Offset = "0xD16D20", VA = "0xD16D20", Slot = "40")]
	protected virtual void ClickOnDown(Pvr_UIPointer pointer, List<RaycastResult> results, bool forceClick = false)
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0xD16DDC", Offset = "0xD16DDC", VA = "0xD16DDC", Slot = "41")]
	protected virtual bool IsEligibleClick(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
		return default(bool);
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0xD1717C", Offset = "0xD1717C", VA = "0xD1717C", Slot = "42")]
	protected virtual bool AttemptClick(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0xD176E8", Offset = "0xD176E8", VA = "0xD176E8", Slot = "43")]
	protected virtual void Drag(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0xD180E0", Offset = "0xD180E0", VA = "0xD180E0")]
	public Pvr_InputModule()
	{
	}
}
[Token(Token = "0x20000CA")]
public class Pvr_UICanvas : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000640")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B604", Offset = "0x39B604")]
	private sealed class <CreateDraggablePanel>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40024EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40024F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Canvas canvas;

		[Token(Token = "0x40024F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector2 canvasSize;

		[Token(Token = "0x1700045E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CCE")]
			[Address(RVA = "0xD1D484", Offset = "0xD1D484", VA = "0xD1D484", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CD0")]
			[Address(RVA = "0xD1D504", Offset = "0xD1D504", VA = "0xD1D504", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CCB")]
		[Address(RVA = "0xD1CB64", Offset = "0xD1CB64", VA = "0xD1CB64")]
		[DebuggerHidden]
		public <CreateDraggablePanel>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002CCC")]
		[Address(RVA = "0xD1CF2C", Offset = "0xD1CF2C", VA = "0xD1CF2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CCD")]
		[Address(RVA = "0xD1CF30", Offset = "0xD1CF30", VA = "0xD1CF30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CCF")]
		[Address(RVA = "0xD1D48C", Offset = "0xD1D48C", VA = "0xD1D48C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool clickOnPointerCollision;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float autoActivateWithinDistance;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	protected BoxCollider canvasBoxCollider;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Rigidbody canvasRigidBody;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected Coroutine draggablePanelCreation;

	[Token(Token = "0x4000617")]
	protected const string CANVAS_DRAGGABLE_PANEL = "UICANVAS_DRAGGABLE_PANEL";

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0xD1C558", Offset = "0xD1C558", VA = "0xD1C558", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0xD1C568", Offset = "0xD1C568", VA = "0xD1C568", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0xD1C578", Offset = "0xD1C578", VA = "0xD1C578", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0xD1C588", Offset = "0xD1C588", VA = "0xD1C588", Slot = "7")]
	protected virtual void SetupCanvas()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0xD1CAC4", Offset = "0xD1CAC4", VA = "0xD1CAC4", Slot = "8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A753C", Offset = "0x3A753C")]
	protected virtual IEnumerator CreateDraggablePanel(Canvas canvas, Vector2 canvasSize)
	{
		return null;
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0xD1CB84", Offset = "0xD1CB84", VA = "0xD1CB84", Slot = "9")]
	protected virtual void RemoveCanvas()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0xD1CF24", Offset = "0xD1CF24", VA = "0xD1CF24")]
	public Pvr_UICanvas()
	{
	}
}
[Token(Token = "0x20000CB")]
public struct UIDraggableItemEventArgs
{
	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject target;
}
[Token(Token = "0x20000CC")]
public delegate void UIDraggableItemEventHandler(object sender, UIDraggableItemEventArgs e);
[Token(Token = "0x20000CD")]
public class Pvr_UIDraggableItem : UnityEngine.MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IDragHandler, IEndDragHandler
{
	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool restrictToDropZone;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public bool restrictToOriginalCanvas;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float moveOffset;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public GameObject validDropZone;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected RectTransform dragTransform;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected Vector3 startPosition;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Quaternion startRotation;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected GameObject startDropZone;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected Transform startParent;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Canvas startCanvas;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected CanvasGroup canvasGroup;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Pvr_InputModule currentInputmodule;

	[Token(Token = "0x14000019")]
	public event UIDraggableItemEventHandler DraggableItemDropped
	{
		[Token(Token = "0x60007F5")]
		[Address(RVA = "0xD1D50C", Offset = "0xD1D50C", VA = "0xD1D50C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A75AC", Offset = "0x3A75AC")]
		add
		{
		}
		[Token(Token = "0x60007F6")]
		[Address(RVA = "0xD1D5BC", Offset = "0xD1D5BC", VA = "0xD1D5BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A75BC", Offset = "0x3A75BC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001A")]
	public event UIDraggableItemEventHandler DraggableItemReset
	{
		[Token(Token = "0x60007F7")]
		[Address(RVA = "0xD1D66C", Offset = "0xD1D66C", VA = "0xD1D66C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A75CC", Offset = "0x3A75CC")]
		add
		{
		}
		[Token(Token = "0x60007F8")]
		[Address(RVA = "0xD1D71C", Offset = "0xD1D71C", VA = "0xD1D71C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A75DC", Offset = "0x3A75DC")]
		remove
		{
		}
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xD1D7CC", Offset = "0xD1D7CC", VA = "0xD1D7CC", Slot = "7")]
	public virtual void OnDraggableItemDropped(UIDraggableItemEventArgs e)
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xD1D7E8", Offset = "0xD1D7E8", VA = "0xD1D7E8", Slot = "8")]
	public virtual void OnDraggableItemReset(UIDraggableItemEventArgs e)
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0xD1D804", Offset = "0xD1D804", VA = "0xD1D804", Slot = "4")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xD1DBC4", Offset = "0xD1DBC4", VA = "0xD1DBC4", Slot = "5")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xD1DBD4", Offset = "0xD1DBD4", VA = "0xD1DBD4", Slot = "6")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0xD1E214", Offset = "0xD1E214", VA = "0xD1E214", Slot = "9")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0xD1E334", Offset = "0xD1E334", VA = "0xD1E334", Slot = "10")]
	protected virtual Pvr_UIPointer GetPointer()
	{
		return null;
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0xD1E510", Offset = "0xD1E510", VA = "0xD1E510", Slot = "11")]
	protected virtual void SetDragPosition(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0xD1E87C", Offset = "0xD1E87C", VA = "0xD1E87C", Slot = "12")]
	protected virtual void ResetElement()
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0xD1E998", Offset = "0xD1E998", VA = "0xD1E998", Slot = "13")]
	protected virtual UIDraggableItemEventArgs SetEventPayload(GameObject target)
	{
		return default(UIDraggableItemEventArgs);
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0xD1E9A0", Offset = "0xD1E9A0", VA = "0xD1E9A0")]
	public Pvr_UIDraggableItem()
	{
	}
}
[Token(Token = "0x20000CE")]
public class Pvr_UIDropZone : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected Pvr_UIDraggableItem droppableItem;

	[Token(Token = "0x6000804")]
	[Address(RVA = "0xD1E9B4", Offset = "0xD1E9B4", VA = "0xD1E9B4", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0xD1EAD8", Offset = "0xD1EAD8", VA = "0xD1EAD8", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0xD1EB80", Offset = "0xD1EB80", VA = "0xD1EB80")]
	public Pvr_UIDropZone()
	{
	}
}
[Token(Token = "0x20000CF")]
public class Pvr_UIGraphicRaycaster : GraphicRaycaster
{
	[Serializable]
	[Token(Token = "0x2000641")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B614", Offset = "0x39B614")]
	private sealed class <>c
	{
		[Token(Token = "0x40024F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40024F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static Comparison<RaycastResult> <>9__7_0;

		[Token(Token = "0x6002CD2")]
		[Address(RVA = "0xD1FEA4", Offset = "0xD1FEA4", VA = "0xD1FEA4")]
		public <>c()
		{
		}

		[Token(Token = "0x6002CD3")]
		[Address(RVA = "0xD1FEAC", Offset = "0xD1FEAC", VA = "0xD1FEAC")]
		internal int <Raycast>b__7_0(RaycastResult g1, RaycastResult g2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected Canvas currentCanvas;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Vector2 lastKnownPosition;

	[Token(Token = "0x400062A")]
	protected const float UI_CONTROL_OFFSET = 1E-05f;

	[NonSerialized]
	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<RaycastResult> s_RaycastResults;

	[Token(Token = "0x1700012A")]
	protected virtual Canvas canvas
	{
		[Token(Token = "0x600080B")]
		[Address(RVA = "0xD1FC68", Offset = "0xD1FC68", VA = "0xD1FC68", Slot = "25")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0xD1EB88", Offset = "0xD1EB88", VA = "0xD1EB88", Slot = "17")]
	public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0xD1EDC4", Offset = "0xD1EDC4", VA = "0xD1EDC4", Slot = "22")]
	protected virtual void SetNearestRaycast(ref PointerEventData eventData, ref List<RaycastResult> resultAppendList, ref List<RaycastResult> raycastResults)
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0xD1F1E4", Offset = "0xD1F1E4", VA = "0xD1F1E4", Slot = "23")]
	protected virtual float GetHitDistance(Ray ray)
	{
		return default(float);
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0xD1F5A0", Offset = "0xD1F5A0", VA = "0xD1F5A0", Slot = "24")]
	protected virtual void Raycast(Canvas canvas, Camera eventCamera, Ray ray, ref List<RaycastResult> results)
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xD1FD34", Offset = "0xD1FD34", VA = "0xD1FD34")]
	public Pvr_UIGraphicRaycaster()
	{
	}
}
[Token(Token = "0x20000D0")]
public struct UIPointerEventArgs
{
	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool isActive;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public GameObject currentTarget;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public GameObject previousTarget;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public RaycastResult raycastResult;
}
[Token(Token = "0x20000D1")]
public delegate void UIPointerEventHandler(object sender, UIPointerEventArgs e);
[Token(Token = "0x20000D2")]
public class Pvr_UIPointer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000642")]
	public enum ClickMethods
	{
		[Token(Token = "0x40024F5")]
		ClickOnButtonUp,
		[Token(Token = "0x40024F6")]
		ClickOnButtonDown
	}

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public ClickMethods clickMethod;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public bool collisionClick;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	[HideInInspector]
	public bool pressToDrag;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public GameObject autoActivatingCanvas;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public PointerEventData pointerEventData;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public GameObject hoveringElement;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public float hoverDurationTimer;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public bool canClickOnHover;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform pointerOriginTransform;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected bool pointerClicked;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	protected bool beamEnabledState;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	protected bool lastPointerPressState;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
	protected bool lastPointerClickState;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected GameObject currentTarget;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected EventSystem cachedEventSystem;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Pvr_InputModule cachedVRInputModule;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected Transform originalPointerOriginTransform;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool TouchBtnValue;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool AppBtnValue;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool TriggerBtnValue;

	[Token(Token = "0x1400001B")]
	public event UIPointerEventHandler UIPointerElementEnter
	{
		[Token(Token = "0x6000812")]
		[Address(RVA = "0xD1FF48", Offset = "0xD1FF48", VA = "0xD1FF48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A75EC", Offset = "0x3A75EC")]
		add
		{
		}
		[Token(Token = "0x6000813")]
		[Address(RVA = "0xD1FFF8", Offset = "0xD1FFF8", VA = "0xD1FFF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A75FC", Offset = "0x3A75FC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001C")]
	public event UIPointerEventHandler UIPointerElementExit
	{
		[Token(Token = "0x6000814")]
		[Address(RVA = "0xD200A8", Offset = "0xD200A8", VA = "0xD200A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A760C", Offset = "0x3A760C")]
		add
		{
		}
		[Token(Token = "0x6000815")]
		[Address(RVA = "0xD20158", Offset = "0xD20158", VA = "0xD20158")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A761C", Offset = "0x3A761C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public event UIPointerEventHandler UIPointerElementClick
	{
		[Token(Token = "0x6000816")]
		[Address(RVA = "0xD20208", Offset = "0xD20208", VA = "0xD20208")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A762C", Offset = "0x3A762C")]
		add
		{
		}
		[Token(Token = "0x6000817")]
		[Address(RVA = "0xD202B8", Offset = "0xD202B8", VA = "0xD202B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A763C", Offset = "0x3A763C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public event UIPointerEventHandler UIPointerElementDragStart
	{
		[Token(Token = "0x6000818")]
		[Address(RVA = "0xD20368", Offset = "0xD20368", VA = "0xD20368")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A764C", Offset = "0x3A764C")]
		add
		{
		}
		[Token(Token = "0x6000819")]
		[Address(RVA = "0xD20418", Offset = "0xD20418", VA = "0xD20418")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A765C", Offset = "0x3A765C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001F")]
	public event UIPointerEventHandler UIPointerElementDragEnd
	{
		[Token(Token = "0x600081A")]
		[Address(RVA = "0xD204C8", Offset = "0xD204C8", VA = "0xD204C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A766C", Offset = "0x3A766C")]
		add
		{
		}
		[Token(Token = "0x600081B")]
		[Address(RVA = "0xD20578", Offset = "0xD20578", VA = "0xD20578")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A767C", Offset = "0x3A767C")]
		remove
		{
		}
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0xD20628", Offset = "0xD20628", VA = "0xD20628", Slot = "4")]
	public virtual bool PointerActive()
	{
		return default(bool);
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0xD20630", Offset = "0xD20630", VA = "0xD20630", Slot = "5")]
	public virtual bool IsSelectionButtonPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0xD20740", Offset = "0xD20740", VA = "0xD20740", Slot = "6")]
	public virtual Vector3 GetOriginPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0xD20808", Offset = "0xD20808", VA = "0xD20808", Slot = "7")]
	public virtual Vector3 GetOriginForward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0xD208D0", Offset = "0xD208D0", VA = "0xD208D0", Slot = "8")]
	public virtual bool ValidClick(bool checkLastClick, bool lastClickState = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0xD208F0", Offset = "0xD208F0", VA = "0xD208F0", Slot = "9")]
	protected virtual void ResetHoverTimer()
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0xD20900", Offset = "0xD20900", VA = "0xD20900", Slot = "10")]
	public virtual void OnUIPointerElementEnter(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0xD20A04", Offset = "0xD20A04", VA = "0xD20A04", Slot = "11")]
	public virtual void OnUIPointerElementExit(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xD20B04", Offset = "0xD20B04", VA = "0xD20B04", Slot = "12")]
	public virtual void OnUIPointerElementClick(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xD20C04", Offset = "0xD20C04", VA = "0xD20C04", Slot = "13")]
	public virtual void OnUIPointerElementDragStart(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xD20C70", Offset = "0xD20C70", VA = "0xD20C70", Slot = "14")]
	public virtual void OnUIPointerElementDragEnd(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0xD20CDC", Offset = "0xD20CDC", VA = "0xD20CDC", Slot = "15")]
	public virtual UIPointerEventArgs SetUIPointerEvent(RaycastResult currentRaycastResult, GameObject currentTarget, [Optional] GameObject lastTarget)
	{
		return default(UIPointerEventArgs);
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0xD20D94", Offset = "0xD20D94", VA = "0xD20D94", Slot = "16")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0xD20DA0", Offset = "0xD20DA0", VA = "0xD20DA0", Slot = "17")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0xD20DD4", Offset = "0xD20DD4", VA = "0xD20DD4", Slot = "18")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0xD20E4C", Offset = "0xD20E4C", VA = "0xD20E4C", Slot = "19")]
	protected virtual void ConfigureEventSystem()
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0xD2104C", Offset = "0xD2104C", VA = "0xD2104C")]
	public Pvr_UIPointer()
	{
	}
}
[Token(Token = "0x20000D3")]
[ExecuteInEditMode]
public class Pvr_UnitySDKEditor : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool vrModeEnabled;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float mouseX;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float mouseY;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float mouseZ;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float neckModelScale;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool autoUntiltHead;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 neckOffset;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public Matrix4x4 headView;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[HideInInspector]
	public Matrix4x4 leftEyeUndistortedProj;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[HideInInspector]
	public Matrix4x4 rightEyeUndistortedProj;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[HideInInspector]
	public Matrix4x4 leftEyeProj;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[HideInInspector]
	public Matrix4x4 rightEyeProj;

	[Token(Token = "0x4000655")]
	private const float TOUCH_TIME_LIMIT = 0.2f;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float touchStartTime;

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x14F2394", Offset = "0x14F2394", VA = "0x14F2394")]
	public Matrix4x4 UndistortedProjection(Eye eye)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x14F23DC", Offset = "0x14F23DC", VA = "0x14F23DC")]
	public Matrix4x4 Projection(Eye eye)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x14F2424", Offset = "0x14F2424", VA = "0x14F2424")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x14F26B8", Offset = "0x14F26B8", VA = "0x14F26B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x14F2438", Offset = "0x14F2438", VA = "0x14F2438")]
	public void InitEyePara()
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x14F25F4", Offset = "0x14F25F4", VA = "0x14F25F4")]
	private void InitEditorSensorPara()
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x14F3330", Offset = "0x14F3330", VA = "0x14F3330")]
	public static Matrix4x4 MakeProjection(float l, float t, float r, float b, float n, float f)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x14F3534", Offset = "0x14F3534", VA = "0x14F3534")]
	public bool UpdateStatesensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x14F28CC", Offset = "0x14F28CC", VA = "0x14F28CC")]
	public void ComputeEyesFromProfile()
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x14F3AF0", Offset = "0x14F3AF0", VA = "0x14F3AF0")]
	public bool ResetUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x14F2788", Offset = "0x14F2788", VA = "0x14F2788")]
	private void SimulateInput()
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x14F3238", Offset = "0x14F3238", VA = "0x14F3238")]
	private void FovAdjust()
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x14F3BB8", Offset = "0x14F3BB8", VA = "0x14F3BB8")]
	private Rect RectAdjust(Rect eyeRect)
	{
		return default(Rect);
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x14F3548", Offset = "0x14F3548", VA = "0x14F3548")]
	private void UpdateSimulatedSensor()
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x14F30B0", Offset = "0x14F30B0", VA = "0x14F30B0")]
	private void InitForEye(ref Material mat, ref Material mat1)
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x14F3B08", Offset = "0x14F3B08", VA = "0x14F3B08")]
	private void EnableVEmodel()
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x14F3D30", Offset = "0x14F3D30", VA = "0x14F3D30")]
	public Pvr_UnitySDKEditor()
	{
	}
}
[Token(Token = "0x20000D4")]
public class Pvr_VolumePowerBrightness : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool VolEnable;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	private bool BattEnable;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Text showResult;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Text setVolumnum;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text setBrightnum;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public string MusicPath;

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x819674", Offset = "0x819674", VA = "0x819674")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x81971C", Offset = "0x81971C", VA = "0x81971C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x819764", Offset = "0x819764", VA = "0x819764")]
	public void GetMaxVolumeNumber()
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x819810", Offset = "0x819810", VA = "0x819810")]
	public void GetCurrentVolumeNumber()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x8198BC", Offset = "0x8198BC", VA = "0x8198BC")]
	public void VolumeUp()
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x819950", Offset = "0x819950", VA = "0x819950")]
	public void VolumeDown()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x8199E4", Offset = "0x8199E4", VA = "0x8199E4")]
	public void SetVolumeNum()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x819B30", Offset = "0x819B30", VA = "0x819B30")]
	public void SetBrightness()
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x819C7C", Offset = "0x819C7C", VA = "0x819C7C")]
	public void GetCurrentBrightness()
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x819D28", Offset = "0x819D28", VA = "0x819D28")]
	public bool setAudio(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x819DCC", Offset = "0x819DCC", VA = "0x819DCC")]
	public bool setBattery(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x8196D4", Offset = "0x8196D4", VA = "0x8196D4")]
	private bool InitBatteryVolClass()
	{
		return default(bool);
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x8196DC", Offset = "0x8196DC", VA = "0x8196DC")]
	private bool StartBatteryReceiver(string startreceivre)
	{
		return default(bool);
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x81975C", Offset = "0x81975C", VA = "0x81975C")]
	private bool StopBatteryReceiver()
	{
		return default(bool);
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x8196FC", Offset = "0x8196FC", VA = "0x8196FC")]
	private bool StartAudioReceiver(string startreceivre)
	{
		return default(bool);
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x819754", Offset = "0x819754", VA = "0x819754")]
	private bool StopAudioReceiver()
	{
		return default(bool);
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x819E70", Offset = "0x819E70", VA = "0x819E70")]
	public Pvr_VolumePowerBrightness()
	{
	}
}
[Token(Token = "0x20000D5")]
public class DisableAfterDelay : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000643")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B624", Offset = "0x39B624")]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40024F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40024F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DisableAfterDelay <>4__this;

		[Token(Token = "0x17000460")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CD7")]
			[Address(RVA = "0x7FCEAC", Offset = "0x7FCEAC", VA = "0x7FCEAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000461")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CD9")]
			[Address(RVA = "0x7FCF2C", Offset = "0x7FCF2C", VA = "0x7FCF2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CD4")]
		[Address(RVA = "0x7FCD80", Offset = "0x7FCD80", VA = "0x7FCD80")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6002CD5")]
		[Address(RVA = "0x7FCDB4", Offset = "0x7FCDB4", VA = "0x7FCDB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CD6")]
		[Address(RVA = "0x7FCDB8", Offset = "0x7FCDB8", VA = "0x7FCDB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CD8")]
		[Address(RVA = "0x7FCEB4", Offset = "0x7FCEB4", VA = "0x7FCEB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float delay;

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x7FCD00", Offset = "0x7FCD00", VA = "0x7FCD00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A768C", Offset = "0x3A768C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x7FCDA0", Offset = "0x7FCDA0", VA = "0x7FCDA0")]
	public DisableAfterDelay()
	{
	}
}
[Token(Token = "0x20000D6")]
public class InstructionsManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000644")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B634", Offset = "0x39B634")]
	private sealed class <BeginGameCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40024FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40024FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InstructionsManager <>4__this;

		[Token(Token = "0x17000462")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CDD")]
			[Address(RVA = "0x864DEC", Offset = "0x864DEC", VA = "0x864DEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000463")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CDF")]
			[Address(RVA = "0x864E6C", Offset = "0x864E6C", VA = "0x864E6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CDA")]
		[Address(RVA = "0x864B18", Offset = "0x864B18", VA = "0x864B18")]
		[DebuggerHidden]
		public <BeginGameCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002CDB")]
		[Address(RVA = "0x864B48", Offset = "0x864B48", VA = "0x864B48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CDC")]
		[Address(RVA = "0x864B4C", Offset = "0x864B4C", VA = "0x864B4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CDE")]
		[Address(RVA = "0x864DF4", Offset = "0x864DF4", VA = "0x864DF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public CanvasGroup instructionsCanvasGroup;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float fadeSpeed;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private bool hasStarted;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WeaponController[] weaponControls;

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x8649D4", Offset = "0x8649D4", VA = "0x8649D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x864A5C", Offset = "0x864A5C", VA = "0x864A5C")]
	public void BeginGame()
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x864A98", Offset = "0x864A98", VA = "0x864A98")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A76FC", Offset = "0x3A76FC")]
	private IEnumerator BeginGameCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x864B38", Offset = "0x864B38", VA = "0x864B38")]
	public InstructionsManager()
	{
	}
}
[Token(Token = "0x20000D7")]
public class LookAtTarget : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform lookAtTarget;

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x6C3FB4", Offset = "0x6C3FB4", VA = "0x6C3FB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x6C4064", Offset = "0x6C4064", VA = "0x6C4064")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0x6C41A4", Offset = "0x6C41A4", VA = "0x6C41A4")]
	public LookAtTarget()
	{
	}
}
[Token(Token = "0x20000D8")]
public class MainMenuManagerPSVR : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Text ds4StatusText;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Slider ds4Slider;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Text moveStatusText;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Slider moveSlider;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Text renderScaleText;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider renderScaleSlider;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Text socialScreenText;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider socialScreenSlider;

	[Token(Token = "0x600085A")]
	[Address(RVA = "0x6C7E6C", Offset = "0x6C7E6C", VA = "0x6C7E6C")]
	private void Start()
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0x6C7FA4", Offset = "0x6C7FA4", VA = "0x6C7FA4")]
	private void Update()
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0x6C7FA8", Offset = "0x6C7FA8", VA = "0x6C7FA8")]
	private void DualShock4Check()
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0x6C7FAC", Offset = "0x6C7FAC", VA = "0x6C7FAC")]
	private void MoveCheck()
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0x6C8080", Offset = "0x6C8080", VA = "0x6C8080")]
	public void GoToDualShock4Scene()
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0x6C812C", Offset = "0x6C812C", VA = "0x6C812C")]
	public void GoToMoveScene()
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0x6C81D8", Offset = "0x6C81D8", VA = "0x6C81D8")]
	public void OptionsToggleShowHmdView()
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0x6C82DC", Offset = "0x6C82DC", VA = "0x6C82DC")]
	public void SwitchRenderScale()
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0x6C841C", Offset = "0x6C841C", VA = "0x6C841C")]
	public MainMenuManagerPSVR()
	{
	}
}
[Token(Token = "0x20000D9")]
public class SceneSwitcher : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000645")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B644", Offset = "0x39B644")]
	private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40024FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40024FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SceneSwitcher <>4__this;

		[Token(Token = "0x17000464")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CE3")]
			[Address(RVA = "0x820E40", Offset = "0x820E40", VA = "0x820E40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000465")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CE5")]
			[Address(RVA = "0x820EC0", Offset = "0x820EC0", VA = "0x820EC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CE0")]
		[Address(RVA = "0x820894", Offset = "0x820894", VA = "0x820894")]
		[DebuggerHidden]
		public <Start>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6002CE1")]
		[Address(RVA = "0x820D28", Offset = "0x820D28", VA = "0x820D28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CE2")]
		[Address(RVA = "0x820D2C", Offset = "0x820D2C", VA = "0x820D2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CE4")]
		[Address(RVA = "0x820E48", Offset = "0x820E48", VA = "0x820E48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000646")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B654", Offset = "0x39B654")]
	private sealed class <FadeDownRoutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SceneSwitcher <>4__this;

		[Token(Token = "0x17000466")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CE9")]
			[Address(RVA = "0x820CA0", Offset = "0x820CA0", VA = "0x820CA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000467")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CEB")]
			[Address(RVA = "0x820D20", Offset = "0x820D20", VA = "0x820D20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CE6")]
		[Address(RVA = "0x820A28", Offset = "0x820A28", VA = "0x820A28")]
		[DebuggerHidden]
		public <FadeDownRoutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6002CE7")]
		[Address(RVA = "0x820BC8", Offset = "0x820BC8", VA = "0x820BC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CE8")]
		[Address(RVA = "0x820BCC", Offset = "0x820BCC", VA = "0x820BCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CEA")]
		[Address(RVA = "0x820CA8", Offset = "0x820CA8", VA = "0x820CA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000647")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B664", Offset = "0x39B664")]
	private sealed class <SwitchToSceneRoutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SceneSwitcher <>4__this;

		[Token(Token = "0x4002506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int sceneIndex;

		[Token(Token = "0x17000468")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CEF")]
			[Address(RVA = "0x821030", Offset = "0x821030", VA = "0x821030", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000469")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CF1")]
			[Address(RVA = "0x8210B0", Offset = "0x8210B0", VA = "0x8210B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CEC")]
		[Address(RVA = "0x820AE0", Offset = "0x820AE0", VA = "0x820AE0")]
		[DebuggerHidden]
		public <SwitchToSceneRoutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002CED")]
		[Address(RVA = "0x820EC8", Offset = "0x820EC8", VA = "0x820EC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CEE")]
		[Address(RVA = "0x820ECC", Offset = "0x820ECC", VA = "0x820ECC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CF0")]
		[Address(RVA = "0x821038", Offset = "0x821038", VA = "0x821038", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000648")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B674", Offset = "0x39B674")]
	private sealed class <SwitchToSceneRoutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SceneSwitcher <>4__this;

		[Token(Token = "0x400250A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public string sceneName;

		[Token(Token = "0x1700046A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CF5")]
			[Address(RVA = "0x821220", Offset = "0x821220", VA = "0x821220", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CF7")]
			[Address(RVA = "0x8212A0", Offset = "0x8212A0", VA = "0x8212A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CF2")]
		[Address(RVA = "0x820B98", Offset = "0x820B98", VA = "0x820B98")]
		[DebuggerHidden]
		public <SwitchToSceneRoutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002CF3")]
		[Address(RVA = "0x8210B8", Offset = "0x8210B8", VA = "0x8210B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CF4")]
		[Address(RVA = "0x8210BC", Offset = "0x8210BC", VA = "0x8210BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CF6")]
		[Address(RVA = "0x821228", Offset = "0x821228", VA = "0x821228", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public CanvasGroup canvasGroup;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float fadeSpeed;

	[Token(Token = "0x6000863")]
	[Address(RVA = "0x820814", Offset = "0x820814", VA = "0x820814")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A776C", Offset = "0x3A776C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0x8208B4", Offset = "0x8208B4", VA = "0x8208B4")]
	public void SwitchToScene(int sceneIndex)
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0x820940", Offset = "0x820940", VA = "0x820940")]
	public void SwitchToScene(string sceneName)
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x8209A8", Offset = "0x8209A8", VA = "0x8209A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A77DC", Offset = "0x3A77DC")]
	private IEnumerator FadeDownRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0x820A48", Offset = "0x820A48", VA = "0x820A48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A784C", Offset = "0x3A784C")]
	private IEnumerator SwitchToSceneRoutine(int sceneIndex)
	{
		return null;
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x820B00", Offset = "0x820B00", VA = "0x820B00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A78BC", Offset = "0x3A78BC")]
	private IEnumerator SwitchToSceneRoutine(string sceneName)
	{
		return null;
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x820BB8", Offset = "0x820BB8", VA = "0x820BB8")]
	public SceneSwitcher()
	{
	}
}
[Token(Token = "0x20000DA")]
public class ScoreManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000649")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B684", Offset = "0x39B684")]
	private sealed class <EndTimer>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400250B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400250C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400250D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ScoreManager <>4__this;

		[Token(Token = "0x1700046C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CFB")]
			[Address(RVA = "0x821E80", Offset = "0x821E80", VA = "0x821E80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CFD")]
			[Address(RVA = "0x821F00", Offset = "0x821F00", VA = "0x821F00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CF8")]
		[Address(RVA = "0x821AF0", Offset = "0x821AF0", VA = "0x821AF0")]
		[DebuggerHidden]
		public <EndTimer>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6002CF9")]
		[Address(RVA = "0x821C28", Offset = "0x821C28", VA = "0x821C28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CFA")]
		[Address(RVA = "0x821C2C", Offset = "0x821C2C", VA = "0x821C2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CFC")]
		[Address(RVA = "0x821E88", Offset = "0x821E88", VA = "0x821E88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Text timerText;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Image timerDisplay;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Text scoreText;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text accuracyText;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Text highScoreText;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float totalTime;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int scoreValue;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int theScore;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int highScore;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float accuracy;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int rollingScore;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float currentTime;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool timerIsRunning;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private TargetsManager targetsManager;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WeaponController[] weaponControls;

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x821578", Offset = "0x821578", VA = "0x821578")]
	private void Start()
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x821754", Offset = "0x821754", VA = "0x821754")]
	private void Update()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x821828", Offset = "0x821828", VA = "0x821828")]
	private void Timer()
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x8217A8", Offset = "0x8217A8", VA = "0x8217A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A792C", Offset = "0x3A792C")]
	private IEnumerator EndTimer()
	{
		return null;
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x821904", Offset = "0x821904", VA = "0x821904")]
	private void UpdateScoreDisplay()
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x821BCC", Offset = "0x821BCC", VA = "0x821BCC")]
	public void StartTimer()
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x821B10", Offset = "0x821B10", VA = "0x821B10")]
	private void CalculateAccuracy()
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0x821BE8", Offset = "0x821BE8", VA = "0x821BE8")]
	public void IncreaseScore()
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x821BFC", Offset = "0x821BFC", VA = "0x821BFC")]
	public ScoreManager()
	{
	}
}
[Token(Token = "0x20000DB")]
public class SetupManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Animator stateMachine;

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x822E3C", Offset = "0x822E3C", VA = "0x822E3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x822F20", Offset = "0x822F20", VA = "0x822F20")]
	private void Update()
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x823080", Offset = "0x823080", VA = "0x823080")]
	public void FinishedUIInteraction()
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x8230F0", Offset = "0x8230F0", VA = "0x8230F0")]
	public void ProgressToMainMenu()
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x823198", Offset = "0x823198", VA = "0x823198")]
	public SetupManager()
	{
	}
}
[Token(Token = "0x20000DC")]
public class TargetObject : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject explosionEffect;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject solidTarget;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject brokenTarget;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip audioClipSpawned;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public AudioClip audioClipHit;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float destructionForce;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float debisDestroyDelay;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource audioPlayer;

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x559A10", Offset = "0x559A10", VA = "0x559A10")]
	private void Start()
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x559B30", Offset = "0x559B30", VA = "0x559B30")]
	public void DestroyTarget()
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x55A130", Offset = "0x55A130", VA = "0x55A130")]
	public TargetObject()
	{
	}
}
[Token(Token = "0x20000DD")]
public class TargetsManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200064A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B694", Offset = "0x39B694")]
	private sealed class <SpawnTarget>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400250E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400250F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TargetsManager <>4__this;

		[Token(Token = "0x1700046E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D01")]
			[Address(RVA = "0x55A730", Offset = "0x55A730", VA = "0x55A730", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D03")]
			[Address(RVA = "0x55A7B0", Offset = "0x55A7B0", VA = "0x55A7B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CFE")]
		[Address(RVA = "0x55A35C", Offset = "0x55A35C", VA = "0x55A35C")]
		[DebuggerHidden]
		public <SpawnTarget>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002CFF")]
		[Address(RVA = "0x55A5F8", Offset = "0x55A5F8", VA = "0x55A5F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D00")]
		[Address(RVA = "0x55A5FC", Offset = "0x55A5FC", VA = "0x55A5FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D02")]
		[Address(RVA = "0x55A738", Offset = "0x55A738", VA = "0x55A738", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float spawnRateMin;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float spawnRateMax;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject targetPrefab;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform spawnPoint;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 spawnArea;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int maxSpawnedObjects;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool allowSpawning;

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x55A150", Offset = "0x55A150", VA = "0x55A150")]
	public void BeginSpawning()
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x55A200", Offset = "0x55A200", VA = "0x55A200")]
	public void StopSpawning()
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x55A0E4", Offset = "0x55A0E4", VA = "0x55A0E4")]
	public void SpawnTargetImmediately()
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x55A180", Offset = "0x55A180", VA = "0x55A180")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A799C", Offset = "0x3A799C")]
	private IEnumerator SpawnTarget()
	{
		return null;
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x55A210", Offset = "0x55A210", VA = "0x55A210")]
	private void Spawn()
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x55A4D0", Offset = "0x55A4D0", VA = "0x55A4D0")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x55A37C", Offset = "0x55A37C", VA = "0x55A37C")]
	private Vector3 RandomSpawnPoint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x55A548", Offset = "0x55A548", VA = "0x55A548")]
	public TargetsManager()
	{
	}
}
[Token(Token = "0x20000DE")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x399F1C", Offset = "0x399F1C")]
public class LaserPointer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private LineRenderer line;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private RaycastHit hit;

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x746490", Offset = "0x746490", VA = "0x746490")]
	private void Start()
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x7464F0", Offset = "0x7464F0", VA = "0x7464F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x7466B8", Offset = "0x7466B8", VA = "0x7466B8")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x20000DF")]
public class WeaponController : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200064B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B6A4", Offset = "0x39B6A4")]
	private sealed class <Vibrate>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x17000470")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D07")]
			[Address(RVA = "0xEEB230", Offset = "0xEEB230", VA = "0xEEB230", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000471")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D09")]
			[Address(RVA = "0xEEB2B0", Offset = "0xEEB2B0", VA = "0xEEB2B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D04")]
		[Address(RVA = "0xEEB158", Offset = "0xEEB158", VA = "0xEEB158")]
		[DebuggerHidden]
		public <Vibrate>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6002D05")]
		[Address(RVA = "0xEEB188", Offset = "0xEEB188", VA = "0xEEB188", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D06")]
		[Address(RVA = "0xEEB18C", Offset = "0xEEB18C", VA = "0xEEB18C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D08")]
		[Address(RVA = "0xEEB238", Offset = "0xEEB238", VA = "0xEEB238", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float fireRate;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ParticleSystem shotEmitter;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool isMoveController;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool isSecondaryMoveController;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource shotSound;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public AudioSource missSound;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LaserPointer laserPointer;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private RaycastHit hit;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float lastShotTime;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool canShoot;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool hasShootInput;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public int shotsFired;

	[Token(Token = "0x6000887")]
	[Address(RVA = "0xEEAD30", Offset = "0xEEAD30", VA = "0xEEAD30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0xEEAE1C", Offset = "0xEEAE1C", VA = "0xEEAE1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0xEEAE74", Offset = "0xEEAE74", VA = "0xEEAE74")]
	private bool CheckForInput()
	{
		return default(bool);
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0xEEAECC", Offset = "0xEEAECC", VA = "0xEEAECC")]
	private void Fire()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0xEEB0EC", Offset = "0xEEB0EC", VA = "0xEEB0EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A7A0C", Offset = "0x3A7A0C")]
	private IEnumerator Vibrate()
	{
		return null;
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0xEEADCC", Offset = "0xEEADCC", VA = "0xEEADCC")]
	public void WeaponCanShoot(bool shootBool)
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0xEEB178", Offset = "0xEEB178", VA = "0xEEB178")]
	public WeaponController()
	{
	}
}
[Token(Token = "0x20000E0")]
public class TrackedDeviceDualShock4 : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform controller;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Renderer illuminatedComponent;

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x56DF78", Offset = "0x56DF78", VA = "0x56DF78")]
	public TrackedDeviceDualShock4()
	{
	}
}
[Token(Token = "0x20000E1")]
public class TrackedDeviceMoveControllers : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform primaryController;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform secondaryController;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Renderer[] illuminatedComponents;

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x56DF80", Offset = "0x56DF80", VA = "0x56DF80")]
	public TrackedDeviceMoveControllers()
	{
	}
}
[Token(Token = "0x20000E2")]
public class VRDeviceNames
{
	[Token(Token = "0x400069F")]
	public const string None = "None";

	[Token(Token = "0x40006A0")]
	public const string Unknown = "Unknown";

	[Token(Token = "0x40006A1")]
	public const string Oculus = "Oculus";

	[Token(Token = "0x40006A2")]
	public const string PlayStationVR = "PlayStationVR";

	[Token(Token = "0x40006A3")]
	public const string Pico = "Pico";

	[Token(Token = "0x6000890")]
	[Address(RVA = "0xA1C95C", Offset = "0xA1C95C", VA = "0xA1C95C")]
	public VRDeviceNames()
	{
	}
}
[Token(Token = "0x20000E3")]
public class VRManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200064C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B6B4", Offset = "0x39B6B4")]
	private sealed class <SetupVR>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VRManager <>4__this;

		[Token(Token = "0x17000472")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D0D")]
			[Address(RVA = "0xA1CE8C", Offset = "0xA1CE8C", VA = "0xA1CE8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000473")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D0F")]
			[Address(RVA = "0xA1CF0C", Offset = "0xA1CF0C", VA = "0xA1CF0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D0A")]
		[Address(RVA = "0xA1CC74", Offset = "0xA1CC74", VA = "0xA1CC74")]
		[DebuggerHidden]
		public <SetupVR>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002D0B")]
		[Address(RVA = "0xA1CD9C", Offset = "0xA1CD9C", VA = "0xA1CD9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D0C")]
		[Address(RVA = "0xA1CDA0", Offset = "0xA1CDA0", VA = "0xA1CDA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D0E")]
		[Address(RVA = "0xA1CE94", Offset = "0xA1CE94", VA = "0xA1CE94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200064D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B6C4", Offset = "0x39B6C4")]
	private sealed class <ShutdownVR>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x17000474")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D13")]
			[Address(RVA = "0xA1D020", Offset = "0xA1D020", VA = "0xA1D020", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000475")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D15")]
			[Address(RVA = "0xA1D0A0", Offset = "0xA1D0A0", VA = "0xA1D0A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D10")]
		[Address(RVA = "0xA1CD24", Offset = "0xA1CD24", VA = "0xA1CD24")]
		[DebuggerHidden]
		public <ShutdownVR>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6002D11")]
		[Address(RVA = "0xA1CF14", Offset = "0xA1CF14", VA = "0xA1CF14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D12")]
		[Address(RVA = "0xA1CF18", Offset = "0xA1CF18", VA = "0xA1CF18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D14")]
		[Address(RVA = "0xA1D028", Offset = "0xA1D028", VA = "0xA1D028", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float renderScale;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool showHmdViewOnMonitor;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static VRManager _instance;

	[Token(Token = "0x1700012B")]
	public static VRManager instance
	{
		[Token(Token = "0x6000891")]
		[Address(RVA = "0xA1C964", Offset = "0xA1C964", VA = "0xA1C964")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0xA1CA78", Offset = "0xA1CA78", VA = "0xA1CA78")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0xA1CBD0", Offset = "0xA1CBD0", VA = "0xA1CBD0")]
	public void BeginVRSetup()
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0xA1CBF4", Offset = "0xA1CBF4", VA = "0xA1CBF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A7A7C", Offset = "0x3A7A7C")]
	private IEnumerator SetupVR()
	{
		return null;
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0xA1CC94", Offset = "0xA1CC94", VA = "0xA1CC94")]
	public void BeginShutdownVR()
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0xA1CCB8", Offset = "0xA1CCB8", VA = "0xA1CCB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A7AEC", Offset = "0x3A7AEC")]
	private IEnumerator ShutdownVR()
	{
		return null;
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0xA1CD44", Offset = "0xA1CD44", VA = "0xA1CD44")]
	public void SetupHMDDevice()
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0xA1CD48", Offset = "0xA1CD48", VA = "0xA1CD48")]
	public void ToggleHMDViewOnMonitor(bool showOnMonitor)
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0xA1CD58", Offset = "0xA1CD58", VA = "0xA1CD58")]
	public void ToggleHMDViewOnMonitor()
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xA1CD74", Offset = "0xA1CD74", VA = "0xA1CD74")]
	public void ChangeRenderScale(float scale)
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0xA1CD80", Offset = "0xA1CD80", VA = "0xA1CD80")]
	public VRManager()
	{
	}
}
[Token(Token = "0x20000E4")]
public class VRPlaySpace : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform frustumTransform;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Renderer[] frustumRenderers;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float safeDistance;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fadeSpeed;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color showColor;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color hideColor;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool showFrustum;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 camAcceleration;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 hmdPositionRaw;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Quaternion hmdRotationUnity;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Quaternion hmdRotationRaw;

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xA2000C", Offset = "0xA2000C", VA = "0xA2000C")]
	private void Start()
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0xA200D0", Offset = "0xA200D0", VA = "0xA200D0")]
	private void Update()
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0xA200D4", Offset = "0xA200D4", VA = "0xA200D4")]
	private void UpdateFrustumTransform()
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0xA200D8", Offset = "0xA200D8", VA = "0xA200D8")]
	private void UpdateFrustumDisplay()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0xA20264", Offset = "0xA20264", VA = "0xA20264")]
	public VRPlaySpace()
	{
	}
}
[Token(Token = "0x20000E5")]
public class VRPlaySpaceOld : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform frustumTransform;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Renderer[] frustumRenderers;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float safeDistance;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fadeSpeed;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color showColor;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color hideColor;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool showFrustum;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 camAcceleration;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 hmdPositionRaw;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Quaternion hmdRotationUnity;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Quaternion hmdRotationRaw;

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xA20284", Offset = "0xA20284", VA = "0xA20284")]
	private void Start()
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0xA20348", Offset = "0xA20348", VA = "0xA20348")]
	private void Update()
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0xA2034C", Offset = "0xA2034C", VA = "0xA2034C")]
	private void UpdateFrustumTransform()
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0xA20350", Offset = "0xA20350", VA = "0xA20350")]
	private void UpdateFrustumDisplay()
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0xA204DC", Offset = "0xA204DC", VA = "0xA204DC")]
	public VRPlaySpaceOld()
	{
	}
}
[Token(Token = "0x20000E6")]
public class VRPostReprojection : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60008A6")]
	[Address(RVA = "0xA21760", Offset = "0xA21760", VA = "0xA21760")]
	public VRPostReprojection()
	{
	}
}
[Token(Token = "0x20000E7")]
public class VRUIComplete : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject target;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string message;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool disableColliderAfterUse;

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0xA21768", Offset = "0xA21768", VA = "0xA21768")]
	public void Complete()
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0xA2186C", Offset = "0xA2186C", VA = "0xA2186C")]
	public VRUIComplete()
	{
	}
}
[Token(Token = "0x20000E8")]
public class VRUIController : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public LayerMask uiLayerMask;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float sliderFillSpeed;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private RaycastHit hit;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Slider currentSlider;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private AudioSource audioSrc;

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0xA218D0", Offset = "0xA218D0", VA = "0xA218D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0xA21930", Offset = "0xA21930", VA = "0xA21930")]
	private void Update()
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0xA22058", Offset = "0xA22058", VA = "0xA22058")]
	public VRUIController()
	{
	}
}
[Token(Token = "0x20000E9")]
public class AIDestroyBoundary : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x6D8C70", Offset = "0x6D8C70", VA = "0x6D8C70")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x6D8E00", Offset = "0x6D8E00", VA = "0x6D8E00")]
	public AIDestroyBoundary()
	{
	}
}
[Token(Token = "0x20000EA")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x399F8C", Offset = "0x399F8C")]
public class AIDestroyableTool : Photon.MonoBehaviour
{
	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int damageMultiplier;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	protected Destructible myDestructible;

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x6D8E08", Offset = "0x6D8E08", VA = "0x6D8E08")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x6D8EC4", Offset = "0x6D8EC4", VA = "0x6D8EC4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x6D8F64", Offset = "0x6D8F64", VA = "0x6D8F64")]
	private void Start()
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x6D908C", Offset = "0x6D908C", VA = "0x6D908C")]
	public void Hit(SnowBallInfo snowball)
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x6D91B0", Offset = "0x6D91B0", VA = "0x6D91B0")]
	[PunRPC]
	private void RpcHit(float snowballMass)
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x6D92EC", Offset = "0x6D92EC", VA = "0x6D92EC")]
	[PunRPC]
	private void RpcReceiveDamage(int damage)
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x6D931C", Offset = "0x6D931C", VA = "0x6D931C", Slot = "4")]
	protected virtual void OnDestroyed()
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x6D93A8", Offset = "0x6D93A8", VA = "0x6D93A8")]
	public AIDestroyableTool()
	{
	}
}
[Token(Token = "0x20000EB")]
public enum MovementType
{
	[Token(Token = "0x40006C8")]
	none,
	[Token(Token = "0x40006C9")]
	follow,
	[Token(Token = "0x40006CA")]
	waypoint,
	[Token(Token = "0x40006CB")]
	wander
}
[Token(Token = "0x20000EC")]
public class AIMovement : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200064E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B6D4", Offset = "0x39B6D4")]
	private sealed class <Wander>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400251A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AIMovement <>4__this;

		[Token(Token = "0x17000476")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D19")]
			[Address(RVA = "0x6E12F0", Offset = "0x6E12F0", VA = "0x6E12F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000477")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D1B")]
			[Address(RVA = "0x6E1370", Offset = "0x6E1370", VA = "0x6E1370", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D16")]
		[Address(RVA = "0x6E0954", Offset = "0x6E0954", VA = "0x6E0954")]
		[DebuggerHidden]
		public <Wander>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6002D17")]
		[Address(RVA = "0x6E0F4C", Offset = "0x6E0F4C", VA = "0x6E0F4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D18")]
		[Address(RVA = "0x6E0F50", Offset = "0x6E0F50", VA = "0x6E0F50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D1A")]
		[Address(RVA = "0x6E12F8", Offset = "0x6E12F8", VA = "0x6E12F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200064F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B6E4", Offset = "0x39B6E4")]
	private sealed class <Waypoint>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400251B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400251C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400251D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AIMovement <>4__this;

		[Token(Token = "0x17000478")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D1F")]
			[Address(RVA = "0x6E1698", Offset = "0x6E1698", VA = "0x6E1698", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000479")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D21")]
			[Address(RVA = "0x6E1718", Offset = "0x6E1718", VA = "0x6E1718", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D1C")]
		[Address(RVA = "0x6E0974", Offset = "0x6E0974", VA = "0x6E0974")]
		[DebuggerHidden]
		public <Waypoint>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6002D1D")]
		[Address(RVA = "0x6E1378", Offset = "0x6E1378", VA = "0x6E1378", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D1E")]
		[Address(RVA = "0x6E137C", Offset = "0x6E137C", VA = "0x6E137C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D20")]
		[Address(RVA = "0x6E16A0", Offset = "0x6E16A0", VA = "0x6E16A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000650")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B6F4", Offset = "0x39B6F4")]
	private sealed class <FollowTarget>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400251E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400251F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AIMovement <>4__this;

		[Token(Token = "0x1700047A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D25")]
			[Address(RVA = "0x6E0EC4", Offset = "0x6E0EC4", VA = "0x6E0EC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D27")]
			[Address(RVA = "0x6E0F44", Offset = "0x6E0F44", VA = "0x6E0F44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D22")]
		[Address(RVA = "0x6E0994", Offset = "0x6E0994", VA = "0x6E0994")]
		[DebuggerHidden]
		public <FollowTarget>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6002D23")]
		[Address(RVA = "0x6E0C7C", Offset = "0x6E0C7C", VA = "0x6E0C7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D24")]
		[Address(RVA = "0x6E0C80", Offset = "0x6E0C80", VA = "0x6E0C80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D26")]
		[Address(RVA = "0x6E0ECC", Offset = "0x6E0ECC", VA = "0x6E0ECC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000651")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B704", Offset = "0x39B704")]
	private sealed class <AttackPlayer>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x1700047C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D2B")]
			[Address(RVA = "0x6E0BF4", Offset = "0x6E0BF4", VA = "0x6E0BF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D2D")]
			[Address(RVA = "0x6E0C74", Offset = "0x6E0C74", VA = "0x6E0C74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D28")]
		[Address(RVA = "0x6E0A20", Offset = "0x6E0A20", VA = "0x6E0A20")]
		[DebuggerHidden]
		public <AttackPlayer>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6002D29")]
		[Address(RVA = "0x6E0B50", Offset = "0x6E0B50", VA = "0x6E0B50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D2A")]
		[Address(RVA = "0x6E0B54", Offset = "0x6E0B54", VA = "0x6E0B54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D2C")]
		[Address(RVA = "0x6E0BFC", Offset = "0x6E0BFC", VA = "0x6E0BFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Animator anim;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool showDebugRaycasts;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public LayerMask blockingLayers;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool seeking;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Transform target;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool stop;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 lookPosition;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float turnSpeed;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MovementType movementType;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public bool win;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float followDistance;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float speedTotal;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject followTarget;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float wanderMaxDistance;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int wanderDelay;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 startingPosition;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool waypointReached;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Transform[] startingWaypoints;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Transform> waypointList;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int waypointCount;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool waypointRandomizer;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	public bool waypointContinuous;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	private bool isThereAnyObstruction;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private RaycastHit hit;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float rayDistanceSide;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float rayDistanceBack;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Transform myTransform;

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x6DF114", Offset = "0x6DF114", VA = "0x6DF114")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x6DF19C", Offset = "0x6DF19C", VA = "0x6DF19C")]
	private void Start()
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x6DF29C", Offset = "0x6DF29C", VA = "0x6DF29C")]
	public void SetupMovement(Transform moveTarget, MovementType moveType, Transform[] waypoints)
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x6DF39C", Offset = "0x6DF39C", VA = "0x6DF39C")]
	public void SetupMovement(Transform moveTarget, MovementType moveType, [Optional] List<Transform> waypoints)
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x6DF814", Offset = "0x6DF814", VA = "0x6DF814")]
	private void Update()
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x6DF714", Offset = "0x6DF714", VA = "0x6DF714")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A7B7C", Offset = "0x3A7B7C")]
	private IEnumerator Wander()
	{
		return null;
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x6DF794", Offset = "0x6DF794", VA = "0x6DF794")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A7BEC", Offset = "0x3A7BEC")]
	private IEnumerator Waypoint()
	{
		return null;
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x6DF694", Offset = "0x6DF694", VA = "0x6DF694")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A7C5C", Offset = "0x3A7C5C")]
	private IEnumerator FollowTarget()
	{
		return null;
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x6E09B4", Offset = "0x6E09B4", VA = "0x6E09B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A7CCC", Offset = "0x3A7CCC")]
	private IEnumerator AttackPlayer()
	{
		return null;
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x6DFC60", Offset = "0x6DFC60", VA = "0x6DFC60")]
	private void MovementSystem()
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x6E0A40", Offset = "0x6E0A40", VA = "0x6E0A40")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x6E0B2C", Offset = "0x6E0B2C", VA = "0x6E0B2C")]
	public AIMovement()
	{
	}
}
[Token(Token = "0x20000ED")]
public class AIReorientBoundry : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool isAlwaysDrawingGizmo;

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x6E1720", Offset = "0x6E1720", VA = "0x6E1720")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x6E18C0", Offset = "0x6E18C0", VA = "0x6E18C0")]
	public AIReorientBoundry()
	{
	}
}
[Token(Token = "0x20000EE")]
public class AIManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000652")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B714", Offset = "0x39B714")]
	private sealed class <>c__DisplayClass71_0
	{
		[Token(Token = "0x4002523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int targetTeam;

		[Token(Token = "0x6002D2E")]
		[Address(RVA = "0x6DC7CC", Offset = "0x6DC7CC", VA = "0x6DC7CC")]
		public <>c__DisplayClass71_0()
		{
		}

		[Token(Token = "0x6002D2F")]
		[Address(RVA = "0x6DF0D4", Offset = "0x6DF0D4", VA = "0x6DF0D4")]
		internal bool <GetTarget>b__0(AIManager x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject snowballLauncherPrefab;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform[] launcherHolders;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Rigidbody shieldRigidbody;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator myAnimator;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private PhotonView myPhotonView;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform attackEffectPrefab;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject coalPrefab;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int lastHitSnowballID;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public int aiTeam;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public int spawnIndex;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public int modeLocation;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39EE8C", Offset = "0x39EE8C")]
	public Transform healthBarAnchor;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public GameObject myFloatingText;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39EED0", Offset = "0x39EED0")]
	public GameObject snowmansHatObject;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float snowmanWaitToDestroyTime;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float snowmanHatEndValuePlusToY;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float snowmanHatJumpPower;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int snowmanHatNumberOfJumps;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float snowmanHatJumpDuration;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private HatManager hatManager;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39EF04", Offset = "0x39EF04")]
	public EnemyTypes enemyType;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float moveSpeed;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int HPDamageWhenHit;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int pointsForHitEndless;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int pointsFor0HPEndless;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float maxThrowDistance;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Vector2 throwPosOffset;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float throwInterval;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float snowballMass;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float snowballTimeToTargetModifier;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float throwDelayForAnimation;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Transform myTransform;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Rigidbody myRigidbody;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool isAlive;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private SnowballLauncher[] myLaunchers;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float distanceToStopFromTarget;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int snowmanLayerMask;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Transform[] myWaypoints;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int currentWaypointIndex;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Destructible myDestructible;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private NVRInteractableItem myInteractable;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int timesTriedToMove;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Transform moveToTarget;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Transform attackTarget;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float currentMoveTime;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float totalMoveTimeToCheckFor;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float timeSinceThrow;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private bool isThrowing;

	[Token(Token = "0x1700012C")]
	public int myNetworkId
	{
		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x6D93B8", Offset = "0x6D93B8", VA = "0x6D93B8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700012D")]
	public Transform Attacktarget
	{
		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x6D947C", Offset = "0x6D947C", VA = "0x6D947C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012E")]
	public int CurrentHealth
	{
		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x6D9D68", Offset = "0x6D9D68", VA = "0x6D9D68")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60008C7")]
		[Address(RVA = "0x6D9D88", Offset = "0x6D9D88", VA = "0x6D9D88")]
		set
		{
		}
	}

	[Token(Token = "0x1700012F")]
	public float TimeSinceThrow
	{
		[Token(Token = "0x60008C8")]
		[Address(RVA = "0x6D9DC4", Offset = "0x6D9DC4", VA = "0x6D9DC4")]
		set
		{
		}
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x6D9DCC", Offset = "0x6D9DCC", VA = "0x6D9DCC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x6DA488", Offset = "0x6DA488", VA = "0x6DA488")]
	private void Start()
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x6DA978", Offset = "0x6DA978", VA = "0x6DA978")]
	private void Update()
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x6DBD14", Offset = "0x6DBD14", VA = "0x6DBD14")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x6DBE94", Offset = "0x6DBE94", VA = "0x6DBE94")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x6DC014", Offset = "0x6DC014", VA = "0x6DC014")]
	private void RepositionRandomly()
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x6DC1D8", Offset = "0x6DC1D8", VA = "0x6DC1D8")]
	private void PopOut()
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x6DC470", Offset = "0x6DC470", VA = "0x6DC470")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x6DC564", Offset = "0x6DC564", VA = "0x6DC564")]
	private void OnRebuild(bool rebuildActive)
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x6DC5F0", Offset = "0x6DC5F0", VA = "0x6DC5F0")]
	private void SetTargetForLaunchers()
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x6DB5D0", Offset = "0x6DB5D0", VA = "0x6DB5D0")]
	private void ThrowSnowball()
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x6DC730", Offset = "0x6DC730", VA = "0x6DC730")]
	private void Throw()
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x6DC674", Offset = "0x6DC674", VA = "0x6DC674")]
	public bool TargetWithinRange(float distanceToTarget)
	{
		return default(bool);
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x6DC7B0", Offset = "0x6DC7B0", VA = "0x6DC7B0")]
	public void StartGame()
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x6D951C", Offset = "0x6D951C", VA = "0x6D951C")]
	public Transform GetTarget()
	{
		return null;
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x6DC7D4", Offset = "0x6DC7D4", VA = "0x6DC7D4")]
	public void OnBeginInteraction()
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x6DCD20", Offset = "0x6DCD20", VA = "0x6DCD20")]
	private void DelayedHideControllerMessage()
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x6DCDD0", Offset = "0x6DCDD0", VA = "0x6DCDD0")]
	public void OnEndInteraction()
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x6DBAE8", Offset = "0x6DBAE8", VA = "0x6DBAE8")]
	public void MoveTowardsTarget(Transform target)
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x6DCFCC", Offset = "0x6DCFCC", VA = "0x6DCFCC")]
	public void EndGame()
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x6DD080", Offset = "0x6DD080", VA = "0x6DD080")]
	public void SetStats(int team = 1)
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x6DD3CC", Offset = "0x6DD3CC", VA = "0x6DD3CC")]
	public void SetAIPlayerStats(int team, int _spawnIndex, int _modeLocation)
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x6DD67C", Offset = "0x6DD67C", VA = "0x6DD67C")]
	public void SetWaypoints(Transform[] waypoints, bool moveTowards = true)
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x6DD708", Offset = "0x6DD708", VA = "0x6DD708")]
	private void Hit(SnowBallInfo snowball)
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x6DD940", Offset = "0x6DD940", VA = "0x6DD940")]
	[PunRPC]
	private void rpcHit(float snowballMass, int ownerID, int teamID)
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x6D8D9C", Offset = "0x6D8D9C", VA = "0x6D8D9C")]
	public void Kill()
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x6DE220", Offset = "0x6DE220", VA = "0x6DE220")]
	[PunRPC]
	private void rpcSetHealth(int newHealth)
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x6DE224", Offset = "0x6DE224", VA = "0x6DE224")]
	[PunRPC]
	private void rpcSetTeam(int newTeam)
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x6DE22C", Offset = "0x6DE22C", VA = "0x6DE22C")]
	private void OnDestroyed()
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x6DE230", Offset = "0x6DE230", VA = "0x6DE230")]
	[PunRPC]
	private void rpcDestroyedSnowman()
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x6DEF08", Offset = "0x6DEF08", VA = "0x6DEF08")]
	[PunRPC]
	private void rpcFellOverKill()
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x6DED7C", Offset = "0x6DED7C", VA = "0x6DED7C")]
	public void Despawn()
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x6DF010", Offset = "0x6DF010", VA = "0x6DF010")]
	public AIManager()
	{
	}
}
[Token(Token = "0x20000EF")]
public class AchievementManager : SingletonPersistent<AchievementManager>
{
	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x6E18C8", Offset = "0x6E18C8", VA = "0x6E18C8")]
	public void CheckAchievement(Achievements achievement)
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x6E18CC", Offset = "0x6E18CC", VA = "0x6E18CC")]
	public AchievementManager()
	{
	}
}
[Token(Token = "0x20000F0")]
public class AnalyticsManager : SingletonPersistent<AnalyticsManager>
{
	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool triggerFortressExitPoll;

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x6E5940", Offset = "0x6E5940", VA = "0x6E5940")]
	private void Start()
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x6E59BC", Offset = "0x6E59BC", VA = "0x6E59BC")]
	public void AddUserID(string userID)
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x6E5A14", Offset = "0x6E5A14", VA = "0x6E5A14")]
	public void ReportEvent(string newEvent)
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x6E5A84", Offset = "0x6E5A84", VA = "0x6E5A84")]
	public void ReportEvent(string newEvent, Dictionary<string, object> parameters)
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x6E5B00", Offset = "0x6E5B00", VA = "0x6E5B00")]
	public void ReportEvent(string newEvent, string parameter1key, int parameter1num)
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x6E5BFC", Offset = "0x6E5BFC", VA = "0x6E5BFC")]
	public void ReportEvent(string newEvent, string parameter1key, string parameter1string)
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x6E5CD4", Offset = "0x6E5CD4", VA = "0x6E5CD4")]
	public void ReportExtendedEvent(string newEvent, bool eventStart)
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0x6E5CD8", Offset = "0x6E5CD8", VA = "0x6E5CD8")]
	private void _StartGame()
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x6E5D30", Offset = "0x6E5D30", VA = "0x6E5D30")]
	private void _FinishGame(bool won)
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x6E5D88", Offset = "0x6E5D88", VA = "0x6E5D88")]
	public AnalyticsManager()
	{
	}
}
[Token(Token = "0x20000F1")]
public class AnchorUiToObjectVR : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Transform targetTransform;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Transform myTransform;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 offset;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool copyYRotation;

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x6E5E10", Offset = "0x6E5E10", VA = "0x6E5E10")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x6E5E34", Offset = "0x6E5E34", VA = "0x6E5E34")]
	public void SetTarget(Transform target, bool copyTargetYRotation = false)
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x6E5E40", Offset = "0x6E5E40", VA = "0x6E5E40")]
	public void SetOffset(Vector3 _newOffset)
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x6E5E4C", Offset = "0x6E5E4C", VA = "0x6E5E4C")]
	public void SetYOffset(float _newYOffset)
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x6E5E9C", Offset = "0x6E5E9C", VA = "0x6E5E9C")]
	private void Update()
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x6E6078", Offset = "0x6E6078", VA = "0x6E6078")]
	public AnchorUiToObjectVR()
	{
	}
}
[Token(Token = "0x20000F2")]
public class ArcadeTimeLimitManager : Singleton<ArcadeTimeLimitManager>
{
	[Token(Token = "0x2000653")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B724", Offset = "0x39B724")]
	private sealed class <Start_Timer>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ArcadeTimeLimitManager <>4__this;

		[Token(Token = "0x1700047E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D33")]
			[Address(RVA = "0x6E8B84", Offset = "0x6E8B84", VA = "0x6E8B84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D35")]
			[Address(RVA = "0x6E8C04", Offset = "0x6E8C04", VA = "0x6E8C04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D30")]
		[Address(RVA = "0x6E8A04", Offset = "0x6E8A04", VA = "0x6E8A04")]
		[DebuggerHidden]
		public <Start_Timer>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002D31")]
		[Address(RVA = "0x6E8AAC", Offset = "0x6E8AAC", VA = "0x6E8AAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D32")]
		[Address(RVA = "0x6E8AB0", Offset = "0x6E8AB0", VA = "0x6E8AB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D34")]
		[Address(RVA = "0x6E8B8C", Offset = "0x6E8B8C", VA = "0x6E8B8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string timeUpScene;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float _timeLimitDuration;

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x6E886C", Offset = "0x6E886C", VA = "0x6E886C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x6E8984", Offset = "0x6E8984", VA = "0x6E8984")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A7D8C", Offset = "0x3A7D8C")]
	private IEnumerator Start_Timer()
	{
		return null;
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x6E8A24", Offset = "0x6E8A24", VA = "0x6E8A24")]
	public ArcadeTimeLimitManager()
	{
	}
}
[Token(Token = "0x20000F3")]
public class ArenaManager : SingletonPersistent<ArenaManager>
{
	[Token(Token = "0x2000654")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B734", Offset = "0x39B734")]
	private sealed class <Disconnect_OutOfFocus>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ArenaManager <>4__this;

		[Token(Token = "0x17000480")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D39")]
			[Address(RVA = "0x6EB39C", Offset = "0x6EB39C", VA = "0x6EB39C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000481")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D3B")]
			[Address(RVA = "0x6EB41C", Offset = "0x6EB41C", VA = "0x6EB41C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D36")]
		[Address(RVA = "0x6EAA10", Offset = "0x6EAA10", VA = "0x6EAA10")]
		[DebuggerHidden]
		public <Disconnect_OutOfFocus>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6002D37")]
		[Address(RVA = "0x6EB2BC", Offset = "0x6EB2BC", VA = "0x6EB2BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D38")]
		[Address(RVA = "0x6EB2C0", Offset = "0x6EB2C0", VA = "0x6EB2C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D3A")]
		[Address(RVA = "0x6EB3A4", Offset = "0x6EB3A4", VA = "0x6EB3A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39EF38", Offset = "0x39EF38")]
	public GameObject fencePrefab;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x39EF74", Offset = "0x39EF74")]
	public int fenceStartBuffer;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x39EFA8", Offset = "0x39EFA8")]
	public int fenceEndBuffer;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x39EFDC", Offset = "0x39EFDC")]
	public float fenceheightModifier;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float boundaryXLength;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float boundaryZLength;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39F010", Offset = "0x39F010")]
	public GameObject systhesisVRArcadeObject;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SettingData _settingData;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<GameModes> OnGameModeChange;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private GameModes _selectedGameMode;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _maxPlayerCount;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Coroutine _focusDisconnectRoutine;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WaitForSeconds _focusDisconnectTime;

	[Token(Token = "0x17000130")]
	public SettingData SettingData
	{
		[Token(Token = "0x60008FF")]
		[Address(RVA = "0x6E8C0C", Offset = "0x6E8C0C", VA = "0x6E8C0C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000131")]
	public GameModes SelectedGameMode
	{
		[Token(Token = "0x6000900")]
		[Address(RVA = "0x6E8FAC", Offset = "0x6E8FAC", VA = "0x6E8FAC")]
		get
		{
			return default(GameModes);
		}
	}

	[Token(Token = "0x17000132")]
	public int PlayerCount
	{
		[Token(Token = "0x6000901")]
		[Address(RVA = "0x6E8FB4", Offset = "0x6E8FB4", VA = "0x6E8FB4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x6E8FBC", Offset = "0x6E8FBC", VA = "0x6E8FBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x6E93F4", Offset = "0x6E93F4", VA = "0x6E93F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x6E9630", Offset = "0x6E9630", VA = "0x6E9630")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x6E981C", Offset = "0x6E981C", VA = "0x6E981C")]
	private void OnLevelWasLoaded(int level)
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x6E9820", Offset = "0x6E9820", VA = "0x6E9820")]
	private void OnVRFocusGained(params object[] args)
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x6E999C", Offset = "0x6E999C", VA = "0x6E999C")]
	private void OnVRFocusLost(params object[] args)
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x6E9A20", Offset = "0x6E9A20", VA = "0x6E9A20")]
	private void OnSessionEnd(int gameEndStatus)
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x6EA2EC", Offset = "0x6EA2EC", VA = "0x6EA2EC")]
	private void OnCommandPressed(KeyCode pressedKey)
	{
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0x6E9BCC", Offset = "0x6E9BCC", VA = "0x6E9BCC")]
	private void Save_MatchStatsToCSV(int gameEndStatus)
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0x6E8C34", Offset = "0x6E8C34", VA = "0x6E8C34")]
	private void Serialize_ArenaSettings()
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0x6EA804", Offset = "0x6EA804", VA = "0x6EA804")]
	public void SetIsolatedMode(bool isEnabled, float trench)
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0x6EA850", Offset = "0x6EA850", VA = "0x6EA850")]
	public void SetBoundarySize(string boundary)
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x6EA990", Offset = "0x6EA990", VA = "0x6EA990")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A7DFC", Offset = "0x3A7DFC")]
	private IEnumerator Disconnect_OutOfFocus()
	{
		return null;
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x6EAA30", Offset = "0x6EAA30", VA = "0x6EAA30")]
	public void Respond_ToArenaCommands(int gameMode)
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0x6E924C", Offset = "0x6E924C", VA = "0x6E924C")]
	public void Change_GameMode(GameModes newMode)
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x6EAA34", Offset = "0x6EAA34", VA = "0x6EAA34")]
	public void Set_ArenaPlayerOffsets(PlayerManager localPlayer, PlayerSpawnPositionsManager.PlayerSpawnLocations spawnPoint)
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x6EAEF0", Offset = "0x6EAEF0", VA = "0x6EAEF0")]
	public void Set_ChaperonePosition(PlayerManager localPlayer, PlayerSpawnPositionsManager.PlayerSpawnLocations spawnPoint, float height)
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x6EB0C4", Offset = "0x6EB0C4", VA = "0x6EB0C4")]
	public void Set_HeadsetID(int id)
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x6EB1E4", Offset = "0x6EB1E4", VA = "0x6EB1E4")]
	public ArenaManager()
	{
	}
}
[Token(Token = "0x20000F4")]
public class ArenaModeGameSettings : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000655")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B744", Offset = "0x39B744")]
	private sealed class <Delayed_Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400252A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400252B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x17000482")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D3F")]
			[Address(RVA = "0x6EBAA0", Offset = "0x6EBAA0", VA = "0x6EBAA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000483")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D41")]
			[Address(RVA = "0x6EBB20", Offset = "0x6EBB20", VA = "0x6EBB20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D3C")]
		[Address(RVA = "0x6EB978", Offset = "0x6EB978", VA = "0x6EB978")]
		[DebuggerHidden]
		public <Delayed_Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6002D3D")]
		[Address(RVA = "0x6EB9A0", Offset = "0x6EB9A0", VA = "0x6EB9A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D3E")]
		[Address(RVA = "0x6EB9A4", Offset = "0x6EB9A4", VA = "0x6EB9A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D40")]
		[Address(RVA = "0x6EBAA8", Offset = "0x6EBAA8", VA = "0x6EBAA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x6EB424", Offset = "0x6EB424", VA = "0x6EB424")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x6EB54C", Offset = "0x6EB54C", VA = "0x6EB54C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x6EB63C", Offset = "0x6EB63C", VA = "0x6EB63C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x6EB72C", Offset = "0x6EB72C", VA = "0x6EB72C")]
	private void Set_InitialMultiplayerSettings()
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x6EB90C", Offset = "0x6EB90C", VA = "0x6EB90C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A7E6C", Offset = "0x3A7E6C")]
	private IEnumerator Delayed_Start()
	{
		return null;
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x6EB998", Offset = "0x6EB998", VA = "0x6EB998")]
	public ArenaModeGameSettings()
	{
	}
}
[Token(Token = "0x20000F5")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x39A018", Offset = "0x39A018")]
public class ArenaPlayArea : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000656")]
	public enum Size
	{
		[Token(Token = "0x400252D")]
		Calibrated,
		[Token(Token = "0x400252E")]
		_400x300,
		[Token(Token = "0x400252F")]
		_300x225,
		[Token(Token = "0x4002530")]
		_200x150
	}

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float borderThickness;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float wireframeHeight;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool drawWireframeWhenSelectedOnly;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool drawInGame;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color color;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Vector3[] vertices;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private List<GameObject> fenceList;

	[Token(Token = "0x17000133")]
	public Size size
	{
		[Token(Token = "0x600091B")]
		[Address(RVA = "0x6EBB28", Offset = "0x6EBB28", VA = "0x6EBB28")]
		get
		{
			return default(Size);
		}
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x6EBCF0", Offset = "0x6EBCF0", VA = "0x6EBCF0")]
	public static bool GetBoundsFromServer(ref HmdQuad_t pRect)
	{
		return default(bool);
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x6EC14C", Offset = "0x6EC14C", VA = "0x6EC14C")]
	public static bool GetBounds(Size size, ref HmdQuad_t pRect)
	{
		return default(bool);
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x6EC57C", Offset = "0x6EC57C", VA = "0x6EC57C")]
	public void BuildMesh()
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x6ED430", Offset = "0x6ED430", VA = "0x6ED430")]
	private void Generate_Fence(Vector3 chaperoneSize)
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0x6EDC2C", Offset = "0x6EDC2C", VA = "0x6EDC2C")]
	private void PlaceFence(float X, float Z, float x, float z, Quaternion rotation)
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x6EE120", Offset = "0x6EE120", VA = "0x6EE120")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0x6EE4BC", Offset = "0x6EE4BC", VA = "0x6EE4BC")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x6EE130", Offset = "0x6EE130", VA = "0x6EE130")]
	public void DrawWireframe()
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x6EE4CC", Offset = "0x6EE4CC", VA = "0x6EE4CC")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x6EE5BC", Offset = "0x6EE5BC", VA = "0x6EE5BC")]
	public ArenaPlayArea()
	{
	}
}
[Token(Token = "0x20000F6")]
public class ArenaSpectatorPlayer : PlayerManager
{
	[Token(Token = "0x2000657")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B754", Offset = "0x39B754")]
	private sealed class <Session_TimerRoutine>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ArenaSpectatorPlayer <>4__this;

		[Token(Token = "0x4002534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <currentTime>5__2;

		[Token(Token = "0x17000484")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D45")]
			[Address(RVA = "0x6F2860", Offset = "0x6F2860", VA = "0x6F2860", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000485")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D47")]
			[Address(RVA = "0x6F28E0", Offset = "0x6F28E0", VA = "0x6F28E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D42")]
		[Address(RVA = "0x6F0E24", Offset = "0x6F0E24", VA = "0x6F0E24")]
		[DebuggerHidden]
		public <Session_TimerRoutine>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6002D43")]
		[Address(RVA = "0x6F24A0", Offset = "0x6F24A0", VA = "0x6F24A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D44")]
		[Address(RVA = "0x6F24A4", Offset = "0x6F24A4", VA = "0x6F24A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D46")]
		[Address(RVA = "0x6F2868", Offset = "0x6F2868", VA = "0x6F2868", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000658")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B764", Offset = "0x39B764")]
	private sealed class <WaitToCheckRoom>d__65 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ArenaSpectatorPlayer <>4__this;

		[Token(Token = "0x17000486")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D4B")]
			[Address(RVA = "0x6F2A6C", Offset = "0x6F2A6C", VA = "0x6F2A6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000487")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D4D")]
			[Address(RVA = "0x6F2AEC", Offset = "0x6F2AEC", VA = "0x6F2AEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D48")]
		[Address(RVA = "0x6F2388", Offset = "0x6F2388", VA = "0x6F2388")]
		[DebuggerHidden]
		public <WaitToCheckRoom>d__65(int <>1__state)
		{
		}

		[Token(Token = "0x6002D49")]
		[Address(RVA = "0x6F28E8", Offset = "0x6F28E8", VA = "0x6F28E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D4A")]
		[Address(RVA = "0x6F28EC", Offset = "0x6F28EC", VA = "0x6F28EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D4C")]
		[Address(RVA = "0x6F2A74", Offset = "0x6F2A74", VA = "0x6F2A74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<KeyCode> OnCommand;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static Action<int> OnSessionEnd;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float orbitSpeed;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float orbitHeight;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float maxOrbitSpeed;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float orbitSpeedIncrement;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Camera _spectatorCamera;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 _orbitCenter;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private bool _isOrbiting;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float _orbitDistance;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[SerializeField]
	private GameObject _playerInfoPrefab;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private Transform _playerInfoHolder;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[SerializeField]
	private Transform _COOPUIHolder;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private Text _COOPWave;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	[SerializeField]
	private Text _COOPTeamScore;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private Text _sceneStatusInfo;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	[SerializeField]
	private Text _gameStatusInfo;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private Text _playerCountInfo;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	[SerializeField]
	private Text _gameTimeInfo;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39F0E4", Offset = "0x39F0E4")]
	public GameObject toLobbyButtonObject;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public GameObject gameModeButtonsObject;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject pvpModeButtonObject;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39F118", Offset = "0x39F118")]
	public GameObject optionsMenuObject;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public TMP_InputField[] ipInputFields;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public TMP_InputField startTime;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public TMP_InputField endTime;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public TMP_InputField respawnTime;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public TMP_InputField enemyMultiplier;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public TMP_Dropdown toolSelectDropdown;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public TMP_InputField boundarySize;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public TMP_Dropdown pvpDistanceDropdown;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public TMP_Dropdown useTrenchDropdown;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public TMP_InputField isolatedTrenchWidth;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public TMP_InputField arcadeName;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public TMP_InputField[] playerNames;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject[] playerNameObjects;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private bool useCommandInputs;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Coroutine _sessionTimerRoutine;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private Dictionary<PlayerManager, MPHeartDisplay> _healthDict;

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x6EE684", Offset = "0x6EE684", VA = "0x6EE684")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x6EEB1C", Offset = "0x6EEB1C", VA = "0x6EEB1C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x6EEFB4", Offset = "0x6EEFB4", VA = "0x6EEFB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x6EFED4", Offset = "0x6EFED4", VA = "0x6EFED4")]
	private void Start()
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0x6F0874", Offset = "0x6F0874", VA = "0x6F0874")]
	private void Update()
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x6F0D6C", Offset = "0x6F0D6C", VA = "0x6F0D6C")]
	private void Start_SessionTimer()
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x6F0DA4", Offset = "0x6F0DA4", VA = "0x6F0DA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A7EDC", Offset = "0x3A7EDC")]
	private IEnumerator Session_TimerRoutine()
	{
		return null;
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x6F0E44", Offset = "0x6F0E44", VA = "0x6F0E44")]
	private void Update_GameState()
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x6EFC4C", Offset = "0x6EFC4C", VA = "0x6EFC4C")]
	private void Update_GameMode(GameModes newMode)
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x6F0F78", Offset = "0x6F0F78", VA = "0x6F0F78")]
	private void Update_Waves(int currentWave)
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x6F103C", Offset = "0x6F103C", VA = "0x6F103C")]
	private void Update_Score()
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x6EFD94", Offset = "0x6EFD94", VA = "0x6EFD94")]
	public void Update_PlayerCount()
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x6EF39C", Offset = "0x6EF39C", VA = "0x6EF39C")]
	private void Initalize_GameUI()
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x6F12FC", Offset = "0x6F12FC", VA = "0x6F12FC")]
	private void Update_PlayerHealthUI(PlayerManager player)
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x6F1460", Offset = "0x6F1460", VA = "0x6F1460")]
	public void OptionsButtonPressed()
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x6F1494", Offset = "0x6F1494", VA = "0x6F1494")]
	public void GameModeButtonPressed(int newMode)
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x6F15CC", Offset = "0x6F15CC", VA = "0x6F15CC")]
	public void SaveAndCloseOptionsButtonPressed()
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x6F2290", Offset = "0x6F2290", VA = "0x6F2290")]
	public void StartButtonPressed()
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0x6F230C", Offset = "0x6F230C", VA = "0x6F230C")]
	public void ToLobbyButtonPressed()
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x6F0020", Offset = "0x6F0020", VA = "0x6F0020")]
	private void ShowPlayerNameObjects(int maxPlayers)
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x6F1120", Offset = "0x6F1120", VA = "0x6F1120")]
	private void Add_MissingPlayerToDict(PlayerManager player)
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x6EF62C", Offset = "0x6EF62C", VA = "0x6EF62C")]
	private void Set_OrbitCenterPoint()
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x6F0C1C", Offset = "0x6F0C1C", VA = "0x6F0C1C")]
	private void Orbit_Camera()
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0x6F0890", Offset = "0x6F0890", VA = "0x6F0890")]
	private void Get_ArenaCommands()
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x6F0130", Offset = "0x6F0130", VA = "0x6F0130")]
	private void FillInSettingsDataOnMenu()
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0x6F16B4", Offset = "0x6F16B4", VA = "0x6F16B4")]
	private void WriteSettingsData()
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0x6F00B0", Offset = "0x6F00B0", VA = "0x6F00B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A7F4C", Offset = "0x3A7F4C")]
	private IEnumerator WaitToCheckRoom()
	{
		return null;
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x6F23A8", Offset = "0x6F23A8", VA = "0x6F23A8")]
	public ArenaSpectatorPlayer()
	{
	}
}
[Token(Token = "0x20000F7")]
public class Block : NVRInteractableItem
{
	[Token(Token = "0x2000659")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B774", Offset = "0x39B774")]
	private sealed class <DelayedSetToStartWeight>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400253A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Block <>4__this;

		[Token(Token = "0x17000488")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D51")]
			[Address(RVA = "0x67B22C", Offset = "0x67B22C", VA = "0x67B22C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000489")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D53")]
			[Address(RVA = "0x67B2AC", Offset = "0x67B2AC", VA = "0x67B2AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D4E")]
		[Address(RVA = "0x677C44", Offset = "0x677C44", VA = "0x677C44")]
		[DebuggerHidden]
		public <DelayedSetToStartWeight>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x6002D4F")]
		[Address(RVA = "0x67B0F4", Offset = "0x67B0F4", VA = "0x67B0F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D50")]
		[Address(RVA = "0x67B0F8", Offset = "0x67B0F8", VA = "0x67B0F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D52")]
		[Address(RVA = "0x67B234", Offset = "0x67B234", VA = "0x67B234", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200065A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B784", Offset = "0x39B784")]
	private sealed class <WaitToStopBlockMovementAbility>d__71 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400253B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400253C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400253D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Block <>4__this;

		[Token(Token = "0x1700048A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D57")]
			[Address(RVA = "0x67B4E4", Offset = "0x67B4E4", VA = "0x67B4E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D59")]
			[Address(RVA = "0x67B564", Offset = "0x67B564", VA = "0x67B564", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D54")]
		[Address(RVA = "0x679880", Offset = "0x679880", VA = "0x679880")]
		[DebuggerHidden]
		public <WaitToStopBlockMovementAbility>d__71(int <>1__state)
		{
		}

		[Token(Token = "0x6002D55")]
		[Address(RVA = "0x67B2B4", Offset = "0x67B2B4", VA = "0x67B2B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D56")]
		[Address(RVA = "0x67B2B8", Offset = "0x67B2B8", VA = "0x67B2B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D58")]
		[Address(RVA = "0x67B4EC", Offset = "0x67B4EC", VA = "0x67B4EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool isPlaceholder;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BlockProperties myBlockProperties;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public PowerupTypes myPowerup;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private PowerupTypes[] _validMPPowerups;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PowerupTypes[] _validArcadePowerup;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public PhotonView myPhotonView;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Transform _myBlockTransfrom;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int myPointValue;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float magnitudeFromStart;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 startPos;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Transform myTransform;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Rigidbody myRigid;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Collider myCollider;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Renderer myRenderer;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool blockIsAlive;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	private bool blockIsKnockedDown;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Destructible myDestructible;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private FortManager myFortManager;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool blockHasSettled;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float spawnTextTimerLimit;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float spawnTextTimer;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float wateringTimerLimit;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float wateringTimer;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float startingWeight;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private NVRHand previouslyAttachedHand;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private Color originalColor;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private bool isHovering;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private LayerMask enemyWallLayerMask;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Coroutine deactivateRigidbody;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private int _lastHittingSnowballPlayerID;

	[Token(Token = "0x17000134")]
	private Transform myBlockTransform
	{
		[Token(Token = "0x6000943")]
		[Address(RVA = "0x673B64", Offset = "0x673B64", VA = "0x673B64")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000942")]
		[Address(RVA = "0x673B5C", Offset = "0x673B5C", VA = "0x673B5C")]
		set
		{
		}
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x673C64", Offset = "0x673C64", VA = "0x673C64", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x673F68", Offset = "0x673F68", VA = "0x673F68", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x674000", Offset = "0x674000", VA = "0x674000")]
	[PunRPC]
	public void RpcSetupBlock(int blockShape, int blockSize, int blockMaterial, Vector3 _pos, Quaternion _rot)
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x674018", Offset = "0x674018", VA = "0x674018")]
	public void SetupProperties(BlockProperties _blockProperties)
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x675788", Offset = "0x675788", VA = "0x675788")]
	private void SetBlockBasedOnGameMode()
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x67404C", Offset = "0x67404C", VA = "0x67404C")]
	private void SetBlockBasedOnSize()
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x67598C", Offset = "0x67598C", VA = "0x67598C")]
	public void SetScaleAndPropertiesThenResetStats(Vector3 _newScale, BlockPropertiesMini _blockPropertiesMini)
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x675C44", Offset = "0x675C44", VA = "0x675C44")]
	[PunRPC]
	public void RpcResetMassHPPointsBasedOnScaledSize(Vector3 newScale, bool lightenAfterReset)
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x67482C", Offset = "0x67482C", VA = "0x67482C")]
	private void SetBlockBasedOnShape()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x6752CC", Offset = "0x6752CC", VA = "0x6752CC")]
	private void SetBlockBasedOnMaterial()
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x676128", Offset = "0x676128", VA = "0x676128")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x676264", Offset = "0x676264", VA = "0x676264")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x6763A0", Offset = "0x6763A0", VA = "0x6763A0", Slot = "10")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x67593C", Offset = "0x67593C", VA = "0x67593C")]
	public void ChangeSize(Vector3 newScale)
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x676600", Offset = "0x676600", VA = "0x676600")]
	public void MultiplySize(float scaleMultiplier)
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x6769CC", Offset = "0x6769CC", VA = "0x6769CC")]
	[PunRPC]
	private void RpcSyncScale(Vector3 scaleToSync)
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x676A1C", Offset = "0x676A1C", VA = "0x676A1C", Slot = "13")]
	public override void HoveringUpdate(NVRHand hand, float forTime)
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x676E0C", Offset = "0x676E0C", VA = "0x676E0C", Slot = "11")]
	public override void BeginInteraction(NVRHand hand)
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x6774D8", Offset = "0x6774D8", VA = "0x6774D8")]
	[PunRPC]
	private void RpcChangeToPickupLayer(int objectId)
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x6775B0", Offset = "0x6775B0", VA = "0x6775B0")]
	[PunRPC]
	private void RpcUnparentBlock()
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0x6775DC", Offset = "0x6775DC", VA = "0x6775DC", Slot = "14")]
	public override void EndInteraction(NVRHand hand)
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x677930", Offset = "0x677930", VA = "0x677930")]
	public void LightenBlock()
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x677AA8", Offset = "0x677AA8", VA = "0x677AA8")]
	public void BlockBackToStartWeight()
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x677BC4", Offset = "0x677BC4", VA = "0x677BC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A800C", Offset = "0x3A800C")]
	private IEnumerator DelayedSetToStartWeight()
	{
		return null;
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0x677C64", Offset = "0x677C64", VA = "0x677C64")]
	public void RotateBlock(Vector2 blockRotation)
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0x677CB8", Offset = "0x677CB8", VA = "0x677CB8")]
	private void RepairBlock(int layer)
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x6767E8", Offset = "0x6767E8", VA = "0x6767E8")]
	private void SilentRepairBlock()
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0x6781BC", Offset = "0x6781BC", VA = "0x6781BC")]
	private void ShowBlock(bool show, int layer)
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x678230", Offset = "0x678230", VA = "0x678230")]
	public void SetupPowerupBlock()
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x6785F8", Offset = "0x6785F8", VA = "0x6785F8")]
	[PunRPC]
	public void rpcSync_PowerBlock(int powerup)
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0x6786FC", Offset = "0x6786FC", VA = "0x6786FC")]
	private void SettleBlock()
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0x67874C", Offset = "0x67874C", VA = "0x67874C")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0x6789B4", Offset = "0x6789B4", VA = "0x6789B4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0x677440", Offset = "0x677440", VA = "0x677440")]
	private float GetPercentageOfMaxMass()
	{
		return default(float);
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0x678E80", Offset = "0x678E80", VA = "0x678E80")]
	private void Hit(SnowBallInfo snowball)
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0x67943C", Offset = "0x67943C", VA = "0x67943C")]
	private void EnableGravityOnBlocksAbove()
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0x6797D4", Offset = "0x6797D4", VA = "0x6797D4")]
	private bool BlockIsAboutToBreak(int damage)
	{
		return default(bool);
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x679790", Offset = "0x679790", VA = "0x679790")]
	public void TriggerWaitToStopMovement()
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0x679800", Offset = "0x679800", VA = "0x679800")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A808C", Offset = "0x3A808C")]
	private IEnumerator WaitToStopBlockMovementAbility()
	{
		return null;
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x6798A0", Offset = "0x6798A0", VA = "0x6798A0")]
	[PunRPC]
	private void RpcReceiveDamage(int damage, int snowBallPlayerID)
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x6798D4", Offset = "0x6798D4", VA = "0x6798D4")]
	private void OnDestroyed()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x679E78", Offset = "0x679E78", VA = "0x679E78")]
	private void Handle_Powerups()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0x67AC74", Offset = "0x67AC74", VA = "0x67AC74")]
	public void RemoveBlock()
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x67AE00", Offset = "0x67AE00", VA = "0x67AE00", Slot = "19")]
	public override void AddExternalAngularVelocity(Vector3 angularVelocity)
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x67AF04", Offset = "0x67AF04", VA = "0x67AF04", Slot = "20")]
	public override void AddExternalRelativeAngularVelocity(Vector3 angularVelocity)
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x67B008", Offset = "0x67B008", VA = "0x67B008")]
	public Block()
	{
	}
}
[Token(Token = "0x20000F8")]
public class BlockPlaceholder : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000972")]
	[Address(RVA = "0x67B56C", Offset = "0x67B56C", VA = "0x67B56C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0x67B570", Offset = "0x67B570", VA = "0x67B570")]
	private void Update()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x67B574", Offset = "0x67B574", VA = "0x67B574")]
	public BlockPlaceholder()
	{
	}
}
[Token(Token = "0x20000F9")]
public class BlockSpawner : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200065B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B794", Offset = "0x39B794")]
	private sealed class <GrowBlock>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400253E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400253F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BlockSpawner <>4__this;

		[Token(Token = "0x1700048C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D5D")]
			[Address(RVA = "0x67E2E8", Offset = "0x67E2E8", VA = "0x67E2E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D5F")]
			[Address(RVA = "0x67E368", Offset = "0x67E368", VA = "0x67E368", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D5A")]
		[Address(RVA = "0x67BEE8", Offset = "0x67BEE8", VA = "0x67BEE8")]
		[DebuggerHidden]
		public <GrowBlock>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6002D5B")]
		[Address(RVA = "0x67DACC", Offset = "0x67DACC", VA = "0x67DACC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D5C")]
		[Address(RVA = "0x67DAD0", Offset = "0x67DAD0", VA = "0x67DAD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D5E")]
		[Address(RVA = "0x67E2F0", Offset = "0x67E2F0", VA = "0x67E2F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public PhotonView myPhotonView;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public BlockProperties[] blockProperties;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool randomShapes;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float blockGrowSpeed;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Transform counterAnchor;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public int blockLimit;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public int blockSpawnedCount;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Transform attachedHand;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool isAllowedToSpawn;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject currentBlock;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private NVRInteractable currentBlockInteractable;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody currentBlockRigidbody;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private PhotonView currentBlockPhotonView;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool triggerAreaOccupied;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public Vector3 currentBlockOriginalSize;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer myRenderer;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Transform myTransform;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isCuboid;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool isGrowing;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int netConnectOfOwner;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color[] spawnerColors;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool isQuitting;

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x67B57C", Offset = "0x67B57C", VA = "0x67B57C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0x67B608", Offset = "0x67B608", VA = "0x67B608")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x67B8C0", Offset = "0x67B8C0", VA = "0x67B8C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x67BA40", Offset = "0x67BA40", VA = "0x67BA40")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x67BB7C", Offset = "0x67BB7C", VA = "0x67BB7C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x67BC10", Offset = "0x67BC10", VA = "0x67BC10")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x67BC1C", Offset = "0x67BC1C", VA = "0x67BC1C")]
	private void PlayerScaleChanged(bool isFirstPerson)
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x67BE68", Offset = "0x67BE68", VA = "0x67BE68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A810C", Offset = "0x3A810C")]
	private IEnumerator GrowBlock()
	{
		return null;
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x67BF08", Offset = "0x67BF08", VA = "0x67BF08")]
	[PunRPC]
	private void RpcChangeColor(int colorIndex)
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x67BFA8", Offset = "0x67BFA8", VA = "0x67BFA8")]
	[PunRPC]
	private void RpcStopGrowing()
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x67BFB4", Offset = "0x67BFB4", VA = "0x67BFB4")]
	public void SetupSpawner()
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x67C224", Offset = "0x67C224", VA = "0x67C224")]
	private void SpawnBlock()
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x67C984", Offset = "0x67C984", VA = "0x67C984")]
	[PunRPC]
	private void RpcSetCurrentBlock(int objectId)
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x67CD08", Offset = "0x67CD08", VA = "0x67CD08")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x67CDF4", Offset = "0x67CDF4", VA = "0x67CDF4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x67D4E8", Offset = "0x67D4E8", VA = "0x67D4E8")]
	[PunRPC]
	private void RpcRemoveBlock()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x67D500", Offset = "0x67D500", VA = "0x67D500")]
	private void StartSpawnerLaterForRestartWithSavedFort()
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x67D5C8", Offset = "0x67D5C8", VA = "0x67D5C8")]
	public void AllowSpawn(bool allow)
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x67D5D0", Offset = "0x67D5D0", VA = "0x67D5D0")]
	public void RemoveBlockIfWasInSpawnerWhenDestroyed(GameObject _blockToCheck)
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x67D7DC", Offset = "0x67D7DC", VA = "0x67D7DC")]
	public void SetNetConnectOfOwner(int _netCon)
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x67D7E4", Offset = "0x67D7E4", VA = "0x67D7E4")]
	private void DestroySpawner()
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x67D930", Offset = "0x67D930", VA = "0x67D930")]
	public BlockSpawner()
	{
	}
}
[Token(Token = "0x20000FA")]
public class BodyTrigger : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200065C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B7A4", Offset = "0x39B7A4")]
	private sealed class <WaitAndLogPosition>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BodyTrigger <>4__this;

		[Token(Token = "0x1700048E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D63")]
			[Address(RVA = "0x67F994", Offset = "0x67F994", VA = "0x67F994", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D65")]
			[Address(RVA = "0x67FA14", Offset = "0x67FA14", VA = "0x67FA14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D60")]
		[Address(RVA = "0x67EAC4", Offset = "0x67EAC4", VA = "0x67EAC4")]
		[DebuggerHidden]
		public <WaitAndLogPosition>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6002D61")]
		[Address(RVA = "0x67F79C", Offset = "0x67F79C", VA = "0x67F79C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D62")]
		[Address(RVA = "0x67F7A0", Offset = "0x67F7A0", VA = "0x67F7A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D64")]
		[Address(RVA = "0x67F99C", Offset = "0x67F99C", VA = "0x67F99C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200065D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B7B4", Offset = "0x39B7B4")]
	private sealed class <WaitAndChangeLocalPosition>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BodyTrigger <>4__this;

		[Token(Token = "0x17000490")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D69")]
			[Address(RVA = "0x67F714", Offset = "0x67F714", VA = "0x67F714", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000491")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D6B")]
			[Address(RVA = "0x67F794", Offset = "0x67F794", VA = "0x67F794", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D66")]
		[Address(RVA = "0x67ED60", Offset = "0x67ED60", VA = "0x67ED60")]
		[DebuggerHidden]
		public <WaitAndChangeLocalPosition>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002D67")]
		[Address(RVA = "0x67F5F8", Offset = "0x67F5F8", VA = "0x67F5F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D68")]
		[Address(RVA = "0x67F5FC", Offset = "0x67F5FC", VA = "0x67F5FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D6A")]
		[Address(RVA = "0x67F71C", Offset = "0x67F71C", VA = "0x67F71C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x39F18C", Offset = "0x39F18C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x39F18C", Offset = "0x39F18C")]
	public float maxRotationSpeed;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int ownerId;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public PhotonView myPhotonView;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform headTransform;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject networkBody;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform myTransform;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 _targetRotation;

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x67E370", Offset = "0x67E370", VA = "0x67E370")]
	private void Awake()
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x67E38C", Offset = "0x67E38C", VA = "0x67E38C")]
	private void Start()
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x67EA44", Offset = "0x67EA44", VA = "0x67EA44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A81BC", Offset = "0x3A81BC")]
	private IEnumerator WaitAndLogPosition()
	{
		return null;
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x67EAE4", Offset = "0x67EAE4", VA = "0x67EAE4")]
	public void Setup(Transform head, PhotonView ownerView)
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0x67ECE0", Offset = "0x67ECE0", VA = "0x67ECE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A822C", Offset = "0x3A822C")]
	private IEnumerator WaitAndChangeLocalPosition()
	{
		return null;
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x67ED80", Offset = "0x67ED80", VA = "0x67ED80")]
	[PunRPC]
	private void RpcSetup(int ownerViewId)
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0x67EE84", Offset = "0x67EE84", VA = "0x67EE84")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x67F33C", Offset = "0x67F33C", VA = "0x67F33C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x67F5E8", Offset = "0x67F5E8", VA = "0x67F5E8")]
	public BodyTrigger()
	{
	}
}
[Token(Token = "0x20000FB")]
public class CameraFacingBillboard : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[HideInInspector]
	public Transform m_Camera;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool lockZAxis;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Transform myTransform;

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x6847B4", Offset = "0x6847B4", VA = "0x6847B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x684930", Offset = "0x684930", VA = "0x684930")]
	private void Update()
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x684C34", Offset = "0x684C34", VA = "0x684C34")]
	public CameraFacingBillboard()
	{
	}
}
[Token(Token = "0x20000FC")]
public class CameraRotation : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float moveTime;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool rotateCamera;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 startRotation;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 endRotation;

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x684C3C", Offset = "0x684C3C", VA = "0x684C3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x684D38", Offset = "0x684D38", VA = "0x684D38")]
	public CameraRotation()
	{
	}
}
[Token(Token = "0x20000FD")]
public class CharacterSelectorModel : NVRInteractableItem
{
	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public char character;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text characterText;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Transform selectorOriginalPos;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform offsetTransform;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Tweener tweenerForDOMove;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Tweener tweenerForDORotate;

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x6857CC", Offset = "0x6857CC", VA = "0x6857CC", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x685914", Offset = "0x685914", VA = "0x685914", Slot = "21")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x68591C", Offset = "0x68591C", VA = "0x68591C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x685B3C", Offset = "0x685B3C", VA = "0x685B3C")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x685D5C", Offset = "0x685D5C", VA = "0x685D5C")]
	public bool CheckIfDoneTweening()
	{
		return default(bool);
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x685DAC", Offset = "0x685DAC", VA = "0x685DAC")]
	public void SetCharacter(char _char)
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x685E50", Offset = "0x685E50", VA = "0x685E50")]
	public CharacterSelectorModel()
	{
	}
}
[Token(Token = "0x20000FE")]
public class Coal : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200065E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B7C4", Offset = "0x39B7C4")]
	private sealed class <MoveToBucket>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Coal <>4__this;

		[Token(Token = "0x400254A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool <reached>5__2;

		[Token(Token = "0x17000492")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D6F")]
			[Address(RVA = "0x6865F0", Offset = "0x6865F0", VA = "0x6865F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000493")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D71")]
			[Address(RVA = "0x686670", Offset = "0x686670", VA = "0x686670", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D6C")]
		[Address(RVA = "0x6860B8", Offset = "0x6860B8", VA = "0x6860B8")]
		[DebuggerHidden]
		public <MoveToBucket>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002D6D")]
		[Address(RVA = "0x686280", Offset = "0x686280", VA = "0x686280", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D6E")]
		[Address(RVA = "0x686284", Offset = "0x686284", VA = "0x686284", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D70")]
		[Address(RVA = "0x6865F8", Offset = "0x6865F8", VA = "0x6865F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float moveSpeed;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float moveToBucketReachedDistance;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private PhotonView myPhotonView;

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x685E58", Offset = "0x685E58", VA = "0x685E58")]
	private void Start()
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x685F50", Offset = "0x685F50", VA = "0x685F50")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x686004", Offset = "0x686004", VA = "0x686004")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x685ED0", Offset = "0x685ED0", VA = "0x685ED0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A82AC", Offset = "0x3A82AC")]
	private IEnumerator MoveToBucket()
	{
		return null;
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x6860D8", Offset = "0x6860D8", VA = "0x6860D8")]
	private void RemoveCoal()
	{
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x686264", Offset = "0x686264", VA = "0x686264")]
	public Coal()
	{
	}
}
[Token(Token = "0x20000FF")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x39A0B4", Offset = "0x39A0B4")]
public class ColorOverlay : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Color color;

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0x686678", Offset = "0x686678", VA = "0x686678")]
	public ColorOverlay()
	{
	}
}
[Token(Token = "0x2000100")]
public abstract class CommandLineDataArgument
{
	[Token(Token = "0x60009A7")]
	[Address(RVA = "0x687F30", Offset = "0x687F30", VA = "0x687F30")]
	protected CommandLineDataArgument()
	{
	}
}
[Token(Token = "0x2000101")]
public class CommandLineData_BoolValue : CommandLineDataArgument
{
	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private bool _isEnabled;

	[Token(Token = "0x17000135")]
	public bool IsArgumentEnabled
	{
		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x68814C", Offset = "0x68814C", VA = "0x68814C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x687E7C", Offset = "0x687E7C", VA = "0x687E7C")]
	public CommandLineData_BoolValue(bool isEnabled)
	{
	}
}
[Token(Token = "0x2000102")]
public class CommandLineData_FloatValue : CommandLineDataArgument
{
	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private float _storedFloat;

	[Token(Token = "0x17000136")]
	public float StoredFloat
	{
		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x688154", Offset = "0x688154", VA = "0x688154")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0x687E34", Offset = "0x687E34", VA = "0x687E34")]
	public CommandLineData_FloatValue(float storedFloat)
	{
	}
}
[Token(Token = "0x2000103")]
public class CommandLineData_ArcadeNames : CommandLineDataArgument
{
	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private string _arcadeName;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private string[] _roomNames;

	[Token(Token = "0x17000137")]
	public string ArcadeName
	{
		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x687F38", Offset = "0x687F38", VA = "0x687F38")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000138")]
	public string[] RoomNames
	{
		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x687FAC", Offset = "0x687FAC", VA = "0x687FAC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x687E54", Offset = "0x687E54", VA = "0x687E54")]
	public CommandLineData_ArcadeNames(string arcadeName, string[] roomNames)
	{
	}
}
[Token(Token = "0x2000104")]
public static class CommandLineArgumentManager
{
	[Token(Token = "0x200065F")]
	public enum CommandArguments
	{
		[Token(Token = "0x400254C")]
		Arena,
		[Token(Token = "0x400254D")]
		CenterSpawn,
		[Token(Token = "0x400254E")]
		SingleplayerOnly,
		[Token(Token = "0x400254F")]
		MultiplayerOnly,
		[Token(Token = "0x4002550")]
		MultiplayerStart,
		[Token(Token = "0x4002551")]
		MultiplayerAlwaysWeapons,
		[Token(Token = "0x4002552")]
		MultiplayerTimeLimit,
		[Token(Token = "0x4002553")]
		bHapticsDuration,
		[Token(Token = "0x4002554")]
		ArcadeRoomNames,
		[Token(Token = "0x4002555")]
		ArcadeMode,
		[Token(Token = "0x4002556")]
		VoiceOff,
		[Token(Token = "0x4002557")]
		PhotonLAN,
		[Token(Token = "0x4002558")]
		MultiplayerTrain
	}

	[Serializable]
	[Token(Token = "0x2000660")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B7D4", Offset = "0x39B7D4")]
	private sealed class <>c
	{
		[Token(Token = "0x4002559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400255A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static Func<string, bool> <>9__35_0;

		[Token(Token = "0x6002D73")]
		[Address(RVA = "0x687F0C", Offset = "0x687F0C", VA = "0x687F0C")]
		public <>c()
		{
		}

		[Token(Token = "0x6002D74")]
		[Address(RVA = "0x687F14", Offset = "0x687F14", VA = "0x687F14")]
		internal bool <Add_Commands>b__35_0(string x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool _didFailInitalization;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	private static bool _isInitalized;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static Dictionary<string, CommandLineDataArgument> _commandDict;

	[Token(Token = "0x17000139")]
	public static bool DidFailInitalization
	{
		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x686680", Offset = "0x686680", VA = "0x686680")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700013A")]
	public static CommandLineData_ArcadeNames ArcadeInfo
	{
		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x6866F8", Offset = "0x6866F8", VA = "0x6866F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700013B")]
	public static CommandLineData_FloatValue TimeLimitData
	{
		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x6869C8", Offset = "0x6869C8", VA = "0x6869C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700013C")]
	public static CommandLineData_FloatValue bHapticsDurationData
	{
		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x686A88", Offset = "0x686A88", VA = "0x686A88")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700013D")]
	public static bool IsArena
	{
		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x67ABF8", Offset = "0x67ABF8", VA = "0x67ABF8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700013E")]
	public static bool IsPhotonLAN
	{
		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x686B48", Offset = "0x686B48", VA = "0x686B48")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700013F")]
	public static bool UseSingleToolshelf
	{
		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x686BC4", Offset = "0x686BC4", VA = "0x686BC4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000140")]
	public static bool IsMultiplayerAlwaysWeapons
	{
		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x686D58", Offset = "0x686D58", VA = "0x686D58")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000141")]
	public static bool IsArcadeMode
	{
		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x678524", Offset = "0x678524", VA = "0x678524")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000142")]
	public static bool IsMultiplayerOnly
	{
		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x686DD4", Offset = "0x686DD4", VA = "0x686DD4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000143")]
	public static bool IsSingleplayerOnly
	{
		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x686E50", Offset = "0x686E50", VA = "0x686E50")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000144")]
	public static bool IsMultiplayerStart
	{
		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x686ECC", Offset = "0x686ECC", VA = "0x686ECC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000145")]
	public static bool IsVoiceOff
	{
		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x686F48", Offset = "0x686F48", VA = "0x686F48")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000146")]
	public static bool IsMultiplayerTrain
	{
		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x686FC4", Offset = "0x686FC4", VA = "0x686FC4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x6867B8", Offset = "0x6867B8", VA = "0x6867B8")]
	private static CommandLineDataArgument Get_ArgumentStatus(CommandArguments argument)
	{
		return null;
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x687040", Offset = "0x687040", VA = "0x687040")]
	private static void Initalize()
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x68713C", Offset = "0x68713C", VA = "0x68713C")]
	private static void Prepare_Commands(ref List<string> commands)
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x6873D0", Offset = "0x6873D0", VA = "0x6873D0")]
	private static void Add_Commands(List<string> commands)
	{
	}
}
[Token(Token = "0x2000105")]
public class ActiveStateToggler : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x6E58CC", Offset = "0x6E58CC", VA = "0x6E58CC")]
	public void ToggleActive()
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x6E5930", Offset = "0x6E5930", VA = "0x6E5930")]
	public ActiveStateToggler()
	{
	}
}
[Token(Token = "0x2000106")]
public class ApplicationManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x6E8434", Offset = "0x6E8434", VA = "0x6E8434")]
	public void Quit()
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x6E843C", Offset = "0x6E843C", VA = "0x6E843C")]
	public ApplicationManager()
	{
	}
}
[Token(Token = "0x2000107")]
public class ChangeColor : UnityEngine.MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x685258", Offset = "0x685258", VA = "0x685258")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x68525C", Offset = "0x68525C", VA = "0x68525C")]
	public void SetRed(float value)
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x685598", Offset = "0x685598", VA = "0x685598")]
	public void SetGreen(float value)
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x6855A0", Offset = "0x6855A0", VA = "0x6855A0")]
	public void SetBlue(float value)
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x685264", Offset = "0x685264", VA = "0x685264")]
	public void OnValueChanged(float value, int channel)
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x6855A8", Offset = "0x6855A8", VA = "0x6855A8", Slot = "4")]
	public void OnPointerClick(PointerEventData data)
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x6857C4", Offset = "0x6857C4", VA = "0x6857C4")]
	public ChangeColor()
	{
	}
}
[Token(Token = "0x2000108")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x39A0FC", Offset = "0x39A0FC")]
public class DragMe : UnityEngine.MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IDragHandler, IEndDragHandler
{
	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool dragOnSurfaces;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameObject m_DraggingIcon;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private RectTransform m_DraggingPlane;

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x7FD0E8", Offset = "0x7FD0E8", VA = "0x7FD0E8", Slot = "4")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x7FD680", Offset = "0x7FD680", VA = "0x7FD680", Slot = "5")]
	public void OnDrag(PointerEventData data)
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x7FD3B8", Offset = "0x7FD3B8", VA = "0x7FD3B8")]
	private void SetDraggedPosition(PointerEventData data)
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x7FD720", Offset = "0x7FD720", VA = "0x7FD720", Slot = "6")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60009D1")]
	public static T FindInParents<T>(GameObject go) where T : UnityEngine.Component
	{
		return null;
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x7FD7E0", Offset = "0x7FD7E0", VA = "0x7FD7E0")]
	public DragMe()
	{
	}
}
[Token(Token = "0x2000109")]
public class DragPanel : UnityEngine.MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IDragHandler
{
	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Vector2 originalLocalPointerPosition;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Vector3 originalPanelLocalPosition;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform panelRectTransform;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private RectTransform parentRectTransform;

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x7FD7F0", Offset = "0x7FD7F0", VA = "0x7FD7F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x7FD8D4", Offset = "0x7FD8D4", VA = "0x7FD8D4", Slot = "4")]
	public void OnPointerDown(PointerEventData data)
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x7FD9E0", Offset = "0x7FD9E0", VA = "0x7FD9E0", Slot = "5")]
	public void OnDrag(PointerEventData data)
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x7FDC60", Offset = "0x7FDC60", VA = "0x7FDC60")]
	private void ClampToWindow()
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x7FDF44", Offset = "0x7FDF44", VA = "0x7FDF44")]
	public DragPanel()
	{
	}
}
[Token(Token = "0x200010A")]
public class DropMe : UnityEngine.MonoBehaviour, IDropHandler, IEventSystemHandler, IPointerEnterHandler, IPointerExitHandler
{
	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Image containerImage;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Image receivingImage;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Color normalColor;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color highlightColor;

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x7FDF4C", Offset = "0x7FDF4C", VA = "0x7FDF4C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x7FE01C", Offset = "0x7FE01C", VA = "0x7FE01C", Slot = "4")]
	public void OnDrop(PointerEventData data)
	{
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x7FE27C", Offset = "0x7FE27C", VA = "0x7FE27C", Slot = "5")]
	public void OnPointerEnter(PointerEventData data)
	{
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x7FE3A0", Offset = "0x7FE3A0", VA = "0x7FE3A0", Slot = "6")]
	public void OnPointerExit(PointerEventData data)
	{
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x7FE168", Offset = "0x7FE168", VA = "0x7FE168")]
	private Sprite GetDropSprite(PointerEventData data)
	{
		return null;
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x7FE47C", Offset = "0x7FE47C", VA = "0x7FE47C")]
	public DropMe()
	{
	}
}
[Token(Token = "0x200010B")]
public class NVRCanvasInputSnow : BaseInputModule
{
	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool GeometryBlocksLaser;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LayerMask LayersThatBlockLaser;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Sprite CursorSprite;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material CursorMaterial;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float NormalCursorScale;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool LaserEnabled;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color LaserColor;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float LaserWidth;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool OnCanvas;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool CanvasUsed;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private RectTransform[] Cursors;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer[] Lasers;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Material laserMaterial;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject[] CurrentPoint;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private GameObject[] CurrentPressed;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject[] CurrentDragging;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private PointerEventData[] PointEvents;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool Initialized;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Camera ControllerCamera;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private NVRPlayer Player;

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x6D5470", Offset = "0x6D5470", VA = "0x6D5470", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x6D625C", Offset = "0x6D625C", VA = "0x6D625C")]
	private bool GetLookPointerEventData(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x6D66F4", Offset = "0x6D66F4", VA = "0x6D66F4")]
	private bool UpdateCursor(int index, PointerEventData pointData)
	{
		return default(bool);
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x6D6F90", Offset = "0x6D6F90", VA = "0x6D6F90")]
	public void ClearSelection()
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x6D7048", Offset = "0x6D7048", VA = "0x6D7048")]
	private void Select(GameObject go)
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x6D7144", Offset = "0x6D7144", VA = "0x6D7144")]
	private bool SendUpdateEventToSelectedObject()
	{
		return default(bool);
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x6D72DC", Offset = "0x6D72DC", VA = "0x6D72DC")]
	private void UpdateCameraPosition(int index)
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x6D7470", Offset = "0x6D7470", VA = "0x6D7470", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x6D8ABC", Offset = "0x6D8ABC", VA = "0x6D8ABC")]
	private bool ButtonDown(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x6D8B24", Offset = "0x6D8B24", VA = "0x6D8B24")]
	private bool ButtonUp(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x6D8B8C", Offset = "0x6D8B8C", VA = "0x6D8B8C")]
	public NVRCanvasInputSnow()
	{
	}
}
[Token(Token = "0x200010C")]
public class PanelManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000661")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B7E4", Offset = "0x39B7E4")]
	private sealed class <DisablePanelDeleyed>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400255B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400255C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400255D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Animator anim;

		[Token(Token = "0x400255E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public PanelManager <>4__this;

		[Token(Token = "0x400255F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool <closedStateReached>5__2;

		[Token(Token = "0x4002560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool <wantToClose>5__3;

		[Token(Token = "0x17000494")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D78")]
			[Address(RVA = "0xA7503C", Offset = "0xA7503C", VA = "0xA7503C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000495")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D7A")]
			[Address(RVA = "0xA750BC", Offset = "0xA750BC", VA = "0xA750BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D75")]
		[Address(RVA = "0xA74E00", Offset = "0xA74E00", VA = "0xA74E00")]
		[DebuggerHidden]
		public <DisablePanelDeleyed>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002D76")]
		[Address(RVA = "0xA74E28", Offset = "0xA74E28", VA = "0xA74E28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D77")]
		[Address(RVA = "0xA74E2C", Offset = "0xA74E2C", VA = "0xA74E2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D79")]
		[Address(RVA = "0xA75044", Offset = "0xA75044", VA = "0xA75044", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Animator initiallyOpen;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int m_OpenParameterId;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Animator m_Open;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject m_PreviouslySelected;

	[Token(Token = "0x40007D1")]
	private const string k_OpenTransitionName = "Open";

	[Token(Token = "0x40007D2")]
	private const string k_ClosedStateName = "Closed";

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0xA74770", Offset = "0xA74770", VA = "0xA74770")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0xA74824", Offset = "0xA74824", VA = "0xA74824")]
	public void OpenPanel(Animator anim)
	{
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0xA74AB4", Offset = "0xA74AB4", VA = "0xA74AB4")]
	private static GameObject FindFirstEnabledSelectable(GameObject gameObject)
	{
		return null;
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0xA749D4", Offset = "0xA749D4", VA = "0xA749D4")]
	public void CloseCurrent()
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0xA74D68", Offset = "0xA74D68", VA = "0xA74D68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A831C", Offset = "0x3A831C")]
	private IEnumerator DisablePanelDeleyed(Animator anim)
	{
		return null;
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0xA74BBC", Offset = "0xA74BBC", VA = "0xA74BBC")]
	private void SetSelected(GameObject go)
	{
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0xA74E20", Offset = "0xA74E20", VA = "0xA74E20")]
	public PanelManager()
	{
	}
}
[Token(Token = "0x200010D")]
public class ResizePanel : UnityEngine.MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IDragHandler
{
	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector2 minSize;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector2 maxSize;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private RectTransform panelRectTransform;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector2 originalLocalPointerPosition;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 originalSizeDelta;

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x81B7A4", Offset = "0x81B7A4", VA = "0x81B7A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x81B83C", Offset = "0x81B83C", VA = "0x81B83C", Slot = "4")]
	public void OnPointerDown(PointerEventData data)
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x81B948", Offset = "0x81B948", VA = "0x81B948", Slot = "5")]
	public void OnDrag(PointerEventData data)
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x81BBF4", Offset = "0x81BBF4", VA = "0x81BBF4")]
	public ResizePanel()
	{
	}
}
[Token(Token = "0x200010E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x39A16C", Offset = "0x39A16C")]
public class ScrollDetailTexture : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool uniqueMaterial;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector2 scrollPerSecond;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Matrix4x4 m_Matrix;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material mCopy;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Material mOriginal;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Image mSprite;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Material m_Mat;

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x8221DC", Offset = "0x8221DC", VA = "0x8221DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x8223B0", Offset = "0x8223B0", VA = "0x8223B0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x8224F4", Offset = "0x8224F4", VA = "0x8224F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x8226B4", Offset = "0x8226B4", VA = "0x8226B4")]
	public ScrollDetailTexture()
	{
	}
}
[Token(Token = "0x200010F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x39A1DC", Offset = "0x39A1DC")]
public class ShowSliderValue : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x82346C", Offset = "0x82346C", VA = "0x82346C")]
	public void UpdateLabel(float value)
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x8235CC", Offset = "0x8235CC", VA = "0x8235CC")]
	public ShowSliderValue()
	{
	}
}
[Token(Token = "0x2000110")]
public class TiltWindow : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector2 range;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Transform mTrans;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Quaternion mStart;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 mRot;

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x5694F4", Offset = "0x5694F4", VA = "0x5694F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x56954C", Offset = "0x56954C", VA = "0x56954C")]
	private void Update()
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0x5697BC", Offset = "0x5697BC", VA = "0x5697BC")]
	public TiltWindow()
	{
	}
}
[Token(Token = "0x2000111")]
public class ViveControllerInput : BaseInputModule
{
	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ViveControllerInput Instance;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39F1F0", Offset = "0x39F1F0")]
	public Sprite CursorSprite;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material CursorMaterial;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float NormalCursorScale;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x39F224", Offset = "0x39F224")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39F224", Offset = "0x39F224")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x39F224", Offset = "0x39F224")]
	public bool GuiHit;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x39F29C", Offset = "0x39F29C")]
	public bool ButtonUsed;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x39F2D0", Offset = "0x39F2D0")]
	public RectTransform[] Cursors;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject[] CurrentPoint;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private GameObject[] CurrentPressed;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject[] CurrentDragging;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private PointerEventData[] PointEvents;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool Initialized;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x39F304", Offset = "0x39F304")]
	public Camera ControllerCamera;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SteamVR_ControllerManager ControllerManager;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private SteamVR_TrackedObject[] Controllers;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SteamVR_Controller.Device[] ControllerDevices;

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0x86BE54", Offset = "0x86BE54", VA = "0x86BE54", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0x86C668", Offset = "0x86C668", VA = "0x86C668")]
	private bool GetLookPointerEventData(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x86CADC", Offset = "0x86CADC", VA = "0x86CADC")]
	private void UpdateCursor(int index, PointerEventData pointData)
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x86CFC8", Offset = "0x86CFC8", VA = "0x86CFC8")]
	public void ClearSelection()
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0x86D080", Offset = "0x86D080", VA = "0x86D080")]
	private void Select(GameObject go)
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0x86D17C", Offset = "0x86D17C", VA = "0x86D17C")]
	private bool SendUpdateEventToSelectedObject()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0x86D314", Offset = "0x86D314", VA = "0x86D314")]
	private void UpdateCameraPosition(int index)
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0x86D488", Offset = "0x86D488", VA = "0x86D488")]
	private void InitializeControllers()
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0x86D678", Offset = "0x86D678", VA = "0x86D678", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0x86ECC4", Offset = "0x86ECC4", VA = "0x86ECC4")]
	private bool ButtonDown(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0x86ED64", Offset = "0x86ED64", VA = "0x86ED64")]
	private bool ButtonUp(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0x86EE04", Offset = "0x86EE04", VA = "0x86EE04")]
	public ViveControllerInput()
	{
	}
}
[Token(Token = "0x2000112")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x39A24C", Offset = "0x39A24C")]
public class bHapticsManagerInterface : Singleton<bHapticsManagerInterface>
{
	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private BhapticsManager _manager;

	[Token(Token = "0x17000147")]
	public BhapticsManager bHapticsManager
	{
		[Token(Token = "0x6000A09")]
		[Address(RVA = "0xEEBC40", Offset = "0xEEBC40", VA = "0xEEBC40")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0xEEBC48", Offset = "0xEEBC48", VA = "0xEEBC48")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0xEEBDB0", Offset = "0xEEBDB0", VA = "0xEEBDB0")]
	public bHapticsManagerInterface()
	{
	}
}
[Token(Token = "0x2000113")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x39A2BC", Offset = "0x39A2BC")]
public abstract class bHapticsZone : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int _DURATION;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static Dictionary<Pos, PositionType> _positionTypesDict;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Pos _originalPos;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected TactSource _zone;

	[Token(Token = "0x6000A0C")]
	protected abstract void Set_ZoneForward(bool isForward);

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0xEEBE38", Offset = "0xEEBE38", VA = "0xEEBE38")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0xEEBF48", Offset = "0xEEBF48", VA = "0xEEBF48")]
	public void Vibrate_bHapticZone(Vector3 snowballForward)
	{
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0xEEC444", Offset = "0xEEC444", VA = "0xEEC444")]
	private void Set_ZonePointPositions(float xPointPosition, float yPointPosition)
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0xEEC18C", Offset = "0xEEC18C", VA = "0xEEC18C")]
	private bool Get_ForwardPosition(Vector3 snowballForward)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0xEEC35C", Offset = "0xEEC35C", VA = "0xEEC35C")]
	private float Get_VerticalPosition(Vector3 snowballForward)
	{
		return default(float);
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0xEEC274", Offset = "0xEEC274", VA = "0xEEC274")]
	private float Get_HorizontalPosition(Vector3 snowballForward)
	{
		return default(float);
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0xEEC4E0", Offset = "0xEEC4E0", VA = "0xEEC4E0")]
	protected bHapticsZone()
	{
	}
}
[Token(Token = "0x2000114")]
public class bHapticsZone_Normal : bHapticsZone
{
	[Token(Token = "0x6000A15")]
	[Address(RVA = "0xEEC678", Offset = "0xEEC678", VA = "0xEEC678", Slot = "4")]
	protected override void Set_ZoneForward(bool isForward)
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0xEEC6F4", Offset = "0xEEC6F4", VA = "0xEEC6F4")]
	public bHapticsZone_Normal()
	{
	}
}
[Token(Token = "0x2000115")]
public class bHapticsZone_Vest : bHapticsZone
{
	[Token(Token = "0x6000A17")]
	[Address(RVA = "0xEEC770", Offset = "0xEEC770", VA = "0xEEC770", Slot = "4")]
	protected override void Set_ZoneForward(bool isForward)
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0xEEC79C", Offset = "0xEEC79C", VA = "0xEEC79C")]
	public bHapticsZone_Vest()
	{
	}
}
[Token(Token = "0x2000116")]
public class CreditsPrefabScript : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Text versionText;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Vector3 originalScale;

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0x6897D4", Offset = "0x6897D4", VA = "0x6897D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0x689998", Offset = "0x689998", VA = "0x689998")]
	public void OnBeginInteraction()
	{
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0x689A04", Offset = "0x689A04", VA = "0x689A04")]
	public void OnEndInteraction()
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0x689A58", Offset = "0x689A58", VA = "0x689A58")]
	public CreditsPrefabScript()
	{
	}
}
[Token(Token = "0x2000117")]
public class DeleteFortressSave : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0x7E9C4C", Offset = "0x7E9C4C", VA = "0x7E9C4C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0x7E9E20", Offset = "0x7E9E20", VA = "0x7E9E20")]
	public DeleteFortressSave()
	{
	}
}
[Token(Token = "0x2000118")]
public class EffectsManager : Singleton<EffectsManager>
{
	[Token(Token = "0x2000662")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B7F4", Offset = "0x39B7F4")]
	private sealed class <DelayedDespawn>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float delay;

		[Token(Token = "0x17000496")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D7E")]
			[Address(RVA = "0x7FEDD0", Offset = "0x7FEDD0", VA = "0x7FEDD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000497")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D80")]
			[Address(RVA = "0x7FEE50", Offset = "0x7FEE50", VA = "0x7FEE50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D7B")]
		[Address(RVA = "0x7FEC80", Offset = "0x7FEC80", VA = "0x7FEC80")]
		[DebuggerHidden]
		public <DelayedDespawn>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002D7C")]
		[Address(RVA = "0x7FED28", Offset = "0x7FED28", VA = "0x7FED28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D7D")]
		[Address(RVA = "0x7FED2C", Offset = "0x7FED2C", VA = "0x7FED2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D7F")]
		[Address(RVA = "0x7FEDD8", Offset = "0x7FEDD8", VA = "0x7FEDD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform spawnEffectPrefab;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform snowImpactPrefab;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Transform groundBurstPrefab;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform enemySpawnPrefab;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Transform[] fireworksPrefabs;

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0x7FE4C0", Offset = "0x7FE4C0", VA = "0x7FE4C0")]
	public void CreateGroundBurstEffect(Vector3 position)
	{
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0x7FE630", Offset = "0x7FE630", VA = "0x7FE630")]
	public void CreateEnemySpawnEffect(Vector3 basePosition)
	{
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0x7FE7B8", Offset = "0x7FE7B8", VA = "0x7FE7B8")]
	public void CreateSpawnEffect(Vector3 position)
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0x7FE89C", Offset = "0x7FE89C", VA = "0x7FE89C")]
	public void CreateImpact(Vector3 position)
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0x7FE980", Offset = "0x7FE980", VA = "0x7FE980")]
	public void CreateFireworks(Vector3 position, int count)
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0x7FEBF4", Offset = "0x7FEBF4", VA = "0x7FEBF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A838C", Offset = "0x3A838C")]
	private IEnumerator DelayedDespawn(Transform fx, float delay)
	{
		return null;
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x7FECA0", Offset = "0x7FECA0", VA = "0x7FECA0")]
	public EffectsManager()
	{
	}
}
[Token(Token = "0x2000119")]
public class EnemySpawnPoint : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	public SpawnPoint[] enemies;

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x7FEE58", Offset = "0x7FEE58", VA = "0x7FEE58")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x7FEED4", Offset = "0x7FEED4", VA = "0x7FEED4")]
	public EnemySpawnPoint()
	{
	}
}
[Token(Token = "0x200011A")]
public class EntitlementManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x7FEEEC", Offset = "0x7FEEEC", VA = "0x7FEEEC")]
	public EntitlementManager()
	{
	}
}
[Token(Token = "0x200011B")]
public class FaceFrost : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x802AAC", Offset = "0x802AAC", VA = "0x802AAC")]
	public FaceFrost()
	{
	}
}
[Token(Token = "0x200011C")]
public class FloatingText : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float floatingYOffset;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float floatingLoopTime;

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x803618", Offset = "0x803618", VA = "0x803618")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x8036F8", Offset = "0x8036F8", VA = "0x8036F8")]
	public FloatingText()
	{
	}
}
[Token(Token = "0x200011D")]
public class FollowTargetTransform : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform target;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Transform myTransform;

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x5EEA4C", Offset = "0x5EEA4C", VA = "0x5EEA4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x5EEA68", Offset = "0x5EEA68", VA = "0x5EEA68")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x5EEB40", Offset = "0x5EEB40", VA = "0x5EEB40")]
	public FollowTargetTransform()
	{
	}
}
[Token(Token = "0x200011E")]
public class FortManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public SpawnPoint[] spawnPoints;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Block[] myBlocks;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private List<Block> destroyedBlocks;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float percentBlocksToDestroyFort;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool fortIsAlive;

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x5EEC60", Offset = "0x5EEC60", VA = "0x5EEC60")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0x5EECD8", Offset = "0x5EECD8", VA = "0x5EECD8")]
	public void SetupFort(Level currentLevel, GameObject fortPrefab, bool isPlayerFort = false)
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0x5EFBF4", Offset = "0x5EFBF4", VA = "0x5EFBF4")]
	public void BlockFallen(Block block)
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0x5EFEF0", Offset = "0x5EFEF0", VA = "0x5EFEF0")]
	public FortManager()
	{
	}
}
[Serializable]
[Token(Token = "0x200011F")]
public class FortressSave
{
	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string fortressName;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int saveId;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<PlayerBlockEntry> blocks;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int highestWave;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int blocksLeftInCurrentSpawner;

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x5EFF00", Offset = "0x5EFF00", VA = "0x5EFF00")]
	public FortressSave()
	{
	}
}
[Token(Token = "0x2000120")]
public class FoxManager : NVRInteractableItem
{
	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Animator myAnimator;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform mouth;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Transform headOffset;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform neck;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public Transform neckOffset;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39F348", Offset = "0x39F348")]
	public Vector2 lowerXClamp;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Vector2 upperXClamp;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39F37C", Offset = "0x39F37C")]
	public Vector2 lowerYClamp;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Vector2 upperYClamp;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39F3B0", Offset = "0x39F3B0")]
	public Vector2 lowerZClamp;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Vector2 upperZClamp;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Transform myTransform;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Quaternion startRotation;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private EventInstance foxVOSoundInstance;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private PLAYBACK_STATE foxVOPlaybackState;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Vector3 mouthStartScale;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Vector3 clampedHeadRotation;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private AIMovement movementSystem;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Transform facingTargetOverride;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private Transform _playerTransform;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private Texture _talkingTexture;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Texture _normalTexture;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Material _material;

	[Token(Token = "0x17000148")]
	private Transform playerTransform
	{
		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x5EFF08", Offset = "0x5EFF08", VA = "0x5EFF08")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0x5EFFF8", Offset = "0x5EFFF8", VA = "0x5EFFF8", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x5F01D8", Offset = "0x5F01D8", VA = "0x5F01D8")]
	private void PlayDelayedIntro()
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x5F03BC", Offset = "0x5F03BC", VA = "0x5F03BC", Slot = "11")]
	public override void BeginInteraction(NVRHand hand)
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x5F05D4", Offset = "0x5F05D4", VA = "0x5F05D4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x5F0FC8", Offset = "0x5F0FC8", VA = "0x5F0FC8")]
	public void Jump()
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x5F10F0", Offset = "0x5F10F0", VA = "0x5F10F0")]
	public void Win()
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0x5F0278", Offset = "0x5F0278", VA = "0x5F0278")]
	public void PlayVO(string sound)
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0x5F116C", Offset = "0x5F116C", VA = "0x5F116C")]
	public FoxManager()
	{
	}
}
[Token(Token = "0x2000121")]
public class FriendListItem : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Text nameText;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Image onlineStatus;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject inviteButton;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text readyText;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Color JoinColor;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Color NotReadyColor;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Color ReadyColor;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private SFFriend friend;

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x5F155C", Offset = "0x5F155C", VA = "0x5F155C")]
	public void Setup(SFFriend _friend, bool isConnectedPlayer = false)
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x5F19B0", Offset = "0x5F19B0", VA = "0x5F19B0")]
	public void SetReadyState(bool ready, int player)
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0x5F1954", Offset = "0x5F1954", VA = "0x5F1954")]
	private void ChangeReadyColor(Color c)
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0x5F1AF4", Offset = "0x5F1AF4", VA = "0x5F1AF4")]
	public void InviteButtonPressed()
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x5F1BD4", Offset = "0x5F1BD4", VA = "0x5F1BD4")]
	public FriendListItem()
	{
	}
}
[Token(Token = "0x2000122")]
public class FriendlyUnitSpawner : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public PhotonView myPhotonView;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject[] unitPrefabs;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool randomUnits;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform spawnPoint;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Transform counterAnchor;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Transform attachedHand;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Transform myTransform;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int[] unitLimit;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool isAllowedToSpawn;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject currentUnit;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Rigidbody currentUnitRigidbody;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool triggerAreaOccupied;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int[] currentSpawnCount;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int netConnectOfOwner;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool isQuitting;

	[Token(Token = "0x17000149")]
	public GameObject CurrentUnit
	{
		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x5F1D00", Offset = "0x5F1D00", VA = "0x5F1D00")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700014A")]
	public bool IsSpawnLimitReached
	{
		[Token(Token = "0x6000A44")]
		[Address(RVA = "0x5F1D08", Offset = "0x5F1D08", VA = "0x5F1D08")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x5F1DE4", Offset = "0x5F1DE4", VA = "0x5F1DE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x5F1E00", Offset = "0x5F1E00", VA = "0x5F1E00")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x5F1F28", Offset = "0x5F1F28", VA = "0x5F1F28")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x5F23B4", Offset = "0x5F23B4", VA = "0x5F23B4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x5F27FC", Offset = "0x5F27FC", VA = "0x5F27FC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x5F2890", Offset = "0x5F2890", VA = "0x5F2890")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x5F289C", Offset = "0x5F289C", VA = "0x5F289C")]
	private void PlayerScaleChanged(bool isFirstPerson)
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x5F2CF8", Offset = "0x5F2CF8", VA = "0x5F2CF8")]
	private void SetupSpawner()
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x5F2F78", Offset = "0x5F2F78", VA = "0x5F2F78")]
	private void SpawnUnit()
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x5F37C4", Offset = "0x5F37C4", VA = "0x5F37C4")]
	[PunRPC]
	private void RpcSetCurrentUnit(int objectId)
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x5F3A60", Offset = "0x5F3A60", VA = "0x5F3A60")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x5F3B4C", Offset = "0x5F3B4C", VA = "0x5F3B4C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x5F3EFC", Offset = "0x5F3EFC", VA = "0x5F3EFC")]
	[PunRPC]
	private void RpcRemoveUnit()
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x5F3F0C", Offset = "0x5F3F0C", VA = "0x5F3F0C")]
	private void StartSpawnerLaterForRestartWithSavedFort()
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x5F3FD4", Offset = "0x5F3FD4", VA = "0x5F3FD4")]
	public void AllowSpawn(bool allow)
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x5F3FDC", Offset = "0x5F3FDC", VA = "0x5F3FDC")]
	public void SetNetConnectOfOwner(int _netCon)
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x5F3FE4", Offset = "0x5F3FE4", VA = "0x5F3FE4")]
	private void DestroySpawner()
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x5F4108", Offset = "0x5F4108", VA = "0x5F4108")]
	public FriendlyUnitSpawner()
	{
	}
}
[Token(Token = "0x2000123")]
public class FrozenMittenMesh : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x5F411C", Offset = "0x5F411C", VA = "0x5F411C")]
	public FrozenMittenMesh()
	{
	}
}
[Token(Token = "0x2000124")]
public class Furnace : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private VehicleController vehicle;

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x5F4124", Offset = "0x5F4124", VA = "0x5F4124")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x5F4184", Offset = "0x5F4184", VA = "0x5F4184")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x5F430C", Offset = "0x5F430C", VA = "0x5F430C")]
	public Furnace()
	{
	}
}
[Token(Token = "0x2000125")]
public class GameManager : Photon.MonoBehaviour
{
	[Token(Token = "0x2000663")]
	public delegate void LevelSetup();

	[Token(Token = "0x2000664")]
	public delegate void LevelStart();

	[Token(Token = "0x2000665")]
	public delegate void LevelEnd();

	[Token(Token = "0x2000666")]
	public delegate void GameOverEvent();

	[Token(Token = "0x2000667")]
	public delegate void Rebuild(bool rebuildActive);

	[Token(Token = "0x2000668")]
	public delegate void RepairBlock(int layer);

	[Token(Token = "0x2000669")]
	public delegate void GamePause(bool paused);

	[Token(Token = "0x200066A")]
	public delegate void ShowBlock(bool show, int layer);

	[Serializable]
	[Token(Token = "0x200066B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B804", Offset = "0x39B804")]
	private sealed class <>c
	{
		[Token(Token = "0x4002564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static Func<PlayerManager, bool> <>9__141_0;

		[Token(Token = "0x4002566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<PhotonPlayer, int> <>9__187_0;

		[Token(Token = "0x4002567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static Func<PhotonPlayer, bool> <>9__187_1;

		[Token(Token = "0x6002DA2")]
		[Address(RVA = "0x692114", Offset = "0x692114", VA = "0x692114")]
		public <>c()
		{
		}

		[Token(Token = "0x6002DA3")]
		[Address(RVA = "0x69211C", Offset = "0x69211C", VA = "0x69211C")]
		internal bool <get_localPlayer>b__141_0(PlayerManager x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DA4")]
		[Address(RVA = "0x692154", Offset = "0x692154", VA = "0x692154")]
		internal int <Set_LocalPlayerID>b__187_0(PhotonPlayer x)
		{
			return default(int);
		}

		[Token(Token = "0x6002DA5")]
		[Address(RVA = "0x692174", Offset = "0x692174", VA = "0x692174")]
		internal bool <Set_LocalPlayerID>b__187_1(PhotonPlayer x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200066C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B814", Offset = "0x39B814")]
	private sealed class <WaitToCheckTrophy>d__188 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x17000498")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DA9")]
			[Address(RVA = "0x69589C", Offset = "0x69589C", VA = "0x69589C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000499")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DAB")]
			[Address(RVA = "0x69591C", Offset = "0x69591C", VA = "0x69591C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DA6")]
		[Address(RVA = "0x695758", Offset = "0x695758", VA = "0x695758")]
		[DebuggerHidden]
		public <WaitToCheckTrophy>d__188(int <>1__state)
		{
		}

		[Token(Token = "0x6002DA7")]
		[Address(RVA = "0x695778", Offset = "0x695778", VA = "0x695778", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DA8")]
		[Address(RVA = "0x69577C", Offset = "0x69577C", VA = "0x69577C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DAA")]
		[Address(RVA = "0x6958A4", Offset = "0x6958A4", VA = "0x6958A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200066D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B824", Offset = "0x39B824")]
	private sealed class <DelayAIPlayerSpawn>d__194 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400256A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400256B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400256C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameManager <>4__this;

		[Token(Token = "0x400256D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int modeLocation;

		[Token(Token = "0x400256E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int spawnIndex;

		[Token(Token = "0x1700049A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DAF")]
			[Address(RVA = "0x692304", Offset = "0x692304", VA = "0x692304", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DB1")]
			[Address(RVA = "0x692384", Offset = "0x692384", VA = "0x692384", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DAC")]
		[Address(RVA = "0x6921A0", Offset = "0x6921A0", VA = "0x6921A0")]
		[DebuggerHidden]
		public <DelayAIPlayerSpawn>d__194(int <>1__state)
		{
		}

		[Token(Token = "0x6002DAD")]
		[Address(RVA = "0x6921C0", Offset = "0x6921C0", VA = "0x6921C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DAE")]
		[Address(RVA = "0x6921C4", Offset = "0x6921C4", VA = "0x6921C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DB0")]
		[Address(RVA = "0x69230C", Offset = "0x69230C", VA = "0x69230C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200066E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B834", Offset = "0x39B834")]
	private sealed class <DelayedServerReadyCheck>d__196 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400256F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameManager <>4__this;

		[Token(Token = "0x1700049C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DB5")]
			[Address(RVA = "0x693D50", Offset = "0x693D50", VA = "0x693D50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DB7")]
			[Address(RVA = "0x693DD0", Offset = "0x693DD0", VA = "0x693DD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DB2")]
		[Address(RVA = "0x693C64", Offset = "0x693C64", VA = "0x693C64")]
		[DebuggerHidden]
		public <DelayedServerReadyCheck>d__196(int <>1__state)
		{
		}

		[Token(Token = "0x6002DB3")]
		[Address(RVA = "0x693C84", Offset = "0x693C84", VA = "0x693C84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DB4")]
		[Address(RVA = "0x693C88", Offset = "0x693C88", VA = "0x693C88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DB6")]
		[Address(RVA = "0x693D58", Offset = "0x693D58", VA = "0x693D58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200066F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B844", Offset = "0x39B844")]
	private sealed class <DelayedMultiplayerMatchStart>d__198 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameManager <>4__this;

		[Token(Token = "0x1700049E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DBB")]
			[Address(RVA = "0x693690", Offset = "0x693690", VA = "0x693690", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DBD")]
			[Address(RVA = "0x693710", Offset = "0x693710", VA = "0x693710", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DB8")]
		[Address(RVA = "0x6935A4", Offset = "0x6935A4", VA = "0x6935A4")]
		[DebuggerHidden]
		public <DelayedMultiplayerMatchStart>d__198(int <>1__state)
		{
		}

		[Token(Token = "0x6002DB9")]
		[Address(RVA = "0x6935C4", Offset = "0x6935C4", VA = "0x6935C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DBA")]
		[Address(RVA = "0x6935C8", Offset = "0x6935C8", VA = "0x6935C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DBC")]
		[Address(RVA = "0x693698", Offset = "0x693698", VA = "0x693698", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000670")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B854", Offset = "0x39B854")]
	private sealed class <DelayedRebuildModeEnd>d__204 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float delay;

		[Token(Token = "0x4002578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public GameManager <>4__this;

		[Token(Token = "0x170004A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DC1")]
			[Address(RVA = "0x693BDC", Offset = "0x693BDC", VA = "0x693BDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DC3")]
			[Address(RVA = "0x693C5C", Offset = "0x693C5C", VA = "0x693C5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DBE")]
		[Address(RVA = "0x693718", Offset = "0x693718", VA = "0x693718")]
		[DebuggerHidden]
		public <DelayedRebuildModeEnd>d__204(int <>1__state)
		{
		}

		[Token(Token = "0x6002DBF")]
		[Address(RVA = "0x693738", Offset = "0x693738", VA = "0x693738", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DC0")]
		[Address(RVA = "0x69373C", Offset = "0x69373C", VA = "0x69373C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DC2")]
		[Address(RVA = "0x693BE4", Offset = "0x693BE4", VA = "0x693BE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000671")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B864", Offset = "0x39B864")]
	private sealed class <DelayedFoxVO>d__206 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400257A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400257B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float delay;

		[Token(Token = "0x400257C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public GameManager <>4__this;

		[Token(Token = "0x400257D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string vo;

		[Token(Token = "0x170004A2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DC7")]
			[Address(RVA = "0x69351C", Offset = "0x69351C", VA = "0x69351C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DC9")]
			[Address(RVA = "0x69359C", Offset = "0x69359C", VA = "0x69359C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DC4")]
		[Address(RVA = "0x693428", Offset = "0x693428", VA = "0x693428")]
		[DebuggerHidden]
		public <DelayedFoxVO>d__206(int <>1__state)
		{
		}

		[Token(Token = "0x6002DC5")]
		[Address(RVA = "0x693448", Offset = "0x693448", VA = "0x693448", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DC6")]
		[Address(RVA = "0x69344C", Offset = "0x69344C", VA = "0x69344C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DC8")]
		[Address(RVA = "0x693524", Offset = "0x693524", VA = "0x693524", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000672")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B874", Offset = "0x39B874")]
	private sealed class <StartThrowingCountdown>d__208 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400257E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400257F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameManager <>4__this;

		[Token(Token = "0x4002581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int <countdown>5__2;

		[Token(Token = "0x170004A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DCD")]
			[Address(RVA = "0x695528", Offset = "0x695528", VA = "0x695528", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DCF")]
			[Address(RVA = "0x6955A8", Offset = "0x6955A8", VA = "0x6955A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DCA")]
		[Address(RVA = "0x694D14", Offset = "0x694D14", VA = "0x694D14")]
		[DebuggerHidden]
		public <StartThrowingCountdown>d__208(int <>1__state)
		{
		}

		[Token(Token = "0x6002DCB")]
		[Address(RVA = "0x694D34", Offset = "0x694D34", VA = "0x694D34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DCC")]
		[Address(RVA = "0x694D38", Offset = "0x694D38", VA = "0x694D38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DCE")]
		[Address(RVA = "0x695530", Offset = "0x695530", VA = "0x695530", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000673")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B884", Offset = "0x39B884")]
	private sealed class <TriggerStartThrowingStage>d__210 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float delay;

		[Token(Token = "0x4002585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public GameManager <>4__this;

		[Token(Token = "0x170004A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DD3")]
			[Address(RVA = "0x6956D0", Offset = "0x6956D0", VA = "0x6956D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DD5")]
			[Address(RVA = "0x695750", Offset = "0x695750", VA = "0x695750", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DD0")]
		[Address(RVA = "0x6955B0", Offset = "0x6955B0", VA = "0x6955B0")]
		[DebuggerHidden]
		public <TriggerStartThrowingStage>d__210(int <>1__state)
		{
		}

		[Token(Token = "0x6002DD1")]
		[Address(RVA = "0x6955D0", Offset = "0x6955D0", VA = "0x6955D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DD2")]
		[Address(RVA = "0x6955D4", Offset = "0x6955D4", VA = "0x6955D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DD4")]
		[Address(RVA = "0x6956D8", Offset = "0x6956D8", VA = "0x6956D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000674")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B894", Offset = "0x39B894")]
	private sealed class <RetryEnemySpawn>d__212 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Wave currentWave;

		[Token(Token = "0x4002589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int currentWaveIndex;

		[Token(Token = "0x400258A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int amountToSpawn;

		[Token(Token = "0x400258B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public GameManager <>4__this;

		[Token(Token = "0x170004A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DD9")]
			[Address(RVA = "0x694C8C", Offset = "0x694C8C", VA = "0x694C8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DDB")]
			[Address(RVA = "0x694D0C", Offset = "0x694D0C", VA = "0x694D0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DD6")]
		[Address(RVA = "0x694A90", Offset = "0x694A90", VA = "0x694A90")]
		[DebuggerHidden]
		public <RetryEnemySpawn>d__212(int <>1__state)
		{
		}

		[Token(Token = "0x6002DD7")]
		[Address(RVA = "0x694AB0", Offset = "0x694AB0", VA = "0x694AB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DD8")]
		[Address(RVA = "0x694AB4", Offset = "0x694AB4", VA = "0x694AB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DDA")]
		[Address(RVA = "0x694C94", Offset = "0x694C94", VA = "0x694C94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000675")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B8A4", Offset = "0x39B8A4")]
	private sealed class <WaitToPressMenuButton>d__238 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400258C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400258D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400258E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameManager <>4__this;

		[Token(Token = "0x170004AA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DDF")]
			[Address(RVA = "0x695A04", Offset = "0x695A04", VA = "0x695A04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DE1")]
			[Address(RVA = "0x695A84", Offset = "0x695A84", VA = "0x695A84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DDC")]
		[Address(RVA = "0x695924", Offset = "0x695924", VA = "0x695924")]
		[DebuggerHidden]
		public <WaitToPressMenuButton>d__238(int <>1__state)
		{
		}

		[Token(Token = "0x6002DDD")]
		[Address(RVA = "0x695944", Offset = "0x695944", VA = "0x695944", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DDE")]
		[Address(RVA = "0x695948", Offset = "0x695948", VA = "0x695948", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DE0")]
		[Address(RVA = "0x695A0C", Offset = "0x695A0C", VA = "0x695A0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000676")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B8B4", Offset = "0x39B8B4")]
	private sealed class <DestroyBlocksAndHideCrates>d__251 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400258F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameManager <>4__this;

		[Token(Token = "0x170004AC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DE5")]
			[Address(RVA = "0x69414C", Offset = "0x69414C", VA = "0x69414C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DE7")]
			[Address(RVA = "0x6941CC", Offset = "0x6941CC", VA = "0x6941CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DE2")]
		[Address(RVA = "0x693DD8", Offset = "0x693DD8", VA = "0x693DD8")]
		[DebuggerHidden]
		public <DestroyBlocksAndHideCrates>d__251(int <>1__state)
		{
		}

		[Token(Token = "0x6002DE3")]
		[Address(RVA = "0x693DF8", Offset = "0x693DF8", VA = "0x693DF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DE4")]
		[Address(RVA = "0x693DFC", Offset = "0x693DFC", VA = "0x693DFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DE6")]
		[Address(RVA = "0x694154", Offset = "0x694154", VA = "0x694154", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000677")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B8C4", Offset = "0x39B8C4")]
	private sealed class <DelayGettingAndShowingLeaderboard>d__254 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameManager <>4__this;

		[Token(Token = "0x170004AE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DEB")]
			[Address(RVA = "0x692504", Offset = "0x692504", VA = "0x692504", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004AF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DED")]
			[Address(RVA = "0x692584", Offset = "0x692584", VA = "0x692584", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DE8")]
		[Address(RVA = "0x69238C", Offset = "0x69238C", VA = "0x69238C")]
		[DebuggerHidden]
		public <DelayGettingAndShowingLeaderboard>d__254(int <>1__state)
		{
		}

		[Token(Token = "0x6002DE9")]
		[Address(RVA = "0x6923AC", Offset = "0x6923AC", VA = "0x6923AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DEA")]
		[Address(RVA = "0x6923B0", Offset = "0x6923B0", VA = "0x6923B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DEC")]
		[Address(RVA = "0x69250C", Offset = "0x69250C", VA = "0x69250C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000678")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B8D4", Offset = "0x39B8D4")]
	private sealed class <DelaySavingCurrentHighScore>d__255 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x170004B0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DF1")]
			[Address(RVA = "0x6933A0", Offset = "0x6933A0", VA = "0x6933A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DF3")]
			[Address(RVA = "0x693420", Offset = "0x693420", VA = "0x693420", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DEE")]
		[Address(RVA = "0x6932B8", Offset = "0x6932B8", VA = "0x6932B8")]
		[DebuggerHidden]
		public <DelaySavingCurrentHighScore>d__255(int <>1__state)
		{
		}

		[Token(Token = "0x6002DEF")]
		[Address(RVA = "0x6932D8", Offset = "0x6932D8", VA = "0x6932D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DF0")]
		[Address(RVA = "0x6932DC", Offset = "0x6932DC", VA = "0x6932DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DF2")]
		[Address(RVA = "0x6933A8", Offset = "0x6933A8", VA = "0x6933A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000679")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B8E4", Offset = "0x39B8E4")]
	private sealed class <ResetLevel>d__261 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameManager <>4__this;

		[Token(Token = "0x170004B2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DF7")]
			[Address(RVA = "0x694A08", Offset = "0x694A08", VA = "0x694A08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DF9")]
			[Address(RVA = "0x694A88", Offset = "0x694A88", VA = "0x694A88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DF4")]
		[Address(RVA = "0x6941D4", Offset = "0x6941D4", VA = "0x6941D4")]
		[DebuggerHidden]
		public <ResetLevel>d__261(int <>1__state)
		{
		}

		[Token(Token = "0x6002DF5")]
		[Address(RVA = "0x6941F4", Offset = "0x6941F4", VA = "0x6941F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DF6")]
		[Address(RVA = "0x6941F8", Offset = "0x6941F8", VA = "0x6941F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DF8")]
		[Address(RVA = "0x694A10", Offset = "0x694A10", VA = "0x694A10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200067A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B8F4", Offset = "0x39B8F4")]
	private sealed class <DelayLoadMainMenuAndSave>d__266 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400259A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400259B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400259C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameManager <>4__this;

		[Token(Token = "0x170004B4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DFD")]
			[Address(RVA = "0x693230", Offset = "0x693230", VA = "0x693230", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DFF")]
			[Address(RVA = "0x6932B0", Offset = "0x6932B0", VA = "0x6932B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DFA")]
		[Address(RVA = "0x692E58", Offset = "0x692E58", VA = "0x692E58")]
		[DebuggerHidden]
		public <DelayLoadMainMenuAndSave>d__266(int <>1__state)
		{
		}

		[Token(Token = "0x6002DFB")]
		[Address(RVA = "0x692E78", Offset = "0x692E78", VA = "0x692E78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DFC")]
		[Address(RVA = "0x692E7C", Offset = "0x692E7C", VA = "0x692E7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DFE")]
		[Address(RVA = "0x693238", Offset = "0x693238", VA = "0x693238", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200067B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B904", Offset = "0x39B904")]
	private sealed class <DelayGotoCabinInterior>d__268 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400259D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400259E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400259F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameManager <>4__this;

		[Token(Token = "0x40025A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 _tempPos;

		[Token(Token = "0x170004B6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E03")]
			[Address(RVA = "0x6926E4", Offset = "0x6926E4", VA = "0x6926E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E05")]
			[Address(RVA = "0x692764", Offset = "0x692764", VA = "0x692764", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E00")]
		[Address(RVA = "0x69258C", Offset = "0x69258C", VA = "0x69258C")]
		[DebuggerHidden]
		public <DelayGotoCabinInterior>d__268(int <>1__state)
		{
		}

		[Token(Token = "0x6002E01")]
		[Address(RVA = "0x6925AC", Offset = "0x6925AC", VA = "0x6925AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E02")]
		[Address(RVA = "0x6925B0", Offset = "0x6925B0", VA = "0x6925B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E04")]
		[Address(RVA = "0x6926EC", Offset = "0x6926EC", VA = "0x6926EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200067C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B914", Offset = "0x39B914")]
	private sealed class <DelayGotoFortressCabinInterior>d__269 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40025A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40025A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameManager <>4__this;

		[Token(Token = "0x170004B8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E09")]
			[Address(RVA = "0x69290C", Offset = "0x69290C", VA = "0x69290C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E0B")]
			[Address(RVA = "0x69298C", Offset = "0x69298C", VA = "0x69298C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E06")]
		[Address(RVA = "0x69276C", Offset = "0x69276C", VA = "0x69276C")]
		[DebuggerHidden]
		public <DelayGotoFortressCabinInterior>d__269(int <>1__state)
		{
		}

		[Token(Token = "0x6002E07")]
		[Address(RVA = "0x69278C", Offset = "0x69278C", VA = "0x69278C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E08")]
		[Address(RVA = "0x692790", Offset = "0x692790", VA = "0x692790", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E0A")]
		[Address(RVA = "0x692914", Offset = "0x692914", VA = "0x692914", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200067D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B924", Offset = "0x39B924")]
	private sealed class <DelayGotoLevelPosition>d__270 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40025A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40025A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameManager <>4__this;

		[Token(Token = "0x170004BA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E0F")]
			[Address(RVA = "0x692DD0", Offset = "0x692DD0", VA = "0x692DD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E11")]
			[Address(RVA = "0x692E50", Offset = "0x692E50", VA = "0x692E50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E0C")]
		[Address(RVA = "0x692C18", Offset = "0x692C18", VA = "0x692C18")]
		[DebuggerHidden]
		public <DelayGotoLevelPosition>d__270(int <>1__state)
		{
		}

		[Token(Token = "0x6002E0D")]
		[Address(RVA = "0x692C38", Offset = "0x692C38", VA = "0x692C38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E0E")]
		[Address(RVA = "0x692C3C", Offset = "0x692C3C", VA = "0x692C3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E10")]
		[Address(RVA = "0x692DD8", Offset = "0x692DD8", VA = "0x692DD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200067E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B934", Offset = "0x39B934")]
	private sealed class <DelayGotoFortressLevelPosition>d__271 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40025A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40025A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameManager <>4__this;

		[Token(Token = "0x170004BC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E15")]
			[Address(RVA = "0x692B90", Offset = "0x692B90", VA = "0x692B90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E17")]
			[Address(RVA = "0x692C10", Offset = "0x692C10", VA = "0x692C10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E12")]
		[Address(RVA = "0x692994", Offset = "0x692994", VA = "0x692994")]
		[DebuggerHidden]
		public <DelayGotoFortressLevelPosition>d__271(int <>1__state)
		{
		}

		[Token(Token = "0x6002E13")]
		[Address(RVA = "0x6929B4", Offset = "0x6929B4", VA = "0x6929B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E14")]
		[Address(RVA = "0x6929B8", Offset = "0x6929B8", VA = "0x6929B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E16")]
		[Address(RVA = "0x692B98", Offset = "0x692B98", VA = "0x692B98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager _instance;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static object _lock;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool applicationIsQuitting;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static Action<float> OnCountdownChange;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Action<float> OnFinalCountdownChange;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static Action OnServerReady;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Action<int> OnWaveChange;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static Action OnScoreChange;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject playerPrefab;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject arenaSpectatorPrefab;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform snowballPrefab;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject treasurePrefab;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject musicManagerPrefab;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float timeToStart;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject toolshelfPrefab;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GameObject toolshelfPrefabCOOP;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject toolshelfPrefabTrain;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public GameObject[] enemyPrefabs;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] fortressBlockSpawnerPrefabs;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public GameObject trainBlockSpawnerPrefab;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] multiplayerStartingBlockPrefabs;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int debugStartLevel;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] toolPrefabs;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Material undamagedSnowMaterial;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject helpPagePrefab;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Transform[] toolPositions;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<ToolshelfManager> _toolshelfManagers;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private GameObject helpPage;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<GameObject> blockSpawners;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private List<GameObject> unitSpawners;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39F484", Offset = "0x39F484")]
	public GameObject levelSelectorSection;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Transform levelSelectorCabinInteriorSpawnPointTransform;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform levelSelectorCabinInteriorOptionsMenuDisplayPosition;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public GameObject[] levelSelectorSpots;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform infoOnLevelSelectionsPrefab;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Transform levelSelectSnowGlobePrefab;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject recycleBin;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Dictionary<Transform, List<Transform>> levelSelectorObjects;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public bool isInCabin;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39F4C8", Offset = "0x39F4C8")]
	public float timeAddedTo3StarToGet2Stars;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int currentStars;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float fightStartTime;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float initialBuildTime;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float rebuildTotalTime;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int timesRebuildIsCalled;

	[Token(Token = "0x4000872")]
	[HideInInspector]
	public const int layerDefault = 0;

	[Token(Token = "0x4000873")]
	[HideInInspector]
	public const int layerTransparentFX = 1;

	[Token(Token = "0x4000874")]
	[HideInInspector]
	public const int layerPickup = 8;

	[Token(Token = "0x4000875")]
	[HideInInspector]
	public const int layerEnemyObjects = 9;

	[Token(Token = "0x4000876")]
	[HideInInspector]
	public const int layerEnemyWall = 10;

	[Token(Token = "0x4000877")]
	[HideInInspector]
	public const int layerPickupAnimal = 11;

	[Token(Token = "0x4000878")]
	[HideInInspector]
	public const int layerFloor = 13;

	[Token(Token = "0x4000879")]
	[HideInInspector]
	public const int layerPickupTool = 14;

	[Token(Token = "0x400087A")]
	[HideInInspector]
	public const int layerJointRelease = 15;

	[Token(Token = "0x400087B")]
	[HideInInspector]
	public const int layerEyeUI = 16;

	[Token(Token = "0x400087C")]
	[HideInInspector]
	public const int layerEnemy = 17;

	[Token(Token = "0x400087D")]
	[HideInInspector]
	public const int layerPickupInSpawner = 23;

	[Token(Token = "0x400087E")]
	[HideInInspector]
	public const int layerEnemyTool = 20;

	[Token(Token = "0x400087F")]
	[HideInInspector]
	public const int layerHandUI = 26;

	[Token(Token = "0x4000880")]
	[HideInInspector]
	public const int layerVRLocalPlayerModels = 27;

	[Token(Token = "0x4000881")]
	[HideInInspector]
	public const int layersForSpawnCheck = 1182721;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[HideInInspector]
	public bool gameStarted;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
	[HideInInspector]
	public bool gameOver;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA6")]
	[HideInInspector]
	public bool gameWon;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39F62C", Offset = "0x39F62C")]
	public Level[] fortLevels;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public Level endlessLevel;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Level multiplayerLevelPVP;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public Level multiplayerLevelCOOP;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Level multiplayerLevelAirship;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public Level multiplayerLevelTeamPVP;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Level fortressLevel;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public Level sofaVRLevel;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Level foxEasterEggLevel;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39F660", Offset = "0x39F660")]
	[SerializeField]
	private Transform _centerSpawnPos;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private float _blockSpawnerHeight;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[SerializeField]
	private float _playerSpawnerHeight;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public int multiplayerWeapon;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public int spawnpointVariation;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public int multiplayerStartingBlocks;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public bool triggerThrowsSnowball;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
	[HideInInspector]
	public bool gamePaused;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[HideInInspector]
	public int currentWaveIndex;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[HideInInspector]
	public int team1Score;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public int team2Score;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private List<GameObject> enemies;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private List<GameObject> allies;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private List<PlayerManager> players;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private int enemiesKilled;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Dictionary<Transform, GameObject> availableToolPositions;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private VehicleController _vehicle;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private PlayerManager _localPlayer;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private List<Level> levels;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	[HideInInspector]
	public Level currentLevel;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private int currentLevelTutorialStep;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private float currentLevelTutorialTimer;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private List<GameObject> enemyForts;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private GameObject playerFort;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[HideInInspector]
	public FortressSave currentFortressSave;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	[HideInInspector]
	public Wave currentWave;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private List<Wave> waves;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private float timeToStartTimer;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float nextEnemySpawn;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float enemySpawnTimer;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float _powerupBlockPVPTimer;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	[SerializeField]
	private float _powerupBlockPVPSpawnDuration;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float levelThrowingActiveTimer;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	[HideInInspector]
	public bool rebuildModeActive;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float rebuildTimer;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	[HideInInspector]
	public bool restartWithSavedFort;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private List<GameObject> currentPlayerBlocks;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private List<GameObject> currentPlayerUnits;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private List<PlayerBlockEntry> lastSavedPlayerBlockEntries;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private int _localPlayerSpawnID;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private List<PhotonPlayer> _playersInJoiningOrder;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private Dictionary<NVRHand, List<Block>> handHoldingBlocksDictionary;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private int toolshelvesSetup;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private int leversPulled;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public int previousHighScore;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private Coroutine countdownTimerCoroutine;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Coroutine buildTimeCoroutine;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private Coroutine retryEnemySpawnCoroutine;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public bool hasSetMPPositionAlready;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private List<AIManager> _aiPlayerManagers;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private Dictionary<AIManager, List<Block>> _aiPlayersFortBlocks;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private int unitsPlacedThisWave;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private bool isMenuButtonPressable;

	[Token(Token = "0x1700014B")]
	public static GameManager Instance
	{
		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x5EF0DC", Offset = "0x5EF0DC", VA = "0x5EF0DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700014C")]
	private List<ToolshelfManager> toolshelfManagers
	{
		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x5F5900", Offset = "0x5F5900", VA = "0x5F5900")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x5F58F8", Offset = "0x5F58F8", VA = "0x5F58F8")]
		set
		{
		}
	}

	[Token(Token = "0x1700014D")]
	public Transform CenterSpawnPoint
	{
		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x5F59BC", Offset = "0x5F59BC", VA = "0x5F59BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700014E")]
	public Vector3 CenterSpawnBlockSpawnerPos
	{
		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x5F59C4", Offset = "0x5F59C4", VA = "0x5F59C4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700014F")]
	public Vector3 CenterSpawnPlayerSpawnerPos
	{
		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x5F5A58", Offset = "0x5F5A58", VA = "0x5F5A58")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000150")]
	public List<PlayerManager> Players
	{
		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x5F5AEC", Offset = "0x5F5AEC", VA = "0x5F5AEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000151")]
	public VehicleController Vehicle
	{
		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x5F5AF4", Offset = "0x5F5AF4", VA = "0x5F5AF4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x5F5AFC", Offset = "0x5F5AFC", VA = "0x5F5AFC")]
		set
		{
		}
	}

	[Token(Token = "0x17000152")]
	public PlayerManager localPlayer
	{
		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x5F5B04", Offset = "0x5F5B04", VA = "0x5F5B04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000153")]
	[HideInInspector]
	public float TimeTillRespawn
	{
		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x5F5D84", Offset = "0x5F5D84", VA = "0x5F5D84")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000154")]
	public int LocalPlayerSpawnID
	{
		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x5F5DB4", Offset = "0x5F5DB4", VA = "0x5F5DB4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000155")]
	public bool HasReachedUnitPlacementLimit
	{
		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x5F64CC", Offset = "0x5F64CC", VA = "0x5F64CC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000156")]
	public Transform PlayerFort
	{
		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x5F6580", Offset = "0x5F6580", VA = "0x5F6580")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000020")]
	public static event LevelSetup onLevelSetup
	{
		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0x5F209C", Offset = "0x5F209C", VA = "0x5F209C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A841C", Offset = "0x3A841C")]
		add
		{
		}
		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x5F24E4", Offset = "0x5F24E4", VA = "0x5F24E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A842C", Offset = "0x3A842C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000021")]
	public static event LevelStart onLevelStart
	{
		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x5F21A4", Offset = "0x5F21A4", VA = "0x5F21A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A843C", Offset = "0x3A843C")]
		add
		{
		}
		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x5F25EC", Offset = "0x5F25EC", VA = "0x5F25EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A844C", Offset = "0x3A844C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000022")]
	public static event LevelEnd onLevelEnd
	{
		[Token(Token = "0x6000A61")]
		[Address(RVA = "0x5F22AC", Offset = "0x5F22AC", VA = "0x5F22AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A845C", Offset = "0x3A845C")]
		add
		{
		}
		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x5F26F4", Offset = "0x5F26F4", VA = "0x5F26F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A846C", Offset = "0x3A846C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000023")]
	public static event GameOverEvent onGameOver
	{
		[Token(Token = "0x6000A63")]
		[Address(RVA = "0x5F4EA8", Offset = "0x5F4EA8", VA = "0x5F4EA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A847C", Offset = "0x3A847C")]
		add
		{
		}
		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x5F4FB0", Offset = "0x5F4FB0", VA = "0x5F4FB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A848C", Offset = "0x3A848C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000024")]
	public static event Rebuild onRebuild
	{
		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x5F50B8", Offset = "0x5F50B8", VA = "0x5F50B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A849C", Offset = "0x3A849C")]
		add
		{
		}
		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x5F51C0", Offset = "0x5F51C0", VA = "0x5F51C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A84AC", Offset = "0x3A84AC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000025")]
	public static event RepairBlock onRepairBlock
	{
		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x5F52C8", Offset = "0x5F52C8", VA = "0x5F52C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A84BC", Offset = "0x3A84BC")]
		add
		{
		}
		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x5F53D0", Offset = "0x5F53D0", VA = "0x5F53D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A84CC", Offset = "0x3A84CC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000026")]
	public static event GamePause onPauseGame
	{
		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x5F54D8", Offset = "0x5F54D8", VA = "0x5F54D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A84DC", Offset = "0x3A84DC")]
		add
		{
		}
		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x5F55E0", Offset = "0x5F55E0", VA = "0x5F55E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A84EC", Offset = "0x3A84EC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000027")]
	public static event ShowBlock onShowBlock
	{
		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x5F56E8", Offset = "0x5F56E8", VA = "0x5F56E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A84FC", Offset = "0x3A84FC")]
		add
		{
		}
		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x5F57F0", Offset = "0x5F57F0", VA = "0x5F57F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A850C", Offset = "0x3A850C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x5F4E2C", Offset = "0x5F4E2C", VA = "0x5F4E2C")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x5F6404", Offset = "0x5F6404", VA = "0x5F6404")]
	public int Get_RemotePlayerSpawnID(PhotonPlayer remotePlayer)
	{
		return default(int);
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x5F65A8", Offset = "0x5F65A8", VA = "0x5F65A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x5F6F44", Offset = "0x5F6F44", VA = "0x5F6F44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0x5F5DDC", Offset = "0x5F5DDC", VA = "0x5F5DDC")]
	private void Set_LocalPlayerID()
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0x5F80AC", Offset = "0x5F80AC", VA = "0x5F80AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A851C", Offset = "0x3A851C")]
	private IEnumerator WaitToCheckTrophy()
	{
		return null;
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x5F719C", Offset = "0x5F719C", VA = "0x5F719C")]
	private void CheckIfAllPlayersLoaded()
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0x5F8B00", Offset = "0x5F8B00", VA = "0x5F8B00")]
	private void SetupGame()
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0x5FE164", Offset = "0x5FE164", VA = "0x5FE164")]
	private void SetupToolshelf(int spawnID = -1)
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0x5FE8A0", Offset = "0x5FE8A0", VA = "0x5FE8A0")]
	public void ToolshelfSet()
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0x5FE9B8", Offset = "0x5FE9B8", VA = "0x5FE9B8")]
	public void WaitToSpawnAIPlayer(int modeLocation, int spawnIndex, AIManager aiManager)
	{
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0x5FECEC", Offset = "0x5FECEC", VA = "0x5FECEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A858C", Offset = "0x3A858C")]
	private IEnumerator DelayAIPlayerSpawn(int modeLocation, int spawnIndex)
	{
		return null;
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0x5F8114", Offset = "0x5F8114", VA = "0x5F8114")]
	public void SpawnAIPlayer(int modeLocation, int spawnIndex)
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0x5F7120", Offset = "0x5F7120", VA = "0x5F7120")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A85FC", Offset = "0x3A85FC")]
	private IEnumerator DelayedServerReadyCheck()
	{
		return null;
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0x5FF200", Offset = "0x5FF200", VA = "0x5FF200")]
	private void CheckIfPlayersReady()
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x5FF8B8", Offset = "0x5FF8B8", VA = "0x5FF8B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A866C", Offset = "0x3A866C")]
	private IEnumerator DelayedMultiplayerMatchStart()
	{
		return null;
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0x5FF934", Offset = "0x5FF934", VA = "0x5FF934")]
	public void RegisterPlayer(PlayerManager player)
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x5FF9EC", Offset = "0x5FF9EC", VA = "0x5FF9EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x600704", Offset = "0x600704", VA = "0x600704")]
	private void CheckForTutorialMessages()
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0x5FDF68", Offset = "0x5FDF68", VA = "0x5FDF68")]
	private void CheckTutorialStartMessage()
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0x600A90", Offset = "0x600A90", VA = "0x600A90")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0x601388", Offset = "0x601388", VA = "0x601388")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A86DC", Offset = "0x3A86DC")]
	private IEnumerator DelayedRebuildModeEnd(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0x600620", Offset = "0x600620", VA = "0x600620")]
	public void PlayFoxVO(string vo)
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0x6009DC", Offset = "0x6009DC", VA = "0x6009DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A874C", Offset = "0x3A874C")]
	private IEnumerator DelayedFoxVO(string vo, float delay)
	{
		return null;
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x601428", Offset = "0x601428", VA = "0x601428")]
	[PunRPC]
	public void RpcTriggerCountdownToStartThrowing()
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x6016A0", Offset = "0x6016A0", VA = "0x6016A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A87CC", Offset = "0x3A87CC")]
	public IEnumerator StartThrowingCountdown()
	{
		return null;
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x60171C", Offset = "0x60171C", VA = "0x60171C")]
	public void StopThrowingCountdownTimer()
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x601600", Offset = "0x601600", VA = "0x601600")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A883C", Offset = "0x3A883C")]
	public IEnumerator TriggerStartThrowingStage(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0x60184C", Offset = "0x60184C", VA = "0x60184C")]
	private void StartThrowingStage()
	{
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0x602A60", Offset = "0x602A60", VA = "0x602A60")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A88AC", Offset = "0x3A88AC")]
	private IEnumerator RetryEnemySpawn(Wave currentWave, int currentWaveIndex, int amountToSpawn)
	{
		return null;
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0x6025E4", Offset = "0x6025E4", VA = "0x6025E4")]
	private void SaveFortress()
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x6034D4", Offset = "0x6034D4", VA = "0x6034D4")]
	public void EnemySpawned(GameObject enemy)
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x603588", Offset = "0x603588", VA = "0x603588")]
	private void ClearLevel()
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x6038AC", Offset = "0x6038AC", VA = "0x6038AC")]
	[PunRPC]
	private void RpcClearLevel()
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x5F91FC", Offset = "0x5F91FC", VA = "0x5F91FC")]
	private void SetupLevel(Level levelToLoad)
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0x603FA4", Offset = "0x603FA4", VA = "0x603FA4")]
	private void SpawnEnemyForts(Level levelToLoad, bool spawnEnemies = true)
	{
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0x605708", Offset = "0x605708", VA = "0x605708")]
	[PunRPC]
	private void rpcResetCOOPStats()
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0x605860", Offset = "0x605860", VA = "0x605860")]
	[PunRPC]
	private void rpcSetupWristSpawner()
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0x6049D0", Offset = "0x6049D0", VA = "0x6049D0")]
	private void InitalizeEndlessWaves()
	{
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0x604F70", Offset = "0x604F70", VA = "0x604F70")]
	private void InitalizeCOOPWaves()
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0x605D28", Offset = "0x605D28", VA = "0x605D28")]
	[PunRPC]
	private void RpcSetupMultiplayerLevel()
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0x5FED94", Offset = "0x5FED94", VA = "0x5FED94")]
	public GameObject CreateBlock(BlockProperties properties, Vector3 position, Quaternion rotation, int client)
	{
		return null;
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0x5EF660", Offset = "0x5EF660", VA = "0x5EF660")]
	public GameObject CreateBlock(BlockProperties properties, Vector3 position, Quaternion rotation, bool isPlayerBlock = true)
	{
		return null;
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0x603E78", Offset = "0x603E78", VA = "0x603E78")]
	public GameObject CreateBlockSpawner(GameObject prefab, Vector3 position, Quaternion rotation, bool localOnly, int client)
	{
		return null;
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0x604E2C", Offset = "0x604E2C", VA = "0x604E2C")]
	public GameObject CreateUnitSpawner(Vector3 position, Quaternion rotation, int client)
	{
		return null;
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0x602B1C", Offset = "0x602B1C", VA = "0x602B1C")]
	private void CheckToolsToSpawn()
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0x606FC0", Offset = "0x606FC0", VA = "0x606FC0")]
	public void ControllerTriggerPressed()
	{
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0x607160", Offset = "0x607160", VA = "0x607160")]
	public void ControllerTriggerReleased()
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0x6072F4", Offset = "0x6072F4", VA = "0x6072F4")]
	public void ControllerTouchpadPressed()
	{
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0x6072F8", Offset = "0x6072F8", VA = "0x6072F8")]
	public void ControllerTouchpadReleased()
	{
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0x6072FC", Offset = "0x6072FC", VA = "0x6072FC")]
	public void LeverPulled(LeverStartThrowing lever)
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x607998", Offset = "0x607998", VA = "0x607998")]
	[PunRPC]
	private void RpcMultiplayerLeverPulled()
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0x607B78", Offset = "0x607B78", VA = "0x607B78")]
	public void ShowOptionsMenu()
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0x607C4C", Offset = "0x607C4C", VA = "0x607C4C")]
	public void MenuButtonPressed()
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0x60804C", Offset = "0x60804C", VA = "0x60804C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A896C", Offset = "0x3A896C")]
	private IEnumerator WaitToPressMenuButton()
	{
		return null;
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0x603ACC", Offset = "0x603ACC", VA = "0x603ACC")]
	public void PauseGame(bool pause)
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0x6080C8", Offset = "0x6080C8", VA = "0x6080C8")]
	public void DemoTimerDone()
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0x60835C", Offset = "0x60835C", VA = "0x60835C")]
	public void EnemyKilled()
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0x609114", Offset = "0x609114", VA = "0x609114")]
	private void Add_NewHarderWave()
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0x5EFD88", Offset = "0x5EFD88", VA = "0x5EFD88")]
	public void FortDestroyed(FortManager fort)
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0x60922C", Offset = "0x60922C", VA = "0x60922C")]
	public void RepairAllPlayerBlocks()
	{
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0x6092F8", Offset = "0x6092F8", VA = "0x6092F8")]
	public void HideAllPlayerBlocks()
	{
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0x6063F0", Offset = "0x6063F0", VA = "0x6063F0")]
	public void SpawnTool(Vector3 position, ToolTypes tool, bool moveToShelf = true, bool startToolTiny = true, int toolshelfId = 0)
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0x6093C8", Offset = "0x6093C8", VA = "0x6093C8")]
	public void PickupTool(GameObject tool)
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0x6095B8", Offset = "0x6095B8", VA = "0x6095B8")]
	public void TreasureDestroyed()
	{
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0x609740", Offset = "0x609740", VA = "0x609740")]
	[PunRPC]
	private void RpcGameOver(int winnerId)
	{
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0x60CA18", Offset = "0x60CA18", VA = "0x60CA18")]
	[PunRPC]
	private void rpcSyncWaveCount(int waveIndex)
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0x60C644", Offset = "0x60C644", VA = "0x60C644")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A89FC", Offset = "0x3A89FC")]
	private IEnumerator DestroyBlocksAndHideCrates()
	{
		return null;
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0x60CA1C", Offset = "0x60CA1C", VA = "0x60CA1C")]
	public void FinishGameOverAfterEnteredNameForScore()
	{
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0x60CB54", Offset = "0x60CB54", VA = "0x60CB54")]
	[PunRPC]
	private void rpcFinishGameOverAfterEnteredNameForScore()
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0x60CCDC", Offset = "0x60CCDC", VA = "0x60CCDC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A8A7C", Offset = "0x3A8A7C")]
	private IEnumerator DelayGettingAndShowingLeaderboard()
	{
		return null;
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0x60CD58", Offset = "0x60CD58", VA = "0x60CD58")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A8AEC", Offset = "0x3A8AEC")]
	private IEnumerator DelaySavingCurrentHighScore()
	{
		return null;
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0x60CDC0", Offset = "0x60CDC0", VA = "0x60CDC0")]
	public void ReportCOOPScore()
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0x60CF74", Offset = "0x60CF74", VA = "0x60CF74")]
	public void ReportSurvivalScore()
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0x60CF78", Offset = "0x60CF78", VA = "0x60CF78")]
	private void GetLeaderboardScores()
	{
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0x60D054", Offset = "0x60D054", VA = "0x60D054")]
	private void RetrievedLeaderboardScores(List<LeaderboardEntry> entries)
	{
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0x60D0F8", Offset = "0x60D0F8", VA = "0x60D0F8")]
	private void ShowDelayedGameOverMenu()
	{
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0x60D198", Offset = "0x60D198", VA = "0x60D198")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A8B5C", Offset = "0x3A8B5C")]
	public IEnumerator ResetLevel()
	{
		return null;
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0x60D214", Offset = "0x60D214", VA = "0x60D214")]
	public void NextLevel()
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0x60D7CC", Offset = "0x60D7CC", VA = "0x60D7CC")]
	public void LevelSelected(int _levelNumber, FortressSave fortressSave)
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0x60D5C8", Offset = "0x60D5C8", VA = "0x60D5C8")]
	private void ClearLevelSelectorItems()
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0x60DC6C", Offset = "0x60DC6C", VA = "0x60DC6C")]
	public void LoadMainMenu()
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0x60E00C", Offset = "0x60E00C", VA = "0x60E00C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A8BCC", Offset = "0x3A8BCC")]
	private IEnumerator DelayLoadMainMenuAndSave()
	{
		return null;
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0x5F7B00", Offset = "0x5F7B00", VA = "0x5F7B00")]
	public void ShowLevelSelector()
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0x60F100", Offset = "0x60F100", VA = "0x60F100")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A8C3C", Offset = "0x3A8C3C")]
	private IEnumerator DelayGotoCabinInterior(Vector3 _tempPos)
	{
		return null;
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0x60F1A4", Offset = "0x60F1A4", VA = "0x60F1A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A8CAC", Offset = "0x3A8CAC")]
	private IEnumerator DelayGotoFortressCabinInterior()
	{
		return null;
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0x60F220", Offset = "0x60F220", VA = "0x60F220")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A8D1C", Offset = "0x3A8D1C")]
	private IEnumerator DelayGotoLevelPosition()
	{
		return null;
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0x60F29C", Offset = "0x60F29C", VA = "0x60F29C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A8D8C", Offset = "0x3A8D8C")]
	private IEnumerator DelayGotoFortressLevelPosition()
	{
		return null;
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0x60E088", Offset = "0x60E088", VA = "0x60E088")]
	private void PopulateLevelsToSelect()
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0x60F318", Offset = "0x60F318", VA = "0x60F318")]
	public void DeleteFortressSave(GameObject model, LevelSelectorModel modelScript)
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0x60F948", Offset = "0x60F948", VA = "0x60F948")]
	public void EarnPoints(int points, int playerID = -1)
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0x60FD6C", Offset = "0x60FD6C", VA = "0x60FD6C")]
	public void EarnPointsTeamPVP(int points, int team, int playerID = -1)
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0x610178", Offset = "0x610178", VA = "0x610178")]
	public void PlayerKilled(int scoringPlayer = -1)
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0x6109F8", Offset = "0x6109F8", VA = "0x6109F8")]
	public void Save_MatchStats()
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0x611428", Offset = "0x611428", VA = "0x611428")]
	public void SetQualityLevel(int level)
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0x61151C", Offset = "0x61151C", VA = "0x61151C")]
	public int GetCurrentLevelStarAmount()
	{
		return default(int);
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0x5EFB48", Offset = "0x5EFB48", VA = "0x5EFB48")]
	public void AddBlockToCurrentPlayerBlocksList(GameObject _blockToAdd)
	{
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0x611564", Offset = "0x611564", VA = "0x611564")]
	public void RemoveBlockFromCurrentPlayerBlocksList(GameObject _blockToRemove)
	{
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0x5F3E50", Offset = "0x5F3E50", VA = "0x5F3E50")]
	public void AddUnitToCurrentPlayerUnitList(GameObject _unitToAdd)
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0x61160C", Offset = "0x61160C", VA = "0x61160C")]
	public void RemoveUnitFromCurrentPlayerUnitList(GameObject _unitToAdd)
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0x602358", Offset = "0x602358", VA = "0x602358")]
	private void CollectCurrentPlayerBlocksDataToSave()
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x603C1C", Offset = "0x603C1C", VA = "0x603C1C")]
	private void AssembleLastSavedPlayerBlockEntries()
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0x60D55C", Offset = "0x60D55C", VA = "0x60D55C")]
	public void ClearLastSavedPlayerBlockEntriesList()
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x6116B4", Offset = "0x6116B4", VA = "0x6116B4")]
	public bool DoesPlayerHaveASavedFort()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x611718", Offset = "0x611718", VA = "0x611718")]
	public void LightenBlocksAboveThisBlock(NVRHand _hand, Block _block)
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x611B40", Offset = "0x611B40", VA = "0x611B40")]
	private void CmdChangeBlockOwner(int blockId, int ownerId)
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0x611CDC", Offset = "0x611CDC", VA = "0x611CDC")]
	public void SetBlocksBackToNormalWeight(NVRHand _hand)
	{
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x611E9C", Offset = "0x611E9C", VA = "0x611E9C")]
	public PlayerManager GetOpponent(PlayerManager myPlayer)
	{
		return null;
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x611FB4", Offset = "0x611FB4", VA = "0x611FB4")]
	public void RemoveBlockFromSpawners(GameObject block)
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x6120F4", Offset = "0x6120F4", VA = "0x6120F4")]
	public void RemoveSpawnerFromList(GameObject spawner)
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x612168", Offset = "0x612168", VA = "0x612168")]
	public float GetPlayerSpawnPosY()
	{
		return default(float);
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0x61223C", Offset = "0x61223C", VA = "0x61223C")]
	public void PlaceFriendlyUnit()
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0x61224C", Offset = "0x61224C", VA = "0x61224C")]
	public void KillFriendlyUnit()
	{
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0x612484", Offset = "0x612484", VA = "0x612484")]
	public void StartMultiplayerMatch()
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0x6125E0", Offset = "0x6125E0", VA = "0x6125E0")]
	[PunRPC]
	public void RpcStartMultiplayerMatch()
	{
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0x604D48", Offset = "0x604D48", VA = "0x604D48")]
	private void Change_WaveIndex(int newWave)
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0x6052E8", Offset = "0x6052E8", VA = "0x6052E8")]
	private void Set_PlayerRigTransformsToSpawn()
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0x612DD0", Offset = "0x612DD0", VA = "0x612DD0")]
	public void WeaponSelected(int weapon)
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0x612F5C", Offset = "0x612F5C", VA = "0x612F5C")]
	[PunRPC]
	public void RpcWeaponSelected(int weapon)
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0x613018", Offset = "0x613018", VA = "0x613018")]
	public void FortDistanceSelectedPVP(int distance)
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0x6131A4", Offset = "0x6131A4", VA = "0x6131A4")]
	public void FortDistanceSelectedCOOP(int distance)
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0x613398", Offset = "0x613398", VA = "0x613398")]
	[PunRPC]
	public void RpcFortDistanceSelectedPVP(int distance)
	{
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0x613454", Offset = "0x613454", VA = "0x613454")]
	[PunRPC]
	public void RpcFortDistanceSelectedCOOP(int distance)
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0x613510", Offset = "0x613510", VA = "0x613510")]
	public void MultiplayerGamemodeSelected(GameModes gamemode)
	{
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0x613964", Offset = "0x613964", VA = "0x613964")]
	[PunRPC]
	public void RpcMultiplayerGamemodeSelected(GameModes gamemode)
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0x6136A4", Offset = "0x6136A4", VA = "0x6136A4")]
	public void SetMultiplayerGamemode(GameModes gamemode)
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0x613968", Offset = "0x613968", VA = "0x613968")]
	public void StartingBlocksSelected(int blocks)
	{
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0x613A90", Offset = "0x613A90", VA = "0x613A90")]
	[PunRPC]
	public void RpcStartingBlocksSelected(int blocks)
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0x60C21C", Offset = "0x60C21C", VA = "0x60C21C")]
	public void ShowMultiplayerSettings()
	{
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0x613B4C", Offset = "0x613B4C", VA = "0x613B4C")]
	[PunRPC]
	public void RpcShowMultiplayerSettings()
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0x60C6C0", Offset = "0x60C6C0", VA = "0x60C6C0")]
	private void ResetPlayerToMultiplayerDefaultPosition()
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0x613C9C", Offset = "0x613C9C", VA = "0x613C9C")]
	private void DestroyNetworkToolshelfs()
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0x613F08", Offset = "0x613F08", VA = "0x613F08")]
	public void TeleportPlayer(int spawnPointID)
	{
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0x61430C", Offset = "0x61430C", VA = "0x61430C")]
	public PlayerManager GetRandomPlayer()
	{
		return null;
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0x6145EC", Offset = "0x6145EC", VA = "0x6145EC")]
	public Transform GetOtherTeamPlayer(int askingsTeam, bool sendSpecCamera = true)
	{
		return null;
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0x6148D8", Offset = "0x6148D8", VA = "0x6148D8")]
	public Transform GetOtherTeamAIPlayer(int askingsTeam, bool sendSpecCamera = true)
	{
		return null;
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0x614BF4", Offset = "0x614BF4", VA = "0x614BF4")]
	public int GetPlayersTeam(PlayerManager player)
	{
		return default(int);
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0x5FEAD8", Offset = "0x5FEAD8", VA = "0x5FEAD8")]
	private void TryDestroyAIPlayersFort(AIManager aiManager)
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x614CEC", Offset = "0x614CEC", VA = "0x614CEC")]
	public GameManager()
	{
	}
}
[Token(Token = "0x2000126")]
public class GameMode : Singleton<GameMode>
{
	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameModes sceneMode;

	[Token(Token = "0x17000157")]
	public bool IsMultiplayerGamePlay
	{
		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x693200", Offset = "0x693200", VA = "0x693200")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000158")]
	public bool IsIntro
	{
		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x69703C", Offset = "0x69703C", VA = "0x69703C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000159")]
	public bool IsEndlessTypeGamemode
	{
		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x697050", Offset = "0x697050", VA = "0x697050")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700015A")]
	public bool IsMenuScene
	{
		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x6970A0", Offset = "0x6970A0", VA = "0x6970A0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700015B")]
	public bool IsTrainMode
	{
		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x697084", Offset = "0x697084", VA = "0x697084")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0x6970C4", Offset = "0x6970C4", VA = "0x6970C4")]
	public void ForceSetScenemode(GameModes mode)
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0x6971D0", Offset = "0x6971D0", VA = "0x6971D0")]
	public GameMode()
	{
	}
}
[Token(Token = "0x2000127")]
public class GameModeModel : NVRInteractableItem
{
	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public GameModes levelMode;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 originalPosition;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Quaternion originalRotation;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public Transform modelObject;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 modelObjectOriginalPos;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion modelObjectOriginalRot;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Tweener tweenerForDOMove;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Tweener tweenerForDORotate;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Tweener tweenerForHover;

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0x697258", Offset = "0x697258", VA = "0x697258", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0x697410", Offset = "0x697410", VA = "0x697410", Slot = "11")]
	public override void BeginInteraction(NVRHand hand)
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0x6974F0", Offset = "0x6974F0", VA = "0x6974F0", Slot = "14")]
	public override void EndInteraction(NVRHand hand)
	{
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0x6974F8", Offset = "0x6974F8", VA = "0x6974F8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0x69758C", Offset = "0x69758C", VA = "0x69758C")]
	public void TweenBackToStartingPos()
	{
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0x697750", Offset = "0x697750", VA = "0x697750")]
	private void FinishMove()
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0x69782C", Offset = "0x69782C", VA = "0x69782C")]
	public bool CheckIfDoneTweening()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0x69787C", Offset = "0x69787C", VA = "0x69787C")]
	public GameModeModel()
	{
	}
}
[Token(Token = "0x2000128")]
public class GetGloveExtendoStickLocation : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform extendoStickTransform;

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0x6978B4", Offset = "0x6978B4", VA = "0x6978B4")]
	public GetGloveExtendoStickLocation()
	{
	}
}
[Token(Token = "0x2000129")]
public class GetGloveMeshRenderers : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public MeshRenderer[] meshRenderers;

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0x6978BC", Offset = "0x6978BC", VA = "0x6978BC")]
	public GetGloveMeshRenderers()
	{
	}
}
[Token(Token = "0x200012A")]
public class GhostPlayerModel : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Collider collider;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MeshRenderer networkMesh;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private Material ghostMaterial;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material defaultMaterial;

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0x697AC0", Offset = "0x697AC0", VA = "0x697AC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0x697AF0", Offset = "0x697AF0", VA = "0x697AF0")]
	public void SetGhostBody(bool isGhost)
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0x697B14", Offset = "0x697B14", VA = "0x697B14")]
	private void SetGhostBodyCollider(bool isGhost)
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0x697BD0", Offset = "0x697BD0", VA = "0x697BD0")]
	private void SetGhostBodyMaterial(bool isGhost)
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0x697C08", Offset = "0x697C08", VA = "0x697C08")]
	public GhostPlayerModel()
	{
	}
}
[Token(Token = "0x200012B")]
public class Globals : Singleton<Globals>
{
	[Token(Token = "0x200067F")]
	public class PlayerPrefKeyStrings
	{
		[Token(Token = "0x40025AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string selectedWeaponKeyString;

		[Token(Token = "0x40025AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string showReticleKeyString;

		[Token(Token = "0x40025AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string showHudKeyString;

		[Token(Token = "0x40025AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public string qualityKeyString;

		[Token(Token = "0x40025AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string musicOnOffKeyString;

		[Token(Token = "0x40025AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public string highscoreEndlessKeyString;

		[Token(Token = "0x40025B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string highscoreCOOPKeyString;

		[Token(Token = "0x40025B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public string currentLevelKeyString;

		[Token(Token = "0x40025B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string toolStatusKeyString;

		[Token(Token = "0x40025B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public string fortLevelStatusKeyString;

		[Token(Token = "0x40025B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string fortLevelStarsKeyString;

		[Token(Token = "0x40025B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public string playerLocalLeaderboardName;

		[Token(Token = "0x40025B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string fortressSavePrefix;

		[Token(Token = "0x40025B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public string fortressSaveNamesList;

		[Token(Token = "0x40025B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string psvrHeight;

		[Token(Token = "0x40025B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public string standingPrevResetX;

		[Token(Token = "0x40025BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string standingPrevResetZ;

		[Token(Token = "0x40025BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public string highestEndlessWave;

		[Token(Token = "0x40025BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string localLeaderboardEntry;

		[Token(Token = "0x40025BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public string serverIPAddress;

		[Token(Token = "0x40025BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string arcadeHeadsetID;

		[Token(Token = "0x40025BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public string playerIPAddress;

		[Token(Token = "0x6002E18")]
		[Address(RVA = "0x698264", Offset = "0x698264", VA = "0x698264")]
		public PlayerPrefKeyStrings()
		{
		}
	}

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39F778", Offset = "0x39F778")]
	public PlayerPrefKeyStrings playerPrefKeyStrings;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39F7AC", Offset = "0x39F7AC")]
	public float minTextScale;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float maxTextScale;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxFloatingTextDistance;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39F7E0", Offset = "0x39F7E0")]
	public float mainMenuFarClippingValue;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float snowFortModeFarClippingValue;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float endlessFarClippingValue;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public float gameVersion;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39F824", Offset = "0x39F824")]
	public string multiplayerVersion;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float multiplayerAutoRefreshRate;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float magicSnowballAfterCreateFallTime;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float percentageOfBlockMassWhenHeld;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float heldBlockMass;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int waveToStartRandomizingEnemyTypes;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int numberOfCharactersForLocalLeaderboardName;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int leaderboardEntriesDisplayed;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float maxSnowballMass;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float snowballGrowSpeed;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float snowballGrowSpeedSofaVR;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float minImpactMass;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float minSnowballReloadMass;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float defaultPlayerScaleInFortress;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float unitPlacementLimit;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public string defaultIPAddress;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39F868", Offset = "0x39F868")]
	public int massBaseNumberPerCubicMeter;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int hpSnowBaseNumberPerCubicMeter;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int pointsBaseNumberPerCubicMeter;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39F89C", Offset = "0x39F89C")]
	public int survivalUnlockedIfBeatThisLevelOrGreater;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int fortressUnlockedIfBeatThisSurvivalWave;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39F8D0", Offset = "0x39F8D0")]
	public BlockShapeStruct[] blockShapeStructs;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public BlockMaterialStruct[] blockMaterialStructs;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Dictionary<BlockShapes, BlockShapeStruct> blockShapeStructsDictionary;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Dictionary<BlockMaterials, BlockMaterialStruct> blockMaterialStructsDictionary;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39F904", Offset = "0x39F904")]
	public Material questionMarkSnowMaterial;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Material snowDamageMaterial;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Material iceDamageMaterial;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public Material woodDamageMaterial;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39F938", Offset = "0x39F938")]
	public int lastLevelForDemo;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float level3StartBuildingTime;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float storeDemoSecondsTillEndDemo;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public GameObject storeDemoTimerPrefab;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39F96C", Offset = "0x39F96C")]
	public GameObject playSpaceDisplayPrefab;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public GameObject playAreaDiamondPrefab;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float psVRStartingHeight;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float psVRMenuExtraZDistance;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float psVRSnowFortCabinExtraZDistance;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float psVREndlessExtraZDistance;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float psVRFortressExtraZDistance;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float psVRFoxLevelExtraZDistance;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Material psvrBlackOutScreenMaterial;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public GameObject psvrBlackOutCanvasPrefab;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject psvrBlackOutCameraPrefab;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[HideInInspector]
	public float psvrSnowfortAndEndlessZPositionOffset;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[HideInInspector]
	public float psvrFortressZPositionOffset;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float metersUpFromHitBlockToActivateBlocks;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float minVelocityMagnitudeToStopBlockMovement;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float secondsToWaitToTurnOffBlockMovement;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39F9C0", Offset = "0x39F9C0")]
	public float oculusExtraZDistance;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float oculusExtraXDistanceCabin;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39F9F4", Offset = "0x39F9F4")]
	public PlaySpaceTypes currentPlaySpace;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39FA28", Offset = "0x39FA28")]
	public float heightOffsetPico3DOF;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39FA5C", Offset = "0x39FA5C")]
	public VRHeadsetTypes currentHeadsetType;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool _isMobileVR;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	private static bool _is3DOF;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	[HideInInspector]
	public bool useExtendoArms;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39FAA0", Offset = "0x39FAA0")]
	public int vrPlayersStartingHealth;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public int vrPlayersHealthAddedPerSofaOpponent;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39FAD4", Offset = "0x39FAD4")]
	public float arenaModeForceRestart;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public List<Color> PlayerIDColors;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39FB08", Offset = "0x39FB08")]
	public string enemySpawnPointTag;

	[Token(Token = "0x1700015C")]
	public bool IsChristmas
	{
		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x697C10", Offset = "0x697C10", VA = "0x697C10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700015D")]
	public static bool IsMobileVR
	{
		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x697CC0", Offset = "0x697CC0", VA = "0x697CC0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700015E")]
	public static bool Is3DOF
	{
		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x697D38", Offset = "0x697D38", VA = "0x697D38")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x697DB0", Offset = "0x697DB0", VA = "0x697DB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x698454", Offset = "0x698454", VA = "0x698454")]
	private void CreateBlockShapeAndMaterialDictionaries()
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x6986D4", Offset = "0x6986D4", VA = "0x6986D4")]
	private new void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x698810", Offset = "0x698810", VA = "0x698810")]
	public Globals()
	{
	}
}
[Token(Token = "0x200012C")]
public enum GameModes
{
	[Token(Token = "0x400091A")]
	MainMenu,
	[Token(Token = "0x400091B")]
	SnowFort,
	[Token(Token = "0x400091C")]
	Freeplay,
	[Token(Token = "0x400091D")]
	FortressDefense,
	[Token(Token = "0x400091E")]
	Endless,
	[Token(Token = "0x400091F")]
	FoxEasterEgg,
	[Token(Token = "0x4000920")]
	MultiplayerPVP,
	[Token(Token = "0x4000921")]
	MultiplayerCOOP,
	[Token(Token = "0x4000922")]
	MultiplayerMenu,
	[Token(Token = "0x4000923")]
	SofaVR,
	[Token(Token = "0x4000924")]
	Intro,
	[Token(Token = "0x4000925")]
	MultiplayerTrain,
	[Token(Token = "0x4000926")]
	Train,
	[Token(Token = "0x4000927")]
	MultiplayerTeamPVP,
	[Token(Token = "0x4000928")]
	MultiplayerArenaCoop,
	[Token(Token = "0x4000929")]
	MultiplayerArenaPVP
}
[Token(Token = "0x200012D")]
public enum VRHeadsetTypes
{
	[Token(Token = "0x400092B")]
	Vive,
	[Token(Token = "0x400092C")]
	OculusCV1,
	[Token(Token = "0x400092D")]
	PSVR,
	[Token(Token = "0x400092E")]
	WindowsMR,
	[Token(Token = "0x400092F")]
	PicoG2,
	[Token(Token = "0x4000930")]
	OculusRiftS,
	[Token(Token = "0x4000931")]
	OculusQuest,
	[Token(Token = "0x4000932")]
	PicoNeo2,
	[Token(Token = "0x4000933")]
	NonVR,
	[Token(Token = "0x4000934")]
	PicoNeo3
}
[Token(Token = "0x200012E")]
public enum MultiplayerConnectModes
{
	[Token(Token = "0x4000936")]
	Quick,
	[Token(Token = "0x4000937")]
	Friend
}
[Token(Token = "0x200012F")]
public enum WinGoals
{
	[Token(Token = "0x4000939")]
	Endless,
	[Token(Token = "0x400093A")]
	KnockOverSnowman,
	[Token(Token = "0x400093B")]
	KnockOverFort
}
[Token(Token = "0x2000130")]
public enum EnemyTypes
{
	[Token(Token = "0x400093D")]
	None = -1,
	[Token(Token = "0x400093E")]
	Snowman,
	[Token(Token = "0x400093F")]
	ShieldedSnowman,
	[Token(Token = "0x4000940")]
	Snowwoman,
	[Token(Token = "0x4000941")]
	SnowMonster,
	[Token(Token = "0x4000942")]
	Snowpher,
	[Token(Token = "0x4000943")]
	SnowmanElite,
	[Token(Token = "0x4000944")]
	SnowmanShieldedElite,
	[Token(Token = "0x4000945")]
	SnowmanShieldedEliteHeavy,
	[Token(Token = "0x4000946")]
	SnowmanSniper
}
[Token(Token = "0x2000131")]
public enum TutorialProgressAction
{
	[Token(Token = "0x4000948")]
	None,
	[Token(Token = "0x4000949")]
	LevelStart,
	[Token(Token = "0x400094A")]
	TriggerPress,
	[Token(Token = "0x400094B")]
	TriggerRelease,
	[Token(Token = "0x400094C")]
	Timed,
	[Token(Token = "0x400094D")]
	LeverPull,
	[Token(Token = "0x400094E")]
	ThrowingStart
}
[Token(Token = "0x2000132")]
public enum BlockShapes
{
	[Token(Token = "0x4000950")]
	Cube,
	[Token(Token = "0x4000951")]
	Cuboid,
	[Token(Token = "0x4000952")]
	C,
	[Token(Token = "0x4000953")]
	I,
	[Token(Token = "0x4000954")]
	J,
	[Token(Token = "0x4000955")]
	S,
	[Token(Token = "0x4000956")]
	T,
	[Token(Token = "0x4000957")]
	W,
	[Token(Token = "0x4000958")]
	Platform,
	[Token(Token = "0x4000959")]
	Panel
}
[Token(Token = "0x2000133")]
public enum BlockSizes
{
	[Token(Token = "0x400095B")]
	Small,
	[Token(Token = "0x400095C")]
	Medium,
	[Token(Token = "0x400095D")]
	Large
}
[Token(Token = "0x2000134")]
public enum BlockMaterials
{
	[Token(Token = "0x400095F")]
	Snow,
	[Token(Token = "0x4000960")]
	Ice,
	[Token(Token = "0x4000961")]
	Wood,
	[Token(Token = "0x4000962")]
	Metal,
	[Token(Token = "0x4000963")]
	Diamond
}
[Token(Token = "0x2000135")]
public enum PowerupTypes
{
	[Token(Token = "0x4000965")]
	None,
	[Token(Token = "0x4000966")]
	Tool,
	[Token(Token = "0x4000967")]
	ToolRepair,
	[Token(Token = "0x4000968")]
	AllBlocksRepair,
	[Token(Token = "0x4000969")]
	Explosive,
	[Token(Token = "0x400096A")]
	ToolRefill,
	[Token(Token = "0x400096B")]
	Heart
}
[Token(Token = "0x2000136")]
public enum ToolTypes
{
	[Token(Token = "0x400096D")]
	WoodSlingshot,
	[Token(Token = "0x400096E")]
	Shield,
	[Token(Token = "0x400096F")]
	WaterBottle,
	[Token(Token = "0x4000970")]
	MetalSlingshot,
	[Token(Token = "0x4000971")]
	SnowCannon
}
[Token(Token = "0x2000137")]
public enum PlaySpaceTypes
{
	[Token(Token = "0x4000973")]
	RoomScale,
	[Token(Token = "0x4000974")]
	Standing
}
[Token(Token = "0x2000138")]
public enum Achievements
{
	[Token(Token = "0x4000976")]
	CompleteSFLevel1,
	[Token(Token = "0x4000977")]
	HitFoxWithSnowball,
	[Token(Token = "0x4000978")]
	ClearSurvivalWave7,
	[Token(Token = "0x4000979")]
	ClearFortressWave2,
	[Token(Token = "0x400097A")]
	CompleteSFLevel9,
	[Token(Token = "0x400097B")]
	CompleteSFLevel13,
	[Token(Token = "0x400097C")]
	ClearFortressWave7,
	[Token(Token = "0x400097D")]
	ClearSurvivalWave15,
	[Token(Token = "0x400097E")]
	FindFoxLevel,
	[Token(Token = "0x400097F")]
	CompleteAllSFLevels
}
[Serializable]
[Token(Token = "0x2000139")]
public struct BlockProperties
{
	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BlockShapes blockShape;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public BlockSizes blockSize;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public BlockMaterials blockMaterial;
}
[Serializable]
[Token(Token = "0x200013A")]
public struct BlockPropertiesMini
{
	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BlockShapes blockShape;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public BlockMaterials blockMaterial;
}
[Serializable]
[Token(Token = "0x200013B")]
public struct BlockShapeStruct
{
	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BlockShapes blockShape;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public GameObject blockShapePrefab;
}
[Serializable]
[Token(Token = "0x200013C")]
public struct BlockMaterialStruct
{
	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BlockMaterials blockMaterial;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Material material;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public PhysicMaterial physMaterial;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float massMultiplier;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float hpMultiplier;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float pointsMultiplier;
}
[Token(Token = "0x200013D")]
public static class JsonHelper
{
	[Serializable]
	[Token(Token = "0x2000680")]
	private class Wrapper<T>
	{
		[Token(Token = "0x40025C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<T> items;

		[Token(Token = "0x6002E19")]
		public Wrapper()
		{
		}
	}

	[Token(Token = "0x6000B23")]
	public static List<T> FromJson<T>(string json)
	{
		return null;
	}

	[Token(Token = "0x6000B24")]
	public static string ToJson<T>(List<T> array)
	{
		return null;
	}
}
[Token(Token = "0x200013E")]
public class SFFriend
{
	[Token(Token = "0x2000681")]
	public enum SFFriendType
	{
		[Token(Token = "0x40025C2")]
		Room,
		[Token(Token = "0x40025C3")]
		Friend
	}

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string friendName;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public CSteamID steamID;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public EPersonaState steamState;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isLocalPlayer;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int photonId;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string roomID;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public SFFriendType FriendType;

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x820074", Offset = "0x820074", VA = "0x820074")]
	public SFFriend()
	{
	}
}
[Token(Token = "0x200013F")]
public class GloveManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject gloveModelPrefab;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Renderer frozenGlove;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 modelPosition;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int startingHealth;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float[] freezeHealthLevels;

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x698B24", Offset = "0x698B24", VA = "0x698B24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x69972C", Offset = "0x69972C", VA = "0x69972C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0x6997E0", Offset = "0x6997E0", VA = "0x6997E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0x699164", Offset = "0x699164", VA = "0x699164")]
	public void SpawnGlove()
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0x699894", Offset = "0x699894", VA = "0x699894")]
	private void ResetHealth()
	{
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0x69989C", Offset = "0x69989C", VA = "0x69989C")]
	public void ChangeHealth(float newHealth)
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0x69997C", Offset = "0x69997C", VA = "0x69997C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0x699A54", Offset = "0x699A54", VA = "0x699A54")]
	public GloveManager()
	{
	}
}
[Token(Token = "0x2000140")]
public class HatManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000682")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B944", Offset = "0x39B944")]
	private sealed class <WaitToDestroyHat>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40025C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40025C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float _delay;

		[Token(Token = "0x40025C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public HatManager <>4__this;

		[Token(Token = "0x170004BE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E1D")]
			[Address(RVA = "0x6AC5D8", Offset = "0x6AC5D8", VA = "0x6AC5D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E1F")]
			[Address(RVA = "0x6AC658", Offset = "0x6AC658", VA = "0x6AC658", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E1A")]
		[Address(RVA = "0x6AC480", Offset = "0x6AC480", VA = "0x6AC480")]
		[DebuggerHidden]
		public <WaitToDestroyHat>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6002E1B")]
		[Address(RVA = "0x6AC4D0", Offset = "0x6AC4D0", VA = "0x6AC4D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E1C")]
		[Address(RVA = "0x6AC4D4", Offset = "0x6AC4D4", VA = "0x6AC4D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E1E")]
		[Address(RVA = "0x6AC5E0", Offset = "0x6AC5E0", VA = "0x6AC5E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Rigidbody myRigidBody;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform myTransform;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39FB3C", Offset = "0x39FB3C")]
	public float explosionForce;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float explosionPosY;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float explosionRadius;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float explosionUpwardsModifier;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float torqueValue;

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0x6AC1A0", Offset = "0x6AC1A0", VA = "0x6AC1A0")]
	public void ExplodeThenDestroy(float _waitToDestroyTime)
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0x6AC3DC", Offset = "0x6AC3DC", VA = "0x6AC3DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A8E6C", Offset = "0x3A8E6C")]
	private IEnumerator WaitToDestroyHat(float _delay)
	{
		return null;
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0x6AC4A0", Offset = "0x6AC4A0", VA = "0x6AC4A0")]
	public HatManager()
	{
	}
}
[Token(Token = "0x2000141")]
public class HelpPageManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Image controllerLayoutImage;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Text frontText;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Text backText;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39FB70", Offset = "0x39FB70")]
	public Sprite viveControllerLayoutEnglish;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Sprite viveControllerLayoutChinese;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite viveControllerLayoutKorean;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Sprite oculusControllerLayoutEnglish;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite oculusControllerLayoutChinese;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Sprite oculusQuestRiftSControllerLayoutKorean;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite oculusQuestRiftSControllerLayoutEnglish;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Sprite oculusQuestRiftSControllerLayoutChinese;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite oculusControllerLayoutKorean;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Sprite moveControllerLayoutEnglish;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite moveControllerLayoutChinese;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Sprite moveControllerLayoutKorean;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite windowsMRcontrollerLayoutEnglish;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Sprite windowsMRcontrollerLayoutChinese;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Sprite windowsMRcontrollerLayoutKorean;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Sprite picoNeo2ControllerLayoutEnglish;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Sprite picoNeo2ControllerLayoutChinese;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Sprite picoNeo2ControllerLayoutKorean;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Sprite picoG2ControllerLayoutEnglish;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Sprite picoG2ControllerLayoutChinese;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Sprite picoG2ControllerLayoutKorean;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Sprite picoNeo3ControllerLayoutEnglish;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Sprite picoNeo3ControllerLayoutChinese;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Sprite picoNeo3ControllerLayoutKorean;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 originalScale;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float fortressModeScaleMultiplier;

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0x6AC660", Offset = "0x6AC660", VA = "0x6AC660")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0x6ACABC", Offset = "0x6ACABC", VA = "0x6ACABC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0x6AD5EC", Offset = "0x6AD5EC", VA = "0x6AD5EC")]
	public void OnBeginInteraction()
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0x6AD7FC", Offset = "0x6AD7FC", VA = "0x6AD7FC")]
	public void OnEndInteraction()
	{
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0x6ACB18", Offset = "0x6ACB18", VA = "0x6ACB18")]
	private void FrontPageBodyTextLocalize()
	{
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0x6AD0A8", Offset = "0x6AD0A8", VA = "0x6AD0A8")]
	private void BackPageBodyTextLocalize()
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0x6AD850", Offset = "0x6AD850", VA = "0x6AD850")]
	public HelpPageManager()
	{
	}
}
[Token(Token = "0x2000142")]
public class HitTrigger : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private PlayerManager _player;

	[Token(Token = "0x1700015F")]
	public PhotonView PlayerView
	{
		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x6AE028", Offset = "0x6AE028", VA = "0x6AE028")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0x6AE048", Offset = "0x6AE048", VA = "0x6AE048")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x6AE254", Offset = "0x6AE254", VA = "0x6AE254")]
	private void Setup(PlayerManager player)
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x6AE444", Offset = "0x6AE444", VA = "0x6AE444")]
	[PunRPC]
	private void rpcSetup(int ownerViewId)
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x6AE518", Offset = "0x6AE518", VA = "0x6AE518")]
	public void Hit(SnowBallInfo snowball)
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x6AE7E4", Offset = "0x6AE7E4", VA = "0x6AE7E4")]
	public HitTrigger()
	{
	}
}
[Token(Token = "0x2000143")]
public class IntroManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000683")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B954", Offset = "0x39B954")]
	private sealed class <WaitForIPSettingButtonHold>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40025C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40025CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntroManager <>4__this;

		[Token(Token = "0x170004C0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E23")]
			[Address(RVA = "0x732654", Offset = "0x732654", VA = "0x732654", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E25")]
			[Address(RVA = "0x7326D4", Offset = "0x7326D4", VA = "0x7326D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E20")]
		[Address(RVA = "0x7324B0", Offset = "0x7324B0", VA = "0x7324B0")]
		[DebuggerHidden]
		public <WaitForIPSettingButtonHold>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6002E21")]
		[Address(RVA = "0x7324D0", Offset = "0x7324D0", VA = "0x7324D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E22")]
		[Address(RVA = "0x7324D4", Offset = "0x7324D4", VA = "0x7324D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E24")]
		[Address(RVA = "0x73265C", Offset = "0x73265C", VA = "0x73265C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000684")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B964", Offset = "0x39B964")]
	private sealed class <DelayApplicationQuit>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40025CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x170004C2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E29")]
			[Address(RVA = "0x7322BC", Offset = "0x7322BC", VA = "0x7322BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E2B")]
			[Address(RVA = "0x73233C", Offset = "0x73233C", VA = "0x73233C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E26")]
		[Address(RVA = "0x7321E8", Offset = "0x7321E8", VA = "0x7321E8")]
		[DebuggerHidden]
		public <DelayApplicationQuit>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6002E27")]
		[Address(RVA = "0x732208", Offset = "0x732208", VA = "0x732208", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E28")]
		[Address(RVA = "0x73220C", Offset = "0x73220C", VA = "0x73220C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E2A")]
		[Address(RVA = "0x7322C4", Offset = "0x7322C4", VA = "0x7322C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000685")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B974", Offset = "0x39B974")]
	private sealed class <DelayLoadMainMenu>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40025CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x170004C4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E2F")]
			[Address(RVA = "0x732428", Offset = "0x732428", VA = "0x732428", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E31")]
			[Address(RVA = "0x7324A8", Offset = "0x7324A8", VA = "0x7324A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E2C")]
		[Address(RVA = "0x732344", Offset = "0x732344", VA = "0x732344")]
		[DebuggerHidden]
		public <DelayLoadMainMenu>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6002E2D")]
		[Address(RVA = "0x732364", Offset = "0x732364", VA = "0x732364", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E2E")]
		[Address(RVA = "0x732368", Offset = "0x732368", VA = "0x732368", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E30")]
		[Address(RVA = "0x732430", Offset = "0x732430", VA = "0x732430", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject privacyButton;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject playerPrefab;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject steamPrefab;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject stoveVRLogPrefab;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject stoveVRManagerPrefab;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ktManagerPrefab;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject koreaAgeRatingIcon;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text commandArgumentErrorMessage;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private PlayerManager _player;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float introDelay;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39FBA4", Offset = "0x39FBA4")]
	public GameObject serverIPPanel;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text[] serverIPTexts;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Text headsetIDText;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool checkWifiOnFocus;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool checkVersionOnFocus;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39FBD8", Offset = "0x39FBD8")]
	public GameObject messageBoxObject;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text titleText;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Text infoText;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image iconImage;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public GameObject yesButton;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text yesButtonText;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public GameObject noButton;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text noButtonText;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 origNoButtonPos;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 centerNoButtonPos;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private SystemMessageBoxState currentMessageState;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string currentMarketUrl;

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x864E74", Offset = "0x864E74", VA = "0x864E74")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0x864E78", Offset = "0x864E78", VA = "0x864E78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x865334", Offset = "0x865334", VA = "0x865334")]
	public void OnWebAuthSuccessEvent(bool bValue, int iValue, string strValue)
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0x865338", Offset = "0x865338", VA = "0x865338")]
	private void DelayedStart()
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x86533C", Offset = "0x86533C", VA = "0x86533C")]
	private void Load_SceneFromCommands()
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0x865574", Offset = "0x865574", VA = "0x865574")]
	private void AskPrivacySettings()
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0x865268", Offset = "0x865268", VA = "0x865268")]
	private void ShowSetArcadeServerIP()
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0x8655C0", Offset = "0x8655C0", VA = "0x8655C0")]
	private void SetIPAndHeadsetIDTexts()
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0x865860", Offset = "0x865860", VA = "0x865860")]
	public void Finalize_Privacy()
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0x86587C", Offset = "0x86587C", VA = "0x86587C")]
	public void SetPrivacySettingAsAsked()
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0x8652B8", Offset = "0x8652B8", VA = "0x8652B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A8EEC", Offset = "0x3A8EEC")]
	private IEnumerator WaitForIPSettingButtonHold()
	{
		return null;
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0x865988", Offset = "0x865988", VA = "0x865988")]
	public void SubmitServerIPSettings()
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0x8659A4", Offset = "0x8659A4", VA = "0x8659A4")]
	private void SetIPAddressAndHeadsetID()
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0x865C84", Offset = "0x865C84", VA = "0x865C84")]
	public void IPAddressNumberUp(int numberPosition)
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0x866144", Offset = "0x866144", VA = "0x866144")]
	public void IPAddressNumberDown(int numberPosition)
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0x866600", Offset = "0x866600", VA = "0x866600")]
	public void AdjustHeadsetID(bool toLeft)
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0x8666B4", Offset = "0x8666B4", VA = "0x8666B4")]
	public void OpenMythicalCityURL()
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0x86670C", Offset = "0x86670C", VA = "0x86670C")]
	public void QuitToDesktop()
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0x866730", Offset = "0x866730", VA = "0x866730")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A8F5C", Offset = "0x3A8F5C")]
	private IEnumerator DelayApplicationQuit()
	{
		return null;
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0x866798", Offset = "0x866798", VA = "0x866798")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A8FCC", Offset = "0x3A8FCC")]
	private IEnumerator DelayLoadMainMenu()
	{
		return null;
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0x866800", Offset = "0x866800", VA = "0x866800")]
	public void RemoteDelayedStart()
	{
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0x8658E0", Offset = "0x8658E0", VA = "0x8658E0")]
	public void InstantStart()
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0x8668C0", Offset = "0x8668C0", VA = "0x8668C0")]
	private void ShowMessageBox(SystemMessageBoxState state, string title, string info, MessageBoxIcon icon, string _yesButtonText, string _noButtonText, string marketUrl)
	{
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0x866CB8", Offset = "0x866CB8", VA = "0x866CB8")]
	private void CloseMessageBox()
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0x866D04", Offset = "0x866D04", VA = "0x866D04")]
	public void MessageYesButtonPressed()
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0x866E34", Offset = "0x866E34", VA = "0x866E34")]
	public void MessageNoButtonPressed()
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0x866F20", Offset = "0x866F20", VA = "0x866F20")]
	public void MessageCancelButtonPressed()
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0x86700C", Offset = "0x86700C", VA = "0x86700C")]
	public IntroManager()
	{
	}
}
[Token(Token = "0x2000144")]
public class LeaderboardEntryItem : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Text playerName;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Text score;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Text rank;

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0x7466C0", Offset = "0x7466C0", VA = "0x7466C0")]
	public void UpdateEntry(LeaderboardEntry entry)
	{
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0x746784", Offset = "0x746784", VA = "0x746784")]
	public LeaderboardEntryItem()
	{
	}
}
[Token(Token = "0x2000145")]
public class LeaderboardManager : Singleton<LeaderboardManager>
{
	[Serializable]
	[Token(Token = "0x2000686")]
	public class LeaderboardList
	{
		[Token(Token = "0x40025CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public List<LocalLeaderboardEntry> localLeaderboardEntries;

		[Token(Token = "0x6002E32")]
		[Address(RVA = "0x746BA8", Offset = "0x746BA8", VA = "0x746BA8")]
		public LeaderboardList()
		{
		}
	}

	[Token(Token = "0x2000687")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B984", Offset = "0x39B984")]
	private sealed class <ReportScoreViveport>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40025D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40025D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LeaderboardManager <>4__this;

		[Token(Token = "0x40025D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Action onComplete;

		[Token(Token = "0x40025D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int score;

		[Token(Token = "0x170004C6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E36")]
			[Address(RVA = "0x748364", Offset = "0x748364", VA = "0x748364", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E38")]
			[Address(RVA = "0x7483E4", Offset = "0x7483E4", VA = "0x7483E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E33")]
		[Address(RVA = "0x747184", Offset = "0x747184", VA = "0x747184")]
		[DebuggerHidden]
		public <ReportScoreViveport>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6002E34")]
		[Address(RVA = "0x747F50", Offset = "0x747F50", VA = "0x747F50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E35")]
		[Address(RVA = "0x747F54", Offset = "0x747F54", VA = "0x747F54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E37")]
		[Address(RVA = "0x74836C", Offset = "0x74836C", VA = "0x74836C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000688")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B994", Offset = "0x39B994")]
	private sealed class <>c
	{
		[Token(Token = "0x40025D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40025D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static Func<LocalLeaderboardEntry, int> <>9__19_0;

		[Token(Token = "0x6002E3A")]
		[Address(RVA = "0x747F40", Offset = "0x747F40", VA = "0x747F40")]
		public <>c()
		{
		}

		[Token(Token = "0x6002E3B")]
		[Address(RVA = "0x747F48", Offset = "0x747F48", VA = "0x747F48")]
		internal int <rpcReportScoreLocalOrArcade>b__19_0(LocalLeaderboardEntry go)
		{
			return default(int);
		}
	}

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private CGameID steamAppID;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SteamLeaderboard_t steamSurvivalModeLeaderboard;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string steamLeaderboardName;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private CallResult<LeaderboardFindResult_t> steamLeaderboardReceived;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CallResult<LeaderboardScoreUploaded_t> steamLeaderboardUploaded;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private CallResult<LeaderboardScoresDownloaded_t> steamLeaderboardScoresDownloaded;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Action<List<LeaderboardEntry>> onLeaderboardScoresRetrieved;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Action onReportScoreComplete;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LeaderboardList tempLeaderboardListForWriting;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private List<LocalLeaderboardEntry> currentLeaderboardEntries;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string leaderboardFilename;

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0x74678C", Offset = "0x74678C", VA = "0x74678C")]
	public void Init()
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0x746DA0", Offset = "0x746DA0", VA = "0x746DA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0x746DA4", Offset = "0x746DA4", VA = "0x746DA4")]
	public void ReportScore(int score, [Optional] Action onComplete)
	{
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0x7470D8", Offset = "0x7470D8", VA = "0x7470D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A903C", Offset = "0x3A903C")]
	private IEnumerator ReportScoreViveport(int score, Action onComplete)
	{
		return null;
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0x7471A4", Offset = "0x7471A4", VA = "0x7471A4")]
	private void ReportScoreOculus(int score, [Optional] Action onComplete)
	{
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0x7471A8", Offset = "0x7471A8", VA = "0x7471A8")]
	private void ReportScoreSteam(int score, [Optional] Action onComplete)
	{
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0x746ECC", Offset = "0x746ECC", VA = "0x746ECC")]
	private void ReportScoreLocalOrArcade(int _score)
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0x7471AC", Offset = "0x7471AC", VA = "0x7471AC")]
	[PunRPC]
	private void rpcReportScoreLocalOrArcade(int score, string name)
	{
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0x747504", Offset = "0x747504", VA = "0x747504")]
	public void GetLocalLeaderboardAndShow(bool viewTopScores = false)
	{
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0x747A58", Offset = "0x747A58", VA = "0x747A58")]
	private int GetPosOfPlayersScore()
	{
		return default(int);
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0x747C58", Offset = "0x747C58", VA = "0x747C58")]
	public void GetLeaderboard(Action<List<LeaderboardEntry>> onComplete)
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0x747C60", Offset = "0x747C60", VA = "0x747C60")]
	private void OnSteamLeaderboardScoresDownloaded(LeaderboardScoresDownloaded_t pCallback, bool bIOFailure)
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0x746BB0", Offset = "0x746BB0", VA = "0x746BB0")]
	private void GetLocalLeaderboardEntries()
	{
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0x747360", Offset = "0x747360", VA = "0x747360")]
	private void SetLocalLeaderboardEntries()
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0x747E38", Offset = "0x747E38", VA = "0x747E38")]
	public LeaderboardManager()
	{
	}
}
[Token(Token = "0x2000146")]
public struct LeaderboardEntry
{
	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string nickname;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int score;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int rank;
}
[Serializable]
[Token(Token = "0x2000147")]
public struct LocalLeaderboardEntry
{
	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string nickname;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int score;
}
[Serializable]
[Token(Token = "0x2000148")]
public class Level
{
	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int levelIndex;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string levelName;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool showSignPosts;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Transform[] enemyFortSpawnPoints;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject playerStartBlocksPrefab;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject psvrPlayerStartBlocksPrefab;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject playerBlockSpawnerPrefab;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject playerUnitSpawnerPrefab;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool useBuildTimer;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float throwPower;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float snowballThrowPower;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector2 enemyThrowPosOffset;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float enemySnowballMass;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float enemyThrowInterval;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float threeStarAchieveTime;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float enemyThrowTimeToTarget;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float buildTime;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float rebuildTime;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float rebuildInterval;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject[] fortPrefabs;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public GameObject miniFortModelPrefab;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float percentChanceOfPowerupBlock;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int powerupBlockLimit;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public EnemyTypes enemy;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public WinGoals goal;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ToolTypes[] toolsToSpawn;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public GameObject[] alliesToSpawn;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float percentOfFortToDestroy;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public string[] tutorialControllerMessages;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[EventRef]
	public string[] tutorialControllerVO;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public TutorialProgressAction[] tutorialControllerActions;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float[] tutorialControllerActionTimers;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public string[] tutorialMessages;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TutorialProgressAction[] tutorialActions;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float[] tutorialActionTimers;

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0x7483EC", Offset = "0x7483EC", VA = "0x7483EC")]
	public Level()
	{
	}
}
[Token(Token = "0x2000149")]
public class LevelSelectorInfo : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Image oneStarImage;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Image twoStarImage;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Image threeStarImage;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text numberForLevelSelectionObject;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Sprite noStarSprite;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Sprite withStarSprite;

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0x7483F4", Offset = "0x7483F4", VA = "0x7483F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0x7484B0", Offset = "0x7484B0", VA = "0x7484B0")]
	public void AdjustStars(int _stars)
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0x7486B4", Offset = "0x7486B4", VA = "0x7486B4")]
	public void SetNumberForLevelObject(string text)
	{
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0x7486EC", Offset = "0x7486EC", VA = "0x7486EC")]
	public LevelSelectorInfo()
	{
	}
}
[Token(Token = "0x200014A")]
public class LevelSelectorModel : NVRInteractableItem
{
	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int levelNumber;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public FortressSave fortressSave;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Transform selectorOriginalPos;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform offsetTransform;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Tweener tweenerForDOMove;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Tweener tweenerForDORotate;

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0x7486F4", Offset = "0x7486F4", VA = "0x7486F4", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0x74871C", Offset = "0x74871C", VA = "0x74871C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0x7488E4", Offset = "0x7488E4", VA = "0x7488E4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0x748B04", Offset = "0x748B04", VA = "0x748B04")]
	public bool CheckIfDoneTweening()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x748B54", Offset = "0x748B54", VA = "0x748B54")]
	public LevelSelectorModel()
	{
	}
}
[Token(Token = "0x200014B")]
public class LeverMultiplayerReady : NVRLeverSnow
{
	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x748B5C", Offset = "0x748B5C", VA = "0x748B5C", Slot = "10")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0x748CD4", Offset = "0x748CD4", VA = "0x748CD4")]
	public void ResetHingeMotor()
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0x748DF4", Offset = "0x748DF4", VA = "0x748DF4")]
	public LeverMultiplayerReady()
	{
	}
}
[Token(Token = "0x200014C")]
public class LeverStartThrowing : NVRLeverSnow
{
	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private PhotonView myPhotonView;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[HideInInspector]
	public bool isRemoteLever;

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x748DFC", Offset = "0x748DFC", VA = "0x748DFC", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0x748F5C", Offset = "0x748F5C", VA = "0x748F5C", Slot = "10")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0x749238", Offset = "0x749238", VA = "0x749238", Slot = "11")]
	public override void BeginInteraction(NVRHand hand)
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x749574", Offset = "0x749574", VA = "0x749574")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x74966C", Offset = "0x74966C", VA = "0x74966C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x7490D4", Offset = "0x7490D4", VA = "0x7490D4")]
	public void PullLever()
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0x74922C", Offset = "0x74922C", VA = "0x74922C")]
	public void Rebuild(bool rebuild)
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0x749764", Offset = "0x749764", VA = "0x749764")]
	public void ResetHingeMotor()
	{
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x74986C", Offset = "0x74986C", VA = "0x74986C")]
	private void ResetValues()
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x749338", Offset = "0x749338", VA = "0x749338")]
	public void RotateHingeToActive()
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x74993C", Offset = "0x74993C", VA = "0x74993C")]
	public LeverStartThrowing()
	{
	}
}
[Token(Token = "0x200014D")]
public class DontDestroy : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x7FCF34", Offset = "0x7FCF34", VA = "0x7FCF34")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0x7FCFC0", Offset = "0x7FCFC0", VA = "0x7FCFC0")]
	public DontDestroy()
	{
	}
}
[Token(Token = "0x200014E")]
public class PluginChangesManager : Singleton<PluginChangesManager>
{
	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Dictionary<string, string> functionsToCheck;

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x9071E4", Offset = "0x9071E4", VA = "0x9071E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0x90725C", Offset = "0x90725C", VA = "0x90725C")]
	public void FunctionCheck(string functionID)
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0x907304", Offset = "0x907304", VA = "0x907304")]
	private new void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0x90747C", Offset = "0x90747C", VA = "0x90747C")]
	public PluginChangesManager()
	{
	}
}
[Token(Token = "0x200014F")]
public class Singleton<T> : UnityEngine.MonoBehaviour where T : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static T _instance;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static object _lock;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool applicationIsQuitting;

	[Token(Token = "0x17000160")]
	public static T Instance
	{
		[Token(Token = "0x6000B89")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B8A")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000B8B")]
	public Singleton()
	{
	}
}
[Token(Token = "0x2000150")]
public class SingletonPersistent<T> : UnityEngine.MonoBehaviour where T : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static T _instance;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static object _lock;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool applicationIsQuitting;

	[Token(Token = "0x17000161")]
	public static T Instance
	{
		[Token(Token = "0x6000B8D")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B8E")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000B8F")]
	public SingletonPersistent()
	{
	}
}
[Token(Token = "0x2000151")]
public class LoadingBlink : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000B91")]
	[Address(RVA = "0x6C3910", Offset = "0x6C3910", VA = "0x6C3910")]
	public LoadingBlink()
	{
	}
}
[Token(Token = "0x2000152")]
public class LoadingSceneManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000689")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B9A4", Offset = "0x39B9A4")]
	private sealed class <LoadLevelProgress>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40025D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40025D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnityEngine.AsyncOperation async;

		[Token(Token = "0x170004C8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E3F")]
			[Address(RVA = "0x6C3C50", Offset = "0x6C3C50", VA = "0x6C3C50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E41")]
			[Address(RVA = "0x6C3CD0", Offset = "0x6C3CD0", VA = "0x6C3CD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E3C")]
		[Address(RVA = "0x6C3B14", Offset = "0x6C3B14", VA = "0x6C3B14")]
		[DebuggerHidden]
		public <LoadLevelProgress>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002E3D")]
		[Address(RVA = "0x6C3B3C", Offset = "0x6C3B3C", VA = "0x6C3B3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E3E")]
		[Address(RVA = "0x6C3B40", Offset = "0x6C3B40", VA = "0x6C3B40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E40")]
		[Address(RVA = "0x6C3C58", Offset = "0x6C3C58", VA = "0x6C3C58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject networkManagerPrefab;

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0x6C39B0", Offset = "0x6C39B0", VA = "0x6C39B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0x6C39BC", Offset = "0x6C39BC", VA = "0x6C39BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0x6C3A94", Offset = "0x6C3A94", VA = "0x6C3A94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A90BC", Offset = "0x3A90BC")]
	private IEnumerator LoadLevelProgress(UnityEngine.AsyncOperation async)
	{
		return null;
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0x6C3B34", Offset = "0x6C3B34", VA = "0x6C3B34")]
	public LoadingSceneManager()
	{
	}
}
[Token(Token = "0x2000153")]
public class LobbyStatsEntryItem : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Text playerName;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Text score;

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0x6C3CD8", Offset = "0x6C3CD8", VA = "0x6C3CD8")]
	public LobbyStatsEntryItem()
	{
	}
}
[Token(Token = "0x2000154")]
public class MPHeartDisplay : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private Image _heartImage;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float _fullWidth;

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0x6C47D0", Offset = "0x6C47D0", VA = "0x6C47D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0x6C48C8", Offset = "0x6C48C8", VA = "0x6C48C8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0x6C49C0", Offset = "0x6C49C0", VA = "0x6C49C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0x6C4E34", Offset = "0x6C4E34", VA = "0x6C4E34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0x6C4F54", Offset = "0x6C4F54", VA = "0x6C4F54")]
	public void Set_PlayerColor(Color color)
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0x6C4D48", Offset = "0x6C4D48", VA = "0x6C4D48")]
	public void Change_Health(float healthPercent)
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0x6C4FB0", Offset = "0x6C4FB0", VA = "0x6C4FB0")]
	private void Disable_Hearts()
	{
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0x6C4FF8", Offset = "0x6C4FF8", VA = "0x6C4FF8")]
	private void Enable_Hearts()
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0x6C5040", Offset = "0x6C5040", VA = "0x6C5040")]
	public MPHeartDisplay()
	{
	}
}
[Token(Token = "0x2000155")]
public class MPNameDisplay : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private Text _nameText;

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0x6C5048", Offset = "0x6C5048", VA = "0x6C5048")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0x6C5258", Offset = "0x6C5258", VA = "0x6C5258")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0x6C5378", Offset = "0x6C5378", VA = "0x6C5378")]
	public void Set_PlayerColor(Color color)
	{
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0x6C53D4", Offset = "0x6C53D4", VA = "0x6C53D4")]
	public void Change_Name(string newName)
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0x6C540C", Offset = "0x6C540C", VA = "0x6C540C")]
	public MPNameDisplay()
	{
	}
}
[Token(Token = "0x2000156")]
public class MainMenuManager : Singleton<MainMenuManager>
{
	[Token(Token = "0x200068A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B9B4", Offset = "0x39B9B4")]
	private sealed class <SpawnCreditsWait>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40025DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x170004CA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E45")]
			[Address(RVA = "0x6C7C54", Offset = "0x6C7C54", VA = "0x6C7C54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004CB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E47")]
			[Address(RVA = "0x6C7CD4", Offset = "0x6C7CD4", VA = "0x6C7CD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E42")]
		[Address(RVA = "0x6C6814", Offset = "0x6C6814", VA = "0x6C6814")]
		[DebuggerHidden]
		public <SpawnCreditsWait>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6002E43")]
		[Address(RVA = "0x6C7B4C", Offset = "0x6C7B4C", VA = "0x6C7B4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E44")]
		[Address(RVA = "0x6C7B50", Offset = "0x6C7B50", VA = "0x6C7B50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E46")]
		[Address(RVA = "0x6C7C5C", Offset = "0x6C7C5C", VA = "0x6C7C5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200068B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B9C4", Offset = "0x39B9C4")]
	private sealed class <SpawnHelppageWait>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40025DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x170004CC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E4B")]
			[Address(RVA = "0x6C7DE4", Offset = "0x6C7DE4", VA = "0x6C7DE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004CD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E4D")]
			[Address(RVA = "0x6C7E64", Offset = "0x6C7E64", VA = "0x6C7E64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E48")]
		[Address(RVA = "0x6C68C4", Offset = "0x6C68C4", VA = "0x6C68C4")]
		[DebuggerHidden]
		public <SpawnHelppageWait>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6002E49")]
		[Address(RVA = "0x6C7CDC", Offset = "0x6C7CDC", VA = "0x6C7CDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E4A")]
		[Address(RVA = "0x6C7CE0", Offset = "0x6C7CE0", VA = "0x6C7CE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E4C")]
		[Address(RVA = "0x6C7DEC", Offset = "0x6C7DEC", VA = "0x6C7DEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200068C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B9D4", Offset = "0x39B9D4")]
	private sealed class <DelayModeStartAndSave>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40025DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40025E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameModes mode;

		[Token(Token = "0x170004CE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E51")]
			[Address(RVA = "0x6C7AC4", Offset = "0x6C7AC4", VA = "0x6C7AC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004CF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E53")]
			[Address(RVA = "0x6C7B44", Offset = "0x6C7B44", VA = "0x6C7B44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E4E")]
		[Address(RVA = "0x6C6B90", Offset = "0x6C6B90", VA = "0x6C6B90")]
		[DebuggerHidden]
		public <DelayModeStartAndSave>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6002E4F")]
		[Address(RVA = "0x6C7908", Offset = "0x6C7908", VA = "0x6C7908", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E50")]
		[Address(RVA = "0x6C790C", Offset = "0x6C790C", VA = "0x6C790C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E52")]
		[Address(RVA = "0x6C7ACC", Offset = "0x6C7ACC", VA = "0x6C7ACC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200068D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B9E4", Offset = "0x39B9E4")]
	private sealed class <CheckForLeftMoveControllerToConnect>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40025E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x170004D0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E57")]
			[Address(RVA = "0x6C7880", Offset = "0x6C7880", VA = "0x6C7880", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E59")]
			[Address(RVA = "0x6C7900", Offset = "0x6C7900", VA = "0x6C7900", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E54")]
		[Address(RVA = "0x6C6CDC", Offset = "0x6C6CDC", VA = "0x6C6CDC")]
		[DebuggerHidden]
		public <CheckForLeftMoveControllerToConnect>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6002E55")]
		[Address(RVA = "0x6C77D8", Offset = "0x6C77D8", VA = "0x6C77D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E56")]
		[Address(RVA = "0x6C77DC", Offset = "0x6C77DC", VA = "0x6C77DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E58")]
		[Address(RVA = "0x6C7888", Offset = "0x6C7888", VA = "0x6C7888", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200068E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39B9F4", Offset = "0x39B9F4")]
	private sealed class <BlinkPleaseConnect2ControllersText>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40025E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x170004D2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E5D")]
			[Address(RVA = "0x6C730C", Offset = "0x6C730C", VA = "0x6C730C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E5F")]
			[Address(RVA = "0x6C738C", Offset = "0x6C738C", VA = "0x6C738C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E5A")]
		[Address(RVA = "0x6C6D68", Offset = "0x6C6D68", VA = "0x6C6D68")]
		[DebuggerHidden]
		public <BlinkPleaseConnect2ControllersText>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6002E5B")]
		[Address(RVA = "0x6C6EA4", Offset = "0x6C6EA4", VA = "0x6C6EA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E5C")]
		[Address(RVA = "0x6C6EA8", Offset = "0x6C6EA8", VA = "0x6C6EA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E5E")]
		[Address(RVA = "0x6C7314", Offset = "0x6C7314", VA = "0x6C7314", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200068F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BA04", Offset = "0x39BA04")]
	private sealed class <BlinkPleaseConnectToInternetText>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40025E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x170004D4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E63")]
			[Address(RVA = "0x6C7750", Offset = "0x6C7750", VA = "0x6C7750", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E65")]
			[Address(RVA = "0x6C77D0", Offset = "0x6C77D0", VA = "0x6C77D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E60")]
		[Address(RVA = "0x6C6DF4", Offset = "0x6C6DF4", VA = "0x6C6DF4")]
		[DebuggerHidden]
		public <BlinkPleaseConnectToInternetText>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6002E61")]
		[Address(RVA = "0x6C7394", Offset = "0x6C7394", VA = "0x6C7394", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E62")]
		[Address(RVA = "0x6C7398", Offset = "0x6C7398", VA = "0x6C7398", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E64")]
		[Address(RVA = "0x6C7758", Offset = "0x6C7758", VA = "0x6C7758", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject steamPrefab;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject playerPrefab;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public NVRInteractableItem fortressGameModeObject;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NVRInteractableItem survivalGameModeObject;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public NVRInteractableItem multiplayerGameModeObject;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] gameModeObjects;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject networkManagerPrefab;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameModes selectedGameMode;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool gameModeHeld;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float gameModeHeldTimeLimit;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float gameModeHeldTimer;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PlayerManager player;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool are2MoveControllersConnected;

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0x6C5414", Offset = "0x6C5414", VA = "0x6C5414")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0x6C587C", Offset = "0x6C587C", VA = "0x6C587C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0x6C61A0", Offset = "0x6C61A0", VA = "0x6C61A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0x6C6510", Offset = "0x6C6510", VA = "0x6C6510")]
	public void GameModeSelected(GameModes mode, GameObject gameModeObject, [Optional] Podium podium)
	{
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0x6C6784", Offset = "0x6C6784", VA = "0x6C6784")]
	public void CreditsDroppedOntoPodium()
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0x6C67A8", Offset = "0x6C67A8", VA = "0x6C67A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A912C", Offset = "0x3A912C")]
	private IEnumerator SpawnCreditsWait()
	{
		return null;
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0x6C6834", Offset = "0x6C6834", VA = "0x6C6834")]
	public void HelppageDroppedOntoPodium()
	{
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0x6C6858", Offset = "0x6C6858", VA = "0x6C6858")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A919C", Offset = "0x3A919C")]
	private IEnumerator SpawnHelppageWait()
	{
		return null;
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0x6C6208", Offset = "0x6C6208", VA = "0x6C6208")]
	public void LoadGameMode(GameModes mode)
	{
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0x6C6B10", Offset = "0x6C6B10", VA = "0x6C6B10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A920C", Offset = "0x3A920C")]
	private IEnumerator DelayModeStartAndSave(GameModes mode)
	{
		return null;
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0x6C6BB0", Offset = "0x6C6BB0", VA = "0x6C6BB0")]
	private void MoveControllerCountCheck()
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0x6C6BB4", Offset = "0x6C6BB4", VA = "0x6C6BB4")]
	private void LeftMoveControllerConnected()
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0x6C6C70", Offset = "0x6C6C70", VA = "0x6C6C70")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A927C", Offset = "0x3A927C")]
	private IEnumerator CheckForLeftMoveControllerToConnect()
	{
		return null;
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0x6C6CFC", Offset = "0x6C6CFC", VA = "0x6C6CFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A92EC", Offset = "0x3A92EC")]
	private IEnumerator BlinkPleaseConnect2ControllersText()
	{
		return null;
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0x6C6D88", Offset = "0x6C6D88", VA = "0x6C6D88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A935C", Offset = "0x3A935C")]
	private IEnumerator BlinkPleaseConnectToInternetText()
	{
		return null;
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0x6C6E14", Offset = "0x6C6E14", VA = "0x6C6E14")]
	public MainMenuManager()
	{
	}
}
[Token(Token = "0x2000157")]
public class MultiplayerBackTriggerButton : NVRInteractableItem
{
	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float initialY;

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0x6CBB1C", Offset = "0x6CBB1C", VA = "0x6CBB1C", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0x6CBB70", Offset = "0x6CBB70", VA = "0x6CBB70", Slot = "11")]
	public override void BeginInteraction(NVRHand hand)
	{
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0x6CBF74", Offset = "0x6CBF74", VA = "0x6CBF74")]
	public MultiplayerBackTriggerButton()
	{
	}
}
[Token(Token = "0x2000158")]
public class MultiplayerConnectModeModel : NVRInteractableItem
{
	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public MultiplayerConnectModes connectMode;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Vector3 originalPosition;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public Vector3 originalRotation;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Tweener tweenerForDOMove;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Tweener tweenerForDORotate;

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0x6CBF7C", Offset = "0x6CBF7C", VA = "0x6CBF7C", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0x6CC010", Offset = "0x6CC010", VA = "0x6CC010")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0x6CC1AC", Offset = "0x6CC1AC", VA = "0x6CC1AC")]
	public bool CheckIfDoneTweening()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0x6CC1FC", Offset = "0x6CC1FC", VA = "0x6CC1FC")]
	public void Activate(bool activate)
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x6CC42C", Offset = "0x6CC42C", VA = "0x6CC42C")]
	public MultiplayerConnectModeModel()
	{
	}
}
[Token(Token = "0x2000159")]
public class MultiplayerManager : SingletonPersistent<MultiplayerManager>
{
	[Token(Token = "0x2000690")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BA14", Offset = "0x39BA14")]
	private sealed class <Retry_ConnectToPhotonRoutine>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40025E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40025E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MultiplayerManager <>4__this;

		[Token(Token = "0x170004D6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E69")]
			[Address(RVA = "0x6D1B4C", Offset = "0x6D1B4C", VA = "0x6D1B4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E6B")]
			[Address(RVA = "0x6D1BCC", Offset = "0x6D1BCC", VA = "0x6D1BCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E66")]
		[Address(RVA = "0x6CED50", Offset = "0x6CED50", VA = "0x6CED50")]
		[DebuggerHidden]
		public <Retry_ConnectToPhotonRoutine>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6002E67")]
		[Address(RVA = "0x6D18B4", Offset = "0x6D18B4", VA = "0x6D18B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E68")]
		[Address(RVA = "0x6D18B8", Offset = "0x6D18B8", VA = "0x6D18B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E6A")]
		[Address(RVA = "0x6D1B54", Offset = "0x6D1B54", VA = "0x6D1B54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000691")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BA24", Offset = "0x39BA24")]
	private sealed class <DelayLoadMainMenu>d__57 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40025EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x170004D8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E6F")]
			[Address(RVA = "0x6D182C", Offset = "0x6D182C", VA = "0x6D182C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E71")]
			[Address(RVA = "0x6D18AC", Offset = "0x6D18AC", VA = "0x6D18AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E6C")]
		[Address(RVA = "0x6D16C0", Offset = "0x6D16C0", VA = "0x6D16C0")]
		[DebuggerHidden]
		public <DelayLoadMainMenu>d__57(int <>1__state)
		{
		}

		[Token(Token = "0x6002E6D")]
		[Address(RVA = "0x6D1768", Offset = "0x6D1768", VA = "0x6D1768", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E6E")]
		[Address(RVA = "0x6D176C", Offset = "0x6D176C", VA = "0x6D176C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E70")]
		[Address(RVA = "0x6D1834", Offset = "0x6D1834", VA = "0x6D1834", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public ExitGames.Client.Photon.Hashtable LastGameStats;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<int> OnDisconnected;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int playerScenesLoaded;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private bool isApplicationQuitting;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PhotonView _photonView;

	[Token(Token = "0x17000162")]
	public int minPlayerCount
	{
		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x6CC434", Offset = "0x6CC434", VA = "0x6CC434")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000163")]
	public int maxPlayerCount
	{
		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x6CC50C", Offset = "0x6CC50C", VA = "0x6CC50C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000164")]
	public PhotonView photonView
	{
		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0x6CC5E4", Offset = "0x6CC5E4", VA = "0x6CC5E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000165")]
	public bool isMasterClient
	{
		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x6CC650", Offset = "0x6CC650", VA = "0x6CC650")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000166")]
	public bool isConnected
	{
		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0x6CC78C", Offset = "0x6CC78C", VA = "0x6CC78C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000167")]
	public bool isInRoom
	{
		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0x6CC800", Offset = "0x6CC800", VA = "0x6CC800")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000168")]
	public PhotonPlayer[] PlayerList
	{
		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0x6CC874", Offset = "0x6CC874", VA = "0x6CC874")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000169")]
	public PhotonPlayer LocalPlayer
	{
		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0x6CC8E8", Offset = "0x6CC8E8", VA = "0x6CC8E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0x6CC95C", Offset = "0x6CC95C", VA = "0x6CC95C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0x6CCA98", Offset = "0x6CCA98", VA = "0x6CCA98")]
	public void Set_PhotonPlayerName()
	{
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0x6CCCA8", Offset = "0x6CCCA8", VA = "0x6CCCA8")]
	public void SetPlayerHeadsetIDAndIP()
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0x6CD028", Offset = "0x6CD028", VA = "0x6CD028")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0x6CD0BC", Offset = "0x6CD0BC", VA = "0x6CD0BC")]
	public void Init()
	{
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0x6CD170", Offset = "0x6CD170", VA = "0x6CD170")]
	public void ConnectToMultiplayerService()
	{
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0x6CD51C", Offset = "0x6CD51C", VA = "0x6CD51C")]
	public void ConnectToLobby()
	{
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0x6CD590", Offset = "0x6CD590", VA = "0x6CD590")]
	public bool JoinRoom(string roomId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0x6CD664", Offset = "0x6CD664", VA = "0x6CD664")]
	public void JoinOrCreateRoom(string roomId)
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0x6CDC1C", Offset = "0x6CDC1C", VA = "0x6CDC1C")]
	public void CreateRoom(bool privateGame, [Optional] string roomName)
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0x6C573C", Offset = "0x6C573C", VA = "0x6C573C")]
	public void JoinRandomMatch()
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0x6C68E4", Offset = "0x6C68E4", VA = "0x6C68E4")]
	public void LeaveRoom()
	{
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0x6CE0B8", Offset = "0x6CE0B8", VA = "0x6CE0B8")]
	public void Disconnect()
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0x6CE138", Offset = "0x6CE138", VA = "0x6CE138")]
	public GameObject SpawnNetworkObject(GameObject prefab, Vector3 position, Quaternion rotation, bool localOnly = false, int group = 0)
	{
		return null;
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0x6CE358", Offset = "0x6CE358", VA = "0x6CE358")]
	public void DestroyNetworkObject(GameObject go)
	{
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0x6CE3D4", Offset = "0x6CE3D4", VA = "0x6CE3D4")]
	public GameObject FindNetworkObject(int viewID)
	{
		return null;
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0x6C56C0", Offset = "0x6C56C0", VA = "0x6C56C0")]
	public void OfflineMode(bool isOffline)
	{
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0x6CE48C", Offset = "0x6CE48C", VA = "0x6CE48C", Slot = "4")]
	public virtual void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0x6CECD0", Offset = "0x6CECD0", VA = "0x6CECD0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A93CC", Offset = "0x3A93CC")]
	private IEnumerator Retry_ConnectToPhotonRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0x6CED70", Offset = "0x6CED70", VA = "0x6CED70")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0x6CEE14", Offset = "0x6CEE14", VA = "0x6CEE14", Slot = "5")]
	public virtual void OnDisconnectedFromPhoton()
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0x6CF0C4", Offset = "0x6CF0C4", VA = "0x6CF0C4", Slot = "6")]
	public virtual void OnCreatedRoom()
	{
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0x6CF410", Offset = "0x6CF410", VA = "0x6CF410", Slot = "7")]
	public virtual void OnJoinedLobby()
	{
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0x6CF76C", Offset = "0x6CF76C", VA = "0x6CF76C")]
	public RoomInfo[] GetRoomsList()
	{
		return null;
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0x6CF7E0", Offset = "0x6CF7E0", VA = "0x6CF7E0")]
	public void GetFriendListStatus(string[] friendNames)
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0x6CFA00", Offset = "0x6CFA00", VA = "0x6CFA00")]
	public void OnUpdatedFriendList()
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0x6CFF88", Offset = "0x6CFF88", VA = "0x6CFF88", Slot = "8")]
	public virtual void OnPhotonRandomJoinFailed()
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0x6D009C", Offset = "0x6D009C", VA = "0x6D009C", Slot = "9")]
	public virtual void OnFailedToConnectToPhoton(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0x6D01E4", Offset = "0x6D01E4", VA = "0x6D01E4")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0x6D0FD0", Offset = "0x6D0FD0", VA = "0x6D0FD0")]
	public void OnPhotonPlayerConnected(PhotonPlayer other)
	{
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0x6D1144", Offset = "0x6D1144", VA = "0x6D1144")]
	public void OnPhotonPlayerDisconnected(PhotonPlayer other)
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0x6D07CC", Offset = "0x6D07CC", VA = "0x6D07CC")]
	public List<SFFriend> UpdatePlayersList()
	{
		return null;
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0x6D1484", Offset = "0x6D1484", VA = "0x6D1484")]
	[PunRPC]
	public void RpcSceneLoaded()
	{
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0x6D1494", Offset = "0x6D1494", VA = "0x6D1494")]
	[PunRPC]
	private void RPCSync_ArenaCommands(int gameMode)
	{
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0x6D1538", Offset = "0x6D1538", VA = "0x6D1538")]
	public bool ToggleVoiceChat()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0x6D1648", Offset = "0x6D1648", VA = "0x6D1648")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0x6D1654", Offset = "0x6D1654", VA = "0x6D1654")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A945C", Offset = "0x3A945C")]
	private IEnumerator DelayLoadMainMenu()
	{
		return null;
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0x6D16E0", Offset = "0x6D16E0", VA = "0x6D16E0")]
	public MultiplayerManager()
	{
	}
}
[Token(Token = "0x200015A")]
public class MultiplayerMenuManager : Singleton<MultiplayerMenuManager>
{
	[Token(Token = "0x2000692")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BA34", Offset = "0x39BA34")]
	private sealed class <Arena_VRClientJoinRoom>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40025ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x170004DA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E75")]
			[Address(RVA = "0x6D4A20", Offset = "0x6D4A20", VA = "0x6D4A20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004DB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E77")]
			[Address(RVA = "0x6D4AA0", Offset = "0x6D4AA0", VA = "0x6D4AA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E72")]
		[Address(RVA = "0x6D2A14", Offset = "0x6D2A14", VA = "0x6D2A14")]
		[DebuggerHidden]
		public <Arena_VRClientJoinRoom>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6002E73")]
		[Address(RVA = "0x6D48D0", Offset = "0x6D48D0", VA = "0x6D48D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E74")]
		[Address(RVA = "0x6D48D4", Offset = "0x6D48D4", VA = "0x6D48D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E76")]
		[Address(RVA = "0x6D4A28", Offset = "0x6D4A28", VA = "0x6D4A28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000693")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BA44", Offset = "0x39BA44")]
	private sealed class <Refresh_Automatic>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40025EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40025F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MultiplayerMenuManager <>4__this;

		[Token(Token = "0x170004DC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E7B")]
			[Address(RVA = "0x6D4F0C", Offset = "0x6D4F0C", VA = "0x6D4F0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E7D")]
			[Address(RVA = "0x6D4F8C", Offset = "0x6D4F8C", VA = "0x6D4F8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E78")]
		[Address(RVA = "0x6D2A34", Offset = "0x6D2A34", VA = "0x6D2A34")]
		[DebuggerHidden]
		public <Refresh_Automatic>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6002E79")]
		[Address(RVA = "0x6D4DC4", Offset = "0x6D4DC4", VA = "0x6D4DC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E7A")]
		[Address(RVA = "0x6D4DC8", Offset = "0x6D4DC8", VA = "0x6D4DC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E7C")]
		[Address(RVA = "0x6D4F14", Offset = "0x6D4F14", VA = "0x6D4F14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000694")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BA54", Offset = "0x39BA54")]
	private sealed class <RefreshRooms_Automatic>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40025F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40025F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MultiplayerMenuManager <>4__this;

		[Token(Token = "0x170004DE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E81")]
			[Address(RVA = "0x6D4D3C", Offset = "0x6D4D3C", VA = "0x6D4D3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004DF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E83")]
			[Address(RVA = "0x6D4DBC", Offset = "0x6D4DBC", VA = "0x6D4DBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E7E")]
		[Address(RVA = "0x6D2A54", Offset = "0x6D2A54", VA = "0x6D2A54")]
		[DebuggerHidden]
		public <RefreshRooms_Automatic>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6002E7F")]
		[Address(RVA = "0x6D4BF4", Offset = "0x6D4BF4", VA = "0x6D4BF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E80")]
		[Address(RVA = "0x6D4BF8", Offset = "0x6D4BF8", VA = "0x6D4BF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E82")]
		[Address(RVA = "0x6D4D44", Offset = "0x6D4D44", VA = "0x6D4D44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000695")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BA64", Offset = "0x39BA64")]
	private sealed class <DelayLoadMainMenu>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40025F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x170004E0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E87")]
			[Address(RVA = "0x6D4B6C", Offset = "0x6D4B6C", VA = "0x6D4B6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004E1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E89")]
			[Address(RVA = "0x6D4BEC", Offset = "0x6D4BEC", VA = "0x6D4BEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E84")]
		[Address(RVA = "0x6D4820", Offset = "0x6D4820", VA = "0x6D4820")]
		[DebuggerHidden]
		public <DelayLoadMainMenu>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6002E85")]
		[Address(RVA = "0x6D4AA8", Offset = "0x6D4AA8", VA = "0x6D4AA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E86")]
		[Address(RVA = "0x6D4AAC", Offset = "0x6D4AAC", VA = "0x6D4AAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E88")]
		[Address(RVA = "0x6D4B74", Offset = "0x6D4B74", VA = "0x6D4B74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action OnPlayerCountChange;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public PhotonView myPhotonView;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject lever;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject playerPrefab;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject arenaSpectatorPrefab;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float spectatorSpawnHeight;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject steamPrefab;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject[] connectionModeObjects;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject findFriendsModeObject;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GameObject podium;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject refreshButton;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public GameObject backButton;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LeverMultiplayerReady multiplayerLever;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private SFFriend currentFriendInvite;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int readyPlayerCount;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Callback<GameRichPresenceJoinRequested_t> steamFriendInviteReceived;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine _autoRefreshRoutine;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Coroutine _autoRefreshRoomsRoutine;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MultiplayerMenuStates currentState;

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0x6D1BD4", Offset = "0x6D1BD4", VA = "0x6D1BD4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0x6D20BC", Offset = "0x6D20BC", VA = "0x6D20BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0x6D27F8", Offset = "0x6D27F8", VA = "0x6D27F8")]
	private void RefreshRooms()
	{
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0x6CEAD8", Offset = "0x6CEAD8", VA = "0x6CEAD8")]
	public void ConnectedToServerArcadeMode()
	{
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0x6D2928", Offset = "0x6D2928", VA = "0x6D2928")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A94CC", Offset = "0x3A94CC")]
	private IEnumerator Arena_VRClientJoinRoom()
	{
		return null;
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0x6D2994", Offset = "0x6D2994", VA = "0x6D2994")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A953C", Offset = "0x3A953C")]
	private IEnumerator Refresh_Automatic()
	{
		return null;
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0x6D2778", Offset = "0x6D2778", VA = "0x6D2778")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A95AC", Offset = "0x3A95AC")]
	private IEnumerator RefreshRooms_Automatic()
	{
		return null;
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0x6D2A74", Offset = "0x6D2A74", VA = "0x6D2A74")]
	private void DelayedTurnOnLaserPointer()
	{
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0x6D2B50", Offset = "0x6D2B50", VA = "0x6D2B50")]
	public void MultiplayerConnectModeSelected(MultiplayerConnectModes mode)
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0x6D2EF0", Offset = "0x6D2EF0", VA = "0x6D2EF0")]
	private void OnFriendInviteReceived(GameRichPresenceJoinRequested_t result)
	{
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0x6D2570", Offset = "0x6D2570", VA = "0x6D2570")]
	public void DisableFriendsGameMode()
	{
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0x6D2D64", Offset = "0x6D2D64", VA = "0x6D2D64")]
	public void GetFriendsList()
	{
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0x6CFE9C", Offset = "0x6CFE9C", VA = "0x6CFE9C")]
	public void FriendListRetrieved(List<SFFriend> friendsList)
	{
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0x6D309C", Offset = "0x6D309C", VA = "0x6D309C")]
	public void InviteFriendToMatch(SFFriend friend)
	{
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0x6D33AC", Offset = "0x6D33AC", VA = "0x6D33AC")]
	public void ActivateLever(bool show)
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0x6CF2D4", Offset = "0x6CF2D4", VA = "0x6CF2D4")]
	public void RoomCreated(string roomID)
	{
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0x6D0D70", Offset = "0x6D0D70", VA = "0x6D0D70")]
	public void PlayerJoinedRoom(List<SFFriend> players)
	{
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0x6D3564", Offset = "0x6D3564", VA = "0x6D3564")]
	public void Load_SceneIfReady()
	{
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0x6D38E0", Offset = "0x6D38E0", VA = "0x6D38E0")]
	public void PlayerLeftRoom(List<SFFriend> players, int playerLeftId)
	{
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0x6CDE88", Offset = "0x6CDE88", VA = "0x6CDE88")]
	public void LeftRoom()
	{
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0x6D3EB8", Offset = "0x6D3EB8", VA = "0x6D3EB8")]
	public void PlayerReady()
	{
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0x6D4278", Offset = "0x6D4278", VA = "0x6D4278")]
	[PunRPC]
	public void RpcPlayerReady(bool ready, int playerId)
	{
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0x6CBCD4", Offset = "0x6CBCD4", VA = "0x6CBCD4")]
	public void BackButtonPressed()
	{
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0x6D45A8", Offset = "0x6D45A8", VA = "0x6D45A8")]
	private void ResetConnectionState()
	{
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0x6D2A78", Offset = "0x6D2A78", VA = "0x6D2A78")]
	private void TurnOnLaserPointer()
	{
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0x6D2630", Offset = "0x6D2630", VA = "0x6D2630")]
	public void ActivateModelObjects(bool activate)
	{
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0x6D349C", Offset = "0x6D349C", VA = "0x6D349C")]
	public void ShowRefreshButton(bool show)
	{
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0x6D47B4", Offset = "0x6D47B4", VA = "0x6D47B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A962C", Offset = "0x3A962C")]
	private IEnumerator DelayLoadMainMenu()
	{
		return null;
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0x6D4840", Offset = "0x6D4840", VA = "0x6D4840")]
	public MultiplayerMenuManager()
	{
	}
}
[Token(Token = "0x200015B")]
public enum MultiplayerMenuStates
{
	[Token(Token = "0x4000A56")]
	Connected,
	[Token(Token = "0x4000A57")]
	InLobby,
	[Token(Token = "0x4000A58")]
	FriendList,
	[Token(Token = "0x4000A59")]
	InRoom
}
[Token(Token = "0x200015C")]
public class MultiplayerRefreshTriggerButton : NVRInteractableItem
{
	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float initialY;

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0x6D4F94", Offset = "0x6D4F94", VA = "0x6D4F94", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0x6D4FE8", Offset = "0x6D4FE8", VA = "0x6D4FE8", Slot = "11")]
	public override void BeginInteraction(NVRHand hand)
	{
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0x6D5144", Offset = "0x6D5144", VA = "0x6D5144")]
	public MultiplayerRefreshTriggerButton()
	{
	}
}
[Token(Token = "0x200015D")]
public class MusicManager : SingletonPersistent<MusicManager>
{
	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public StudioEventEmitter[] musicEmitters;

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0x6D514C", Offset = "0x6D514C", VA = "0x6D514C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0x6C610C", Offset = "0x6C610C", VA = "0x6C610C")]
	public void EnableMusic(bool enable)
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0x6C5E94", Offset = "0x6C5E94", VA = "0x6C5E94")]
	public void ChangeMusic(MusicTypes music)
	{
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0x6D51D8", Offset = "0x6D51D8", VA = "0x6D51D8")]
	public MusicManager()
	{
	}
}
[Token(Token = "0x200015E")]
public enum MusicTypes
{
	[Token(Token = "0x4000A5D")]
	Menu,
	[Token(Token = "0x4000A5E")]
	Battle,
	[Token(Token = "0x4000A5F")]
	RebuildTime,
	[Token(Token = "0x4000A60")]
	Win,
	[Token(Token = "0x4000A61")]
	Prepare,
	[Token(Token = "0x4000A62")]
	LevelSelect
}
[Token(Token = "0x200015F")]
public class NVRButtonMultiplayerBack : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public NVRButtonSnow Button;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float pressTimer;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float pressTimerReset;

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0x6D5260", Offset = "0x6D5260", VA = "0x6D5260")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0x6D535C", Offset = "0x6D535C", VA = "0x6D535C")]
	public NVRButtonMultiplayerBack()
	{
	}
}
[Token(Token = "0x2000160")]
public class NVRButtonMultiplayerRefresh : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public NVRButtonSnow Button;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float pressTimer;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float pressTimerReset;

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0x6D536C", Offset = "0x6D536C", VA = "0x6D536C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0x6D5460", Offset = "0x6D5460", VA = "0x6D5460")]
	public NVRButtonMultiplayerRefresh()
	{
	}
}
[Token(Token = "0x2000161")]
public class NVRHandSnow : NVRHand
{
	[Token(Token = "0x2000696")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BA74", Offset = "0x39BA74")]
	private sealed class <WaitToAllowExtendoUpDown>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40025F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40025F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NVRHandSnow <>4__this;

		[Token(Token = "0x40025F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool extendoIn;

		[Token(Token = "0x170004E2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E8D")]
			[Address(RVA = "0x78D30C", Offset = "0x78D30C", VA = "0x78D30C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004E3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E8F")]
			[Address(RVA = "0x78D38C", Offset = "0x78D38C", VA = "0x78D38C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E8A")]
		[Address(RVA = "0x789C4C", Offset = "0x789C4C", VA = "0x789C4C")]
		[DebuggerHidden]
		public <WaitToAllowExtendoUpDown>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6002E8B")]
		[Address(RVA = "0x78D214", Offset = "0x78D214", VA = "0x78D214", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E8C")]
		[Address(RVA = "0x78D218", Offset = "0x78D218", VA = "0x78D218", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E8E")]
		[Address(RVA = "0x78D314", Offset = "0x78D314", VA = "0x78D314", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000697")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BA84", Offset = "0x39BA84")]
	private sealed class <WaitToAllowExtendoLeftRight>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40025FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40025FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NVRHandSnow <>4__this;

		[Token(Token = "0x40025FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool extendoRight;

		[Token(Token = "0x170004E4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E93")]
			[Address(RVA = "0x78D18C", Offset = "0x78D18C", VA = "0x78D18C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004E5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E95")]
			[Address(RVA = "0x78D20C", Offset = "0x78D20C", VA = "0x78D20C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E90")]
		[Address(RVA = "0x789C6C", Offset = "0x789C6C", VA = "0x789C6C")]
		[DebuggerHidden]
		public <WaitToAllowExtendoLeftRight>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6002E91")]
		[Address(RVA = "0x78D094", Offset = "0x78D094", VA = "0x78D094", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E92")]
		[Address(RVA = "0x78D098", Offset = "0x78D098", VA = "0x78D098", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E94")]
		[Address(RVA = "0x78D194", Offset = "0x78D194", VA = "0x78D194", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000698")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BA94", Offset = "0x39BA94")]
	private sealed class <MultiPulse>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40025FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NVRHandSnow <>4__this;

		[Token(Token = "0x4002601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ushort pulseDuration;

		[Token(Token = "0x4002602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int numPulses;

		[Token(Token = "0x170004E6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E99")]
			[Address(RVA = "0x78D00C", Offset = "0x78D00C", VA = "0x78D00C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004E7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E9B")]
			[Address(RVA = "0x78D08C", Offset = "0x78D08C", VA = "0x78D08C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E96")]
		[Address(RVA = "0x78A738", Offset = "0x78A738", VA = "0x78A738")]
		[DebuggerHidden]
		public <MultiPulse>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6002E97")]
		[Address(RVA = "0x78CF44", Offset = "0x78CF44", VA = "0x78CF44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E98")]
		[Address(RVA = "0x78CF48", Offset = "0x78CF48", VA = "0x78CF48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E9A")]
		[Address(RVA = "0x78D014", Offset = "0x78D014", VA = "0x78D014", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool isLeftHand;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject carrot;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public NVRCanvasInputSnow canvasInputLaserPointerObject;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform blockSpanwerAnchor;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Transform unitSpawnerAnchor;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float timeTillExtendo;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float timeTillSwaptool;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float extendoAmount;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public int maxNumOfExtensions;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int timesToExtendForMainMenu;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x39FC4C", Offset = "0x39FC4C")]
	private float percentOfPadSectionToUse;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform extendoVisual;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[EventRef]
	public string snowballFormingSound;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool holdingSnowball;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	private bool snowBallEnabled;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
	private bool allowExtendoOut;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAB")]
	private bool allowExtendoIn;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool allowExtendLeft;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
	private bool allowExtendRight;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float handNormalZDistance;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int extensionCount;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float touchPadOutAmount;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float touchPadInAmount;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Transform gloveTransform;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float snowballPullbackDistance;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float snowballPullbackRate;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float snowballPullbackMax;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector2 blockRotationVectorBuffer;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float blockRotationMultiplier;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float blockRotationTimer;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float blockRotationStartTime;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public bool performingToolSwap;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private EventInstance snowballSoundInstance;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[HideInInspector]
	public PlayerManager myManager;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public NVRPlayerSnow myNVRPlayer;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private bool canPlayThrowSound;

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0x7869C8", Offset = "0x7869C8", VA = "0x7869C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0x786C80", Offset = "0x786C80", VA = "0x786C80")]
	public void SetupHand()
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0x787494", Offset = "0x787494", VA = "0x787494", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0x789B1C", Offset = "0x789B1C", VA = "0x789B1C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A969C", Offset = "0x3A969C")]
	private IEnumerator WaitToAllowExtendoUpDown(bool extendoIn)
	{
		return null;
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0x789BB4", Offset = "0x789BB4", VA = "0x789BB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A970C", Offset = "0x3A970C")]
	private IEnumerator WaitToAllowExtendoLeftRight(bool extendoRight)
	{
		return null;
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0x789C8C", Offset = "0x789C8C", VA = "0x789C8C")]
	public void HoldSnowball(GameObject snowball, bool inSlingshot)
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0x78A6D4", Offset = "0x78A6D4", VA = "0x78A6D4")]
	public void PlayerHit()
	{
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0x78A730", Offset = "0x78A730", VA = "0x78A730")]
	public void EnableSnowball(bool enable)
	{
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0x78A628", Offset = "0x78A628", VA = "0x78A628")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A977C", Offset = "0x3A977C")]
	public IEnumerator MultiPulse(int numPulses = 5, ushort pulseDuration = 2999)
	{
		return null;
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0x78A758", Offset = "0x78A758", VA = "0x78A758", Slot = "9")]
	protected override void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0x78ABC4", Offset = "0x78ABC4", VA = "0x78ABC4", Slot = "10")]
	protected override void OnTriggerStay(Collider collider)
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0x78AD30", Offset = "0x78AD30", VA = "0x78AD30", Slot = "11")]
	protected override void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0x78B08C", Offset = "0x78B08C", VA = "0x78B08C", Slot = "7")]
	public override void BeginInteraction(NVRInteractable interactable)
	{
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0x78B49C", Offset = "0x78B49C", VA = "0x78B49C", Slot = "8")]
	public override void EndInteraction(NVRInteractable item)
	{
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0x78CBC0", Offset = "0x78CBC0", VA = "0x78CBC0")]
	public void ClearSnowball()
	{
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0x78CBD0", Offset = "0x78CBD0", VA = "0x78CBD0")]
	public void ActivateCarrot(bool activate)
	{
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0x789A7C", Offset = "0x789A7C", VA = "0x789A7C")]
	public void RemoveObjectFromHover(NVRInteractableItem item)
	{
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0x78A8CC", Offset = "0x78A8CC", VA = "0x78A8CC")]
	private void MessageClosestToTween()
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0x78AEA8", Offset = "0x78AEA8", VA = "0x78AEA8")]
	private void MessageHoveringObjectToStopTween(Collider _objectToStop)
	{
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0x78CEB8", Offset = "0x78CEB8", VA = "0x78CEB8")]
	public NVRHandSnow()
	{
	}
}
[Token(Token = "0x2000162")]
public class NVRPlayerSnow : NVRPlayer
{
	[Token(Token = "0x2000699")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BAA4", Offset = "0x39BAA4")]
	private sealed class <WaitAndLogPosition>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NVRPlayerSnow <>4__this;

		[Token(Token = "0x170004E8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E9F")]
			[Address(RVA = "0x78F3C4", Offset = "0x78F3C4", VA = "0x78F3C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004E9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EA1")]
			[Address(RVA = "0x78F444", Offset = "0x78F444", VA = "0x78F444", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E9C")]
		[Address(RVA = "0x78E0B4", Offset = "0x78E0B4", VA = "0x78E0B4")]
		[DebuggerHidden]
		public <WaitAndLogPosition>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002E9D")]
		[Address(RVA = "0x78F228", Offset = "0x78F228", VA = "0x78F228", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E9E")]
		[Address(RVA = "0x78F22C", Offset = "0x78F22C", VA = "0x78F22C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EA0")]
		[Address(RVA = "0x78F3CC", Offset = "0x78F3CC", VA = "0x78F3CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200069A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BAB4", Offset = "0x39BAB4")]
	private sealed class <WaitToResetDiamondPosition>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NVRPlayerSnow <>4__this;

		[Token(Token = "0x170004EA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EA5")]
			[Address(RVA = "0x78F640", Offset = "0x78F640", VA = "0x78F640", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EA7")]
			[Address(RVA = "0x78F6C0", Offset = "0x78F6C0", VA = "0x78F6C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EA2")]
		[Address(RVA = "0x78E324", Offset = "0x78E324", VA = "0x78E324")]
		[DebuggerHidden]
		public <WaitToResetDiamondPosition>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6002EA3")]
		[Address(RVA = "0x78F44C", Offset = "0x78F44C", VA = "0x78F44C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EA4")]
		[Address(RVA = "0x78F450", Offset = "0x78F450", VA = "0x78F450", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EA6")]
		[Address(RVA = "0x78F648", Offset = "0x78F648", VA = "0x78F648", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200069B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BAC4", Offset = "0x39BAC4")]
	private sealed class <DelayResetPositionAndDiamond>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400260A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400260B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NVRPlayerSnow <>4__this;

		[Token(Token = "0x170004EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EAB")]
			[Address(RVA = "0x78F1A0", Offset = "0x78F1A0", VA = "0x78F1A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EAD")]
			[Address(RVA = "0x78F220", Offset = "0x78F220", VA = "0x78F220", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EA8")]
		[Address(RVA = "0x78E704", Offset = "0x78E704", VA = "0x78E704")]
		[DebuggerHidden]
		public <DelayResetPositionAndDiamond>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6002EA9")]
		[Address(RVA = "0x78EB04", Offset = "0x78EB04", VA = "0x78EB04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EAA")]
		[Address(RVA = "0x78EB08", Offset = "0x78EB08", VA = "0x78EB08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EAC")]
		[Address(RVA = "0x78F1A8", Offset = "0x78F1A8", VA = "0x78F1A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	private bool isSetup;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float psvrHeightFloorToCam;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float prevVRResetX;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float prevVRResetZ;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Camera eyeUICamera;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public Camera headCamera;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject spectatorCameraPrefab;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public NormalSpectatorCamera spectCam;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public Transform playAreaDiamond;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float delayBeforeResettingDiamond;

	[Token(Token = "0x4000A97")]
	private const float inchesToMeters = 0.0254f;

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0x78D394", Offset = "0x78D394", VA = "0x78D394")]
	public void Start()
	{
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0x78E034", Offset = "0x78E034", VA = "0x78E034")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A97EC", Offset = "0x3A97EC")]
	private IEnumerator WaitAndLogPosition()
	{
		return null;
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0x78E0D4", Offset = "0x78E0D4", VA = "0x78E0D4")]
	public void SetDiamondPosition(Vector3 newPos)
	{
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0x78DA28", Offset = "0x78DA28", VA = "0x78DA28")]
	public void ResetDiamondPosition()
	{
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0x78E1A0", Offset = "0x78E1A0", VA = "0x78E1A0")]
	public void Reset_SpectatorCameraOrigin(Vector3 newPos)
	{
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0x78E1EC", Offset = "0x78E1EC", VA = "0x78E1EC")]
	public void SetHeadCamera()
	{
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0x78E2A4", Offset = "0x78E2A4", VA = "0x78E2A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A985C", Offset = "0x3A985C")]
	private IEnumerator WaitToResetDiamondPosition()
	{
		return null;
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0x78E344", Offset = "0x78E344", VA = "0x78E344")]
	public void AdjustPlayerPosition(Vector3 _newPos, float _zoomScale, bool _isFortressSnowman = false, bool _isMasterClient = true)
	{
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0x78E488", Offset = "0x78E488", VA = "0x78E488")]
	public void RemoveObjectFromHover(NVRInteractableItem item)
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0x789A78", Offset = "0x789A78", VA = "0x789A78")]
	public void ResetVRPosition()
	{
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0x78E684", Offset = "0x78E684", VA = "0x78E684")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A98CC", Offset = "0x3A98CC")]
	private IEnumerator DelayResetPositionAndDiamond()
	{
		return null;
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0x78E724", Offset = "0x78E724", VA = "0x78E724")]
	public float GetPlayerPrefPSVRHeightInMeters()
	{
		return default(float);
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0x78E7E0", Offset = "0x78E7E0", VA = "0x78E7E0")]
	public void SetPlayerPrefsPSVRHeightWithInches(int inches)
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0x78E9E8", Offset = "0x78E9E8", VA = "0x78E9E8")]
	public int ReturnPSVRHeightInInches()
	{
		return default(int);
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0x78EA7C", Offset = "0x78EA7C", VA = "0x78EA7C")]
	public NVRPlayerSnow()
	{
	}
}
[Token(Token = "0x2000163")]
public class PUNBlockSyncPosRotRigid : Photon.MonoBehaviour
{
	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39FCC0", Offset = "0x39FCC0")]
	public float posSmoothSpeed;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float rotSmoothSpeed;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float scaleSmoothSpeed;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float snapToDistance;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool syncScale;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Transform myTransform;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 mostRecentPos;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion mostRecentRot;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 mostRecentScale;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int scaleCount;

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0xA73A1C", Offset = "0xA73A1C", VA = "0xA73A1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0xA73AF4", Offset = "0xA73AF4", VA = "0xA73AF4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0xA743E4", Offset = "0xA743E4", VA = "0xA743E4")]
	private void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0xA7469C", Offset = "0xA7469C", VA = "0xA7469C")]
	[PunRPC]
	public void RpcSetPositionRotation(Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0xA74748", Offset = "0xA74748", VA = "0xA74748")]
	public PUNBlockSyncPosRotRigid()
	{
	}
}
[Token(Token = "0x2000164")]
public class NormalSpectatorCamera : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float orbitSpeed;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float orbitHeight;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float orbitSpeedIncrement;

	[Token(Token = "0x4000AA5")]
	private const string LOGO_NAME = "/ArcadeLogo.png";

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<Camera> _cameras;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int _cameraIndex;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera _activeCamera;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Camera _VRCamera;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 _orbitCenter;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private Transform _cameraPivot;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _isOrbiting;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _orbitDistance;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Image _logoImage;

	[Token(Token = "0x1700016A")]
	private int CameraIndex
	{
		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x7AC5C8", Offset = "0x7AC5C8", VA = "0x7AC5C8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x7AC5D0", Offset = "0x7AC5D0", VA = "0x7AC5D0")]
		set
		{
		}
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0x7AC678", Offset = "0x7AC678", VA = "0x7AC678")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0x7ACB30", Offset = "0x7ACB30", VA = "0x7ACB30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0x7ACF6C", Offset = "0x7ACF6C", VA = "0x7ACF6C")]
	public void Set_VRCamera(Camera VRCamera)
	{
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0x7ACA7C", Offset = "0x7ACA7C", VA = "0x7ACA7C")]
	public void Reset_Orbit(Vector3 newPosition)
	{
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0x7AD000", Offset = "0x7AD000", VA = "0x7AD000")]
	private bool Load_ArcadeLogo()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0x7AD284", Offset = "0x7AD284", VA = "0x7AD284")]
	public void Toggle_Cameras()
	{
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0x7ACDD0", Offset = "0x7ACDD0", VA = "0x7ACDD0")]
	private void Orbit_Camera()
	{
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0x7ACB4C", Offset = "0x7ACB4C", VA = "0x7ACB4C")]
	private void Get_CameraInputs()
	{
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0x7AD400", Offset = "0x7AD400", VA = "0x7AD400")]
	public NormalSpectatorCamera()
	{
	}
}
[Token(Token = "0x2000165")]
public class OculusRequirementsManager : SingletonPersistent<OculusRequirementsManager>
{
	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action OnOculusPause;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static Action OnOculusUnpause;

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0xA6D800", Offset = "0xA6D800", VA = "0xA6D800")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0xA6D88C", Offset = "0xA6D88C", VA = "0xA6D88C")]
	public OculusRequirementsManager()
	{
	}
}
[Token(Token = "0x2000166")]
public class PSVRBlackOutManager : Singleton<PSVRBlackOutManager>
{
	[Token(Token = "0x200069C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BAD4", Offset = "0x39BAD4")]
	private sealed class <DisableBlackoutTimed>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400260C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400260D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400260E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PSVRBlackOutManager <>4__this;

		[Token(Token = "0x170004EE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EB1")]
			[Address(RVA = "0xA7338C", Offset = "0xA7338C", VA = "0xA7338C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004EF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EB3")]
			[Address(RVA = "0xA7340C", Offset = "0xA7340C", VA = "0xA7340C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EAE")]
		[Address(RVA = "0xA72EFC", Offset = "0xA72EFC", VA = "0xA72EFC")]
		[DebuggerHidden]
		public <DisableBlackoutTimed>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6002EAF")]
		[Address(RVA = "0xA73254", Offset = "0xA73254", VA = "0xA73254", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EB0")]
		[Address(RVA = "0xA73258", Offset = "0xA73258", VA = "0xA73258", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EB2")]
		[Address(RVA = "0xA73394", Offset = "0xA73394", VA = "0xA73394", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200069D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BAE4", Offset = "0x39BAE4")]
	private sealed class <DisableBlakoutCustomTimed>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400260F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float timer;

		[Token(Token = "0x4002612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public PSVRBlackOutManager <>4__this;

		[Token(Token = "0x170004F0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EB7")]
			[Address(RVA = "0xA73540", Offset = "0xA73540", VA = "0xA73540", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EB9")]
			[Address(RVA = "0xA735C0", Offset = "0xA735C0", VA = "0xA735C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EB4")]
		[Address(RVA = "0xA72FC0", Offset = "0xA72FC0", VA = "0xA72FC0")]
		[DebuggerHidden]
		public <DisableBlakoutCustomTimed>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6002EB5")]
		[Address(RVA = "0xA73414", Offset = "0xA73414", VA = "0xA73414", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EB6")]
		[Address(RVA = "0xA73418", Offset = "0xA73418", VA = "0xA73418", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EB8")]
		[Address(RVA = "0xA73548", Offset = "0xA73548", VA = "0xA73548", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200069E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BAF4", Offset = "0x39BAF4")]
	private sealed class <TimedFadeInAndOut>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PSVRBlackOutManager <>4__this;

		[Token(Token = "0x170004F2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EBD")]
			[Address(RVA = "0xA73994", Offset = "0xA73994", VA = "0xA73994", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EBF")]
			[Address(RVA = "0xA73A14", Offset = "0xA73A14", VA = "0xA73A14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EBA")]
		[Address(RVA = "0xA731A0", Offset = "0xA731A0", VA = "0xA731A0")]
		[DebuggerHidden]
		public <TimedFadeInAndOut>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002EBB")]
		[Address(RVA = "0xA735C8", Offset = "0xA735C8", VA = "0xA735C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EBC")]
		[Address(RVA = "0xA735CC", Offset = "0xA735CC", VA = "0xA735CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EBE")]
		[Address(RVA = "0xA7399C", Offset = "0xA7399C", VA = "0xA7399C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float timeToWaitToDisableBlackout;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Camera blackOutCamera;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private ColorOverlay colorOverlay;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Color blackColorForColorOverlay;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color seethruBlackForColorOverlay;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color tempBlinkingBlackForColorOverlay;

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0xA72C28", Offset = "0xA72C28", VA = "0xA72C28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0xA72E50", Offset = "0xA72E50", VA = "0xA72E50")]
	public void EnableBlackoutCamera()
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0xA72DD0", Offset = "0xA72DD0", VA = "0xA72DD0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A994C", Offset = "0x3A994C")]
	public IEnumerator DisableBlackoutTimed()
	{
		return null;
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0xA72F1C", Offset = "0xA72F1C", VA = "0xA72F1C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A99BC", Offset = "0x3A99BC")]
	public IEnumerator DisableBlakoutCustomTimed(float timer)
	{
		return null;
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0xA72FE0", Offset = "0xA72FE0", VA = "0xA72FE0")]
	public void BlinkBlackOut()
	{
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0xA730A4", Offset = "0xA730A4", VA = "0xA730A4")]
	public void FadeInAndOutColorOverlay()
	{
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0xA73120", Offset = "0xA73120", VA = "0xA73120")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A9A2C", Offset = "0x3A9A2C")]
	private IEnumerator TimedFadeInAndOut()
	{
		return null;
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0xA731C0", Offset = "0xA731C0", VA = "0xA731C0")]
	public PSVRBlackOutManager()
	{
	}
}
[Token(Token = "0x2000167")]
public class ParticleSoundTrigger : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200069F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BB04", Offset = "0x39BB04")]
	private sealed class <PlayDelayedSound>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float distance;

		[Token(Token = "0x4002619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ParticleSoundTrigger <>4__this;

		[Token(Token = "0x170004F4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EC3")]
			[Address(RVA = "0xA75574", Offset = "0xA75574", VA = "0xA75574", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EC5")]
			[Address(RVA = "0xA755F4", Offset = "0xA755F4", VA = "0xA755F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EC0")]
		[Address(RVA = "0xA7537C", Offset = "0xA7537C", VA = "0xA7537C")]
		[DebuggerHidden]
		public <PlayDelayedSound>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6002EC1")]
		[Address(RVA = "0xA75414", Offset = "0xA75414", VA = "0xA75414", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EC2")]
		[Address(RVA = "0xA75418", Offset = "0xA75418", VA = "0xA75418", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EC4")]
		[Address(RVA = "0xA7557C", Offset = "0xA7557C", VA = "0xA7557C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[EventRef]
	public string soundToPlay;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ParticleSystem myParticleSystem;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 listenerPosition;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float speedOfSound;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float distance;

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0xA750CC", Offset = "0xA750CC", VA = "0xA750CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0xA75134", Offset = "0xA75134", VA = "0xA75134")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0xA752D8", Offset = "0xA752D8", VA = "0xA752D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A9A9C", Offset = "0x3A9A9C")]
	private IEnumerator PlayDelayedSound(float distance)
	{
		return null;
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0xA7539C", Offset = "0xA7539C", VA = "0xA7539C")]
	public ParticleSoundTrigger()
	{
	}
}
[Token(Token = "0x2000168")]
public class VRManagerSnowPico : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20006A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BB14", Offset = "0x39BB14")]
	private sealed class <SetupVR>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400261A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400261B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x170004F6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EC9")]
			[Address(RVA = "0xA1EA60", Offset = "0xA1EA60", VA = "0xA1EA60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002ECB")]
			[Address(RVA = "0xA1EAE0", Offset = "0xA1EAE0", VA = "0xA1EAE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EC6")]
		[Address(RVA = "0xA1E270", Offset = "0xA1E270", VA = "0xA1E270")]
		[DebuggerHidden]
		public <SetupVR>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6002EC7")]
		[Address(RVA = "0xA1E998", Offset = "0xA1E998", VA = "0xA1E998", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EC8")]
		[Address(RVA = "0xA1E99C", Offset = "0xA1E99C", VA = "0xA1E99C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002ECA")]
		[Address(RVA = "0xA1EA68", Offset = "0xA1EA68", VA = "0xA1EA68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BB24", Offset = "0x39BB24")]
	private sealed class <ShutdownVR>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400261C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400261D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x170004F8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002ECF")]
			[Address(RVA = "0xA1EB98", Offset = "0xA1EB98", VA = "0xA1EB98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002ED1")]
			[Address(RVA = "0xA1EC18", Offset = "0xA1EC18", VA = "0xA1EC18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002ECC")]
		[Address(RVA = "0xA1E880", Offset = "0xA1E880", VA = "0xA1E880")]
		[DebuggerHidden]
		public <ShutdownVR>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002ECD")]
		[Address(RVA = "0xA1EAE8", Offset = "0xA1EAE8", VA = "0xA1EAE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002ECE")]
		[Address(RVA = "0xA1EAEC", Offset = "0xA1EAEC", VA = "0xA1EAEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002ED0")]
		[Address(RVA = "0xA1EBA0", Offset = "0xA1EBA0", VA = "0xA1EBA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BB34", Offset = "0x39BB34")]
	private sealed class <WaitToRunSetupHMDDevice>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400261E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400261F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VRManagerSnowPico <>4__this;

		[Token(Token = "0x170004FA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002ED5")]
			[Address(RVA = "0xA1ED30", Offset = "0xA1ED30", VA = "0xA1ED30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004FB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002ED7")]
			[Address(RVA = "0xA1EDB0", Offset = "0xA1EDB0", VA = "0xA1EDB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002ED2")]
		[Address(RVA = "0xA1E95C", Offset = "0xA1E95C", VA = "0xA1E95C")]
		[DebuggerHidden]
		public <WaitToRunSetupHMDDevice>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6002ED3")]
		[Address(RVA = "0xA1EC20", Offset = "0xA1EC20", VA = "0xA1EC20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002ED4")]
		[Address(RVA = "0xA1EC24", Offset = "0xA1EC24", VA = "0xA1EC24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002ED6")]
		[Address(RVA = "0xA1ED38", Offset = "0xA1ED38", VA = "0xA1ED38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float renderScale;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool showHmdViewOnMonitor;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static VRManagerSnowPico _instance;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private PlayerManager _playerManager;

	[Token(Token = "0x1700016B")]
	public static VRManagerSnowPico instance
	{
		[Token(Token = "0x6000C54")]
		[Address(RVA = "0xA1DF70", Offset = "0xA1DF70", VA = "0xA1DF70")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0xA1E084", Offset = "0xA1E084", VA = "0xA1E084")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0xA1E1DC", Offset = "0xA1E1DC", VA = "0xA1E1DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0xA1E1E0", Offset = "0xA1E1E0", VA = "0xA1E1E0")]
	public void BeginVRSetup()
	{
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0xA1E204", Offset = "0xA1E204", VA = "0xA1E204")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A9B0C", Offset = "0x3A9B0C")]
	private IEnumerator SetupVR()
	{
		return null;
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0xA1E290", Offset = "0xA1E290", VA = "0xA1E290")]
	private void ReconnectHMD()
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0xA1E54C", Offset = "0xA1E54C", VA = "0xA1E54C")]
	public void BeginShutdownVR()
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0xA1E814", Offset = "0xA1E814", VA = "0xA1E814")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A9B7C", Offset = "0x3A9B7C")]
	private IEnumerator ShutdownVR()
	{
		return null;
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0xA1E8A0", Offset = "0xA1E8A0", VA = "0xA1E8A0")]
	public void SetupHMDDevice()
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0xA1E8A4", Offset = "0xA1E8A4", VA = "0xA1E8A4")]
	public void ToggleHMDViewOnMonitor(bool showOnMonitor)
	{
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0xA1E8B4", Offset = "0xA1E8B4", VA = "0xA1E8B4")]
	public void ToggleHMDViewOnMonitor()
	{
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0xA1E8D0", Offset = "0xA1E8D0", VA = "0xA1E8D0")]
	public void ChangeRenderScale(float scale)
	{
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0xA1E8DC", Offset = "0xA1E8DC", VA = "0xA1E8DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A9BEC", Offset = "0x3A9BEC")]
	private IEnumerator WaitToRunSetupHMDDevice()
	{
		return null;
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0xA1E97C", Offset = "0xA1E97C", VA = "0xA1E97C")]
	public VRManagerSnowPico()
	{
	}
}
[Token(Token = "0x2000169")]
public class PlayAreaEnvironmentManager : Singleton<PlayAreaEnvironmentManager>
{
	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject[] signposts;

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0x62B748", Offset = "0x62B748", VA = "0x62B748")]
	public void ShowSignPosts(bool show)
	{
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0x62B878", Offset = "0x62B878", VA = "0x62B878")]
	public PlayAreaEnvironmentManager()
	{
	}
}
[Serializable]
[Token(Token = "0x200016A")]
public class PlayerBlockEntry
{
	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public BlockPropertiesMini blockPropertiesMini;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 blockPos;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 blockRot;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 blockScale;

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0x62B900", Offset = "0x62B900", VA = "0x62B900")]
	public PlayerBlockEntry(BlockPropertiesMini _blockPropertiesMini, Vector3 _blockPos, Vector3 _blockRot, Vector3 _blockScale)
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0x62B960", Offset = "0x62B960", VA = "0x62B960")]
	public void SetBlockVariables(BlockPropertiesMini _blockPropertiesMini, Vector3 _blockPos, Vector3 _blockRot, Vector3 _blockScale)
	{
	}
}
[Token(Token = "0x200016B")]
public class PlayerManager : Photon.MonoBehaviour
{
	[Token(Token = "0x20006A3")]
	public delegate void PlayerScaleChanged(bool isFirstPerson);

	[Token(Token = "0x20006A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BB44", Offset = "0x39BB44")]
	private sealed class <WaitAndLogPosition>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerManager <>4__this;

		[Token(Token = "0x170004FC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EDF")]
			[Address(RVA = "0x8FF630", Offset = "0x8FF630", VA = "0x8FF630", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004FD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EE1")]
			[Address(RVA = "0x8FF6B0", Offset = "0x8FF6B0", VA = "0x8FF6B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EDC")]
		[Address(RVA = "0x8FF458", Offset = "0x8FF458", VA = "0x8FF458")]
		[DebuggerHidden]
		public <WaitAndLogPosition>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6002EDD")]
		[Address(RVA = "0x8FF478", Offset = "0x8FF478", VA = "0x8FF478", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EDE")]
		[Address(RVA = "0x8FF47C", Offset = "0x8FF47C", VA = "0x8FF47C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EE0")]
		[Address(RVA = "0x8FF638", Offset = "0x8FF638", VA = "0x8FF638", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006A5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BB54", Offset = "0x39BB54")]
	private sealed class <WaitAndChangeLocalPosition>d__81 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerManager <>4__this;

		[Token(Token = "0x170004FE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EE5")]
			[Address(RVA = "0x8FF3D0", Offset = "0x8FF3D0", VA = "0x8FF3D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004FF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EE7")]
			[Address(RVA = "0x8FF450", Offset = "0x8FF450", VA = "0x8FF450", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EE2")]
		[Address(RVA = "0x8FF288", Offset = "0x8FF288", VA = "0x8FF288")]
		[DebuggerHidden]
		public <WaitAndChangeLocalPosition>d__81(int <>1__state)
		{
		}

		[Token(Token = "0x6002EE3")]
		[Address(RVA = "0x8FF2A8", Offset = "0x8FF2A8", VA = "0x8FF2A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EE4")]
		[Address(RVA = "0x8FF2AC", Offset = "0x8FF2AC", VA = "0x8FF2AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EE6")]
		[Address(RVA = "0x8FF3D8", Offset = "0x8FF3D8", VA = "0x8FF3D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006A6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BB64", Offset = "0x39BB64")]
	private sealed class <Start_ArenaRespawn>d__152 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerManager <>4__this;

		[Token(Token = "0x17000500")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EEB")]
			[Address(RVA = "0x8FEF3C", Offset = "0x8FEF3C", VA = "0x8FEF3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000501")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EED")]
			[Address(RVA = "0x8FEFBC", Offset = "0x8FEFBC", VA = "0x8FEFBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EE8")]
		[Address(RVA = "0x8FED88", Offset = "0x8FED88", VA = "0x8FED88")]
		[DebuggerHidden]
		public <Start_ArenaRespawn>d__152(int <>1__state)
		{
		}

		[Token(Token = "0x6002EE9")]
		[Address(RVA = "0x8FEDA8", Offset = "0x8FEDA8", VA = "0x8FEDA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EEA")]
		[Address(RVA = "0x8FEDAC", Offset = "0x8FEDAC", VA = "0x8FEDAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EEC")]
		[Address(RVA = "0x8FEF44", Offset = "0x8FEF44", VA = "0x8FEF44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006A7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BB74", Offset = "0x39BB74")]
	private sealed class <UpdateRespawnTimerText>d__153 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400262A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400262B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400262C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float respawnTime;

		[Token(Token = "0x400262D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public PlayerManager <>4__this;

		[Token(Token = "0x400262E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float <duration>5__2;

		[Token(Token = "0x17000502")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EF1")]
			[Address(RVA = "0x8FF200", Offset = "0x8FF200", VA = "0x8FF200", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000503")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EF3")]
			[Address(RVA = "0x8FF280", Offset = "0x8FF280", VA = "0x8FF280", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EEE")]
		[Address(RVA = "0x8FEFC4", Offset = "0x8FEFC4", VA = "0x8FEFC4")]
		[DebuggerHidden]
		public <UpdateRespawnTimerText>d__153(int <>1__state)
		{
		}

		[Token(Token = "0x6002EEF")]
		[Address(RVA = "0x8FEFE4", Offset = "0x8FEFE4", VA = "0x8FEFE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EF0")]
		[Address(RVA = "0x8FEFE8", Offset = "0x8FEFE8", VA = "0x8FEFE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EF2")]
		[Address(RVA = "0x8FF208", Offset = "0x8FF208", VA = "0x8FF208", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<PlayerManager> OnHealthChange;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Color _playerColor;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _playerTeam;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask interactableLayers;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PhotonView myPhotonView;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private string heartUIPrefab;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject localHeadMesh;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public GameObject networkHeadMesh;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform eyeTransform;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public SphereCollider eyeSphereCollider;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CapsuleCollider bodyCapsuleCollider;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool isInvincible;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MeshRenderer frost;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public List<NVRHandSnow> controllers;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public NVRHandSnow leftHand;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public NVRHandSnow rightHand;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int leftHandPhotonID;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int rightHandPhotonID;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public NVRCanvasInputSnow canvasInputLaserPointerObject;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public BodyTrigger body;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<Tool> myTools;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int currentToolIndex;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool holdingSlingshot;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[HideInInspector]
	public float playerZoomScale;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public bool snowballsEnabled;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public AIManager currentUnitOccupied;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private MPHeartDisplay _MPHeartsDisplay;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private MPNameDisplay _MPNameDisplay;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string localLeaderboardName;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private PlayerStats myPlayerStats;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int _multiplayerHeadsetID;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float throwPower;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float snowballThrowPower;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public int pointsForHit2v2;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int pointsFor0HP2v2;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public GameObject vrCameraRigPrefab;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject leftHandPrefab;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public GameObject rightHandPrefab;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject bodyTriggerPrefab;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	protected GameObject vrCameraRigInstance;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool isQuitting;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[HideInInspector]
	public NVRPlayerSnow nvrPlayerSnow;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private List<MeshRenderer> gloveMeshRenderers;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private MeshRenderer localHeadMeshRenderer;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Coroutine _coopRespawnRoutine;

	[Token(Token = "0x1700016C")]
	public static int MaxPlayerHealth
	{
		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x62C104", Offset = "0x62C104", VA = "0x62C104")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700016D")]
	public bool IsFirstPerson
	{
		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x62C234", Offset = "0x62C234", VA = "0x62C234")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700016E")]
	public int PlayerTeam
	{
		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x62C2E0", Offset = "0x62C2E0", VA = "0x62C2E0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x62C2E8", Offset = "0x62C2E8", VA = "0x62C2E8")]
		set
		{
		}
	}

	[Token(Token = "0x1700016F")]
	public int MultiplayerHeadsetID
	{
		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x62C2F0", Offset = "0x62C2F0", VA = "0x62C2F0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000170")]
	public int CurrentScore
	{
		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x62C608", Offset = "0x62C608", VA = "0x62C608")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000171")]
	public int CurrentScoreCOOP
	{
		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x62C628", Offset = "0x62C628", VA = "0x62C628")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000172")]
	public int HighScore
	{
		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x62C648", Offset = "0x62C648", VA = "0x62C648")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000173")]
	public int COOPHighScore
	{
		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x62C668", Offset = "0x62C668", VA = "0x62C668")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000174")]
	public int HighestEndlessWaveReached
	{
		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x62C688", Offset = "0x62C688", VA = "0x62C688")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000175")]
	public int CurrentHealth
	{
		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x62C6A8", Offset = "0x62C6A8", VA = "0x62C6A8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x62C6C8", Offset = "0x62C6C8", VA = "0x62C6C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000176")]
	public int PvPKills
	{
		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x62C89C", Offset = "0x62C89C", VA = "0x62C89C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x62C8BC", Offset = "0x62C8BC", VA = "0x62C8BC")]
		set
		{
		}
	}

	[Token(Token = "0x17000177")]
	public int GetMaxHealth
	{
		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x62C8E0", Offset = "0x62C8E0", VA = "0x62C8E0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000178")]
	public float healthPercent
	{
		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x62C900", Offset = "0x62C900", VA = "0x62C900")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x14000028")]
	public static event PlayerScaleChanged onPlayerScaleChange
	{
		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x62BF74", Offset = "0x62BF74", VA = "0x62BF74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A9C5C", Offset = "0x3A9C5C")]
		add
		{
		}
		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x62C03C", Offset = "0x62C03C", VA = "0x62C03C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A9C6C", Offset = "0x3A9C6C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0x62C94C", Offset = "0x62C94C", VA = "0x62C94C")]
	public void Init()
	{
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0x62D42C", Offset = "0x62D42C", VA = "0x62D42C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0x62E5CC", Offset = "0x62E5CC", VA = "0x62E5CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A9C7C", Offset = "0x3A9C7C")]
	private IEnumerator WaitAndLogPosition()
	{
		return null;
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0x62E550", Offset = "0x62E550", VA = "0x62E550")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A9CEC", Offset = "0x3A9CEC")]
	private IEnumerator WaitAndChangeLocalPosition()
	{
		return null;
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0x62DED0", Offset = "0x62DED0", VA = "0x62DED0")]
	private void CreatePlayerComponents()
	{
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0x62E9C0", Offset = "0x62E9C0", VA = "0x62E9C0")]
	private void FinishComponentsSpawn()
	{
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0x62F62C", Offset = "0x62F62C", VA = "0x62F62C")]
	[PunRPC]
	private void rpcSync_PlayerReady(int viewID)
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0x62F6F8", Offset = "0x62F6F8", VA = "0x62F6F8")]
	public void RegisterGlovePhotonIDs()
	{
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0x62F494", Offset = "0x62F494", VA = "0x62F494")]
	private GameObject SpawnBodyTrigger()
	{
		return null;
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0x62E648", Offset = "0x62E648", VA = "0x62E648")]
	private void ResetFrost()
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0x62E758", Offset = "0x62E758", VA = "0x62E758")]
	public void SetEyeClipPlane()
	{
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0x62CB08", Offset = "0x62CB08", VA = "0x62CB08")]
	protected void SetPlayerStats()
	{
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0x62FC88", Offset = "0x62FC88", VA = "0x62FC88")]
	public void ResetPlayerStats()
	{
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0x62FEEC", Offset = "0x62FEEC", VA = "0x62FEEC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0x6301E8", Offset = "0x6301E8", VA = "0x6301E8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0x6305B8", Offset = "0x6305B8", VA = "0x6305B8")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0x6305C4", Offset = "0x6305C4", VA = "0x6305C4")]
	private void GameOver()
	{
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0x630B48", Offset = "0x630B48", VA = "0x630B48")]
	private void OnRebuildHandler(bool rebuildActive)
	{
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0x630EC4", Offset = "0x630EC4", VA = "0x630EC4")]
	public void RepairTools()
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0x630FE8", Offset = "0x630FE8", VA = "0x630FE8")]
	public void RefillTools()
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0x631170", Offset = "0x631170", VA = "0x631170")]
	public bool ReceiveTool(Tool tool)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0x6317F4", Offset = "0x6317F4", VA = "0x6317F4")]
	public void SwapTool(bool nextTool, bool lastTool = false)
	{
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0x632320", Offset = "0x632320", VA = "0x632320")]
	private NVRHandSnow GetHandToUseForTool()
	{
		return null;
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0x6323DC", Offset = "0x6323DC", VA = "0x6323DC")]
	public void RemoveTool(Tool tool)
	{
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0x632484", Offset = "0x632484", VA = "0x632484")]
	private void LevelEndCleanup()
	{
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0x632958", Offset = "0x632958", VA = "0x632958")]
	public void ClearTools()
	{
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0x6329F8", Offset = "0x6329F8", VA = "0x6329F8")]
	private void SetupGame()
	{
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0x632AC4", Offset = "0x632AC4", VA = "0x632AC4")]
	private void StartGame()
	{
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0x62FB4C", Offset = "0x62FB4C", VA = "0x62FB4C")]
	private void OnUserChange()
	{
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0x632BB8", Offset = "0x632BB8", VA = "0x632BB8")]
	private void AdjustPlayersHP(int activePlayers)
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0x632D90", Offset = "0x632D90", VA = "0x632D90")]
	public void SetThrowPower(float _throwPower, float _snowBallThrowPower)
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0x630E10", Offset = "0x630E10", VA = "0x630E10")]
	public void EnableSnowballs(bool enable)
	{
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0x632D9C", Offset = "0x632D9C", VA = "0x632D9C")]
	public void HitVRPlayer(SnowBallInfo snowball)
	{
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0x632DE0", Offset = "0x632DE0", VA = "0x632DE0")]
	public void DamagePlayer(SnowBallInfo snowball)
	{
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0x634200", Offset = "0x634200", VA = "0x634200")]
	[PunRPC]
	private void RpcReceiveDamage(int newHealth, Vector3 hitLocation, Vector3 snowballForward)
	{
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0x634A9C", Offset = "0x634A9C", VA = "0x634A9C")]
	public void Heal(int hpToHeal, bool fullHeal = false)
	{
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0x635270", Offset = "0x635270", VA = "0x635270")]
	[PunRPC]
	private void rpcSyncHealth(int newHealth)
	{
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0x635274", Offset = "0x635274", VA = "0x635274")]
	private void FadeOutFrost()
	{
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0x635358", Offset = "0x635358", VA = "0x635358")]
	private void TurnOffFrost()
	{
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0x635384", Offset = "0x635384", VA = "0x635384")]
	public void AddPoints(int points)
	{
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0x6353C0", Offset = "0x6353C0", VA = "0x6353C0")]
	public void AddPointsCOOP(int points)
	{
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0x6353FC", Offset = "0x6353FC", VA = "0x6353FC")]
	public void ResetCurrentPoints()
	{
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0x635454", Offset = "0x635454", VA = "0x635454")]
	public void UpdateCurrentPlayerLevel(int newCurrentLevel)
	{
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0x635528", Offset = "0x635528", VA = "0x635528")]
	public void SaveEndlessStats()
	{
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0x63578C", Offset = "0x63578C", VA = "0x63578C")]
	public void SaveCOOPStats()
	{
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0x6359F0", Offset = "0x6359F0", VA = "0x6359F0")]
	public void UpdateStatusOfLevel(int _level, LevelStatus _levelStatus)
	{
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0x635B1C", Offset = "0x635B1C", VA = "0x635B1C")]
	public void UpdateStarsOfLevel(int _level, int _stars)
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0x635C90", Offset = "0x635C90", VA = "0x635C90")]
	public void UpdateStatusOfTool(int _tool, ToolStatus _toolStatus)
	{
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0x635DBC", Offset = "0x635DBC", VA = "0x635DBC")]
	public int GetCurrentLevel()
	{
		return default(int);
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0x635DDC", Offset = "0x635DDC", VA = "0x635DDC")]
	public LevelStatus GetStatusOfLevel(int _level)
	{
		return default(LevelStatus);
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0x635E64", Offset = "0x635E64", VA = "0x635E64")]
	public int GetStarsOfLevel(int _level)
	{
		return default(int);
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0x635EEC", Offset = "0x635EEC", VA = "0x635EEC")]
	public ToolStatus GetStatusOfTool(int _tool)
	{
		return default(ToolStatus);
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0x635F74", Offset = "0x635F74", VA = "0x635F74")]
	public bool HasToolAlready(ToolTypes toolType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0x6360B4", Offset = "0x6360B4", VA = "0x6360B4")]
	public void TurnOnLaserPointer()
	{
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0x636170", Offset = "0x636170", VA = "0x636170")]
	private void DelayedTurnOnLaserPointer()
	{
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0x636370", Offset = "0x636370", VA = "0x636370")]
	public void TurnOffLaserPointer()
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0x6364EC", Offset = "0x6364EC", VA = "0x6364EC")]
	public void SaveCurrentLocalLeaderboardName()
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0x6307EC", Offset = "0x6307EC", VA = "0x6307EC")]
	public void ChangePlayerScale(float newScale, Vector3 newPosition, bool isFortressSnowman = false)
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0x6365A0", Offset = "0x6365A0", VA = "0x6365A0")]
	public void TeleportPlayer(Transform target)
	{
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0x6366F0", Offset = "0x6366F0", VA = "0x6366F0")]
	public void DebugPlayerInvincibleToggle()
	{
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0x636700", Offset = "0x636700", VA = "0x636700")]
	public void CreateSnowball(NVRHandSnow hand, bool inSlingshot, [Optional] Slingshot _slingshot)
	{
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0x637410", Offset = "0x637410", VA = "0x637410")]
	public void PickupObject(NVRInteractable iObject, NVRHandSnow hand)
	{
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0x63770C", Offset = "0x63770C", VA = "0x63770C")]
	[PunRPC]
	private void RpcAttachToHand(int objectId, int gloveId)
	{
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0x637A4C", Offset = "0x637A4C", VA = "0x637A4C")]
	public void ReleaseObject(NVRInteractable iObject, NVRHandSnow hand)
	{
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0x637D80", Offset = "0x637D80", VA = "0x637D80")]
	[PunRPC]
	private void RpcReleaseFromHand(int objectId, int gloveId, Vector3 glovePos)
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0x6381EC", Offset = "0x6381EC", VA = "0x6381EC")]
	public void EnableControllerInput(bool enable)
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0x6381F0", Offset = "0x6381F0", VA = "0x6381F0")]
	public void ToggleHeadAndHandsShadowCast(bool on)
	{
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0x62F888", Offset = "0x62F888", VA = "0x62F888")]
	private Vector2 GetGlovePhotonIDs()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0x62EB6C", Offset = "0x62EB6C", VA = "0x62EB6C")]
	public void Set_ArenaPlayerColorMP()
	{
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0x6381F4", Offset = "0x6381F4", VA = "0x6381F4")]
	[PunRPC]
	private void RpcSyncGlovePhotonIDs(int leftPhotonID, int rightPhotonID)
	{
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0x638200", Offset = "0x638200", VA = "0x638200")]
	[PunRPC]
	private void rpcSync_PlayerColors(int leftPhotonID, int rightPhotonID, float r, float g, float b, string name)
	{
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0x630C88", Offset = "0x630C88", VA = "0x630C88")]
	public void Respawn()
	{
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0x63857C", Offset = "0x63857C", VA = "0x63857C")]
	[PunRPC]
	private void rpcRespawn()
	{
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0x633EC0", Offset = "0x633EC0", VA = "0x633EC0")]
	public void KillPlayer()
	{
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0x6388D4", Offset = "0x6388D4", VA = "0x6388D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A9DDC", Offset = "0x3A9DDC")]
	private IEnumerator Start_ArenaRespawn()
	{
		return null;
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0x638950", Offset = "0x638950", VA = "0x638950")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A9E4C", Offset = "0x3A9E4C")]
	private IEnumerator UpdateRespawnTimerText(float respawnTime)
	{
		return null;
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0x6389F0", Offset = "0x6389F0", VA = "0x6389F0")]
	[PunRPC]
	private void rpcKillPlayer()
	{
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0x62C770", Offset = "0x62C770", VA = "0x62C770")]
	public void Change_Health(int newHealth)
	{
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0x638FF0", Offset = "0x638FF0", VA = "0x638FF0")]
	public PlayerManager()
	{
	}
}
[Token(Token = "0x200016C")]
public class PlayerSpawnPositionsManager : Singleton<PlayerSpawnPositionsManager>
{
	[Serializable]
	[Token(Token = "0x20006A8")]
	public class ModePositions
	{
		[Token(Token = "0x400262F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string name;

		[Token(Token = "0x4002630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public GameModes gameMode;

		[Token(Token = "0x4002631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int variation;

		[Token(Token = "0x4002632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public PlayerSpawnLocations[] playerSpawnLocations;

		[Token(Token = "0x6002EF4")]
		[Address(RVA = "0x9071C4", Offset = "0x9071C4", VA = "0x9071C4")]
		public ModePositions()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20006A9")]
	public class PlayerSpawnLocations
	{
		[Token(Token = "0x4002633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string name;

		[Token(Token = "0x4002634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Transform playerSpawn;

		[Token(Token = "0x4002635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform aiPlayerSpawn;

		[Token(Token = "0x4002636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public SpawnLocations frontFacing;

		[Token(Token = "0x4002637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SpawnLocations full360;

		[Token(Token = "0x4002638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SpawnLocations threeDOF;

		[Token(Token = "0x6002EF5")]
		[Address(RVA = "0x9071CC", Offset = "0x9071CC", VA = "0x9071CC")]
		public PlayerSpawnLocations()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20006AA")]
	public class SpawnLocations
	{
		[Token(Token = "0x4002639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform toolshelf;

		[Token(Token = "0x400263A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Transform blockSpawner;

		[Token(Token = "0x400263B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform unitSpawner;

		[Token(Token = "0x400263C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Transform startingBlocksPos;

		[Token(Token = "0x400263D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform cratePosition;

		[Token(Token = "0x400263E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Transform psvrBlocks;

		[Token(Token = "0x6002EF6")]
		[Address(RVA = "0x9071D4", Offset = "0x9071D4", VA = "0x9071D4")]
		public SpawnLocations()
		{
		}
	}

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform centerToolshelf;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39FD84", Offset = "0x39FD84")]
	public ModePositions[] modeSpawnPositions;

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0x90541C", Offset = "0x90541C", VA = "0x90541C")]
	public Vector3 GetPlayerSpawnPosition(int variation, int playerNumber)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0x90565C", Offset = "0x90565C", VA = "0x90565C")]
	public Quaternion GetPlayerSpawnRotation(int variation, int playerNumber)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0x9056E8", Offset = "0x9056E8", VA = "0x9056E8")]
	public Transform GetPlayerSpawnTransform(int variation, int playerNumber)
	{
		return null;
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0x90574C", Offset = "0x90574C", VA = "0x90574C")]
	public Transform GetBlockSpawnerPos(int variation, int playerNumber)
	{
		return null;
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0x905A3C", Offset = "0x905A3C", VA = "0x905A3C")]
	public Transform GetUnitSpawnerPos(int variation, int playerNumber)
	{
		return null;
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0x905C40", Offset = "0x905C40", VA = "0x905C40")]
	public Transform GetToolshelfPos(int variation, int playerNumber)
	{
		return null;
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0x906038", Offset = "0x906038", VA = "0x906038")]
	public Transform GetStartingBlockPos(int variation, int playerNumber)
	{
		return null;
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0x906328", Offset = "0x906328", VA = "0x906328")]
	public Transform GetAIPlayerSpawnTransform(int variation, int playerNumber)
	{
		return null;
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0x90638C", Offset = "0x90638C", VA = "0x90638C")]
	public Transform GetCratePosTransform(int variation, int playerNumber)
	{
		return null;
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0x90667C", Offset = "0x90667C", VA = "0x90667C")]
	public bool HaveBlockSpawnerTransform(int variation, int playerNumber)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0x9069A8", Offset = "0x9069A8", VA = "0x9069A8")]
	public bool HaveToolShelfTransform(int variation, int playerNumber)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0x906E10", Offset = "0x906E10", VA = "0x906E10")]
	public bool HaveCrateTransform(int variation, int playerNumber)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0x9054A8", Offset = "0x9054A8", VA = "0x9054A8")]
	public ModePositions CurrentModePosition(int variation = 0)
	{
		return null;
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0x90713C", Offset = "0x90713C", VA = "0x90713C")]
	public PlayerSpawnPositionsManager()
	{
	}
}
[Token(Token = "0x200016D")]
public class PlayerStats
{
	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int currentHP;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int maxHP;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int pvpKills;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int currentScore;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int currentCOOPScore;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int highScore;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int COOPHighScore;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int currentLevel;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<LevelStatus> fortLevelStatus;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public List<int> fortLevelStars;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<ToolStatus> toolStatus;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int highestEndlessWave;

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0x9071DC", Offset = "0x9071DC", VA = "0x9071DC")]
	public PlayerStats()
	{
	}
}
[Token(Token = "0x200016E")]
public enum LevelStatus
{
	[Token(Token = "0x4000B03")]
	Locked,
	[Token(Token = "0x4000B04")]
	Unlocked,
	[Token(Token = "0x4000B05")]
	Completed
}
[Token(Token = "0x200016F")]
public enum ToolStatus
{
	[Token(Token = "0x4000B07")]
	Locked,
	[Token(Token = "0x4000B08")]
	Unlocked,
	[Token(Token = "0x4000B09")]
	UsedAndTipSeen
}
[Token(Token = "0x2000170")]
public class TrophyManager : SingletonPersistent<TrophyManager>
{
	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0x56E2D8", Offset = "0x56E2D8", VA = "0x56E2D8")]
	public TrophyManager()
	{
	}
}
[Token(Token = "0x2000171")]
public class VRManagerSnowPSVR : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20006AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BB84", Offset = "0x39BB84")]
	private sealed class <SetupVR>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400263F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VRManagerSnowPSVR <>4__this;

		[Token(Token = "0x17000504")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EFA")]
			[Address(RVA = "0xA1DC18", Offset = "0xA1DC18", VA = "0xA1DC18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000505")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EFC")]
			[Address(RVA = "0xA1DC98", Offset = "0xA1DC98", VA = "0xA1DC98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EF7")]
		[Address(RVA = "0xA1D3BC", Offset = "0xA1D3BC", VA = "0xA1D3BC")]
		[DebuggerHidden]
		public <SetupVR>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6002EF8")]
		[Address(RVA = "0xA1DAE4", Offset = "0xA1DAE4", VA = "0xA1DAE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EF9")]
		[Address(RVA = "0xA1DAE8", Offset = "0xA1DAE8", VA = "0xA1DAE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EFB")]
		[Address(RVA = "0xA1DC20", Offset = "0xA1DC20", VA = "0xA1DC20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BB94", Offset = "0x39BB94")]
	private sealed class <ShutdownVR>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x17000506")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F00")]
			[Address(RVA = "0xA1DD50", Offset = "0xA1DD50", VA = "0xA1DD50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000507")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F02")]
			[Address(RVA = "0xA1DDD0", Offset = "0xA1DDD0", VA = "0xA1DDD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EFD")]
		[Address(RVA = "0xA1D9CC", Offset = "0xA1D9CC", VA = "0xA1D9CC")]
		[DebuggerHidden]
		public <ShutdownVR>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002EFE")]
		[Address(RVA = "0xA1DCA0", Offset = "0xA1DCA0", VA = "0xA1DCA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EFF")]
		[Address(RVA = "0xA1DCA4", Offset = "0xA1DCA4", VA = "0xA1DCA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F01")]
		[Address(RVA = "0xA1DD58", Offset = "0xA1DD58", VA = "0xA1DD58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006AD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BBA4", Offset = "0x39BBA4")]
	private sealed class <WaitToRunSetupHMDDevice>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VRManagerSnowPSVR <>4__this;

		[Token(Token = "0x17000508")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F06")]
			[Address(RVA = "0xA1DEE8", Offset = "0xA1DEE8", VA = "0xA1DEE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000509")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F08")]
			[Address(RVA = "0xA1DF68", Offset = "0xA1DF68", VA = "0xA1DF68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F03")]
		[Address(RVA = "0xA1DAA8", Offset = "0xA1DAA8", VA = "0xA1DAA8")]
		[DebuggerHidden]
		public <WaitToRunSetupHMDDevice>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6002F04")]
		[Address(RVA = "0xA1DDD8", Offset = "0xA1DDD8", VA = "0xA1DDD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F05")]
		[Address(RVA = "0xA1DDDC", Offset = "0xA1DDDC", VA = "0xA1DDDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F07")]
		[Address(RVA = "0xA1DEF0", Offset = "0xA1DEF0", VA = "0xA1DEF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float renderScale;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool showHmdViewOnMonitor;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static VRManagerSnowPSVR _instance;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private PlayerManager _playerManager;

	[Token(Token = "0x17000179")]
	public static VRManagerSnowPSVR instance
	{
		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0xA1D0A8", Offset = "0xA1D0A8", VA = "0xA1D0A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0xA1D1BC", Offset = "0xA1D1BC", VA = "0xA1D1BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0xA1D314", Offset = "0xA1D314", VA = "0xA1D314")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0xA1D318", Offset = "0xA1D318", VA = "0xA1D318")]
	public void BeginVRSetup()
	{
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0xA1D33C", Offset = "0xA1D33C", VA = "0xA1D33C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A9ECC", Offset = "0x3A9ECC")]
	private IEnumerator SetupVR()
	{
		return null;
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0xA1D3DC", Offset = "0xA1D3DC", VA = "0xA1D3DC")]
	private void ReconnectHMD()
	{
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0xA1D698", Offset = "0xA1D698", VA = "0xA1D698")]
	public void BeginShutdownVR()
	{
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0xA1D960", Offset = "0xA1D960", VA = "0xA1D960")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A9F3C", Offset = "0x3A9F3C")]
	private IEnumerator ShutdownVR()
	{
		return null;
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0xA1D9EC", Offset = "0xA1D9EC", VA = "0xA1D9EC")]
	public void SetupHMDDevice()
	{
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0xA1D9F0", Offset = "0xA1D9F0", VA = "0xA1D9F0")]
	public void ToggleHMDViewOnMonitor(bool showOnMonitor)
	{
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0xA1DA00", Offset = "0xA1DA00", VA = "0xA1DA00")]
	public void ToggleHMDViewOnMonitor()
	{
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0xA1DA1C", Offset = "0xA1DA1C", VA = "0xA1DA1C")]
	public void ChangeRenderScale(float scale)
	{
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0xA1DA28", Offset = "0xA1DA28", VA = "0xA1DA28")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3A9FAC", Offset = "0x3A9FAC")]
	private IEnumerator WaitToRunSetupHMDDevice()
	{
		return null;
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0xA1DAC8", Offset = "0xA1DAC8", VA = "0xA1DAC8")]
	public VRManagerSnowPSVR()
	{
	}
}
[Token(Token = "0x2000172")]
public class Podium : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20006AE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BBB4", Offset = "0x39BBB4")]
	private sealed class <DelayedLoadLevel>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int levelnumber;

		[Token(Token = "0x400264A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public FortressSave save;

		[Token(Token = "0x1700050A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F0C")]
			[Address(RVA = "0x9080BC", Offset = "0x9080BC", VA = "0x9080BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700050B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F0E")]
			[Address(RVA = "0x90813C", Offset = "0x90813C", VA = "0x90813C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F09")]
		[Address(RVA = "0x907F84", Offset = "0x907F84", VA = "0x907F84")]
		[DebuggerHidden]
		public <DelayedLoadLevel>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6002F0A")]
		[Address(RVA = "0x907FAC", Offset = "0x907FAC", VA = "0x907FAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F0B")]
		[Address(RVA = "0x907FB0", Offset = "0x907FB0", VA = "0x907FB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F0D")]
		[Address(RVA = "0x9080C4", Offset = "0x9080C4", VA = "0x9080C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private BoxCollider podiumCollider;

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0x907504", Offset = "0x907504", VA = "0x907504")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0x907564", Offset = "0x907564", VA = "0x907564")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0x907590", Offset = "0x907590", VA = "0x907590")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0x907F58", Offset = "0x907F58", VA = "0x907F58")]
	public void TurnOffPodiumCollider()
	{
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0x907EC0", Offset = "0x907EC0", VA = "0x907EC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AA01C", Offset = "0x3AA01C")]
	private IEnumerator DelayedLoadLevel(int levelnumber, FortressSave save)
	{
		return null;
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0x907FA4", Offset = "0x907FA4", VA = "0x907FA4")]
	public Podium()
	{
	}
}
[Token(Token = "0x2000173")]
public class PowerupBlockSpawner : Singleton<PowerupBlockSpawner>
{
	[Token(Token = "0x20006AF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BBC4", Offset = "0x39BBC4")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x400264B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int wave;

		[Token(Token = "0x6002F0F")]
		[Address(RVA = "0x9095AC", Offset = "0x9095AC", VA = "0x9095AC")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6002F10")]
		[Address(RVA = "0x90978C", Offset = "0x90978C", VA = "0x90978C")]
		internal bool <SpawnPowerupBlocks>b__0(SpawnPoint x)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x20006B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BBD4", Offset = "0x39BBD4")]
	private sealed class <>c
	{
		[Token(Token = "0x400264C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400264D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static Predicate<SpawnPoint> <>9__3_1;

		[Token(Token = "0x6002F12")]
		[Address(RVA = "0x909774", Offset = "0x909774", VA = "0x909774")]
		public <>c()
		{
		}

		[Token(Token = "0x6002F13")]
		[Address(RVA = "0x90977C", Offset = "0x90977C", VA = "0x90977C")]
		internal bool <SpawnPowerupBlocks>b__3_1(SpawnPoint x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20006B1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BBE4", Offset = "0x39BBE4")]
	private sealed class <DelayedDestroyBlock>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400264E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400264F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float delay;

		[Token(Token = "0x4002651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Block block;

		[Token(Token = "0x1700050C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F17")]
			[Address(RVA = "0x9098B8", Offset = "0x9098B8", VA = "0x9098B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700050D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F19")]
			[Address(RVA = "0x909938", Offset = "0x909938", VA = "0x909938", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F14")]
		[Address(RVA = "0x909658", Offset = "0x909658", VA = "0x909658")]
		[DebuggerHidden]
		public <DelayedDestroyBlock>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6002F15")]
		[Address(RVA = "0x9097A0", Offset = "0x9097A0", VA = "0x9097A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F16")]
		[Address(RVA = "0x9097A4", Offset = "0x9097A4", VA = "0x9097A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F18")]
		[Address(RVA = "0x9098C0", Offset = "0x9098C0", VA = "0x9098C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float powerupLifespanMultiplier;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject[] powerupBlockTowerPrefabs;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public SpawnPoint[] blockSpawnPoints;

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0x908BD8", Offset = "0x908BD8", VA = "0x908BD8")]
	public void SpawnPowerupBlocks(int wave)
	{
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0x9095B4", Offset = "0x9095B4", VA = "0x9095B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AA08C", Offset = "0x3AA08C")]
	private IEnumerator DelayedDestroyBlock(float delay, Block block)
	{
		return null;
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0x909678", Offset = "0x909678", VA = "0x909678")]
	public PowerupBlockSpawner()
	{
	}
}
[Token(Token = "0x2000174")]
public class PowerupBlockSpawnerMPSelector : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private GameObject _powerupSpawnsPVP;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private GameObject _powerupSpawnsCOOP;

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0x909940", Offset = "0x909940", VA = "0x909940")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0x9099F4", Offset = "0x9099F4", VA = "0x9099F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0x909AA8", Offset = "0x909AA8", VA = "0x909AA8")]
	public void Set_Spawns()
	{
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0x909CD8", Offset = "0x909CD8", VA = "0x909CD8")]
	public PowerupBlockSpawnerMPSelector()
	{
	}
}
[Token(Token = "0x2000175")]
public class RangleCircleManager : Singleton<RangleCircleManager>
{
	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Projector myProjector;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Transform myTransform;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Transform targetTransform;

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0x81A398", Offset = "0x81A398", VA = "0x81A398")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0x81A3D4", Offset = "0x81A3D4", VA = "0x81A3D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0x81A454", Offset = "0x81A454", VA = "0x81A454")]
	public void ShowRangeCircle(bool show, Transform target, Color color, float range)
	{
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0x81A580", Offset = "0x81A580", VA = "0x81A580")]
	public RangleCircleManager()
	{
	}
}
[Token(Token = "0x2000176")]
public class ReleaseCollider : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[EventRef]
	public string slingshotReleaseSound;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Slingshot mySlingshot;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Collider lastReleasedObject;

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0x81B0DC", Offset = "0x81B0DC", VA = "0x81B0DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0x81B174", Offset = "0x81B174", VA = "0x81B174")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0x81B2A8", Offset = "0x81B2A8", VA = "0x81B2A8")]
	private void Release(Collider other)
	{
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0x81B5AC", Offset = "0x81B5AC", VA = "0x81B5AC")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0x81B6E0", Offset = "0x81B6E0", VA = "0x81B6E0")]
	public ReleaseCollider()
	{
	}
}
[Token(Token = "0x2000177")]
public class SceneLoadingManager : SingletonPersistent<SceneLoadingManager>
{
	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string sceneToLoad;

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0x82062C", Offset = "0x82062C", VA = "0x82062C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0x8206B4", Offset = "0x8206B4", VA = "0x8206B4")]
	public void LoadSceneWithLoadingScene(string _sceneToLoad)
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0x820718", Offset = "0x820718", VA = "0x820718")]
	public SceneLoadingManager()
	{
	}
}
[Token(Token = "0x2000178")]
public class ScoreSubmitTriggerButton : NVRInteractableItem
{
	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0x821F08", Offset = "0x821F08", VA = "0x821F08", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0x821F10", Offset = "0x821F10", VA = "0x821F10", Slot = "11")]
	public override void BeginInteraction(NVRHand hand)
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0x8221D4", Offset = "0x8221D4", VA = "0x8221D4")]
	public ScoreSubmitTriggerButton()
	{
	}
}
[Token(Token = "0x2000179")]
public class Shield : Tool
{
	[Token(Token = "0x6000D01")]
	[Address(RVA = "0x823220", Offset = "0x823220", VA = "0x823220", Slot = "11")]
	public override void BeginInteraction(NVRHand hand)
	{
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0x823308", Offset = "0x823308", VA = "0x823308")]
	public void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0x82345C", Offset = "0x82345C", VA = "0x82345C", Slot = "32")]
	protected override void OnDestroyed()
	{
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0x823464", Offset = "0x823464", VA = "0x823464")]
	public Shield()
	{
	}
}
[Token(Token = "0x200017A")]
public class Slingshot : Tool
{
	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float slingshotSpringStrength;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float slingshotPower;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[EventRef]
	public string slingshotPullSound;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public Transform attachPoint;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Transform ropeMidPoint;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private NVRHandSnow snowballHand;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool pullingRope;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private EventInstance slingshotPullSoundInstance;

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0x6F74C8", Offset = "0x6F74C8", VA = "0x6F74C8", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0x6F7680", Offset = "0x6F7680", VA = "0x6F7680", Slot = "11")]
	public override void BeginInteraction(NVRHand hand)
	{
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0x6F7898", Offset = "0x6F7898", VA = "0x6F7898", Slot = "14")]
	public override void EndInteraction(NVRHand hand)
	{
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0x6F8918", Offset = "0x6F8918", VA = "0x6F8918", Slot = "22")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0x6F8FA0", Offset = "0x6F8FA0", VA = "0x6F8FA0", Slot = "21")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0x6F919C", Offset = "0x6F919C", VA = "0x6F919C")]
	public Slingshot()
	{
	}
}
[Token(Token = "0x200017B")]
public class SnowCannon : Tool
{
	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float launchSpeed;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public Transform launchPoint;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform ammoCounterAnchorPoint;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public int ammoCount;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject ammoIndicator;

	[Token(Token = "0x4000B28")]
	public const int startingAmmoCountCOOP = 10;

	[Token(Token = "0x4000B29")]
	public const int startingAmmoCountPVP = 5;

	[Token(Token = "0x4000B2A")]
	public const int startingAmmoCountSP = 20;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private int maxAmmoCount;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Recorder snowCannonRecorder;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private string snowCannonRecorderString;

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0x6F98F8", Offset = "0x6F98F8", VA = "0x6F98F8", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0x6F99FC", Offset = "0x6F99FC", VA = "0x6F99FC", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0x6F9B28", Offset = "0x6F9B28", VA = "0x6F9B28", Slot = "11")]
	public override void BeginInteraction(NVRHand hand)
	{
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0x6F9B48", Offset = "0x6F9B48", VA = "0x6F9B48", Slot = "14")]
	public override void EndInteraction(NVRHand hand)
	{
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0x6F9B68", Offset = "0x6F9B68", VA = "0x6F9B68")]
	public void Fire()
	{
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0x6FA8DC", Offset = "0x6FA8DC", VA = "0x6FA8DC")]
	[PunRPC]
	private void rpcSyncFiring(int ammo)
	{
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0x6FAB08", Offset = "0x6FAB08", VA = "0x6FAB08", Slot = "17")]
	public override void UseButtonDown()
	{
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0x6FAB28", Offset = "0x6FAB28", VA = "0x6FAB28", Slot = "31")]
	public override void RefillTool()
	{
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0x6FAC04", Offset = "0x6FAC04", VA = "0x6FAC04")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0x6FAC08", Offset = "0x6FAC08", VA = "0x6FAC08")]
	private void LoadAmmo(Collider other)
	{
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0x6FB0E0", Offset = "0x6FB0E0", VA = "0x6FB0E0")]
	[PunRPC]
	private void rpcSyncReloading(int ammo, Vector3 fxPos)
	{
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0x6FB314", Offset = "0x6FB314", VA = "0x6FB314", Slot = "30")]
	protected override void DestroyTool()
	{
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0x6FB3C4", Offset = "0x6FB3C4", VA = "0x6FB3C4", Slot = "32")]
	protected override void OnDestroyed()
	{
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0x6FB474", Offset = "0x6FB474", VA = "0x6FB474")]
	public SnowCannon()
	{
	}
}
[Token(Token = "0x200017C")]
public class Snowball : NVRInteractableItem
{
	[Token(Token = "0x20006B2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BBF4", Offset = "0x39BBF4")]
	private sealed class <GrowBalls>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Snowball <>4__this;

		[Token(Token = "0x4002655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <size>5__2;

		[Token(Token = "0x1700050E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F1D")]
			[Address(RVA = "0x700390", Offset = "0x700390", VA = "0x700390", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700050F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F1F")]
			[Address(RVA = "0x700410", Offset = "0x700410", VA = "0x700410", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F1A")]
		[Address(RVA = "0x6FD008", Offset = "0x6FD008", VA = "0x6FD008")]
		[DebuggerHidden]
		public <GrowBalls>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6002F1B")]
		[Address(RVA = "0x6FFDAC", Offset = "0x6FFDAC", VA = "0x6FFDAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F1C")]
		[Address(RVA = "0x6FFDB0", Offset = "0x6FFDB0", VA = "0x6FFDB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F1E")]
		[Address(RVA = "0x700398", Offset = "0x700398", VA = "0x700398", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20006B3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BC04", Offset = "0x39BC04")]
	private sealed class <>c
	{
		[Token(Token = "0x4002656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static Func<NVRHandSnow, bool> <>9__38_0;

		[Token(Token = "0x4002658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<NVRHandSnow, bool> <>9__38_1;

		[Token(Token = "0x6002F21")]
		[Address(RVA = "0x6FFD5C", Offset = "0x6FFD5C", VA = "0x6FFD5C")]
		public <>c()
		{
		}

		[Token(Token = "0x6002F22")]
		[Address(RVA = "0x6FFD64", Offset = "0x6FFD64", VA = "0x6FFD64")]
		internal bool <RpcSetupClient>b__38_0(NVRHandSnow x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F23")]
		[Address(RVA = "0x6FFD84", Offset = "0x6FFD84", VA = "0x6FFD84")]
		internal bool <RpcSetupClient>b__38_1(NVRHandSnow x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int playerOwnerId;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public PhotonView myPhotonView;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool isLeftHand;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	public bool isHeld;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x96")]
	public bool isGrowing;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x97")]
	public bool isInSling;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float breakVelocity;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float lifeTimeLimit;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int teamID;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float lifeTime;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Rigidbody myRigidbody;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Transform myTransform;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 origionalScale;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private NVRHandSnow myHoldingHand;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool usedUp;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool isSofaPlayer;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private TrailRenderer trailRenderer;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public EventInstance snowballFlyingSoundInstance;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public PLAYBACK_STATE snowballFlyingSoundState;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private ParticleSystem _particleSystem;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private NVRHandSnow[] _hands;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private GameMode gameModeInstance;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private readonly string[] _analyticsStrings;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private readonly string _destroySnowballString;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private Recorder snowBallSetupRecorder;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private string snowBallSetupRecorderString;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Recorder snowBallThrowRecorder;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private string snowBallThrowRecorderString;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Recorder snowBallCollisionRecorder;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private string snowBallCollisionRecorderString;

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0x6FC650", Offset = "0x6FC650", VA = "0x6FC650", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0x6FCA04", Offset = "0x6FCA04", VA = "0x6FCA04", Slot = "10")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0x6FCF88", Offset = "0x6FCF88", VA = "0x6FCF88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AA11C", Offset = "0x3AA11C")]
	private IEnumerator GrowBalls()
	{
		return null;
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0x6FD028", Offset = "0x6FD028", VA = "0x6FD028")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0x6FD15C", Offset = "0x6FD15C", VA = "0x6FD15C")]
	[PunRPC]
	private void RpcGrowSnowball(bool grow)
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0x6F82FC", Offset = "0x6F82FC", VA = "0x6F82FC")]
	public void ReleaseFromSlingshotLocal()
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0x6FD164", Offset = "0x6FD164", VA = "0x6FD164")]
	[PunRPC]
	private void RpcReleaseFromSlingshot(Vector3 position, Quaternion rotation, Vector3 velocity, Vector3 angularVelocity)
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0x6FA4F4", Offset = "0x6FA4F4", VA = "0x6FA4F4")]
	public void SetupSnowball(GameObject owner, bool fromPlayer, bool inSlingshot, bool fromCannon = false, bool _isSofaPlayer = false)
	{
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0x6FD4A8", Offset = "0x6FD4A8", VA = "0x6FD4A8")]
	[PunRPC]
	public void RpcSetupClient(float size, int newLayer, int ownerId, bool fromCannon = false)
	{
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0x6FDAB4", Offset = "0x6FDAB4", VA = "0x6FDAB4")]
	[PunRPC]
	public void RpcSetSize(float newSize)
	{
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0x6FD95C", Offset = "0x6FD95C", VA = "0x6FD95C")]
	private void SetSizeAndWeight(float newSize)
	{
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0x6FDAB8", Offset = "0x6FDAB8", VA = "0x6FDAB8")]
	[PunRPC]
	public void RpcSetSizeAndOverrideMass(float newSize, float newMass)
	{
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0x6FDBA8", Offset = "0x6FDBA8", VA = "0x6FDBA8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0x6FE844", Offset = "0x6FE844", VA = "0x6FE844")]
	[PunRPC]
	private void RpcHit(int hitObjectId, float mass)
	{
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0x6FEA2C", Offset = "0x6FEA2C", VA = "0x6FEA2C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0x6F7988", Offset = "0x6F7988", VA = "0x6F7988")]
	public void Throw()
	{
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0x6FF50C", Offset = "0x6FF50C", VA = "0x6FF50C")]
	[PunRPC]
	private void RpcThrow(Vector3 pos, Quaternion rot, Vector3 velo, Vector3 angularVelo)
	{
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0x6FF7C0", Offset = "0x6FF7C0", VA = "0x6FF7C0")]
	public void Catch()
	{
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0x6FF848", Offset = "0x6FF848", VA = "0x6FF848")]
	public bool AllowedToGrabAfterCreated()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0x6FF90C", Offset = "0x6FF90C", VA = "0x6FF90C")]
	private void DestroySnowball_RebuildMode(bool isRebuild)
	{
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0x6FCB98", Offset = "0x6FCB98", VA = "0x6FCB98")]
	private void DestroySnowball()
	{
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0x6FF918", Offset = "0x6FF918", VA = "0x6FF918", Slot = "21")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0x6FFB00", Offset = "0x6FFB00", VA = "0x6FFB00")]
	public Snowball()
	{
	}
}
[Token(Token = "0x200017D")]
public struct SnowBallInfo
{
	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int playerOwnerID;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float snowballMass;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Vector3 HitLocation;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 Forward;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int teamID;

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0x457420", Offset = "0x457420", VA = "0x457420")]
	public SnowBallInfo(int ID, float mass, Vector3 hitLocation, Vector3 forward, int team)
	{
	}
}
[Token(Token = "0x200017E")]
public class SnowballLauncher : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private int ownerId;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float throwInterval;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float randomTimingOffset;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 randomPosOffset;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float firingAngle;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float snowballMass;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxThrowDistance;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float timeToTargetModifer;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform myTransform;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public Transform myTarget;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float timeToTarget;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float distanceToTarget;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AIManager myManager;

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0x700418", Offset = "0x700418", VA = "0x700418")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0x700434", Offset = "0x700434", VA = "0x700434")]
	public void Throw()
	{
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0x700E80", Offset = "0x700E80", VA = "0x700E80")]
	public void SetupLauncher(AIManager manager, Vector2 posOffset, float interval, float mass, float maxThrow, float timeTarget, int netID)
	{
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0x700CF0", Offset = "0x700CF0", VA = "0x700CF0")]
	private Vector3 CalculateBestThrowSpeed(Vector3 origin, Vector3 target, float timeToTarget)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0x700F74", Offset = "0x700F74", VA = "0x700F74")]
	public void SetTarget(Transform target)
	{
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0x700F7C", Offset = "0x700F7C", VA = "0x700F7C")]
	public SnowballLauncher()
	{
	}
}
[Token(Token = "0x200017F")]
public class SnowmanSpawner : Singleton<SnowmanSpawner>
{
	[Token(Token = "0x20006B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BC14", Offset = "0x39BC14")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x4002659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int waveIndex;

		[Token(Token = "0x6002F24")]
		[Address(RVA = "0x7024B4", Offset = "0x7024B4", VA = "0x7024B4")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x6002F25")]
		[Address(RVA = "0x702550", Offset = "0x702550", VA = "0x702550")]
		internal bool <SpawnEnemy>b__0(SpawnPoint x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject[] snowmenPrefabs;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform[] randomWayPoints;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float spawnPointRadiusToCheck;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public SpawnPoint[] spawnPoints;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int[] currentSpawnCount;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int[] unitLimit;

	[Token(Token = "0x1700017A")]
	public bool IsSpawnLimitReached
	{
		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x700FF4", Offset = "0x700FF4", VA = "0x700FF4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0x701170", Offset = "0x701170", VA = "0x701170")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0x701224", Offset = "0x701224", VA = "0x701224")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0x7012D8", Offset = "0x7012D8", VA = "0x7012D8")]
	public void SetupSpawner()
	{
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0x7014AC", Offset = "0x7014AC", VA = "0x7014AC")]
	public bool SpawnEnemy(Wave currentWave, int waveIndex, int amountToSpawn)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0x7024BC", Offset = "0x7024BC", VA = "0x7024BC")]
	public SnowmanSpawner()
	{
	}
}
[Serializable]
[Token(Token = "0x2000180")]
public struct SpawnPoint
{
	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform pointTransform;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int minimumWave;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Transform[] wayPoints;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public EnemyTypes enemy;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool useIn3DOF;
}
[Token(Token = "0x2000181")]
public class SofaPlayerFortPrefabScript : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x39FE18", Offset = "0x39FE18")]
	public GameObject[] blocksInOrder;

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0x70A90C", Offset = "0x70A90C", VA = "0x70A90C")]
	public int GetTotalAmountOfBlocksInFort()
	{
		return default(int);
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0x70A92C", Offset = "0x70A92C", VA = "0x70A92C")]
	public SofaPlayerFortPrefabScript()
	{
	}
}
[Token(Token = "0x2000182")]
public class SofaPlayerPositionsManager : Singleton<SofaPlayerPositionsManager>
{
	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x39FE4C", Offset = "0x39FE4C")]
	public int numberOfSofaPlayerPositions;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SofaClientManager sofaClientManager;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float distanceBetweenSpots;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float angleOfSidePlayers;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float timesOfDistanceToSpot3;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PositionSpots[] sofaPlayerPositionSpots;

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0x70A934", Offset = "0x70A934", VA = "0x70A934")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0x6FC564", Offset = "0x6FC564", VA = "0x6FC564")]
	public Vector3 GetSpotInPositionToJumpTo(int _newPos, ref ushort _setCurrentSpot)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0x6FC500", Offset = "0x6FC500", VA = "0x6FC500")]
	public void SetCurrentSpotBackToAvailable(int _curPos, ushort _curSpot)
	{
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0x70AC68", Offset = "0x70AC68", VA = "0x70AC68")]
	public void ResetAllAvailableSpots()
	{
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0x70ACE8", Offset = "0x70ACE8", VA = "0x70ACE8")]
	public SofaPlayerPositionsManager()
	{
	}
}
[Token(Token = "0x2000183")]
public class PositionSpots
{
	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Vector3[] spots;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public ushort availableSpots;

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0x9084BC", Offset = "0x9084BC", VA = "0x9084BC")]
	public PositionSpots(Vector3 _forward, float _distFromZeroToSpawn, float _distBetweenSpots, float _angleOfSidePlayers)
	{
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0x908AF8", Offset = "0x908AF8", VA = "0x908AF8")]
	public void SetSpotAvailability(ushort _spot, bool _available)
	{
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0x908B20", Offset = "0x908B20", VA = "0x908B20")]
	public Vector3 ReturnClosestToPositionAvailableSpot(ref ushort _availableSpot)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0x908BCC", Offset = "0x908BCC", VA = "0x908BCC")]
	public void ResetAvailableSpots()
	{
	}
}
[Token(Token = "0x2000184")]
public class SofaPlayersFortManager : Singleton<SofaPlayersFortManager>
{
	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform[] fortPositions;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x39FE80", Offset = "0x39FE80")]
	public GameObject[] fortPrefabs;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private List<FortAtSpotClass> fortAtSpotClassList;

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0x70AD90", Offset = "0x70AD90", VA = "0x70AD90")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0x70AE40", Offset = "0x70AE40", VA = "0x70AE40")]
	private void SetFortAtSpotList()
	{
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0x70AF98", Offset = "0x70AF98", VA = "0x70AF98")]
	public int FindClosestFortToSofaPlayer(Vector3 pos)
	{
		return default(int);
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0x70B1D4", Offset = "0x70B1D4", VA = "0x70B1D4")]
	public Transform GetFortPositionForParenting(int fortNumber)
	{
		return null;
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0x70B214", Offset = "0x70B214", VA = "0x70B214")]
	public GameObject GetNextBlockForFort(int fortNumber)
	{
		return null;
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0x70B2A4", Offset = "0x70B2A4", VA = "0x70B2A4")]
	public void ResetFortAtSpotList()
	{
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0x703490", Offset = "0x703490", VA = "0x703490")]
	public void DestroyFortChildren()
	{
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0x70B318", Offset = "0x70B318", VA = "0x70B318")]
	public SofaPlayersFortManager()
	{
	}
}
[Token(Token = "0x2000185")]
public class FortAtSpotClass
{
	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public GameObject fortPrefabUsed;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int currentBlock;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int totalNumberOfBlocks;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private SofaPlayerFortPrefabScript fortPrefabScript;

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0x5EEB48", Offset = "0x5EEB48", VA = "0x5EEB48")]
	public FortAtSpotClass(GameObject prefab)
	{
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0x5EEBF0", Offset = "0x5EEBF0", VA = "0x5EEBF0")]
	public GameObject GetNextBlockFromFortPrefab()
	{
		return null;
	}
}
[Token(Token = "0x2000186")]
public class SoundManager : Singleton<SoundManager>
{
	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject musicManagerPrefab;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39FEB4", Offset = "0x39FEB4")]
	public bool playMusic;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x39FEE8", Offset = "0x39FEE8")]
	[EventRef]
	public string blockCrumblingSound;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EventRef]
	public string blockPlacementSound;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[EventRef]
	public string hitGroundSound;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[EventRef]
	public string hitWoodSound;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[EventRef]
	public string hitBlockSound;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[EventRef]
	public string hitSnowmanSound;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[EventRef]
	public string hitPlayerSound;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[EventRef]
	public string healSound;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[EventRef]
	public string powerupSound;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[EventRef]
	public string powerupExplosionSound;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[EventRef]
	public string foxHopSound;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[EventRef]
	public string foxPickupSound;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[EventRef]
	public string shieldPickupSound;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[EventRef]
	public string leverPullSound;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[EventRef]
	public string uiButtonPress;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[EventRef]
	public string startWaterSpraySound;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[EventRef]
	public string waterSpraySoundLoop;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[EventRef]
	public string stopWaterSpraySound;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[EventRef]
	public string countdownCounterSound;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[EventRef]
	public string countdownGoSound;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[EventRef]
	public string snowballWhooshLoop;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[EventRef]
	public string snowballThrowSound;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[EventRef]
	public string slingshotReleaseSound;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[EventRef]
	public string woodOnWoodSound;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[EventRef]
	public string snowmanDeathSound;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[EventRef]
	public string fireworkLaunch;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[EventRef]
	public string levelSelectSound;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[EventRef]
	public string pickupSnowBlock;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[EventRef]
	public string snowCannonLaunch;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[EventRef]
	public string snowCannonLoad;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[EventRef]
	public string snowMonsterRoar;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[EventRef]
	public string snowMonsterHit;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[EventRef]
	public string snowpherBurrow;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[EventRef]
	public string snowpherPopup;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[EventRef]
	public string metalHit;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A0150", Offset = "0x3A0150")]
	[EventRef]
	public string foxIntro;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[EventRef]
	public string foxPickupVO;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[EventRef]
	public string foxWinGame;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[EventRef]
	public string foxRebuild;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[EventRef]
	public string foxHit;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private EventInstance parameterBasedEventInstance;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private ParameterInstance eventParameter;

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0x71305C", Offset = "0x71305C", VA = "0x71305C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0x6FAA68", Offset = "0x6FAA68", VA = "0x6FAA68")]
	public void PlayOneShot(string sound, Vector3 position)
	{
	}

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0x713140", Offset = "0x713140", VA = "0x713140")]
	public void PlayOneShotAttached(string sound, GameObject go)
	{
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0x7131C4", Offset = "0x7131C4", VA = "0x7131C4")]
	public void PlayOneShotAttachedWithParameter(string sound, GameObject go, string parameter, float paramValue)
	{
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0x7132FC", Offset = "0x7132FC", VA = "0x7132FC")]
	public SoundManager()
	{
	}
}
[Token(Token = "0x2000187")]
public class SpawnPointTeleportButton : NVRInteractableItem
{
	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int spawnPointID;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float initialY;

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0x713384", Offset = "0x713384", VA = "0x713384", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0x7133D8", Offset = "0x7133D8", VA = "0x7133D8", Slot = "11")]
	public override void BeginInteraction(NVRHand hand)
	{
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0x71353C", Offset = "0x71353C", VA = "0x71353C")]
	public SpawnPointTeleportButton()
	{
	}
}
[Token(Token = "0x2000188")]
[DisallowMultipleComponent]
public class SteamManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SteamManager s_instance;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static bool s_EverInialized;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool m_bInitialized;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private SteamAPIWarningMessageHook_t m_SteamAPIWarningMessageHook;

	[Token(Token = "0x1700017B")]
	private static SteamManager Instance
	{
		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x713544", Offset = "0x713544", VA = "0x713544")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700017C")]
	public static bool Initialized
	{
		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x713648", Offset = "0x713648", VA = "0x713648")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0x71366C", Offset = "0x71366C", VA = "0x71366C")]
	private static void SteamAPIDebugTextHook(int nSeverity, StringBuilder pchDebugText)
	{
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0x7136E8", Offset = "0x7136E8", VA = "0x7136E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0x713ACC", Offset = "0x713ACC", VA = "0x713ACC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0x713BD8", Offset = "0x713BD8", VA = "0x713BD8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0x713CA0", Offset = "0x713CA0", VA = "0x713CA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0x713CB4", Offset = "0x713CB4", VA = "0x713CB4")]
	public SteamManager()
	{
	}
}
[Token(Token = "0x2000189")]
public class StopWatch : Tool
{
	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float maxUseAmount;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float useRate;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float slowTime;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public Image useImage;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float currentUseAmount;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private bool isUsing;

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0x554840", Offset = "0x554840", VA = "0x554840", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0x554CB0", Offset = "0x554CB0", VA = "0x554CB0", Slot = "12")]
	public override void InteractingUpdate(NVRHand hand)
	{
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0x554CD4", Offset = "0x554CD4", VA = "0x554CD4")]
	private void UseTool(bool use)
	{
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0x554EA4", Offset = "0x554EA4", VA = "0x554EA4", Slot = "17")]
	public override void UseButtonDown()
	{
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0x554EC4", Offset = "0x554EC4", VA = "0x554EC4", Slot = "16")]
	public override void UseButtonUp()
	{
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0x554EE4", Offset = "0x554EE4", VA = "0x554EE4", Slot = "14")]
	public override void EndInteraction(NVRHand hand)
	{
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0x554F54", Offset = "0x554F54", VA = "0x554F54", Slot = "31")]
	public override void RefillTool()
	{
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0x554F88", Offset = "0x554F88", VA = "0x554F88", Slot = "32")]
	protected override void OnDestroyed()
	{
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0x555100", Offset = "0x555100", VA = "0x555100")]
	public StopWatch()
	{
	}
}
[Token(Token = "0x200018A")]
public class StoreDemoTimedEnding : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20006B5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BC24", Offset = "0x39BC24")]
	private sealed class <StoreDemoTimer>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400265A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400265B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400265C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StoreDemoTimedEnding <>4__this;

		[Token(Token = "0x17000510")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F29")]
			[Address(RVA = "0x5553E4", Offset = "0x5553E4", VA = "0x5553E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000511")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F2B")]
			[Address(RVA = "0x555464", Offset = "0x555464", VA = "0x555464", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F26")]
		[Address(RVA = "0x555290", Offset = "0x555290", VA = "0x555290")]
		[DebuggerHidden]
		public <StoreDemoTimer>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6002F27")]
		[Address(RVA = "0x5552BC", Offset = "0x5552BC", VA = "0x5552BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F28")]
		[Address(RVA = "0x5552C0", Offset = "0x5552C0", VA = "0x5552C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F2A")]
		[Address(RVA = "0x5553EC", Offset = "0x5553EC", VA = "0x5553EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0x55516C", Offset = "0x55516C", VA = "0x55516C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0x555210", Offset = "0x555210", VA = "0x555210")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AA1FC", Offset = "0x3AA1FC")]
	private IEnumerator StoreDemoTimer()
	{
		return null;
	}

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0x5552B0", Offset = "0x5552B0", VA = "0x5552B0")]
	private void StoreDemoTimerDone()
	{
	}

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0x5552B4", Offset = "0x5552B4", VA = "0x5552B4")]
	public StoreDemoTimedEnding()
	{
	}
}
[Token(Token = "0x200018B")]
public class StoveAnalyticsLog : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20006B6")]
	public delegate void StoveAnalyticsLogDelegate();

	[Serializable]
	[Token(Token = "0x20006B7")]
	public class APICommonData
	{
		[Token(Token = "0x400265D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string client_time;

		[Token(Token = "0x400265E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string app_id;

		[Token(Token = "0x400265F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string app_name;

		[Token(Token = "0x4002660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public string environment;

		[Token(Token = "0x4002661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string log_source_type;

		[Token(Token = "0x4002662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public string member_no;

		[Token(Token = "0x4002663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string device_os_name;

		[Token(Token = "0x4002664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public string device_os_ver;

		[Token(Token = "0x4002665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string session_id;

		[Token(Token = "0x4002666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public string app_publish_ver;

		[Token(Token = "0x6002F30")]
		[Address(RVA = "0x556F88", Offset = "0x556F88", VA = "0x556F88")]
		public APICommonData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20006B8")]
	public class APIPlayStartData : APICommonData
	{
		[Token(Token = "0x4002667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public APIActionInfoPlayStartData action_info;

		[Token(Token = "0x6002F31")]
		[Address(RVA = "0x555DF4", Offset = "0x555DF4", VA = "0x555DF4")]
		public APIPlayStartData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20006B9")]
	public class APIHeartBeatData : APICommonData
	{
		[Token(Token = "0x4002668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public APIActionInfoHeartBeatData action_info;

		[Token(Token = "0x6002F32")]
		[Address(RVA = "0x556EE0", Offset = "0x556EE0", VA = "0x556EE0")]
		public APIHeartBeatData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20006BA")]
	public class APIPlayEndData : APICommonData
	{
		[Token(Token = "0x4002669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public APIActionInfoPlayEndData action_info;

		[Token(Token = "0x6002F33")]
		[Address(RVA = "0x556064", Offset = "0x556064", VA = "0x556064")]
		public APIPlayEndData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20006BB")]
	public class APIPlayEndWithExceptionData : APICommonData
	{
		[Token(Token = "0x400266A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public APIActionInfoPlayEndWithExceptionData action_info;

		[Token(Token = "0x6002F34")]
		[Address(RVA = "0x556224", Offset = "0x556224", VA = "0x556224")]
		public APIPlayEndWithExceptionData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20006BC")]
	public class APIActionInfoCommonData
	{
		[Token(Token = "0x400266B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string action_type;

		[Token(Token = "0x6002F35")]
		[Address(RVA = "0x556F80", Offset = "0x556F80", VA = "0x556F80")]
		public APIActionInfoCommonData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20006BD")]
	public class APIActionInfoPlayStartData : APIActionInfoCommonData
	{
		[Token(Token = "0x400266C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public APIActionParamPlayStartData action_param;

		[Token(Token = "0x6002F36")]
		[Address(RVA = "0x555FA8", Offset = "0x555FA8", VA = "0x555FA8")]
		public APIActionInfoPlayStartData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20006BE")]
	public class APIActionInfoHeartBeatData : APIActionInfoCommonData
	{
		[Token(Token = "0x400266D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public APIActionParamHeartBeatData action_param;

		[Token(Token = "0x6002F37")]
		[Address(RVA = "0x556EE8", Offset = "0x556EE8", VA = "0x556EE8")]
		public APIActionInfoHeartBeatData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20006BF")]
	public class APIActionInfoPlayEndData : APIActionInfoCommonData
	{
		[Token(Token = "0x400266E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public APIActionParamPlayEndData action_param;

		[Token(Token = "0x6002F38")]
		[Address(RVA = "0x55606C", Offset = "0x55606C", VA = "0x55606C")]
		public APIActionInfoPlayEndData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20006C0")]
	public class APIActionInfoPlayEndWithExceptionData : APIActionInfoPlayEndData
	{
		[Token(Token = "0x400266F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public APIExceptionInfoData exception_info;

		[Token(Token = "0x6002F39")]
		[Address(RVA = "0x55622C", Offset = "0x55622C", VA = "0x55622C")]
		public APIActionInfoPlayEndWithExceptionData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20006C1")]
	public class APIActionParamPlayStartData
	{
		[Token(Token = "0x4002670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string success_yn;

		[Token(Token = "0x6002F3A")]
		[Address(RVA = "0x555FB0", Offset = "0x555FB0", VA = "0x555FB0")]
		public APIActionParamPlayStartData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20006C2")]
	public class APIActionParamHeartBeatData
	{
		[Token(Token = "0x4002671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int total_play_time;

		[Token(Token = "0x6002F3B")]
		[Address(RVA = "0x556EF0", Offset = "0x556EF0", VA = "0x556EF0")]
		public APIActionParamHeartBeatData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20006C3")]
	public class APIActionParamPlayEndData
	{
		[Token(Token = "0x4002672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string success_yn;

		[Token(Token = "0x4002673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int total_play_time;

		[Token(Token = "0x6002F3C")]
		[Address(RVA = "0x556074", Offset = "0x556074", VA = "0x556074")]
		public APIActionParamPlayEndData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20006C4")]
	public class APIExceptionInfoData
	{
		[Token(Token = "0x4002674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string reason;

		[Token(Token = "0x4002675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string reason_msg;

		[Token(Token = "0x6002F3D")]
		[Address(RVA = "0x556234", Offset = "0x556234", VA = "0x556234")]
		public APIExceptionInfoData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20006C5")]
	public class APIResultData
	{
		[Token(Token = "0x4002676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int result;

		[Token(Token = "0x4002677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string message;

		[Token(Token = "0x6002F3E")]
		[Address(RVA = "0x55665C", Offset = "0x55665C", VA = "0x55665C")]
		public APIResultData()
		{
		}
	}

	[Token(Token = "0x20006C6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BC34", Offset = "0x39BC34")]
	private sealed class <StartSendAPI>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400267A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StoveAnalyticsLog <>4__this;

		[Token(Token = "0x400267B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public string jsonString;

		[Token(Token = "0x400267C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private WWW <www>5__2;

		[Token(Token = "0x17000512")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F42")]
			[Address(RVA = "0x556BC0", Offset = "0x556BC0", VA = "0x556BC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000513")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F44")]
			[Address(RVA = "0x556C40", Offset = "0x556C40", VA = "0x556C40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F3F")]
		[Address(RVA = "0x556504", Offset = "0x556504", VA = "0x556504")]
		[DebuggerHidden]
		public <StartSendAPI>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6002F40")]
		[Address(RVA = "0x5569E8", Offset = "0x5569E8", VA = "0x5569E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F41")]
		[Address(RVA = "0x5569EC", Offset = "0x5569EC", VA = "0x5569EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F43")]
		[Address(RVA = "0x556BC8", Offset = "0x556BC8", VA = "0x556BC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BC44", Offset = "0x39BC44")]
	private sealed class <StartSendAPIHeartBeat>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400267D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400267E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400267F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StoveAnalyticsLog <>4__this;

		[Token(Token = "0x4002680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <checkStartTime>5__2;

		[Token(Token = "0x4002681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool <isWaitForInterval>5__3;

		[Token(Token = "0x17000514")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F48")]
			[Address(RVA = "0x556EF8", Offset = "0x556EF8", VA = "0x556EF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000515")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F4A")]
			[Address(RVA = "0x556F78", Offset = "0x556F78", VA = "0x556F78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F45")]
		[Address(RVA = "0x5568A8", Offset = "0x5568A8", VA = "0x5568A8")]
		[DebuggerHidden]
		public <StartSendAPIHeartBeat>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6002F46")]
		[Address(RVA = "0x556C48", Offset = "0x556C48", VA = "0x556C48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F47")]
		[Address(RVA = "0x556C4C", Offset = "0x556C4C", VA = "0x556C4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F49")]
		[Address(RVA = "0x556F00", Offset = "0x556F00", VA = "0x556F00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string _appID;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string _appName;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string _environment;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string _memberNo;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public string _deviceOS;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string _deviceOSVer;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public string _sessionID;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string _exceptionReason;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public string _exceptionMsg;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _appPublishVer;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private string _logSourceType;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string _apiURL;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _heartbeatInterval;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _startupRealTime;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public StoveAnalyticsLogDelegate OnSuccessSendAPICallback;

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0x55546C", Offset = "0x55546C", VA = "0x55546C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0x555794", Offset = "0x555794", VA = "0x555794")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0x555DF0", Offset = "0x555DF0", VA = "0x555DF0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0x555518", Offset = "0x555518", VA = "0x555518")]
	private void SendAPIPlayStart()
	{
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0x5558A0", Offset = "0x5558A0", VA = "0x5558A0")]
	private void SendAPIPlayEnd()
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0x555AF4", Offset = "0x555AF4", VA = "0x555AF4")]
	private void SendAPIPlayEndWithException()
	{
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0x55623C", Offset = "0x55623C", VA = "0x55623C")]
	private void SendAPIHeartBeat()
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0x555DFC", Offset = "0x555DFC", VA = "0x555DFC")]
	private void FillAPICommonData(APICommonData apiData)
	{
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0x55639C", Offset = "0x55639C", VA = "0x55639C")]
	private byte[] MakePostData(string jsonString)
	{
		return null;
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0x55644C", Offset = "0x55644C", VA = "0x55644C")]
	private Dictionary<string, string> MakeHTTPHeader()
	{
		return null;
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0x55607C", Offset = "0x55607C", VA = "0x55607C")]
	private int GetTotalPlayTime()
	{
		return default(int);
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0x555FCC", Offset = "0x555FCC", VA = "0x555FCC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AA26C", Offset = "0x3AA26C")]
	private IEnumerator StartSendAPI(string jsonString)
	{
		return null;
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0x556524", Offset = "0x556524", VA = "0x556524")]
	private bool ProcessAPIResult(string resultString)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0x5560A8", Offset = "0x5560A8", VA = "0x5560A8")]
	private bool StartSendAPISync(string jsonString)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0x55631C", Offset = "0x55631C", VA = "0x55631C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AA2DC", Offset = "0x3AA2DC")]
	private IEnumerator StartSendAPIHeartBeat()
	{
		return null;
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0x5568C8", Offset = "0x5568C8", VA = "0x5568C8")]
	public StoveAnalyticsLog()
	{
	}
}
[Token(Token = "0x200018C")]
public class StoveVRManagerSingleton : SingletonPersistent<StoveVRManagerSingleton>
{
	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0x556FC8", Offset = "0x556FC8", VA = "0x556FC8")]
	public StoveVRManagerSingleton()
	{
	}
}
[Token(Token = "0x200018D")]
public class SynthesisArcadeObject : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20006C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BC54", Offset = "0x39BC54")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x4002682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public SynthesisArcadeObject <>4__this;

		[Token(Token = "0x4002683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public ArcadeInterface svrInterface;

		[Token(Token = "0x6002F4B")]
		[Address(RVA = "0x559340", Offset = "0x559340", VA = "0x559340")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x6002F4C")]
		[Address(RVA = "0x559348", Offset = "0x559348", VA = "0x559348")]
		internal void <EnableLicensingCheckTask>b__0()
		{
		}
	}

	[Token(Token = "0x20006C9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BC64", Offset = "0x39BC64")]
	private sealed class <EnableLicensingCheckTask>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SynthesisArcadeObject <>4__this;

		[Token(Token = "0x4002687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private <>c__DisplayClass10_0 <>8__1;

		[Token(Token = "0x17000516")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F50")]
			[Address(RVA = "0x559988", Offset = "0x559988", VA = "0x559988", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000517")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F52")]
			[Address(RVA = "0x559A08", Offset = "0x559A08", VA = "0x559A08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F4D")]
		[Address(RVA = "0x559294", Offset = "0x559294", VA = "0x559294")]
		[DebuggerHidden]
		public <EnableLicensingCheckTask>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002F4E")]
		[Address(RVA = "0x559500", Offset = "0x559500", VA = "0x559500", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F4F")]
		[Address(RVA = "0x559504", Offset = "0x559504", VA = "0x559504", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F51")]
		[Address(RVA = "0x559990", Offset = "0x559990", VA = "0x559990", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SynthesisArcadeObject _instance;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Coroutine co;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string synthesisGameId;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool synthesisCdnBuild;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool winServerForAndroid;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	public bool IL2CPPBuild;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<string> IPAddresses;

	[Token(Token = "0x1700017D")]
	public static SynthesisArcadeObject Instance
	{
		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x558B54", Offset = "0x558B54", VA = "0x558B54")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0x558BAC", Offset = "0x558BAC", VA = "0x558BAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0x559214", Offset = "0x559214", VA = "0x559214")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AA34C", Offset = "0x3AA34C")]
	private IEnumerator EnableLicensingCheckTask()
	{
		return null;
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0x558E04", Offset = "0x558E04", VA = "0x558E04")]
	protected string filehash(string fileName)
	{
		return null;
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0x5592B4", Offset = "0x5592B4", VA = "0x5592B4")]
	public SynthesisArcadeObject()
	{
	}
}
[Token(Token = "0x200018E")]
public class Tool : NVRInteractableItem
{
	[Token(Token = "0x20006CA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BC74", Offset = "0x39BC74")]
	private sealed class <Move>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400268A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Tool <>4__this;

		[Token(Token = "0x400268B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Transform target;

		[Token(Token = "0x400268C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool <reached>5__2;

		[Token(Token = "0x17000518")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F56")]
			[Address(RVA = "0x56B998", Offset = "0x56B998", VA = "0x56B998", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000519")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F58")]
			[Address(RVA = "0x56BA18", Offset = "0x56BA18", VA = "0x56BA18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F53")]
		[Address(RVA = "0x56B2E8", Offset = "0x56B2E8", VA = "0x56B2E8")]
		[DebuggerHidden]
		public <Move>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6002F54")]
		[Address(RVA = "0x56B63C", Offset = "0x56B63C", VA = "0x56B63C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F55")]
		[Address(RVA = "0x56B640", Offset = "0x56B640", VA = "0x56B640", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F57")]
		[Address(RVA = "0x56B9A0", Offset = "0x56B9A0", VA = "0x56B9A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private PhotonTransformView _transformView;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public PhotonView myPhotonView;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public string toolTip;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public ToolTypes toolType;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public Transform toolTipLocation;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool hoverWhenNotHeld;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float moveToShelfSpeed;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float moveToShelfReachedDistance;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool _hasBeenPickedUp;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected Destructible myDestructible;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A01D8", Offset = "0x3A01D8")]
	[SerializeField]
	protected Collider _physicsCollider;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected PlayerManager myManager;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private NVRPlayerSnow myNVRPlayer;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 originalSize;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Tweener hoverTweener;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Transform _myTransform;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool movingToShelf;

	[Token(Token = "0x1700017E")]
	protected Transform myTransform
	{
		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x569D5C", Offset = "0x569D5C", VA = "0x569D5C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0x55485C", Offset = "0x55485C", VA = "0x55485C", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0x569E00", Offset = "0x569E00", VA = "0x569E00", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0x56A124", Offset = "0x56A124", VA = "0x56A124", Slot = "28")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0x56A218", Offset = "0x56A218", VA = "0x56A218", Slot = "29")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0x569ED4", Offset = "0x569ED4", VA = "0x569ED4")]
	private void HoverTool(bool isMoving)
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0x56A30C", Offset = "0x56A30C", VA = "0x56A30C", Slot = "30")]
	protected virtual void DestroyTool()
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0x56A4A4", Offset = "0x56A4A4", VA = "0x56A4A4", Slot = "11")]
	public override void BeginInteraction(NVRHand hand)
	{
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0x56AC60", Offset = "0x56AC60", VA = "0x56AC60")]
	[PunRPC]
	public void RPCBeginInteraction()
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0x554F24", Offset = "0x554F24", VA = "0x554F24", Slot = "14")]
	public override void EndInteraction(NVRHand hand)
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0x56AC68", Offset = "0x56AC68", VA = "0x56AC68")]
	public void RepairTool()
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0x56B168", Offset = "0x56B168", VA = "0x56B168")]
	public void MoveToShelf(Transform target)
	{
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0x56B250", Offset = "0x56B250", VA = "0x56B250")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AA3CC", Offset = "0x3AA3CC")]
	private IEnumerator Move(Transform target)
	{
		return null;
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0x56B308", Offset = "0x56B308", VA = "0x56B308")]
	private void EnableColliders()
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0x56B3F0", Offset = "0x56B3F0", VA = "0x56B3F0")]
	private void Hit(SnowBallInfo snowball)
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0x56B404", Offset = "0x56B404", VA = "0x56B404")]
	[PunRPC]
	public void RpcHit(float snowballMass)
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0x56B418", Offset = "0x56B418", VA = "0x56B418")]
	[PunRPC]
	public void RpcReceiveDamage(int damage)
	{
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0x56B46C", Offset = "0x56B46C", VA = "0x56B46C")]
	[PunRPC]
	public void RpcSetScale(Vector3 scale)
	{
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0x56B4C0", Offset = "0x56B4C0", VA = "0x56B4C0", Slot = "31")]
	public virtual void RefillTool()
	{
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0x56B4C4", Offset = "0x56B4C4", VA = "0x56B4C4", Slot = "21")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0x554F8C", Offset = "0x554F8C", VA = "0x554F8C", Slot = "32")]
	protected virtual void OnDestroyed()
	{
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0x555144", Offset = "0x555144", VA = "0x555144")]
	public Tool()
	{
	}
}
[Token(Token = "0x200018F")]
public class ToolshelfManager : Photon.MonoBehaviour
{
	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform lever;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Transform table;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] toolPositions;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Transform helpPageSpawnPoint;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PhotonView myPhotonView;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject cratesObject;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject cratesObjectStraight;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GameObject ArenaPVPCrates;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject _activeCrates;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float toolshelfFurthestBackPos;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float toolshelfDistanceFromBack;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float toolshelfMinDistance;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isSetUp;

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0x56BA20", Offset = "0x56BA20", VA = "0x56BA20")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0x56BCC0", Offset = "0x56BCC0", VA = "0x56BCC0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0x56BDB8", Offset = "0x56BDB8", VA = "0x56BDB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0x56BF54", Offset = "0x56BF54", VA = "0x56BF54")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0x56BE68", Offset = "0x56BE68", VA = "0x56BE68")]
	private void DisableShelf()
	{
	}

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0x56C00C", Offset = "0x56C00C", VA = "0x56C00C")]
	private void EnableShelf()
	{
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0x56C0F8", Offset = "0x56C0F8", VA = "0x56C0F8")]
	public void SetupToolshelf(int spawnID = -1)
	{
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0x56D878", Offset = "0x56D878", VA = "0x56D878")]
	public void ShowLever(bool show)
	{
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0x56D8C4", Offset = "0x56D8C4", VA = "0x56D8C4")]
	[PunRPC]
	private void RpcSetToolshelfPosition(Vector3 tablePos, Quaternion tableRotation, Vector3 mainPos, Quaternion mainRotation, bool showCrates, bool showCratesStraight, bool invertShelf, int spawnIndex, int mpDistance = 0)
	{
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0x56DEB0", Offset = "0x56DEB0", VA = "0x56DEB0")]
	[PunRPC]
	private void RpcPullLever()
	{
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0x56DF5C", Offset = "0x56DF5C", VA = "0x56DF5C")]
	public ToolshelfManager()
	{
	}
}
[Token(Token = "0x2000190")]
public class Treasure : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Destructible myDestructible;

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0x56E010", Offset = "0x56E010", VA = "0x56E010")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0x56E158", Offset = "0x56E158", VA = "0x56E158")]
	private void Hit(SnowBallInfo snowball)
	{
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0x56E240", Offset = "0x56E240", VA = "0x56E240")]
	private void OnDestroyed()
	{
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0x56E2D0", Offset = "0x56E2D0", VA = "0x56E2D0")]
	public Treasure()
	{
	}
}
[Token(Token = "0x2000191")]
public class RedToGreenHoveredObject : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Color endColor;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float tweenDuration;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material materialColorToTween;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Tween tweenForColorChange;

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0x81A8E8", Offset = "0x81A8E8", VA = "0x81A8E8")]
	public void StartTweening()
	{
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0x81A928", Offset = "0x81A928", VA = "0x81A928")]
	public void StopTweening()
	{
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0x81A938", Offset = "0x81A938", VA = "0x81A938")]
	public RedToGreenHoveredObject()
	{
	}
}
[Token(Token = "0x2000192")]
public class ShakeScaleHoveredObject : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float tweenDuration;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float tweenStrenght;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int tweenVibrato;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tweenRandomness;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Tween tweenForShakeScale;

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0x8231A0", Offset = "0x8231A0", VA = "0x8231A0")]
	public void StartTweening()
	{
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0x8231E4", Offset = "0x8231E4", VA = "0x8231E4")]
	public void StopTweening()
	{
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0x8231F4", Offset = "0x8231F4", VA = "0x8231F4")]
	public ShakeScaleHoveredObject()
	{
	}
}
[Token(Token = "0x2000193")]
public class TypingPodium : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0x56EFE8", Offset = "0x56EFE8", VA = "0x56EFE8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0x56F604", Offset = "0x56F604", VA = "0x56F604")]
	public TypingPodium()
	{
	}
}
[Token(Token = "0x2000194")]
public class MCGToggleGroup : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20006CB")]
	public class MCGToggleEvent : UnityEvent<int>
	{
		[Token(Token = "0x6002F59")]
		[Address(RVA = "0x6C4774", Offset = "0x6C4774", VA = "0x6C4774")]
		public MCGToggleEvent()
		{
		}
	}

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public MCGToggleEvent OnToggleChanged;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color ToggledColor;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<UIMCGToggle> ToggleButtons;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public UIMCGToggle ActiveToggle;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int DefaultStartingToggleIndex;

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0x6C41AC", Offset = "0x6C41AC", VA = "0x6C41AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0x6C43C4", Offset = "0x6C43C4", VA = "0x6C43C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0x6C44D4", Offset = "0x6C44D4", VA = "0x6C44D4")]
	public void OnToggleHandler(UIMCGToggle activeToggle)
	{
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0x6C4220", Offset = "0x6C4220", VA = "0x6C4220")]
	private void InitalizeToggledButtons(int index)
	{
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0x6C44D8", Offset = "0x6C44D8", VA = "0x6C44D8")]
	private void SetToggledButton(UIMCGToggle activeToggle)
	{
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0x6C4654", Offset = "0x6C4654", VA = "0x6C4654")]
	public void SetToggledButtonVisualsFromIndex(int activeToggleIndex)
	{
	}

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0x6C4764", Offset = "0x6C4764", VA = "0x6C4764")]
	public void ForceActiveToggleButtonTrigger()
	{
	}

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0x6C476C", Offset = "0x6C476C", VA = "0x6C476C")]
	public MCGToggleGroup()
	{
	}
}
[Token(Token = "0x2000195")]
public class UIMCGToggle : Button
{
	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public Color ToggledColor;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public MCGToggleGroup ToggleGroup;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool IsToggled;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Image toggleImage;

	[Token(Token = "0x1700017F")]
	private Image _toggleImage
	{
		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x56FB98", Offset = "0x56FB98", VA = "0x56FB98")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x56FC48", Offset = "0x56FC48", VA = "0x56FC48")]
		set
		{
		}
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0x56FC50", Offset = "0x56FC50", VA = "0x56FC50", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0x56FCB0", Offset = "0x56FCB0", VA = "0x56FCB0")]
	public void SetToggled(bool isToggled)
	{
	}

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0x56FD38", Offset = "0x56FD38", VA = "0x56FD38", Slot = "41")]
	public override void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0x56FD58", Offset = "0x56FD58", VA = "0x56FD58")]
	public UIMCGToggle()
	{
	}
}
[Token(Token = "0x2000196")]
public class UIManager : Singleton<UIManager>
{
	[Token(Token = "0x20006CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BC84", Offset = "0x39BC84")]
	private sealed class <Orient_StatsAroundPlayerRoutine>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400268D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400268E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400268F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIManager <>4__this;

		[Token(Token = "0x1700051A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F5D")]
			[Address(RVA = "0x639ADC", Offset = "0x639ADC", VA = "0x639ADC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700051B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F5F")]
			[Address(RVA = "0x639B5C", Offset = "0x639B5C", VA = "0x639B5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F5A")]
		[Address(RVA = "0x63958C", Offset = "0x63958C", VA = "0x63958C")]
		[DebuggerHidden]
		public <Orient_StatsAroundPlayerRoutine>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x6002F5B")]
		[Address(RVA = "0x6395AC", Offset = "0x6395AC", VA = "0x6395AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F5C")]
		[Address(RVA = "0x6395B0", Offset = "0x6395B0", VA = "0x6395B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F5E")]
		[Address(RVA = "0x639AE4", Offset = "0x639AE4", VA = "0x639AE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BC94", Offset = "0x39BC94")]
	private sealed class <WaitToDisableLeaderboardEntryObject>d__53 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIManager <>4__this;

		[Token(Token = "0x1700051C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F63")]
			[Address(RVA = "0x63AB74", Offset = "0x63AB74", VA = "0x63AB74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700051D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F65")]
			[Address(RVA = "0x63ABF4", Offset = "0x63ABF4", VA = "0x63ABF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F60")]
		[Address(RVA = "0x63AA10", Offset = "0x63AA10", VA = "0x63AA10")]
		[DebuggerHidden]
		public <WaitToDisableLeaderboardEntryObject>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x6002F61")]
		[Address(RVA = "0x63AA30", Offset = "0x63AA30", VA = "0x63AA30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F62")]
		[Address(RVA = "0x63AA34", Offset = "0x63AA34", VA = "0x63AA34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F64")]
		[Address(RVA = "0x63AB7C", Offset = "0x63AB7C", VA = "0x63AB7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BCA4", Offset = "0x39BCA4")]
	private sealed class <RestartButtonPressedDelayable>d__67 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float delay;

		[Token(Token = "0x4002696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public UIManager <>4__this;

		[Token(Token = "0x1700051E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F69")]
			[Address(RVA = "0x63A5E0", Offset = "0x63A5E0", VA = "0x63A5E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700051F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F6B")]
			[Address(RVA = "0x63A660", Offset = "0x63A660", VA = "0x63A660", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F66")]
		[Address(RVA = "0x639D64", Offset = "0x639D64", VA = "0x639D64")]
		[DebuggerHidden]
		public <RestartButtonPressedDelayable>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x6002F67")]
		[Address(RVA = "0x639D84", Offset = "0x639D84", VA = "0x639D84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F68")]
		[Address(RVA = "0x639D88", Offset = "0x639D88", VA = "0x639D88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F6A")]
		[Address(RVA = "0x63A5E8", Offset = "0x63A5E8", VA = "0x63A5E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BCB4", Offset = "0x39BCB4")]
	private sealed class <WaitToShowNameEntry>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIManager <>4__this;

		[Token(Token = "0x17000520")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F6F")]
			[Address(RVA = "0x63ADB4", Offset = "0x63ADB4", VA = "0x63ADB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000521")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F71")]
			[Address(RVA = "0x63AE34", Offset = "0x63AE34", VA = "0x63AE34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F6C")]
		[Address(RVA = "0x63ABFC", Offset = "0x63ABFC", VA = "0x63ABFC")]
		[DebuggerHidden]
		public <WaitToShowNameEntry>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6002F6D")]
		[Address(RVA = "0x63AC1C", Offset = "0x63AC1C", VA = "0x63AC1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F6E")]
		[Address(RVA = "0x63AC20", Offset = "0x63AC20", VA = "0x63AC20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F70")]
		[Address(RVA = "0x63ADBC", Offset = "0x63ADBC", VA = "0x63ADBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BCC4", Offset = "0x39BCC4")]
	private sealed class <CreateObjectsForPlayerToEnterName>d__73 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400269A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400269B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400269C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIManager <>4__this;

		[Token(Token = "0x400269D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int <i>5__2;

		[Token(Token = "0x400269E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject <charBlock>5__3;

		[Token(Token = "0x17000522")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F75")]
			[Address(RVA = "0x639504", Offset = "0x639504", VA = "0x639504", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000523")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F77")]
			[Address(RVA = "0x639584", Offset = "0x639584", VA = "0x639584", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F72")]
		[Address(RVA = "0x6390D0", Offset = "0x6390D0", VA = "0x6390D0")]
		[DebuggerHidden]
		public <CreateObjectsForPlayerToEnterName>d__73(int <>1__state)
		{
		}

		[Token(Token = "0x6002F73")]
		[Address(RVA = "0x6390F0", Offset = "0x6390F0", VA = "0x6390F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F74")]
		[Address(RVA = "0x6390F4", Offset = "0x6390F4", VA = "0x6390F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F76")]
		[Address(RVA = "0x63950C", Offset = "0x63950C", VA = "0x63950C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BCD4", Offset = "0x39BCD4")]
	private sealed class <ShowEachCharacterBlockDelayed>d__74 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400269F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40026A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40026A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float delay;

		[Token(Token = "0x40026A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public UIManager <>4__this;

		[Token(Token = "0x40026A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool show;

		[Token(Token = "0x40026A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int <i>5__2;

		[Token(Token = "0x17000524")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F7B")]
			[Address(RVA = "0x63A988", Offset = "0x63A988", VA = "0x63A988", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000525")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F7D")]
			[Address(RVA = "0x63AA08", Offset = "0x63AA08", VA = "0x63AA08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F78")]
		[Address(RVA = "0x63A668", Offset = "0x63A668", VA = "0x63A668")]
		[DebuggerHidden]
		public <ShowEachCharacterBlockDelayed>d__74(int <>1__state)
		{
		}

		[Token(Token = "0x6002F79")]
		[Address(RVA = "0x63A688", Offset = "0x63A688", VA = "0x63A688", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F7A")]
		[Address(RVA = "0x63A68C", Offset = "0x63A68C", VA = "0x63A68C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F7C")]
		[Address(RVA = "0x63A990", Offset = "0x63A990", VA = "0x63A990", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BCE4", Offset = "0x39BCE4")]
	private sealed class <>c__DisplayClass78_0
	{
		[Token(Token = "0x40026A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIManager <>4__this;

		[Token(Token = "0x40026A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public GameObject floatingObject;

		[Token(Token = "0x6002F7E")]
		[Address(RVA = "0x639098", Offset = "0x639098", VA = "0x639098")]
		public <>c__DisplayClass78_0()
		{
		}

		[Token(Token = "0x6002F7F")]
		[Address(RVA = "0x6390A0", Offset = "0x6390A0", VA = "0x6390A0")]
		internal void <FloatObject>b__0()
		{
		}
	}

	[Token(Token = "0x20006D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BCF4", Offset = "0x39BCF4")]
	private sealed class <RebuildTimeTextOffEyes>d__97 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40026A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40026A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIManager <>4__this;

		[Token(Token = "0x17000526")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F83")]
			[Address(RVA = "0x639CDC", Offset = "0x639CDC", VA = "0x639CDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000527")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F85")]
			[Address(RVA = "0x639D5C", Offset = "0x639D5C", VA = "0x639D5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F80")]
		[Address(RVA = "0x639B64", Offset = "0x639B64", VA = "0x639B64")]
		[DebuggerHidden]
		public <RebuildTimeTextOffEyes>d__97(int <>1__state)
		{
		}

		[Token(Token = "0x6002F81")]
		[Address(RVA = "0x639B84", Offset = "0x639B84", VA = "0x639B84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F82")]
		[Address(RVA = "0x639B88", Offset = "0x639B88", VA = "0x639B88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F84")]
		[Address(RVA = "0x639CE4", Offset = "0x639CE4", VA = "0x639CE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Vector3 initalPos_Stats;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 initalPos_TimeToStart;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion initalRot_Stats;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion initalRot_TimeToStart;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public GameObject floatingTextPrefab;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color defaultTextColor;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text messageToPlayerText;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Text messageToPlayerFortressText;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private char[] charactersForNameSelection;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Text timeToStartText;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text timeToStartCountdownText;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A0220", Offset = "0x3A0220")]
	public GameObject placeHereTextForPodium;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject deleteSavedFortText;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A0254", Offset = "0x3A0254")]
	public Text toolTipMessageText;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AnchorUiToObjectVR toolTipAnchorUIScript;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A0288", Offset = "0x3A0288")]
	public GameObject snowmanHealthBarPrefab;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Dictionary<AIManager, EnemyHealthBarComponents> enemyHealthBars;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A02BC", Offset = "0x3A02BC")]
	public GameObject ammoCounterPrefab;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Dictionary<Tool, AmmoCounterComponents> ammoCounters;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A02F0", Offset = "0x3A02F0")]
	public GameObject attachedTextObjectPrefab;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Dictionary<Transform, AttachedTextObjectComponents> attachedTextObjects;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A0324", Offset = "0x3A0324")]
	public GameObject leaderboardNameEntryPanel;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text leaderboardEnterNameText;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 leaderboardNameEntryPanel_OriginalPos;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float leaderboardNameEntryPanel_ZOffset;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public Text leaderboardNameViewingText;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject leaderboardNameEntryCharacterPrefab;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public Transform centerOfSpaceForCharacterBlocksToBeDisplayed;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Vector3 leaderboardNameInputPodiumPos;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float spaceBetweenBlocksX;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float spaceBetweenBlocksY;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float spaceBetweenBlocksZ;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float secondsToShowAllCharacterBlocks;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float delayForShowingEachCharacterBlock;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector3 currentPosToPutBlock;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private List<GameObject> characterBlocksList;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A0358", Offset = "0x3A0358")]
	public Sprite noStarSprite;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public Sprite withStarSprite;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private List<GameObject> floatingTextList;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private string rebuildText;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private string buildText;

	[Token(Token = "0x4000C21")]
	private const string sToEnd = "";

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A038C", Offset = "0x3A038C")]
	[SerializeField]
	private float _statDistanceFromPlayer;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private List<Transform> _uiTransformsToFacePlayer;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	[SerializeField]
	private float _uiStatRotationSpeed;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Coroutine _statRotationRoutine;

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0x56FD60", Offset = "0x56FD60", VA = "0x56FD60")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0x570384", Offset = "0x570384", VA = "0x570384")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0x570818", Offset = "0x570818", VA = "0x570818")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0x570A48", Offset = "0x570A48", VA = "0x570A48")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0x570C78", Offset = "0x570C78", VA = "0x570C78")]
	private void Start_StatUIPlayerRotation()
	{
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0x570D88", Offset = "0x570D88", VA = "0x570D88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AA48C", Offset = "0x3AA48C")]
	private IEnumerator Orient_StatsAroundPlayerRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0x570E04", Offset = "0x570E04", VA = "0x570E04")]
	public void SetupPlayerFacingUI()
	{
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0x5702DC", Offset = "0x5702DC", VA = "0x5702DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AA4FC", Offset = "0x3AA4FC")]
	private IEnumerator WaitToDisableLeaderboardEntryObject()
	{
		return null;
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0x571B18", Offset = "0x571B18", VA = "0x571B18")]
	private void StartGame()
	{
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0x570548", Offset = "0x570548", VA = "0x570548")]
	public void UpdateTimeToStart(float seconds)
	{
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0x570770", Offset = "0x570770", VA = "0x570770")]
	public void ShowFortressIntroMessage()
	{
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0x571C40", Offset = "0x571C40", VA = "0x571C40")]
	public void ShowWinMessage()
	{
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0x571CDC", Offset = "0x571CDC", VA = "0x571CDC")]
	public void ShowSurvivalUnlockWinMessage()
	{
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0x571DE0", Offset = "0x571DE0", VA = "0x571DE0")]
	public void ShowFortressUnlockWinMessage()
	{
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0x571E88", Offset = "0x571E88", VA = "0x571E88")]
	public void ShowLastLevelWinMessage()
	{
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0x571F8C", Offset = "0x571F8C", VA = "0x571F8C")]
	public void ShowLoseMessage()
	{
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0x572028", Offset = "0x572028", VA = "0x572028")]
	public void HideMessage()
	{
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0x57202C", Offset = "0x57202C", VA = "0x57202C")]
	public void ShowOptionsMenu(bool show)
	{
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0x5720D0", Offset = "0x5720D0", VA = "0x5720D0")]
	public void ShowGameOverMenu(bool show)
	{
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0x5721D8", Offset = "0x5721D8", VA = "0x5721D8")]
	public void ToggleOptionsMenu()
	{
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0x572274", Offset = "0x572274", VA = "0x572274")]
	public void RestartButtonPressed()
	{
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0x57229C", Offset = "0x57229C", VA = "0x57229C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AA56C", Offset = "0x3AA56C")]
	private IEnumerator RestartButtonPressedDelayable(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0x57233C", Offset = "0x57233C", VA = "0x57233C")]
	public void NextLevelButtonPressed()
	{
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0x5724D8", Offset = "0x5724D8", VA = "0x5724D8")]
	public void LevelSelectButtonPressed()
	{
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0x572630", Offset = "0x572630", VA = "0x572630")]
	public void ShowLeaderboardNameEntryInterface()
	{
	}

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0x5728B0", Offset = "0x5728B0", VA = "0x5728B0")]
	private Vector3 GetLeaderboardNameEntryPodiumPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0x572CFC", Offset = "0x572CFC", VA = "0x572CFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AA5DC", Offset = "0x3AA5DC")]
	private IEnumerator WaitToShowNameEntry()
	{
		return null;
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0x570260", Offset = "0x570260", VA = "0x570260")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AA64C", Offset = "0x3AA64C")]
	private IEnumerator CreateObjectsForPlayerToEnterName()
	{
		return null;
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0x572A98", Offset = "0x572A98", VA = "0x572A98")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AA6BC", Offset = "0x3AA6BC")]
	private IEnumerator ShowEachCharacterBlockDelayed(bool show = true, float delay = 0f)
	{
		return null;
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0x56F534", Offset = "0x56F534", VA = "0x56F534")]
	public void UpdateAndDisplayLeaderboardName()
	{
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0x572B4C", Offset = "0x572B4C", VA = "0x572B4C")]
	public void LeaderboardNameEntryFinished()
	{
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0x572D78", Offset = "0x572D78", VA = "0x572D78")]
	public void Force_RestartArena()
	{
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0x572EA8", Offset = "0x572EA8", VA = "0x572EA8")]
	public GameObject FloatObject(GameObject floatingObject, Vector3 position, Color color, Vector3 scale, float displayTime = 3f, float floatingHeightOffset = 1.5f, bool alwaysFacePlayer = false, float translateForwardDistance = 0.5f, bool loop = false)
	{
		return null;
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0x56AF48", Offset = "0x56AF48", VA = "0x56AF48")]
	public GameObject ShowFloatingText(string text, Vector3 position, Color color, float displayTime = 3f, float floatingHeightOffset = 1.5f, bool alwaysFacePlayer = false, float translateForwardDistance = 0.5f, bool loop = false)
	{
		return null;
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0x573720", Offset = "0x573720", VA = "0x573720")]
	public void ShowFloatingText(string text, Vector3 position, float displayTime = 3f)
	{
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0x573780", Offset = "0x573780", VA = "0x573780")]
	public void DestroyFloatingText(GameObject go)
	{
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0x573860", Offset = "0x573860", VA = "0x573860")]
	public void TogglePodiumText(bool show)
	{
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0x56AA48", Offset = "0x56AA48", VA = "0x56AA48")]
	public void ShowControllerTip(bool show, [Optional] Transform locationForTip, string message = "")
	{
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0x573890", Offset = "0x573890", VA = "0x573890")]
	public void CreateEnemyHealthBar(AIManager aiManager, int totalHitPoints, Transform _healthBarAnchor, Color barColor)
	{
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0x573B3C", Offset = "0x573B3C", VA = "0x573B3C")]
	public void UpdateEnemyHealthBar(AIManager aiManager, int newHitPoints)
	{
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0x573C64", Offset = "0x573C64", VA = "0x573C64")]
	public void ChangeEnemyHealthBarVisibility(AIManager ai, bool isVisible)
	{
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0x573D3C", Offset = "0x573D3C", VA = "0x573D3C")]
	public void RemoveEnemyHealthBar(AIManager aiManager)
	{
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0x573E58", Offset = "0x573E58", VA = "0x573E58")]
	public void CreateAttachedTextObject(Transform target, Transform anchorPoint, string textValue)
	{
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0x574110", Offset = "0x574110", VA = "0x574110")]
	public void UpdateAttachedTextObject(Transform target, string newTextValue)
	{
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0x5741F0", Offset = "0x5741F0", VA = "0x5741F0")]
	public void ChangeAttachedObjectVisible(Transform target, bool isVisible)
	{
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0x5742E4", Offset = "0x5742E4", VA = "0x5742E4")]
	public void RemoveAttachedTextObject(Transform target)
	{
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0x57441C", Offset = "0x57441C", VA = "0x57441C")]
	public void CreateAmmoCounter(Tool tool, int ammoCount, Transform anchorPoint)
	{
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0x5746A8", Offset = "0x5746A8", VA = "0x5746A8")]
	public void UpdateAmmoCounter(Tool tool, int newCount)
	{
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0x574764", Offset = "0x574764", VA = "0x574764")]
	public void RemoveAmmoCounter(Tool tool)
	{
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0x574880", Offset = "0x574880", VA = "0x574880")]
	public void ShowLargerCountdownText(string _newText)
	{
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0x570358", Offset = "0x570358", VA = "0x570358")]
	public void HideLargerCountdownText()
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0x57491C", Offset = "0x57491C", VA = "0x57491C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AA72C", Offset = "0x3AA72C")]
	public IEnumerator RebuildTimeTextOffEyes()
	{
		return null;
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0x574998", Offset = "0x574998", VA = "0x574998")]
	private void GameOver()
	{
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0x574B34", Offset = "0x574B34", VA = "0x574B34")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0x574C30", Offset = "0x574C30", VA = "0x574C30")]
	public UIManager()
	{
	}
}
[Token(Token = "0x2000197")]
public struct EnemyHealthBarComponents
{
	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject parentObject;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Slider healthSlider;
}
[Token(Token = "0x2000198")]
public struct AmmoCounterComponents
{
	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject parentObject;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Text counterText;
}
[Token(Token = "0x2000199")]
public struct AttachedTextObjectComponents
{
	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform parentObject;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Text textObject;
}
[Token(Token = "0x200019A")]
public class UIManagerController : Singleton<UIManagerController>
{
	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Text controllerMessageText;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Text timerText;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Transform myTransform;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool attached;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private string transitionMessageText;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isLeftHand;

	[Token(Token = "0x4000C32")]
	private const string sToEnd = "";

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 rightHandTextPos;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 leftHandTextPos;

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0x63AE3C", Offset = "0x63AE3C", VA = "0x63AE3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0x63AF18", Offset = "0x63AF18", VA = "0x63AF18")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0x63B058", Offset = "0x63B058", VA = "0x63B058")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0x63B198", Offset = "0x63B198", VA = "0x63B198")]
	private void StartGame()
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0x63B1A0", Offset = "0x63B1A0", VA = "0x63B1A0")]
	public void UpdateTimeToStart(float seconds)
	{
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0x63B2C0", Offset = "0x63B2C0", VA = "0x63B2C0")]
	public void AttachToController(Transform controller)
	{
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0x63B4E0", Offset = "0x63B4E0", VA = "0x63B4E0")]
	public void ShowControllerMessage(bool show, string message = "")
	{
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0x63B64C", Offset = "0x63B64C", VA = "0x63B64C")]
	public void TransitionToText()
	{
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0x63B6A0", Offset = "0x63B6A0", VA = "0x63B6A0")]
	public UIManagerController()
	{
	}
}
[Token(Token = "0x200019B")]
public class UIManagerEye : Singleton<UIManagerEye>
{
	[Token(Token = "0x20006D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BD04", Offset = "0x39BD04")]
	private sealed class <ShowDisplayTextToPlayer>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40026AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40026AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIManagerEye <>4__this;

		[Token(Token = "0x40026AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public string localizedText;

		[Token(Token = "0x17000528")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F89")]
			[Address(RVA = "0x63BBF8", Offset = "0x63BBF8", VA = "0x63BBF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000529")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F8B")]
			[Address(RVA = "0x63BC78", Offset = "0x63BC78", VA = "0x63BC78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F86")]
		[Address(RVA = "0x63BA10", Offset = "0x63BA10", VA = "0x63BA10")]
		[DebuggerHidden]
		public <ShowDisplayTextToPlayer>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002F87")]
		[Address(RVA = "0x63BAB8", Offset = "0x63BAB8", VA = "0x63BAB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F88")]
		[Address(RVA = "0x63BABC", Offset = "0x63BABC", VA = "0x63BABC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F8A")]
		[Address(RVA = "0x63BC00", Offset = "0x63BC00", VA = "0x63BC00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Text displayText;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Text toolInfoText;

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0x63B7A4", Offset = "0x63B7A4", VA = "0x63B7A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0x63B7D0", Offset = "0x63B7D0", VA = "0x63B7D0")]
	public void ShowToolInfoText(ToolTypes tool)
	{
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0x63B8C4", Offset = "0x63B8C4", VA = "0x63B8C4")]
	private void HideToolInfoText()
	{
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0x63B8F0", Offset = "0x63B8F0", VA = "0x63B8F0")]
	public void ShowDisplayText(string text)
	{
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0x63B94C", Offset = "0x63B94C", VA = "0x63B94C")]
	public void HideDisplayText()
	{
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0x63B978", Offset = "0x63B978", VA = "0x63B978")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AA79C", Offset = "0x3AA79C")]
	public IEnumerator ShowDisplayTextToPlayer(string localizedText)
	{
		return null;
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0x63BA30", Offset = "0x63BA30", VA = "0x63BA30")]
	public UIManagerEye()
	{
	}
}
[Token(Token = "0x200019C")]
public class UIManagerFortSigns : Singleton<UIManagerFortSigns>
{
	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A03F4", Offset = "0x3A03F4")]
	public GameObject[] signpostTexts;

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0x63BC80", Offset = "0x63BC80", VA = "0x63BC80")]
	public void ShowSignPosts(bool show)
	{
	}

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0x63BD14", Offset = "0x63BD14", VA = "0x63BD14")]
	public UIManagerFortSigns()
	{
	}
}
[Token(Token = "0x200019D")]
public class UIManagerGameOver : Singleton<UIManagerGameOver>
{
	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject pillar;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A0428", Offset = "0x3A0428")]
	public GameObject gameOverMenu;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Transform PVPSpawnPoint;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform COOPSpawnPoint;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Text gameStatusText;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text gameOverScoreText;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Text gameOverHighScoreText;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text gameOverWaveText;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GameObject nextLevelButton;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject restartGameoverButton;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public GameObject restartHalfSizeGameoverButton;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject restartWithSavedFortGameoverButton;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public GameObject settingsButton;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A045C", Offset = "0x3A045C")]
	public GameObject demoGameOverMenu;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public GameObject demoMainMenuButton;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text demoGameStatusText;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Text demoMessageText;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A0490", Offset = "0x3A0490")]
	public GameObject starImageHolder;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Image oneStarImage;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image twoStarImage;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Image threeStarImage;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public bool gameOverMenuHidden;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	[HideInInspector]
	public bool demoLevelNotWon;

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0x63BD9C", Offset = "0x63BD9C", VA = "0x63BD9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0x63BE4C", Offset = "0x63BE4C", VA = "0x63BE4C")]
	public void ShowWinMessage()
	{
	}

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0x63C008", Offset = "0x63C008", VA = "0x63C008")]
	public void ShowSurvivalUnlockWinMessage()
	{
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0x63C118", Offset = "0x63C118", VA = "0x63C118")]
	public void ShowLastLevelWinMessage()
	{
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0x63C228", Offset = "0x63C228", VA = "0x63C228")]
	public void ShowLoseMessage()
	{
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0x63C338", Offset = "0x63C338", VA = "0x63C338")]
	public void ShowGameOverMenu(bool show)
	{
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0x63D660", Offset = "0x63D660", VA = "0x63D660")]
	public void ShowDemoGameOverMenu(bool _show)
	{
	}

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0x63D310", Offset = "0x63D310", VA = "0x63D310")]
	private void HidePillar()
	{
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0x63D33C", Offset = "0x63D33C", VA = "0x63D33C")]
	private void AdjustGameOverStars(int _stars)
	{
	}

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0x63D78C", Offset = "0x63D78C", VA = "0x63D78C")]
	public void RestartWithOutSavedFortButtonPressed()
	{
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0x63DEFC", Offset = "0x63DEFC", VA = "0x63DEFC")]
	public void RestartButtonPressed()
	{
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0x63DF98", Offset = "0x63DF98", VA = "0x63DF98")]
	public void NextLevelButtonPressed()
	{
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0x63E034", Offset = "0x63E034", VA = "0x63E034")]
	public void RestartWithSavedFortButtonPressed()
	{
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0x63E23C", Offset = "0x63E23C", VA = "0x63E23C")]
	public void MainMenuButtonPressed()
	{
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x63E434", Offset = "0x63E434", VA = "0x63E434")]
	public void SettingsButtonPressed()
	{
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0x63E594", Offset = "0x63E594", VA = "0x63E594")]
	public UIManagerGameOver()
	{
	}
}
[Token(Token = "0x200019E")]
public class UIManagerLeaderboard : Singleton<UIManagerLeaderboard>
{
	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A04E4", Offset = "0x3A04E4")]
	public GameObject leaderboardPanel;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Text leaderboardTopText;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject leaderboardItemPrefab;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform leaderboardGrid;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private List<GameObject> leaderboardItems;

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0x63E624", Offset = "0x63E624", VA = "0x63E624")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0x63E69C", Offset = "0x63E69C", VA = "0x63E69C")]
	public void ShowLeaderboardMenu(List<LeaderboardEntry> entries)
	{
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0x63A49C", Offset = "0x63A49C", VA = "0x63A49C")]
	public void LeaderboardCloseButtonPressed()
	{
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0x63EAB4", Offset = "0x63EAB4", VA = "0x63EAB4")]
	public UIManagerLeaderboard()
	{
	}
}
[Token(Token = "0x200019F")]
public class UIManagerMainMenu : Singleton<UIManagerMainMenu>
{
	[Token(Token = "0x20006D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BD14", Offset = "0x39BD14")]
	private sealed class <HeightAdjustAcceptWaitToChange>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40026AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40026B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float delay;

		[Token(Token = "0x40026B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public UIManagerMainMenu <>4__this;

		[Token(Token = "0x1700052A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F8F")]
			[Address(RVA = "0x6403B8", Offset = "0x6403B8", VA = "0x6403B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700052B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F91")]
			[Address(RVA = "0x640438", Offset = "0x640438", VA = "0x640438", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F8C")]
		[Address(RVA = "0x63FF6C", Offset = "0x63FF6C", VA = "0x63FF6C")]
		[DebuggerHidden]
		public <HeightAdjustAcceptWaitToChange>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x6002F8D")]
		[Address(RVA = "0x640218", Offset = "0x640218", VA = "0x640218", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F8E")]
		[Address(RVA = "0x64021C", Offset = "0x64021C", VA = "0x64021C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F90")]
		[Address(RVA = "0x6403C0", Offset = "0x6403C0", VA = "0x6403C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float gameModeObjectRotateSpeed;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject survivalLockedText;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject survivalDemoLockedText;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject fortressLockedText;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject fortressDemoLockedText;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject multiplayerDemoLockedText;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject helpImageLarge;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text snowFortModeText;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Text survivalModeText;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text fortressModeText;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Text multiplayerModeText;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text wristStrapText;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A0518", Offset = "0x3A0518")]
	public GameObject creditsPrefab;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform creditsRoomscaleSpawnPoint;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Transform creditsStandingSpawnPoint;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform creditsSpawnLocation;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A054C", Offset = "0x3A054C")]
	public GameObject helppagePrefab;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform helppageRoomscaleSpawnPoint;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Transform helppageStandingSpawnPoint;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform helppageSpawnLocation;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private List<GameObject> objectsListForDestruction;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A0580", Offset = "0x3A0580")]
	public GameObject pleaseUse2ControllersTextObject;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public GameObject pleaseConnectToInternetTextObject;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject heightAdjustTextObject;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public GameObject surroundingsTextObject;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject heightAdjustMenu;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Text feetHeightText;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text inchHeightText;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float menuMinHeight;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int feetHeight;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int inchHeight;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private NVRPlayerSnow playerSnow;

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0x63EB3C", Offset = "0x63EB3C", VA = "0x63EB3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0x63F468", Offset = "0x63F468", VA = "0x63F468")]
	public void AskForCreditsObject()
	{
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0x63EF50", Offset = "0x63EF50", VA = "0x63EF50")]
	private void CreateCreditsObject()
	{
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0x63F46C", Offset = "0x63F46C", VA = "0x63F46C")]
	public void AskForHelppageObject()
	{
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0x63F1DC", Offset = "0x63F1DC", VA = "0x63F1DC")]
	private void CreateHelppageObject()
	{
	}

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0x63F470", Offset = "0x63F470", VA = "0x63F470")]
	public void ResetListOfObjects()
	{
	}

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0x63F56C", Offset = "0x63F56C", VA = "0x63F56C")]
	public void ShowSurvivalLockedText()
	{
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0x63F598", Offset = "0x63F598", VA = "0x63F598")]
	public void ShowFortressLockedText()
	{
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0x63F5C4", Offset = "0x63F5C4", VA = "0x63F5C4")]
	public void ShowHelpImageLarge()
	{
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0x63F5F0", Offset = "0x63F5F0", VA = "0x63F5F0")]
	public void ShowDemoLockedText()
	{
	}

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0x63F640", Offset = "0x63F640", VA = "0x63F640")]
	public void OptionsButtonPressed()
	{
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0x63F818", Offset = "0x63F818", VA = "0x63F818")]
	public void ShowHeightAdjustmentMenu()
	{
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0x63F8EC", Offset = "0x63F8EC", VA = "0x63F8EC")]
	private void SetHeightMenuNumbers()
	{
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0x63FDE0", Offset = "0x63FDE0", VA = "0x63FDE0")]
	public void HeightAdjustCancelButtonPressed()
	{
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0x63FEA0", Offset = "0x63FEA0", VA = "0x63FEA0")]
	public void HeightAdjustAcceptButtonPressed()
	{
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0x63FEC8", Offset = "0x63FEC8", VA = "0x63FEC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AA80C", Offset = "0x3AA80C")]
	private IEnumerator HeightAdjustAcceptWaitToChange(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0x63FF8C", Offset = "0x63FF8C", VA = "0x63FF8C")]
	public void HeightAdjustFeetButtonPressed(bool plus)
	{
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0x640000", Offset = "0x640000", VA = "0x640000")]
	public void HeightAdjustInchButtonPressed(bool plus)
	{
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0x63F9B0", Offset = "0x63F9B0", VA = "0x63F9B0")]
	private void DisplayInFrontOfPlayer(GameObject uiElement)
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0x640098", Offset = "0x640098", VA = "0x640098")]
	public void HideFortressMode()
	{
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0x6400E0", Offset = "0x6400E0", VA = "0x6400E0")]
	public void HideMultiplayerMode()
	{
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0x640128", Offset = "0x640128", VA = "0x640128")]
	public void HideWristStrapText()
	{
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0x640170", Offset = "0x640170", VA = "0x640170")]
	public UIManagerMainMenu()
	{
	}
}
[Token(Token = "0x20001A0")]
public class UIManagerMainMenuOptionsMenu : Singleton<UIManagerMainMenuOptionsMenu>
{
	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A05B4", Offset = "0x3A05B4")]
	public GameObject optionsMenu;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject musicOnOffToggleButton;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Slider volumeSlider;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject helpPageLarge;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A05E8", Offset = "0x3A05E8")]
	public Image[] qualityButtons;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject qualitySection;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A061C", Offset = "0x3A061C")]
	public GameObject messageBoxObject;

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0x640440", Offset = "0x640440", VA = "0x640440")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0x640548", Offset = "0x640548", VA = "0x640548")]
	public void ShowOptionsMenu(bool show)
	{
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0x63F6D8", Offset = "0x63F6D8", VA = "0x63F6D8")]
	public void ToggleOptionsMenu()
	{
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0x6407F0", Offset = "0x6407F0", VA = "0x6407F0")]
	public void ToggleMusicOnOrOffButtonPressed()
	{
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0x640444", Offset = "0x640444", VA = "0x640444")]
	public void SetInitalVolumeOnSlider()
	{
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0x640A04", Offset = "0x640A04", VA = "0x640A04")]
	public void AdjustVolume()
	{
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0x640BAC", Offset = "0x640BAC", VA = "0x640BAC")]
	public void QualitySelected(int level)
	{
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0x640BC8", Offset = "0x640BC8", VA = "0x640BC8")]
	private void SetQualityLevel(int level)
	{
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0x6406FC", Offset = "0x6406FC", VA = "0x6406FC")]
	private void ShowQualityLevel(int level)
	{
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0x640CBC", Offset = "0x640CBC", VA = "0x640CBC")]
	public void QuitButtonPressed()
	{
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0x640CC4", Offset = "0x640CC4", VA = "0x640CC4")]
	public void MessageExitButtonPressed()
	{
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0x640D38", Offset = "0x640D38", VA = "0x640D38")]
	public void MessageCancelButtonPressed()
	{
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0x640D64", Offset = "0x640D64", VA = "0x640D64")]
	public UIManagerMainMenuOptionsMenu()
	{
	}
}
[Token(Token = "0x20001A1")]
public class UIManagerMultiplayerMenu : Singleton<UIManagerMultiplayerMenu>
{
	[Token(Token = "0x20006D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BD24", Offset = "0x39BD24")]
	private sealed class <HideConnectionStatus>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40026B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40026B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float delay;

		[Token(Token = "0x40026B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public UIManagerMultiplayerMenu <>4__this;

		[Token(Token = "0x1700052C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F95")]
			[Address(RVA = "0x6431FC", Offset = "0x6431FC", VA = "0x6431FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700052D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F97")]
			[Address(RVA = "0x64327C", Offset = "0x64327C", VA = "0x64327C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F92")]
		[Address(RVA = "0x64240C", Offset = "0x64240C", VA = "0x64240C")]
		[DebuggerHidden]
		public <HideConnectionStatus>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6002F93")]
		[Address(RVA = "0x643100", Offset = "0x643100", VA = "0x643100", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F94")]
		[Address(RVA = "0x643104", Offset = "0x643104", VA = "0x643104", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F96")]
		[Address(RVA = "0x643204", Offset = "0x643204", VA = "0x643204", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20006D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BD34", Offset = "0x39BD34")]
	private sealed class <>c
	{
		[Token(Token = "0x40026B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40026B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static Func<SFFriend, string> <>9__34_0;

		[Token(Token = "0x40026B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<SFFriend, bool> <>9__34_1;

		[Token(Token = "0x6002F99")]
		[Address(RVA = "0x6430AC", Offset = "0x6430AC", VA = "0x6430AC")]
		public <>c()
		{
		}

		[Token(Token = "0x6002F9A")]
		[Address(RVA = "0x6430B4", Offset = "0x6430B4", VA = "0x6430B4")]
		internal string <ShowFriendsList>b__34_0(SFFriend x)
		{
			return null;
		}

		[Token(Token = "0x6002F9B")]
		[Address(RVA = "0x6430D4", Offset = "0x6430D4", VA = "0x6430D4")]
		internal bool <ShowFriendsList>b__34_1(SFFriend x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Text connectionStatusText;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Text instructionText;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A0650", Offset = "0x3A0650")]
	public GameObject friendListItemPrefab;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform playerListPanel;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A0684", Offset = "0x3A0684")]
	public GameObject[] gameModeTextObjects;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject findFriendsGameModeText;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x3A06B8", Offset = "0x3A06B8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A06B8", Offset = "0x3A06B8")]
	public GameObject topPanel;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject placeHereText;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GameObject multiplayerTipsPrefab;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject refreshText;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public GameObject backButtonText;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject waitingForServerPanel;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A0700", Offset = "0x3A0700")]
	public GameObject previousMatchHolder;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform statsHolder;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public GameObject scoreEntryPrefab;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RectTransform mainMenuPanel;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public RectTransform lobbyPanel;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject addPlayerButton;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected RectTransform currentPanel;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Button backButton;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Text statusInfo;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text hostInfo;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private List<GameObject> playerItemsList;

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0x640DEC", Offset = "0x640DEC", VA = "0x640DEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0x640F3C", Offset = "0x640F3C", VA = "0x640F3C")]
	private void Display_PreviousGameStats()
	{
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0x642058", Offset = "0x642058", VA = "0x642058")]
	public void ChangeTo(RectTransform newPanel)
	{
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0x6421CC", Offset = "0x6421CC", VA = "0x6421CC")]
	public void ShowConnectionStatus(bool show, string message, bool autoHide = false)
	{
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0x642368", Offset = "0x642368", VA = "0x642368")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AA87C", Offset = "0x3AA87C")]
	private IEnumerator HideConnectionStatus(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0x64242C", Offset = "0x64242C", VA = "0x64242C")]
	public void SetInstructionText(string key)
	{
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0x642470", Offset = "0x642470", VA = "0x642470")]
	public void ShowGameModeTextObjects(bool show)
	{
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0x6424F8", Offset = "0x6424F8", VA = "0x6424F8")]
	public void HideUIForArcade()
	{
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0x642568", Offset = "0x642568", VA = "0x642568")]
	public void HideFindFriendsUI()
	{
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0x6425B8", Offset = "0x6425B8", VA = "0x6425B8")]
	public void HideWaitingForServerMessage()
	{
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0x642664", Offset = "0x642664", VA = "0x642664")]
	public void ShowRoomsList(RoomInfo[] rooms)
	{
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0x6429BC", Offset = "0x6429BC", VA = "0x6429BC")]
	public void ShowFriendsList(List<SFFriend> friendsList, bool connectedPlayersList = false)
	{
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0x6428C0", Offset = "0x6428C0", VA = "0x6428C0")]
	public void ClearPlayersList()
	{
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0x642D64", Offset = "0x642D64", VA = "0x642D64")]
	public void FriendInvited(SFFriend friend)
	{
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0x642E6C", Offset = "0x642E6C", VA = "0x642E6C")]
	public void ReadyPlayer(bool ready, int playerId)
	{
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0x642F58", Offset = "0x642F58", VA = "0x642F58")]
	public void ShowRefreshText(bool show)
	{
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0x642F88", Offset = "0x642F88", VA = "0x642F88")]
	public void ShowBackButtonText(bool show)
	{
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0x642FB8", Offset = "0x642FB8", VA = "0x642FB8")]
	public UIManagerMultiplayerMenu()
	{
	}
}
[Token(Token = "0x20001A2")]
public class UIManagerMultiplayerSettings : Singleton<UIManagerMultiplayerSettings>
{
	[Token(Token = "0x20006D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BD44", Offset = "0x39BD44")]
	private sealed class <SetProperToggleButtonRoutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40026BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40026BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIManagerMultiplayerSettings <>4__this;

		[Token(Token = "0x1700052E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F9F")]
			[Address(RVA = "0x643F40", Offset = "0x643F40", VA = "0x643F40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700052F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FA1")]
			[Address(RVA = "0x643FC0", Offset = "0x643FC0", VA = "0x643FC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F9C")]
		[Address(RVA = "0x6439DC", Offset = "0x6439DC", VA = "0x6439DC")]
		[DebuggerHidden]
		public <SetProperToggleButtonRoutine>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6002F9D")]
		[Address(RVA = "0x643CFC", Offset = "0x643CFC", VA = "0x643CFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F9E")]
		[Address(RVA = "0x643D00", Offset = "0x643D00", VA = "0x643D00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FA0")]
		[Address(RVA = "0x643F48", Offset = "0x643F48", VA = "0x643F48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject settingsMenu;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MCGToggleGroup distancePVPToggles;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public MCGToggleGroup distanceCOOPToggles;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MCGToggleGroup startingBlocksToggles;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public MCGToggleGroup weaponToggles;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MCGToggleGroup gamemodeToggles;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject noneWeaponButton;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject pvpDistanceButtons;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GameObject coopDistanceButtons;

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0x643284", Offset = "0x643284", VA = "0x643284")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0x643838", Offset = "0x643838", VA = "0x643838")]
	public void ShowPanel(bool show)
	{
	}

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0x643868", Offset = "0x643868", VA = "0x643868")]
	public void StartButtonPressed()
	{
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0x6433B0", Offset = "0x6433B0", VA = "0x6433B0")]
	public void EnableProperGamemodeButtons()
	{
	}

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0x64395C", Offset = "0x64395C", VA = "0x64395C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AA8EC", Offset = "0x3AA8EC")]
	private IEnumerator SetProperToggleButtonRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0x6439FC", Offset = "0x6439FC", VA = "0x6439FC")]
	public void MultiplayerPVPFortVariationSelected(int selectionIndex)
	{
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0x643A94", Offset = "0x643A94", VA = "0x643A94")]
	public void MultiplayerCoopFortVariationSelected(int selectionIndex)
	{
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0x643B2C", Offset = "0x643B2C", VA = "0x643B2C")]
	public void MultiplayerGameModeSelected(int selectionIndex)
	{
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0x643C18", Offset = "0x643C18", VA = "0x643C18")]
	public UIManagerMultiplayerSettings()
	{
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0x643CA0", Offset = "0x643CA0", VA = "0x643CA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AA95C", Offset = "0x3AA95C")]
	private void <Start>b__9_0(int <p0>)
	{
	}
}
[Token(Token = "0x20001A3")]
public class UIManagerOptionsMenu : Singleton<UIManagerOptionsMenu>
{
	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float menuMinHeight;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A0734", Offset = "0x3A0734")]
	public GameObject optionsMenu;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject optionsMenuBackgroundNormal;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject optionsMenuBackgroundSmallerForDemo;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject mainMenuButton;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Toggle triggerThrowToggle;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject levelSelectButton;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject musicOnOffToggleButton;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GameObject voiceChatOnOffToggleButton;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject restartOptionsButton;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public GameObject restartHalfSizeOptionsButton;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject restartWithSavedFortOptionsButton;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Slider volumeSlider;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject helpPageLarge;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A0768", Offset = "0x3A0768")]
	public Image[] qualityButtons;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject qualitySection;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A079C", Offset = "0x3A079C")]
	public GameObject debugMenu;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image unlockAllLevelsButtonImage;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Image invincibleButtonImage;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A07D0", Offset = "0x3A07D0")]
	public GameObject messageBoxObject;

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0x643FC8", Offset = "0x643FC8", VA = "0x643FC8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0x644468", Offset = "0x644468", VA = "0x644468")]
	public void ShowOptionsMenu(bool show)
	{
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0x644E08", Offset = "0x644E08", VA = "0x644E08")]
	private void DisplayInFrontOfPlayer(GameObject uiElement)
	{
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0x644BBC", Offset = "0x644BBC", VA = "0x644BBC")]
	private void DisplayAtCabinPosition(GameObject uiElement)
	{
	}

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0x645384", Offset = "0x645384", VA = "0x645384")]
	public void ToggleOptionsMenu()
	{
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0x63E0C4", Offset = "0x63E0C4", VA = "0x63E0C4")]
	public void RestartWithSavedFortButtonPressed()
	{
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0x63DAE4", Offset = "0x63DAE4", VA = "0x63DAE4")]
	public void RestartWithOutSavedFortButtonPressed()
	{
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0x63E2D4", Offset = "0x63E2D4", VA = "0x63E2D4")]
	public void MainMenuButtonPressed()
	{
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0x645558", Offset = "0x645558", VA = "0x645558")]
	public void LevelSelectButtonPressed()
	{
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0x645710", Offset = "0x645710", VA = "0x645710")]
	public void DebugResetStatsButtonPressed()
	{
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0x645888", Offset = "0x645888", VA = "0x645888")]
	public void DebugUnlockAllLevelsButtonPressed()
	{
	}

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0x645B44", Offset = "0x645B44", VA = "0x645B44")]
	public void DebugInvincibleButtonPressed()
	{
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0x645D4C", Offset = "0x645D4C", VA = "0x645D4C")]
	public void ToggleMusicOnOrOffButtonPressed()
	{
	}

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0x645F60", Offset = "0x645F60", VA = "0x645F60")]
	public void ToggleVoiceChatOnOrOffButtonPressed()
	{
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0x644364", Offset = "0x644364", VA = "0x644364")]
	public void SetInitalVolumeOnSlider()
	{
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0x646098", Offset = "0x646098", VA = "0x646098")]
	public void AdjustVolume()
	{
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0x646238", Offset = "0x646238", VA = "0x646238")]
	public void QualitySelected(int level)
	{
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0x645290", Offset = "0x645290", VA = "0x645290")]
	private void ShowQualityLevel(int level)
	{
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0x6462E0", Offset = "0x6462E0", VA = "0x6462E0")]
	public void TriggerThrowToggleSelected()
	{
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0x646380", Offset = "0x646380", VA = "0x646380")]
	public void QuitButtonPressed()
	{
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0x646388", Offset = "0x646388", VA = "0x646388")]
	public void MessageExitButtonPressed()
	{
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0x6463FC", Offset = "0x6463FC", VA = "0x6463FC")]
	public void MessageCancelButtonPressed()
	{
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0x646428", Offset = "0x646428", VA = "0x646428")]
	public UIManagerOptionsMenu()
	{
	}
}
[Token(Token = "0x20001A4")]
public class UIManagerStatsSection : Singleton<UIManagerStatsSection>
{
	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A0804", Offset = "0x3A0804")]
	public Transform statsSection;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Text pointsTotalText;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Text COOPSharedScoreText;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject healthBarImages;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject sofaHealthBar;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] healthBoxes;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Image[] healthXs;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider sofaHealthBarSlider;

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0x6464B8", Offset = "0x6464B8", VA = "0x6464B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0x646B48", Offset = "0x646B48", VA = "0x646B48")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0x646BFC", Offset = "0x646BFC", VA = "0x646BFC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0x6464BC", Offset = "0x6464BC", VA = "0x6464BC")]
	public void Init()
	{
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0x646CB0", Offset = "0x646CB0", VA = "0x646CB0")]
	public void ResetHealth()
	{
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0x647088", Offset = "0x647088", VA = "0x647088")]
	public void ClearHealth()
	{
	}

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0x64719C", Offset = "0x64719C", VA = "0x64719C")]
	public void ChangeHealthCounter(int newHealth, int newMaxHealth = -1)
	{
	}

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0x647404", Offset = "0x647404", VA = "0x647404")]
	public void UpdatePointsTotal(string text)
	{
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0x6475E4", Offset = "0x6475E4", VA = "0x6475E4")]
	public void COOPUpdateSharedPointsTotal(string text)
	{
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0x6476D8", Offset = "0x6476D8", VA = "0x6476D8")]
	public void TeamPVPUpdateTeamPointsTotal(string text)
	{
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0x6477B4", Offset = "0x6477B4", VA = "0x6477B4")]
	public UIManagerStatsSection()
	{
	}
}
[Token(Token = "0x20001A5")]
public class UIPrivacySystem : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20006D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BD54", Offset = "0x39BD54")]
	private sealed class <ProgressCountdown>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40026BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40026BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIPrivacySystem <>4__this;

		[Token(Token = "0x40026BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Action callback;

		[Token(Token = "0x40026C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float <currentTime>5__2;

		[Token(Token = "0x17000530")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002FA5")]
			[Address(RVA = "0x648F20", Offset = "0x648F20", VA = "0x648F20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000531")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FA7")]
			[Address(RVA = "0x648FA0", Offset = "0x648FA0", VA = "0x648FA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FA2")]
		[Address(RVA = "0x6484B0", Offset = "0x6484B0", VA = "0x6484B0")]
		[DebuggerHidden]
		public <ProgressCountdown>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002FA3")]
		[Address(RVA = "0x648DB4", Offset = "0x648DB4", VA = "0x648DB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002FA4")]
		[Address(RVA = "0x648DB8", Offset = "0x648DB8", VA = "0x648DB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FA6")]
		[Address(RVA = "0x648F28", Offset = "0x648F28", VA = "0x648F28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BD64", Offset = "0x39BD64")]
	private sealed class <Lerp_Position>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40026C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40026C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIPrivacySystem <>4__this;

		[Token(Token = "0x17000532")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002FAB")]
			[Address(RVA = "0x6487A4", Offset = "0x6487A4", VA = "0x6487A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000533")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FAD")]
			[Address(RVA = "0x648824", Offset = "0x648824", VA = "0x648824", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FA8")]
		[Address(RVA = "0x6484D0", Offset = "0x6484D0", VA = "0x6484D0")]
		[DebuggerHidden]
		public <Lerp_Position>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6002FA9")]
		[Address(RVA = "0x6485D8", Offset = "0x6485D8", VA = "0x6485D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002FAA")]
		[Address(RVA = "0x6485DC", Offset = "0x6485DC", VA = "0x6485DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FAC")]
		[Address(RVA = "0x6487AC", Offset = "0x6487AC", VA = "0x6487AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BD74", Offset = "0x39BD74")]
	private sealed class <Lerp_Rotation>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40026C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40026C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIPrivacySystem <>4__this;

		[Token(Token = "0x17000534")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002FB1")]
			[Address(RVA = "0x648D2C", Offset = "0x648D2C", VA = "0x648D2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000535")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FB3")]
			[Address(RVA = "0x648DAC", Offset = "0x648DAC", VA = "0x648DAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FAE")]
		[Address(RVA = "0x6484F0", Offset = "0x6484F0", VA = "0x6484F0")]
		[DebuggerHidden]
		public <Lerp_Rotation>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6002FAF")]
		[Address(RVA = "0x648AC0", Offset = "0x648AC0", VA = "0x648AC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002FB0")]
		[Address(RVA = "0x648AC4", Offset = "0x648AC4", VA = "0x648AC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FB2")]
		[Address(RVA = "0x648D34", Offset = "0x648D34", VA = "0x648D34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BD84", Offset = "0x39BD84")]
	private sealed class <Lerp_Pulse>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40026C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40026C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIPrivacySystem <>4__this;

		[Token(Token = "0x17000536")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002FB7")]
			[Address(RVA = "0x648A38", Offset = "0x648A38", VA = "0x648A38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000537")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FB9")]
			[Address(RVA = "0x648AB8", Offset = "0x648AB8", VA = "0x648AB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FB4")]
		[Address(RVA = "0x648510", Offset = "0x648510", VA = "0x648510")]
		[DebuggerHidden]
		public <Lerp_Pulse>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6002FB5")]
		[Address(RVA = "0x64882C", Offset = "0x64882C", VA = "0x64882C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002FB6")]
		[Address(RVA = "0x648830", Offset = "0x648830", VA = "0x648830", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FB8")]
		[Address(RVA = "0x648A40", Offset = "0x648A40", VA = "0x648A40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float maxScale;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float minScale;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float speed;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lerpPosRate;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float lerpRotRate;

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float xRotMin;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float xRotMax;

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float countdownTime;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Slider countdownSlider;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _trackTransform;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 tempRotVector;

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0x648178", Offset = "0x648178", VA = "0x648178")]
	public void TrackTransform(Transform transform)
	{
	}

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0x6483F4", Offset = "0x6483F4", VA = "0x6483F4")]
	public void Start_Countdown(Action callback)
	{
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0x648418", Offset = "0x648418", VA = "0x648418")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AA96C", Offset = "0x3AA96C")]
	private IEnumerator ProgressCountdown(Action callback)
	{
		return null;
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0x648274", Offset = "0x648274", VA = "0x648274")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AA9DC", Offset = "0x3AA9DC")]
	private IEnumerator Lerp_Position()
	{
		return null;
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0x6482F4", Offset = "0x6482F4", VA = "0x6482F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AAA4C", Offset = "0x3AAA4C")]
	private IEnumerator Lerp_Rotation()
	{
		return null;
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0x648374", Offset = "0x648374", VA = "0x648374")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AAABC", Offset = "0x3AAABC")]
	private IEnumerator Lerp_Pulse()
	{
		return null;
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0x648530", Offset = "0x648530", VA = "0x648530")]
	public UIPrivacySystem()
	{
	}
}
[Token(Token = "0x20001A6")]
public class VehicleController : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float defaultMoveSpeed;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float maxMoveSpeed;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float minMoveSpeed;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float moveSpeedLossInterval;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float moveSpeedLossAmount;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float rotationSpeed;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Transform startPosition;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform coalDropZone;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Rigidbody myRigidbody;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SplineFollowerSF[] trainControllers;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Transform[] trainCars;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] trainCarsLocalZReset;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Transform speedArrowPivot;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float currentMoveSpeed;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float timeSinceLastMoveSpeedInterval;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] trackMarkerPositions;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private List<Vector3> trackSplinePoints;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int currentSplinePoint;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool endOfTrack;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PhotonView myPhotonView;

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0x86A908", Offset = "0x86A908", VA = "0x86A908")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0x86A9F4", Offset = "0x86A9F4", VA = "0x86A9F4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0x86ACE0", Offset = "0x86ACE0", VA = "0x86ACE0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0x86ADD8", Offset = "0x86ADD8", VA = "0x86ADD8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0x86AED0", Offset = "0x86AED0", VA = "0x86AED0")]
	private void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0x86AC5C", Offset = "0x86AC5C", VA = "0x86AC5C")]
	private void SetSpeed(float speed)
	{
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0x86AFD8", Offset = "0x86AFD8", VA = "0x86AFD8")]
	private void LevelSetup()
	{
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0x86B3B8", Offset = "0x86B3B8", VA = "0x86B3B8")]
	private void ResetCars()
	{
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0x86B7DC", Offset = "0x86B7DC", VA = "0x86B7DC")]
	[PunRPC]
	private void SyncCarPos(int carID, Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0x86B8FC", Offset = "0x86B8FC", VA = "0x86B8FC")]
	private void GameOver()
	{
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0x86A9D8", Offset = "0x86A9D8", VA = "0x86A9D8")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0x86B904", Offset = "0x86B904", VA = "0x86B904")]
	public void CoalAdded()
	{
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0x86BA10", Offset = "0x86BA10", VA = "0x86BA10")]
	public VehicleController()
	{
	}
}
[Token(Token = "0x20001A7")]
public static class Viveport_InitHandler
{
	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool _bIsInitalized;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	private static bool _bIsReady;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	private static bool _bIsFinishedUploadingScore;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
	private static bool _bIsFinishedDownloadingScore;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly string VIVEPORT_APP_ID;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly string VIVEPORT_APP_KEY;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly string VIVEPORT_APP_ARCADE_ID;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly string VIVEPORT_APP_ARCADE_KEY;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static int _runtimeMode;

	[Token(Token = "0x17000180")]
	public static bool IsInitalized
	{
		[Token(Token = "0x6000E93")]
		[Address(RVA = "0x88504C", Offset = "0x88504C", VA = "0x88504C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000181")]
	public static bool IsReady
	{
		[Token(Token = "0x6000E94")]
		[Address(RVA = "0x8850C4", Offset = "0x8850C4", VA = "0x8850C4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000182")]
	public static bool IsFinishedUploadingScore
	{
		[Token(Token = "0x6000E95")]
		[Address(RVA = "0x88513C", Offset = "0x88513C", VA = "0x88513C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000183")]
	public static bool IsFinishedDownloadingScore
	{
		[Token(Token = "0x6000E96")]
		[Address(RVA = "0x8851B4", Offset = "0x8851B4", VA = "0x8851B4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000184")]
	public static int RuntimeMode
	{
		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x88522C", Offset = "0x88522C", VA = "0x88522C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000185")]
	public static bool IsArcadeMode
	{
		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x8852A4", Offset = "0x8852A4", VA = "0x8852A4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0x88537C", Offset = "0x88537C", VA = "0x88537C")]
	public static void Initalize_Viveport()
	{
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0x8854E8", Offset = "0x8854E8", VA = "0x8854E8")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0x8856DC", Offset = "0x8856DC", VA = "0x8856DC")]
	private static void IsReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0x88590C", Offset = "0x88590C", VA = "0x88590C")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0x8859C8", Offset = "0x8859C8", VA = "0x8859C8")]
	private static void QueryRunTimeHandler(int nResult, int nMode)
	{
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0x885CBC", Offset = "0x885CBC", VA = "0x885CBC")]
	public static void ResetScoreStatusBools()
	{
	}

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0x885D44", Offset = "0x885D44", VA = "0x885D44")]
	public static void DownloadLeaderboardHandler(int nResult)
	{
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0x885EB4", Offset = "0x885EB4", VA = "0x885EB4")]
	public static void UploadLeaderboardScoreHandler(int nResult)
	{
	}
}
[Token(Token = "0x20001A8")]
internal class Viveport_LicenceChecker : Viveport.Api.LicenseChecker
{
	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0x886110", Offset = "0x886110", VA = "0x886110", Slot = "4")]
	public override void OnSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired)
	{
	}

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0x886284", Offset = "0x886284", VA = "0x886284", Slot = "5")]
	public override void OnFailure(int errorCode, string errorMessage)
	{
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0x885904", Offset = "0x885904", VA = "0x885904")]
	public Viveport_LicenceChecker()
	{
	}
}
[Token(Token = "0x20001A9")]
public class WaterBottle : Tool
{
	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public ParticleSystem waterSpray;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float maxFillAmount;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float currentFillAmount;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float fillRate;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject fillCylinder;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public Transform fillCylinderParentTransform;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private EventInstance waterSprayLoopSoundInstance;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private bool isUsing;

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0xEEA480", Offset = "0xEEA480", VA = "0xEEA480", Slot = "28")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0xEEA540", Offset = "0xEEA540", VA = "0xEEA540", Slot = "29")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0xEEA600", Offset = "0xEEA600", VA = "0xEEA600", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0xEEA62C", Offset = "0xEEA62C", VA = "0xEEA62C", Slot = "12")]
	public override void InteractingUpdate(NVRHand hand)
	{
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0xEEA650", Offset = "0xEEA650", VA = "0xEEA650")]
	private void UseTool(bool use)
	{
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0xEEA904", Offset = "0xEEA904", VA = "0xEEA904", Slot = "17")]
	public override void UseButtonDown()
	{
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0xEEAAE0", Offset = "0xEEAAE0", VA = "0xEEAAE0", Slot = "16")]
	public override void UseButtonUp()
	{
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0xEEAB00", Offset = "0xEEAB00", VA = "0xEEAB00", Slot = "14")]
	public override void EndInteraction(NVRHand hand)
	{
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0xEEAB2C", Offset = "0xEEAB2C", VA = "0xEEAB2C")]
	private void OnRebuild(bool rebuild)
	{
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0xEEAB6C", Offset = "0xEEAB6C", VA = "0xEEAB6C", Slot = "31")]
	public override void RefillTool()
	{
	}

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0xEEABD4", Offset = "0xEEABD4", VA = "0xEEABD4", Slot = "32")]
	protected override void OnDestroyed()
	{
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0xEEABDC", Offset = "0xEEABDC", VA = "0xEEABDC")]
	public WaterBottle()
	{
	}
}
[Serializable]
[Token(Token = "0x20001AA")]
public class Wave
{
	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly float enemyHealthIncrement;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int waveIndex;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int[] playerUnitCountByType;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public EnemyTypes[] playerUnitTypes;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int playerBlocksCount;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject playerBlockSpawner;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int[] enemyCountByType;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EnemyTypes[] enemyTypes;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float enemyHealthModifier;

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0xEEABF0", Offset = "0xEEABF0", VA = "0xEEABF0")]
	public Wave()
	{
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0xEEAC00", Offset = "0xEEAC00", VA = "0xEEAC00")]
	public Wave(Wave copyWave)
	{
	}
}
[Token(Token = "0x20001AB")]
public static class Yielders
{
	[Token(Token = "0x20006DD")]
	private class FloatComparer : IEqualityComparer<float>
	{
		[Token(Token = "0x6002FBA")]
		[Address(RVA = "0xEEBC00", Offset = "0xEEBC00", VA = "0xEEBC00", Slot = "4")]
		private bool System.Collections.Generic.IEqualityComparer<System.Single>.Equals(float x, float y)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FBB")]
		[Address(RVA = "0xEEBC1C", Offset = "0xEEBC1C", VA = "0xEEBC1C", Slot = "5")]
		private int System.Collections.Generic.IEqualityComparer<System.Single>.GetHashCode(float obj)
		{
			return default(int);
		}

		[Token(Token = "0x6002FBC")]
		[Address(RVA = "0xEEBBF8", Offset = "0xEEBBF8", VA = "0xEEBBF8")]
		public FloatComparer()
		{
		}
	}

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<float, WaitForSeconds> _timeInterval;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static Dictionary<float, WaitForSecondsRealtime> _timeIntervalRealtime;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static WaitForEndOfFrame _endOfFrame;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static WaitForFixedUpdate _fixedUpdate;

	[Token(Token = "0x17000186")]
	public static WaitForEndOfFrame EndOfFrame
	{
		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0xEEB720", Offset = "0xEEB720", VA = "0xEEB720")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000187")]
	public static WaitForFixedUpdate FixedUpdate
	{
		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0xEEB798", Offset = "0xEEB798", VA = "0xEEB798")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0xEEB810", Offset = "0xEEB810", VA = "0xEEB810")]
	public static WaitForSeconds Get(float seconds)
	{
		return null;
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0xEEB954", Offset = "0xEEB954", VA = "0xEEB954")]
	public static WaitForSecondsRealtime GetRealtime(float seconds)
	{
		return null;
	}
}
[Token(Token = "0x20001AC")]
public class RunTimeCombineAndRelease : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public SimpleMeshCombine simpleMeshCombine;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float combineTime;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float releaseTime;

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0x81E9A0", Offset = "0x81E9A0", VA = "0x81E9A0")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0x81EA00", Offset = "0x81EA00", VA = "0x81EA00")]
	public void Start()
	{
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0x81EB14", Offset = "0x81EB14", VA = "0x81EB14")]
	public void Combine()
	{
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0x81FD70", Offset = "0x81FD70", VA = "0x81FD70")]
	public void Release()
	{
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0x82005C", Offset = "0x82005C", VA = "0x82005C")]
	public RunTimeCombineAndRelease()
	{
	}
}
[Token(Token = "0x20001AD")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x39A33C", Offset = "0x39A33C")]
public class SimpleMeshCombine : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject[] combinedGameOjects;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject combined;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string meshName;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool _canGenerateLightmapUV;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int vCount;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool generateLightmapUV;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject copyTarget;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool destroyOldColliders;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool keepStructure;

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0x81FEC8", Offset = "0x81FEC8", VA = "0x81FEC8")]
	public void EnableRenderers(bool e)
	{
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0x823AEC", Offset = "0x823AEC", VA = "0x823AEC")]
	public MeshFilter[] FindEnabledMeshes()
	{
		return null;
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0x81EBB4", Offset = "0x81EBB4", VA = "0x81EBB4")]
	public void CombineMeshes()
	{
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0x823E00", Offset = "0x823E00", VA = "0x823E00")]
	public int Contains(ArrayList l, Material n)
	{
		return default(int);
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0x823F34", Offset = "0x823F34", VA = "0x823F34")]
	public SimpleMeshCombine()
	{
	}
}
[Token(Token = "0x20001AE")]
public class SimpleMeshCombineMaster : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool generateLightmapUV;

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0x6F74C0", Offset = "0x6F74C0", VA = "0x6F74C0")]
	public SimpleMeshCombineMaster()
	{
	}
}
[Token(Token = "0x20001AF")]
public class ArcadeComponent : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Image arcadeImage;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Text arcadeText;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Text arcadePresentsText;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite[] arcadeSprites;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public string[] arcadeLinks;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int currentArcadeIndex;

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0x6E8444", Offset = "0x6E8444", VA = "0x6E8444")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0x6E85B4", Offset = "0x6E85B4", VA = "0x6E85B4")]
	public void ToggleArcade()
	{
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0x6E8864", Offset = "0x6E8864", VA = "0x6E8864")]
	public ArcadeComponent()
	{
	}
}
[Token(Token = "0x20001B0")]
public class DestroyComponent : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0x7EB594", Offset = "0x7EB594", VA = "0x7EB594")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0x7EB6AC", Offset = "0x7EB6AC", VA = "0x7EB6AC")]
	public DestroyComponent()
	{
	}
}
[Token(Token = "0x20001B1")]
public class DontDestroyComponent : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0x7FCFC8", Offset = "0x7FCFC8", VA = "0x7FCFC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0x7FD054", Offset = "0x7FD054", VA = "0x7FD054")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0x7FD0E0", Offset = "0x7FD0E0", VA = "0x7FD0E0")]
	public DontDestroyComponent()
	{
	}
}
[Token(Token = "0x20001B2")]
public class LookAtComponent : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Transform focus;

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0x6C3DD0", Offset = "0x6C3DD0", VA = "0x6C3DD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0x6C3E4C", Offset = "0x6C3E4C", VA = "0x6C3E4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0x6C3FAC", Offset = "0x6C3FAC", VA = "0x6C3FAC")]
	public LookAtComponent()
	{
	}
}
[Token(Token = "0x20001B3")]
public class PlayerDataUIComponent : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public SofaPlayer thisSofaPlayerData;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject playerUIHolder;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Image playerColorImage;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image playerAvatarMaskImage;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Image playerAvatarImage;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text playerNameText;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Sprite defaultAvatarSprite;

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0x62B9AC", Offset = "0x62B9AC", VA = "0x62B9AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0x62BA78", Offset = "0x62BA78", VA = "0x62BA78")]
	public void UpdatePlayerDataUI(UpdateSofaUserUIMessage message)
	{
	}

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0x62BD54", Offset = "0x62BD54", VA = "0x62BD54")]
	public void ResetPlayerSlot()
	{
	}

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0x62BEA0", Offset = "0x62BEA0", VA = "0x62BEA0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0x62BF6C", Offset = "0x62BF6C", VA = "0x62BF6C")]
	public PlayerDataUIComponent()
	{
	}
}
[Token(Token = "0x20001B4")]
public class SnowManModelComponent : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform[] BodyProxys;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ParticleSystem FootStepParticle;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public ParticleSystem GetSnowBallParticle;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem TouchGroundParticle;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject SnowBallPrefab;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform GrabPoint;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Transform VisualizeGrowingBallPoint;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator ani;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int hFloat;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int vFloat;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int ActionInt;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float h;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float v;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int Action;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private AnimatorStateInfo st;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float ActionReset;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private GameObject SnowBall;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float BodyWeight;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Rigidbody MyRigi;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform playerThrowPos;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Transform playerBlockPos;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform healthBarAnchor;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Destructible myDestuctible;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public MeshRenderer playerSignFront;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public MeshRenderer playerSignBack;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public MeshRenderer playerShield;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public SkinnedMeshRenderer snowmanBodyRenderer;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public SkinnedMeshRenderer snowmanHatRenderer;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public MeshRenderer snowmanHatSeparateRenderer;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public SofaHatComponent hatHelper;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlayerProxy ppRef;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject isHoldingPfx;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool isMovingToPosition;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 prevPos;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 newPosToMoveTo;

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0x6FB4D8", Offset = "0x6FB4D8", VA = "0x6FB4D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0x6FB5A8", Offset = "0x6FB5A8", VA = "0x6FB5A8")]
	public void AdjustMaterialColor(Color c)
	{
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0x6FB938", Offset = "0x6FB938", VA = "0x6FB938")]
	public void SetPlayerProxyReference(PlayerProxy pProxyRef)
	{
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0x6FB940", Offset = "0x6FB940", VA = "0x6FB940")]
	private void TouchGround()
	{
	}

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0x6FB988", Offset = "0x6FB988", VA = "0x6FB988")]
	private void ActivateSign()
	{
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0x6FB9B0", Offset = "0x6FB9B0", VA = "0x6FB9B0")]
	private void DeactivateSign()
	{
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0x6FB9D8", Offset = "0x6FB9D8", VA = "0x6FB9D8")]
	private void IsMovingActive()
	{
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0x6FB9FC", Offset = "0x6FB9FC", VA = "0x6FB9FC")]
	private void IsMovingDeactive()
	{
	}

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0x6FBA20", Offset = "0x6FBA20", VA = "0x6FBA20")]
	private void SetBodyWeight(float _weight)
	{
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0x6FBAC8", Offset = "0x6FBAC8", VA = "0x6FBAC8")]
	private void GetBall()
	{
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0x6FBCB8", Offset = "0x6FBCB8", VA = "0x6FBCB8")]
	public bool CanGetBall()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0x6FBCEC", Offset = "0x6FBCEC", VA = "0x6FBCEC")]
	private void Throw()
	{
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0x6FBDDC", Offset = "0x6FBDDC", VA = "0x6FBDDC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0x6FC264", Offset = "0x6FC264", VA = "0x6FC264")]
	public void DoAction(int _id)
	{
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0x6FC278", Offset = "0x6FC278", VA = "0x6FC278")]
	public void Move(float _direction)
	{
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0x6FC5CC", Offset = "0x6FC5CC", VA = "0x6FC5CC")]
	public void SetStartingPos(Vector3 _newSpotPos)
	{
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0x6FC4F0", Offset = "0x6FC4F0", VA = "0x6FC4F0")]
	public void Crouch()
	{
	}

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0x6FC620", Offset = "0x6FC620", VA = "0x6FC620")]
	public void Jump()
	{
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0x6FC630", Offset = "0x6FC630", VA = "0x6FC630")]
	public void Idle()
	{
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0x6FC640", Offset = "0x6FC640", VA = "0x6FC640")]
	public SnowManModelComponent()
	{
	}
}
[Token(Token = "0x20001B5")]
public class SofaHatComponent : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20006DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BD94", Offset = "0x39BD94")]
	private sealed class <WaitToDestroyHat>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40026CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40026CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float _delay;

		[Token(Token = "0x40026CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public SofaHatComponent <>4__this;

		[Token(Token = "0x17000538")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002FC0")]
			[Address(RVA = "0x70409C", Offset = "0x70409C", VA = "0x70409C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000539")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FC2")]
			[Address(RVA = "0x70411C", Offset = "0x70411C", VA = "0x70411C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FBD")]
		[Address(RVA = "0x703F4C", Offset = "0x703F4C", VA = "0x703F4C")]
		[DebuggerHidden]
		public <WaitToDestroyHat>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002FBE")]
		[Address(RVA = "0x703FA0", Offset = "0x703FA0", VA = "0x703FA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002FBF")]
		[Address(RVA = "0x703FA4", Offset = "0x703FA4", VA = "0x703FA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FC1")]
		[Address(RVA = "0x7040A4", Offset = "0x7040A4", VA = "0x7040A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Rigidbody hatRigidbody;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform hatTransform;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject hatAttached;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject hatSeparate;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A0838", Offset = "0x3A0838")]
	public float explosionForce;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float explosionPosY;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float explosionRadius;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float explosionUpwardsModifier;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float torqueValue;

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0x703BEC", Offset = "0x703BEC", VA = "0x703BEC")]
	public void ExplodeThenDestroy(float _waitToDestroyTime)
	{
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0x703EA8", Offset = "0x703EA8", VA = "0x703EA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AAB3C", Offset = "0x3AAB3C")]
	private IEnumerator WaitToDestroyHat(float _delay)
	{
		return null;
	}

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0x703F70", Offset = "0x703F70", VA = "0x703F70")]
	public SofaHatComponent()
	{
	}
}
[Token(Token = "0x20001B6")]
public class SofaVRCameraComponent : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20006DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BDA4", Offset = "0x39BDA4")]
	private sealed class <TurnOffVRMirror>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40026CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x1700053A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002FC6")]
			[Address(RVA = "0x70D300", Offset = "0x70D300", VA = "0x70D300", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700053B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FC8")]
			[Address(RVA = "0x70D380", Offset = "0x70D380", VA = "0x70D380", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FC3")]
		[Address(RVA = "0x70D224", Offset = "0x70D224", VA = "0x70D224")]
		[DebuggerHidden]
		public <TurnOffVRMirror>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6002FC4")]
		[Address(RVA = "0x70D24C", Offset = "0x70D24C", VA = "0x70D24C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002FC5")]
		[Address(RVA = "0x70D250", Offset = "0x70D250", VA = "0x70D250", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FC7")]
		[Address(RVA = "0x70D308", Offset = "0x70D308", VA = "0x70D308", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0x70D194", Offset = "0x70D194", VA = "0x70D194")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0x70D1B8", Offset = "0x70D1B8", VA = "0x70D1B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AABAC", Offset = "0x3AABAC")]
	private IEnumerator TurnOffVRMirror()
	{
		return null;
	}

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0x70D244", Offset = "0x70D244", VA = "0x70D244")]
	public SofaVRCameraComponent()
	{
	}
}
[Token(Token = "0x20001B7")]
public class SofaVRCanvasComponent : Singleton<SofaVRCanvasComponent>
{
	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Camera sofaCamera;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Canvas sofaCanvas;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Text countdownText;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject vrHealthBar;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Slider vrHealthBarSlider;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] sofaUIPlayerHolders;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Text gameoverText;

	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0x70D388", Offset = "0x70D388", VA = "0x70D388")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0x70D3D8", Offset = "0x70D3D8", VA = "0x70D3D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0x70D4AC", Offset = "0x70D4AC", VA = "0x70D4AC")]
	public void UpdateCountdownTimer(string newText, bool addSToText = false)
	{
	}

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0x70D554", Offset = "0x70D554", VA = "0x70D554")]
	public void ShowGameOverText(bool show, bool sofaTeamWins, List<string> playersNames, bool guestsWin = false)
	{
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0x70D8F4", Offset = "0x70D8F4", VA = "0x70D8F4")]
	public SofaVRCanvasComponent()
	{
	}
}
[Token(Token = "0x20001B8")]
public class FrameRateManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Text fpsText;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int totalFrames;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int markCount;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float markTime;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float freq;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fps;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool isFPSEnabled;

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0x5F12B0", Offset = "0x5F12B0", VA = "0x5F12B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0x5F12C0", Offset = "0x5F12C0", VA = "0x5F12C0")]
	private void CalcFps()
	{
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0x5F142C", Offset = "0x5F142C", VA = "0x5F142C")]
	public FrameRateManager()
	{
	}
}
[Token(Token = "0x20001B9")]
public class SampleManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0x82008C", Offset = "0x82008C", VA = "0x82008C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0x8204A4", Offset = "0x8204A4", VA = "0x8204A4")]
	private void OnClientInput(SofaUserInputData data)
	{
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0x820160", Offset = "0x820160", VA = "0x820160")]
	private void displayGameCode()
	{
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0x82054C", Offset = "0x82054C", VA = "0x82054C")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0x820620", Offset = "0x820620", VA = "0x820620")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0x820624", Offset = "0x820624", VA = "0x820624")]
	public SampleManager()
	{
	}
}
[Token(Token = "0x20001BA")]
public class SofaClientManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20006E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BDB4", Offset = "0x39BDB4")]
	private sealed class <DownloadUserAvatarFromUrl>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40026D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40026D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SofaPlayer data;

		[Token(Token = "0x40026D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public SofaClientManager <>4__this;

		[Token(Token = "0x40026D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private WWW <www>5__2;

		[Token(Token = "0x1700053C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002FCC")]
			[Address(RVA = "0x703B64", Offset = "0x703B64", VA = "0x703B64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700053D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FCE")]
			[Address(RVA = "0x703BE4", Offset = "0x703BE4", VA = "0x703BE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FC9")]
		[Address(RVA = "0x702ECC", Offset = "0x702ECC", VA = "0x702ECC")]
		[DebuggerHidden]
		public <DownloadUserAvatarFromUrl>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6002FCA")]
		[Address(RVA = "0x703938", Offset = "0x703938", VA = "0x703938", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002FCB")]
		[Address(RVA = "0x70393C", Offset = "0x70393C", VA = "0x70393C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FCD")]
		[Address(RVA = "0x703B6C", Offset = "0x703B6C", VA = "0x703B6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SofaClientManager _instance;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public PlayerDataUIComponent[] playerSlots;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Text[] gameCodeTexts;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Transform[] playerPositions;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject sofaVRFortPrefab;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Transform sofaVRFortPrefabPos;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject sofaBlockSmall;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject sofaBlockMed;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject throwObjectPrefab;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float timeToTarget;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material sofaHatMat;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Material sofaVRSnowmanMat;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color sofaVRColor;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject vRPHitPfx;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public readonly List<GameObject> healthBars;

	[Token(Token = "0x17000188")]
	public static SofaClientManager instance
	{
		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x702564", Offset = "0x702564", VA = "0x702564")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0x702718", Offset = "0x702718", VA = "0x702718")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0x7027E0", Offset = "0x7027E0", VA = "0x7027E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0x702980", Offset = "0x702980", VA = "0x702980")]
	private void OnUserChange()
	{
	}

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0x702B7C", Offset = "0x702B7C", VA = "0x702B7C")]
	public void SetPlayerSlots(List<SofaPlayer> players)
	{
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0x702D48", Offset = "0x702D48", VA = "0x702D48")]
	public void UpdateUserDataUI(SofaPlayer data)
	{
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0x702E34", Offset = "0x702E34", VA = "0x702E34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AAC1C", Offset = "0x3AAC1C")]
	private IEnumerator DownloadUserAvatarFromUrl(SofaPlayer data)
	{
		return null;
	}

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0x702A14", Offset = "0x702A14", VA = "0x702A14")]
	private void DisplayGameCode()
	{
	}

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0x702F8C", Offset = "0x702F8C", VA = "0x702F8C")]
	public void SetUpSofaFort()
	{
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0x7031CC", Offset = "0x7031CC", VA = "0x7031CC")]
	public void ResetSofaLevel()
	{
	}

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0x7033F8", Offset = "0x7033F8", VA = "0x7033F8")]
	public void DestroyFortChildren()
	{
	}

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0x703604", Offset = "0x703604", VA = "0x703604")]
	public int GetActivePlayerCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0x703734", Offset = "0x703734", VA = "0x703734")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0x702D7C", Offset = "0x702D7C", VA = "0x702D7C")]
	private void SendUpdatedUserDataMessage(SofaPlayer data)
	{
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0x7038B0", Offset = "0x7038B0", VA = "0x7038B0")]
	public SofaClientManager()
	{
	}
}
[Token(Token = "0x20001BB")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x39A370", Offset = "0x39A370")]
public class PlayerProxy : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20006E1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BDC4", Offset = "0x39BDC4")]
	private sealed class <DelayBlockPlacementSmall>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40026D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40026D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerProxy <>4__this;

		[Token(Token = "0x1700053E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002FD2")]
			[Address(RVA = "0x904ABC", Offset = "0x904ABC", VA = "0x904ABC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700053F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FD4")]
			[Address(RVA = "0x904B3C", Offset = "0x904B3C", VA = "0x904B3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FCF")]
		[Address(RVA = "0x902B88", Offset = "0x902B88", VA = "0x902B88")]
		[DebuggerHidden]
		public <DelayBlockPlacementSmall>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x6002FD0")]
		[Address(RVA = "0x904758", Offset = "0x904758", VA = "0x904758", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002FD1")]
		[Address(RVA = "0x90475C", Offset = "0x90475C", VA = "0x90475C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FD3")]
		[Address(RVA = "0x904AC4", Offset = "0x904AC4", VA = "0x904AC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BDD4", Offset = "0x39BDD4")]
	private sealed class <DelayBlockPlacementMed>d__57 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40026D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40026DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerProxy <>4__this;

		[Token(Token = "0x17000540")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002FD8")]
			[Address(RVA = "0x9046D0", Offset = "0x9046D0", VA = "0x9046D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000541")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FDA")]
			[Address(RVA = "0x904750", Offset = "0x904750", VA = "0x904750", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FD5")]
		[Address(RVA = "0x902C28", Offset = "0x902C28", VA = "0x902C28")]
		[DebuggerHidden]
		public <DelayBlockPlacementMed>d__57(int <>1__state)
		{
		}

		[Token(Token = "0x6002FD6")]
		[Address(RVA = "0x90436C", Offset = "0x90436C", VA = "0x90436C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002FD7")]
		[Address(RVA = "0x904370", Offset = "0x904370", VA = "0x904370", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FD9")]
		[Address(RVA = "0x9046D8", Offset = "0x9046D8", VA = "0x9046D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BDE4", Offset = "0x39BDE4")]
	private sealed class <DelayBlockPlacement>d__58 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40026DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40026DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerProxy <>4__this;

		[Token(Token = "0x40026DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private GameObject <tempBlock>5__2;

		[Token(Token = "0x40026DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform <tempTransform>5__3;

		[Token(Token = "0x17000542")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002FDE")]
			[Address(RVA = "0x9042E4", Offset = "0x9042E4", VA = "0x9042E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000543")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FE0")]
			[Address(RVA = "0x904364", Offset = "0x904364", VA = "0x904364", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FDB")]
		[Address(RVA = "0x902C48", Offset = "0x902C48", VA = "0x902C48")]
		[DebuggerHidden]
		public <DelayBlockPlacement>d__58(int <>1__state)
		{
		}

		[Token(Token = "0x6002FDC")]
		[Address(RVA = "0x903AF0", Offset = "0x903AF0", VA = "0x903AF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002FDD")]
		[Address(RVA = "0x903AF4", Offset = "0x903AF4", VA = "0x903AF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FDF")]
		[Address(RVA = "0x9042EC", Offset = "0x9042EC", VA = "0x9042EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BDF4", Offset = "0x39BDF4")]
	private sealed class <ResetThrowing>d__59 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40026E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40026E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerProxy <>4__this;

		[Token(Token = "0x17000544")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002FE4")]
			[Address(RVA = "0x905394", Offset = "0x905394", VA = "0x905394", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000545")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FE6")]
			[Address(RVA = "0x905414", Offset = "0x905414", VA = "0x905414", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FE1")]
		[Address(RVA = "0x902C68", Offset = "0x902C68", VA = "0x902C68")]
		[DebuggerHidden]
		public <ResetThrowing>d__59(int <>1__state)
		{
		}

		[Token(Token = "0x6002FE2")]
		[Address(RVA = "0x9052C8", Offset = "0x9052C8", VA = "0x9052C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002FE3")]
		[Address(RVA = "0x9052CC", Offset = "0x9052CC", VA = "0x9052CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FE5")]
		[Address(RVA = "0x90539C", Offset = "0x90539C", VA = "0x90539C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BE04", Offset = "0x39BE04")]
	private sealed class <MultiThrow>d__65 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40026E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40026E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerProxy <>4__this;

		[Token(Token = "0x40026E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int <i>5__2;

		[Token(Token = "0x17000546")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002FEA")]
			[Address(RVA = "0x905240", Offset = "0x905240", VA = "0x905240", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000547")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FEC")]
			[Address(RVA = "0x9052C0", Offset = "0x9052C0", VA = "0x9052C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FE7")]
		[Address(RVA = "0x903824", Offset = "0x903824", VA = "0x903824")]
		[DebuggerHidden]
		public <MultiThrow>d__65(int <>1__state)
		{
		}

		[Token(Token = "0x6002FE8")]
		[Address(RVA = "0x904B44", Offset = "0x904B44", VA = "0x904B44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002FE9")]
		[Address(RVA = "0x904B48", Offset = "0x904B48", VA = "0x904B48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FEB")]
		[Address(RVA = "0x905248", Offset = "0x905248", VA = "0x905248", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public SofaPlayer playerData;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SofaUserInputData sofaInputData;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int playerIndex;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject playerModelObject;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Material[] playerSignMemeMats;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshRenderer playerSignFront;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private MeshRenderer playerSignBack;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject playerShield;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public Transform playerThrowPosition;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Transform playerBlockPosition;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Rigidbody thisRigidbody;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isMoving;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool isHolding;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float button0Timer;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isQuitting;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool isEnemy;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public Transform healthBarAnchor;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private EnemyHealthBarComponents enemyHealthBarComponent;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private EnemyHealthBarComponents enemyHealthBarSofaUIComponent;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A089C", Offset = "0x3A089C")]
	public EnemyTypes enemyType;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float moveSpeed;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int HPDamageWhenHit;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int HPMax;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int activePlayerCount;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool isAlive;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	public bool isRespawning;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int snowmanLayerMask;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[HideInInspector]
	public Destructible myDestructible;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private SnowManModelComponent helper;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool isPlacingBlock;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject snowball;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Rigidbody snowballRigidbody;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Snowball snowballScript;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool isAbleToThrow;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	private bool isThrowing;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8E")]
	private bool isHoldingToBuildBlock;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float timeTillCanThrowAgain;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[HideInInspector]
	public int currentPlayerPosition;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public ushort currentPlayerPositionSpot;

	[Token(Token = "0x17000189")]
	public int CurrentHealth
	{
		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x8FFA44", Offset = "0x8FFA44", VA = "0x8FFA44")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0x8FFA64", Offset = "0x8FFA64", VA = "0x8FFA64")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0x8FFBF4", Offset = "0x8FFBF4", VA = "0x8FFBF4")]
	public void Start()
	{
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0x9001C4", Offset = "0x9001C4", VA = "0x9001C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0x900278", Offset = "0x900278", VA = "0x900278")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0x900078", Offset = "0x900078", VA = "0x900078")]
	public void ResetPlayerModel()
	{
	}

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0x9010FC", Offset = "0x9010FC", VA = "0x9010FC")]
	private void OnUserChange()
	{
	}

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0x90032C", Offset = "0x90032C", VA = "0x90032C")]
	private void SetUpPlayerModel()
	{
	}

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0x901100", Offset = "0x901100", VA = "0x901100")]
	private void Hit(SnowBallInfo snowball)
	{
	}

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0x9012A0", Offset = "0x9012A0", VA = "0x9012A0")]
	public void Kill()
	{
	}

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0x901304", Offset = "0x901304", VA = "0x901304")]
	private void OnDestroyed()
	{
	}

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0x901444", Offset = "0x901444", VA = "0x901444")]
	public void Despawn()
	{
	}

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0x901784", Offset = "0x901784", VA = "0x901784")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0x9019D8", Offset = "0x9019D8", VA = "0x9019D8")]
	private void PlayerStrafe(Vector3 pivotPos)
	{
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0x901FAC", Offset = "0x901FAC", VA = "0x901FAC")]
	private void OnSofaInputDataReceived(SofaUserInputData data)
	{
	}

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0x902008", Offset = "0x902008", VA = "0x902008")]
	private void OnButtonPress()
	{
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0x902B08", Offset = "0x902B08", VA = "0x902B08")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AAC8C", Offset = "0x3AAC8C")]
	private IEnumerator DelayBlockPlacementSmall()
	{
		return null;
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0x902BA8", Offset = "0x902BA8", VA = "0x902BA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AACFC", Offset = "0x3AACFC")]
	private IEnumerator DelayBlockPlacementMed()
	{
		return null;
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0x901F2C", Offset = "0x901F2C", VA = "0x901F2C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AAD6C", Offset = "0x3AAD6C")]
	private IEnumerator DelayBlockPlacement()
	{
		return null;
	}

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0x902A88", Offset = "0x902A88", VA = "0x902A88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AADDC", Offset = "0x3AADDC")]
	private IEnumerator ResetThrowing()
	{
		return null;
	}

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0x902C88", Offset = "0x902C88", VA = "0x902C88")]
	public void MakeBall()
	{
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0x903138", Offset = "0x903138", VA = "0x903138")]
	public void ThrowMadeBall()
	{
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0x903730", Offset = "0x903730", VA = "0x903730")]
	private void EnableThrowing()
	{
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0x9022B0", Offset = "0x9022B0", VA = "0x9022B0")]
	public void ThrowBall()
	{
	}

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0x903744", Offset = "0x903744", VA = "0x903744")]
	public void ThrowMultiBall()
	{
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0x9037A4", Offset = "0x9037A4", VA = "0x9037A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AAE4C", Offset = "0x3AAE4C")]
	private IEnumerator MultiThrow()
	{
		return null;
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0x903844", Offset = "0x903844", VA = "0x903844")]
	public void ActivateSign()
	{
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0x903870", Offset = "0x903870", VA = "0x903870")]
	public void DeactivateSign()
	{
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0x903570", Offset = "0x903570", VA = "0x903570")]
	private Vector3 CalculateBestThrowSpeed(Vector3 origin, Vector3 target, float timeToTarget, Rigidbody rigid)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0x90389C", Offset = "0x90389C", VA = "0x90389C")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0x9038A8", Offset = "0x9038A8", VA = "0x9038A8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0x903A10", Offset = "0x903A10", VA = "0x903A10")]
	public PlayerProxy()
	{
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0x903A4C", Offset = "0x903A4C", VA = "0x903A4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AAEBC", Offset = "0x3AAEBC")]
	private bool <Start>b__42_0(SofaPlayer p)
	{
		return default(bool);
	}
}
[Token(Token = "0x20001BC")]
public enum SofaMsgType
{
	[Token(Token = "0x4000D80")]
	userData,
	[Token(Token = "0x4000D81")]
	userInput
}
[Token(Token = "0x20001BD")]
public enum SofaControllerType
{
	[Token(Token = "0x4000D83")]
	Single,
	[Token(Token = "0x4000D84")]
	Quad,
	[Token(Token = "0x4000D85")]
	Sling,
	[Token(Token = "0x4000D86")]
	Fling,
	[Token(Token = "0x4000D87")]
	TapAim,
	[Token(Token = "0x4000D88")]
	Strafe,
	[Token(Token = "0x4000D89")]
	Dpad
}
[Token(Token = "0x20001BE")]
public enum SofaButtonType
{
	[Token(Token = "0x4000D8B")]
	Button0,
	[Token(Token = "0x4000D8C")]
	Button1,
	[Token(Token = "0x4000D8D")]
	Button2,
	[Token(Token = "0x4000D8E")]
	Button3,
	[Token(Token = "0x4000D8F")]
	Button4,
	[Token(Token = "0x4000D90")]
	Button5,
	[Token(Token = "0x4000D91")]
	Button6,
	[Token(Token = "0x4000D92")]
	Button7,
	[Token(Token = "0x4000D93")]
	Knock,
	[Token(Token = "0x4000D94")]
	Share,
	[Token(Token = "0x4000D95")]
	Dpad
}
[Token(Token = "0x20001BF")]
public enum SofaButtonState
{
	[Token(Token = "0x4000D97")]
	None,
	[Token(Token = "0x4000D98")]
	Down,
	[Token(Token = "0x4000D99")]
	Up,
	[Token(Token = "0x4000D9A")]
	Click,
	[Token(Token = "0x4000D9B")]
	BeginDrag,
	[Token(Token = "0x4000D9C")]
	Drag,
	[Token(Token = "0x4000D9D")]
	EndDrag
}
[Token(Token = "0x20001C0")]
public class SofaJsonUtils
{
	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0x704124", Offset = "0x704124", VA = "0x704124")]
	public static Dictionary<string, float> vector2ToDict(Vector2 v)
	{
		return null;
	}

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0x704204", Offset = "0x704204", VA = "0x704204")]
	public static Dictionary<string, float> color2Dict(Color c)
	{
		return null;
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0x704344", Offset = "0x704344", VA = "0x704344")]
	public static string getString(JSONObject jo)
	{
		return null;
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0x70438C", Offset = "0x70438C", VA = "0x70438C")]
	public static Color getColor(JSONObject jo)
	{
		return default(Color);
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0x7044FC", Offset = "0x7044FC", VA = "0x7044FC")]
	protected Vector2 DictToVector2(object data)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0x7045E4", Offset = "0x7045E4", VA = "0x7045E4")]
	protected float getFloat(Dictionary<string, object> dict, string key)
	{
		return default(float);
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0x704788", Offset = "0x704788", VA = "0x704788")]
	public SofaJsonUtils()
	{
	}
}
[Serializable]
[Token(Token = "0x20001C1")]
public class SofaUserData : SofaJsonUtils
{
	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string clientGameName;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[HideInInspector]
	public string clientGameId;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public string clientGameVersion;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public string option01;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public string option02;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public string option03;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string clientId;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject clientProxy;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string clientName;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int clientPositionIndex;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int clientScore;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int clientAmmo;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color clientColor;

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0x70B3A0", Offset = "0x70B3A0", VA = "0x70B3A0")]
	public SofaUserData()
	{
	}

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0x70B3A8", Offset = "0x70B3A8", VA = "0x70B3A8")]
	public SofaUserData(string json)
	{
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0x70B43C", Offset = "0x70B43C", VA = "0x70B43C")]
	public SofaUserData(JSONObject jo)
	{
	}

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0x70B7A0", Offset = "0x70B7A0", VA = "0x70B7A0")]
	public Dictionary<string, object> toDict()
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x20001C2")]
public class SofaUserInputData : SofaJsonUtils
{
	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string clientId;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public SofaControllerType userControllerType;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SofaButtonType userButtonType;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public SofaButtonState userButtonState;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float length;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector2 final;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector2 startPos;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector2 currentPos;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector2 endPos;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector2 inputAxis;

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0x70BB3C", Offset = "0x70BB3C", VA = "0x70BB3C")]
	public SofaUserInputData()
	{
	}

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0x70BB44", Offset = "0x70BB44", VA = "0x70BB44")]
	public SofaUserInputData(string json)
	{
	}

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0x70BBD8", Offset = "0x70BBD8", VA = "0x70BBD8")]
	public SofaUserInputData(JSONObject jo)
	{
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0x7099A4", Offset = "0x7099A4", VA = "0x7099A4")]
	public SofaUserInputData(Dictionary<string, object> data)
	{
	}

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0x70C1C8", Offset = "0x70C1C8", VA = "0x70C1C8")]
	public Dictionary<string, object> toDict()
	{
		return null;
	}
}
[Token(Token = "0x20001C3")]
public class UpdateSofaUserUIMessage : SofaMessage
{
	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public SofaPlayer data;

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0x6540B8", Offset = "0x6540B8", VA = "0x6540B8")]
	public UpdateSofaUserUIMessage()
	{
	}
}
[Token(Token = "0x20001C4")]
public class SofaNet : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20006E6")]
	protected delegate void func();

	[Token(Token = "0x20006E7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BE14", Offset = "0x39BE14")]
	private sealed class <>c__DisplayClass19_0
	{
		[Token(Token = "0x40026E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public System.Random random;

		[Token(Token = "0x6002FF1")]
		[Address(RVA = "0x705004", Offset = "0x705004", VA = "0x705004")]
		public <>c__DisplayClass19_0()
		{
		}

		[Token(Token = "0x6002FF2")]
		[Address(RVA = "0x7079D8", Offset = "0x7079D8", VA = "0x7079D8")]
		internal char <randomGameCode>b__0(string s)
		{
			return default(char);
		}
	}

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static Pubnub pubnub;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string devCode;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected string relCode;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	protected string pChannel;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected string cChannel;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public string publishKey;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string subscribeKey;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected bool isHost;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected string uuid;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected int receivedCount;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected List<func> funcList;

	[Token(Token = "0x1700018A")]
	public string gameCode
	{
		[Token(Token = "0x6000F42")]
		[Address(RVA = "0x702EEC", Offset = "0x702EEC", VA = "0x702EEC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000F43")]
		[Address(RVA = "0x704FFC", Offset = "0x704FFC", VA = "0x704FFC")]
		set
		{
		}
	}

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0x704790", Offset = "0x704790", VA = "0x704790")]
	protected void Start()
	{
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0x7048E4", Offset = "0x7048E4", VA = "0x7048E4")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0x704B48", Offset = "0x704B48", VA = "0x704B48")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0x704B4C", Offset = "0x704B4C", VA = "0x704B4C")]
	public void Connect()
	{
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0x704EB8", Offset = "0x704EB8", VA = "0x704EB8")]
	protected string randomGameCode(int length = 4)
	{
		return null;
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0x70500C", Offset = "0x70500C", VA = "0x70500C")]
	protected void AddFunc(func f)
	{
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0x705098", Offset = "0x705098", VA = "0x705098", Slot = "4")]
	protected virtual void InsertFuncs()
	{
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0x705198", Offset = "0x705198", VA = "0x705198")]
	protected void sendSubscribe()
	{
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0x705344", Offset = "0x705344", VA = "0x705344")]
	private void sendPresence()
	{
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0x705498", Offset = "0x705498", VA = "0x705498")]
	private void sendHereNow()
	{
	}

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0x7055C8", Offset = "0x7055C8", VA = "0x7055C8")]
	private void sendSystemInfo()
	{
	}

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0x704DE8", Offset = "0x704DE8", VA = "0x704DE8")]
	protected void sendNext()
	{
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0x7048FC", Offset = "0x7048FC", VA = "0x7048FC")]
	public void Disconnect()
	{
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0x706544", Offset = "0x706544", VA = "0x706544")]
	protected void OnSuccess(string msg)
	{
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0x706548", Offset = "0x706548", VA = "0x706548")]
	protected void OnPubnubError(PubnubClientError pubnubError)
	{
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0x706778", Offset = "0x706778", VA = "0x706778")]
	private void OnSubscribeConnectMessage(string connectMessage)
	{
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0x70677C", Offset = "0x70677C", VA = "0x70677C")]
	private void OnUnsubscribeDisconnectMessage(string connectMessage)
	{
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0x706818", Offset = "0x706818", VA = "0x706818")]
	private void OnSubscribeMessage(string result)
	{
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0x706D98", Offset = "0x706D98", VA = "0x706D98")]
	private void DisplayReturnMessage(string result)
	{
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0x706E34", Offset = "0x706E34", VA = "0x706E34")]
	protected void OnSendSuccess(string msg)
	{
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0x706EDC", Offset = "0x706EDC", VA = "0x706EDC")]
	protected void OnSendError(PubnubClientError pubnubError)
	{
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0x706F84", Offset = "0x706F84", VA = "0x706F84", Slot = "5")]
	protected virtual void HandleSubscribeMessage(Dictionary<string, object> data)
	{
	}

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0x706F88", Offset = "0x706F88", VA = "0x706F88", Slot = "6")]
	protected virtual void HandlePresence(string uuid, string action, JSONObject jo)
	{
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0x706F8C", Offset = "0x706F8C", VA = "0x706F8C")]
	private void OnPresenceMessage(string result)
	{
	}

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0x707510", Offset = "0x707510", VA = "0x707510")]
	private void OnPresenceConnectMessage(string result)
	{
	}

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0x7075B8", Offset = "0x7075B8", VA = "0x7075B8", Slot = "7")]
	protected virtual void OnHereNowMessage(string result)
	{
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0x7078D4", Offset = "0x7078D4", VA = "0x7078D4")]
	private void sendNothing()
	{
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0x707958", Offset = "0x707958", VA = "0x707958")]
	public SofaNet()
	{
	}
}
[Serializable]
[Token(Token = "0x20001C5")]
public class SofaPlayer
{
	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string clientId;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool active;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int index;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Color color;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public string htmlColor;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string name;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public string email;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string imageUrl;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Sprite avatarSprite;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject gameObject;

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0x707DB8", Offset = "0x707DB8", VA = "0x707DB8")]
	public SofaPlayer()
	{
	}
}
[Token(Token = "0x20001C6")]
public class SofaNetHost : SofaNet
{
	[Token(Token = "0x20006E8")]
	public delegate void ClientInput(SofaUserInputData data);

	[Token(Token = "0x20006E9")]
	public delegate void UserChange();

	[Token(Token = "0x20006EA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BE24", Offset = "0x39BE24")]
	private sealed class <>c__DisplayClass24_0
	{
		[Token(Token = "0x40026E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string uuid;

		[Token(Token = "0x6002FFB")]
		[Address(RVA = "0x7095D4", Offset = "0x7095D4", VA = "0x7095D4")]
		public <>c__DisplayClass24_0()
		{
		}

		[Token(Token = "0x6002FFC")]
		[Address(RVA = "0x70A830", Offset = "0x70A830", VA = "0x70A830")]
		internal bool <HandlePresence>b__0(SofaPlayer p)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FFD")]
		[Address(RVA = "0x70A860", Offset = "0x70A860", VA = "0x70A860")]
		internal bool <HandlePresence>b__1(SofaPlayer p)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x20006EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BE34", Offset = "0x39BE34")]
	private sealed class <>c
	{
		[Token(Token = "0x40026E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40026EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static Predicate<SofaPlayer> <>9__24_2;

		[Token(Token = "0x40026EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<SofaPlayer> <>9__24_3;

		[Token(Token = "0x6002FFF")]
		[Address(RVA = "0x70A7D8", Offset = "0x70A7D8", VA = "0x70A7D8")]
		public <>c()
		{
		}

		[Token(Token = "0x6003000")]
		[Address(RVA = "0x70A7E0", Offset = "0x70A7E0", VA = "0x70A7E0")]
		internal bool <HandlePresence>b__24_2(SofaPlayer p)
		{
			return default(bool);
		}

		[Token(Token = "0x6003001")]
		[Address(RVA = "0x70A808", Offset = "0x70A808", VA = "0x70A808")]
		internal bool <HandlePresence>b__24_3(SofaPlayer p)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SofaNetHost instance;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public GameObject playerPrefab;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string gameLocation;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public string gameName;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string gameVendor;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public string gameVersion;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string gameDescription;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int maxPlayers;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<SofaPlayer> players;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public List<string> playerColors;

	[Token(Token = "0x14000029")]
	public event ClientInput ClientInputEvent
	{
		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0x707A68", Offset = "0x707A68", VA = "0x707A68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AAECC", Offset = "0x3AAECC")]
		add
		{
		}
		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0x707B18", Offset = "0x707B18", VA = "0x707B18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AAEDC", Offset = "0x3AAEDC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002A")]
	public event UserChange UserChangeEvent
	{
		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0x7028D0", Offset = "0x7028D0", VA = "0x7028D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AAEEC", Offset = "0x3AAEEC")]
		add
		{
		}
		[Token(Token = "0x6000F60")]
		[Address(RVA = "0x703800", Offset = "0x703800", VA = "0x703800")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AAEFC", Offset = "0x3AAEFC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0x707BC8", Offset = "0x707BC8", VA = "0x707BC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0x708000", Offset = "0x708000", VA = "0x708000")]
	private new void Start()
	{
	}

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0x707DDC", Offset = "0x707DDC", VA = "0x707DDC")]
	private void setLocationName()
	{
	}

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0x707E58", Offset = "0x707E58", VA = "0x707E58")]
	private void setGameCode()
	{
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0x70801C", Offset = "0x70801C", VA = "0x70801C")]
	private string readOrCreateSofaNetFile(string fileName, string defaultValue, bool overwrite = false)
	{
		return null;
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0x708350", Offset = "0x708350", VA = "0x708350", Slot = "4")]
	protected override void InsertFuncs()
	{
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0x7083DC", Offset = "0x7083DC", VA = "0x7083DC", Slot = "6")]
	protected override void HandlePresence(string uuid, string action, JSONObject jo)
	{
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0x709820", Offset = "0x709820", VA = "0x709820", Slot = "5")]
	protected override void HandleSubscribeMessage(Dictionary<string, object> data)
	{
	}

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0x70A168", Offset = "0x70A168", VA = "0x70A168")]
	private void sendHostData()
	{
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0x70A4FC", Offset = "0x70A4FC", VA = "0x70A4FC")]
	public SofaNetHost()
	{
	}
}
[Token(Token = "0x20001C7")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x39A3E0", Offset = "0x39A3E0")]
public class JSONObject
{
	[Token(Token = "0x20006EC")]
	public enum Type
	{
		[Token(Token = "0x40026ED")]
		NULL,
		[Token(Token = "0x40026EE")]
		STRING,
		[Token(Token = "0x40026EF")]
		NUMBER,
		[Token(Token = "0x40026F0")]
		OBJECT,
		[Token(Token = "0x40026F1")]
		ARRAY,
		[Token(Token = "0x40026F2")]
		BOOL,
		[Token(Token = "0x40026F3")]
		BAKED
	}

	[Token(Token = "0x20006ED")]
	public delegate void AddJSONContents(JSONObject self);

	[Token(Token = "0x20006EE")]
	public delegate void FieldNotFound(string name);

	[Token(Token = "0x20006EF")]
	public delegate void GetFieldResponse(JSONObject obj);

	[Token(Token = "0x20006F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BE44", Offset = "0x39BE44")]
	private sealed class <BakeAsync>d__107 : IEnumerable<object>, IEnumerable, IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40026F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40026F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>l__initialThreadId;

		[Token(Token = "0x40026F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public JSONObject <>4__this;

		[Token(Token = "0x40026F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IEnumerator<string> <>7__wrap1;

		[Token(Token = "0x17000548")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003012")]
			[Address(RVA = "0x73837C", Offset = "0x73837C", VA = "0x73837C", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000549")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6003014")]
			[Address(RVA = "0x7383FC", Offset = "0x7383FC", VA = "0x7383FC", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600300E")]
		[Address(RVA = "0x7371E4", Offset = "0x7371E4", VA = "0x7371E4")]
		[DebuggerHidden]
		public <BakeAsync>d__107(int <>1__state)
		{
		}

		[Token(Token = "0x600300F")]
		[Address(RVA = "0x737F60", Offset = "0x737F60", VA = "0x737F60", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003010")]
		[Address(RVA = "0x73804C", Offset = "0x73804C", VA = "0x73804C", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003011")]
		[Address(RVA = "0x737F78", Offset = "0x737F78", VA = "0x737F78")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6003013")]
		[Address(RVA = "0x738384", Offset = "0x738384", VA = "0x738384", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6003015")]
		[Address(RVA = "0x738404", Offset = "0x738404", VA = "0x738404", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<object> System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6003016")]
		[Address(RVA = "0x7384C4", Offset = "0x7384C4", VA = "0x7384C4", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x20006F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BE54", Offset = "0x39BE54")]
	private sealed class <PrintAsync>d__109 : IEnumerable<string>, IEnumerable, IEnumerator<string>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40026FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private string <>2__current;

		[Token(Token = "0x40026FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>l__initialThreadId;

		[Token(Token = "0x40026FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public JSONObject <>4__this;

		[Token(Token = "0x40026FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool pretty;

		[Token(Token = "0x40026FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool <>3__pretty;

		[Token(Token = "0x40026FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private StringBuilder <builder>5__2;

		[Token(Token = "0x4002700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IEnumerator <>7__wrap2;

		[Token(Token = "0x1700054A")]
		private string System.Collections.Generic.IEnumerator<System.String>.Current
		{
			[Token(Token = "0x600301B")]
			[Address(RVA = "0x738994", Offset = "0x738994", VA = "0x738994", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700054B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600301D")]
			[Address(RVA = "0x738A14", Offset = "0x738A14", VA = "0x738A14", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003017")]
		[Address(RVA = "0x737B54", Offset = "0x737B54", VA = "0x737B54")]
		[DebuggerHidden]
		public <PrintAsync>d__109(int <>1__state)
		{
		}

		[Token(Token = "0x6003018")]
		[Address(RVA = "0x7384C8", Offset = "0x7384C8", VA = "0x7384C8", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003019")]
		[Address(RVA = "0x7385C0", Offset = "0x7385C0", VA = "0x7385C0", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600301A")]
		[Address(RVA = "0x7384E0", Offset = "0x7384E0", VA = "0x7384E0")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600301C")]
		[Address(RVA = "0x73899C", Offset = "0x73899C", VA = "0x73899C", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x600301E")]
		[Address(RVA = "0x738A1C", Offset = "0x738A1C", VA = "0x738A1C", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<string> System.Collections.Generic.IEnumerable<System.String>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600301F")]
		[Address(RVA = "0x738AE4", Offset = "0x738AE4", VA = "0x738AE4", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x20006F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BE64", Offset = "0x39BE64")]
	private sealed class <StringifyAsync>d__112 : IEnumerable<object>, IEnumerable, IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4002704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int depth;

		[Token(Token = "0x4002705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int <>3__depth;

		[Token(Token = "0x4002706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public JSONObject <>4__this;

		[Token(Token = "0x4002707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private StringBuilder builder;

		[Token(Token = "0x4002708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public StringBuilder <>3__builder;

		[Token(Token = "0x4002709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool pretty;

		[Token(Token = "0x400270A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool <>3__pretty;

		[Token(Token = "0x400270B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__2;

		[Token(Token = "0x400270C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IEnumerator <>7__wrap2;

		[Token(Token = "0x1700054C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003025")]
			[Address(RVA = "0x739EA4", Offset = "0x739EA4", VA = "0x739EA4", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700054D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6003027")]
			[Address(RVA = "0x739F24", Offset = "0x739F24", VA = "0x739F24", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003020")]
		[Address(RVA = "0x737C4C", Offset = "0x737C4C", VA = "0x737C4C")]
		[DebuggerHidden]
		public <StringifyAsync>d__112(int <>1__state)
		{
		}

		[Token(Token = "0x6003021")]
		[Address(RVA = "0x738AE8", Offset = "0x738AE8", VA = "0x738AE8", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003022")]
		[Address(RVA = "0x738CE8", Offset = "0x738CE8", VA = "0x738CE8", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003023")]
		[Address(RVA = "0x738B24", Offset = "0x738B24", VA = "0x738B24")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6003024")]
		[Address(RVA = "0x738C04", Offset = "0x738C04", VA = "0x738C04")]
		private void <>m__Finally2()
		{
		}

		[Token(Token = "0x6003026")]
		[Address(RVA = "0x739EAC", Offset = "0x739EAC", VA = "0x739EAC", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6003028")]
		[Address(RVA = "0x739F2C", Offset = "0x739F2C", VA = "0x739F2C", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<object> System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6003029")]
		[Address(RVA = "0x73A004", Offset = "0x73A004", VA = "0x73A004", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x4000DD7")]
	private const int MAX_DEPTH = 100;

	[Token(Token = "0x4000DD8")]
	private const string INFINITY = "\"INFINITY\"";

	[Token(Token = "0x4000DD9")]
	private const string NEGINFINITY = "\"NEGINFINITY\"";

	[Token(Token = "0x4000DDA")]
	private const string NaN = "\"NaN\"";

	[Token(Token = "0x4000DDB")]
	private const string NEWLINE = "\r\n";

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly char[] WHITESPACE;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Type type;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public List<JSONObject> list;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<string> keys;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string str;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float n;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool useInt;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public long i;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool b;

	[Token(Token = "0x4000DE5")]
	private const float maxFrameTime = 0.008f;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly Stopwatch printWatch;

	[Token(Token = "0x1700018B")]
	public bool isContainer
	{
		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0x7326DC", Offset = "0x7326DC", VA = "0x7326DC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700018C")]
	public int Count
	{
		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0x7326F4", Offset = "0x7326F4", VA = "0x7326F4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700018D")]
	public float f
	{
		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0x732748", Offset = "0x732748", VA = "0x732748")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700018E")]
	public static JSONObject nullJO
	{
		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0x732750", Offset = "0x732750", VA = "0x732750")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700018F")]
	public static JSONObject obj
	{
		[Token(Token = "0x6000F70")]
		[Address(RVA = "0x732900", Offset = "0x732900", VA = "0x732900")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000190")]
	public static JSONObject arr
	{
		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x732974", Offset = "0x732974", VA = "0x732974")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000191")]
	public bool IsNumber
	{
		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x73489C", Offset = "0x73489C", VA = "0x73489C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000192")]
	public bool IsNull
	{
		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x7348B0", Offset = "0x7348B0", VA = "0x7348B0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000193")]
	public bool IsString
	{
		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x7348C0", Offset = "0x7348C0", VA = "0x7348C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000194")]
	public bool IsBool
	{
		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x7348D4", Offset = "0x7348D4", VA = "0x7348D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000195")]
	public bool IsArray
	{
		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x7348E8", Offset = "0x7348E8", VA = "0x7348E8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000196")]
	public bool IsObject
	{
		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x7348FC", Offset = "0x7348FC", VA = "0x7348FC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000197")]
	public JSONObject Item
	{
		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x736FF0", Offset = "0x736FF0", VA = "0x736FF0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x737088", Offset = "0x737088", VA = "0x737088")]
		set
		{
		}
	}

	[Token(Token = "0x17000198")]
	public JSONObject Item
	{
		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x735640", Offset = "0x735640", VA = "0x735640")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x737C78", Offset = "0x737C78", VA = "0x737C78")]
		set
		{
		}
	}

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0x7329E8", Offset = "0x7329E8", VA = "0x7329E8")]
	public JSONObject(Type t)
	{
	}

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0x732AF0", Offset = "0x732AF0", VA = "0x732AF0")]
	public JSONObject(bool b)
	{
	}

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0x732B18", Offset = "0x732B18", VA = "0x732B18")]
	public JSONObject(float f)
	{
	}

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0x732B40", Offset = "0x732B40", VA = "0x732B40")]
	public JSONObject(int i)
	{
	}

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0x732B80", Offset = "0x732B80", VA = "0x732B80")]
	public JSONObject(long l)
	{
	}

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0x732BC8", Offset = "0x732BC8", VA = "0x732BC8")]
	public JSONObject(Dictionary<string, string> dic)
	{
	}

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0x732EB4", Offset = "0x732EB4", VA = "0x732EB4")]
	public JSONObject(Dictionary<string, JSONObject> dic)
	{
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0x7330B8", Offset = "0x7330B8", VA = "0x7330B8")]
	public JSONObject(AddJSONContents content)
	{
	}

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0x733518", Offset = "0x733518", VA = "0x733518")]
	public JSONObject(JSONObject[] objs)
	{
	}

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0x7335AC", Offset = "0x7335AC", VA = "0x7335AC")]
	public static JSONObject StringObject(string val)
	{
		return null;
	}

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0x733624", Offset = "0x733624", VA = "0x733624")]
	public void Absorb(JSONObject obj)
	{
	}

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0x733708", Offset = "0x733708", VA = "0x733708")]
	public static JSONObject Create()
	{
		return null;
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0x7327C4", Offset = "0x7327C4", VA = "0x7327C4")]
	public static JSONObject Create(Type t)
	{
		return null;
	}

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0x733774", Offset = "0x733774", VA = "0x733774")]
	public static JSONObject Create(bool val)
	{
		return null;
	}

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0x73381C", Offset = "0x73381C", VA = "0x73381C")]
	public static JSONObject Create(float val)
	{
		return null;
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0x7338D0", Offset = "0x7338D0", VA = "0x7338D0")]
	public static JSONObject Create(int val)
	{
		return null;
	}

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0x7339B4", Offset = "0x7339B4", VA = "0x7339B4")]
	public static JSONObject Create(long val)
	{
		return null;
	}

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0x732E0C", Offset = "0x732E0C", VA = "0x732E0C")]
	public static JSONObject CreateStringObject(string val)
	{
		return null;
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0x733AA4", Offset = "0x733AA4", VA = "0x733AA4")]
	public static JSONObject CreateBakedObject(string val)
	{
		return null;
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0x733B4C", Offset = "0x733B4C", VA = "0x733B4C")]
	public static JSONObject Create(string val, int maxDepth = -2, bool storeExcessLevels = false, bool strict = false)
	{
		return null;
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0x734534", Offset = "0x734534", VA = "0x734534")]
	public static JSONObject Create(AddJSONContents content)
	{
		return null;
	}

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0x7345C8", Offset = "0x7345C8", VA = "0x7345C8")]
	public static JSONObject Create(Dictionary<string, string> dic)
	{
		return null;
	}

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0x73376C", Offset = "0x73376C", VA = "0x73376C")]
	public JSONObject()
	{
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0x734854", Offset = "0x734854", VA = "0x734854")]
	public JSONObject(string str, int maxDepth = -2, bool storeExcessLevels = false, bool strict = false)
	{
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0x733C00", Offset = "0x733C00", VA = "0x733C00")]
	private void Parse(string str, int maxDepth = -2, bool storeExcessLevels = false, bool strict = false)
	{
	}

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0x734920", Offset = "0x734920", VA = "0x734920")]
	public void Add(bool val)
	{
	}

	[Token(Token = "0x6000F92")]
	[Address(RVA = "0x734AB0", Offset = "0x734AB0", VA = "0x734AB0")]
	public void Add(float val)
	{
	}

	[Token(Token = "0x6000F93")]
	[Address(RVA = "0x734B38", Offset = "0x734B38", VA = "0x734B38")]
	public void Add(int val)
	{
	}

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0x734BC0", Offset = "0x734BC0", VA = "0x734BC0")]
	public void Add(string str)
	{
	}

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0x734C48", Offset = "0x734C48", VA = "0x734C48")]
	public void Add(AddJSONContents content)
	{
	}

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0x7349A8", Offset = "0x7349A8", VA = "0x7349A8")]
	public void Add(JSONObject obj)
	{
	}

	[Token(Token = "0x6000F97")]
	[Address(RVA = "0x734CDC", Offset = "0x734CDC", VA = "0x734CDC")]
	public void AddField(string name, bool val)
	{
	}

	[Token(Token = "0x6000F98")]
	[Address(RVA = "0x734F80", Offset = "0x734F80", VA = "0x734F80")]
	public void AddField(string name, float val)
	{
	}

	[Token(Token = "0x6000F99")]
	[Address(RVA = "0x735010", Offset = "0x735010", VA = "0x735010")]
	public void AddField(string name, int val)
	{
	}

	[Token(Token = "0x6000F9A")]
	[Address(RVA = "0x7350A0", Offset = "0x7350A0", VA = "0x7350A0")]
	public void AddField(string name, long val)
	{
	}

	[Token(Token = "0x6000F9B")]
	[Address(RVA = "0x735138", Offset = "0x735138", VA = "0x735138")]
	public void AddField(string name, AddJSONContents content)
	{
	}

	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0x7351C8", Offset = "0x7351C8", VA = "0x7351C8")]
	public void AddField(string name, string val)
	{
	}

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0x734D6C", Offset = "0x734D6C", VA = "0x734D6C")]
	public void AddField(string name, JSONObject obj)
	{
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0x735258", Offset = "0x735258", VA = "0x735258")]
	public void SetField(string name, string val)
	{
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0x7353C0", Offset = "0x7353C0", VA = "0x7353C0")]
	public void SetField(string name, bool val)
	{
	}

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0x735450", Offset = "0x735450", VA = "0x735450")]
	public void SetField(string name, float val)
	{
	}

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0x7354E0", Offset = "0x7354E0", VA = "0x7354E0")]
	public void SetField(string name, int val)
	{
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0x7352E8", Offset = "0x7352E8", VA = "0x7352E8")]
	public void SetField(string name, JSONObject obj)
	{
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0x735644", Offset = "0x735644", VA = "0x735644")]
	public void RemoveField(string name)
	{
	}

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0x73573C", Offset = "0x73573C", VA = "0x73573C")]
	public bool GetField(out bool field, string name, bool fallback)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0x73575C", Offset = "0x73575C", VA = "0x73575C")]
	public bool GetField(ref bool field, string name, [Optional] FieldNotFound fail)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0x735C80", Offset = "0x735C80", VA = "0x735C80")]
	public bool GetField(out float field, string name, float fallback)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0x735CA0", Offset = "0x735CA0", VA = "0x735CA0")]
	public bool GetField(ref float field, string name, [Optional] FieldNotFound fail)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0x735D98", Offset = "0x735D98", VA = "0x735D98")]
	public bool GetField(out int field, string name, int fallback)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0x735DB8", Offset = "0x735DB8", VA = "0x735DB8")]
	public bool GetField(ref int field, string name, [Optional] FieldNotFound fail)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0x735EB8", Offset = "0x735EB8", VA = "0x735EB8")]
	public bool GetField(out long field, string name, long fallback)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0x735EE0", Offset = "0x735EE0", VA = "0x735EE0")]
	public bool GetField(ref long field, string name, [Optional] FieldNotFound fail)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0x735FE0", Offset = "0x735FE0", VA = "0x735FE0")]
	public bool GetField(out uint field, string name, uint fallback)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FAD")]
	[Address(RVA = "0x736000", Offset = "0x736000", VA = "0x736000")]
	public bool GetField(ref uint field, string name, [Optional] FieldNotFound fail)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0x736118", Offset = "0x736118", VA = "0x736118")]
	public bool GetField(out string field, string name, string fallback)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0x736138", Offset = "0x736138", VA = "0x736138")]
	public bool GetField(ref string field, string name, [Optional] FieldNotFound fail)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0x736234", Offset = "0x736234", VA = "0x736234")]
	public void GetField(string name, GetFieldResponse response, [Optional] FieldNotFound fail)
	{
	}

	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0x736754", Offset = "0x736754", VA = "0x736754")]
	public JSONObject GetField(string name)
	{
		return null;
	}

	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0x736850", Offset = "0x736850", VA = "0x736850")]
	public bool HasFields(string[] names)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0x735570", Offset = "0x735570", VA = "0x735570")]
	public bool HasField(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0x736930", Offset = "0x736930", VA = "0x736930")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0x7369DC", Offset = "0x7369DC", VA = "0x7369DC")]
	public JSONObject Copy()
	{
		return null;
	}

	[Token(Token = "0x6000FB6")]
	[Address(RVA = "0x736B1C", Offset = "0x736B1C", VA = "0x736B1C")]
	public void Merge(JSONObject obj)
	{
	}

	[Token(Token = "0x6000FB7")]
	[Address(RVA = "0x736B9C", Offset = "0x736B9C", VA = "0x736B9C")]
	private static void MergeRecur(JSONObject left, JSONObject right)
	{
	}

	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0x737124", Offset = "0x737124", VA = "0x737124")]
	public void Bake()
	{
	}

	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0x737158", Offset = "0x737158", VA = "0x737158")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AAF0C", Offset = "0x3AAF0C")]
	public IEnumerable BakeAsync()
	{
		return null;
	}

	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0x736A78", Offset = "0x736A78", VA = "0x736A78")]
	public string Print(bool pretty = false)
	{
		return null;
	}

	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0x737AB0", Offset = "0x737AB0", VA = "0x737AB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AAF7C", Offset = "0x3AAF7C")]
	public IEnumerable<string> PrintAsync(bool pretty = false)
	{
		return null;
	}

	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0x737B80", Offset = "0x737B80", VA = "0x737B80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AAFEC", Offset = "0x3AAFEC")]
	private IEnumerable StringifyAsync(int depth, StringBuilder builder, bool pretty = false)
	{
		return null;
	}

	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0x737210", Offset = "0x737210", VA = "0x737210")]
	private void Stringify(int depth, StringBuilder builder, bool pretty = false)
	{
	}

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0x737C7C", Offset = "0x737C7C", VA = "0x737C7C", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0x737C84", Offset = "0x737C84", VA = "0x737C84")]
	public string ToString(bool pretty)
	{
		return null;
	}

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0x737C88", Offset = "0x737C88", VA = "0x737C88")]
	public Dictionary<string, string> ToDictionary()
	{
		return null;
	}

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0x734CD0", Offset = "0x734CD0", VA = "0x734CD0")]
	public static implicit operator bool(JSONObject o)
	{
		return default(bool);
	}
}
[Token(Token = "0x20001C8")]
public static class JSONTemplates
{
	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly HashSet<object> touched;

	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0x73A0D4", Offset = "0x73A0D4", VA = "0x73A0D4")]
	public static JSONObject TOJSON(object obj)
	{
		return null;
	}

	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0x73B148", Offset = "0x73B148", VA = "0x73B148")]
	public static Vector2 ToVector2(JSONObject obj)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0x73B2D0", Offset = "0x73B2D0", VA = "0x73B2D0")]
	public static JSONObject FromVector2(Vector2 v)
	{
		return null;
	}

	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0x73B3C0", Offset = "0x73B3C0", VA = "0x73B3C0")]
	public static JSONObject FromVector3(Vector3 v)
	{
		return null;
	}

	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0x73B4EC", Offset = "0x73B4EC", VA = "0x73B4EC")]
	public static Vector3 ToVector3(JSONObject obj)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0x73B708", Offset = "0x73B708", VA = "0x73B708")]
	public static JSONObject FromVector4(Vector4 v)
	{
		return null;
	}

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0x73B870", Offset = "0x73B870", VA = "0x73B870")]
	public static Vector4 ToVector4(JSONObject obj)
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0x73BB10", Offset = "0x73BB10", VA = "0x73BB10")]
	public static JSONObject FromMatrix4x4(Matrix4x4 m)
	{
		return null;
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0x73BF48", Offset = "0x73BF48", VA = "0x73BF48")]
	public static Matrix4x4 ToMatrix4x4(JSONObject obj)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0x73C82C", Offset = "0x73C82C", VA = "0x73C82C")]
	public static JSONObject FromQuaternion(Quaternion q)
	{
		return null;
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0x73C994", Offset = "0x73C994", VA = "0x73C994")]
	public static Quaternion ToQuaternion(JSONObject obj)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0x73CC34", Offset = "0x73CC34", VA = "0x73CC34")]
	public static JSONObject FromColor(Color c)
	{
		return null;
	}

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0x73CD9C", Offset = "0x73CD9C", VA = "0x73CD9C")]
	public static Color ToColor(JSONObject obj)
	{
		return default(Color);
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0x73CFD8", Offset = "0x73CFD8", VA = "0x73CFD8")]
	public static JSONObject FromLayerMask(LayerMask l)
	{
		return null;
	}

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0x73D094", Offset = "0x73D094", VA = "0x73D094")]
	public static LayerMask ToLayerMask(JSONObject obj)
	{
		return default(LayerMask);
	}

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0x73D138", Offset = "0x73D138", VA = "0x73D138")]
	public static JSONObject FromRect(Rect r)
	{
		return null;
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0x73D310", Offset = "0x73D310", VA = "0x73D310")]
	public static Rect ToRect(JSONObject obj)
	{
		return default(Rect);
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0x73D55C", Offset = "0x73D55C", VA = "0x73D55C")]
	public static JSONObject FromRectOffset(RectOffset r)
	{
		return null;
	}

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0x73D768", Offset = "0x73D768", VA = "0x73D768")]
	public static RectOffset ToRectOffset(JSONObject obj)
	{
		return null;
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0x73DA14", Offset = "0x73DA14", VA = "0x73DA14")]
	public static AnimationCurve ToAnimationCurve(JSONObject obj)
	{
		return null;
	}

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0x73DF28", Offset = "0x73DF28", VA = "0x73DF28")]
	public static JSONObject FromAnimationCurve(AnimationCurve a)
	{
		return null;
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0x73DC98", Offset = "0x73DC98", VA = "0x73DC98")]
	public static Keyframe ToKeyframe(JSONObject obj)
	{
		return default(Keyframe);
	}

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0x73E2A8", Offset = "0x73E2A8", VA = "0x73E2A8")]
	public static JSONObject FromKeyframe(Keyframe k)
	{
		return null;
	}
}
[Token(Token = "0x20001C9")]
public class SteamVR : IDisposable
{
	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool _enabled;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static SteamVR _instance;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A0970", Offset = "0x3A0970")]
	private CVRSystem <hmd>k__BackingField;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A0980", Offset = "0x3A0980")]
	private CVRCompositor <compositor>k__BackingField;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A0990", Offset = "0x3A0990")]
	private CVROverlay <overlay>k__BackingField;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A09A0", Offset = "0x3A09A0")]
	private static bool <initializing>k__BackingField;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A09B0", Offset = "0x3A09B0")]
	private static bool <calibrating>k__BackingField;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A09C0", Offset = "0x3A09C0")]
	private static bool <outOfRange>k__BackingField;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static bool[] connected;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A09D0", Offset = "0x3A09D0")]
	private float <sceneWidth>k__BackingField;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A09E0", Offset = "0x3A09E0")]
	private float <sceneHeight>k__BackingField;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A09F0", Offset = "0x3A09F0")]
	private float <aspect>k__BackingField;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A0A00", Offset = "0x3A0A00")]
	private float <fieldOfView>k__BackingField;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A0A10", Offset = "0x3A0A10")]
	private Vector2 <tanHalfFov>k__BackingField;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A0A20", Offset = "0x3A0A20")]
	private VRTextureBounds_t[] <textureBounds>k__BackingField;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A0A30", Offset = "0x3A0A30")]
	private SteamVR_Utils.RigidTransform[] <eyes>k__BackingField;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ETextureType textureType;

	[Token(Token = "0x17000199")]
	public static bool active
	{
		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x713CBC", Offset = "0x713CBC", VA = "0x713CBC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700019A")]
	public static bool enabled
	{
		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x713D3C", Offset = "0x713D3C", VA = "0x713D3C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x713DF8", Offset = "0x713DF8", VA = "0x713DF8")]
		set
		{
		}
	}

	[Token(Token = "0x1700019B")]
	public static SteamVR instance
	{
		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x713F6C", Offset = "0x713F6C", VA = "0x713F6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700019C")]
	public static bool usingNativeSupport
	{
		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x71435C", Offset = "0x71435C", VA = "0x71435C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700019D")]
	public CVRSystem hmd
	{
		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x715208", Offset = "0x715208", VA = "0x715208")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB05C", Offset = "0x3AB05C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x715210", Offset = "0x715210", VA = "0x715210")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB06C", Offset = "0x3AB06C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700019E")]
	public CVRCompositor compositor
	{
		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x715218", Offset = "0x715218", VA = "0x715218")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB07C", Offset = "0x3AB07C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x715220", Offset = "0x715220", VA = "0x715220")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB08C", Offset = "0x3AB08C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700019F")]
	public CVROverlay overlay
	{
		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x715228", Offset = "0x715228", VA = "0x715228")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB09C", Offset = "0x3AB09C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x715230", Offset = "0x715230", VA = "0x715230")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB0AC", Offset = "0x3AB0AC")]
		private set
		{
		}
	}

	[Token(Token = "0x170001A0")]
	public static bool initializing
	{
		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x715238", Offset = "0x715238", VA = "0x715238")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB0BC", Offset = "0x3AB0BC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x7152B0", Offset = "0x7152B0", VA = "0x7152B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB0CC", Offset = "0x3AB0CC")]
		private set
		{
		}
	}

	[Token(Token = "0x170001A1")]
	public static bool calibrating
	{
		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x71532C", Offset = "0x71532C", VA = "0x71532C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB0DC", Offset = "0x3AB0DC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x7153A4", Offset = "0x7153A4", VA = "0x7153A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB0EC", Offset = "0x3AB0EC")]
		private set
		{
		}
	}

	[Token(Token = "0x170001A2")]
	public static bool outOfRange
	{
		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x715420", Offset = "0x715420", VA = "0x715420")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB0FC", Offset = "0x3AB0FC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x715498", Offset = "0x715498", VA = "0x715498")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB10C", Offset = "0x3AB10C")]
		private set
		{
		}
	}

	[Token(Token = "0x170001A3")]
	public float sceneWidth
	{
		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x715514", Offset = "0x715514", VA = "0x715514")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB11C", Offset = "0x3AB11C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x71551C", Offset = "0x71551C", VA = "0x71551C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB12C", Offset = "0x3AB12C")]
		private set
		{
		}
	}

	[Token(Token = "0x170001A4")]
	public float sceneHeight
	{
		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x715524", Offset = "0x715524", VA = "0x715524")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB13C", Offset = "0x3AB13C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x71552C", Offset = "0x71552C", VA = "0x71552C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB14C", Offset = "0x3AB14C")]
		private set
		{
		}
	}

	[Token(Token = "0x170001A5")]
	public float aspect
	{
		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x715534", Offset = "0x715534", VA = "0x715534")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB15C", Offset = "0x3AB15C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x71553C", Offset = "0x71553C", VA = "0x71553C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB16C", Offset = "0x3AB16C")]
		private set
		{
		}
	}

	[Token(Token = "0x170001A6")]
	public float fieldOfView
	{
		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x715544", Offset = "0x715544", VA = "0x715544")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB17C", Offset = "0x3AB17C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x71554C", Offset = "0x71554C", VA = "0x71554C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB18C", Offset = "0x3AB18C")]
		private set
		{
		}
	}

	[Token(Token = "0x170001A7")]
	public Vector2 tanHalfFov
	{
		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x715554", Offset = "0x715554", VA = "0x715554")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB19C", Offset = "0x3AB19C")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x715568", Offset = "0x715568", VA = "0x715568")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB1AC", Offset = "0x3AB1AC")]
		private set
		{
		}
	}

	[Token(Token = "0x170001A8")]
	public VRTextureBounds_t[] textureBounds
	{
		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x715574", Offset = "0x715574", VA = "0x715574")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB1BC", Offset = "0x3AB1BC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0x71557C", Offset = "0x71557C", VA = "0x71557C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB1CC", Offset = "0x3AB1CC")]
		private set
		{
		}
	}

	[Token(Token = "0x170001A9")]
	public SteamVR_Utils.RigidTransform[] eyes
	{
		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x715584", Offset = "0x715584", VA = "0x715584")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB1DC", Offset = "0x3AB1DC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x71558C", Offset = "0x71558C", VA = "0x71558C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB1EC", Offset = "0x3AB1EC")]
		private set
		{
		}
	}

	[Token(Token = "0x170001AA")]
	public string hmd_TrackingSystemName
	{
		[Token(Token = "0x6001000")]
		[Address(RVA = "0x715594", Offset = "0x715594", VA = "0x715594")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001AB")]
	public string hmd_ModelNumber
	{
		[Token(Token = "0x6001001")]
		[Address(RVA = "0x715730", Offset = "0x715730", VA = "0x715730")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001AC")]
	public string hmd_SerialNumber
	{
		[Token(Token = "0x6001002")]
		[Address(RVA = "0x71573C", Offset = "0x71573C", VA = "0x71573C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001AD")]
	public float hmd_SecondsFromVsyncToPhotons
	{
		[Token(Token = "0x6001003")]
		[Address(RVA = "0x715748", Offset = "0x715748", VA = "0x715748")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001AE")]
	public float hmd_DisplayFrequency
	{
		[Token(Token = "0x6001004")]
		[Address(RVA = "0x7157A0", Offset = "0x7157A0", VA = "0x7157A0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0x7140B8", Offset = "0x7140B8", VA = "0x7140B8")]
	private static SteamVR CreateInstance()
	{
		return null;
	}

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0x7143DC", Offset = "0x7143DC", VA = "0x7143DC")]
	private static void ReportError(EVRInitError error)
	{
	}

	[Token(Token = "0x6001005")]
	[Address(RVA = "0x7157AC", Offset = "0x7157AC", VA = "0x7157AC")]
	public string GetTrackedDeviceString(uint deviceId)
	{
		return null;
	}

	[Token(Token = "0x6001006")]
	[Address(RVA = "0x7155A0", Offset = "0x7155A0", VA = "0x7155A0")]
	public string GetStringProperty(ETrackedDeviceProperty prop, uint deviceId = 0u)
	{
		return null;
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0x715754", Offset = "0x715754", VA = "0x715754")]
	public float GetFloatProperty(ETrackedDeviceProperty prop, uint deviceId = 0u)
	{
		return default(float);
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0x7158B8", Offset = "0x7158B8", VA = "0x7158B8")]
	private void OnInitializing(bool initializing)
	{
	}

	[Token(Token = "0x6001009")]
	[Address(RVA = "0x715988", Offset = "0x715988", VA = "0x715988")]
	private void OnCalibrating(bool calibrating)
	{
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0x715A58", Offset = "0x715A58", VA = "0x715A58")]
	private void OnOutOfRange(bool outOfRange)
	{
	}

	[Token(Token = "0x600100B")]
	[Address(RVA = "0x715B28", Offset = "0x715B28", VA = "0x715B28")]
	private void OnDeviceConnected(int i, bool connected)
	{
	}

	[Token(Token = "0x600100C")]
	[Address(RVA = "0x715BD4", Offset = "0x715BD4", VA = "0x715BD4")]
	private void OnNewPoses(TrackedDevicePose_t[] poses)
	{
	}

	[Token(Token = "0x600100D")]
	[Address(RVA = "0x714578", Offset = "0x714578", VA = "0x714578")]
	private SteamVR()
	{
	}

	[Token(Token = "0x600100E")]
	[Address(RVA = "0x7162D8", Offset = "0x7162D8", VA = "0x7162D8", Slot = "1")]
	~SteamVR()
	{
	}

	[Token(Token = "0x600100F")]
	[Address(RVA = "0x716600", Offset = "0x716600", VA = "0x716600", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6001010")]
	[Address(RVA = "0x71633C", Offset = "0x71633C", VA = "0x71633C")]
	private void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x6001011")]
	[Address(RVA = "0x713EA8", Offset = "0x713EA8", VA = "0x713EA8")]
	public static void SafeDispose()
	{
	}
}
[Token(Token = "0x20001CA")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x39A414", Offset = "0x39A414")]
public class SteamVR_Camera : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private Transform _head;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A0A50", Offset = "0x3A0A50")]
	private Camera <camera>k__BackingField;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private Transform _ears;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool wireframe;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static System.Collections.Hashtable values;

	[Token(Token = "0x4000DFE")]
	private const string eyeSuffix = " (eye)";

	[Token(Token = "0x4000DFF")]
	private const string earsSuffix = " (ears)";

	[Token(Token = "0x4000E00")]
	private const string headSuffix = " (head)";

	[Token(Token = "0x4000E01")]
	private const string originSuffix = " (origin)";

	[Token(Token = "0x170001AF")]
	public Transform head
	{
		[Token(Token = "0x6001013")]
		[Address(RVA = "0x97D2C0", Offset = "0x97D2C0", VA = "0x97D2C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B0")]
	public Transform offset
	{
		[Token(Token = "0x6001014")]
		[Address(RVA = "0x97D2C8", Offset = "0x97D2C8", VA = "0x97D2C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B1")]
	public Transform origin
	{
		[Token(Token = "0x6001015")]
		[Address(RVA = "0x97D2D0", Offset = "0x97D2D0", VA = "0x97D2D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B2")]
	public Camera camera
	{
		[Token(Token = "0x6001016")]
		[Address(RVA = "0x97D2F8", Offset = "0x97D2F8", VA = "0x97D2F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB1FC", Offset = "0x3AB1FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001017")]
		[Address(RVA = "0x97D300", Offset = "0x97D300", VA = "0x97D300")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB20C", Offset = "0x3AB20C")]
		private set
		{
		}
	}

	[Token(Token = "0x170001B3")]
	public Transform ears
	{
		[Token(Token = "0x6001018")]
		[Address(RVA = "0x97D308", Offset = "0x97D308", VA = "0x97D308")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B4")]
	public static float sceneResolutionScale
	{
		[Token(Token = "0x600101A")]
		[Address(RVA = "0x97D3B0", Offset = "0x97D3B0", VA = "0x97D3B0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600101B")]
		[Address(RVA = "0x97D3B8", Offset = "0x97D3B8", VA = "0x97D3B8")]
		set
		{
		}
	}

	[Token(Token = "0x170001B5")]
	public string baseName
	{
		[Token(Token = "0x6001020")]
		[Address(RVA = "0x97EC24", Offset = "0x97EC24", VA = "0x97EC24")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001019")]
	[Address(RVA = "0x97D310", Offset = "0x97D310", VA = "0x97D310")]
	public Ray GetRay()
	{
		return default(Ray);
	}

	[Token(Token = "0x600101C")]
	[Address(RVA = "0x97D3C0", Offset = "0x97D3C0", VA = "0x97D3C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600101D")]
	[Address(RVA = "0x97D494", Offset = "0x97D494", VA = "0x97D494")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600101E")]
	[Address(RVA = "0x97E3F8", Offset = "0x97E3F8", VA = "0x97E3F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600101F")]
	[Address(RVA = "0x97E460", Offset = "0x97E460", VA = "0x97E460")]
	public void ForceLast()
	{
	}

	[Token(Token = "0x6001021")]
	[Address(RVA = "0x97D950", Offset = "0x97D950", VA = "0x97D950")]
	public void Expand()
	{
	}

	[Token(Token = "0x6001022")]
	[Address(RVA = "0x97ED1C", Offset = "0x97ED1C", VA = "0x97ED1C")]
	public void Collapse()
	{
	}

	[Token(Token = "0x6001023")]
	[Address(RVA = "0x97F298", Offset = "0x97F298", VA = "0x97F298")]
	public SteamVR_Camera()
	{
	}
}
[Token(Token = "0x20001CB")]
[ExecuteInEditMode]
public class SteamVR_CameraFlip : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6001024")]
	[Address(RVA = "0x97F2A0", Offset = "0x97F2A0", VA = "0x97F2A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001025")]
	[Address(RVA = "0x97F360", Offset = "0x97F360", VA = "0x97F360")]
	public SteamVR_CameraFlip()
	{
	}
}
[Token(Token = "0x20001CC")]
[ExecuteInEditMode]
public class SteamVR_CameraMask : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6001026")]
	[Address(RVA = "0x97F368", Offset = "0x97F368", VA = "0x97F368")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001027")]
	[Address(RVA = "0x97F428", Offset = "0x97F428", VA = "0x97F428")]
	public SteamVR_CameraMask()
	{
	}
}
[Token(Token = "0x20001CD")]
public class SteamVR_Controller
{
	[Token(Token = "0x20006F3")]
	public class ButtonMask
	{
		[Token(Token = "0x400270D")]
		public const ulong System = 1uL;

		[Token(Token = "0x400270E")]
		public const ulong ApplicationMenu = 2uL;

		[Token(Token = "0x400270F")]
		public const ulong Grip = 4uL;

		[Token(Token = "0x4002710")]
		public const ulong Axis0 = 4294967296uL;

		[Token(Token = "0x4002711")]
		public const ulong Axis1 = 8589934592uL;

		[Token(Token = "0x4002712")]
		public const ulong Axis2 = 17179869184uL;

		[Token(Token = "0x4002713")]
		public const ulong Axis3 = 34359738368uL;

		[Token(Token = "0x4002714")]
		public const ulong Axis4 = 68719476736uL;

		[Token(Token = "0x4002715")]
		public const ulong Touchpad = 4294967296uL;

		[Token(Token = "0x4002716")]
		public const ulong Trigger = 8589934592uL;

		[Token(Token = "0x600302A")]
		[Address(RVA = "0x97FC90", Offset = "0x97FC90", VA = "0x97FC90")]
		public ButtonMask()
		{
		}
	}

	[Token(Token = "0x20006F4")]
	public class Device
	{
		[Token(Token = "0x4002717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5C70", Offset = "0x3A5C70")]
		private uint <index>k__BackingField;

		[Token(Token = "0x4002718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5C80", Offset = "0x3A5C80")]
		private bool <valid>k__BackingField;

		[Token(Token = "0x4002719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private VRControllerState_t state;

		[Token(Token = "0x400271A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private VRControllerState_t prevState;

		[Token(Token = "0x400271B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private TrackedDevicePose_t pose;

		[Token(Token = "0x400271C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int prevFrameCount;

		[Token(Token = "0x400271D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public float hairTriggerDelta;

		[Token(Token = "0x400271E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float hairTriggerLimit;

		[Token(Token = "0x400271F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private bool hairTriggerState;

		[Token(Token = "0x4002720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xED")]
		private bool hairTriggerPrevState;

		[Token(Token = "0x1700054E")]
		public uint index
		{
			[Token(Token = "0x600302C")]
			[Address(RVA = "0x97FC98", Offset = "0x97FC98", VA = "0x97FC98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B096C", Offset = "0x3B096C")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x600302D")]
			[Address(RVA = "0x97FCA0", Offset = "0x97FCA0", VA = "0x97FCA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B097C", Offset = "0x3B097C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700054F")]
		public bool valid
		{
			[Token(Token = "0x600302E")]
			[Address(RVA = "0x97FCA8", Offset = "0x97FCA8", VA = "0x97FCA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B098C", Offset = "0x3B098C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600302F")]
			[Address(RVA = "0x97FCB0", Offset = "0x97FCB0", VA = "0x97FCB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B099C", Offset = "0x3B099C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000550")]
		public bool connected
		{
			[Token(Token = "0x6003030")]
			[Address(RVA = "0x97FC70", Offset = "0x97FC70", VA = "0x97FC70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000551")]
		public bool hasTracking
		{
			[Token(Token = "0x6003031")]
			[Address(RVA = "0x97FCB8", Offset = "0x97FCB8", VA = "0x97FCB8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000552")]
		public bool outOfRange
		{
			[Token(Token = "0x6003032")]
			[Address(RVA = "0x97FCD0", Offset = "0x97FCD0", VA = "0x97FCD0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000553")]
		public bool calibrating
		{
			[Token(Token = "0x6003033")]
			[Address(RVA = "0x97FD04", Offset = "0x97FD04", VA = "0x97FD04")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000554")]
		public bool uninitialized
		{
			[Token(Token = "0x6003034")]
			[Address(RVA = "0x97FD2C", Offset = "0x97FD2C", VA = "0x97FD2C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000555")]
		public SteamVR_Utils.RigidTransform transform
		{
			[Token(Token = "0x6003035")]
			[Address(RVA = "0x97FBE8", Offset = "0x97FBE8", VA = "0x97FBE8")]
			get
			{
				return default(SteamVR_Utils.RigidTransform);
			}
		}

		[Token(Token = "0x17000556")]
		public Vector3 velocity
		{
			[Token(Token = "0x6003036")]
			[Address(RVA = "0x97FD50", Offset = "0x97FD50", VA = "0x97FD50")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000557")]
		public Vector3 angularVelocity
		{
			[Token(Token = "0x6003037")]
			[Address(RVA = "0x97FD9C", Offset = "0x97FD9C", VA = "0x97FD9C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600302B")]
		[Address(RVA = "0x97F5CC", Offset = "0x97F5CC", VA = "0x97F5CC")]
		public Device(uint i)
		{
		}

		[Token(Token = "0x6003038")]
		[Address(RVA = "0x97FDEC", Offset = "0x97FDEC", VA = "0x97FDEC")]
		public VRControllerState_t GetState()
		{
			return default(VRControllerState_t);
		}

		[Token(Token = "0x6003039")]
		[Address(RVA = "0x97FE24", Offset = "0x97FE24", VA = "0x97FE24")]
		public VRControllerState_t GetPrevState()
		{
			return default(VRControllerState_t);
		}

		[Token(Token = "0x600303A")]
		[Address(RVA = "0x97FE5C", Offset = "0x97FE5C", VA = "0x97FE5C")]
		public TrackedDevicePose_t GetPose()
		{
			return default(TrackedDevicePose_t);
		}

		[Token(Token = "0x600303B")]
		[Address(RVA = "0x97F63C", Offset = "0x97F63C", VA = "0x97F63C")]
		public void Update()
		{
		}

		[Token(Token = "0x600303C")]
		[Address(RVA = "0x98012C", Offset = "0x98012C", VA = "0x98012C")]
		public bool GetPress(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x600303D")]
		[Address(RVA = "0x98015C", Offset = "0x98015C", VA = "0x98015C")]
		public bool GetPressDown(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x600303E")]
		[Address(RVA = "0x9801AC", Offset = "0x9801AC", VA = "0x9801AC")]
		public bool GetPressUp(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x600303F")]
		[Address(RVA = "0x9801F8", Offset = "0x9801F8", VA = "0x9801F8")]
		public bool GetPress(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6003040")]
		[Address(RVA = "0x980248", Offset = "0x980248", VA = "0x980248")]
		public bool GetPressDown(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6003041")]
		[Address(RVA = "0x9802B8", Offset = "0x9802B8", VA = "0x9802B8")]
		public bool GetPressUp(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6003042")]
		[Address(RVA = "0x98032C", Offset = "0x98032C", VA = "0x98032C")]
		public bool GetTouch(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6003043")]
		[Address(RVA = "0x98035C", Offset = "0x98035C", VA = "0x98035C")]
		public bool GetTouchDown(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6003044")]
		[Address(RVA = "0x9803AC", Offset = "0x9803AC", VA = "0x9803AC")]
		public bool GetTouchUp(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6003045")]
		[Address(RVA = "0x9803F8", Offset = "0x9803F8", VA = "0x9803F8")]
		public bool GetTouch(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6003046")]
		[Address(RVA = "0x980448", Offset = "0x980448", VA = "0x980448")]
		public bool GetTouchDown(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6003047")]
		[Address(RVA = "0x9804B8", Offset = "0x9804B8", VA = "0x9804B8")]
		public bool GetTouchUp(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6003048")]
		[Address(RVA = "0x98052C", Offset = "0x98052C", VA = "0x98052C")]
		public Vector2 GetAxis(EVRButtonId buttonId = EVRButtonId.k_EButton_Axis0)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6003049")]
		[Address(RVA = "0x980648", Offset = "0x980648", VA = "0x980648")]
		public void TriggerHapticPulse(ushort durationMicroSec = 500, EVRButtonId buttonId = EVRButtonId.k_EButton_Axis0)
		{
		}

		[Token(Token = "0x600304A")]
		[Address(RVA = "0x97FFF0", Offset = "0x97FFF0", VA = "0x97FFF0")]
		private void UpdateHairTrigger()
		{
		}

		[Token(Token = "0x600304B")]
		[Address(RVA = "0x9806F0", Offset = "0x9806F0", VA = "0x9806F0")]
		public bool GetHairTrigger()
		{
			return default(bool);
		}

		[Token(Token = "0x600304C")]
		[Address(RVA = "0x980708", Offset = "0x980708", VA = "0x980708")]
		public bool GetHairTriggerDown()
		{
			return default(bool);
		}

		[Token(Token = "0x600304D")]
		[Address(RVA = "0x980734", Offset = "0x980734", VA = "0x980734")]
		public bool GetHairTriggerUp()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20006F5")]
	public enum DeviceRelation
	{
		[Token(Token = "0x4002722")]
		First,
		[Token(Token = "0x4002723")]
		Leftmost,
		[Token(Token = "0x4002724")]
		Rightmost,
		[Token(Token = "0x4002725")]
		FarthestLeft,
		[Token(Token = "0x4002726")]
		FarthestRight
	}

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Device[] devices;

	[Token(Token = "0x6001028")]
	[Address(RVA = "0x97F430", Offset = "0x97F430", VA = "0x97F430")]
	public static Device Input(int deviceIndex)
	{
		return null;
	}

	[Token(Token = "0x6001029")]
	[Address(RVA = "0x97F600", Offset = "0x97F600", VA = "0x97F600")]
	public static void Update()
	{
	}

	[Token(Token = "0x600102A")]
	[Address(RVA = "0x97F7FC", Offset = "0x97F7FC", VA = "0x97F7FC")]
	public static int GetDeviceIndex(DeviceRelation relation, ETrackedDeviceClass deviceClass = ETrackedDeviceClass.Controller, int relativeTo = 0)
	{
		return default(int);
	}

	[Token(Token = "0x600102B")]
	[Address(RVA = "0x97FC88", Offset = "0x97FC88", VA = "0x97FC88")]
	public SteamVR_Controller()
	{
	}
}
[Token(Token = "0x20001CE")]
public class SteamVR_ControllerManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject left;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject right;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A0A70", Offset = "0x3A0A70")]
	public GameObject[] objects;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A0AA4", Offset = "0x3A0AA4")]
	public bool assignAllBeforeIdentified;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint[] indices;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool[] connected;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private uint leftIndex;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private uint rightIndex;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private SteamVR_Events.Action inputFocusAction;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SteamVR_Events.Action deviceConnectedAction;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private SteamVR_Events.Action trackedDeviceRoleChangedAction;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string hiddenPrefix;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static string hiddenPostfix;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string[] labels;

	[Token(Token = "0x600102C")]
	[Address(RVA = "0x980764", Offset = "0x980764", VA = "0x980764")]
	private void SetUniqueObject(GameObject o, int index)
	{
	}

	[Token(Token = "0x600102D")]
	[Address(RVA = "0x980884", Offset = "0x980884", VA = "0x980884")]
	public void UpdateTargets()
	{
	}

	[Token(Token = "0x600102E")]
	[Address(RVA = "0x9809EC", Offset = "0x9809EC", VA = "0x9809EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600102F")]
	[Address(RVA = "0x9809F0", Offset = "0x9809F0", VA = "0x9809F0")]
	private SteamVR_ControllerManager()
	{
	}

	[Token(Token = "0x6001030")]
	[Address(RVA = "0x980DB4", Offset = "0x980DB4", VA = "0x980DB4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001031")]
	[Address(RVA = "0x9814FC", Offset = "0x9814FC", VA = "0x9814FC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0x981584", Offset = "0x981584", VA = "0x981584")]
	private void OnInputFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x6001033")]
	[Address(RVA = "0x981A24", Offset = "0x981A24", VA = "0x981A24")]
	private void HideObject(Transform t, string name)
	{
	}

	[Token(Token = "0x6001034")]
	[Address(RVA = "0x9818E8", Offset = "0x9818E8", VA = "0x9818E8")]
	private void ShowObject(Transform t, string name)
	{
	}

	[Token(Token = "0x6001035")]
	[Address(RVA = "0x981C14", Offset = "0x981C14", VA = "0x981C14")]
	private void SetTrackedDeviceIndex(int objectIndex, uint trackedDeviceIndex)
	{
	}

	[Token(Token = "0x6001036")]
	[Address(RVA = "0x981F1C", Offset = "0x981F1C", VA = "0x981F1C")]
	private void OnTrackedDeviceRoleChanged(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0x981390", Offset = "0x981390", VA = "0x981390")]
	private void OnDeviceConnected(int index, bool connected)
	{
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0x98102C", Offset = "0x98102C", VA = "0x98102C")]
	public void Refresh()
	{
	}
}
[Token(Token = "0x20001CF")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x39A4A4", Offset = "0x39A4A4")]
public class SteamVR_Ears : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public SteamVR_Camera vrcam;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool usingSpeakers;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Quaternion offset;

	[Token(Token = "0x600103A")]
	[Address(RVA = "0x982088", Offset = "0x982088", VA = "0x982088")]
	private void OnNewPosesApplied()
	{
	}

	[Token(Token = "0x600103B")]
	[Address(RVA = "0x982258", Offset = "0x982258", VA = "0x982258")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600103C")]
	[Address(RVA = "0x98245C", Offset = "0x98245C", VA = "0x98245C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600103D")]
	[Address(RVA = "0x982544", Offset = "0x982544", VA = "0x982544")]
	public SteamVR_Ears()
	{
	}
}
[Token(Token = "0x20001D0")]
public static class SteamVR_Events
{
	[Token(Token = "0x20006F6")]
	public abstract class Action
	{
		[Token(Token = "0x17000558")]
		public bool enabled
		{
			[Token(Token = "0x600304F")]
			[Address(RVA = "0x9814EC", Offset = "0x9814EC", VA = "0x9814EC")]
			set
			{
			}
		}

		[Token(Token = "0x600304E")]
		public abstract void Enable(bool enabled);

		[Token(Token = "0x6003050")]
		[Address(RVA = "0x98324C", Offset = "0x98324C", VA = "0x98324C")]
		protected Action()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20006F7")]
	public class ActionNoArgs : Action
	{
		[Token(Token = "0x4002727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private Event _event;

		[Token(Token = "0x4002728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private UnityAction action;

		[Token(Token = "0x6003051")]
		[Address(RVA = "0x982764", Offset = "0x982764", VA = "0x982764")]
		public ActionNoArgs(Event _event, UnityAction action)
		{
		}

		[Token(Token = "0x6003052")]
		[Address(RVA = "0x983254", Offset = "0x983254", VA = "0x983254", Slot = "4")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20006F8")]
	public class Action<T> : Action
	{
		[Token(Token = "0x4002729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Event<T> _event;

		[Token(Token = "0x400272A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityAction<T> action;

		[Token(Token = "0x6003053")]
		public Action(Event<T> _event, UnityAction<T> action)
		{
		}

		[Token(Token = "0x6003054")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20006F9")]
	public class Action<T0, T1> : Action
	{
		[Token(Token = "0x400272B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Event<T0, T1> _event;

		[Token(Token = "0x400272C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityAction<T0, T1> action;

		[Token(Token = "0x6003055")]
		public Action(Event<T0, T1> _event, UnityAction<T0, T1> action)
		{
		}

		[Token(Token = "0x6003056")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20006FA")]
	public class Action<T0, T1, T2> : Action
	{
		[Token(Token = "0x400272D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Event<T0, T1, T2> _event;

		[Token(Token = "0x400272E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityAction<T0, T1, T2> action;

		[Token(Token = "0x6003057")]
		public Action(Event<T0, T1, T2> _event, UnityAction<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x6003058")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Token(Token = "0x20006FB")]
	public class Event : UnityEvent
	{
		[Token(Token = "0x6003059")]
		[Address(RVA = "0x982454", Offset = "0x982454", VA = "0x982454")]
		public void Listen(UnityAction action)
		{
		}

		[Token(Token = "0x600305A")]
		[Address(RVA = "0x98253C", Offset = "0x98253C", VA = "0x98253C")]
		public void Remove(UnityAction action)
		{
		}

		[Token(Token = "0x600305B")]
		[Address(RVA = "0x983298", Offset = "0x983298", VA = "0x983298")]
		public void Send()
		{
		}

		[Token(Token = "0x600305C")]
		[Address(RVA = "0x983244", Offset = "0x983244", VA = "0x983244")]
		public Event()
		{
		}
	}

	[Token(Token = "0x20006FC")]
	public class Event<T> : UnityEvent<T>
	{
		[Token(Token = "0x600305D")]
		public void Listen(UnityAction<T> action)
		{
		}

		[Token(Token = "0x600305E")]
		public void Remove(UnityAction<T> action)
		{
		}

		[Token(Token = "0x600305F")]
		public void Send(T arg0)
		{
		}

		[Token(Token = "0x6003060")]
		public Event()
		{
		}
	}

	[Token(Token = "0x20006FD")]
	public class Event<T0, T1> : UnityEvent<T0, T1>
	{
		[Token(Token = "0x6003061")]
		public void Listen(UnityAction<T0, T1> action)
		{
		}

		[Token(Token = "0x6003062")]
		public void Remove(UnityAction<T0, T1> action)
		{
		}

		[Token(Token = "0x6003063")]
		public void Send(T0 arg0, T1 arg1)
		{
		}

		[Token(Token = "0x6003064")]
		public Event()
		{
		}
	}

	[Token(Token = "0x20006FE")]
	public class Event<T0, T1, T2> : UnityEvent<T0, T1, T2>
	{
		[Token(Token = "0x6003065")]
		public void Listen(UnityAction<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x6003066")]
		public void Remove(UnityAction<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x6003067")]
		public void Send(T0 arg0, T1 arg1, T2 arg2)
		{
		}

		[Token(Token = "0x6003068")]
		public Event()
		{
		}
	}

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Event<bool> Calibrating;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static Event<int, bool> DeviceConnected;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Event<Color, float, bool> Fade;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static Event FadeReady;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Event<bool> HideRenderModels;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static Event<bool> Initializing;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Event<bool> InputFocus;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static Event<bool> Loading;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Event<float> LoadingFadeIn;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static Event<float> LoadingFadeOut;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static Event<TrackedDevicePose_t[]> NewPoses;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static Event NewPosesApplied;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static Event<bool> OutOfRange;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static Event<SteamVR_RenderModel, bool> RenderModelLoaded;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static Dictionary<EVREventType, Event<VREvent_t>> systemEvents;

	[Token(Token = "0x600103E")]
	[Address(RVA = "0x98254C", Offset = "0x98254C", VA = "0x98254C")]
	public static Action CalibratingAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x600103F")]
	[Address(RVA = "0x980C40", Offset = "0x980C40", VA = "0x980C40")]
	public static Action DeviceConnectedAction(UnityAction<int, bool> action)
	{
		return null;
	}

	[Token(Token = "0x6001040")]
	[Address(RVA = "0x982604", Offset = "0x982604", VA = "0x982604")]
	public static Action FadeAction(UnityAction<Color, float, bool> action)
	{
		return null;
	}

	[Token(Token = "0x6001041")]
	[Address(RVA = "0x9826BC", Offset = "0x9826BC", VA = "0x9826BC")]
	public static Action FadeReadyAction(UnityAction action)
	{
		return null;
	}

	[Token(Token = "0x6001042")]
	[Address(RVA = "0x98278C", Offset = "0x98278C", VA = "0x98278C")]
	public static Action HideRenderModelsAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0x982844", Offset = "0x982844", VA = "0x982844")]
	public static Action InitializingAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6001044")]
	[Address(RVA = "0x980B88", Offset = "0x980B88", VA = "0x980B88")]
	public static Action InputFocusAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6001045")]
	[Address(RVA = "0x9828FC", Offset = "0x9828FC", VA = "0x9828FC")]
	public static Action LoadingAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6001046")]
	[Address(RVA = "0x9829B4", Offset = "0x9829B4", VA = "0x9829B4")]
	public static Action LoadingFadeInAction(UnityAction<float> action)
	{
		return null;
	}

	[Token(Token = "0x6001047")]
	[Address(RVA = "0x982A6C", Offset = "0x982A6C", VA = "0x982A6C")]
	public static Action LoadingFadeOutAction(UnityAction<float> action)
	{
		return null;
	}

	[Token(Token = "0x6001048")]
	[Address(RVA = "0x982B24", Offset = "0x982B24", VA = "0x982B24")]
	public static Action NewPosesAction(UnityAction<TrackedDevicePose_t[]> action)
	{
		return null;
	}

	[Token(Token = "0x6001049")]
	[Address(RVA = "0x982BDC", Offset = "0x982BDC", VA = "0x982BDC")]
	public static Action NewPosesAppliedAction(UnityAction action)
	{
		return null;
	}

	[Token(Token = "0x600104A")]
	[Address(RVA = "0x982C84", Offset = "0x982C84", VA = "0x982C84")]
	public static Action OutOfRangeAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0x982D3C", Offset = "0x982D3C", VA = "0x982D3C")]
	public static Action RenderModelLoadedAction(UnityAction<SteamVR_RenderModel, bool> action)
	{
		return null;
	}

	[Token(Token = "0x600104C")]
	[Address(RVA = "0x982DF4", Offset = "0x982DF4", VA = "0x982DF4")]
	public static Event<VREvent_t> System(EVREventType eventType)
	{
		return null;
	}

	[Token(Token = "0x600104D")]
	[Address(RVA = "0x980CF8", Offset = "0x980CF8", VA = "0x980CF8")]
	public static Action SystemAction(EVREventType eventType, UnityAction<VREvent_t> action)
	{
		return null;
	}
}
[Token(Token = "0x20001D1")]
public class SteamVR_ExternalCamera : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20006FF")]
	public struct Config
	{
		[Token(Token = "0x400272F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4002730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4002731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x4002732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rx;

		[Token(Token = "0x4002733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float ry;

		[Token(Token = "0x4002734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rz;

		[Token(Token = "0x4002735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fov;

		[Token(Token = "0x4002736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float near;

		[Token(Token = "0x4002737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float far;

		[Token(Token = "0x4002738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float sceneResolutionScale;

		[Token(Token = "0x4002739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float frameSkip;

		[Token(Token = "0x400273A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float nearOffset;

		[Token(Token = "0x400273B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float farOffset;

		[Token(Token = "0x400273C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float hmdOffset;

		[Token(Token = "0x400273D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float r;

		[Token(Token = "0x400273E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float g;

		[Token(Token = "0x400273F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float b;

		[Token(Token = "0x4002740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float a;

		[Token(Token = "0x4002741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool disableStandardAssets;
	}

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Config config;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string configPath;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private FileSystemWatcher watcher;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Camera cam;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Transform target;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject clipQuad;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Material clipMaterial;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Material colorMat;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Material alphaMat;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Camera[] cameras;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Rect[] cameraRects;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float sceneResolutionScale;

	[Token(Token = "0x600104F")]
	[Address(RVA = "0x9832A0", Offset = "0x9832A0", VA = "0x9832A0")]
	public void ReadConfig()
	{
	}

	[Token(Token = "0x6001050")]
	[Address(RVA = "0x983C94", Offset = "0x983C94", VA = "0x983C94")]
	private void OnChanged(object source, FileSystemEventArgs e)
	{
	}

	[Token(Token = "0x6001051")]
	[Address(RVA = "0x983C98", Offset = "0x983C98", VA = "0x983C98")]
	public void AttachToCamera(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6001052")]
	[Address(RVA = "0x984524", Offset = "0x984524", VA = "0x984524")]
	public float GetTargetDistance()
	{
		return default(float);
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0x984884", Offset = "0x984884", VA = "0x984884")]
	public void RenderNear()
	{
	}

	[Token(Token = "0x6001054")]
	[Address(RVA = "0x9852FC", Offset = "0x9852FC", VA = "0x9852FC")]
	public void RenderFar()
	{
	}

	[Token(Token = "0x6001055")]
	[Address(RVA = "0x985478", Offset = "0x985478", VA = "0x985478")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001056")]
	[Address(RVA = "0x98547C", Offset = "0x98547C", VA = "0x98547C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001057")]
	[Address(RVA = "0x985780", Offset = "0x985780", VA = "0x985780")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001058")]
	[Address(RVA = "0x98591C", Offset = "0x98591C", VA = "0x98591C")]
	public SteamVR_ExternalCamera()
	{
	}
}
[Token(Token = "0x20001D2")]
public class SteamVR_Fade : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Color currentColor;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Color targetColor;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Color deltaColor;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool fadeOverlay;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material fadeMaterial;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int fadeMaterialColorID;

	[Token(Token = "0x6001059")]
	[Address(RVA = "0x985924", Offset = "0x985924", VA = "0x985924")]
	public static void Start(Color newColor, float duration, bool fadeOverlay = false)
	{
	}

	[Token(Token = "0x600105A")]
	[Address(RVA = "0x985A04", Offset = "0x985A04", VA = "0x985A04")]
	public static void View(Color newColor, float duration)
	{
	}

	[Token(Token = "0x600105B")]
	[Address(RVA = "0x985AC0", Offset = "0x985AC0", VA = "0x985AC0")]
	public void OnStartFade(Color newColor, float duration, bool fadeOverlay)
	{
	}

	[Token(Token = "0x600105C")]
	[Address(RVA = "0x985B70", Offset = "0x985B70", VA = "0x985B70")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600105D")]
	[Address(RVA = "0x985D8C", Offset = "0x985D8C", VA = "0x985D8C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600105E")]
	[Address(RVA = "0x985E74", Offset = "0x985E74", VA = "0x985E74")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x600105F")]
	[Address(RVA = "0x986284", Offset = "0x986284", VA = "0x986284")]
	public SteamVR_Fade()
	{
	}
}
[Token(Token = "0x20001D3")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x39A514", Offset = "0x39A514")]
public class SteamVR_Frustum : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public SteamVR_TrackedObject.EIndex index;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float fovLeft;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float fovRight;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fovTop;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fovBottom;

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float nearZ;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float farZ;

	[Token(Token = "0x6001061")]
	[Address(RVA = "0x9863B8", Offset = "0x9863B8", VA = "0x9863B8")]
	public void UpdateModel()
	{
	}

	[Token(Token = "0x6001062")]
	[Address(RVA = "0x986E80", Offset = "0x986E80", VA = "0x986E80")]
	private void OnDeviceConnected(int i, bool connected)
	{
	}

	[Token(Token = "0x6001063")]
	[Address(RVA = "0x987088", Offset = "0x987088", VA = "0x987088")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001064")]
	[Address(RVA = "0x9871A8", Offset = "0x9871A8", VA = "0x9871A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001065")]
	[Address(RVA = "0x9872C8", Offset = "0x9872C8", VA = "0x9872C8")]
	public SteamVR_Frustum()
	{
	}
}
[Token(Token = "0x20001D4")]
[ExecuteInEditMode]
public class SteamVR_GameView : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6001066")]
	[Address(RVA = "0x987308", Offset = "0x987308", VA = "0x987308")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001067")]
	[Address(RVA = "0x9873C8", Offset = "0x9873C8", VA = "0x9873C8")]
	public SteamVR_GameView()
	{
	}
}
[Token(Token = "0x20001D5")]
public class SteamVR_IK : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform target;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform start;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Transform joint;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform end;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Transform poleVector;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform upVector;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float blendPct;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Transform startXform;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public Transform jointXform;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Transform endXform;

	[Token(Token = "0x6001068")]
	[Address(RVA = "0x9873D0", Offset = "0x9873D0", VA = "0x9873D0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001069")]
	[Address(RVA = "0x9882A0", Offset = "0x9882A0", VA = "0x9882A0")]
	public static bool Solve(Vector3 start, Vector3 end, Vector3 poleVector, float jointDist, float targetDist, ref Vector3 result, out Vector3 forward, out Vector3 up)
	{
		return default(bool);
	}

	[Token(Token = "0x600106A")]
	[Address(RVA = "0x9888BC", Offset = "0x9888BC", VA = "0x9888BC")]
	public SteamVR_IK()
	{
	}
}
[Token(Token = "0x20001D6")]
public class SteamVR_LoadLevel : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000700")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BE74", Offset = "0x39BE74")]
	private sealed class <LoadLevel>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SteamVR_LoadLevel <>4__this;

		[Token(Token = "0x4002745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private CVROverlay <overlay>5__2;

		[Token(Token = "0x4002746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool <fadedForeground>5__3;

		[Token(Token = "0x4002747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private CVRCompositor <compositor>5__4;

		[Token(Token = "0x4002748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SteamVR_Controller.Device <hmd>5__5;

		[Token(Token = "0x17000559")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600306C")]
			[Address(RVA = "0x98B48C", Offset = "0x98B48C", VA = "0x98B48C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700055A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600306E")]
			[Address(RVA = "0x98B50C", Offset = "0x98B50C", VA = "0x98B50C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003069")]
		[Address(RVA = "0x989AD4", Offset = "0x989AD4", VA = "0x989AD4")]
		[DebuggerHidden]
		public <LoadLevel>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x600306A")]
		[Address(RVA = "0x989C88", Offset = "0x989C88", VA = "0x989C88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600306B")]
		[Address(RVA = "0x989C8C", Offset = "0x989C8C", VA = "0x989C8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600306D")]
		[Address(RVA = "0x98B494", Offset = "0x98B494", VA = "0x98B494", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SteamVR_LoadLevel _active;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string levelName;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string internalProcessPath;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string internalProcessArgs;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool loadAdditive;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool loadAsync;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Texture loadingScreen;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture progressBarEmpty;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Texture progressBarFull;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float loadingScreenWidthInMeters;

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float progressBarWidthInMeters;

	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float loadingScreenDistance;

	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Transform loadingScreenTransform;

	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform progressBarTransform;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Texture front;

	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture back;

	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Texture left;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture right;

	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Texture top;

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture bottom;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Color backgroundColor;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool showGrid;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float fadeOutTime;

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float fadeInTime;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float postLoadSettleTime;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float loadingScreenFadeInTime;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float loadingScreenFadeOutTime;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float fadeRate;

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float alpha;

	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private UnityEngine.AsyncOperation async;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private RenderTexture renderTexture;

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private ulong loadingScreenOverlayHandle;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private ulong progressBarOverlayHandle;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool autoTriggerOnEnable;

	[Token(Token = "0x170001B6")]
	public static bool loading
	{
		[Token(Token = "0x600106B")]
		[Address(RVA = "0x9888CC", Offset = "0x9888CC", VA = "0x9888CC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001B7")]
	public static float progress
	{
		[Token(Token = "0x600106C")]
		[Address(RVA = "0x988984", Offset = "0x988984", VA = "0x988984")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001B8")]
	public static Texture progressTexture
	{
		[Token(Token = "0x600106D")]
		[Address(RVA = "0x988AE4", Offset = "0x988AE4", VA = "0x988AE4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600106E")]
	[Address(RVA = "0x988BE8", Offset = "0x988BE8", VA = "0x988BE8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600106F")]
	[Address(RVA = "0x988BF8", Offset = "0x988BF8", VA = "0x988BF8")]
	public void Trigger()
	{
	}

	[Token(Token = "0x6001070")]
	[Address(RVA = "0x988D24", Offset = "0x988D24", VA = "0x988D24")]
	public static void Begin(string levelName, bool showGrid = false, float fadeOutTime = 0.5f, float r = 0f, float g = 0f, float b = 0f, float a = 1f)
	{
	}

	[Token(Token = "0x6001071")]
	[Address(RVA = "0x988E88", Offset = "0x988E88", VA = "0x988E88")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001072")]
	[Address(RVA = "0x989910", Offset = "0x989910", VA = "0x989910")]
	private void Update()
	{
	}

	[Token(Token = "0x6001073")]
	[Address(RVA = "0x988CA4", Offset = "0x988CA4", VA = "0x988CA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AB21C", Offset = "0x3AB21C")]
	private IEnumerator LoadLevel()
	{
		return null;
	}

	[Token(Token = "0x6001074")]
	[Address(RVA = "0x989424", Offset = "0x989424", VA = "0x989424")]
	private ulong GetOverlayHandle(string overlayName, Transform transform, float widthInMeters = 1f)
	{
		return default(ulong);
	}

	[Token(Token = "0x6001075")]
	[Address(RVA = "0x989C04", Offset = "0x989C04", VA = "0x989C04")]
	public SteamVR_LoadLevel()
	{
	}
}
[Token(Token = "0x20001D7")]
public class SteamVR_Menu : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Texture cursor;

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Texture background;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Texture logo;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float logoHeight;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float menuOffset;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 scaleLimits;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float scaleRate;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private SteamVR_Overlay overlay;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Camera overlayCam;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector4 uvOffset;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float distance;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A0B08", Offset = "0x3A0B08")]
	private float <scale>k__BackingField;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private string scaleLimitX;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string scaleLimitY;

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private string scaleRateText;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CursorLockMode savedCursorLockState;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool savedCursorVisible;

	[Token(Token = "0x170001B9")]
	public RenderTexture texture
	{
		[Token(Token = "0x6001077")]
		[Address(RVA = "0x98B514", Offset = "0x98B514", VA = "0x98B514")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001BA")]
	public float scale
	{
		[Token(Token = "0x6001078")]
		[Address(RVA = "0x98B5FC", Offset = "0x98B5FC", VA = "0x98B5FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB28C", Offset = "0x3AB28C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001079")]
		[Address(RVA = "0x98B604", Offset = "0x98B604", VA = "0x98B604")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB29C", Offset = "0x3AB29C")]
		private set
		{
		}
	}

	[Token(Token = "0x600107A")]
	[Address(RVA = "0x98B60C", Offset = "0x98B60C", VA = "0x98B60C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600107B")]
	[Address(RVA = "0x98B7B4", Offset = "0x98B7B4", VA = "0x98B7B4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600107C")]
	[Address(RVA = "0x98D958", Offset = "0x98D958", VA = "0x98D958")]
	public void ShowMenu()
	{
	}

	[Token(Token = "0x600107D")]
	[Address(RVA = "0x98D810", Offset = "0x98D810", VA = "0x98D810")]
	public void HideMenu()
	{
	}

	[Token(Token = "0x600107E")]
	[Address(RVA = "0x98DDB4", Offset = "0x98DDB4", VA = "0x98DDB4")]
	private void Update()
	{
	}

	[Token(Token = "0x600107F")]
	[Address(RVA = "0x98D6F0", Offset = "0x98D6F0", VA = "0x98D6F0")]
	private void SetScale(float scale)
	{
	}

	[Token(Token = "0x6001080")]
	[Address(RVA = "0x98DD64", Offset = "0x98DD64", VA = "0x98DD64")]
	private void SaveCursorState()
	{
	}

	[Token(Token = "0x6001081")]
	[Address(RVA = "0x98DD8C", Offset = "0x98DD8C", VA = "0x98DD8C")]
	private void RestoreCursorState()
	{
	}

	[Token(Token = "0x6001082")]
	[Address(RVA = "0x98DFA4", Offset = "0x98DFA4", VA = "0x98DFA4")]
	public SteamVR_Menu()
	{
	}
}
[Token(Token = "0x20001D8")]
public class SteamVR_Overlay : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000701")]
	public struct IntersectionResults
	{
		[Token(Token = "0x4002749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 point;

		[Token(Token = "0x400274A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 normal;

		[Token(Token = "0x400274B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 UVs;

		[Token(Token = "0x400274C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float distance;
	}

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Texture texture;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool curved;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool antialias;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public bool highquality;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A0B18", Offset = "0x3A0B18")]
	public float scale;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A0B4C", Offset = "0x3A0B4C")]
	public float distance;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A0B80", Offset = "0x3A0B80")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3A0B80", Offset = "0x3A0B80")]
	public float alpha;

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 uvOffset;

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 mouseScale;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 curvedRange;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VROverlayInputMethod inputMethod;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A0BD0", Offset = "0x3A0BD0")]
	private static SteamVR_Overlay <instance>k__BackingField;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ulong handle;

	[Token(Token = "0x170001BB")]
	public static SteamVR_Overlay instance
	{
		[Token(Token = "0x6001083")]
		[Address(RVA = "0x98E000", Offset = "0x98E000", VA = "0x98E000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB2AC", Offset = "0x3AB2AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001084")]
		[Address(RVA = "0x98E058", Offset = "0x98E058", VA = "0x98E058")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB2BC", Offset = "0x3AB2BC")]
		private set
		{
		}
	}

	[Token(Token = "0x170001BC")]
	public static string key
	{
		[Token(Token = "0x6001085")]
		[Address(RVA = "0x989AF4", Offset = "0x989AF4", VA = "0x989AF4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001086")]
	[Address(RVA = "0x98E0B4", Offset = "0x98E0B4", VA = "0x98E0B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001087")]
	[Address(RVA = "0x98E244", Offset = "0x98E244", VA = "0x98E244")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001088")]
	[Address(RVA = "0x98E348", Offset = "0x98E348", VA = "0x98E348")]
	public void UpdateOverlay()
	{
	}

	[Token(Token = "0x6001089")]
	[Address(RVA = "0x98E948", Offset = "0x98E948", VA = "0x98E948")]
	public bool PollNextEvent(ref VREvent_t pEvent)
	{
		return default(bool);
	}

	[Token(Token = "0x600108A")]
	[Address(RVA = "0x98EA80", Offset = "0x98EA80", VA = "0x98EA80")]
	public bool ComputeIntersection(Vector3 source, Vector3 direction, ref IntersectionResults results)
	{
		return default(bool);
	}

	[Token(Token = "0x600108B")]
	[Address(RVA = "0x98ECA4", Offset = "0x98ECA4", VA = "0x98ECA4")]
	public SteamVR_Overlay()
	{
	}
}
[Token(Token = "0x20001D9")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x39A5C0", Offset = "0x39A5C0")]
public class SteamVR_PlayArea : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000702")]
	public enum Size
	{
		[Token(Token = "0x400274E")]
		Calibrated,
		[Token(Token = "0x400274F")]
		_400x300,
		[Token(Token = "0x4002750")]
		_300x225,
		[Token(Token = "0x4002751")]
		_200x150
	}

	[Token(Token = "0x2000703")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BE84", Offset = "0x39BE84")]
	private sealed class <UpdateBounds>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SteamVR_PlayArea <>4__this;

		[Token(Token = "0x4002755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private CVRChaperone <chaperone>5__2;

		[Token(Token = "0x1700055B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003072")]
			[Address(RVA = "0x99052C", Offset = "0x99052C", VA = "0x99052C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700055C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6003074")]
			[Address(RVA = "0x9905AC", Offset = "0x9905AC", VA = "0x9905AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600306F")]
		[Address(RVA = "0x990358", Offset = "0x990358", VA = "0x990358")]
		[DebuggerHidden]
		public <UpdateBounds>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6003070")]
		[Address(RVA = "0x9903D8", Offset = "0x9903D8", VA = "0x9903D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003071")]
		[Address(RVA = "0x9903DC", Offset = "0x9903DC", VA = "0x9903DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003073")]
		[Address(RVA = "0x990534", Offset = "0x990534", VA = "0x990534", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float borderThickness;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float wireframeHeight;

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool drawWireframeWhenSelectedOnly;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool drawInGame;

	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Size size;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color color;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public Vector3[] vertices;

	[Token(Token = "0x600108C")]
	[Address(RVA = "0x98ED7C", Offset = "0x98ED7C", VA = "0x98ED7C")]
	public static bool GetBounds(Size size, ref HmdQuad_t pRect)
	{
		return default(bool);
	}

	[Token(Token = "0x600108D")]
	[Address(RVA = "0x98F1AC", Offset = "0x98F1AC", VA = "0x98F1AC")]
	public void BuildMesh()
	{
	}

	[Token(Token = "0x600108E")]
	[Address(RVA = "0x98FE50", Offset = "0x98FE50", VA = "0x98FE50")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600108F")]
	[Address(RVA = "0x9901EC", Offset = "0x9901EC", VA = "0x9901EC")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6001090")]
	[Address(RVA = "0x98FE60", Offset = "0x98FE60", VA = "0x98FE60")]
	public void DrawWireframe()
	{
	}

	[Token(Token = "0x6001091")]
	[Address(RVA = "0x9901FC", Offset = "0x9901FC", VA = "0x9901FC")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6001092")]
	[Address(RVA = "0x9902D8", Offset = "0x9902D8", VA = "0x9902D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AB2CC", Offset = "0x3AB2CC")]
	private IEnumerator UpdateBounds()
	{
		return null;
	}

	[Token(Token = "0x6001093")]
	[Address(RVA = "0x990378", Offset = "0x990378", VA = "0x990378")]
	public SteamVR_PlayArea()
	{
	}
}
[Token(Token = "0x20001DA")]
public class SteamVR_Render : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000704")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BE94", Offset = "0x39BE94")]
	private sealed class <RenderLoop>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SteamVR_Render <>4__this;

		[Token(Token = "0x1700055D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003078")]
			[Address(RVA = "0x993C98", Offset = "0x993C98", VA = "0x993C98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700055E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600307A")]
			[Address(RVA = "0x993D18", Offset = "0x993D18", VA = "0x993D18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003075")]
		[Address(RVA = "0x990D7C", Offset = "0x990D7C", VA = "0x990D7C")]
		[DebuggerHidden]
		public <RenderLoop>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6003076")]
		[Address(RVA = "0x993A74", Offset = "0x993A74", VA = "0x993A74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003077")]
		[Address(RVA = "0x993A78", Offset = "0x993A78", VA = "0x993A78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003079")]
		[Address(RVA = "0x993CA0", Offset = "0x993CA0", VA = "0x993CA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool pauseGameWhenDashboardIsVisible;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public bool lockPhysicsUpdateRateToRenderFrequency;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SteamVR_ExternalCamera externalCamera;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string externalCameraConfigPath;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ETrackingUniverseOrigin trackingSpace;

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A0BF0", Offset = "0x3A0BF0")]
	private static EVREye <eye>k__BackingField;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static SteamVR_Render _instance;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool isQuitting;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private SteamVR_Camera[] cameras;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TrackedDevicePose_t[] poses;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public TrackedDevicePose_t[] gamePoses;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	private static bool _pauseRendering;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WaitForEndOfFrame waitForEndOfFrame;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float sceneResolutionScale;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float timeScale;

	[Token(Token = "0x170001BD")]
	public static EVREye eye
	{
		[Token(Token = "0x6001094")]
		[Address(RVA = "0x9905B4", Offset = "0x9905B4", VA = "0x9905B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB33C", Offset = "0x3AB33C")]
		get
		{
			return default(EVREye);
		}
		[Token(Token = "0x6001095")]
		[Address(RVA = "0x99060C", Offset = "0x99060C", VA = "0x99060C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB34C", Offset = "0x3AB34C")]
		private set
		{
		}
	}

	[Token(Token = "0x170001BE")]
	public static SteamVR_Render instance
	{
		[Token(Token = "0x6001096")]
		[Address(RVA = "0x97FE88", Offset = "0x97FE88", VA = "0x97FE88")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001BF")]
	public static bool pauseRendering
	{
		[Token(Token = "0x600109F")]
		[Address(RVA = "0x990CA4", Offset = "0x990CA4", VA = "0x990CA4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x98B35C", Offset = "0x98B35C", VA = "0x98B35C")]
		set
		{
		}
	}

	[Token(Token = "0x6001097")]
	[Address(RVA = "0x990668", Offset = "0x990668", VA = "0x990668")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001098")]
	[Address(RVA = "0x9906C4", Offset = "0x9906C4", VA = "0x9906C4")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6001099")]
	[Address(RVA = "0x97E374", Offset = "0x97E374", VA = "0x97E374")]
	public static void Add(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x600109A")]
	[Address(RVA = "0x97D3C4", Offset = "0x97D3C4", VA = "0x97D3C4")]
	public static void Remove(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x600109B")]
	[Address(RVA = "0x989B84", Offset = "0x989B84", VA = "0x989B84")]
	public static SteamVR_Camera Top()
	{
		return null;
	}

	[Token(Token = "0x600109C")]
	[Address(RVA = "0x990754", Offset = "0x990754", VA = "0x990754")]
	private void AddInternal(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x600109D")]
	[Address(RVA = "0x990A30", Offset = "0x990A30", VA = "0x990A30")]
	private void RemoveInternal(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x600109E")]
	[Address(RVA = "0x990C38", Offset = "0x990C38", VA = "0x990C38")]
	private SteamVR_Camera TopInternal()
	{
		return null;
	}

	[Token(Token = "0x60010A1")]
	[Address(RVA = "0x990CFC", Offset = "0x990CFC", VA = "0x990CFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AB35C", Offset = "0x3AB35C")]
	private IEnumerator RenderLoop()
	{
		return null;
	}

	[Token(Token = "0x60010A2")]
	[Address(RVA = "0x990D9C", Offset = "0x990D9C", VA = "0x990D9C")]
	private void RenderExternalCamera()
	{
	}

	[Token(Token = "0x60010A3")]
	[Address(RVA = "0x990F44", Offset = "0x990F44", VA = "0x990F44")]
	private void OnInputFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x60010A4")]
	[Address(RVA = "0x990FB4", Offset = "0x990FB4", VA = "0x990FB4")]
	private void OnQuit(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0x990FBC", Offset = "0x990FBC", VA = "0x990FBC")]
	private string GetScreenshotFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames screenshotPropertyFilename)
	{
		return null;
	}

	[Token(Token = "0x60010A6")]
	[Address(RVA = "0x991148", Offset = "0x991148", VA = "0x991148")]
	private void OnRequestScreenshot(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x60010A7")]
	[Address(RVA = "0x992BE8", Offset = "0x992BE8", VA = "0x992BE8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010A8")]
	[Address(RVA = "0x992EE4", Offset = "0x992EE4", VA = "0x992EE4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010A9")]
	[Address(RVA = "0x9930E8", Offset = "0x9930E8", VA = "0x9930E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010AA")]
	[Address(RVA = "0x9932C8", Offset = "0x9932C8", VA = "0x9932C8")]
	public void UpdatePoses()
	{
	}

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0x9933E4", Offset = "0x9933E4", VA = "0x9933E4")]
	private void OnBeforeRender()
	{
	}

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0x9933E8", Offset = "0x9933E8", VA = "0x9933E8")]
	private void Update()
	{
	}

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0x993988", Offset = "0x993988", VA = "0x993988")]
	public SteamVR_Render()
	{
	}
}
[Token(Token = "0x20001DB")]
[ExecuteInEditMode]
public class SteamVR_RenderModel : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000705")]
	public class RenderModel
	{
		[Token(Token = "0x4002759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5C90", Offset = "0x3A5C90")]
		private Mesh <mesh>k__BackingField;

		[Token(Token = "0x400275A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5CA0", Offset = "0x3A5CA0")]
		private Material <material>k__BackingField;

		[Token(Token = "0x1700055F")]
		public Mesh mesh
		{
			[Token(Token = "0x600307C")]
			[Address(RVA = "0x998440", Offset = "0x998440", VA = "0x998440")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0A9C", Offset = "0x3B0A9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600307D")]
			[Address(RVA = "0x998448", Offset = "0x998448", VA = "0x998448")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0AAC", Offset = "0x3B0AAC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000560")]
		public Material material
		{
			[Token(Token = "0x600307E")]
			[Address(RVA = "0x998450", Offset = "0x998450", VA = "0x998450")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0ABC", Offset = "0x3B0ABC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600307F")]
			[Address(RVA = "0x998458", Offset = "0x998458", VA = "0x998458")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0ACC", Offset = "0x3B0ACC")]
			private set
			{
			}
		}

		[Token(Token = "0x600307B")]
		[Address(RVA = "0x996F70", Offset = "0x996F70", VA = "0x996F70")]
		public RenderModel(Mesh mesh, Material material)
		{
		}
	}

	[Token(Token = "0x2000706")]
	public sealed class RenderModelInterfaceHolder : IDisposable
	{
		[Token(Token = "0x400275B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool needsShutdown;

		[Token(Token = "0x400275C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		private bool failedLoadInterface;

		[Token(Token = "0x400275D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private CVRRenderModels _instance;

		[Token(Token = "0x17000561")]
		public CVRRenderModels instance
		{
			[Token(Token = "0x6003080")]
			[Address(RVA = "0x9952C8", Offset = "0x9952C8", VA = "0x9952C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003081")]
		[Address(RVA = "0x998460", Offset = "0x998460", VA = "0x998460", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6003082")]
		[Address(RVA = "0x9948E0", Offset = "0x9948E0", VA = "0x9948E0")]
		public RenderModelInterfaceHolder()
		{
		}
	}

	[Token(Token = "0x2000707")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BEA4", Offset = "0x39BEA4")]
	private sealed class <SetModelAsync>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400275E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400275F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string renderModelName;

		[Token(Token = "0x4002761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public SteamVR_RenderModel <>4__this;

		[Token(Token = "0x4002762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RenderModelInterfaceHolder <holder>5__2;

		[Token(Token = "0x4002763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private CVRRenderModels <renderModels>5__3;

		[Token(Token = "0x4002764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string[] <renderModelNames>5__4;

		[Token(Token = "0x17000562")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003087")]
			[Address(RVA = "0x9983B8", Offset = "0x9983B8", VA = "0x9983B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000563")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6003089")]
			[Address(RVA = "0x998438", Offset = "0x998438", VA = "0x998438", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003083")]
		[Address(RVA = "0x994190", Offset = "0x994190", VA = "0x994190")]
		[DebuggerHidden]
		public <SetModelAsync>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6003084")]
		[Address(RVA = "0x9977DC", Offset = "0x9977DC", VA = "0x9977DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003085")]
		[Address(RVA = "0x9978C8", Offset = "0x9978C8", VA = "0x9978C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003086")]
		[Address(RVA = "0x9977F4", Offset = "0x9977F4", VA = "0x9977F4")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6003088")]
		[Address(RVA = "0x9983C0", Offset = "0x9983C0", VA = "0x9983C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000708")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BEB4", Offset = "0x39BEB4")]
	private sealed class <FreeRenderModel>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr pRenderModel;

		[Token(Token = "0x17000564")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600308D")]
			[Address(RVA = "0x997754", Offset = "0x997754", VA = "0x997754", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000565")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600308F")]
			[Address(RVA = "0x9977D4", Offset = "0x9977D4", VA = "0x9977D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600308A")]
		[Address(RVA = "0x996F98", Offset = "0x996F98", VA = "0x996F98")]
		[DebuggerHidden]
		public <FreeRenderModel>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x600308B")]
		[Address(RVA = "0x997580", Offset = "0x997580", VA = "0x997580", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600308C")]
		[Address(RVA = "0x997584", Offset = "0x997584", VA = "0x997584", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600308E")]
		[Address(RVA = "0x99775C", Offset = "0x99775C", VA = "0x99775C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public SteamVR_TrackedObject.EIndex index;

	[Token(Token = "0x4000E9D")]
	public const string modelOverrideWarning = "Model override is really only meant to be used in the scene view for lining things up; using it at runtime is discouraged.  Use tracked device index instead to ensure the correct model is displayed for all users.";

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A0C00", Offset = "0x3A0C00")]
	public string modelOverride;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A0C34", Offset = "0x3A0C34")]
	public Shader shader;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A0C68", Offset = "0x3A0C68")]
	public bool verbose;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A0C9C", Offset = "0x3A0C9C")]
	public bool createComponents;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A0CD0", Offset = "0x3A0CD0")]
	public bool updateDynamically;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public RenderModel_ControllerMode_State_t controllerModeState;

	[Token(Token = "0x4000EA4")]
	public const string k_localTransformName = "attach";

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A0D04", Offset = "0x3A0D04")]
	private string <renderModelName>k__BackingField;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static System.Collections.Hashtable models;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static System.Collections.Hashtable materials;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SteamVR_Events.Action deviceConnectedAction;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private SteamVR_Events.Action hideRenderModelsAction;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SteamVR_Events.Action modelSkinSettingsHaveChangedAction;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Dictionary<int, string> nameCache;

	[Token(Token = "0x170001C0")]
	public string renderModelName
	{
		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x993D20", Offset = "0x993D20", VA = "0x993D20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB3CC", Offset = "0x3AB3CC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60010AF")]
		[Address(RVA = "0x993D28", Offset = "0x993D28", VA = "0x993D28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB3DC", Offset = "0x3AB3DC")]
		private set
		{
		}
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0x993D30", Offset = "0x993D30", VA = "0x993D30")]
	private void OnModelSkinSettingsHaveChanged(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0x993F80", Offset = "0x993F80", VA = "0x993F80")]
	private void OnHideRenderModels(bool hidden)
	{
	}

	[Token(Token = "0x60010B2")]
	[Address(RVA = "0x9940DC", Offset = "0x9940DC", VA = "0x9940DC")]
	private void OnDeviceConnected(int i, bool connected)
	{
	}

	[Token(Token = "0x60010B3")]
	[Address(RVA = "0x993DA4", Offset = "0x993DA4", VA = "0x993DA4")]
	public void UpdateModel()
	{
	}

	[Token(Token = "0x60010B4")]
	[Address(RVA = "0x9940F8", Offset = "0x9940F8", VA = "0x9940F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AB3EC", Offset = "0x3AB3EC")]
	private IEnumerator SetModelAsync(string renderModelName)
	{
		return null;
	}

	[Token(Token = "0x60010B5")]
	[Address(RVA = "0x9941B0", Offset = "0x9941B0", VA = "0x9941B0")]
	private bool SetModel(string renderModelName)
	{
		return default(bool);
	}

	[Token(Token = "0x60010B6")]
	[Address(RVA = "0x995AF8", Offset = "0x995AF8", VA = "0x995AF8")]
	private RenderModel LoadRenderModel(CVRRenderModels renderModels, string renderModelName, string baseName)
	{
		return null;
	}

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0x996EF0", Offset = "0x996EF0", VA = "0x996EF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AB45C", Offset = "0x3AB45C")]
	private IEnumerator FreeRenderModel(IntPtr pRenderModel)
	{
		return null;
	}

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0x996FB8", Offset = "0x996FB8", VA = "0x996FB8")]
	public Transform FindComponent(string componentName)
	{
		return null;
	}

	[Token(Token = "0x60010B9")]
	[Address(RVA = "0x994774", Offset = "0x994774", VA = "0x994774")]
	private void StripMesh(GameObject go)
	{
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0x9948E8", Offset = "0x9948E8", VA = "0x9948E8")]
	private bool LoadComponents(RenderModelInterfaceHolder holder, string renderModelName)
	{
		return default(bool);
	}

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0x997050", Offset = "0x997050", VA = "0x997050")]
	private SteamVR_RenderModel()
	{
	}

	[Token(Token = "0x60010BC")]
	[Address(RVA = "0x9971D0", Offset = "0x9971D0", VA = "0x9971D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010BD")]
	[Address(RVA = "0x99734C", Offset = "0x99734C", VA = "0x99734C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010BE")]
	[Address(RVA = "0x9973D4", Offset = "0x9973D4", VA = "0x9973D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60010BF")]
	[Address(RVA = "0x995480", Offset = "0x995480", VA = "0x995480")]
	public void UpdateComponents(CVRRenderModels renderModels)
	{
	}

	[Token(Token = "0x60010C0")]
	[Address(RVA = "0x997468", Offset = "0x997468", VA = "0x997468")]
	public void SetDeviceIndex(int index)
	{
	}

	[Token(Token = "0x60010C1")]
	[Address(RVA = "0x996998", Offset = "0x996998", VA = "0x996998")]
	private static void Sleep()
	{
	}

	[Token(Token = "0x60010C2")]
	[Address(RVA = "0x9969A4", Offset = "0x9969A4", VA = "0x9969A4")]
	private RenderModel_t MarshalRenderModel(IntPtr pRenderModel)
	{
		return default(RenderModel_t);
	}

	[Token(Token = "0x60010C3")]
	[Address(RVA = "0x996C68", Offset = "0x996C68", VA = "0x996C68")]
	private RenderModel_TextureMap_t MarshalRenderModel_TextureMap(IntPtr pRenderModel)
	{
		return default(RenderModel_TextureMap_t);
	}
}
[Token(Token = "0x20001DC")]
public class SteamVR_Skybox : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000709")]
	public enum CellSize
	{
		[Token(Token = "0x4002769")]
		x1024,
		[Token(Token = "0x400276A")]
		x64,
		[Token(Token = "0x400276B")]
		x32,
		[Token(Token = "0x400276C")]
		x16,
		[Token(Token = "0x400276D")]
		x8
	}

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Texture front;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Texture back;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Texture left;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture right;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Texture top;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture bottom;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public CellSize StereoCellSize;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float StereoIpdMm;

	[Token(Token = "0x60010C5")]
	[Address(RVA = "0x9984E8", Offset = "0x9984E8", VA = "0x9984E8")]
	public void SetTextureByIndex(int i, Texture t)
	{
	}

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0x998548", Offset = "0x998548", VA = "0x998548")]
	public Texture GetTextureByIndex(int i)
	{
		return null;
	}

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0x98AE3C", Offset = "0x98AE3C", VA = "0x98AE3C")]
	public static void SetOverride([Optional] Texture front, [Optional] Texture back, [Optional] Texture left, [Optional] Texture right, [Optional] Texture top, [Optional] Texture bottom)
	{
	}

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0x98B404", Offset = "0x98B404", VA = "0x98B404")]
	public static void ClearOverride()
	{
	}

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0x9985AC", Offset = "0x9985AC", VA = "0x9985AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010CA")]
	[Address(RVA = "0x9985E0", Offset = "0x9985E0", VA = "0x9985E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0x9985E4", Offset = "0x9985E4", VA = "0x9985E4")]
	public SteamVR_Skybox()
	{
	}
}
[Token(Token = "0x20001DD")]
[ExecuteInEditMode]
public class SteamVR_SphericalProjection : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material material;

	[Token(Token = "0x60010CC")]
	[Address(RVA = "0x998600", Offset = "0x998600", VA = "0x998600")]
	public void Set(Vector3 N, float phi0, float phi1, float theta0, float theta1, Vector3 uAxis, Vector3 uOrigin, float uScale, Vector3 vAxis, Vector3 vOrigin, float vScale)
	{
	}

	[Token(Token = "0x60010CD")]
	[Address(RVA = "0x998ACC", Offset = "0x998ACC", VA = "0x998ACC")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}

	[Token(Token = "0x60010CE")]
	[Address(RVA = "0x998B6C", Offset = "0x998B6C", VA = "0x998B6C")]
	public SteamVR_SphericalProjection()
	{
	}
}
[Token(Token = "0x20001DE")]
[ExecuteInEditMode]
public class SteamVR_Stats : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60010CF")]
	[Address(RVA = "0x998B74", Offset = "0x998B74", VA = "0x998B74")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0x998C34", Offset = "0x998C34", VA = "0x998C34")]
	public SteamVR_Stats()
	{
	}
}
[Token(Token = "0x20001DF")]
public class SteamVR_TestController : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private List<int> controllerIndices;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private EVRButtonId[] buttonIds;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private EVRButtonId[] axisIds;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform point;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Transform pointer;

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0x998C3C", Offset = "0x998C3C", VA = "0x998C3C")]
	private void OnDeviceConnected(int index, bool connected)
	{
	}

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0x999298", Offset = "0x999298", VA = "0x999298")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010D3")]
	[Address(RVA = "0x999380", Offset = "0x999380", VA = "0x999380")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0x998E30", Offset = "0x998E30", VA = "0x998E30")]
	private void PrintControllerStatus(int index)
	{
	}

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0x999468", Offset = "0x999468", VA = "0x999468")]
	private void Update()
	{
	}

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0x99A018", Offset = "0x99A018", VA = "0x99A018")]
	public SteamVR_TestController()
	{
	}
}
[Token(Token = "0x20001E0")]
public class SteamVR_TrackedCamera
{
	[Token(Token = "0x200070A")]
	public class VideoStreamTexture
	{
		[Token(Token = "0x400276E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5CB0", Offset = "0x3A5CB0")]
		private bool <undistorted>k__BackingField;

		[Token(Token = "0x400276F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5CC0", Offset = "0x3A5CC0")]
		private VRTextureBounds_t <frameBounds>k__BackingField;

		[Token(Token = "0x4002770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Texture2D _texture;

		[Token(Token = "0x4002771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int prevFrameCount;

		[Token(Token = "0x4002772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private uint glTextureId;

		[Token(Token = "0x4002773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VideoStream videostream;

		[Token(Token = "0x4002774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private CameraVideoStreamFrameHeader_t header;

		[Token(Token = "0x17000566")]
		public bool undistorted
		{
			[Token(Token = "0x6003091")]
			[Address(RVA = "0x99A8CC", Offset = "0x99A8CC", VA = "0x99A8CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0B7C", Offset = "0x3B0B7C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6003092")]
			[Address(RVA = "0x99A8D4", Offset = "0x99A8D4", VA = "0x99A8D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0B8C", Offset = "0x3B0B8C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000567")]
		public uint deviceIndex
		{
			[Token(Token = "0x6003093")]
			[Address(RVA = "0x99A8DC", Offset = "0x99A8DC", VA = "0x99A8DC")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000568")]
		public bool hasCamera
		{
			[Token(Token = "0x6003094")]
			[Address(RVA = "0x99A8FC", Offset = "0x99A8FC", VA = "0x99A8FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000569")]
		public bool hasTracking
		{
			[Token(Token = "0x6003095")]
			[Address(RVA = "0x99A91C", Offset = "0x99A91C", VA = "0x99A91C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700056A")]
		public uint frameId
		{
			[Token(Token = "0x6003096")]
			[Address(RVA = "0x99AD90", Offset = "0x99AD90", VA = "0x99AD90")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x1700056B")]
		public VRTextureBounds_t frameBounds
		{
			[Token(Token = "0x6003097")]
			[Address(RVA = "0x99ADA8", Offset = "0x99ADA8", VA = "0x99ADA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0B9C", Offset = "0x3B0B9C")]
			get
			{
				return default(VRTextureBounds_t);
			}
			[Token(Token = "0x6003098")]
			[Address(RVA = "0x99ADB8", Offset = "0x99ADB8", VA = "0x99ADB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0BAC", Offset = "0x3B0BAC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700056C")]
		public EVRTrackedCameraFrameType frameType
		{
			[Token(Token = "0x6003099")]
			[Address(RVA = "0x99ADC8", Offset = "0x99ADC8", VA = "0x99ADC8")]
			get
			{
				return default(EVRTrackedCameraFrameType);
			}
		}

		[Token(Token = "0x1700056D")]
		public Texture2D texture
		{
			[Token(Token = "0x600309A")]
			[Address(RVA = "0x99ADD0", Offset = "0x99ADD0", VA = "0x99ADD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700056E")]
		public SteamVR_Utils.RigidTransform transform
		{
			[Token(Token = "0x600309B")]
			[Address(RVA = "0x99ADE8", Offset = "0x99ADE8", VA = "0x99ADE8")]
			get
			{
				return default(SteamVR_Utils.RigidTransform);
			}
		}

		[Token(Token = "0x1700056F")]
		public Vector3 velocity
		{
			[Token(Token = "0x600309C")]
			[Address(RVA = "0x99AE70", Offset = "0x99AE70", VA = "0x99AE70")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000570")]
		public Vector3 angularVelocity
		{
			[Token(Token = "0x600309D")]
			[Address(RVA = "0x99AEBC", Offset = "0x99AEBC", VA = "0x99AEBC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6003090")]
		[Address(RVA = "0x99A2DC", Offset = "0x99A2DC", VA = "0x99A2DC")]
		public VideoStreamTexture(uint deviceIndex, bool undistorted)
		{
		}

		[Token(Token = "0x600309E")]
		[Address(RVA = "0x99AF0C", Offset = "0x99AF0C", VA = "0x99AF0C")]
		public TrackedDevicePose_t GetPose()
		{
			return default(TrackedDevicePose_t);
		}

		[Token(Token = "0x600309F")]
		[Address(RVA = "0x99AF38", Offset = "0x99AF38", VA = "0x99AF38")]
		public ulong Acquire()
		{
			return default(ulong);
		}

		[Token(Token = "0x60030A0")]
		[Address(RVA = "0x99AF5C", Offset = "0x99AF5C", VA = "0x99AF5C")]
		public ulong Release()
		{
			return default(ulong);
		}

		[Token(Token = "0x60030A1")]
		[Address(RVA = "0x99A934", Offset = "0x99A934", VA = "0x99A934")]
		private void Update()
		{
		}
	}

	[Token(Token = "0x200070B")]
	private class VideoStream
	{
		[Token(Token = "0x4002775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5CD0", Offset = "0x3A5CD0")]
		private uint <deviceIndex>k__BackingField;

		[Token(Token = "0x4002776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong _handle;

		[Token(Token = "0x4002777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _hasCamera;

		[Token(Token = "0x4002778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ulong refCount;

		[Token(Token = "0x17000571")]
		public uint deviceIndex
		{
			[Token(Token = "0x60030A3")]
			[Address(RVA = "0x99A700", Offset = "0x99A700", VA = "0x99A700")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0BBC", Offset = "0x3B0BBC")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x60030A4")]
			[Address(RVA = "0x99A708", Offset = "0x99A708", VA = "0x99A708")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0BCC", Offset = "0x3B0BCC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000572")]
		public ulong handle
		{
			[Token(Token = "0x60030A5")]
			[Address(RVA = "0x99A710", Offset = "0x99A710", VA = "0x99A710")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000573")]
		public bool hasCamera
		{
			[Token(Token = "0x60030A6")]
			[Address(RVA = "0x99A718", Offset = "0x99A718", VA = "0x99A718")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60030A2")]
		[Address(RVA = "0x99A650", Offset = "0x99A650", VA = "0x99A650")]
		public VideoStream(uint deviceIndex)
		{
		}

		[Token(Token = "0x60030A7")]
		[Address(RVA = "0x99A720", Offset = "0x99A720", VA = "0x99A720")]
		public ulong Acquire()
		{
			return default(ulong);
		}

		[Token(Token = "0x60030A8")]
		[Address(RVA = "0x99A7E4", Offset = "0x99A7E4", VA = "0x99A7E4")]
		public ulong Release()
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static VideoStreamTexture[] distorted;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static VideoStreamTexture[] undistorted;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static VideoStream[] videostreams;

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0x99A138", Offset = "0x99A138", VA = "0x99A138")]
	public static VideoStreamTexture Distorted(int deviceIndex = 0)
	{
		return null;
	}

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0x99A318", Offset = "0x99A318", VA = "0x99A318")]
	public static VideoStreamTexture Undistorted(int deviceIndex = 0)
	{
		return null;
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0x99A4B8", Offset = "0x99A4B8", VA = "0x99A4B8")]
	public static VideoStreamTexture Source(bool undistorted, int deviceIndex = 0)
	{
		return null;
	}

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0x99A4D0", Offset = "0x99A4D0", VA = "0x99A4D0")]
	private static VideoStream Stream(uint deviceIndex)
	{
		return null;
	}

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0x99A6F8", Offset = "0x99A6F8", VA = "0x99A6F8")]
	public SteamVR_TrackedCamera()
	{
	}
}
[Token(Token = "0x20001E1")]
public class SteamVR_TrackedObject : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200070C")]
	public enum EIndex
	{
		[Token(Token = "0x400277A")]
		None = -1,
		[Token(Token = "0x400277B")]
		Hmd,
		[Token(Token = "0x400277C")]
		Device1,
		[Token(Token = "0x400277D")]
		Device2,
		[Token(Token = "0x400277E")]
		Device3,
		[Token(Token = "0x400277F")]
		Device4,
		[Token(Token = "0x4002780")]
		Device5,
		[Token(Token = "0x4002781")]
		Device6,
		[Token(Token = "0x4002782")]
		Device7,
		[Token(Token = "0x4002783")]
		Device8,
		[Token(Token = "0x4002784")]
		Device9,
		[Token(Token = "0x4002785")]
		Device10,
		[Token(Token = "0x4002786")]
		Device11,
		[Token(Token = "0x4002787")]
		Device12,
		[Token(Token = "0x4002788")]
		Device13,
		[Token(Token = "0x4002789")]
		Device14,
		[Token(Token = "0x400278A")]
		Device15
	}

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public EIndex index;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A0D14", Offset = "0x3A0D14")]
	public Transform origin;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A0D48", Offset = "0x3A0D48")]
	private bool <isValid>k__BackingField;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SteamVR_Events.Action newPosesAction;

	[Token(Token = "0x170001C1")]
	public bool isValid
	{
		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x99B028", Offset = "0x99B028", VA = "0x99B028")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB4CC", Offset = "0x3AB4CC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x99B030", Offset = "0x99B030", VA = "0x99B030")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB4DC", Offset = "0x3AB4DC")]
		private set
		{
		}
	}

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0x99B038", Offset = "0x99B038", VA = "0x99B038")]
	private void OnNewPoses(TrackedDevicePose_t[] poses)
	{
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0x99B39C", Offset = "0x99B39C", VA = "0x99B39C")]
	private SteamVR_TrackedObject()
	{
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0x99B468", Offset = "0x99B468", VA = "0x99B468")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0x99B534", Offset = "0x99B534", VA = "0x99B534")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0x99B574", Offset = "0x99B574", VA = "0x99B574")]
	public void SetDeviceIndex(int index)
	{
	}
}
[Token(Token = "0x20001E2")]
[ExecuteInEditMode]
public class SteamVR_UpdatePoses : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60010E3")]
	[Address(RVA = "0x99B674", Offset = "0x99B674", VA = "0x99B674")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010E4")]
	[Address(RVA = "0x99B734", Offset = "0x99B734", VA = "0x99B734")]
	public SteamVR_UpdatePoses()
	{
	}
}
[Token(Token = "0x20001E3")]
public static class SteamVR_Utils
{
	[Serializable]
	[Token(Token = "0x200070D")]
	public struct RigidTransform
	{
		[Token(Token = "0x400278B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 pos;

		[Token(Token = "0x400278C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion rot;

		[Token(Token = "0x17000574")]
		public static RigidTransform identity
		{
			[Token(Token = "0x60030A9")]
			[Address(RVA = "0x552380", Offset = "0x552380", VA = "0x552380")]
			get
			{
				return default(RigidTransform);
			}
		}

		[Token(Token = "0x60030AA")]
		[Address(RVA = "0x55247C", Offset = "0x55247C", VA = "0x55247C")]
		public static RigidTransform FromLocal(Transform t)
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x60030AB")]
		[Address(RVA = "0x455D6C", Offset = "0x455D6C", VA = "0x455D6C")]
		public RigidTransform(Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x60030AC")]
		[Address(RVA = "0x455DA0", Offset = "0x455DA0", VA = "0x455DA0")]
		public RigidTransform(Transform t)
		{
		}

		[Token(Token = "0x60030AD")]
		[Address(RVA = "0x455DA8", Offset = "0x455DA8", VA = "0x455DA8")]
		public RigidTransform(Transform from, Transform to)
		{
		}

		[Token(Token = "0x60030AE")]
		[Address(RVA = "0x455DB0", Offset = "0x455DB0", VA = "0x455DB0")]
		public RigidTransform(HmdMatrix34_t pose)
		{
		}

		[Token(Token = "0x60030AF")]
		[Address(RVA = "0x455E08", Offset = "0x455E08", VA = "0x455E08")]
		public RigidTransform(HmdMatrix44_t pose)
		{
		}

		[Token(Token = "0x60030B0")]
		[Address(RVA = "0x455E7C", Offset = "0x455E7C", VA = "0x455E7C")]
		public HmdMatrix44_t ToHmdMatrix44()
		{
			return default(HmdMatrix44_t);
		}

		[Token(Token = "0x60030B1")]
		[Address(RVA = "0x455E90", Offset = "0x455E90", VA = "0x455E90")]
		public HmdMatrix34_t ToHmdMatrix34()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x60030B2")]
		[Address(RVA = "0x455EA4", Offset = "0x455EA4", VA = "0x455EA4", Slot = "0")]
		public override bool Equals(object o)
		{
			return default(bool);
		}

		[Token(Token = "0x60030B3")]
		[Address(RVA = "0x455EAC", Offset = "0x455EAC", VA = "0x455EAC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60030B4")]
		[Address(RVA = "0x553648", Offset = "0x553648", VA = "0x553648")]
		public static bool operator ==(RigidTransform a, RigidTransform b)
		{
			return default(bool);
		}

		[Token(Token = "0x60030B5")]
		[Address(RVA = "0x553780", Offset = "0x553780", VA = "0x553780")]
		public static bool operator !=(RigidTransform a, RigidTransform b)
		{
			return default(bool);
		}

		[Token(Token = "0x60030B6")]
		[Address(RVA = "0x5538B8", Offset = "0x5538B8", VA = "0x5538B8")]
		public static RigidTransform operator *(RigidTransform a, RigidTransform b)
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x60030B7")]
		[Address(RVA = "0x455EDC", Offset = "0x455EDC", VA = "0x455EDC")]
		public void Inverse()
		{
		}

		[Token(Token = "0x60030B8")]
		[Address(RVA = "0x455EE4", Offset = "0x455EE4", VA = "0x455EE4")]
		public RigidTransform GetInverse()
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x60030B9")]
		[Address(RVA = "0x455EF8", Offset = "0x455EF8", VA = "0x455EF8")]
		public void Multiply(RigidTransform a, RigidTransform b)
		{
		}

		[Token(Token = "0x60030BA")]
		[Address(RVA = "0x455F68", Offset = "0x455F68", VA = "0x455F68")]
		public Vector3 InverseTransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60030BB")]
		[Address(RVA = "0x455F8C", Offset = "0x455F8C", VA = "0x455F8C")]
		public Vector3 TransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60030BC")]
		[Address(RVA = "0x553FC8", Offset = "0x553FC8", VA = "0x553FC8")]
		public static Vector3 operator *(RigidTransform t, Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60030BD")]
		[Address(RVA = "0x554014", Offset = "0x554014", VA = "0x554014")]
		public static RigidTransform Interpolate(RigidTransform a, RigidTransform b, float t)
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x60030BE")]
		[Address(RVA = "0x455FB0", Offset = "0x455FB0", VA = "0x455FB0")]
		public void Interpolate(RigidTransform to, float t)
		{
		}
	}

	[Token(Token = "0x200070E")]
	public delegate object SystemFn(CVRSystem system, params object[] args);

	[Token(Token = "0x60010E5")]
	[Address(RVA = "0x99B73C", Offset = "0x99B73C", VA = "0x99B73C")]
	public static Quaternion Slerp(Quaternion A, Quaternion B, float t)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60010E6")]
	[Address(RVA = "0x99B970", Offset = "0x99B970", VA = "0x99B970")]
	public static Vector3 Lerp(Vector3 A, Vector3 B, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010E7")]
	[Address(RVA = "0x99B9DC", Offset = "0x99B9DC", VA = "0x99B9DC")]
	public static float Lerp(float A, float B, float t)
	{
		return default(float);
	}

	[Token(Token = "0x60010E8")]
	[Address(RVA = "0x99B9F8", Offset = "0x99B9F8", VA = "0x99B9F8")]
	public static double Lerp(double A, double B, double t)
	{
		return default(double);
	}

	[Token(Token = "0x60010E9")]
	[Address(RVA = "0x99BA14", Offset = "0x99BA14", VA = "0x99BA14")]
	public static float InverseLerp(Vector3 A, Vector3 B, Vector3 result)
	{
		return default(float);
	}

	[Token(Token = "0x60010EA")]
	[Address(RVA = "0x99BB14", Offset = "0x99BB14", VA = "0x99BB14")]
	public static float InverseLerp(float A, float B, float result)
	{
		return default(float);
	}

	[Token(Token = "0x60010EB")]
	[Address(RVA = "0x99BB34", Offset = "0x99BB34", VA = "0x99BB34")]
	public static double InverseLerp(double A, double B, double result)
	{
		return default(double);
	}

	[Token(Token = "0x60010EC")]
	[Address(RVA = "0x99BB54", Offset = "0x99BB54", VA = "0x99BB54")]
	public static float Saturate(float A)
	{
		return default(float);
	}

	[Token(Token = "0x60010ED")]
	[Address(RVA = "0x99BB78", Offset = "0x99BB78", VA = "0x99BB78")]
	public static Vector2 Saturate(Vector2 A)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60010EE")]
	[Address(RVA = "0x99BBD8", Offset = "0x99BBD8", VA = "0x99BBD8")]
	public static float Abs(float A)
	{
		return default(float);
	}

	[Token(Token = "0x60010EF")]
	[Address(RVA = "0x99BBF4", Offset = "0x99BBF4", VA = "0x99BBF4")]
	public static Vector2 Abs(Vector2 A)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60010F0")]
	[Address(RVA = "0x99BC44", Offset = "0x99BC44", VA = "0x99BC44")]
	private static float _copysign(float sizeval, float signval)
	{
		return default(float);
	}

	[Token(Token = "0x60010F1")]
	[Address(RVA = "0x99BD24", Offset = "0x99BD24", VA = "0x99BD24")]
	public static Quaternion GetRotation(this Matrix4x4 matrix)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60010F2")]
	[Address(RVA = "0x99BF34", Offset = "0x99BF34", VA = "0x99BF34")]
	public static Vector3 GetPosition(this Matrix4x4 matrix)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010F3")]
	[Address(RVA = "0x99BF68", Offset = "0x99BF68", VA = "0x99BF68")]
	public static Vector3 GetScale(this Matrix4x4 m)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010F4")]
	[Address(RVA = "0x99C0DC", Offset = "0x99C0DC", VA = "0x99C0DC")]
	public static object CallSystemFn(SystemFn fn, params object[] args)
	{
		return null;
	}

	[Token(Token = "0x60010F5")]
	[Address(RVA = "0x991428", Offset = "0x991428", VA = "0x991428")]
	public static void TakeStereoScreenshot(uint screenshotHandle, GameObject target, int cellSize, float ipd, ref string previewFilename, ref string VRFilename)
	{
	}
}
[Token(Token = "0x20001E4")]
public class DeviceClient : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200070F")]
	public delegate void OnConnectSuccessDelegate();

	[Token(Token = "0x2000710")]
	public delegate void OnConnectFailDelegate();

	[Token(Token = "0x2000711")]
	private delegate void ProcessPacketDelegate(DevicePacketData packetData);

	[Token(Token = "0x2000712")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BEC4", Offset = "0x39BEC4")]
	private sealed class <DelayDeviceRestore>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400278D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400278E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400278F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float fDelay;

		[Token(Token = "0x4002790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public DeviceClient <>4__this;

		[Token(Token = "0x17000575")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60030D2")]
			[Address(RVA = "0x7FCBA8", Offset = "0x7FCBA8", VA = "0x7FCBA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000576")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60030D4")]
			[Address(RVA = "0x7FCC28", Offset = "0x7FCC28", VA = "0x7FCC28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60030CF")]
		[Address(RVA = "0x7FC6DC", Offset = "0x7FC6DC", VA = "0x7FC6DC")]
		[DebuggerHidden]
		public <DelayDeviceRestore>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x60030D0")]
		[Address(RVA = "0x7FCACC", Offset = "0x7FCACC", VA = "0x7FCACC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60030D1")]
		[Address(RVA = "0x7FCAD0", Offset = "0x7FCAD0", VA = "0x7FCAD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60030D3")]
		[Address(RVA = "0x7FCBB0", Offset = "0x7FCBB0", VA = "0x7FCBB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public OnConnectSuccessDelegate OnConnectSuccessCallback;

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public OnConnectFailDelegate OnConnectFailCallback;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private VRDeviceInteract _deviceInteract;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Socket _socket;

	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private string _ipAddress;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _port;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private byte[] _receiveBuffer;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _receiveBytes;

	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Queue<string> _packetQ;

	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ProcessPacketDelegate[] _OnProcessPacketCallbacks;

	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool _needCallDeviceRestore;

	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A0D58", Offset = "0x3A0D58")]
	private VROverlayClient <_overlayClient>k__BackingField;

	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool _enableProcessPacket;

	[Token(Token = "0x170001C2")]
	public VROverlayClient _overlayClient
	{
		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x7FA2E0", Offset = "0x7FA2E0", VA = "0x7FA2E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB51C", Offset = "0x3AB51C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x7FA2E8", Offset = "0x7FA2E8", VA = "0x7FA2E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB52C", Offset = "0x3AB52C")]
		set
		{
		}
	}

	[Token(Token = "0x60010F8")]
	[Address(RVA = "0x7FA2F0", Offset = "0x7FA2F0", VA = "0x7FA2F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010F9")]
	[Address(RVA = "0x7FAADC", Offset = "0x7FAADC", VA = "0x7FAADC")]
	private void Start()
	{
	}

	[Token(Token = "0x60010FA")]
	[Address(RVA = "0x7FACE0", Offset = "0x7FACE0", VA = "0x7FACE0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60010FB")]
	[Address(RVA = "0x7FAD1C", Offset = "0x7FAD1C", VA = "0x7FAD1C")]
	private void OnConnect(IAsyncResult ar)
	{
	}

	[Token(Token = "0x60010FC")]
	[Address(RVA = "0x7FAE60", Offset = "0x7FAE60", VA = "0x7FAE60")]
	private void StartReceiveData()
	{
	}

	[Token(Token = "0x60010FD")]
	[Address(RVA = "0x7FB300", Offset = "0x7FB300", VA = "0x7FB300")]
	private void OnReceive(IAsyncResult ar)
	{
	}

	[Token(Token = "0x60010FE")]
	[Address(RVA = "0x7FB424", Offset = "0x7FB424", VA = "0x7FB424")]
	private void Update()
	{
	}

	[Token(Token = "0x60010FF")]
	[Address(RVA = "0x7FB46C", Offset = "0x7FB46C", VA = "0x7FB46C")]
	private void ProcessPacket()
	{
	}

	[Token(Token = "0x6001100")]
	[Address(RVA = "0x7FBA88", Offset = "0x7FBA88", VA = "0x7FBA88")]
	private void OnProcessPacket_None(DevicePacketData receivePacketData)
	{
	}

	[Token(Token = "0x6001101")]
	[Address(RVA = "0x7FBA94", Offset = "0x7FBA94", VA = "0x7FBA94")]
	private void OnProcessPacket_SC_Ack_ChangeHMDLauncher(DevicePacketData receivePacketData)
	{
	}

	[Token(Token = "0x6001102")]
	[Address(RVA = "0x7FBB30", Offset = "0x7FBB30", VA = "0x7FBB30")]
	private void OnProcessPacket_SC_Req_ChangeVRApp(DevicePacketData receivePacketData)
	{
	}

	[Token(Token = "0x6001103")]
	[Address(RVA = "0x7FBC70", Offset = "0x7FBC70", VA = "0x7FBC70")]
	private void OnProcessPacket_SC_Req_QuitVRApp(DevicePacketData receivePacketData)
	{
	}

	[Token(Token = "0x6001104")]
	[Address(RVA = "0x7FBCEC", Offset = "0x7FBCEC", VA = "0x7FBCEC")]
	private void OnProcessPacket_SC_Ack_ShowHideOverlay(DevicePacketData receivePacketData)
	{
	}

	[Token(Token = "0x6001105")]
	[Address(RVA = "0x7FBDB8", Offset = "0x7FBDB8", VA = "0x7FBDB8")]
	private void OnProcessPacket_SC_Ack_SendVGSInfo(DevicePacketData receivePacketData)
	{
	}

	[Token(Token = "0x6001106")]
	[Address(RVA = "0x7FC020", Offset = "0x7FC020", VA = "0x7FC020")]
	private void SendPacket(string sendJsonData)
	{
	}

	[Token(Token = "0x6001107")]
	[Address(RVA = "0x7FC0A0", Offset = "0x7FC0A0", VA = "0x7FC0A0")]
	public void SendPacket_CS_Req_ChangeHMDLauncher()
	{
	}

	[Token(Token = "0x6001108")]
	[Address(RVA = "0x7FC1FC", Offset = "0x7FC1FC", VA = "0x7FC1FC")]
	public void SendPacket_CS_Ack_ChangeVRApp()
	{
	}

	[Token(Token = "0x6001109")]
	[Address(RVA = "0x7FC358", Offset = "0x7FC358", VA = "0x7FC358")]
	public void SendPacket_CS_Req_ShowHideOverlay(string request, string appName, string appFolderName, string windowHandle)
	{
	}

	[Token(Token = "0x600110A")]
	[Address(RVA = "0x7FC4F0", Offset = "0x7FC4F0", VA = "0x7FC4F0")]
	public void SendPacket_CS_Ack_ShowHideOverlay(string request, string result, string data)
	{
	}

	[Token(Token = "0x600110B")]
	[Address(RVA = "0x7FC614", Offset = "0x7FC614", VA = "0x7FC614")]
	public void SendPacket_CS_Ack_ErrorCode(eErrorCodeType errorCode)
	{
	}

	[Token(Token = "0x600110C")]
	[Address(RVA = "0x7FAF28", Offset = "0x7FAF28", VA = "0x7FAF28")]
	private void SendPacket_CS_Ack_GetVersionInfo()
	{
	}

	[Token(Token = "0x600110D")]
	[Address(RVA = "0x7FB004", Offset = "0x7FB004", VA = "0x7FB004")]
	private void SendPacket_CS_Req_SendVGSInfo()
	{
	}

	[Token(Token = "0x600110E")]
	[Address(RVA = "0x7FB5B0", Offset = "0x7FB5B0", VA = "0x7FB5B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AB53C", Offset = "0x3AB53C")]
	private IEnumerator DelayDeviceRestore(float fDelay)
	{
		return null;
	}

	[Token(Token = "0x600110F")]
	[Address(RVA = "0x7FC6FC", Offset = "0x7FC6FC", VA = "0x7FC6FC")]
	public void SetDeviceCallback(VRDeviceChange2.OnDeviceChangedDelegate OnDeviceBeforeChangeToNoneCallBack, VRDeviceChange2.OnDeviceChangedDelegate OnDeviceChangedToOpenVRCallBack)
	{
	}

	[Token(Token = "0x6001110")]
	[Address(RVA = "0x7FC84C", Offset = "0x7FC84C", VA = "0x7FC84C")]
	public void SetDeviceBeforeChangeToNoneCallBack(VRDeviceChange2.OnDeviceChangedDelegate OnDeviceBeforeChangeToNoneCallBack)
	{
	}

	[Token(Token = "0x6001111")]
	[Address(RVA = "0x7FC91C", Offset = "0x7FC91C", VA = "0x7FC91C")]
	public void SetDeviceChangedToOpenVRCallBack(VRDeviceChange2.OnDeviceChangedDelegate OnDeviceChangedToOpenVRCallBack)
	{
	}

	[Token(Token = "0x6001112")]
	[Address(RVA = "0x7FC9EC", Offset = "0x7FC9EC", VA = "0x7FC9EC")]
	public DeviceClient()
	{
	}
}
[Token(Token = "0x20001E5")]
public class StoveVRSDK : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000713")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BED4", Offset = "0x39BED4")]
	private sealed class <WaitWhileConnectServer>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StoveVRSDK <>4__this;

		[Token(Token = "0x4002794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x17000577")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60030D8")]
			[Address(RVA = "0x557ACC", Offset = "0x557ACC", VA = "0x557ACC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000578")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60030DA")]
			[Address(RVA = "0x557B4C", Offset = "0x557B4C", VA = "0x557B4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60030D5")]
		[Address(RVA = "0x55769C", Offset = "0x55769C", VA = "0x55769C")]
		[DebuggerHidden]
		public <WaitWhileConnectServer>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60030D6")]
		[Address(RVA = "0x5579C8", Offset = "0x5579C8", VA = "0x5579C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60030D7")]
		[Address(RVA = "0x5579CC", Offset = "0x5579CC", VA = "0x5579CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60030D9")]
		[Address(RVA = "0x557AD4", Offset = "0x557AD4", VA = "0x557AD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static StoveVRSDK _instance;

	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static bool _isFirstTimeAwake;

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private DeviceClient _deviceClient;

	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Camera[] _playerCameras;

	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private VROverlayClient _overlayClient;

	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A0D68", Offset = "0x3A0D68")]
	private string <_versionInfo>k__BackingField;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool _isConnectSuccessToServer;

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool _isConnectFailToServer;

	[Token(Token = "0x170001C3")]
	public static StoveVRSDK instance
	{
		[Token(Token = "0x6001113")]
		[Address(RVA = "0x557050", Offset = "0x557050", VA = "0x557050")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001C4")]
	public string _versionInfo
	{
		[Token(Token = "0x6001114")]
		[Address(RVA = "0x5572A0", Offset = "0x5572A0", VA = "0x5572A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB5AC", Offset = "0x3AB5AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001115")]
		[Address(RVA = "0x5572A8", Offset = "0x5572A8", VA = "0x5572A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB5BC", Offset = "0x3AB5BC")]
		private set
		{
		}
	}

	[Token(Token = "0x6001116")]
	[Address(RVA = "0x5572B0", Offset = "0x5572B0", VA = "0x5572B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001117")]
	[Address(RVA = "0x5575A4", Offset = "0x5575A4", VA = "0x5575A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001118")]
	[Address(RVA = "0x55767C", Offset = "0x55767C", VA = "0x55767C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001119")]
	[Address(RVA = "0x55716C", Offset = "0x55716C", VA = "0x55716C")]
	private static StoveVRSDK CreateInstance()
	{
		return null;
	}

	[Token(Token = "0x600111A")]
	[Address(RVA = "0x557680", Offset = "0x557680", VA = "0x557680")]
	public void GetReady()
	{
	}

	[Token(Token = "0x600111B")]
	[Address(RVA = "0x557684", Offset = "0x557684", VA = "0x557684")]
	public void OnConnectSuccessToServer()
	{
	}

	[Token(Token = "0x600111C")]
	[Address(RVA = "0x557690", Offset = "0x557690", VA = "0x557690")]
	public void OnConnectFailToServer()
	{
	}

	[Token(Token = "0x600111D")]
	[Address(RVA = "0x5575FC", Offset = "0x5575FC", VA = "0x5575FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AB5CC", Offset = "0x3AB5CC")]
	private IEnumerator WaitWhileConnectServer()
	{
		return null;
	}

	[Token(Token = "0x600111E")]
	[Address(RVA = "0x5576BC", Offset = "0x5576BC", VA = "0x5576BC")]
	public void SetAppName(string appName, string appFolderName)
	{
	}

	[Token(Token = "0x600111F")]
	[Address(RVA = "0x5576FC", Offset = "0x5576FC", VA = "0x5576FC")]
	public void SetOverlayCallBack(VROverlayClient.OnOverlayDelegate OnOverlayBeforeShowCallBack, VROverlayClient.OnOverlayDelegate OnOverlayAfterHideCallBack)
	{
	}

	[Token(Token = "0x6001120")]
	[Address(RVA = "0x55782C", Offset = "0x55782C", VA = "0x55782C")]
	public void UnSetOverlayCallBack(VROverlayClient.OnOverlayDelegate OnOverlayBeforeShowCallBack, VROverlayClient.OnOverlayDelegate OnOverlayAfterHideCallBack)
	{
	}

	[Token(Token = "0x6001121")]
	[Address(RVA = "0x55795C", Offset = "0x55795C", VA = "0x55795C")]
	private void QuitApplication()
	{
	}

	[Token(Token = "0x6001122")]
	[Address(RVA = "0x557964", Offset = "0x557964", VA = "0x557964")]
	public StoveVRSDK()
	{
	}
}
[Token(Token = "0x20001E6")]
public class VRBlurOptimized : VRPostEffectsBase
{
	[Token(Token = "0x2000714")]
	public enum BlurType
	{
		[Token(Token = "0x4002796")]
		StandardGauss,
		[Token(Token = "0x4002797")]
		SgxGauss
	}

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3A0D78", Offset = "0x3A0D78")]
	public int downsample;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3A0D90", Offset = "0x3A0D90")]
	public float blurSize;

	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3A0DAC", Offset = "0x3A0DAC")]
	public int blurIterations;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BlurType blurType;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Shader blurShader;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material blurMaterial;

	[Token(Token = "0x6001124")]
	[Address(RVA = "0x65477C", Offset = "0x65477C", VA = "0x65477C", Slot = "4")]
	public override bool CheckResources()
	{
		return default(bool);
	}

	[Token(Token = "0x6001125")]
	[Address(RVA = "0x6547D8", Offset = "0x6547D8", VA = "0x6547D8")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6001126")]
	[Address(RVA = "0x654894", Offset = "0x654894", VA = "0x654894")]
	public void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6001127")]
	[Address(RVA = "0x654D50", Offset = "0x654D50", VA = "0x654D50")]
	public VRBlurOptimized()
	{
	}
}
[Token(Token = "0x20001E7")]
public class VRDeviceChange2 : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000715")]
	public enum eVRDeviceType
	{
		[Token(Token = "0x4002799")]
		None,
		[Token(Token = "0x400279A")]
		OpenVR
	}

	[Token(Token = "0x2000716")]
	public delegate void OnDeviceChangedDelegate();

	[Token(Token = "0x2000717")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BEE4", Offset = "0x39BEE4")]
	private sealed class <ChangeSteamVRStateToTransition>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400279B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400279C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x17000579")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60030E2")]
			[Address(RVA = "0xA1C300", Offset = "0xA1C300", VA = "0xA1C300", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700057A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60030E4")]
			[Address(RVA = "0xA1C380", Offset = "0xA1C380", VA = "0xA1C380", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60030DF")]
		[Address(RVA = "0xA1C2A0", Offset = "0xA1C2A0", VA = "0xA1C2A0")]
		[DebuggerHidden]
		public <ChangeSteamVRStateToTransition>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60030E0")]
		[Address(RVA = "0xA1C2C0", Offset = "0xA1C2C0", VA = "0xA1C2C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60030E1")]
		[Address(RVA = "0xA1C2C4", Offset = "0xA1C2C4", VA = "0xA1C2C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60030E3")]
		[Address(RVA = "0xA1C308", Offset = "0xA1C308", VA = "0xA1C308", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000718")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BEF4", Offset = "0x39BEF4")]
	private sealed class <ChangeSteamVRStateToRestore>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400279D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400279E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x1700057B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60030E8")]
			[Address(RVA = "0x654EFC", Offset = "0x654EFC", VA = "0x654EFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700057C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60030EA")]
			[Address(RVA = "0x654F7C", Offset = "0x654F7C", VA = "0x654F7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60030E5")]
		[Address(RVA = "0x654E90", Offset = "0x654E90", VA = "0x654E90")]
		[DebuggerHidden]
		public <ChangeSteamVRStateToRestore>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60030E6")]
		[Address(RVA = "0x654EBC", Offset = "0x654EBC", VA = "0x654EBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60030E7")]
		[Address(RVA = "0x654EC0", Offset = "0x654EC0", VA = "0x654EC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60030E9")]
		[Address(RVA = "0x654F04", Offset = "0x654F04", VA = "0x654F04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool _isSteamVRTransitionState;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public OnDeviceChangedDelegate OnDeviceBeforeChangeToOpenVRCallBack;

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public OnDeviceChangedDelegate OnDeviceBeforeChangeToNoneCallBack;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OnDeviceChangedDelegate OnDeviceChangedToOpenVRCallBack;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public OnDeviceChangedDelegate OnDeviceChangedToNoneCallBack;

	[Token(Token = "0x6001128")]
	[Address(RVA = "0x654D6C", Offset = "0x654D6C", VA = "0x654D6C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001129")]
	[Address(RVA = "0x654D70", Offset = "0x654D70", VA = "0x654D70")]
	public void StartChangeSteamVRStateToTransition()
	{
	}

	[Token(Token = "0x600112A")]
	[Address(RVA = "0x654D94", Offset = "0x654D94", VA = "0x654D94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AB63C", Offset = "0x3AB63C")]
	private IEnumerator ChangeSteamVRStateToTransition()
	{
		return null;
	}

	[Token(Token = "0x600112B")]
	[Address(RVA = "0x654DFC", Offset = "0x654DFC", VA = "0x654DFC")]
	public void StartChangeSteamVRStateToRestore(bool bForce = false)
	{
	}

	[Token(Token = "0x600112C")]
	[Address(RVA = "0x654E24", Offset = "0x654E24", VA = "0x654E24")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AB6AC", Offset = "0x3AB6AC")]
	private IEnumerator ChangeSteamVRStateToRestore(bool bForce)
	{
		return null;
	}

	[Token(Token = "0x600112D")]
	[Address(RVA = "0x654EB0", Offset = "0x654EB0", VA = "0x654EB0")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600112E")]
	[Address(RVA = "0x654EB4", Offset = "0x654EB4", VA = "0x654EB4")]
	public VRDeviceChange2()
	{
	}
}
[Token(Token = "0x20001E8")]
public class VRDeviceInteract : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A0DC8", Offset = "0x3A0DC8")]
	private VRDeviceChange2 <_deviceChange>k__BackingField;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool _isDeviceNone;

	[Token(Token = "0x170001C5")]
	public VRDeviceChange2 _deviceChange
	{
		[Token(Token = "0x600112F")]
		[Address(RVA = "0xA1C618", Offset = "0xA1C618", VA = "0xA1C618")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB71C", Offset = "0x3AB71C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001130")]
		[Address(RVA = "0xA1C620", Offset = "0xA1C620", VA = "0xA1C620")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB72C", Offset = "0x3AB72C")]
		private set
		{
		}
	}

	[Token(Token = "0x6001131")]
	[Address(RVA = "0xA1C628", Offset = "0xA1C628", VA = "0xA1C628")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001132")]
	[Address(RVA = "0xA1C8C0", Offset = "0xA1C8C0", VA = "0xA1C8C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001133")]
	[Address(RVA = "0xA1C8C4", Offset = "0xA1C8C4", VA = "0xA1C8C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001134")]
	[Address(RVA = "0xA1C8C8", Offset = "0xA1C8C8", VA = "0xA1C8C8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001135")]
	[Address(RVA = "0xA1C8E0", Offset = "0xA1C8E0", VA = "0xA1C8E0")]
	public void OnDeviceBeforeChangeToOpenVR()
	{
	}

	[Token(Token = "0x6001136")]
	[Address(RVA = "0xA1C8E4", Offset = "0xA1C8E4", VA = "0xA1C8E4")]
	public void OnDeviceBeforeChangeToNone()
	{
	}

	[Token(Token = "0x6001137")]
	[Address(RVA = "0xA1C8E8", Offset = "0xA1C8E8", VA = "0xA1C8E8")]
	public void OnDeviceChangedToOpenVR()
	{
	}

	[Token(Token = "0x6001138")]
	[Address(RVA = "0xA1C8F4", Offset = "0xA1C8F4", VA = "0xA1C8F4")]
	public void OnDeviceChangedToNone()
	{
	}

	[Token(Token = "0x6001139")]
	[Address(RVA = "0xA1C900", Offset = "0xA1C900", VA = "0xA1C900")]
	public void StartChangeSteamVRStateToTransition()
	{
	}

	[Token(Token = "0x600113A")]
	[Address(RVA = "0xA1C928", Offset = "0xA1C928", VA = "0xA1C928")]
	public void StartChangeSteamVRStateToRestore()
	{
	}

	[Token(Token = "0x600113B")]
	[Address(RVA = "0xA1C954", Offset = "0xA1C954", VA = "0xA1C954")]
	public VRDeviceInteract()
	{
	}
}
[Token(Token = "0x20001E9")]
public class VROverlayBase : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000719")]
	public enum eControllerPositionType
	{
		[Token(Token = "0x40027A0")]
		Right,
		[Token(Token = "0x40027A1")]
		Left
	}

	[Token(Token = "0x200071A")]
	public enum eControllerButtonType
	{
		[Token(Token = "0x40027A3")]
		Trigger,
		[Token(Token = "0x40027A4")]
		Menu,
		[Token(Token = "0x40027A5")]
		Touchpad,
		[Token(Token = "0x40027A6")]
		Grip,
		[Token(Token = "0x40027A7")]
		Max
	}

	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A0DD8", Offset = "0x3A0DD8")]
	private Transform <_cameraTransform>k__BackingField;

	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A0DE8", Offset = "0x3A0DE8")]
	private string <_overlayKey>k__BackingField;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A0DF8", Offset = "0x3A0DF8")]
	private float <_scale>k__BackingField;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A0E08", Offset = "0x3A0E08")]
	private float <_additionalHeight>k__BackingField;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A0E18", Offset = "0x3A0E18")]
	private float <_distanceFromCamera>k__BackingField;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A0E28", Offset = "0x3A0E28")]
	private bool <_attachCamera>k__BackingField;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A0E38", Offset = "0x3A0E38")]
	private string <_windowHandle>k__BackingField;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A0E48", Offset = "0x3A0E48")]
	private string <_overlayBGImageFile>k__BackingField;

	[Token(Token = "0x170001C6")]
	public Transform _cameraTransform
	{
		[Token(Token = "0x600113C")]
		[Address(RVA = "0xA1EDB8", Offset = "0xA1EDB8", VA = "0xA1EDB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB73C", Offset = "0x3AB73C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600113D")]
		[Address(RVA = "0xA1EDC0", Offset = "0xA1EDC0", VA = "0xA1EDC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB74C", Offset = "0x3AB74C")]
		set
		{
		}
	}

	[Token(Token = "0x170001C7")]
	public string _overlayKey
	{
		[Token(Token = "0x600113E")]
		[Address(RVA = "0xA1EDC8", Offset = "0xA1EDC8", VA = "0xA1EDC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB75C", Offset = "0x3AB75C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600113F")]
		[Address(RVA = "0xA1EDD0", Offset = "0xA1EDD0", VA = "0xA1EDD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB76C", Offset = "0x3AB76C")]
		set
		{
		}
	}

	[Token(Token = "0x170001C8")]
	public float _scale
	{
		[Token(Token = "0x6001140")]
		[Address(RVA = "0xA1EDD8", Offset = "0xA1EDD8", VA = "0xA1EDD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB77C", Offset = "0x3AB77C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001141")]
		[Address(RVA = "0xA1EDE0", Offset = "0xA1EDE0", VA = "0xA1EDE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB78C", Offset = "0x3AB78C")]
		set
		{
		}
	}

	[Token(Token = "0x170001C9")]
	public float _additionalHeight
	{
		[Token(Token = "0x6001142")]
		[Address(RVA = "0xA1EDE8", Offset = "0xA1EDE8", VA = "0xA1EDE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB79C", Offset = "0x3AB79C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001143")]
		[Address(RVA = "0xA1EDF0", Offset = "0xA1EDF0", VA = "0xA1EDF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB7AC", Offset = "0x3AB7AC")]
		set
		{
		}
	}

	[Token(Token = "0x170001CA")]
	public float _distanceFromCamera
	{
		[Token(Token = "0x6001144")]
		[Address(RVA = "0xA1EDF8", Offset = "0xA1EDF8", VA = "0xA1EDF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB7BC", Offset = "0x3AB7BC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001145")]
		[Address(RVA = "0xA1EE00", Offset = "0xA1EE00", VA = "0xA1EE00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB7CC", Offset = "0x3AB7CC")]
		set
		{
		}
	}

	[Token(Token = "0x170001CB")]
	public bool _attachCamera
	{
		[Token(Token = "0x6001146")]
		[Address(RVA = "0xA1EE08", Offset = "0xA1EE08", VA = "0xA1EE08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB7DC", Offset = "0x3AB7DC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001147")]
		[Address(RVA = "0xA1EE10", Offset = "0xA1EE10", VA = "0xA1EE10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB7EC", Offset = "0x3AB7EC")]
		set
		{
		}
	}

	[Token(Token = "0x170001CC")]
	public string _windowHandle
	{
		[Token(Token = "0x6001148")]
		[Address(RVA = "0xA1EE18", Offset = "0xA1EE18", VA = "0xA1EE18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB7FC", Offset = "0x3AB7FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001149")]
		[Address(RVA = "0xA1EE20", Offset = "0xA1EE20", VA = "0xA1EE20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB80C", Offset = "0x3AB80C")]
		protected set
		{
		}
	}

	[Token(Token = "0x170001CD")]
	public string _overlayBGImageFile
	{
		[Token(Token = "0x600114A")]
		[Address(RVA = "0xA1EE28", Offset = "0xA1EE28", VA = "0xA1EE28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB81C", Offset = "0x3AB81C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600114B")]
		[Address(RVA = "0xA1EE30", Offset = "0xA1EE30", VA = "0xA1EE30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB82C", Offset = "0x3AB82C")]
		protected set
		{
		}
	}

	[Token(Token = "0x600114C")]
	[Address(RVA = "0xA1EE38", Offset = "0xA1EE38", VA = "0xA1EE38")]
	private void Awake()
	{
	}

	[Token(Token = "0x600114D")]
	[Address(RVA = "0xA1EEAC", Offset = "0xA1EEAC", VA = "0xA1EEAC")]
	private void Start()
	{
	}

	[Token(Token = "0x600114E")]
	[Address(RVA = "0xA1EEB0", Offset = "0xA1EEB0", VA = "0xA1EEB0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600114F")]
	[Address(RVA = "0xA1EEB4", Offset = "0xA1EEB4", VA = "0xA1EEB4", Slot = "4")]
	public virtual void GetControllerButtonPressByTriggerNMenu(ref bool[] isPressedTrigger, ref bool[] isPressedMenu)
	{
	}

	[Token(Token = "0x6001150")]
	[Address(RVA = "0xA1EEB8", Offset = "0xA1EEB8", VA = "0xA1EEB8", Slot = "5")]
	public virtual void RequestShowOverlay()
	{
	}

	[Token(Token = "0x6001151")]
	[Address(RVA = "0xA1EEBC", Offset = "0xA1EEBC", VA = "0xA1EEBC", Slot = "6")]
	public virtual bool FindOverlay()
	{
		return default(bool);
	}

	[Token(Token = "0x6001152")]
	[Address(RVA = "0xA1EEC4", Offset = "0xA1EEC4", VA = "0xA1EEC4", Slot = "7")]
	public virtual string GetOverlayError()
	{
		return null;
	}

	[Token(Token = "0x6001153")]
	[Address(RVA = "0xA1EF14", Offset = "0xA1EF14", VA = "0xA1EF14", Slot = "8")]
	public virtual void ClearOverlay()
	{
	}

	[Token(Token = "0x6001154")]
	[Address(RVA = "0xA1EF18", Offset = "0xA1EF18", VA = "0xA1EF18", Slot = "9")]
	public virtual void ProcessOverlayBeforeShow()
	{
	}

	[Token(Token = "0x6001155")]
	[Address(RVA = "0xA1EF1C", Offset = "0xA1EF1C", VA = "0xA1EF1C", Slot = "10")]
	public virtual void MakeHMDMatrix()
	{
	}

	[Token(Token = "0x6001156")]
	[Address(RVA = "0xA1EF20", Offset = "0xA1EF20", VA = "0xA1EF20", Slot = "11")]
	public virtual void SetupOverlay()
	{
	}

	[Token(Token = "0x6001157")]
	[Address(RVA = "0xA1EF24", Offset = "0xA1EF24", VA = "0xA1EF24", Slot = "12")]
	public virtual bool UpdateOverlay()
	{
		return default(bool);
	}

	[Token(Token = "0x6001158")]
	[Address(RVA = "0xA1EF2C", Offset = "0xA1EF2C", VA = "0xA1EF2C")]
	public VROverlayBase()
	{
	}
}
[Token(Token = "0x20001EA")]
public class VROverlayClient : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200071B")]
	public delegate void OnOverlayDelegate();

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A0E58", Offset = "0x3A0E58")]
	private DeviceClient <_deviceClient>k__BackingField;

	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private VROverlayBase _overlayBase;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Transform _cameraTransform;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float _elapsedTimeWhilePressedTrigger;

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float _elapsedTimeWhilePressedMenu;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float _HotkeyInvokeTime;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool _blockHotkey;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	private bool _isShowOverlay;

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _overlayKey;

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _scale;

	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _additionalHeight;

	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float _distanceFromCamera;

	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool _attachCamera;

	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool _requestShowOverlay;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Transform _blurCameraTransform;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Camera _blurCamera;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private VRBlurOptimized _vrBlur;

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A0E68", Offset = "0x3A0E68")]
	private string <_appName>k__BackingField;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A0E78", Offset = "0x3A0E78")]
	private string <_appFolderName>k__BackingField;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public OnOverlayDelegate OnOverlayBeforeShowCallBack;

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public OnOverlayDelegate OnOverlayAfterHideCallBack;

	[Token(Token = "0x170001CE")]
	public DeviceClient _deviceClient
	{
		[Token(Token = "0x6001159")]
		[Address(RVA = "0xA1EF34", Offset = "0xA1EF34", VA = "0xA1EF34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB83C", Offset = "0x3AB83C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600115A")]
		[Address(RVA = "0xA1EF3C", Offset = "0xA1EF3C", VA = "0xA1EF3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB84C", Offset = "0x3AB84C")]
		set
		{
		}
	}

	[Token(Token = "0x170001CF")]
	public string _appName
	{
		[Token(Token = "0x600115B")]
		[Address(RVA = "0xA1EF44", Offset = "0xA1EF44", VA = "0xA1EF44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB85C", Offset = "0x3AB85C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600115C")]
		[Address(RVA = "0xA1EF4C", Offset = "0xA1EF4C", VA = "0xA1EF4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB86C", Offset = "0x3AB86C")]
		set
		{
		}
	}

	[Token(Token = "0x170001D0")]
	public string _appFolderName
	{
		[Token(Token = "0x600115D")]
		[Address(RVA = "0xA1EF54", Offset = "0xA1EF54", VA = "0xA1EF54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB87C", Offset = "0x3AB87C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600115E")]
		[Address(RVA = "0xA1EF5C", Offset = "0xA1EF5C", VA = "0xA1EF5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB88C", Offset = "0x3AB88C")]
		set
		{
		}
	}

	[Token(Token = "0x600115F")]
	[Address(RVA = "0xA1EF64", Offset = "0xA1EF64", VA = "0xA1EF64")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001160")]
	[Address(RVA = "0xA1F03C", Offset = "0xA1F03C", VA = "0xA1F03C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001161")]
	[Address(RVA = "0xA1F230", Offset = "0xA1F230", VA = "0xA1F230")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001162")]
	[Address(RVA = "0xA1F234", Offset = "0xA1F234", VA = "0xA1F234")]
	private void Update()
	{
	}

	[Token(Token = "0x6001163")]
	[Address(RVA = "0xA1F050", Offset = "0xA1F050", VA = "0xA1F050")]
	public void CreateVROverlayByDevice()
	{
	}

	[Token(Token = "0x6001164")]
	[Address(RVA = "0xA1F4E8", Offset = "0xA1F4E8", VA = "0xA1F4E8")]
	private void DetectCamera()
	{
	}

	[Token(Token = "0x6001165")]
	[Address(RVA = "0xA1F5B0", Offset = "0xA1F5B0", VA = "0xA1F5B0")]
	public void SetCameraTransform(Transform cameraTransform)
	{
	}

	[Token(Token = "0x6001166")]
	[Address(RVA = "0xA1F250", Offset = "0xA1F250", VA = "0xA1F250")]
	private void UpdateInputHotkey()
	{
	}

	[Token(Token = "0x6001167")]
	[Address(RVA = "0xA1F6E0", Offset = "0xA1F6E0", VA = "0xA1F6E0")]
	private void RequestShowHideOverlay(bool isShow)
	{
	}

	[Token(Token = "0x6001168")]
	[Address(RVA = "0xA1F7FC", Offset = "0xA1F7FC", VA = "0xA1F7FC")]
	public void OnProcess_SC_Ack_ShowHideOverlay(DevicePacketDataOverlay receivePacketOverlay)
	{
	}

	[Token(Token = "0x6001169")]
	[Address(RVA = "0xA1FB18", Offset = "0xA1FB18", VA = "0xA1FB18")]
	private void ShowHideOverlay(bool isShow)
	{
	}

	[Token(Token = "0x600116A")]
	[Address(RVA = "0xA1F4A4", Offset = "0xA1F4A4", VA = "0xA1F4A4")]
	private void UpdateOverlay()
	{
	}

	[Token(Token = "0x600116B")]
	[Address(RVA = "0xA1FEE4", Offset = "0xA1FEE4", VA = "0xA1FEE4")]
	private void SetBlurCamera()
	{
	}

	[Token(Token = "0x600116C")]
	[Address(RVA = "0xA1FF34", Offset = "0xA1FF34", VA = "0xA1FF34")]
	private void UnsetBlurCamera()
	{
	}

	[Token(Token = "0x600116D")]
	[Address(RVA = "0xA1FF84", Offset = "0xA1FF84", VA = "0xA1FF84")]
	public VROverlayClient()
	{
	}
}
[Token(Token = "0x20001EB")]
public class VROverlayOculus : VROverlayBase
{
	[Token(Token = "0x600116E")]
	[Address(RVA = "0xA1FFFC", Offset = "0xA1FFFC", VA = "0xA1FFFC")]
	public VROverlayOculus()
	{
	}
}
[Token(Token = "0x20001EC")]
public class VROverlayVive : VROverlayBase
{
	[Token(Token = "0x600116F")]
	[Address(RVA = "0xA20004", Offset = "0xA20004", VA = "0xA20004")]
	public VROverlayVive()
	{
	}
}
[Token(Token = "0x20001ED")]
public class VRPostEffectsBase : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool supportHDRTextures;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	protected bool supportDX11;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	protected bool isSupported;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<Material> createdMaterials;

	[Token(Token = "0x6001170")]
	[Address(RVA = "0xA204FC", Offset = "0xA204FC", VA = "0xA204FC")]
	protected Material CheckShaderAndCreateMaterial(Shader s, Material m2Create)
	{
		return null;
	}

	[Token(Token = "0x6001171")]
	[Address(RVA = "0xA209CC", Offset = "0xA209CC", VA = "0xA209CC")]
	protected Material CreateMaterial(Shader s, Material m2Create)
	{
		return null;
	}

	[Token(Token = "0x6001172")]
	[Address(RVA = "0xA20C08", Offset = "0xA20C08", VA = "0xA20C08")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001173")]
	[Address(RVA = "0xA20C14", Offset = "0xA20C14", VA = "0xA20C14")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001174")]
	[Address(RVA = "0xA20C18", Offset = "0xA20C18", VA = "0xA20C18")]
	private void RemoveCreatedMaterials()
	{
	}

	[Token(Token = "0x6001175")]
	[Address(RVA = "0xA20D0C", Offset = "0xA20D0C", VA = "0xA20D0C")]
	protected bool CheckSupport()
	{
		return default(bool);
	}

	[Token(Token = "0x6001176")]
	[Address(RVA = "0xA20E50", Offset = "0xA20E50", VA = "0xA20E50", Slot = "4")]
	public virtual bool CheckResources()
	{
		return default(bool);
	}

	[Token(Token = "0x6001177")]
	[Address(RVA = "0xA20F14", Offset = "0xA20F14", VA = "0xA20F14")]
	protected void Start()
	{
	}

	[Token(Token = "0x6001178")]
	[Address(RVA = "0xA20D14", Offset = "0xA20D14", VA = "0xA20D14")]
	protected bool CheckSupport(bool needDepth)
	{
		return default(bool);
	}

	[Token(Token = "0x6001179")]
	[Address(RVA = "0xA20F24", Offset = "0xA20F24", VA = "0xA20F24")]
	protected bool CheckSupport(bool needDepth, bool needHdr)
	{
		return default(bool);
	}

	[Token(Token = "0x600117A")]
	[Address(RVA = "0xA20F7C", Offset = "0xA20F7C", VA = "0xA20F7C")]
	public bool Dx11Support()
	{
		return default(bool);
	}

	[Token(Token = "0x600117B")]
	[Address(RVA = "0xA20F84", Offset = "0xA20F84", VA = "0xA20F84")]
	protected void ReportAutoDisable()
	{
	}

	[Token(Token = "0x600117C")]
	[Address(RVA = "0xA21044", Offset = "0xA21044", VA = "0xA21044")]
	private bool CheckShader(Shader s)
	{
		return default(bool);
	}

	[Token(Token = "0x600117D")]
	[Address(RVA = "0xA209A8", Offset = "0xA209A8", VA = "0xA209A8")]
	protected void NotSupported()
	{
	}

	[Token(Token = "0x600117E")]
	[Address(RVA = "0xA21300", Offset = "0xA21300", VA = "0xA21300")]
	protected void DrawBorder(RenderTexture dest, Material material)
	{
	}

	[Token(Token = "0x600117F")]
	[Address(RVA = "0xA216D0", Offset = "0xA216D0", VA = "0xA216D0")]
	public VRPostEffectsBase()
	{
	}
}
[Token(Token = "0x20001EE")]
public class locomotiveController : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float speed;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameObject[] lods_right;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private GameObject[] lods_left;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject[] wheels;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3[] rr;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3[] ll;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float deg;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool useLod;

	[Token(Token = "0x6001180")]
	[Address(RVA = "0xEEC818", Offset = "0xEEC818", VA = "0xEEC818")]
	private void Start()
	{
	}

	[Token(Token = "0x6001181")]
	[Address(RVA = "0xEED378", Offset = "0xEED378", VA = "0xEED378")]
	private void Update()
	{
	}

	[Token(Token = "0x6001182")]
	[Address(RVA = "0xEEE0B4", Offset = "0xEEE0B4", VA = "0xEEE0B4")]
	public locomotiveController()
	{
	}
}
[Token(Token = "0x20001EF")]
public class CoolDown : UnityEngine.MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Image overlay;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool isCoolDown;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float coolDownDuration;

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float coolDownInitTime;

	[Token(Token = "0x170001D1")]
	public bool IsCoolDown
	{
		[Token(Token = "0x6001183")]
		[Address(RVA = "0x6894C0", Offset = "0x6894C0", VA = "0x6894C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001184")]
	[Address(RVA = "0x6894C8", Offset = "0x6894C8", VA = "0x6894C8")]
	public void Update()
	{
	}

	[Token(Token = "0x6001185")]
	[Address(RVA = "0x689644", Offset = "0x689644", VA = "0x689644", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001186")]
	[Address(RVA = "0x689654", Offset = "0x689654", VA = "0x689654")]
	public void Cooldown(float coolDown, float globalCoolDown)
	{
	}

	[Token(Token = "0x6001187")]
	[Address(RVA = "0x68975C", Offset = "0x68975C", VA = "0x68975C")]
	private void GlobalCooldown(float coolDown)
	{
	}

	[Token(Token = "0x6001188")]
	[Address(RVA = "0x6897CC", Offset = "0x6897CC", VA = "0x6897CC")]
	public CoolDown()
	{
	}
}
[Token(Token = "0x20001F0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x39A6AC", Offset = "0x39A6AC")]
public class ToggleSlider : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200071C")]
	public class ToggleSliderEvent : UnityEvent
	{
		[Token(Token = "0x60030EF")]
		[Address(RVA = "0x5699B0", Offset = "0x5699B0", VA = "0x5699B0")]
		public ToggleSliderEvent()
		{
		}
	}

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public ToggleSliderEvent onTurnOn;

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ToggleSliderEvent onTurnOff;

	[Token(Token = "0x6001189")]
	[Address(RVA = "0x569890", Offset = "0x569890", VA = "0x569890")]
	private void Start()
	{
	}

	[Token(Token = "0x600118A")]
	[Address(RVA = "0x56996C", Offset = "0x56996C", VA = "0x56996C")]
	private void OnValueChanged(float value)
	{
	}

	[Token(Token = "0x600118B")]
	[Address(RVA = "0x5699A8", Offset = "0x5699A8", VA = "0x5699A8")]
	public ToggleSlider()
	{
	}
}
[Token(Token = "0x20001F1")]
public class MessageBoxExample : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string title;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string message;

	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Sprite icon;

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] options;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private MessageBox messageBox;

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MessageBox verticalMessageBox;

	[Token(Token = "0x600118C")]
	[Address(RVA = "0x6C8874", Offset = "0x6C8874", VA = "0x6C8874")]
	private void Start()
	{
	}

	[Token(Token = "0x600118D")]
	[Address(RVA = "0x6C8928", Offset = "0x6C8928", VA = "0x6C8928")]
	public void Show()
	{
	}

	[Token(Token = "0x600118E")]
	[Address(RVA = "0x6C8988", Offset = "0x6C8988", VA = "0x6C8988")]
	public void ShowWithCallback()
	{
	}

	[Token(Token = "0x600118F")]
	[Address(RVA = "0x6C8A5C", Offset = "0x6C8A5C", VA = "0x6C8A5C")]
	private void OnMessageBoxResult(string result)
	{
	}

	[Token(Token = "0x6001190")]
	[Address(RVA = "0x6C8B8C", Offset = "0x6C8B8C", VA = "0x6C8B8C")]
	public void ShowVerticalMessageBox()
	{
	}

	[Token(Token = "0x6001191")]
	[Address(RVA = "0x6C8BEC", Offset = "0x6C8BEC", VA = "0x6C8BEC")]
	public MessageBoxExample()
	{
	}
}
[Token(Token = "0x20001F2")]
public class MessageContainerExample : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private MessageContainer messageContainer;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MessageOptions[] options;

	[Token(Token = "0x6001192")]
	[Address(RVA = "0x6C8BF4", Offset = "0x6C8BF4", VA = "0x6C8BF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001193")]
	[Address(RVA = "0x6C8C8C", Offset = "0x6C8C8C", VA = "0x6C8C8C")]
	public void AddMessage()
	{
	}

	[Token(Token = "0x6001194")]
	[Address(RVA = "0x6C8D2C", Offset = "0x6C8D2C", VA = "0x6C8D2C")]
	public void AddMessage(InputField input)
	{
	}

	[Token(Token = "0x6001195")]
	[Address(RVA = "0x6C8D74", Offset = "0x6C8D74", VA = "0x6C8D74")]
	public void AddMessage(float index)
	{
	}

	[Token(Token = "0x6001196")]
	[Address(RVA = "0x6C8E50", Offset = "0x6C8E50", VA = "0x6C8E50")]
	public MessageContainerExample()
	{
	}
}
[Token(Token = "0x20001F3")]
public class ViveportDemo : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200071D")]
	private class MyLicenseChecker : Viveport.Api.LicenseChecker
	{
		[Token(Token = "0x60030F0")]
		[Address(RVA = "0x881880", Offset = "0x881880", VA = "0x881880", Slot = "4")]
		public override void OnSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired)
		{
		}

		[Token(Token = "0x60030F1")]
		[Address(RVA = "0x8819F4", Offset = "0x8819F4", VA = "0x8819F4", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x60030F2")]
		[Address(RVA = "0x88060C", Offset = "0x88060C", VA = "0x88060C")]
		public MyLicenseChecker()
		{
		}
	}

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private int nInitValue;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int nResult;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int nWidth;

	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nHeight;

	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nXStart;

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nYStart;

	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private string stringToEdit;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string StatsCount;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private string achivToEdit;

	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string leaderboardToEdit;

	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private string leaderboardUserName;

	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string leaderboardScore;

	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool bInit;

	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	private static bool bIsReady;

	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	private static bool bArcadeIsReady;

	[Token(Token = "0x4000F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
	private static bool bTokenIsReady;

	[Token(Token = "0x4000F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static string APP_ID;

	[Token(Token = "0x4000F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string APP_KEY;

	[Token(Token = "0x6001197")]
	[Address(RVA = "0x87D228", Offset = "0x87D228", VA = "0x87D228")]
	private void Start()
	{
	}

	[Token(Token = "0x6001198")]
	[Address(RVA = "0x87D318", Offset = "0x87D318", VA = "0x87D318")]
	private void Update()
	{
	}

	[Token(Token = "0x6001199")]
	[Address(RVA = "0x87D31C", Offset = "0x87D31C", VA = "0x87D31C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600119A")]
	[Address(RVA = "0x880614", Offset = "0x880614", VA = "0x880614")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x600119B")]
	[Address(RVA = "0x8807A4", Offset = "0x8807A4", VA = "0x8807A4")]
	private static void IsReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x600119C")]
	[Address(RVA = "0x880928", Offset = "0x880928", VA = "0x880928")]
	private static void IsTokenReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x600119D")]
	[Address(RVA = "0x880A9C", Offset = "0x880A9C", VA = "0x880A9C")]
	private static void GetSessionTokenHandler(int nResult, string message)
	{
	}

	[Token(Token = "0x600119E")]
	[Address(RVA = "0x880D68", Offset = "0x880D68", VA = "0x880D68")]
	private static void QueryRunTimeHandler(int nResult, int nMode)
	{
	}

	[Token(Token = "0x600119F")]
	[Address(RVA = "0x880FE0", Offset = "0x880FE0", VA = "0x880FE0")]
	private static void IsArcadeLeaderboardReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x60011A0")]
	[Address(RVA = "0x881164", Offset = "0x881164", VA = "0x881164")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x60011A1")]
	[Address(RVA = "0x8812B8", Offset = "0x8812B8", VA = "0x8812B8")]
	private static void DownloadStatsHandler(int nResult)
	{
	}

	[Token(Token = "0x60011A2")]
	[Address(RVA = "0x8813C4", Offset = "0x8813C4", VA = "0x8813C4")]
	private static void UploadStatsHandler(int nResult)
	{
	}

	[Token(Token = "0x60011A3")]
	[Address(RVA = "0x8814D0", Offset = "0x8814D0", VA = "0x8814D0")]
	private static void DownloadLeaderboardHandler(int nResult)
	{
	}

	[Token(Token = "0x60011A4")]
	[Address(RVA = "0x8815DC", Offset = "0x8815DC", VA = "0x8815DC")]
	private static void UploadLeaderboardScoreHandler(int nResult)
	{
	}

	[Token(Token = "0x60011A5")]
	[Address(RVA = "0x8816E8", Offset = "0x8816E8", VA = "0x8816E8")]
	public ViveportDemo()
	{
	}
}
[Token(Token = "0x20001F4")]
public class ViveportDemo_ArcadeSession : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private int nWidth;

	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int nHeight;

	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int nXStart;

	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nYStart;

	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string VIVEPORT_ARCADE_APP_TEST_ID;

	[Token(Token = "0x60011A7")]
	[Address(RVA = "0x881AD4", Offset = "0x881AD4", VA = "0x881AD4")]
	private void Start()
	{
	}

	[Token(Token = "0x60011A8")]
	[Address(RVA = "0x881BC4", Offset = "0x881BC4", VA = "0x881BC4")]
	private void Update()
	{
	}

	[Token(Token = "0x60011A9")]
	[Address(RVA = "0x881BC8", Offset = "0x881BC8", VA = "0x881BC8")]
	private void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60011AA")]
	[Address(RVA = "0x881CF0", Offset = "0x881CF0", VA = "0x881CF0")]
	public ViveportDemo_ArcadeSession()
	{
	}
}
[Token(Token = "0x20001F5")]
public class ViveportDemo_DLC : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private int nWidth;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int nHeight;

	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int nXStart;

	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nYStart;

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string APP_ID;

	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static bool bInit;

	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
	private static bool bIsReady;

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
	private static bool bIsDLCAvailable;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int dlcCount;

	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static string dlcAppId;

	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int dlcIndex;

	[Token(Token = "0x60011AC")]
	[Address(RVA = "0x881D80", Offset = "0x881D80", VA = "0x881D80")]
	private void Start()
	{
	}

	[Token(Token = "0x60011AD")]
	[Address(RVA = "0x881E70", Offset = "0x881E70", VA = "0x881E70")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60011AE")]
	[Address(RVA = "0x882334", Offset = "0x882334", VA = "0x882334")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60011AF")]
	[Address(RVA = "0x8824B4", Offset = "0x8824B4", VA = "0x8824B4")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x60011B0")]
	[Address(RVA = "0x882604", Offset = "0x882604", VA = "0x882604")]
	private static void IsDLCReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x60011B1")]
	[Address(RVA = "0x882748", Offset = "0x882748", VA = "0x882748")]
	public ViveportDemo_DLC()
	{
	}
}
[Token(Token = "0x20001F6")]
public class ViveportDemo_IAP : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200071E")]
	public class Item
	{
		[Token(Token = "0x40027A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string ticket;

		[Token(Token = "0x40027A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string[] items;

		[Token(Token = "0x40027AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string subscription_ticket;

		[Token(Token = "0x60030F3")]
		[Address(RVA = "0x883928", Offset = "0x883928", VA = "0x883928")]
		public Item()
		{
		}
	}

	[Token(Token = "0x200071F")]
	private class Result : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x40027AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Item mItem;

		[Token(Token = "0x60030F4")]
		[Address(RVA = "0x8839A0", Offset = "0x8839A0", VA = "0x8839A0", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x60030F5")]
		[Address(RVA = "0x883A38", Offset = "0x883A38", VA = "0x883A38", Slot = "5")]
		public override void OnRequestSuccess(string pchPurchaseId)
		{
		}

		[Token(Token = "0x60030F6")]
		[Address(RVA = "0x883B18", Offset = "0x883B18", VA = "0x883B18", Slot = "6")]
		public override void OnPurchaseSuccess(string pchPurchaseId)
		{
		}

		[Token(Token = "0x60030F7")]
		[Address(RVA = "0x883C14", Offset = "0x883C14", VA = "0x883C14", Slot = "7")]
		public override void OnQuerySuccess(Viveport.IAPurchase.QueryResponse response)
		{
		}

		[Token(Token = "0x60030F8")]
		[Address(RVA = "0x883CEC", Offset = "0x883CEC", VA = "0x883CEC", Slot = "8")]
		public override void OnQuerySuccess(Viveport.IAPurchase.QueryListResponse response)
		{
		}

		[Token(Token = "0x60030F9")]
		[Address(RVA = "0x8844C0", Offset = "0x8844C0", VA = "0x8844C0", Slot = "9")]
		public override void OnBalanceSuccess(string pchBalance)
		{
		}

		[Token(Token = "0x60030FA")]
		[Address(RVA = "0x884558", Offset = "0x884558", VA = "0x884558", Slot = "11")]
		public override void OnRequestSubscriptionSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60030FB")]
		[Address(RVA = "0x884638", Offset = "0x884638", VA = "0x884638", Slot = "12")]
		public override void OnRequestSubscriptionWithPlanIDSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60030FC")]
		[Address(RVA = "0x884718", Offset = "0x884718", VA = "0x884718", Slot = "13")]
		public override void OnSubscribeSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60030FD")]
		[Address(RVA = "0x884814", Offset = "0x884814", VA = "0x884814", Slot = "14")]
		public override void OnQuerySubscriptionSuccess(Viveport.IAPurchase.Subscription[] subscriptionlist)
		{
		}

		[Token(Token = "0x60030FE")]
		[Address(RVA = "0x884D84", Offset = "0x884D84", VA = "0x884D84", Slot = "15")]
		public override void OnCancelSubscriptionSuccess(bool bCanceled)
		{
		}

		[Token(Token = "0x60030FF")]
		[Address(RVA = "0x884E30", Offset = "0x884E30", VA = "0x884E30", Slot = "10")]
		public override void OnFailure(int nCode, string pchMessage)
		{
		}

		[Token(Token = "0x6003100")]
		[Address(RVA = "0x882934", Offset = "0x882934", VA = "0x882934")]
		public Result()
		{
		}
	}

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private int nWidth;

	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int nHeight;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int nXStart;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nYStart;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string IAP_APP_TEST_ID;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static string IAP_APP_TEST_KEY;

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Result mListener;

	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool bIsDuplicatedSubscription;

	[Token(Token = "0x60011B3")]
	[Address(RVA = "0x882820", Offset = "0x882820", VA = "0x882820")]
	private void Start()
	{
	}

	[Token(Token = "0x60011B4")]
	[Address(RVA = "0x8829A4", Offset = "0x8829A4", VA = "0x8829A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60011B5")]
	[Address(RVA = "0x8829A8", Offset = "0x8829A8", VA = "0x8829A8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60011B6")]
	[Address(RVA = "0x8837B0", Offset = "0x8837B0", VA = "0x8837B0")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60011B7")]
	[Address(RVA = "0x883870", Offset = "0x883870", VA = "0x883870")]
	public ViveportDemo_IAP()
	{
	}
}
[Token(Token = "0x20001F7")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x39A71C", Offset = "0x39A71C")]
public class SMR_Theme : ScriptableObject
{
	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool supportsVerticalBuilding;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Texture AddIcon;

	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Texture DeleteIcon;

	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture ArrowUpIcon;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Texture CurvedArrowUpIcon;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture CurvedArrowDownIcon;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Texture CurvedArrowLeftIcon;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture CurvedArrowRightIcon;

	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Texture MeshIcon;

	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture LogIcon;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Texture SmallAddIcon;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture SmallDeleteIcon;

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Texture SmallArrowUpIcon;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture SmallCurvedArrowUpIcon;

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Texture SmallCurvedArrowDownIcon;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture SmallCurvedArrowLeftIcon;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Texture SmallCurvedArrowRightIcon;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture SmallMeshIcon;

	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Texture SmallLogIcon;

	[Token(Token = "0x60011B9")]
	[Address(RVA = "0x82007C", Offset = "0x82007C", VA = "0x82007C")]
	public SMR_Theme()
	{
	}
}
[Serializable]
[Token(Token = "0x20001F8")]
public struct CustomWagonComponent
{
	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject prefab;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public string customName;

	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public SpawnPosition[] positions;
}
[Token(Token = "0x20001F9")]
public static class CustomWagonCreator
{
	[Token(Token = "0x60011BA")]
	[Address(RVA = "0x68BFFC", Offset = "0x68BFFC", VA = "0x68BFFC")]
	public static bool Validate(CustomWagonProfile profile, GameObject modelPrefab, string name, out string message)
	{
		return default(bool);
	}

	[Token(Token = "0x60011BB")]
	[Address(RVA = "0x68C160", Offset = "0x68C160", VA = "0x68C160")]
	public static bool Create(CustomWagonProfile profile, GameObject modelPrefab, string name, out string message)
	{
		return default(bool);
	}

	[Token(Token = "0x60011BC")]
	[Address(RVA = "0x68EDF0", Offset = "0x68EDF0", VA = "0x68EDF0")]
	private static GameObject InstantiateChild(GameObject prefab, string name, Vector3 position, Quaternion rotation, Transform parent)
	{
		return null;
	}

	[Token(Token = "0x60011BD")]
	[Address(RVA = "0x68EEF0", Offset = "0x68EEF0", VA = "0x68EEF0")]
	private static GameObject InstantiateChild(string name, Vector3 position, Quaternion rotation, Transform parent)
	{
		return null;
	}

	[Token(Token = "0x60011BE")]
	[Address(RVA = "0x68F048", Offset = "0x68F048", VA = "0x68F048")]
	private static void InstantiateWagonComponents(CustomWagonComponent wagonComponent, Transform parent, Delegate configMethod, params object[] configParams)
	{
	}

	[Token(Token = "0x60011BF")]
	[Address(RVA = "0x68F3A4", Offset = "0x68F3A4", VA = "0x68F3A4")]
	private static void ConfigurePhysicsWheels(Rigidbody parent, IRailroadCar carScript, List<GameObject> wheels)
	{
	}

	[Token(Token = "0x60011C0")]
	[Address(RVA = "0x68F578", Offset = "0x68F578", VA = "0x68F578")]
	private static void ConfigureWheels(IRailroadCar carScript, List<GameObject> wheels)
	{
	}

	[Token(Token = "0x60011C1")]
	[Address(RVA = "0x68FBBC", Offset = "0x68FBBC", VA = "0x68FBBC")]
	private static void ConfigureDefaultJointAnchor(Wagon_v3 wagonScript, List<GameObject> joints)
	{
	}

	[Token(Token = "0x60011C2")]
	[Address(RVA = "0x68FD64", Offset = "0x68FD64", VA = "0x68FD64")]
	private static void ConfigureFrontCoupler(Rigidbody parent, Wagon_v3 wagonScript, HingeJoint parentJoint, List<GameObject> couplers)
	{
	}

	[Token(Token = "0x60011C3")]
	[Address(RVA = "0x68FF90", Offset = "0x68FF90", VA = "0x68FF90")]
	private static void ConfigureBackCoupler(Rigidbody parent, IRailroadCar carScript, List<GameObject> couplers)
	{
	}

	[Token(Token = "0x60011C4")]
	[Address(RVA = "0x68F3CC", Offset = "0x68F3CC", VA = "0x68F3CC")]
	private static void ConnectHingeAnchor(Rigidbody connectedBody, List<GameObject> toConnect)
	{
	}

	[Token(Token = "0x60011C5")]
	[Address(RVA = "0x6901E8", Offset = "0x6901E8", VA = "0x6901E8")]
	private static void ConfigureWheelSFX(IRailroadCar carScript, List<GameObject> sfxs)
	{
	}

	[Token(Token = "0x60011C6")]
	[Address(RVA = "0x690430", Offset = "0x690430", VA = "0x690430")]
	private static void ConfigureConnectionSFX(Wagon_v3 carScript, List<GameObject> sfxs)
	{
	}

	[Token(Token = "0x60011C7")]
	[Address(RVA = "0x6905D8", Offset = "0x6905D8", VA = "0x6905D8")]
	private static void ConfigureHornSFX(TrainController_v3 carScript, List<GameObject> sfxs)
	{
	}

	[Token(Token = "0x60011C8")]
	[Address(RVA = "0x690780", Offset = "0x690780", VA = "0x690780")]
	private static void ConfigureBellSFX(TrainController_v3 carScript, List<GameObject> sfxs)
	{
	}

	[Token(Token = "0x60011C9")]
	[Address(RVA = "0x690928", Offset = "0x690928", VA = "0x690928")]
	private static void ConfigureEngineSFX(TrainController_v3 carScript, List<GameObject> sfxs)
	{
	}

	[Token(Token = "0x60011CA")]
	[Address(RVA = "0x690AD0", Offset = "0x690AD0", VA = "0x690AD0")]
	private static void ConfigureBrakesSFX(TrainController_v3 carScript, List<GameObject> sfxs)
	{
	}

	[Token(Token = "0x60011CB")]
	[Address(RVA = "0x690C78", Offset = "0x690C78", VA = "0x690C78")]
	private static void ConfigureSensors(IRailroadCar carScript, List<GameObject> sensors)
	{
	}

	[Token(Token = "0x60011CC")]
	[Address(RVA = "0x690E94", Offset = "0x690E94", VA = "0x690E94")]
	private static void ConfigureExternalLights(IRailroadCar carScript, List<GameObject> lights)
	{
	}

	[Token(Token = "0x60011CD")]
	[Address(RVA = "0x6911EC", Offset = "0x6911EC", VA = "0x6911EC")]
	private static void ConfigureInternalLights(IRailroadCar carScript, List<GameObject> lights)
	{
	}

	[Token(Token = "0x60011CE")]
	[Address(RVA = "0x6915E0", Offset = "0x6915E0", VA = "0x6915E0")]
	private static void ConfigureLeftCabinDoor(TrainDoorsController doorController, List<GameObject> doors)
	{
	}

	[Token(Token = "0x60011CF")]
	[Address(RVA = "0x691788", Offset = "0x691788", VA = "0x691788")]
	private static void ConfigureRightCabinDoor(TrainDoorsController doorController, List<GameObject> doors)
	{
	}

	[Token(Token = "0x60011D0")]
	[Address(RVA = "0x691930", Offset = "0x691930", VA = "0x691930")]
	private static void ConfigureLeftPassengerDoors(TrainDoorsController doorController, List<GameObject> doors)
	{
	}

	[Token(Token = "0x60011D1")]
	[Address(RVA = "0x691B44", Offset = "0x691B44", VA = "0x691B44")]
	private static void ConfigureRightPassengerDoors(TrainDoorsController doorController, List<GameObject> doors)
	{
	}

	[Token(Token = "0x60011D2")]
	[Address(RVA = "0x691D58", Offset = "0x691D58", VA = "0x691D58")]
	private static void ConfigureOpenDoorSFX(TrainDoorsController doorController, List<GameObject> sfxs)
	{
	}

	[Token(Token = "0x60011D3")]
	[Address(RVA = "0x691F00", Offset = "0x691F00", VA = "0x691F00")]
	private static void ConfigureCloseDoorSFX(TrainDoorsController doorController, List<GameObject> sfxs)
	{
	}
}
[Token(Token = "0x20001FA")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x39A770", Offset = "0x39A770")]
public class CustomWagonProfile : ScriptableObject
{
	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public WagonType type;

	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SpeedUnits speedUnits;

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public TrainInputSettings inputSettings;

	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 modelOffset;

	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 controlZoneTriggerPosition;

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CustomWagonComponent wheelsPhysics;

	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public CustomWagonComponent wheelsVisuals;

	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CustomWagonComponent frontCoupler;

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public CustomWagonComponent backCoupler;

	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public CustomWagonComponent defaultJointAnchor;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public CustomWagonComponent bumper;

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public CustomWagonComponent externalLights;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public CustomWagonComponent internalLights;

	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public CustomWagonComponent railSensor;

	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public CustomWagonComponent passengerSensor;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public CustomWagonComponent suspensionCollider;

	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public CustomWagonComponent colliders;

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public CustomWagonComponent cabinDoorLeft;

	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public CustomWagonComponent cabinDoorRight;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public CustomWagonComponent passengerDoorLeft;

	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public CustomWagonComponent passengerDoorRight;

	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public CustomWagonComponent wheelsSFX;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public CustomWagonComponent wagonConnectionSFX;

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public CustomWagonComponent engineSFX;

	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public CustomWagonComponent brakesSFX;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public CustomWagonComponent hornSFX;

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public CustomWagonComponent bellSFX;

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public CustomWagonComponent openDoorSFX;

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public CustomWagonComponent closeDoorSFX;

	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public CustomWagonComponent internalDetails;

	[Token(Token = "0x60011D4")]
	[Address(RVA = "0x7E85C4", Offset = "0x7E85C4", VA = "0x7E85C4")]
	public CustomWagonProfile()
	{
	}
}
[Token(Token = "0x20001FB")]
public interface IRailroadCar
{
	[Token(Token = "0x170001D2")]
	Rigidbody BackJoint
	{
		[Token(Token = "0x60011D5")]
		get;
		[Token(Token = "0x60011D6")]
		set;
	}

	[Token(Token = "0x170001D3")]
	List<TrainWheel_v3> Wheels
	{
		[Token(Token = "0x60011D7")]
		get;
		[Token(Token = "0x60011D8")]
		set;
	}

	[Token(Token = "0x170001D4")]
	AudioSource WheelsSFX
	{
		[Token(Token = "0x60011D9")]
		get;
		[Token(Token = "0x60011DA")]
		set;
	}

	[Token(Token = "0x170001D5")]
	Sensors Sensors
	{
		[Token(Token = "0x60011DB")]
		get;
		[Token(Token = "0x60011DC")]
		set;
	}

	[Token(Token = "0x170001D6")]
	List<Light> ExternalLights
	{
		[Token(Token = "0x60011DD")]
		get;
		[Token(Token = "0x60011DE")]
		set;
	}

	[Token(Token = "0x170001D7")]
	List<Light> InternalLights
	{
		[Token(Token = "0x60011DF")]
		get;
		[Token(Token = "0x60011E0")]
		set;
	}
}
[Token(Token = "0x20001FC")]
public interface ITrainDoorsController
{
	[Token(Token = "0x170001D8")]
	StationDoorDirection StationDoorDirection
	{
		[Token(Token = "0x60011E1")]
		get;
		[Token(Token = "0x60011E2")]
		set;
	}

	[Token(Token = "0x170001D9")]
	bool CabinLeftDoorOpen
	{
		[Token(Token = "0x60011E3")]
		get;
	}

	[Token(Token = "0x170001DA")]
	bool CabinRightDoorOpen
	{
		[Token(Token = "0x60011E4")]
		get;
	}

	[Token(Token = "0x170001DB")]
	bool PassengerLeftDoorOpen
	{
		[Token(Token = "0x60011E5")]
		get;
	}

	[Token(Token = "0x170001DC")]
	bool PassengerRightDoorOpen
	{
		[Token(Token = "0x60011E6")]
		get;
	}

	[Token(Token = "0x60011E7")]
	void OpenCabinDoorLeft();

	[Token(Token = "0x60011E8")]
	void OpenCabinDoorRight();

	[Token(Token = "0x60011E9")]
	void CloseCabinDoorLeft();

	[Token(Token = "0x60011EA")]
	void CloseCabinDoorRight();

	[Token(Token = "0x60011EB")]
	void OpenPassengersDoors();

	[Token(Token = "0x60011EC")]
	void OpenPassengersDoors(StationDoorDirection doorsDiretion);

	[Token(Token = "0x60011ED")]
	void ClosePassengersDoors();

	[Token(Token = "0x60011EE")]
	void ClosePassengersLeftDoors();

	[Token(Token = "0x60011EF")]
	void ClosePassengersRightDoors();

	[Token(Token = "0x60011F0")]
	void UpdateWagonsDoorsControllers();
}
[Serializable]
[Token(Token = "0x20001FD")]
public struct SpawnPosition
{
	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 rotation;
}
[Token(Token = "0x20001FE")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x39A7C4", Offset = "0x39A7C4")]
public class TrainInputSettings : ScriptableObject
{
	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public KeyCode toggleEngine;

	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public KeyCode forward;

	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public KeyCode reverse;

	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KeyCode increaseSpeed;

	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public KeyCode decreaseSpeed;

	[Token(Token = "0x4000F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speedIncreaseAmount;

	[Token(Token = "0x4000F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public KeyCode brakes;

	[Token(Token = "0x4000F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public KeyCode lights;

	[Token(Token = "0x4000F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public KeyCode internalLights;

	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public KeyCode honk;

	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public KeyCode bell;

	[Token(Token = "0x4000F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public KeyCode cabinLeftDoor;

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public KeyCode cabinRightDoor;

	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public KeyCode passengerLeftDoor;

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public KeyCode passengerRightDoor;

	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public KeyCode[] customEventTriggers;

	[Token(Token = "0x60011F1")]
	[Address(RVA = "0x56DF88", Offset = "0x56DF88", VA = "0x56DF88")]
	public TrainInputSettings()
	{
	}
}
[Token(Token = "0x20001FF")]
public class AndroidHapticPlayer : IHapticPlayer, IDisposable
{
	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private AndroidJavaObject hapticPlayer;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private readonly JSONParameters DEFAULT_PARAM;

	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly List<string> _activeKeys;

	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private readonly List<PositionType> _activePosition;

	[Token(Token = "0x1400002B")]
	public event Action<PlayerResponse> StatusReceived
	{
		[Token(Token = "0x600120C")]
		[Address(RVA = "0x6E7E88", Offset = "0x6E7E88", VA = "0x6E7E88", Slot = "16")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB89C", Offset = "0x3AB89C")]
		add
		{
		}
		[Token(Token = "0x600120D")]
		[Address(RVA = "0x6E7F38", Offset = "0x6E7F38", VA = "0x6E7F38", Slot = "17")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB8AC", Offset = "0x3AB8AC")]
		remove
		{
		}
	}

	[Token(Token = "0x60011F2")]
	[Address(RVA = "0x6E6080", Offset = "0x6E6080", VA = "0x6E6080", Slot = "18")]
	public void Dispose()
	{
	}

	[Token(Token = "0x60011F3")]
	[Address(RVA = "0x6E61E0", Offset = "0x6E61E0", VA = "0x6E61E0", Slot = "4")]
	public void Enable()
	{
	}

	[Token(Token = "0x60011F4")]
	[Address(RVA = "0x6E64D4", Offset = "0x6E64D4", VA = "0x6E64D4")]
	public void StopScan()
	{
	}

	[Token(Token = "0x60011F5")]
	[Address(RVA = "0x6E65EC", Offset = "0x6E65EC", VA = "0x6E65EC")]
	public void StartScan()
	{
	}

	[Token(Token = "0x60011F6")]
	[Address(RVA = "0x6E6704", Offset = "0x6E6704", VA = "0x6E6704", Slot = "5")]
	public void Disable()
	{
	}

	[Token(Token = "0x60011F7")]
	[Address(RVA = "0x6E6864", Offset = "0x6E6864", VA = "0x6E6864", Slot = "6")]
	public bool IsActive(PositionType type)
	{
		return default(bool);
	}

	[Token(Token = "0x60011F8")]
	[Address(RVA = "0x6E696C", Offset = "0x6E696C", VA = "0x6E696C", Slot = "7")]
	public bool IsPlaying(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x60011F9")]
	[Address(RVA = "0x6E6A74", Offset = "0x6E6A74", VA = "0x6E6A74", Slot = "19")]
	public bool IsPlaying()
	{
		return default(bool);
	}

	[Token(Token = "0x60011FA")]
	[Address(RVA = "0x6E6AD8", Offset = "0x6E6AD8", VA = "0x6E6AD8")]
	public void Register(string key, string path)
	{
	}

	[Token(Token = "0x60011FB")]
	[Address(RVA = "0x6E6B50", Offset = "0x6E6B50", VA = "0x6E6B50", Slot = "8")]
	public void Register(string key, Project project)
	{
	}

	[Token(Token = "0x60011FC")]
	[Address(RVA = "0x6E6D38", Offset = "0x6E6D38", VA = "0x6E6D38", Slot = "9")]
	public void Submit(string key, PositionType position, byte[] motorBytes, int durationMillis)
	{
	}

	[Token(Token = "0x60011FD")]
	[Address(RVA = "0x6E6E88", Offset = "0x6E6E88", VA = "0x6E6E88", Slot = "20")]
	public void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis)
	{
	}

	[Token(Token = "0x60011FE")]
	[Address(RVA = "0x6E703C", Offset = "0x6E703C", VA = "0x6E703C", Slot = "21")]
	public void Submit(string key, PositionType position, DotPoint point, int durationMillis)
	{
	}

	[Token(Token = "0x60011FF")]
	[Address(RVA = "0x6E7108", Offset = "0x6E7108", VA = "0x6E7108", Slot = "10")]
	public void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis)
	{
	}

	[Token(Token = "0x6001200")]
	[Address(RVA = "0x6E7208", Offset = "0x6E7208", VA = "0x6E7208", Slot = "22")]
	public void Submit(string key, PositionType position, PathPoint point, int durationMillis)
	{
	}

	[Token(Token = "0x6001201")]
	[Address(RVA = "0x6E6F80", Offset = "0x6E6F80", VA = "0x6E6F80")]
	private void Submit(string key, Frame req)
	{
	}

	[Token(Token = "0x6001202")]
	[Address(RVA = "0x6E72D4", Offset = "0x6E72D4", VA = "0x6E72D4")]
	private void SubmitRequest(SubmitRequest submitRequest)
	{
	}

	[Token(Token = "0x6001203")]
	[Address(RVA = "0x6E7488", Offset = "0x6E7488", VA = "0x6E7488", Slot = "23")]
	public void SubmitRegistered(string key, ScaleOption option)
	{
	}

	[Token(Token = "0x6001204")]
	[Address(RVA = "0x6E75A0", Offset = "0x6E75A0", VA = "0x6E75A0", Slot = "11")]
	public void SubmitRegistered(string key, string altKey, ScaleOption option)
	{
	}

	[Token(Token = "0x6001205")]
	[Address(RVA = "0x6E771C", Offset = "0x6E771C", VA = "0x6E771C", Slot = "24")]
	public void SubmitRegisteredVestRotation(string key, RotationOption option)
	{
	}

	[Token(Token = "0x6001206")]
	[Address(RVA = "0x6E7834", Offset = "0x6E7834", VA = "0x6E7834", Slot = "25")]
	public void SubmitRegisteredVestRotation(string key, string altKey, RotationOption option)
	{
	}

	[Token(Token = "0x6001207")]
	[Address(RVA = "0x6E79B0", Offset = "0x6E79B0", VA = "0x6E79B0", Slot = "12")]
	public void SubmitRegisteredVestRotation(string key, string altKey, RotationOption rOption, ScaleOption sOption)
	{
	}

	[Token(Token = "0x6001208")]
	[Address(RVA = "0x6E7B5C", Offset = "0x6E7B5C", VA = "0x6E7B5C", Slot = "13")]
	public void SubmitRegistered(string key)
	{
	}

	[Token(Token = "0x6001209")]
	[Address(RVA = "0x6E7C04", Offset = "0x6E7C04", VA = "0x6E7C04", Slot = "26")]
	public void SubmitRegistered(string key, float ratio)
	{
	}

	[Token(Token = "0x600120A")]
	[Address(RVA = "0x6E7D50", Offset = "0x6E7D50", VA = "0x6E7D50", Slot = "14")]
	public void TurnOff(string key)
	{
	}

	[Token(Token = "0x600120B")]
	[Address(RVA = "0x6E7DF8", Offset = "0x6E7DF8", VA = "0x6E7DF8", Slot = "15")]
	public void TurnOff()
	{
	}

	[Token(Token = "0x600120E")]
	[Address(RVA = "0x6E7FE8", Offset = "0x6E7FE8", VA = "0x6E7FE8")]
	public void Receive(PlayerResponse response)
	{
	}

	[Token(Token = "0x600120F")]
	[Address(RVA = "0x6E8304", Offset = "0x6E8304", VA = "0x6E8304")]
	public AndroidHapticPlayer()
	{
	}
}
namespace Bhaptics.Tact.Unity
{
	[Token(Token = "0x2000200")]
	public class Example : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public TactSource[] Sources;

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x6F5508", Offset = "0x6F5508", VA = "0x6F5508")]
		private void Update()
		{
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0x6F55A0", Offset = "0x6F55A0", VA = "0x6F55A0")]
		public Example()
		{
		}
	}
	[Token(Token = "0x2000201")]
	public class ExamplePrev : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x6001212")]
		[Address(RVA = "0x6F55A8", Offset = "0x6F55A8", VA = "0x6F55A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x6F56BC", Offset = "0x6F56BC", VA = "0x6F56BC")]
		public ExamplePrev()
		{
		}
	}
	[Token(Token = "0x2000202")]
	public class LongTest : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x6001214")]
		[Address(RVA = "0x6F56CC", Offset = "0x6F56CC", VA = "0x6F56CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0x6F5768", Offset = "0x6F5768", VA = "0x6F5768")]
		private void TriggerPlay()
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x6F5824", Offset = "0x6F5824", VA = "0x6F5824")]
		private void ReloadScene()
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x6F5868", Offset = "0x6F5868", VA = "0x6F5868")]
		public LongTest()
		{
		}
	}
	[Token(Token = "0x2000203")]
	public class Shooter : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float speedH;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float speedV;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float yaw;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float pitch;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float speed;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LineRenderer laserLineRenderer;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float laserWidth;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float laserMaxLength;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool isEnableControl;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A0E98", Offset = "0x3A0E98")]
		public bool IsRaycastingShooting;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A0ECC", Offset = "0x3A0ECC")]
		public GameObject rayShootEffectPrefab;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public TactSender TactSenderForRayCast;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A0F00", Offset = "0x3A0F00")]
		[SerializeField]
		private GameObject bulletPrefab;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Transform bulletPoint;

		[Token(Token = "0x6001218")]
		[Address(RVA = "0x6F58A0", Offset = "0x6F58A0", VA = "0x6F58A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0x6F5A38", Offset = "0x6F5A38", VA = "0x6F5A38")]
		private void Update()
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0x6F5AB8", Offset = "0x6F5AB8", VA = "0x6F5AB8")]
		private void PlayerController()
		{
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0x6F5FF0", Offset = "0x6F5FF0", VA = "0x6F5FF0")]
		private void RenderLazer(Vector3 targetPosition, Vector3 direction, float length)
		{
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0x6F61E0", Offset = "0x6F61E0", VA = "0x6F61E0")]
		private void Shoot()
		{
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0x6F67BC", Offset = "0x6F67BC", VA = "0x6F67BC")]
		public Shooter()
		{
		}
	}
	[Token(Token = "0x2000204")]
	public class BhapticsManager : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000720")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BF04", Offset = "0x39BF04")]
		private sealed class <>c
		{
			[Token(Token = "0x40027AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40027AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static Action<bool> <>9__10_0;

			[Token(Token = "0x6003102")]
			[Address(RVA = "0x6F4B14", Offset = "0x6F4B14", VA = "0x6F4B14")]
			public <>c()
			{
			}

			[Token(Token = "0x6003103")]
			[Address(RVA = "0x6F4B1C", Offset = "0x6F4B1C", VA = "0x6F4B1C")]
			internal void <get_HapticPlayer>b__10_0(bool connected)
			{
			}
		}

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static BhapticsManager _manager;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private VisualFeedback[] visualFeedbacks;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A0F58", Offset = "0x3A0F58")]
		[SerializeField]
		public bool visualizeFeedbacks;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool launchPlayerIfNotRunning;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private readonly List<HapticFeedback> _changedFeedbacks;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static IHapticPlayer _hapticPlayer;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool _isTryLaunchApp;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isInBackgroundForAndroid;

		[Token(Token = "0x170001DD")]
		public static IHapticPlayer HapticPlayer
		{
			[Token(Token = "0x600121F")]
			[Address(RVA = "0x6F335C", Offset = "0x6F335C", VA = "0x6F335C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0x6F3188", Offset = "0x6F3188", VA = "0x6F3188")]
		public static string GetFeedbackId(string key)
		{
			return null;
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0x6F351C", Offset = "0x6F351C", VA = "0x6F351C")]
		private void AndroidStopScan()
		{
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0x6F35E8", Offset = "0x6F35E8", VA = "0x6F35E8")]
		private void AndroidStartScan()
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0x6F36B4", Offset = "0x6F36B4", VA = "0x6F36B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0x6F379C", Offset = "0x6F379C", VA = "0x6F379C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x6F3D0C", Offset = "0x6F3D0C", VA = "0x6F3D0C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0x6F3F58", Offset = "0x6F3F58", VA = "0x6F3F58")]
		public void Received(string message)
		{
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0x6F4198", Offset = "0x6F4198", VA = "0x6F4198")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0x6F428C", Offset = "0x6F428C", VA = "0x6F428C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0x6F45D8", Offset = "0x6F45D8", VA = "0x6F45D8")]
		private void OnApplicationPause(bool pauseState)
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0x6F396C", Offset = "0x6F396C", VA = "0x6F396C")]
		private void InitVisualFeedback()
		{
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0x6F3A88", Offset = "0x6F3A88", VA = "0x6F3A88")]
		private void LoadFeedbackFile()
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0x6F470C", Offset = "0x6F470C", VA = "0x6F470C")]
		private void OnStatusChanged(PlayerResponse playerResponse)
		{
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0x6F4A1C", Offset = "0x6F4A1C", VA = "0x6F4A1C")]
		public BhapticsManager()
		{
		}
	}
	[Token(Token = "0x2000205")]
	public class DumbPlayer : IHapticPlayer, IDisposable
	{
		[Token(Token = "0x1400002C")]
		public event Action<PlayerResponse> StatusReceived
		{
			[Token(Token = "0x6001243")]
			[Address(RVA = "0x6F53A8", Offset = "0x6F53A8", VA = "0x6F53A8", Slot = "16")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB8BC", Offset = "0x3AB8BC")]
			add
			{
			}
			[Token(Token = "0x6001244")]
			[Address(RVA = "0x6F5458", Offset = "0x6F5458", VA = "0x6F5458", Slot = "17")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB8CC", Offset = "0x3AB8CC")]
			remove
			{
			}
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0x6F5344", Offset = "0x6F5344", VA = "0x6F5344", Slot = "18")]
		public void Dispose()
		{
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0x6F5348", Offset = "0x6F5348", VA = "0x6F5348", Slot = "4")]
		public void Enable()
		{
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0x6F534C", Offset = "0x6F534C", VA = "0x6F534C", Slot = "5")]
		public void Disable()
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0x6F5350", Offset = "0x6F5350", VA = "0x6F5350", Slot = "6")]
		public bool IsActive(PositionType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0x6F5358", Offset = "0x6F5358", VA = "0x6F5358", Slot = "7")]
		public bool IsPlaying(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0x6F5360", Offset = "0x6F5360", VA = "0x6F5360", Slot = "19")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0x6F5368", Offset = "0x6F5368", VA = "0x6F5368")]
		public void Register(string key, string path)
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0x6F536C", Offset = "0x6F536C", VA = "0x6F536C", Slot = "9")]
		public void Submit(string key, PositionType position, byte[] motorBytes, int durationMillis)
		{
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0x6F5370", Offset = "0x6F5370", VA = "0x6F5370", Slot = "20")]
		public void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0x6F5374", Offset = "0x6F5374", VA = "0x6F5374", Slot = "21")]
		public void Submit(string key, PositionType position, DotPoint point, int durationMillis)
		{
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0x6F5378", Offset = "0x6F5378", VA = "0x6F5378", Slot = "10")]
		public void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0x6F537C", Offset = "0x6F537C", VA = "0x6F537C", Slot = "22")]
		public void Submit(string key, PositionType position, PathPoint point, int durationMillis)
		{
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0x6F5380", Offset = "0x6F5380", VA = "0x6F5380", Slot = "11")]
		public void SubmitRegistered(string key, string altKey, ScaleOption option)
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0x6F5384", Offset = "0x6F5384", VA = "0x6F5384", Slot = "23")]
		public void SubmitRegistered(string key, ScaleOption option)
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0x6F5388", Offset = "0x6F5388", VA = "0x6F5388", Slot = "24")]
		public void SubmitRegisteredVestRotation(string key, RotationOption option)
		{
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0x6F538C", Offset = "0x6F538C", VA = "0x6F538C", Slot = "25")]
		public void SubmitRegisteredVestRotation(string key, string altKey, RotationOption option)
		{
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0x6F5390", Offset = "0x6F5390", VA = "0x6F5390", Slot = "12")]
		public void SubmitRegisteredVestRotation(string key, string altKey, RotationOption option, ScaleOption sOption)
		{
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0x6F5394", Offset = "0x6F5394", VA = "0x6F5394", Slot = "13")]
		public void SubmitRegistered(string key)
		{
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0x6F5398", Offset = "0x6F5398", VA = "0x6F5398", Slot = "26")]
		public void SubmitRegistered(string key, float duration)
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0x6F539C", Offset = "0x6F539C", VA = "0x6F539C", Slot = "14")]
		public void TurnOff(string key)
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0x6F53A0", Offset = "0x6F53A0", VA = "0x6F53A0", Slot = "15")]
		public void TurnOff()
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0x6F53A4", Offset = "0x6F53A4", VA = "0x6F53A4", Slot = "8")]
		public void Register(string key, Project project)
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x6F3514", Offset = "0x6F3514", VA = "0x6F3514")]
		public DumbPlayer()
		{
		}
	}
	[Token(Token = "0x2000206")]
	public class BhapticsUtils
	{
		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool isInit;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static string exeFilePath;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string TypeVest;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static string TypeTactosy;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string TypeRight;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static string TypeLeft;

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x6F4BDC", Offset = "0x6F4BDC", VA = "0x6F4BDC")]
		public static string GetExePath()
		{
			return null;
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0x6F350C", Offset = "0x6F350C", VA = "0x6F350C")]
		public static bool IsPlayerInstalled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x6F3790", Offset = "0x6F3790", VA = "0x6F3790")]
		public static bool IsPlayerRunning()
		{
			return default(bool);
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0x6F4C2C", Offset = "0x6F4C2C", VA = "0x6F4C2C")]
		private static bool Is64BitBuild()
		{
			return default(bool);
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0x6F3798", Offset = "0x6F3798", VA = "0x6F3798")]
		public static void LaunchPlayer(bool tryLaunch)
		{
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0x6F4C4C", Offset = "0x6F4C4C", VA = "0x6F4C4C")]
		public static float Angle(Vector3 fwd, Vector3 targetDir)
		{
			return default(float);
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0x6F4DF8", Offset = "0x6F4DF8", VA = "0x6F4DF8")]
		private static int AngleDir(Vector3 fwd, Vector3 targetDir, Vector3 up)
		{
			return default(int);
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0x6F4EE8", Offset = "0x6F4EE8", VA = "0x6F4EE8")]
		public static Project ReflectLeftRight(string projectStr)
		{
			return null;
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0x6F5274", Offset = "0x6F5274", VA = "0x6F5274")]
		public BhapticsUtils()
		{
		}
	}
	[Token(Token = "0x2000207")]
	public class TactFileAsset : ScriptableObject
	{
		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool Initialized;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static TactFileAsset _instance;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public FeedbackFile[] FeedbackFiles;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] Types;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Dictionary<string, FeedbackFile> FilesMap;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string secretKey;

		[Token(Token = "0x170001DE")]
		public static TactFileAsset Instance
		{
			[Token(Token = "0x6001250")]
			[Address(RVA = "0x6F32E0", Offset = "0x6F32E0", VA = "0x6F32E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0x6F67F4", Offset = "0x6F67F4", VA = "0x6F67F4")]
		private static void Initialize()
		{
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0x6F6A18", Offset = "0x6F6A18", VA = "0x6F6A18")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0x6F6A14", Offset = "0x6F6A14", VA = "0x6F6A14")]
		public static void SaveAssetFile()
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0x6F6AA0", Offset = "0x6F6AA0", VA = "0x6F6AA0")]
		private static string[] LoadTypes(FeedbackFile[] feedbackFiles)
		{
			return null;
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0x6F6BE8", Offset = "0x6F6BE8", VA = "0x6F6BE8")]
		private static FeedbackFile[] LoadFeedbackFile()
		{
			return null;
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0x6F7284", Offset = "0x6F7284", VA = "0x6F7284")]
		private static string GetHash(string value)
		{
			return null;
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0x6F727C", Offset = "0x6F727C", VA = "0x6F727C")]
		private static string LoadStringFromFile(string filePath)
		{
			return null;
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0x6F743C", Offset = "0x6F743C", VA = "0x6F743C")]
		public TactFileAsset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000208")]
	public class FeedbackFile
	{
		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Id;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string Key;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Value;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public string Type;

		[Token(Token = "0x600125A")]
		[Address(RVA = "0x6F56C4", Offset = "0x6F56C4", VA = "0x6F56C4")]
		public FeedbackFile()
		{
		}
	}
	[Token(Token = "0x2000209")]
	public class TactReceiver : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public PositionTag PositionTag;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsActive;

		[Token(Token = "0x600125B")]
		[Address(RVA = "0x671B98", Offset = "0x671B98", VA = "0x671B98")]
		private void Awake()
		{
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0x671C80", Offset = "0x671C80", VA = "0x671C80")]
		private void OnTriggerEnter(Collider bullet)
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x671E34", Offset = "0x671E34", VA = "0x671E34")]
		private void OnCollisionEnter(Collision bullet)
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0x671D4C", Offset = "0x671D4C", VA = "0x671D4C")]
		private void Handle(Vector3 contactPoint, TactSender tactSender)
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x672070", Offset = "0x672070", VA = "0x672070")]
		public TactReceiver()
		{
		}
	}
	[Token(Token = "0x200020A")]
	public class TactSender : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public TactSource DefaultSource;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TactSource[] BodySources;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TactSource[] HeadSources;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TactSource[] RightArmSources;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public TactSource[] LeftArmSources;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float yOffsetMultiplier;

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x672080", Offset = "0x672080", VA = "0x672080")]
		public void Play(PositionTag posTag = PositionTag.Default)
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x671F34", Offset = "0x671F34", VA = "0x671F34")]
		public void Play(PositionTag posTag, Vector3 contactPos, Collider targetCollider)
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x6721EC", Offset = "0x6721EC", VA = "0x6721EC")]
		private void Play(PositionTag posTag, Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight)
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0x672350", Offset = "0x672350", VA = "0x672350")]
		public void Play(PositionTag posTag, RaycastHit hit)
		{
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0x672500", Offset = "0x672500", VA = "0x672500")]
		private TactSource GetClip(PositionTag posTag)
		{
			return null;
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0x672614", Offset = "0x672614", VA = "0x672614")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0x6720A0", Offset = "0x6720A0", VA = "0x6720A0")]
		public void Play(PositionTag posTag, float angleX, float offsetY)
		{
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0x672E7C", Offset = "0x672E7C", VA = "0x672E7C")]
		public TactSender()
		{
		}
	}
	[Token(Token = "0x200020B")]
	public enum PositionTag
	{
		[Token(Token = "0x4000FC0")]
		Body,
		[Token(Token = "0x4000FC1")]
		Head,
		[Token(Token = "0x4000FC2")]
		LeftArm,
		[Token(Token = "0x4000FC3")]
		RightArm,
		[Token(Token = "0x4000FC4")]
		Default
	}
	[Serializable]
	[Token(Token = "0x200020C")]
	public class TactSource : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private IHapticPlayer player;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string _key;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[HideInInspector]
		public FeedbackType FeedbackType;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		public Pos Position;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		public Point[] Points;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[SerializeField]
		public byte[] DotPoints;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3A1030", Offset = "0x3A1030")]
		public int TimeMillis;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3A1070", Offset = "0x3A1070")]
		public float Intensity;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3A10B0", Offset = "0x3A10B0")]
		public float Duration;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		[SerializeField]
		public bool IsReflectTactosy;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool isRegistered;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool isOriginFileRegistered;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public float VestRotationAngleX;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public float VestRotationOffsetY;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3A1140", Offset = "0x3A1140")]
		public float TactFileOffsetX;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3A117C", Offset = "0x3A117C")]
		public float TactFileOffsetY;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		[SerializeField]
		public FeedbackFile FeedbackFile;

		[Token(Token = "0x6001268")]
		[Address(RVA = "0x672E8C", Offset = "0x672E8C", VA = "0x672E8C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0x672FF8", Offset = "0x672FF8", VA = "0x672FF8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0x673020", Offset = "0x673020", VA = "0x673020")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0x67302C", Offset = "0x67302C", VA = "0x67302C")]
		private void OnApplicationPause(bool pauseStatus)
		{
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0x67303C", Offset = "0x67303C", VA = "0x67303C")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0x67261C", Offset = "0x67261C", VA = "0x67261C")]
		public void Play([Optional] ScaleOption option)
		{
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0x673298", Offset = "0x673298", VA = "0x673298")]
		public void Stop()
		{
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0x673130", Offset = "0x673130", VA = "0x673130")]
		private static List<PathPoint> Convert(Point[] points)
		{
			return null;
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0x673110", Offset = "0x673110", VA = "0x673110")]
		private static PositionType ToPositionType(Pos pos)
		{
			return default(PositionType);
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0x67336C", Offset = "0x67336C", VA = "0x67336C")]
		public TactSource()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200020D")]
	public class Point
	{
		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3A11E8", Offset = "0x3A11E8")]
		public float X;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3A1200", Offset = "0x3A1200")]
		public float Y;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3A1218", Offset = "0x3A1218")]
		public int Intensity;

		[Token(Token = "0x6001272")]
		[Address(RVA = "0x6F5870", Offset = "0x6F5870", VA = "0x6F5870")]
		public Point(float x, float y, int intensity)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200020E")]
	public enum FeedbackType
	{
		[Token(Token = "0x4000FDA")]
		TactFile,
		[Token(Token = "0x4000FDB")]
		DotMode,
		[Token(Token = "0x4000FDC")]
		PathMode
	}
	[Serializable]
	[Token(Token = "0x200020F")]
	public enum Pos
	{
		[Token(Token = "0x4000FDE")]
		Head,
		[Token(Token = "0x4000FDF")]
		VestFront,
		[Token(Token = "0x4000FE0")]
		VestBack,
		[Token(Token = "0x4000FE1")]
		RightArm,
		[Token(Token = "0x4000FE2")]
		LeftArm,
		[Token(Token = "0x4000FE3")]
		LeftHand,
		[Token(Token = "0x4000FE4")]
		RightHand,
		[Token(Token = "0x4000FE5")]
		LeftFoot,
		[Token(Token = "0x4000FE6")]
		RightFoot,
		[Token(Token = "0x4000FE7")]
		Racket
	}
	[Token(Token = "0x2000210")]
	public class VisualFeedback : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private int column;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private int row;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private GameObject motorPrefab;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float distance;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public PositionType Position;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject[] motors;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float offsetX;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float offsetY;

		[Token(Token = "0x6001273")]
		[Address(RVA = "0x6733F0", Offset = "0x6733F0", VA = "0x6733F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0x67385C", Offset = "0x67385C", VA = "0x67385C")]
		public void UpdateFeedbacks(HapticFeedback feedback)
		{
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0x673B40", Offset = "0x673B40", VA = "0x673B40")]
		public VisualFeedback()
		{
		}
	}
}
namespace Viveport
{
	[Token(Token = "0x2000211")]
	public enum Locale
	{
		[Token(Token = "0x4000FF1")]
		US,
		[Token(Token = "0x4000FF2")]
		DE,
		[Token(Token = "0x4000FF3")]
		JP,
		[Token(Token = "0x4000FF4")]
		KR,
		[Token(Token = "0x4000FF5")]
		RU,
		[Token(Token = "0x4000FF6")]
		CN,
		[Token(Token = "0x4000FF7")]
		TW,
		[Token(Token = "0x4000FF8")]
		FR
	}
	[Token(Token = "0x2000212")]
	public delegate void StatusCallback(int nResult);
	[Token(Token = "0x2000213")]
	public delegate void StatusCallback2(int nResult, string message);
	[Token(Token = "0x2000214")]
	public delegate void QueryRuntimeModeCallback(int nResult, int emu);
	[Token(Token = "0x2000215")]
	public class Leaderboard
	{
		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1294", Offset = "0x3A1294")]
		private int <Rank>k__BackingField;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A12A4", Offset = "0x3A12A4")]
		private int <Score>k__BackingField;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A12B4", Offset = "0x3A12B4")]
		private string <UserName>k__BackingField;

		[Token(Token = "0x170001DF")]
		public int Rank
		{
			[Token(Token = "0x6001282")]
			[Address(RVA = "0x87C00C", Offset = "0x87C00C", VA = "0x87C00C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB8DC", Offset = "0x3AB8DC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001283")]
			[Address(RVA = "0x87C014", Offset = "0x87C014", VA = "0x87C014")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB8EC", Offset = "0x3AB8EC")]
			set
			{
			}
		}

		[Token(Token = "0x170001E0")]
		public int Score
		{
			[Token(Token = "0x6001284")]
			[Address(RVA = "0x87C01C", Offset = "0x87C01C", VA = "0x87C01C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB8FC", Offset = "0x3AB8FC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001285")]
			[Address(RVA = "0x87C024", Offset = "0x87C024", VA = "0x87C024")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB90C", Offset = "0x3AB90C")]
			set
			{
			}
		}

		[Token(Token = "0x170001E1")]
		public string UserName
		{
			[Token(Token = "0x6001286")]
			[Address(RVA = "0x87C02C", Offset = "0x87C02C", VA = "0x87C02C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB91C", Offset = "0x3AB91C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001287")]
			[Address(RVA = "0x87C034", Offset = "0x87C034", VA = "0x87C034")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB92C", Offset = "0x3AB92C")]
			set
			{
			}
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x87BC84", Offset = "0x87BC84", VA = "0x87BC84")]
		public Leaderboard()
		{
		}
	}
	[Token(Token = "0x2000216")]
	public class Api
	{
		[Token(Token = "0x2000721")]
		public abstract class LicenseChecker
		{
			[Token(Token = "0x6003104")]
			public abstract void OnSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired);

			[Token(Token = "0x6003105")]
			public abstract void OnFailure(int errorCode, string errorMessage);

			[Token(Token = "0x6003106")]
			[Address(RVA = "0x86FA2C", Offset = "0x86FA2C", VA = "0x86FA2C")]
			protected LicenseChecker()
			{
			}
		}

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly List<GetLicenseCallback> InternalGetLicenseCallbacks;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal static readonly List<Viveport.Internal.StatusCallback> InternalStatusCallbacks;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal static readonly List<Viveport.Internal.QueryRuntimeModeCallback> InternalQueryRunTimeCallbacks;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal static readonly List<Viveport.Internal.StatusCallback2> InternalStatusCallback2s;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal static readonly List<LicenseChecker> InternalLicenseCheckers;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static readonly string VERSION;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string _appId;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static string _appKey;

		[Token(Token = "0x6001289")]
		[Address(RVA = "0x86EE18", Offset = "0x86EE18", VA = "0x86EE18")]
		public static void GetLicense(LicenseChecker checker, string appId, string appKey)
		{
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0x86F128", Offset = "0x86F128", VA = "0x86F128")]
		public static int Init(StatusCallback callback, string appId)
		{
			return default(int);
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0x86F444", Offset = "0x86F444", VA = "0x86F444")]
		public static int Shutdown(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0x86F694", Offset = "0x86F694", VA = "0x86F694")]
		public static string Version()
		{
			return null;
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0x86F874", Offset = "0x86F874", VA = "0x86F874")]
		public Api()
		{
		}
	}
	[Token(Token = "0x2000217")]
	public class User
	{
		[Token(Token = "0x600128F")]
		[Address(RVA = "0x87CAD4", Offset = "0x87CAD4", VA = "0x87CAD4")]
		public static string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0x87CB08", Offset = "0x87CB08", VA = "0x87CB08")]
		public static string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0x87CB3C", Offset = "0x87CB3C", VA = "0x87CB3C")]
		public static string GetUserAvatarUrl()
		{
			return null;
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0x87CB70", Offset = "0x87CB70", VA = "0x87CB70")]
		public User()
		{
		}
	}
	[Token(Token = "0x2000218")]
	public class UserStats
	{
		[Token(Token = "0x2000722")]
		public enum LeaderBoardRequestType
		{
			[Token(Token = "0x40027AF")]
			GlobalData,
			[Token(Token = "0x40027B0")]
			GlobalDataAroundUser,
			[Token(Token = "0x40027B1")]
			LocalData,
			[Token(Token = "0x40027B2")]
			LocalDataAroundUser
		}

		[Token(Token = "0x2000723")]
		public enum LeaderBoardTimeRange
		{
			[Token(Token = "0x40027B4")]
			AllTime,
			[Token(Token = "0x40027B5")]
			Daily,
			[Token(Token = "0x40027B6")]
			Weekly,
			[Token(Token = "0x40027B7")]
			Monthly
		}

		[Token(Token = "0x2000724")]
		public enum LeaderBoardSortMethod
		{
			[Token(Token = "0x40027B9")]
			None,
			[Token(Token = "0x40027BA")]
			Ascending,
			[Token(Token = "0x40027BB")]
			Descending
		}

		[Token(Token = "0x2000725")]
		public enum LeaderBoardDiaplayType
		{
			[Token(Token = "0x40027BD")]
			None,
			[Token(Token = "0x40027BE")]
			Numeric,
			[Token(Token = "0x40027BF")]
			TimeSeconds,
			[Token(Token = "0x40027C0")]
			TimeMilliSeconds
		}

		[Token(Token = "0x2000726")]
		public enum LeaderBoardScoreMethod
		{
			[Token(Token = "0x40027C2")]
			None,
			[Token(Token = "0x40027C3")]
			KeepBest,
			[Token(Token = "0x40027C4")]
			ForceUpdate
		}

		[Token(Token = "0x2000727")]
		public enum AchievementDisplayAttribute
		{
			[Token(Token = "0x40027C6")]
			Name,
			[Token(Token = "0x40027C7")]
			Desc,
			[Token(Token = "0x40027C8")]
			Hidden
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0x87CB78", Offset = "0x87CB78", VA = "0x87CB78")]
		public static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0x87CCB4", Offset = "0x87CCB4", VA = "0x87CCB4")]
		public static int DownloadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0x87CDF0", Offset = "0x87CDF0", VA = "0x87CDF0")]
		public static int GetStat(string name, int defaultValue)
		{
			return default(int);
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0x87CDF4", Offset = "0x87CDF4", VA = "0x87CDF4")]
		public static float GetStat(string name, float defaultValue)
		{
			return default(float);
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0x87CDF8", Offset = "0x87CDF8", VA = "0x87CDF8")]
		public static void SetStat(string name, int value)
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0x87CDFC", Offset = "0x87CDFC", VA = "0x87CDFC")]
		public static void SetStat(string name, float value)
		{
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0x87CE00", Offset = "0x87CE00", VA = "0x87CE00")]
		public static int UploadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0x87CF3C", Offset = "0x87CF3C", VA = "0x87CF3C")]
		public static bool GetAchievement(string pchName)
		{
			return default(bool);
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0x87CF40", Offset = "0x87CF40", VA = "0x87CF40")]
		public static int GetAchievementUnlockTime(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0x87CF44", Offset = "0x87CF44", VA = "0x87CF44")]
		public static string GetAchievementIcon(string pchName)
		{
			return null;
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0x87CF48", Offset = "0x87CF48", VA = "0x87CF48")]
		public static string GetAchievementDisplayAttribute(string pchName, AchievementDisplayAttribute attr)
		{
			return null;
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0x87CF4C", Offset = "0x87CF4C", VA = "0x87CF4C")]
		public static string GetAchievementDisplayAttribute(string pchName, AchievementDisplayAttribute attr, Locale locale)
		{
			return null;
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0x87CF50", Offset = "0x87CF50", VA = "0x87CF50")]
		public static int SetAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x87CF54", Offset = "0x87CF54", VA = "0x87CF54")]
		public static int ClearAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0x87CF58", Offset = "0x87CF58", VA = "0x87CF58")]
		public static int DownloadLeaderboardScores(StatusCallback callback, string pchLeaderboardName, LeaderBoardRequestType eLeaderboardDataRequest, LeaderBoardTimeRange eLeaderboardDataTimeRange, int nRangeStart, int nRangeEnd)
		{
			return default(int);
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0x87D0C4", Offset = "0x87D0C4", VA = "0x87D0C4")]
		public static int UploadLeaderboardScore(StatusCallback callback, string pchLeaderboardName, int nScore)
		{
			return default(int);
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0x87D210", Offset = "0x87D210", VA = "0x87D210")]
		public static Leaderboard GetLeaderboardScore(int index)
		{
			return null;
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0x87D214", Offset = "0x87D214", VA = "0x87D214")]
		public static int GetLeaderboardScoreCount()
		{
			return default(int);
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0x87D218", Offset = "0x87D218", VA = "0x87D218")]
		public static LeaderBoardSortMethod GetLeaderboardSortMethod()
		{
			return default(LeaderBoardSortMethod);
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0x87D21C", Offset = "0x87D21C", VA = "0x87D21C")]
		public static LeaderBoardDiaplayType GetLeaderboardDisplayType()
		{
			return default(LeaderBoardDiaplayType);
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x87D220", Offset = "0x87D220", VA = "0x87D220")]
		public UserStats()
		{
		}
	}
	[Token(Token = "0x2000219")]
	public class ArcadeLeaderboard
	{
		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x86FA3C", Offset = "0x86FA3C", VA = "0x86FA3C")]
		public ArcadeLeaderboard()
		{
		}
	}
	[Token(Token = "0x200021A")]
	public class IAPurchase
	{
		[Token(Token = "0x2000728")]
		private class IAPHandler : BaseHandler
		{
			[Token(Token = "0x40027C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static IAPurchaseListener listener;

			[Token(Token = "0x6003107")]
			[Address(RVA = "0x870224", Offset = "0x870224", VA = "0x870224")]
			public IAPHandler(IAPurchaseListener cb)
			{
			}

			[Token(Token = "0x6003108")]
			[Address(RVA = "0x870290", Offset = "0x870290", VA = "0x870290")]
			public IAPurchaseCallback getIsReadyHandler()
			{
				return null;
			}

			[Token(Token = "0x6003109")]
			[Address(RVA = "0x871EEC", Offset = "0x871EEC", VA = "0x871EEC", Slot = "4")]
			protected override void IsReadyHandler(int code, string message)
			{
			}

			[Token(Token = "0x600310A")]
			[Address(RVA = "0x87053C", Offset = "0x87053C", VA = "0x87053C")]
			public IAPurchaseCallback getRequestHandler()
			{
				return null;
			}

			[Token(Token = "0x600310B")]
			[Address(RVA = "0x872514", Offset = "0x872514", VA = "0x872514", Slot = "5")]
			protected override void RequestHandler(int code, string message)
			{
			}

			[Token(Token = "0x600310C")]
			[Address(RVA = "0x8707EC", Offset = "0x8707EC", VA = "0x8707EC")]
			public IAPurchaseCallback getPurchaseHandler()
			{
				return null;
			}

			[Token(Token = "0x600310D")]
			[Address(RVA = "0x872B3C", Offset = "0x872B3C", VA = "0x872B3C", Slot = "6")]
			protected override void PurchaseHandler(int code, string message)
			{
			}

			[Token(Token = "0x600310E")]
			[Address(RVA = "0x870A98", Offset = "0x870A98", VA = "0x870A98")]
			public IAPurchaseCallback getQueryHandler()
			{
				return null;
			}

			[Token(Token = "0x600310F")]
			[Address(RVA = "0x873320", Offset = "0x873320", VA = "0x873320", Slot = "7")]
			protected override void QueryHandler(int code, string message)
			{
			}

			[Token(Token = "0x6003110")]
			[Address(RVA = "0x874038", Offset = "0x874038", VA = "0x874038")]
			public IAPurchaseCallback getQueryListHandler()
			{
				return null;
			}

			[Token(Token = "0x6003111")]
			[Address(RVA = "0x8740BC", Offset = "0x8740BC", VA = "0x8740BC", Slot = "8")]
			protected override void QueryListHandler(int code, string message)
			{
			}

			[Token(Token = "0x6003112")]
			[Address(RVA = "0x870D40", Offset = "0x870D40", VA = "0x870D40")]
			public IAPurchaseCallback getBalanceHandler()
			{
				return null;
			}

			[Token(Token = "0x6003113")]
			[Address(RVA = "0x8754C8", Offset = "0x8754C8", VA = "0x8754C8", Slot = "9")]
			protected override void BalanceHandler(int code, string message)
			{
			}

			[Token(Token = "0x6003114")]
			[Address(RVA = "0x870FD8", Offset = "0x870FD8", VA = "0x870FD8")]
			public IAPurchaseCallback getRequestSubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x6003115")]
			[Address(RVA = "0x875CB0", Offset = "0x875CB0", VA = "0x875CB0", Slot = "10")]
			protected override void RequestSubscriptionHandler(int code, string message)
			{
			}

			[Token(Token = "0x6003116")]
			[Address(RVA = "0x87149C", Offset = "0x87149C", VA = "0x87149C")]
			public IAPurchaseCallback getRequestSubscriptionWithPlanIDHandler()
			{
				return null;
			}

			[Token(Token = "0x6003117")]
			[Address(RVA = "0x8762A0", Offset = "0x8762A0", VA = "0x8762A0", Slot = "11")]
			protected override void RequestSubscriptionWithPlanIDHandler(int code, string message)
			{
			}

			[Token(Token = "0x6003118")]
			[Address(RVA = "0x871748", Offset = "0x871748", VA = "0x871748")]
			public IAPurchaseCallback getSubscribeHandler()
			{
				return null;
			}

			[Token(Token = "0x6003119")]
			[Address(RVA = "0x876890", Offset = "0x876890", VA = "0x876890", Slot = "12")]
			protected override void SubscribeHandler(int code, string message)
			{
			}

			[Token(Token = "0x600311A")]
			[Address(RVA = "0x8719F4", Offset = "0x8719F4", VA = "0x8719F4")]
			public IAPurchaseCallback getQuerySubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x600311B")]
			[Address(RVA = "0x876F40", Offset = "0x876F40", VA = "0x876F40", Slot = "13")]
			protected override void QuerySubscriptionHandler(int code, string message)
			{
			}

			[Token(Token = "0x600311C")]
			[Address(RVA = "0x871CA0", Offset = "0x871CA0", VA = "0x871CA0")]
			public IAPurchaseCallback getCancelSubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x600311D")]
			[Address(RVA = "0x87756C", Offset = "0x87756C", VA = "0x87756C", Slot = "14")]
			protected override void CancelSubscriptionHandler(int code, string message)
			{
			}
		}

		[Token(Token = "0x2000729")]
		private abstract class BaseHandler
		{
			[Token(Token = "0x600311E")]
			protected abstract void IsReadyHandler(int code, string message);

			[Token(Token = "0x600311F")]
			protected abstract void RequestHandler(int code, string message);

			[Token(Token = "0x6003120")]
			protected abstract void PurchaseHandler(int code, string message);

			[Token(Token = "0x6003121")]
			protected abstract void QueryHandler(int code, string message);

			[Token(Token = "0x6003122")]
			protected abstract void QueryListHandler(int code, string message);

			[Token(Token = "0x6003123")]
			protected abstract void BalanceHandler(int code, string message);

			[Token(Token = "0x6003124")]
			protected abstract void RequestSubscriptionHandler(int code, string message);

			[Token(Token = "0x6003125")]
			protected abstract void RequestSubscriptionWithPlanIDHandler(int code, string message);

			[Token(Token = "0x6003126")]
			protected abstract void SubscribeHandler(int code, string message);

			[Token(Token = "0x6003127")]
			protected abstract void QuerySubscriptionHandler(int code, string message);

			[Token(Token = "0x6003128")]
			protected abstract void CancelSubscriptionHandler(int code, string message);

			[Token(Token = "0x6003129")]
			[Address(RVA = "0x871ED0", Offset = "0x871ED0", VA = "0x871ED0")]
			protected BaseHandler()
			{
			}
		}

		[Token(Token = "0x200072A")]
		public class IAPurchaseListener
		{
			[Token(Token = "0x600312A")]
			[Address(RVA = "0x877A64", Offset = "0x877A64", VA = "0x877A64", Slot = "4")]
			public virtual void OnSuccess(string pchCurrencyName)
			{
			}

			[Token(Token = "0x600312B")]
			[Address(RVA = "0x877A68", Offset = "0x877A68", VA = "0x877A68", Slot = "5")]
			public virtual void OnRequestSuccess(string pchPurchaseId)
			{
			}

			[Token(Token = "0x600312C")]
			[Address(RVA = "0x877A6C", Offset = "0x877A6C", VA = "0x877A6C", Slot = "6")]
			public virtual void OnPurchaseSuccess(string pchPurchaseId)
			{
			}

			[Token(Token = "0x600312D")]
			[Address(RVA = "0x877A70", Offset = "0x877A70", VA = "0x877A70", Slot = "7")]
			public virtual void OnQuerySuccess(QueryResponse response)
			{
			}

			[Token(Token = "0x600312E")]
			[Address(RVA = "0x877A74", Offset = "0x877A74", VA = "0x877A74", Slot = "8")]
			public virtual void OnQuerySuccess(QueryListResponse response)
			{
			}

			[Token(Token = "0x600312F")]
			[Address(RVA = "0x877A78", Offset = "0x877A78", VA = "0x877A78", Slot = "9")]
			public virtual void OnBalanceSuccess(string pchBalance)
			{
			}

			[Token(Token = "0x6003130")]
			[Address(RVA = "0x877A7C", Offset = "0x877A7C", VA = "0x877A7C", Slot = "10")]
			public virtual void OnFailure(int nCode, string pchMessage)
			{
			}

			[Token(Token = "0x6003131")]
			[Address(RVA = "0x877A80", Offset = "0x877A80", VA = "0x877A80", Slot = "11")]
			public virtual void OnRequestSubscriptionSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x6003132")]
			[Address(RVA = "0x877A84", Offset = "0x877A84", VA = "0x877A84", Slot = "12")]
			public virtual void OnRequestSubscriptionWithPlanIDSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x6003133")]
			[Address(RVA = "0x877A88", Offset = "0x877A88", VA = "0x877A88", Slot = "13")]
			public virtual void OnSubscribeSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x6003134")]
			[Address(RVA = "0x877A8C", Offset = "0x877A8C", VA = "0x877A8C", Slot = "14")]
			public virtual void OnQuerySubscriptionSuccess(Subscription[] subscriptionlist)
			{
			}

			[Token(Token = "0x6003135")]
			[Address(RVA = "0x877A90", Offset = "0x877A90", VA = "0x877A90", Slot = "15")]
			public virtual void OnCancelSubscriptionSuccess(bool bCanceled)
			{
			}

			[Token(Token = "0x6003136")]
			[Address(RVA = "0x877A94", Offset = "0x877A94", VA = "0x877A94")]
			public IAPurchaseListener()
			{
			}
		}

		[Token(Token = "0x200072B")]
		public class QueryResponse
		{
			[Token(Token = "0x40027CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5CE0", Offset = "0x3A5CE0")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x40027CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5CF0", Offset = "0x3A5CF0")]
			private string <purchase_id>k__BackingField;

			[Token(Token = "0x40027CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5D00", Offset = "0x3A5D00")]
			private string <status>k__BackingField;

			[Token(Token = "0x40027CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5D10", Offset = "0x3A5D10")]
			private string <price>k__BackingField;

			[Token(Token = "0x40027CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5D20", Offset = "0x3A5D20")]
			private string <currency>k__BackingField;

			[Token(Token = "0x40027CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5D30", Offset = "0x3A5D30")]
			private long <paid_timestamp>k__BackingField;

			[Token(Token = "0x1700057D")]
			public string order_id
			{
				[Token(Token = "0x6003137")]
				[Address(RVA = "0x877ACC", Offset = "0x877ACC", VA = "0x877ACC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0D1C", Offset = "0x3B0D1C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6003138")]
				[Address(RVA = "0x877AD4", Offset = "0x877AD4", VA = "0x877AD4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0D2C", Offset = "0x3B0D2C")]
				set
				{
				}
			}

			[Token(Token = "0x1700057E")]
			public string purchase_id
			{
				[Token(Token = "0x6003139")]
				[Address(RVA = "0x877ADC", Offset = "0x877ADC", VA = "0x877ADC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0D3C", Offset = "0x3B0D3C")]
				get
				{
					return null;
				}
				[Token(Token = "0x600313A")]
				[Address(RVA = "0x877AE4", Offset = "0x877AE4", VA = "0x877AE4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0D4C", Offset = "0x3B0D4C")]
				set
				{
				}
			}

			[Token(Token = "0x1700057F")]
			public string status
			{
				[Token(Token = "0x600313B")]
				[Address(RVA = "0x877AEC", Offset = "0x877AEC", VA = "0x877AEC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0D5C", Offset = "0x3B0D5C")]
				get
				{
					return null;
				}
				[Token(Token = "0x600313C")]
				[Address(RVA = "0x877AF4", Offset = "0x877AF4", VA = "0x877AF4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0D6C", Offset = "0x3B0D6C")]
				set
				{
				}
			}

			[Token(Token = "0x17000580")]
			public string price
			{
				[Token(Token = "0x600313D")]
				[Address(RVA = "0x877AFC", Offset = "0x877AFC", VA = "0x877AFC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0D7C", Offset = "0x3B0D7C")]
				get
				{
					return null;
				}
				[Token(Token = "0x600313E")]
				[Address(RVA = "0x877B04", Offset = "0x877B04", VA = "0x877B04")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0D8C", Offset = "0x3B0D8C")]
				set
				{
				}
			}

			[Token(Token = "0x17000581")]
			public string currency
			{
				[Token(Token = "0x600313F")]
				[Address(RVA = "0x877B0C", Offset = "0x877B0C", VA = "0x877B0C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0D9C", Offset = "0x3B0D9C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6003140")]
				[Address(RVA = "0x877B14", Offset = "0x877B14", VA = "0x877B14")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0DAC", Offset = "0x3B0DAC")]
				set
				{
				}
			}

			[Token(Token = "0x17000582")]
			public long paid_timestamp
			{
				[Token(Token = "0x6003141")]
				[Address(RVA = "0x877B1C", Offset = "0x877B1C", VA = "0x877B1C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0DBC", Offset = "0x3B0DBC")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6003142")]
				[Address(RVA = "0x877B24", Offset = "0x877B24", VA = "0x877B24")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0DCC", Offset = "0x3B0DCC")]
				set
				{
				}
			}

			[Token(Token = "0x6003143")]
			[Address(RVA = "0x874030", Offset = "0x874030", VA = "0x874030")]
			public QueryResponse()
			{
			}
		}

		[Token(Token = "0x200072C")]
		public class QueryResponse2
		{
			[Token(Token = "0x40027D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5D40", Offset = "0x3A5D40")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x40027D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5D50", Offset = "0x3A5D50")]
			private string <app_id>k__BackingField;

			[Token(Token = "0x40027D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5D60", Offset = "0x3A5D60")]
			private string <purchase_id>k__BackingField;

			[Token(Token = "0x40027D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5D70", Offset = "0x3A5D70")]
			private string <user_data>k__BackingField;

			[Token(Token = "0x40027D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5D80", Offset = "0x3A5D80")]
			private string <price>k__BackingField;

			[Token(Token = "0x40027D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5D90", Offset = "0x3A5D90")]
			private string <currency>k__BackingField;

			[Token(Token = "0x40027D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5DA0", Offset = "0x3A5DA0")]
			private long <paid_timestamp>k__BackingField;

			[Token(Token = "0x17000583")]
			public string order_id
			{
				[Token(Token = "0x6003144")]
				[Address(RVA = "0x877B34", Offset = "0x877B34", VA = "0x877B34")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0DDC", Offset = "0x3B0DDC")]
				get
				{
					return null;
				}
				[Token(Token = "0x6003145")]
				[Address(RVA = "0x877B3C", Offset = "0x877B3C", VA = "0x877B3C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0DEC", Offset = "0x3B0DEC")]
				set
				{
				}
			}

			[Token(Token = "0x17000584")]
			public string app_id
			{
				[Token(Token = "0x6003146")]
				[Address(RVA = "0x877B44", Offset = "0x877B44", VA = "0x877B44")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0DFC", Offset = "0x3B0DFC")]
				get
				{
					return null;
				}
				[Token(Token = "0x6003147")]
				[Address(RVA = "0x877B4C", Offset = "0x877B4C", VA = "0x877B4C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0E0C", Offset = "0x3B0E0C")]
				set
				{
				}
			}

			[Token(Token = "0x17000585")]
			public string purchase_id
			{
				[Token(Token = "0x6003148")]
				[Address(RVA = "0x877B54", Offset = "0x877B54", VA = "0x877B54")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0E1C", Offset = "0x3B0E1C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6003149")]
				[Address(RVA = "0x877B5C", Offset = "0x877B5C", VA = "0x877B5C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0E2C", Offset = "0x3B0E2C")]
				set
				{
				}
			}

			[Token(Token = "0x17000586")]
			public string user_data
			{
				[Token(Token = "0x600314A")]
				[Address(RVA = "0x877B64", Offset = "0x877B64", VA = "0x877B64")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0E3C", Offset = "0x3B0E3C")]
				get
				{
					return null;
				}
				[Token(Token = "0x600314B")]
				[Address(RVA = "0x877B6C", Offset = "0x877B6C", VA = "0x877B6C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0E4C", Offset = "0x3B0E4C")]
				set
				{
				}
			}

			[Token(Token = "0x17000587")]
			public string price
			{
				[Token(Token = "0x600314C")]
				[Address(RVA = "0x877B74", Offset = "0x877B74", VA = "0x877B74")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0E5C", Offset = "0x3B0E5C")]
				get
				{
					return null;
				}
				[Token(Token = "0x600314D")]
				[Address(RVA = "0x877B7C", Offset = "0x877B7C", VA = "0x877B7C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0E6C", Offset = "0x3B0E6C")]
				set
				{
				}
			}

			[Token(Token = "0x17000588")]
			public string currency
			{
				[Token(Token = "0x600314E")]
				[Address(RVA = "0x877B84", Offset = "0x877B84", VA = "0x877B84")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0E7C", Offset = "0x3B0E7C")]
				get
				{
					return null;
				}
				[Token(Token = "0x600314F")]
				[Address(RVA = "0x877B8C", Offset = "0x877B8C", VA = "0x877B8C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0E8C", Offset = "0x3B0E8C")]
				set
				{
				}
			}

			[Token(Token = "0x17000589")]
			public long paid_timestamp
			{
				[Token(Token = "0x6003150")]
				[Address(RVA = "0x877B94", Offset = "0x877B94", VA = "0x877B94")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0E9C", Offset = "0x3B0E9C")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6003151")]
				[Address(RVA = "0x877B9C", Offset = "0x877B9C", VA = "0x877B9C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0EAC", Offset = "0x3B0EAC")]
				set
				{
				}
			}

			[Token(Token = "0x6003152")]
			[Address(RVA = "0x8754B8", Offset = "0x8754B8", VA = "0x8754B8")]
			public QueryResponse2()
			{
			}
		}

		[Token(Token = "0x200072D")]
		public class QueryListResponse
		{
			[Token(Token = "0x40027D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5DB0", Offset = "0x3A5DB0")]
			private int <total>k__BackingField;

			[Token(Token = "0x40027D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5DC0", Offset = "0x3A5DC0")]
			private int <from>k__BackingField;

			[Token(Token = "0x40027D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5DD0", Offset = "0x3A5DD0")]
			private int <to>k__BackingField;

			[Token(Token = "0x40027DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public List<QueryResponse2> purchaseList;

			[Token(Token = "0x1700058A")]
			public int total
			{
				[Token(Token = "0x6003153")]
				[Address(RVA = "0x877A9C", Offset = "0x877A9C", VA = "0x877A9C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0EBC", Offset = "0x3B0EBC")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6003154")]
				[Address(RVA = "0x877AA4", Offset = "0x877AA4", VA = "0x877AA4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0ECC", Offset = "0x3B0ECC")]
				set
				{
				}
			}

			[Token(Token = "0x1700058B")]
			public int from
			{
				[Token(Token = "0x6003155")]
				[Address(RVA = "0x877AAC", Offset = "0x877AAC", VA = "0x877AAC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0EDC", Offset = "0x3B0EDC")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6003156")]
				[Address(RVA = "0x877AB4", Offset = "0x877AB4", VA = "0x877AB4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0EEC", Offset = "0x3B0EEC")]
				set
				{
				}
			}

			[Token(Token = "0x1700058C")]
			public int to
			{
				[Token(Token = "0x6003157")]
				[Address(RVA = "0x877ABC", Offset = "0x877ABC", VA = "0x877ABC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0EFC", Offset = "0x3B0EFC")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6003158")]
				[Address(RVA = "0x877AC4", Offset = "0x877AC4", VA = "0x877AC4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0F0C", Offset = "0x3B0F0C")]
				set
				{
				}
			}

			[Token(Token = "0x6003159")]
			[Address(RVA = "0x8754C0", Offset = "0x8754C0", VA = "0x8754C0")]
			public QueryListResponse()
			{
			}
		}

		[Token(Token = "0x200072E")]
		public class StatusDetailTransaction
		{
			[Token(Token = "0x40027DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5DE0", Offset = "0x3A5DE0")]
			private long <create_time>k__BackingField;

			[Token(Token = "0x40027DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5DF0", Offset = "0x3A5DF0")]
			private string <payment_method>k__BackingField;

			[Token(Token = "0x40027DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5E00", Offset = "0x3A5E00")]
			private string <status>k__BackingField;

			[Token(Token = "0x1700058D")]
			public long create_time
			{
				[Token(Token = "0x600315A")]
				[Address(RVA = "0x877C24", Offset = "0x877C24", VA = "0x877C24")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0F1C", Offset = "0x3B0F1C")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x600315B")]
				[Address(RVA = "0x877C2C", Offset = "0x877C2C", VA = "0x877C2C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0F2C", Offset = "0x3B0F2C")]
				set
				{
				}
			}

			[Token(Token = "0x1700058E")]
			public string payment_method
			{
				[Token(Token = "0x600315C")]
				[Address(RVA = "0x877C3C", Offset = "0x877C3C", VA = "0x877C3C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0F3C", Offset = "0x3B0F3C")]
				get
				{
					return null;
				}
				[Token(Token = "0x600315D")]
				[Address(RVA = "0x877C44", Offset = "0x877C44", VA = "0x877C44")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0F4C", Offset = "0x3B0F4C")]
				set
				{
				}
			}

			[Token(Token = "0x1700058F")]
			public string status
			{
				[Token(Token = "0x600315E")]
				[Address(RVA = "0x877C4C", Offset = "0x877C4C", VA = "0x877C4C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0F5C", Offset = "0x3B0F5C")]
				get
				{
					return null;
				}
				[Token(Token = "0x600315F")]
				[Address(RVA = "0x877C54", Offset = "0x877C54", VA = "0x877C54")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0F6C", Offset = "0x3B0F6C")]
				set
				{
				}
			}

			[Token(Token = "0x6003160")]
			[Address(RVA = "0x877C5C", Offset = "0x877C5C", VA = "0x877C5C")]
			public StatusDetailTransaction()
			{
			}
		}

		[Token(Token = "0x200072F")]
		public class StatusDetail
		{
			[Token(Token = "0x40027DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5E10", Offset = "0x3A5E10")]
			private long <date_next_charge>k__BackingField;

			[Token(Token = "0x40027DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5E20", Offset = "0x3A5E20")]
			private StatusDetailTransaction[] <transactions>k__BackingField;

			[Token(Token = "0x40027E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5E30", Offset = "0x3A5E30")]
			private string <cancel_reason>k__BackingField;

			[Token(Token = "0x17000590")]
			public long date_next_charge
			{
				[Token(Token = "0x6003161")]
				[Address(RVA = "0x877BE4", Offset = "0x877BE4", VA = "0x877BE4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0F7C", Offset = "0x3B0F7C")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6003162")]
				[Address(RVA = "0x877BEC", Offset = "0x877BEC", VA = "0x877BEC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0F8C", Offset = "0x3B0F8C")]
				set
				{
				}
			}

			[Token(Token = "0x17000591")]
			public StatusDetailTransaction[] transactions
			{
				[Token(Token = "0x6003163")]
				[Address(RVA = "0x877BFC", Offset = "0x877BFC", VA = "0x877BFC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0F9C", Offset = "0x3B0F9C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6003164")]
				[Address(RVA = "0x877C04", Offset = "0x877C04", VA = "0x877C04")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0FAC", Offset = "0x3B0FAC")]
				set
				{
				}
			}

			[Token(Token = "0x17000592")]
			public string cancel_reason
			{
				[Token(Token = "0x6003165")]
				[Address(RVA = "0x877C0C", Offset = "0x877C0C", VA = "0x877C0C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0FBC", Offset = "0x3B0FBC")]
				get
				{
					return null;
				}
				[Token(Token = "0x6003166")]
				[Address(RVA = "0x877C14", Offset = "0x877C14", VA = "0x877C14")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0FCC", Offset = "0x3B0FCC")]
				set
				{
				}
			}

			[Token(Token = "0x6003167")]
			[Address(RVA = "0x877C1C", Offset = "0x877C1C", VA = "0x877C1C")]
			public StatusDetail()
			{
			}
		}

		[Token(Token = "0x2000730")]
		public class TimePeriod
		{
			[Token(Token = "0x40027E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5E40", Offset = "0x3A5E40")]
			private string <time_type>k__BackingField;

			[Token(Token = "0x40027E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5E50", Offset = "0x3A5E50")]
			private int <value>k__BackingField;

			[Token(Token = "0x17000593")]
			public string time_type
			{
				[Token(Token = "0x6003168")]
				[Address(RVA = "0x877D44", Offset = "0x877D44", VA = "0x877D44")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0FDC", Offset = "0x3B0FDC")]
				get
				{
					return null;
				}
				[Token(Token = "0x6003169")]
				[Address(RVA = "0x877D4C", Offset = "0x877D4C", VA = "0x877D4C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0FEC", Offset = "0x3B0FEC")]
				set
				{
				}
			}

			[Token(Token = "0x17000594")]
			public int value
			{
				[Token(Token = "0x600316A")]
				[Address(RVA = "0x877D54", Offset = "0x877D54", VA = "0x877D54")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B0FFC", Offset = "0x3B0FFC")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600316B")]
				[Address(RVA = "0x877D5C", Offset = "0x877D5C", VA = "0x877D5C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B100C", Offset = "0x3B100C")]
				set
				{
				}
			}

			[Token(Token = "0x600316C")]
			[Address(RVA = "0x877D64", Offset = "0x877D64", VA = "0x877D64")]
			public TimePeriod()
			{
			}
		}

		[Token(Token = "0x2000731")]
		public class Subscription
		{
			[Token(Token = "0x40027E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5E60", Offset = "0x3A5E60")]
			private string <app_id>k__BackingField;

			[Token(Token = "0x40027E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5E70", Offset = "0x3A5E70")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x40027E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5E80", Offset = "0x3A5E80")]
			private string <subscription_id>k__BackingField;

			[Token(Token = "0x40027E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5E90", Offset = "0x3A5E90")]
			private string <price>k__BackingField;

			[Token(Token = "0x40027E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5EA0", Offset = "0x3A5EA0")]
			private string <currency>k__BackingField;

			[Token(Token = "0x40027E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5EB0", Offset = "0x3A5EB0")]
			private long <subscribed_timestamp>k__BackingField;

			[Token(Token = "0x40027E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5EC0", Offset = "0x3A5EC0")]
			private TimePeriod <free_trial_period>k__BackingField;

			[Token(Token = "0x40027EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5ED0", Offset = "0x3A5ED0")]
			private TimePeriod <charge_period>k__BackingField;

			[Token(Token = "0x40027EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5EE0", Offset = "0x3A5EE0")]
			private int <number_of_charge_period>k__BackingField;

			[Token(Token = "0x40027EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5EF0", Offset = "0x3A5EF0")]
			private string <plan_id>k__BackingField;

			[Token(Token = "0x40027ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5F00", Offset = "0x3A5F00")]
			private string <plan_name>k__BackingField;

			[Token(Token = "0x40027EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5F10", Offset = "0x3A5F10")]
			private string <status>k__BackingField;

			[Token(Token = "0x40027EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5F20", Offset = "0x3A5F20")]
			private StatusDetail <status_detail>k__BackingField;

			[Token(Token = "0x17000595")]
			public string app_id
			{
				[Token(Token = "0x600316D")]
				[Address(RVA = "0x877C64", Offset = "0x877C64", VA = "0x877C64")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B101C", Offset = "0x3B101C")]
				get
				{
					return null;
				}
				[Token(Token = "0x600316E")]
				[Address(RVA = "0x877C6C", Offset = "0x877C6C", VA = "0x877C6C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B102C", Offset = "0x3B102C")]
				set
				{
				}
			}

			[Token(Token = "0x17000596")]
			public string order_id
			{
				[Token(Token = "0x600316F")]
				[Address(RVA = "0x877C74", Offset = "0x877C74", VA = "0x877C74")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B103C", Offset = "0x3B103C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6003170")]
				[Address(RVA = "0x877C7C", Offset = "0x877C7C", VA = "0x877C7C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B104C", Offset = "0x3B104C")]
				set
				{
				}
			}

			[Token(Token = "0x17000597")]
			public string subscription_id
			{
				[Token(Token = "0x6003171")]
				[Address(RVA = "0x877C84", Offset = "0x877C84", VA = "0x877C84")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B105C", Offset = "0x3B105C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6003172")]
				[Address(RVA = "0x877C8C", Offset = "0x877C8C", VA = "0x877C8C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B106C", Offset = "0x3B106C")]
				set
				{
				}
			}

			[Token(Token = "0x17000598")]
			public string price
			{
				[Token(Token = "0x6003173")]
				[Address(RVA = "0x877C94", Offset = "0x877C94", VA = "0x877C94")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B107C", Offset = "0x3B107C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6003174")]
				[Address(RVA = "0x877C9C", Offset = "0x877C9C", VA = "0x877C9C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B108C", Offset = "0x3B108C")]
				set
				{
				}
			}

			[Token(Token = "0x17000599")]
			public string currency
			{
				[Token(Token = "0x6003175")]
				[Address(RVA = "0x877CA4", Offset = "0x877CA4", VA = "0x877CA4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B109C", Offset = "0x3B109C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6003176")]
				[Address(RVA = "0x877CAC", Offset = "0x877CAC", VA = "0x877CAC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B10AC", Offset = "0x3B10AC")]
				set
				{
				}
			}

			[Token(Token = "0x1700059A")]
			public long subscribed_timestamp
			{
				[Token(Token = "0x6003177")]
				[Address(RVA = "0x877CB4", Offset = "0x877CB4", VA = "0x877CB4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B10BC", Offset = "0x3B10BC")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6003178")]
				[Address(RVA = "0x877CBC", Offset = "0x877CBC", VA = "0x877CBC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B10CC", Offset = "0x3B10CC")]
				set
				{
				}
			}

			[Token(Token = "0x1700059B")]
			public TimePeriod free_trial_period
			{
				[Token(Token = "0x6003179")]
				[Address(RVA = "0x877CCC", Offset = "0x877CCC", VA = "0x877CCC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B10DC", Offset = "0x3B10DC")]
				get
				{
					return null;
				}
				[Token(Token = "0x600317A")]
				[Address(RVA = "0x877CD4", Offset = "0x877CD4", VA = "0x877CD4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B10EC", Offset = "0x3B10EC")]
				set
				{
				}
			}

			[Token(Token = "0x1700059C")]
			public TimePeriod charge_period
			{
				[Token(Token = "0x600317B")]
				[Address(RVA = "0x877CDC", Offset = "0x877CDC", VA = "0x877CDC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B10FC", Offset = "0x3B10FC")]
				get
				{
					return null;
				}
				[Token(Token = "0x600317C")]
				[Address(RVA = "0x877CE4", Offset = "0x877CE4", VA = "0x877CE4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B110C", Offset = "0x3B110C")]
				set
				{
				}
			}

			[Token(Token = "0x1700059D")]
			public int number_of_charge_period
			{
				[Token(Token = "0x600317D")]
				[Address(RVA = "0x877CEC", Offset = "0x877CEC", VA = "0x877CEC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B111C", Offset = "0x3B111C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600317E")]
				[Address(RVA = "0x877CF4", Offset = "0x877CF4", VA = "0x877CF4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B112C", Offset = "0x3B112C")]
				set
				{
				}
			}

			[Token(Token = "0x1700059E")]
			public string plan_id
			{
				[Token(Token = "0x600317F")]
				[Address(RVA = "0x877CFC", Offset = "0x877CFC", VA = "0x877CFC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B113C", Offset = "0x3B113C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6003180")]
				[Address(RVA = "0x877D04", Offset = "0x877D04", VA = "0x877D04")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B114C", Offset = "0x3B114C")]
				set
				{
				}
			}

			[Token(Token = "0x1700059F")]
			public string plan_name
			{
				[Token(Token = "0x6003181")]
				[Address(RVA = "0x877D0C", Offset = "0x877D0C", VA = "0x877D0C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B115C", Offset = "0x3B115C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6003182")]
				[Address(RVA = "0x877D14", Offset = "0x877D14", VA = "0x877D14")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B116C", Offset = "0x3B116C")]
				set
				{
				}
			}

			[Token(Token = "0x170005A0")]
			public string status
			{
				[Token(Token = "0x6003183")]
				[Address(RVA = "0x877D1C", Offset = "0x877D1C", VA = "0x877D1C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B117C", Offset = "0x3B117C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6003184")]
				[Address(RVA = "0x877D24", Offset = "0x877D24", VA = "0x877D24")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B118C", Offset = "0x3B118C")]
				set
				{
				}
			}

			[Token(Token = "0x170005A1")]
			public StatusDetail status_detail
			{
				[Token(Token = "0x6003185")]
				[Address(RVA = "0x877D2C", Offset = "0x877D2C", VA = "0x877D2C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B119C", Offset = "0x3B119C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6003186")]
				[Address(RVA = "0x877D34", Offset = "0x877D34", VA = "0x877D34")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B11AC", Offset = "0x3B11AC")]
				set
				{
				}
			}

			[Token(Token = "0x6003187")]
			[Address(RVA = "0x877D3C", Offset = "0x877D3C", VA = "0x877D3C")]
			public Subscription()
			{
			}
		}

		[Token(Token = "0x2000732")]
		public class QuerySubscritionResponse
		{
			[Token(Token = "0x40027F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5F30", Offset = "0x3A5F30")]
			private int <statusCode>k__BackingField;

			[Token(Token = "0x40027F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5F40", Offset = "0x3A5F40")]
			private string <message>k__BackingField;

			[Token(Token = "0x40027F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5F50", Offset = "0x3A5F50")]
			private List<Subscription> <subscriptions>k__BackingField;

			[Token(Token = "0x170005A2")]
			public int statusCode
			{
				[Token(Token = "0x6003188")]
				[Address(RVA = "0x877BAC", Offset = "0x877BAC", VA = "0x877BAC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B11BC", Offset = "0x3B11BC")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6003189")]
				[Address(RVA = "0x877BB4", Offset = "0x877BB4", VA = "0x877BB4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B11CC", Offset = "0x3B11CC")]
				set
				{
				}
			}

			[Token(Token = "0x170005A3")]
			public string message
			{
				[Token(Token = "0x600318A")]
				[Address(RVA = "0x877BBC", Offset = "0x877BBC", VA = "0x877BBC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B11DC", Offset = "0x3B11DC")]
				get
				{
					return null;
				}
				[Token(Token = "0x600318B")]
				[Address(RVA = "0x877BC4", Offset = "0x877BC4", VA = "0x877BC4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B11EC", Offset = "0x3B11EC")]
				set
				{
				}
			}

			[Token(Token = "0x170005A4")]
			public List<Subscription> subscriptions
			{
				[Token(Token = "0x600318C")]
				[Address(RVA = "0x877BCC", Offset = "0x877BCC", VA = "0x877BCC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B11FC", Offset = "0x3B11FC")]
				get
				{
					return null;
				}
				[Token(Token = "0x600318D")]
				[Address(RVA = "0x877BD4", Offset = "0x877BD4", VA = "0x877BD4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B120C", Offset = "0x3B120C")]
				set
				{
				}
			}

			[Token(Token = "0x600318E")]
			[Address(RVA = "0x877BDC", Offset = "0x877BDC", VA = "0x877BDC")]
			public QuerySubscritionResponse()
			{
			}
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x8701A0", Offset = "0x8701A0", VA = "0x8701A0")]
		public static void IsReady(IAPurchaseListener listener, string pchAppKey)
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x8704B8", Offset = "0x8704B8", VA = "0x8704B8")]
		public static void Request(IAPurchaseListener listener, string pchPrice)
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x870764", Offset = "0x870764", VA = "0x870764")]
		public static void Request(IAPurchaseListener listener, string pchPrice, string pchUserData)
		{
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x870768", Offset = "0x870768", VA = "0x870768")]
		public static void Purchase(IAPurchaseListener listener, string pchPurchaseId)
		{
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x870A14", Offset = "0x870A14", VA = "0x870A14")]
		public static void Query(IAPurchaseListener listener, string pchPurchaseId)
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x870CC0", Offset = "0x870CC0", VA = "0x870CC0")]
		public static void Query(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x870CC4", Offset = "0x870CC4", VA = "0x870CC4")]
		public static void GetBalance(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0x870F1C", Offset = "0x870F1C", VA = "0x870F1C")]
		public static void RequestSubscription(IAPurchaseListener listener, string pchPrice, string pchFreeTrialType, int nFreeTrialValue, string pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, string pchPlanId)
		{
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0x871418", Offset = "0x871418", VA = "0x871418")]
		public static void RequestSubscriptionWithPlanID(IAPurchaseListener listener, string pchPlanId)
		{
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0x8716C4", Offset = "0x8716C4", VA = "0x8716C4")]
		public static void Subscribe(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x871970", Offset = "0x871970", VA = "0x871970")]
		public static void QuerySubscription(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0x871C1C", Offset = "0x871C1C", VA = "0x871C1C")]
		public static void CancelSubscription(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0x871EC8", Offset = "0x871EC8", VA = "0x871EC8")]
		public IAPurchase()
		{
		}
	}
	[Token(Token = "0x200021B")]
	public class DLC
	{
		[Token(Token = "0x60012B6")]
		[Address(RVA = "0x870198", Offset = "0x870198", VA = "0x870198")]
		public DLC()
		{
		}
	}
	[Token(Token = "0x200021C")]
	internal class Token
	{
		[Token(Token = "0x60012B7")]
		[Address(RVA = "0x87CACC", Offset = "0x87CACC", VA = "0x87CACC")]
		public Token()
		{
		}
	}
}
namespace Viveport.Internal
{
	[Token(Token = "0x200021D")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39A818", Offset = "0x39A818")]
	internal delegate void GetLicenseCallback(string message, string signature);
	[Token(Token = "0x200021E")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39A82C", Offset = "0x39A82C")]
	internal delegate void StatusCallback(int nResult);
	[Token(Token = "0x200021F")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39A840", Offset = "0x39A840")]
	internal delegate void StatusCallback2(int nResult, string message);
	[Token(Token = "0x2000220")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39A854", Offset = "0x39A854")]
	internal delegate void QueryRuntimeModeCallback(int nResult, int nMode);
	[Token(Token = "0x2000221")]
	internal enum ELeaderboardDataRequest
	{
		[Token(Token = "0x4001005")]
		k_ELeaderboardDataRequestGlobal,
		[Token(Token = "0x4001006")]
		k_ELeaderboardDataRequestGlobalAroundUser,
		[Token(Token = "0x4001007")]
		k_ELeaderboardDataRequestLocal,
		[Token(Token = "0x4001008")]
		k_ELeaderboardDataRequestLocaleAroundUser
	}
	[Token(Token = "0x2000222")]
	internal enum ELeaderboardDataTimeRange
	{
		[Token(Token = "0x400100A")]
		k_ELeaderboardDataScropeAllTime,
		[Token(Token = "0x400100B")]
		k_ELeaderboardDataScropeDaily,
		[Token(Token = "0x400100C")]
		k_ELeaderboardDataScropeWeekly,
		[Token(Token = "0x400100D")]
		k_ELeaderboardDataScropeMonthly
	}
	[Token(Token = "0x2000223")]
	internal enum ELeaderboardSortMethod
	{
		[Token(Token = "0x400100F")]
		k_ELeaderboardSortMethodNone,
		[Token(Token = "0x4001010")]
		k_ELeaderboardSortMethodAscending,
		[Token(Token = "0x4001011")]
		k_ELeaderboardSortMethodDescending
	}
	[Token(Token = "0x2000224")]
	internal enum ELeaderboardDisplayType
	{
		[Token(Token = "0x4001013")]
		k_ELeaderboardDisplayTypeNone,
		[Token(Token = "0x4001014")]
		k_ELeaderboardDisplayTypeNumeric,
		[Token(Token = "0x4001015")]
		k_ELeaderboardDisplayTypeTimeSeconds,
		[Token(Token = "0x4001016")]
		k_ELeaderboardDisplayTypeTimeMilliSeconds
	}
	[Token(Token = "0x2000225")]
	internal enum ELeaderboardUploadScoreMethod
	{
		[Token(Token = "0x4001018")]
		k_ELeaderboardUploadScoreMethodNone,
		[Token(Token = "0x4001019")]
		k_ELeaderboardUploadScoreMethodKeepBest,
		[Token(Token = "0x400101A")]
		k_ELeaderboardUploadScoreMethodForceUpdate
	}
	[Token(Token = "0x2000226")]
	internal enum ELocale
	{
		[Token(Token = "0x400101C")]
		k_ELocaleUS,
		[Token(Token = "0x400101D")]
		k_ELocaleDE,
		[Token(Token = "0x400101E")]
		k_ELocaleJP,
		[Token(Token = "0x400101F")]
		k_ELocaleKR,
		[Token(Token = "0x4001020")]
		k_ELocaleRU,
		[Token(Token = "0x4001021")]
		k_ELocaleCN,
		[Token(Token = "0x4001022")]
		k_ELocaleTW,
		[Token(Token = "0x4001023")]
		k_ELocaleFR
	}
	[Token(Token = "0x2000227")]
	internal enum EAchievementDisplayAttribute
	{
		[Token(Token = "0x4001025")]
		k_EAchievementDisplayAttributeName,
		[Token(Token = "0x4001026")]
		k_EAchievementDisplayAttributeDesc,
		[Token(Token = "0x4001027")]
		k_EAchievementDisplayAttributeHidden
	}
	[Token(Token = "0x2000228")]
	internal struct LeaderboardEntry_t
	{
		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int m_nGlobalRank;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal int m_nScore;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string m_pUserName;
	}
	[Token(Token = "0x2000229")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39A868", Offset = "0x39A868")]
	internal delegate void IAPurchaseCallback(int code, string message);
	[Token(Token = "0x200022A")]
	internal struct IAPCurrency_t
	{
		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal string m_pName;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal string m_pSymbol;
	}
	[Token(Token = "0x200022B")]
	internal class Api
	{
		[Token(Token = "0x2000733")]
		internal class AndroidLicenseChecker : AndroidJavaProxy
		{
			[Token(Token = "0x40027F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Viveport.Api.LicenseChecker checker;

			[Token(Token = "0x600318F")]
			[Address(RVA = "0x878CFC", Offset = "0x878CFC", VA = "0x878CFC")]
			internal AndroidLicenseChecker(Viveport.Api.LicenseChecker checker)
			{
			}

			[Token(Token = "0x6003190")]
			[Address(RVA = "0x878D98", Offset = "0x878D98", VA = "0x878D98")]
			internal void onSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired)
			{
			}

			[Token(Token = "0x6003191")]
			[Address(RVA = "0x879010", Offset = "0x879010", VA = "0x879010")]
			internal void onFailure(int errorCode, string errorMessage)
			{
			}
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0x86F294", Offset = "0x86F294", VA = "0x86F294")]
		internal static int Init(StatusCallback callback, string pchAppKey)
		{
			return default(int);
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0x86F580", Offset = "0x86F580", VA = "0x86F580")]
		internal static int Shutdown(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0x86F74C", Offset = "0x86F74C", VA = "0x86F74C")]
		internal static string Version()
		{
			return null;
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0x86EF38", Offset = "0x86EF38", VA = "0x86EF38")]
		internal static void GetLicense(Viveport.Api.LicenseChecker checker, string appId, string appKey)
		{
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0x878D90", Offset = "0x878D90", VA = "0x878D90")]
		public Api()
		{
		}
	}
	[Token(Token = "0x200022C")]
	internal class User
	{
		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x879F88", Offset = "0x879F88", VA = "0x879F88")]
		internal static string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x87A080", Offset = "0x87A080", VA = "0x87A080")]
		internal static string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x87A178", Offset = "0x87A178", VA = "0x87A178")]
		internal static string GetUserAvatarUrl()
		{
			return null;
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x87A270", Offset = "0x87A270", VA = "0x87A270")]
		public User()
		{
		}
	}
	[Token(Token = "0x200022D")]
	internal class UserStats
	{
		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x87A278", Offset = "0x87A278", VA = "0x87A278")]
		internal static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x87A3DC", Offset = "0x87A3DC", VA = "0x87A3DC")]
		internal static int DownloadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x87A540", Offset = "0x87A540", VA = "0x87A540")]
		internal static int UploadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x87A6A4", Offset = "0x87A6A4", VA = "0x87A6A4")]
		internal static int SetStat(string pchName, int nData)
		{
			return default(int);
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x87A80C", Offset = "0x87A80C", VA = "0x87A80C")]
		internal static int SetStat(string pchName, float fData)
		{
			return default(int);
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x87A980", Offset = "0x87A980", VA = "0x87A980")]
		internal static int GetStat(string pchName, int nData)
		{
			return default(int);
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x87AAE8", Offset = "0x87AAE8", VA = "0x87AAE8")]
		internal static float GetStat(string pchName, float fData)
		{
			return default(float);
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0x87AC5C", Offset = "0x87AC5C", VA = "0x87AC5C")]
		internal static bool GetAchievement(string pchName)
		{
			return default(bool);
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0x87AD50", Offset = "0x87AD50", VA = "0x87AD50")]
		internal static int GetAchievementUnlockTime(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0x87AE44", Offset = "0x87AE44", VA = "0x87AE44")]
		internal static int SetAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0x87AF38", Offset = "0x87AF38", VA = "0x87AF38")]
		internal static int ClearAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0x87B02C", Offset = "0x87B02C", VA = "0x87B02C")]
		internal static string GetAchievementDisplayAttribute(string pchName, EAchievementDisplayAttribute attr)
		{
			return null;
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0x87B194", Offset = "0x87B194", VA = "0x87B194")]
		internal static string GetAchievementDisplayAttribute(string pchName, EAchievementDisplayAttribute attr, ELocale locale)
		{
			return null;
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x87B35C", Offset = "0x87B35C", VA = "0x87B35C")]
		internal static string GetAchievementIcon(string pchName)
		{
			return null;
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x87B450", Offset = "0x87B450", VA = "0x87B450")]
		internal static int DownloadLeaderboardScores(StatusCallback callback, string pchLeaderboardName, ELeaderboardDataRequest nDataRequest, ELeaderboardDataTimeRange nTimeRange, int nRangeStart, int nRangeEnd)
		{
			return default(int);
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0x87B794", Offset = "0x87B794", VA = "0x87B794")]
		internal static int UploadLeaderboardScore(StatusCallback callback, string pchLeaderboardName, int nScores)
		{
			return default(int);
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x87B9B8", Offset = "0x87B9B8", VA = "0x87B9B8")]
		internal static Leaderboard GetLeaderboardScore(int nIndex)
		{
			return null;
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x87BC8C", Offset = "0x87BC8C", VA = "0x87BC8C")]
		internal static int GetLeaderboardScoreCount()
		{
			return default(int);
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0x87BDB4", Offset = "0x87BDB4", VA = "0x87BDB4")]
		internal static ELeaderboardSortMethod GetLeaderboardSortMethod()
		{
			return default(ELeaderboardSortMethod);
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x87BEDC", Offset = "0x87BEDC", VA = "0x87BEDC")]
		internal static ELeaderboardDisplayType GetLeaderboardDisplayType()
		{
			return default(ELeaderboardDisplayType);
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0x87C004", Offset = "0x87C004", VA = "0x87C004")]
		public UserStats()
		{
		}
	}
	[Token(Token = "0x200022E")]
	internal class IAPurchase
	{
		[Token(Token = "0x60012EA")]
		[Address(RVA = "0x870314", Offset = "0x870314", VA = "0x870314")]
		internal static void IsReady(IAPurchaseCallback callback, string pchAppKey)
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0x8705C0", Offset = "0x8705C0", VA = "0x8705C0")]
		internal static void Request(IAPurchaseCallback callback, string pchPrice)
		{
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x870870", Offset = "0x870870", VA = "0x870870")]
		internal static void Purchase(IAPurchaseCallback callback, string pchPurchaseId)
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0x870B1C", Offset = "0x870B1C", VA = "0x870B1C")]
		internal static void Query(IAPurchaseCallback callback, string pchPurchaseId)
		{
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0x870DC4", Offset = "0x870DC4", VA = "0x870DC4")]
		internal static void GetBalance(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0x87105C", Offset = "0x87105C", VA = "0x87105C")]
		internal static void RequestSubscription(IAPurchaseCallback callback, string pchPrice, string pchFreeTrialType, int nFreeTrialValue, string pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, string pchPlanId)
		{
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0x871520", Offset = "0x871520", VA = "0x871520")]
		internal static void RequestSubscriptionWithPlanID(IAPurchaseCallback callback, string pchPlanId)
		{
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0x8717CC", Offset = "0x8717CC", VA = "0x8717CC")]
		internal static void Subscribe(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0x871A78", Offset = "0x871A78", VA = "0x871A78")]
		internal static void QuerySubscription(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0x871D24", Offset = "0x871D24", VA = "0x871D24")]
		internal static void CancelSubscription(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0x879724", Offset = "0x879724", VA = "0x879724")]
		public IAPurchase()
		{
		}
	}
	[Token(Token = "0x200022F")]
	internal class Android
	{
		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaObject _api;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static AndroidJavaObject _iAPurchase;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaClass _unityPlayer;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static AndroidJavaObject _user;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaObject _userStats;

		[Token(Token = "0x170001E2")]
		internal static AndroidJavaClass UnityPlayer
		{
			[Token(Token = "0x60012F9")]
			[Address(RVA = "0x8782D0", Offset = "0x8782D0", VA = "0x8782D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E3")]
		internal static AndroidJavaObject CurrentActivity
		{
			[Token(Token = "0x60012FA")]
			[Address(RVA = "0x878378", Offset = "0x878378", VA = "0x878378")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E4")]
		internal static AndroidJavaObject CurrentContext
		{
			[Token(Token = "0x60012FB")]
			[Address(RVA = "0x8783F4", Offset = "0x8783F4", VA = "0x8783F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0x877D6C", Offset = "0x877D6C", VA = "0x877D6C")]
		internal static AndroidJavaObject GetJavaAPI()
		{
			return null;
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0x877EC8", Offset = "0x877EC8", VA = "0x877EC8")]
		internal static AndroidJavaObject GetJavaUser()
		{
			return null;
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0x878020", Offset = "0x878020", VA = "0x878020")]
		internal static AndroidJavaObject GetJavaUserStats()
		{
			return null;
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0x878178", Offset = "0x878178", VA = "0x878178")]
		internal static AndroidJavaObject GetJavaIAPurchase()
		{
			return null;
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x8783F8", Offset = "0x8783F8", VA = "0x8783F8")]
		public Android()
		{
		}
	}
	[Token(Token = "0x2000230")]
	internal class AndroidPluginCallback : AndroidJavaProxy
	{
		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IAPurchaseCallback callback;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private StatusCallback statusCallback;

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x878400", Offset = "0x878400", VA = "0x878400")]
		internal AndroidPluginCallback(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0x878494", Offset = "0x878494", VA = "0x878494")]
		internal AndroidPluginCallback(StatusCallback callback)
		{
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0x878528", Offset = "0x878528", VA = "0x878528")]
		internal void onResult(int statusCode, string result)
		{
		}
	}
}
namespace Viveport.Arcade
{
	[Token(Token = "0x2000231")]
	internal class Session
	{
		[Token(Token = "0x6001300")]
		[Address(RVA = "0x86FA34", Offset = "0x86FA34", VA = "0x86FA34")]
		public Session()
		{
		}
	}
}
namespace Viveport.Core
{
	[Token(Token = "0x2000232")]
	public class Logger
	{
		[Token(Token = "0x4001034")]
		private const string LoggerTypeNameUnity = "UnityEngine.Debug";

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _hasDetected;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool _usingUnityLog;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static Type _unityLogType;

		[Token(Token = "0x6001301")]
		[Address(RVA = "0x86FA44", Offset = "0x86FA44", VA = "0x86FA44")]
		public static void Log(string message)
		{
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0x86FEF4", Offset = "0x86FEF4", VA = "0x86FEF4")]
		private static void ConsoleLog(string message)
		{
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0x86FB44", Offset = "0x86FB44", VA = "0x86FB44")]
		private static void UnityLog(string message)
		{
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0x86FFAC", Offset = "0x86FFAC", VA = "0x86FFAC")]
		private static Type GetType(string typeName)
		{
			return null;
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0x870134", Offset = "0x870134", VA = "0x870134")]
		public Logger()
		{
		}
	}
}
namespace PublicKeyConvert
{
	[Token(Token = "0x2000233")]
	public class PEMKeyLoader
	{
		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte[] SeqOID;

		[Token(Token = "0x6001307")]
		[Address(RVA = "0x89021C", Offset = "0x89021C", VA = "0x89021C")]
		private static bool CompareBytearrays(byte[] a, byte[] b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0x8902D4", Offset = "0x8902D4", VA = "0x8902D4")]
		public static RSACryptoServiceProvider CryptoServiceProviderFromPublicKeyInfo(byte[] x509key)
		{
			return null;
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0x890864", Offset = "0x890864", VA = "0x890864")]
		public static RSACryptoServiceProvider CryptoServiceProviderFromPublicKeyInfo(string base64EncodedKey)
		{
			return null;
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0x8909A0", Offset = "0x8909A0", VA = "0x8909A0")]
		public PEMKeyLoader()
		{
		}
	}
}
namespace LitJson
{
	[Token(Token = "0x2000234")]
	public enum JsonType
	{
		[Token(Token = "0x400103A")]
		None,
		[Token(Token = "0x400103B")]
		Object,
		[Token(Token = "0x400103C")]
		Array,
		[Token(Token = "0x400103D")]
		String,
		[Token(Token = "0x400103E")]
		Int,
		[Token(Token = "0x400103F")]
		Long,
		[Token(Token = "0x4001040")]
		Double,
		[Token(Token = "0x4001041")]
		Boolean
	}
	[Token(Token = "0x2000235")]
	public interface IJsonWrapper : IList, ICollection, IEnumerable, IOrderedDictionary, IDictionary
	{
		[Token(Token = "0x170001E5")]
		bool IsArray
		{
			[Token(Token = "0x600130C")]
			get;
		}

		[Token(Token = "0x170001E6")]
		bool IsBoolean
		{
			[Token(Token = "0x600130D")]
			get;
		}

		[Token(Token = "0x170001E7")]
		bool IsDouble
		{
			[Token(Token = "0x600130E")]
			get;
		}

		[Token(Token = "0x170001E8")]
		bool IsInt
		{
			[Token(Token = "0x600130F")]
			get;
		}

		[Token(Token = "0x170001E9")]
		bool IsLong
		{
			[Token(Token = "0x6001310")]
			get;
		}

		[Token(Token = "0x170001EA")]
		bool IsObject
		{
			[Token(Token = "0x6001311")]
			get;
		}

		[Token(Token = "0x170001EB")]
		bool IsString
		{
			[Token(Token = "0x6001312")]
			get;
		}

		[Token(Token = "0x6001313")]
		bool GetBoolean();

		[Token(Token = "0x6001314")]
		double GetDouble();

		[Token(Token = "0x6001315")]
		int GetInt();

		[Token(Token = "0x6001316")]
		JsonType GetJsonType();

		[Token(Token = "0x6001317")]
		long GetLong();

		[Token(Token = "0x6001318")]
		string GetString();

		[Token(Token = "0x6001319")]
		void SetBoolean(bool val);

		[Token(Token = "0x600131A")]
		void SetDouble(double val);

		[Token(Token = "0x600131B")]
		void SetInt(int val);

		[Token(Token = "0x600131C")]
		void SetJsonType(JsonType type);

		[Token(Token = "0x600131D")]
		void SetLong(long val);

		[Token(Token = "0x600131E")]
		void SetString(string val);

		[Token(Token = "0x600131F")]
		string ToJson();

		[Token(Token = "0x6001320")]
		void ToJson(JsonWriter writer);
	}
	[Token(Token = "0x2000236")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x39A87C", Offset = "0x39A87C")]
	public class JsonData : IJsonWrapper, IList, ICollection, IEnumerable, IOrderedDictionary, IDictionary, IEquatable<JsonData>
	{
		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IList<JsonData> inst_array;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool inst_boolean;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double inst_double;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int inst_int;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private long inst_long;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IDictionary<string, JsonData> inst_object;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private string inst_string;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string json;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private JsonType type;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IList<KeyValuePair<string, JsonData>> object_list;

		[Token(Token = "0x170001EC")]
		public int Count
		{
			[Token(Token = "0x6001321")]
			[Address(RVA = "0x74A394", Offset = "0x74A394", VA = "0x74A394")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001ED")]
		public bool IsArray
		{
			[Token(Token = "0x6001322")]
			[Address(RVA = "0x74A55C", Offset = "0x74A55C", VA = "0x74A55C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001EE")]
		public bool IsBoolean
		{
			[Token(Token = "0x6001323")]
			[Address(RVA = "0x74A570", Offset = "0x74A570", VA = "0x74A570")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001EF")]
		public bool IsDouble
		{
			[Token(Token = "0x6001324")]
			[Address(RVA = "0x74A584", Offset = "0x74A584", VA = "0x74A584")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F0")]
		public bool IsInt
		{
			[Token(Token = "0x6001325")]
			[Address(RVA = "0x74A598", Offset = "0x74A598", VA = "0x74A598")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F1")]
		public bool IsLong
		{
			[Token(Token = "0x6001326")]
			[Address(RVA = "0x74A5AC", Offset = "0x74A5AC", VA = "0x74A5AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F2")]
		public bool IsObject
		{
			[Token(Token = "0x6001327")]
			[Address(RVA = "0x74A5C0", Offset = "0x74A5C0", VA = "0x74A5C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F3")]
		public bool IsString
		{
			[Token(Token = "0x6001328")]
			[Address(RVA = "0x74A5D4", Offset = "0x74A5D4", VA = "0x74A5D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F4")]
		private int System.Collections.ICollection.Count
		{
			[Token(Token = "0x6001329")]
			[Address(RVA = "0x74A5E8", Offset = "0x74A5E8", VA = "0x74A5E8", Slot = "37")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001F5")]
		private bool System.Collections.ICollection.IsSynchronized
		{
			[Token(Token = "0x600132A")]
			[Address(RVA = "0x74A5EC", Offset = "0x74A5EC", VA = "0x74A5EC", Slot = "39")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F6")]
		private object System.Collections.ICollection.SyncRoot
		{
			[Token(Token = "0x600132B")]
			[Address(RVA = "0x74A6C0", Offset = "0x74A6C0", VA = "0x74A6C0", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F7")]
		private bool System.Collections.IDictionary.IsFixedSize
		{
			[Token(Token = "0x600132C")]
			[Address(RVA = "0x74A794", Offset = "0x74A794", VA = "0x74A794", Slot = "54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F8")]
		private bool System.Collections.IDictionary.IsReadOnly
		{
			[Token(Token = "0x600132D")]
			[Address(RVA = "0x74A9C4", Offset = "0x74A9C4", VA = "0x74A9C4", Slot = "53")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F9")]
		private ICollection System.Collections.IDictionary.Keys
		{
			[Token(Token = "0x600132E")]
			[Address(RVA = "0x74AA98", Offset = "0x74AA98", VA = "0x74AA98", Slot = "48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FA")]
		private ICollection System.Collections.IDictionary.Values
		{
			[Token(Token = "0x600132F")]
			[Address(RVA = "0x74AE68", Offset = "0x74AE68", VA = "0x74AE68", Slot = "49")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FB")]
		private bool LitJson.IJsonWrapper.IsArray
		{
			[Token(Token = "0x6001330")]
			[Address(RVA = "0x74B238", Offset = "0x74B238", VA = "0x74B238", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FC")]
		private bool LitJson.IJsonWrapper.IsBoolean
		{
			[Token(Token = "0x6001331")]
			[Address(RVA = "0x74B24C", Offset = "0x74B24C", VA = "0x74B24C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FD")]
		private bool LitJson.IJsonWrapper.IsDouble
		{
			[Token(Token = "0x6001332")]
			[Address(RVA = "0x74B260", Offset = "0x74B260", VA = "0x74B260", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FE")]
		private bool LitJson.IJsonWrapper.IsInt
		{
			[Token(Token = "0x6001333")]
			[Address(RVA = "0x74B274", Offset = "0x74B274", VA = "0x74B274", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FF")]
		private bool LitJson.IJsonWrapper.IsLong
		{
			[Token(Token = "0x6001334")]
			[Address(RVA = "0x74B288", Offset = "0x74B288", VA = "0x74B288", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000200")]
		private bool LitJson.IJsonWrapper.IsObject
		{
			[Token(Token = "0x6001335")]
			[Address(RVA = "0x74B29C", Offset = "0x74B29C", VA = "0x74B29C", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000201")]
		private bool LitJson.IJsonWrapper.IsString
		{
			[Token(Token = "0x6001336")]
			[Address(RVA = "0x74B2B0", Offset = "0x74B2B0", VA = "0x74B2B0", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000202")]
		private bool System.Collections.IList.IsFixedSize
		{
			[Token(Token = "0x6001337")]
			[Address(RVA = "0x74B2C4", Offset = "0x74B2C4", VA = "0x74B2C4", Slot = "31")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000203")]
		private bool System.Collections.IList.IsReadOnly
		{
			[Token(Token = "0x6001338")]
			[Address(RVA = "0x74B4FC", Offset = "0x74B4FC", VA = "0x74B4FC", Slot = "30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000204")]
		private object System.Collections.IDictionary.Item
		{
			[Token(Token = "0x6001339")]
			[Address(RVA = "0x74B5D0", Offset = "0x74B5D0", VA = "0x74B5D0", Slot = "46")]
			get
			{
				return null;
			}
			[Token(Token = "0x600133A")]
			[Address(RVA = "0x74B6AC", Offset = "0x74B6AC", VA = "0x74B6AC", Slot = "47")]
			set
			{
			}
		}

		[Token(Token = "0x17000205")]
		private object System.Collections.Specialized.IOrderedDictionary.Item
		{
			[Token(Token = "0x600133B")]
			[Address(RVA = "0x74BC90", Offset = "0x74BC90", VA = "0x74BC90", Slot = "41")]
			get
			{
				return null;
			}
			[Token(Token = "0x600133C")]
			[Address(RVA = "0x74BD7C", Offset = "0x74BD7C", VA = "0x74BD7C", Slot = "42")]
			set
			{
			}
		}

		[Token(Token = "0x17000206")]
		private object System.Collections.IList.Item
		{
			[Token(Token = "0x600133D")]
			[Address(RVA = "0x74BFD8", Offset = "0x74BFD8", VA = "0x74BFD8", Slot = "25")]
			get
			{
				return null;
			}
			[Token(Token = "0x600133E")]
			[Address(RVA = "0x74C0B4", Offset = "0x74C0B4", VA = "0x74C0B4", Slot = "26")]
			set
			{
			}
		}

		[Token(Token = "0x17000207")]
		public JsonData Item
		{
			[Token(Token = "0x600133F")]
			[Address(RVA = "0x74C3E0", Offset = "0x74C3E0", VA = "0x74C3E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001340")]
			[Address(RVA = "0x74B84C", Offset = "0x74B84C", VA = "0x74B84C")]
			set
			{
			}
		}

		[Token(Token = "0x17000208")]
		public JsonData Item
		{
			[Token(Token = "0x6001341")]
			[Address(RVA = "0x74C4BC", Offset = "0x74C4BC", VA = "0x74C4BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001342")]
			[Address(RVA = "0x74C0E8", Offset = "0x74C0E8", VA = "0x74C0E8")]
			set
			{
			}
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0x74C648", Offset = "0x74C648", VA = "0x74C648")]
		public JsonData()
		{
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0x74C650", Offset = "0x74C650", VA = "0x74C650")]
		public JsonData(bool boolean)
		{
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0x74C678", Offset = "0x74C678", VA = "0x74C678")]
		public JsonData(double number)
		{
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0x74C6A8", Offset = "0x74C6A8", VA = "0x74C6A8")]
		public JsonData(int number)
		{
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0x74C6D0", Offset = "0x74C6D0", VA = "0x74C6D0")]
		public JsonData(long number)
		{
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0x74C700", Offset = "0x74C700", VA = "0x74C700")]
		public JsonData(object obj)
		{
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0x74C920", Offset = "0x74C920", VA = "0x74C920")]
		public JsonData(string str)
		{
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0x74C948", Offset = "0x74C948", VA = "0x74C948")]
		public static implicit operator JsonData(bool data)
		{
			return null;
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0x74C9BC", Offset = "0x74C9BC", VA = "0x74C9BC")]
		public static implicit operator JsonData(double data)
		{
			return null;
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0x74CA38", Offset = "0x74CA38", VA = "0x74CA38")]
		public static implicit operator JsonData(int data)
		{
			return null;
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0x74CAAC", Offset = "0x74CAAC", VA = "0x74CAAC")]
		public static implicit operator JsonData(long data)
		{
			return null;
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0x74CB28", Offset = "0x74CB28", VA = "0x74CB28")]
		public static implicit operator JsonData(string data)
		{
			return null;
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0x74CB9C", Offset = "0x74CB9C", VA = "0x74CB9C")]
		public static explicit operator bool(JsonData data)
		{
			return default(bool);
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0x74CC48", Offset = "0x74CC48", VA = "0x74CC48")]
		public static explicit operator double(JsonData data)
		{
			return default(double);
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0x74CCF8", Offset = "0x74CCF8", VA = "0x74CCF8")]
		public static explicit operator int(JsonData data)
		{
			return default(int);
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0x74CDA4", Offset = "0x74CDA4", VA = "0x74CDA4")]
		public static explicit operator long(JsonData data)
		{
			return default(long);
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0x74CE50", Offset = "0x74CE50", VA = "0x74CE50")]
		public static explicit operator string(JsonData data)
		{
			return null;
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0x74CEFC", Offset = "0x74CEFC", VA = "0x74CEFC", Slot = "36")]
		private void System.Collections.ICollection.CopyTo(Array array, int index)
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0x74CFE0", Offset = "0x74CFE0", VA = "0x74CFE0", Slot = "51")]
		private void System.Collections.IDictionary.Add(object key, object value)
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0x74D1D8", Offset = "0x74D1D8", VA = "0x74D1D8", Slot = "52")]
		private void System.Collections.IDictionary.Clear()
		{
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0x74D33C", Offset = "0x74D33C", VA = "0x74D33C", Slot = "50")]
		private bool System.Collections.IDictionary.Contains(object key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0x74D418", Offset = "0x74D418", VA = "0x74D418", Slot = "55")]
		private IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0x74D4D4", Offset = "0x74D4D4", VA = "0x74D4D4", Slot = "56")]
		private void System.Collections.IDictionary.Remove(object key)
		{
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0x74D7D0", Offset = "0x74D7D0", VA = "0x74D7D0", Slot = "40")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0x74D8A4", Offset = "0x74D8A4", VA = "0x74D8A4", Slot = "11")]
		private bool LitJson.IJsonWrapper.GetBoolean()
		{
			return default(bool);
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0x74D944", Offset = "0x74D944", VA = "0x74D944", Slot = "12")]
		private double LitJson.IJsonWrapper.GetDouble()
		{
			return default(double);
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0x74D9E8", Offset = "0x74D9E8", VA = "0x74D9E8", Slot = "13")]
		private int LitJson.IJsonWrapper.GetInt()
		{
			return default(int);
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0x74DA88", Offset = "0x74DA88", VA = "0x74DA88", Slot = "15")]
		private long LitJson.IJsonWrapper.GetLong()
		{
			return default(long);
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0x74DB28", Offset = "0x74DB28", VA = "0x74DB28", Slot = "16")]
		private string LitJson.IJsonWrapper.GetString()
		{
			return null;
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x74DBC8", Offset = "0x74DBC8", VA = "0x74DBC8", Slot = "17")]
		private void LitJson.IJsonWrapper.SetBoolean(bool val)
		{
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0x74DBE0", Offset = "0x74DBE0", VA = "0x74DBE0", Slot = "18")]
		private void LitJson.IJsonWrapper.SetDouble(double val)
		{
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0x74DC00", Offset = "0x74DC00", VA = "0x74DC00", Slot = "19")]
		private void LitJson.IJsonWrapper.SetInt(int val)
		{
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0x74DC18", Offset = "0x74DC18", VA = "0x74DC18", Slot = "21")]
		private void LitJson.IJsonWrapper.SetLong(long val)
		{
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0x74DC38", Offset = "0x74DC38", VA = "0x74DC38", Slot = "22")]
		private void LitJson.IJsonWrapper.SetString(string val)
		{
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0x74DC50", Offset = "0x74DC50", VA = "0x74DC50", Slot = "23")]
		private string LitJson.IJsonWrapper.ToJson()
		{
			return null;
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0x74DD30", Offset = "0x74DD30", VA = "0x74DD30", Slot = "24")]
		private void LitJson.IJsonWrapper.ToJson(JsonWriter writer)
		{
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0x74DD94", Offset = "0x74DD94", VA = "0x74DD94", Slot = "27")]
		private int System.Collections.IList.Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0x74DE88", Offset = "0x74DE88", VA = "0x74DE88", Slot = "29")]
		private void System.Collections.IList.Clear()
		{
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0x74DF64", Offset = "0x74DF64", VA = "0x74DF64", Slot = "28")]
		private bool System.Collections.IList.Contains(object value)
		{
			return default(bool);
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0x74E040", Offset = "0x74E040", VA = "0x74E040", Slot = "32")]
		private int System.Collections.IList.IndexOf(object value)
		{
			return default(int);
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0x74E11C", Offset = "0x74E11C", VA = "0x74E11C", Slot = "33")]
		private void System.Collections.IList.Insert(int index, object value)
		{
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0x74E210", Offset = "0x74E210", VA = "0x74E210", Slot = "34")]
		private void System.Collections.IList.Remove(object value)
		{
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0x74E2F4", Offset = "0x74E2F4", VA = "0x74E2F4", Slot = "35")]
		private void System.Collections.IList.RemoveAt(int index)
		{
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0x74E3D8", Offset = "0x74E3D8", VA = "0x74E3D8", Slot = "43")]
		private IDictionaryEnumerator System.Collections.Specialized.IOrderedDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0x74E4D8", Offset = "0x74E4D8", VA = "0x74E4D8", Slot = "44")]
		private void System.Collections.Specialized.IOrderedDictionary.Insert(int idx, object key, object value)
		{
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0x74E64C", Offset = "0x74E64C", VA = "0x74E64C", Slot = "45")]
		private void System.Collections.Specialized.IOrderedDictionary.RemoveAt(int idx)
		{
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0x74A468", Offset = "0x74A468", VA = "0x74A468")]
		private ICollection EnsureCollection()
		{
			return null;
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0x74A868", Offset = "0x74A868", VA = "0x74A868")]
		private IDictionary EnsureDictionary()
		{
			return null;
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0x74B398", Offset = "0x74B398", VA = "0x74B398")]
		private IList EnsureList()
		{
			return null;
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0x74B7A4", Offset = "0x74B7A4", VA = "0x74B7A4")]
		private JsonData ToJsonData(object obj)
		{
			return null;
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0x74E850", Offset = "0x74E850", VA = "0x74E850")]
		private static void WriteJson(IJsonWrapper obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0x74DD98", Offset = "0x74DD98", VA = "0x74DD98")]
		public int Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0x74F634", Offset = "0x74F634", VA = "0x74F634")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0x74F770", Offset = "0x74F770", VA = "0x74F770", Slot = "57")]
		public bool Equals(JsonData x)
		{
			return default(bool);
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0x74F8B4", Offset = "0x74F8B4", VA = "0x74F8B4", Slot = "14")]
		public JsonType GetJsonType()
		{
			return default(JsonType);
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0x74F8BC", Offset = "0x74F8BC", VA = "0x74F8BC", Slot = "20")]
		public void SetJsonType(JsonType type)
		{
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0x74DC54", Offset = "0x74DC54", VA = "0x74DC54")]
		public string ToJson()
		{
			return null;
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0x74DD34", Offset = "0x74DD34", VA = "0x74DD34")]
		public void ToJson(JsonWriter writer)
		{
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0x74FA2C", Offset = "0x74FA2C", VA = "0x74FA2C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000237")]
	internal class OrderedDictionaryEnumerator : IDictionaryEnumerator, IEnumerator
	{
		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IEnumerator<KeyValuePair<string, JsonData>> list_enumerator;

		[Token(Token = "0x17000209")]
		public object Current
		{
			[Token(Token = "0x600137E")]
			[Address(RVA = "0x6BFA88", Offset = "0x6BFA88", VA = "0x6BFA88", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020A")]
		public DictionaryEntry Entry
		{
			[Token(Token = "0x600137F")]
			[Address(RVA = "0x6BFB04", Offset = "0x6BFB04", VA = "0x6BFB04", Slot = "6")]
			get
			{
				return default(DictionaryEntry);
			}
		}

		[Token(Token = "0x1700020B")]
		public object Key
		{
			[Token(Token = "0x6001380")]
			[Address(RVA = "0x6BFBFC", Offset = "0x6BFBFC", VA = "0x6BFBFC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020C")]
		public object Value
		{
			[Token(Token = "0x6001381")]
			[Address(RVA = "0x6BFCD8", Offset = "0x6BFCD8", VA = "0x6BFCD8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0x6BFDB4", Offset = "0x6BFDB4", VA = "0x6BFDB4")]
		public OrderedDictionaryEnumerator(IEnumerator<KeyValuePair<string, JsonData>> enumerator)
		{
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0x6BFDD4", Offset = "0x6BFDD4", VA = "0x6BFDD4", Slot = "7")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0x6BFEA0", Offset = "0x6BFEA0", VA = "0x6BFEA0", Slot = "9")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x2000238")]
	public class JsonException : ApplicationException
	{
		[Token(Token = "0x6001385")]
		[Address(RVA = "0x74FB20", Offset = "0x74FB20", VA = "0x74FB20")]
		public JsonException()
		{
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0x74FB28", Offset = "0x74FB28", VA = "0x74FB28")]
		internal JsonException(ParserToken token)
		{
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0x74FBC0", Offset = "0x74FBC0", VA = "0x74FBC0")]
		internal JsonException(ParserToken token, Exception inner_exception)
		{
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0x74FC60", Offset = "0x74FC60", VA = "0x74FC60")]
		internal JsonException(int c)
		{
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0x74FCF8", Offset = "0x74FCF8", VA = "0x74FCF8")]
		internal JsonException(int c, Exception inner_exception)
		{
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0x74FD98", Offset = "0x74FD98", VA = "0x74FD98")]
		public JsonException(string message)
		{
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0x74FDA0", Offset = "0x74FDA0", VA = "0x74FDA0")]
		public JsonException(string message, Exception inner_exception)
		{
		}
	}
	[Token(Token = "0x2000239")]
	internal struct PropertyMetadata
	{
		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MemberInfo Info;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool IsField;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Type Type;
	}
	[Token(Token = "0x200023A")]
	internal struct ArrayMetadata
	{
		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type element_type;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private bool is_array;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		private bool is_list;

		[Token(Token = "0x1700020D")]
		public Type ElementType
		{
			[Token(Token = "0x600138C")]
			[Address(RVA = "0x4576EC", Offset = "0x4576EC", VA = "0x4576EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600138D")]
			[Address(RVA = "0x4576F4", Offset = "0x4576F4", VA = "0x4576F4")]
			set
			{
			}
		}

		[Token(Token = "0x1700020E")]
		public bool IsArray
		{
			[Token(Token = "0x600138E")]
			[Address(RVA = "0x4576FC", Offset = "0x4576FC", VA = "0x4576FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600138F")]
			[Address(RVA = "0x457704", Offset = "0x457704", VA = "0x457704")]
			set
			{
			}
		}

		[Token(Token = "0x1700020F")]
		public bool IsList
		{
			[Token(Token = "0x6001390")]
			[Address(RVA = "0x45770C", Offset = "0x45770C", VA = "0x45770C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001391")]
			[Address(RVA = "0x457714", Offset = "0x457714", VA = "0x457714")]
			set
			{
			}
		}
	}
	[Token(Token = "0x200023B")]
	internal struct ObjectMetadata
	{
		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type element_type;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private bool is_dictionary;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IDictionary<string, PropertyMetadata> properties;

		[Token(Token = "0x17000210")]
		public Type ElementType
		{
			[Token(Token = "0x6001392")]
			[Address(RVA = "0x45729C", Offset = "0x45729C", VA = "0x45729C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001393")]
			[Address(RVA = "0x4572A4", Offset = "0x4572A4", VA = "0x4572A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000211")]
		public bool IsDictionary
		{
			[Token(Token = "0x6001394")]
			[Address(RVA = "0x4572AC", Offset = "0x4572AC", VA = "0x4572AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001395")]
			[Address(RVA = "0x4572B4", Offset = "0x4572B4", VA = "0x4572B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000212")]
		public IDictionary<string, PropertyMetadata> Properties
		{
			[Token(Token = "0x6001396")]
			[Address(RVA = "0x4572BC", Offset = "0x4572BC", VA = "0x4572BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001397")]
			[Address(RVA = "0x4572C4", Offset = "0x4572C4", VA = "0x4572C4")]
			set
			{
			}
		}
	}
	[Token(Token = "0x200023C")]
	internal delegate void ExporterFunc(object obj, JsonWriter writer);
	[Token(Token = "0x200023D")]
	public delegate void ExporterFunc<T>(T obj, JsonWriter writer);
	[Token(Token = "0x200023E")]
	internal delegate object ImporterFunc(object input);
	[Token(Token = "0x200023F")]
	public delegate TValue ImporterFunc<TJson, TValue>(TJson input);
	[Token(Token = "0x2000240")]
	public delegate IJsonWrapper WrapperFactory();
	[Token(Token = "0x2000241")]
	public class JsonMapper
	{
		[Serializable]
		[Token(Token = "0x2000734")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BF14", Offset = "0x39BF14")]
		private sealed class <>c
		{
			[Token(Token = "0x40027F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40027F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static ExporterFunc <>9__23_0;

			[Token(Token = "0x40027F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static ExporterFunc <>9__23_1;

			[Token(Token = "0x40027F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public static ExporterFunc <>9__23_2;

			[Token(Token = "0x40027F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static ExporterFunc <>9__23_3;

			[Token(Token = "0x40027F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public static ExporterFunc <>9__23_4;

			[Token(Token = "0x40027FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static ExporterFunc <>9__23_5;

			[Token(Token = "0x40027FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public static ExporterFunc <>9__23_6;

			[Token(Token = "0x40027FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static ExporterFunc <>9__23_7;

			[Token(Token = "0x40027FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public static ExporterFunc <>9__23_8;

			[Token(Token = "0x40027FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static ExporterFunc <>9__23_9;

			[Token(Token = "0x40027FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public static ImporterFunc <>9__24_0;

			[Token(Token = "0x4002800")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static ImporterFunc <>9__24_1;

			[Token(Token = "0x4002801")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public static ImporterFunc <>9__24_2;

			[Token(Token = "0x4002802")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static ImporterFunc <>9__24_3;

			[Token(Token = "0x4002803")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public static ImporterFunc <>9__24_4;

			[Token(Token = "0x4002804")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static ImporterFunc <>9__24_5;

			[Token(Token = "0x4002805")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public static ImporterFunc <>9__24_6;

			[Token(Token = "0x4002806")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static ImporterFunc <>9__24_7;

			[Token(Token = "0x4002807")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public static ImporterFunc <>9__24_8;

			[Token(Token = "0x4002808")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static ImporterFunc <>9__24_9;

			[Token(Token = "0x4002809")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public static ImporterFunc <>9__24_10;

			[Token(Token = "0x400280A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static ImporterFunc <>9__24_11;

			[Token(Token = "0x400280B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public static ImporterFunc <>9__24_12;

			[Token(Token = "0x400280C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static WrapperFactory <>9__29_0;

			[Token(Token = "0x400280D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public static WrapperFactory <>9__30_0;

			[Token(Token = "0x400280E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public static WrapperFactory <>9__31_0;

			[Token(Token = "0x6003193")]
			[Address(RVA = "0x6B7ED0", Offset = "0x6B7ED0", VA = "0x6B7ED0")]
			public <>c()
			{
			}

			[Token(Token = "0x6003194")]
			[Address(RVA = "0x6B7ED8", Offset = "0x6B7ED8", VA = "0x6B7ED8")]
			internal void <RegisterBaseExporters>b__23_0(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6003195")]
			[Address(RVA = "0x6B80B4", Offset = "0x6B80B4", VA = "0x6B80B4")]
			internal void <RegisterBaseExporters>b__23_1(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6003196")]
			[Address(RVA = "0x6B823C", Offset = "0x6B823C", VA = "0x6B823C")]
			internal void <RegisterBaseExporters>b__23_2(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6003197")]
			[Address(RVA = "0x6B835C", Offset = "0x6B835C", VA = "0x6B835C")]
			internal void <RegisterBaseExporters>b__23_3(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6003198")]
			[Address(RVA = "0x6B852C", Offset = "0x6B852C", VA = "0x6B852C")]
			internal void <RegisterBaseExporters>b__23_4(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6003199")]
			[Address(RVA = "0x6B860C", Offset = "0x6B860C", VA = "0x6B860C")]
			internal void <RegisterBaseExporters>b__23_5(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x600319A")]
			[Address(RVA = "0x6B86EC", Offset = "0x6B86EC", VA = "0x6B86EC")]
			internal void <RegisterBaseExporters>b__23_6(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x600319B")]
			[Address(RVA = "0x6B87CC", Offset = "0x6B87CC", VA = "0x6B87CC")]
			internal void <RegisterBaseExporters>b__23_7(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x600319C")]
			[Address(RVA = "0x6B89C0", Offset = "0x6B89C0", VA = "0x6B89C0")]
			internal void <RegisterBaseExporters>b__23_8(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x600319D")]
			[Address(RVA = "0x6B8A6C", Offset = "0x6B8A6C", VA = "0x6B8A6C")]
			internal void <RegisterBaseExporters>b__23_9(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x600319E")]
			[Address(RVA = "0x6B8CA4", Offset = "0x6B8CA4", VA = "0x6B8CA4")]
			internal object <RegisterBaseImporters>b__24_0(object input)
			{
				return null;
			}

			[Token(Token = "0x600319F")]
			[Address(RVA = "0x6B8D8C", Offset = "0x6B8D8C", VA = "0x6B8D8C")]
			internal object <RegisterBaseImporters>b__24_1(object input)
			{
				return null;
			}

			[Token(Token = "0x60031A0")]
			[Address(RVA = "0x6B8E74", Offset = "0x6B8E74", VA = "0x6B8E74")]
			internal object <RegisterBaseImporters>b__24_2(object input)
			{
				return null;
			}

			[Token(Token = "0x60031A1")]
			[Address(RVA = "0x6B8F5C", Offset = "0x6B8F5C", VA = "0x6B8F5C")]
			internal object <RegisterBaseImporters>b__24_3(object input)
			{
				return null;
			}

			[Token(Token = "0x60031A2")]
			[Address(RVA = "0x6B9044", Offset = "0x6B9044", VA = "0x6B9044")]
			internal object <RegisterBaseImporters>b__24_4(object input)
			{
				return null;
			}

			[Token(Token = "0x60031A3")]
			[Address(RVA = "0x6B912C", Offset = "0x6B912C", VA = "0x6B912C")]
			internal object <RegisterBaseImporters>b__24_5(object input)
			{
				return null;
			}

			[Token(Token = "0x60031A4")]
			[Address(RVA = "0x6B9214", Offset = "0x6B9214", VA = "0x6B9214")]
			internal object <RegisterBaseImporters>b__24_6(object input)
			{
				return null;
			}

			[Token(Token = "0x60031A5")]
			[Address(RVA = "0x6B92FC", Offset = "0x6B92FC", VA = "0x6B92FC")]
			internal object <RegisterBaseImporters>b__24_7(object input)
			{
				return null;
			}

			[Token(Token = "0x60031A6")]
			[Address(RVA = "0x6B93EC", Offset = "0x6B93EC", VA = "0x6B93EC")]
			internal object <RegisterBaseImporters>b__24_8(object input)
			{
				return null;
			}

			[Token(Token = "0x60031A7")]
			[Address(RVA = "0x6B94D4", Offset = "0x6B94D4", VA = "0x6B94D4")]
			internal object <RegisterBaseImporters>b__24_9(object input)
			{
				return null;
			}

			[Token(Token = "0x60031A8")]
			[Address(RVA = "0x6B95CC", Offset = "0x6B95CC", VA = "0x6B95CC")]
			internal object <RegisterBaseImporters>b__24_10(object input)
			{
				return null;
			}

			[Token(Token = "0x60031A9")]
			[Address(RVA = "0x6B96B4", Offset = "0x6B96B4", VA = "0x6B96B4")]
			internal object <RegisterBaseImporters>b__24_11(object input)
			{
				return null;
			}

			[Token(Token = "0x60031AA")]
			[Address(RVA = "0x6B9790", Offset = "0x6B9790", VA = "0x6B9790")]
			internal object <RegisterBaseImporters>b__24_12(object input)
			{
				return null;
			}

			[Token(Token = "0x60031AB")]
			[Address(RVA = "0x6B98B4", Offset = "0x6B98B4", VA = "0x6B98B4")]
			internal IJsonWrapper <ToObject>b__29_0()
			{
				return null;
			}

			[Token(Token = "0x60031AC")]
			[Address(RVA = "0x6B9918", Offset = "0x6B9918", VA = "0x6B9918")]
			internal IJsonWrapper <ToObject>b__30_0()
			{
				return null;
			}

			[Token(Token = "0x60031AD")]
			[Address(RVA = "0x6B997C", Offset = "0x6B997C", VA = "0x6B997C")]
			internal IJsonWrapper <ToObject>b__31_0()
			{
				return null;
			}
		}

		[Token(Token = "0x2000735")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BF24", Offset = "0x39BF24")]
		private sealed class <>c__DisplayClass37_0<T>
		{
			[Token(Token = "0x400280F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ExporterFunc<T> exporter;

			[Token(Token = "0x60031AE")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x60031AF")]
			internal void <RegisterExporter>b__0(object obj, JsonWriter writer)
			{
			}
		}

		[Token(Token = "0x2000736")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BF34", Offset = "0x39BF34")]
		private sealed class <>c__DisplayClass38_0<TJson, TValue>
		{
			[Token(Token = "0x4002810")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ImporterFunc<TJson, TValue> importer;

			[Token(Token = "0x60031B0")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x60031B1")]
			internal object <RegisterImporter>b__0(object input)
			{
				return null;
			}
		}

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int max_nesting_depth;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static IFormatProvider datetime_format;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IDictionary<Type, ExporterFunc> base_exporters_table;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static IDictionary<Type, ExporterFunc> custom_exporters_table;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IDictionary<Type, IDictionary<Type, ImporterFunc>> base_importers_table;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static IDictionary<Type, IDictionary<Type, ImporterFunc>> custom_importers_table;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IDictionary<Type, ArrayMetadata> array_metadata;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static readonly object array_metadata_lock;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IDictionary<Type, IDictionary<Type, MethodInfo>> conv_ops;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static readonly object conv_ops_lock;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static IDictionary<Type, ObjectMetadata> object_metadata;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private static readonly object object_metadata_lock;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static IDictionary<Type, IList<PropertyMetadata>> type_properties;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private static readonly object type_properties_lock;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static JsonWriter static_writer;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private static readonly object static_writer_lock;

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0x74FDA8", Offset = "0x74FDA8", VA = "0x74FDA8")]
		static JsonMapper()
		{
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0x752254", Offset = "0x752254", VA = "0x752254")]
		private static void AddArrayMetadata(Type type)
		{
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0x7527F0", Offset = "0x7527F0", VA = "0x7527F0")]
		private static void AddObjectMetadata(Type type)
		{
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x752FF0", Offset = "0x752FF0", VA = "0x752FF0")]
		private static void AddTypeProperties(Type type)
		{
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0x7535CC", Offset = "0x7535CC", VA = "0x7535CC")]
		private static MethodInfo GetConvOp(Type t1, Type t2)
		{
			return null;
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0x754060", Offset = "0x754060", VA = "0x754060")]
		private static object ReadValue(Type inst_type, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x7554D0", Offset = "0x7554D0", VA = "0x7554D0")]
		private static IJsonWrapper ReadValue(WrapperFactory factory, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0x7500C0", Offset = "0x7500C0", VA = "0x7500C0")]
		private static void RegisterBaseExporters()
		{
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x75121C", Offset = "0x75121C", VA = "0x75121C")]
		private static void RegisterBaseImporters()
		{
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0x755D2C", Offset = "0x755D2C", VA = "0x755D2C")]
		private static void RegisterImporter(IDictionary<Type, IDictionary<Type, ImporterFunc>> table, Type json_type, Type value_type, ImporterFunc importer)
		{
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0x755FD8", Offset = "0x755FD8", VA = "0x755FD8")]
		private static void WriteValue(object obj, JsonWriter writer, bool writer_is_private, int depth)
		{
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0x757B00", Offset = "0x757B00", VA = "0x757B00")]
		public static string ToJson(object obj)
		{
			return null;
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x757CA4", Offset = "0x757CA4", VA = "0x757CA4")]
		public static void ToJson(object obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x757D34", Offset = "0x757D34", VA = "0x757D34")]
		public static JsonData ToObject(JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0x757F30", Offset = "0x757F30", VA = "0x757F30")]
		public static JsonData ToObject(TextReader reader)
		{
			return null;
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0x7580D0", Offset = "0x7580D0", VA = "0x7580D0")]
		public static JsonData ToObject(string json)
		{
			return null;
		}

		[Token(Token = "0x60013BC")]
		public static T ToObject<T>(JsonReader reader)
		{
			return (T)null;
		}

		[Token(Token = "0x60013BD")]
		public static T ToObject<T>(TextReader reader)
		{
			return (T)null;
		}

		[Token(Token = "0x60013BE")]
		public static T ToObject<T>(string json)
		{
			return (T)null;
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0x757EB0", Offset = "0x757EB0", VA = "0x757EB0")]
		public static IJsonWrapper ToWrapper(WrapperFactory factory, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0x75824C", Offset = "0x75824C", VA = "0x75824C")]
		public static IJsonWrapper ToWrapper(WrapperFactory factory, string json)
		{
			return null;
		}

		[Token(Token = "0x60013C1")]
		public static void RegisterExporter<T>(ExporterFunc<T> exporter)
		{
		}

		[Token(Token = "0x60013C2")]
		public static void RegisterImporter<TJson, TValue>(ImporterFunc<TJson, TValue> importer)
		{
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0x7582F0", Offset = "0x7582F0", VA = "0x7582F0")]
		public static void UnregisterExporters()
		{
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x7583EC", Offset = "0x7583EC", VA = "0x7583EC")]
		public static void UnregisterImporters()
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x7584E8", Offset = "0x7584E8", VA = "0x7584E8")]
		public JsonMapper()
		{
		}
	}
	[Token(Token = "0x2000242")]
	public enum JsonToken
	{
		[Token(Token = "0x4001067")]
		None,
		[Token(Token = "0x4001068")]
		ObjectStart,
		[Token(Token = "0x4001069")]
		PropertyName,
		[Token(Token = "0x400106A")]
		ObjectEnd,
		[Token(Token = "0x400106B")]
		ArrayStart,
		[Token(Token = "0x400106C")]
		ArrayEnd,
		[Token(Token = "0x400106D")]
		Int,
		[Token(Token = "0x400106E")]
		Long,
		[Token(Token = "0x400106F")]
		Double,
		[Token(Token = "0x4001070")]
		String,
		[Token(Token = "0x4001071")]
		Boolean,
		[Token(Token = "0x4001072")]
		Null
	}
	[Token(Token = "0x2000243")]
	public class JsonReader
	{
		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IDictionary<int, IDictionary<int, int[]>> parse_table;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private Stack<int> automaton_stack;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private int current_input;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int current_symbol;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool end_of_json;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		private bool end_of_input;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Lexer lexer;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool parser_in_string;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool parser_return;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		private bool read_started;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextReader reader;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool reader_is_owned;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private object token_value;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private JsonToken token;

		[Token(Token = "0x17000213")]
		public bool AllowComments
		{
			[Token(Token = "0x60013C6")]
			[Address(RVA = "0x6B99E0", Offset = "0x6B99E0", VA = "0x6B99E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013C7")]
			[Address(RVA = "0x6B9A00", Offset = "0x6B9A00", VA = "0x6B9A00")]
			set
			{
			}
		}

		[Token(Token = "0x17000214")]
		public bool AllowSingleQuotedStrings
		{
			[Token(Token = "0x60013C8")]
			[Address(RVA = "0x6B9A24", Offset = "0x6B9A24", VA = "0x6B9A24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013C9")]
			[Address(RVA = "0x6B9A44", Offset = "0x6B9A44", VA = "0x6B9A44")]
			set
			{
			}
		}

		[Token(Token = "0x17000215")]
		public bool EndOfInput
		{
			[Token(Token = "0x60013CA")]
			[Address(RVA = "0x6B9A68", Offset = "0x6B9A68", VA = "0x6B9A68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000216")]
		public bool EndOfJson
		{
			[Token(Token = "0x60013CB")]
			[Address(RVA = "0x6B9A70", Offset = "0x6B9A70", VA = "0x6B9A70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000217")]
		public JsonToken Token
		{
			[Token(Token = "0x60013CC")]
			[Address(RVA = "0x6B9A78", Offset = "0x6B9A78", VA = "0x6B9A78")]
			get
			{
				return default(JsonToken);
			}
		}

		[Token(Token = "0x17000218")]
		public object Value
		{
			[Token(Token = "0x60013CD")]
			[Address(RVA = "0x6B9A80", Offset = "0x6B9A80", VA = "0x6B9A80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x6B9A88", Offset = "0x6B9A88", VA = "0x6B9A88")]
		static JsonReader()
		{
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x6BA2CC", Offset = "0x6BA2CC", VA = "0x6BA2CC")]
		public JsonReader(string json_text)
		{
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x6BA4BC", Offset = "0x6BA4BC", VA = "0x6BA4BC")]
		public JsonReader(TextReader reader)
		{
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x6BA348", Offset = "0x6BA348", VA = "0x6BA348")]
		private JsonReader(TextReader reader, bool owned)
		{
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x6B9A8C", Offset = "0x6B9A8C", VA = "0x6B9A8C")]
		private static void PopulateParseTable()
		{
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x6BA6CC", Offset = "0x6BA6CC", VA = "0x6BA6CC")]
		private static void TableAddCol(ParserToken row, int col, params int[] symbols)
		{
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x6BA594", Offset = "0x6BA594", VA = "0x6BA594")]
		private static void TableAddRow(ParserToken rule)
		{
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x6BA870", Offset = "0x6BA870", VA = "0x6BA870")]
		private void ProcessNumber(string number)
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x6BAA44", Offset = "0x6BAA44", VA = "0x6BAA44")]
		private void ProcessSymbol()
		{
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0x6BAC34", Offset = "0x6BAC34", VA = "0x6BAC34")]
		private bool ReadToken()
		{
			return default(bool);
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0x6BAF38", Offset = "0x6BAF38", VA = "0x6BAF38")]
		public void Close()
		{
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0x6BAF94", Offset = "0x6BAF94", VA = "0x6BAF94")]
		public bool Read()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000244")]
	internal enum Condition
	{
		[Token(Token = "0x4001082")]
		InArray,
		[Token(Token = "0x4001083")]
		InObject,
		[Token(Token = "0x4001084")]
		NotAProperty,
		[Token(Token = "0x4001085")]
		Property,
		[Token(Token = "0x4001086")]
		Value
	}
	[Token(Token = "0x2000245")]
	internal class WriterContext
	{
		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Count;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool InArray;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		public bool InObject;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		public bool ExpectingValue;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Padding;

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x6BBB58", Offset = "0x6BBB58", VA = "0x6BBB58")]
		public WriterContext()
		{
		}
	}
	[Token(Token = "0x2000246")]
	public class JsonWriter
	{
		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NumberFormatInfo number_format;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private WriterContext context;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Stack<WriterContext> ctx_stack;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool has_reached_end;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private char[] hex_seq;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int indentation;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int indent_value;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private StringBuilder inst_string_builder;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool pretty_print;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		private bool validate;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextWriter writer;

		[Token(Token = "0x17000219")]
		public int IndentValue
		{
			[Token(Token = "0x60013DB")]
			[Address(RVA = "0x6BB4CC", Offset = "0x6BB4CC", VA = "0x6BB4CC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013DC")]
			[Address(RVA = "0x6BB4D4", Offset = "0x6BB4D4", VA = "0x6BB4D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700021A")]
		public bool PrettyPrint
		{
			[Token(Token = "0x60013DD")]
			[Address(RVA = "0x6BB500", Offset = "0x6BB500", VA = "0x6BB500")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013DE")]
			[Address(RVA = "0x6BB508", Offset = "0x6BB508", VA = "0x6BB508")]
			set
			{
			}
		}

		[Token(Token = "0x1700021B")]
		public TextWriter TextWriter
		{
			[Token(Token = "0x60013DF")]
			[Address(RVA = "0x6BB510", Offset = "0x6BB510", VA = "0x6BB510")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021C")]
		public bool Validate
		{
			[Token(Token = "0x60013E0")]
			[Address(RVA = "0x6BB518", Offset = "0x6BB518", VA = "0x6BB518")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013E1")]
			[Address(RVA = "0x6BB520", Offset = "0x6BB520", VA = "0x6BB520")]
			set
			{
			}
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0x6BB528", Offset = "0x6BB528", VA = "0x6BB528")]
		static JsonWriter()
		{
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0x6BB588", Offset = "0x6BB588", VA = "0x6BB588")]
		public JsonWriter()
		{
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x6BB728", Offset = "0x6BB728", VA = "0x6BB728")]
		public JsonWriter(StringBuilder sb)
		{
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x6BB7A0", Offset = "0x6BB7A0", VA = "0x6BB7A0")]
		public JsonWriter(TextWriter writer)
		{
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0x6BB858", Offset = "0x6BB858", VA = "0x6BB858")]
		private void DoValidation(Condition cond)
		{
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0x6BB62C", Offset = "0x6BB62C", VA = "0x6BB62C")]
		private void Init()
		{
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0x6BBB60", Offset = "0x6BBB60", VA = "0x6BBB60")]
		private static void IntToHex(int n, char[] hex)
		{
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0x6BBBD0", Offset = "0x6BBBD0", VA = "0x6BBBD0")]
		private void Indent()
		{
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0x6BBBEC", Offset = "0x6BBBEC", VA = "0x6BBBEC")]
		private void Put(string str)
		{
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x6BBC98", Offset = "0x6BBC98", VA = "0x6BBC98")]
		private void PutNewline()
		{
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x6BBCA0", Offset = "0x6BBCA0", VA = "0x6BBCA0")]
		private void PutNewline(bool add_comma)
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x6BBD6C", Offset = "0x6BBD6C", VA = "0x6BBD6C")]
		private void PutString(string str)
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x6BC0E0", Offset = "0x6BC0E0", VA = "0x6BC0E0")]
		private void Unindent()
		{
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x6BC0FC", Offset = "0x6BC0FC", VA = "0x6BC0FC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x6BC178", Offset = "0x6BC178", VA = "0x6BC178")]
		public void Reset()
		{
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0x6BC26C", Offset = "0x6BC26C", VA = "0x6BC26C")]
		public void Write(bool boolean)
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0x6B8410", Offset = "0x6B8410", VA = "0x6B8410")]
		public void Write(decimal number)
		{
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x6B8B20", Offset = "0x6B8B20", VA = "0x6B8B20")]
		public void Write(double number)
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x6B7FB8", Offset = "0x6B7FB8", VA = "0x6B7FB8")]
		public void Write(int number)
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x6BC320", Offset = "0x6BC320", VA = "0x6BC320")]
		public void Write(long number)
		{
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x6B8194", Offset = "0x6B8194", VA = "0x6B8194")]
		public void Write(string str)
		{
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0x6B88BC", Offset = "0x6B88BC", VA = "0x6B88BC")]
		public void Write(ulong number)
		{
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x6BC424", Offset = "0x6BC424", VA = "0x6BC424")]
		public void WriteArrayEnd()
		{
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x6BC544", Offset = "0x6BC544", VA = "0x6BC544")]
		public void WriteArrayStart()
		{
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x6BC638", Offset = "0x6BC638", VA = "0x6BC638")]
		public void WriteObjectEnd()
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x6BC758", Offset = "0x6BC758", VA = "0x6BC758")]
		public void WriteObjectStart()
		{
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0x6BC84C", Offset = "0x6BC84C", VA = "0x6BC84C")]
		public void WritePropertyName(string property_name)
		{
		}
	}
	[Token(Token = "0x2000247")]
	internal class FsmContext
	{
		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool Return;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int NextState;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Lexer L;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int StateStack;

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x749F14", Offset = "0x749F14", VA = "0x749F14")]
		public FsmContext()
		{
		}
	}
	[Token(Token = "0x2000248")]
	internal class Lexer
	{
		[Token(Token = "0x2000737")]
		private delegate bool StateHandler(FsmContext ctx);

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int[] fsm_return_table;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static StateHandler[] fsm_handler_table;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool allow_comments;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		private bool allow_single_quoted_strings;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		private bool end_of_input;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private FsmContext fsm_context;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int input_buffer;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int input_char;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextReader reader;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int state;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private StringBuilder string_buffer;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private string string_value;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int token;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int unichar;

		[Token(Token = "0x1700021D")]
		public bool AllowComments
		{
			[Token(Token = "0x60013FE")]
			[Address(RVA = "0x6BC9CC", Offset = "0x6BC9CC", VA = "0x6BC9CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013FF")]
			[Address(RVA = "0x6BC9D4", Offset = "0x6BC9D4", VA = "0x6BC9D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700021E")]
		public bool AllowSingleQuotedStrings
		{
			[Token(Token = "0x6001400")]
			[Address(RVA = "0x6BC9DC", Offset = "0x6BC9DC", VA = "0x6BC9DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001401")]
			[Address(RVA = "0x6BC9E4", Offset = "0x6BC9E4", VA = "0x6BC9E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700021F")]
		public bool EndOfInput
		{
			[Token(Token = "0x6001402")]
			[Address(RVA = "0x6BC9EC", Offset = "0x6BC9EC", VA = "0x6BC9EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000220")]
		public int Token
		{
			[Token(Token = "0x6001403")]
			[Address(RVA = "0x6BC9F4", Offset = "0x6BC9F4", VA = "0x6BC9F4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000221")]
		public string StringValue
		{
			[Token(Token = "0x6001404")]
			[Address(RVA = "0x6BC9FC", Offset = "0x6BC9FC", VA = "0x6BC9FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0x6BCA04", Offset = "0x6BCA04", VA = "0x6BCA04")]
		static Lexer()
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0x6BA4C4", Offset = "0x6BA4C4", VA = "0x6BA4C4")]
		public Lexer(TextReader reader)
		{
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0x6BD81C", Offset = "0x6BD81C", VA = "0x6BD81C")]
		private static int HexValue(int digit)
		{
			return default(int);
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0x6BCA08", Offset = "0x6BCA08", VA = "0x6BCA08")]
		private static void PopulateFsmTables()
		{
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0x6BD8CC", Offset = "0x6BD8CC", VA = "0x6BD8CC")]
		private static char ProcessEscChar(int esc_char)
		{
			return default(char);
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0x6BD9CC", Offset = "0x6BD9CC", VA = "0x6BD9CC")]
		private static bool State1(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0x6BDD1C", Offset = "0x6BDD1C", VA = "0x6BDD1C")]
		private static bool State2(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0x6BDE58", Offset = "0x6BDE58", VA = "0x6BDE58")]
		private static bool State3(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0x6BE0A4", Offset = "0x6BE0A4", VA = "0x6BE0A4")]
		private static bool State4(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0x6BE25C", Offset = "0x6BE25C", VA = "0x6BE25C")]
		private static bool State5(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0x6BE334", Offset = "0x6BE334", VA = "0x6BE334")]
		private static bool State6(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0x6BE520", Offset = "0x6BE520", VA = "0x6BE520")]
		private static bool State7(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0x6BE618", Offset = "0x6BE618", VA = "0x6BE618")]
		private static bool State8(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0x6BE790", Offset = "0x6BE790", VA = "0x6BE790")]
		private static bool State9(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0x6BE7FC", Offset = "0x6BE7FC", VA = "0x6BE7FC")]
		private static bool State10(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0x6BE868", Offset = "0x6BE868", VA = "0x6BE868")]
		private static bool State11(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0x6BE8D4", Offset = "0x6BE8D4", VA = "0x6BE8D4")]
		private static bool State12(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0x6BE940", Offset = "0x6BE940", VA = "0x6BE940")]
		private static bool State13(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0x6BE9AC", Offset = "0x6BE9AC", VA = "0x6BE9AC")]
		private static bool State14(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0x6BEA18", Offset = "0x6BEA18", VA = "0x6BEA18")]
		private static bool State15(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0x6BEA84", Offset = "0x6BEA84", VA = "0x6BEA84")]
		private static bool State16(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0x6BEAF0", Offset = "0x6BEAF0", VA = "0x6BEAF0")]
		private static bool State17(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0x6BEB5C", Offset = "0x6BEB5C", VA = "0x6BEB5C")]
		private static bool State18(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0x6BEBC8", Offset = "0x6BEBC8", VA = "0x6BEBC8")]
		private static bool State19(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0x6BECC4", Offset = "0x6BECC4", VA = "0x6BECC4")]
		private static bool State20(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0x6BED30", Offset = "0x6BED30", VA = "0x6BED30")]
		private static bool State21(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0x6BEEE0", Offset = "0x6BEEE0", VA = "0x6BEEE0")]
		private static bool State22(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0x6BF140", Offset = "0x6BF140", VA = "0x6BF140")]
		private static bool State23(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0x6BF23C", Offset = "0x6BF23C", VA = "0x6BF23C")]
		private static bool State24(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0x6BF2C4", Offset = "0x6BF2C4", VA = "0x6BF2C4")]
		private static bool State25(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x6BF344", Offset = "0x6BF344", VA = "0x6BF344")]
		private static bool State26(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0x6BF3B8", Offset = "0x6BF3B8", VA = "0x6BF3B8")]
		private static bool State27(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0x6BF42C", Offset = "0x6BF42C", VA = "0x6BF42C")]
		private static bool State28(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0x6BDCEC", Offset = "0x6BDCEC", VA = "0x6BDCEC")]
		private bool GetChar()
		{
			return default(bool);
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0x6BF4BC", Offset = "0x6BF4BC", VA = "0x6BF4BC")]
		private int NextChar()
		{
			return default(int);
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0x6BACB4", Offset = "0x6BACB4", VA = "0x6BACB4")]
		public bool NextToken()
		{
			return default(bool);
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0x6BE098", Offset = "0x6BE098", VA = "0x6BE098")]
		private void UngetChar()
		{
		}
	}
	[Token(Token = "0x2000249")]
	internal enum ParserToken
	{
		[Token(Token = "0x40010AA")]
		None = 65536,
		[Token(Token = "0x40010AB")]
		Number,
		[Token(Token = "0x40010AC")]
		True,
		[Token(Token = "0x40010AD")]
		False,
		[Token(Token = "0x40010AE")]
		Null,
		[Token(Token = "0x40010AF")]
		CharSeq,
		[Token(Token = "0x40010B0")]
		Char,
		[Token(Token = "0x40010B1")]
		Text,
		[Token(Token = "0x40010B2")]
		Object,
		[Token(Token = "0x40010B3")]
		ObjectPrime,
		[Token(Token = "0x40010B4")]
		Pair,
		[Token(Token = "0x40010B5")]
		PairRest,
		[Token(Token = "0x40010B6")]
		Array,
		[Token(Token = "0x40010B7")]
		ArrayPrime,
		[Token(Token = "0x40010B8")]
		Value,
		[Token(Token = "0x40010B9")]
		ValueRest,
		[Token(Token = "0x40010BA")]
		String,
		[Token(Token = "0x40010BB")]
		End,
		[Token(Token = "0x40010BC")]
		Epsilon
	}
}
namespace Unitycoding.UIWidgets
{
	[Token(Token = "0x200024A")]
	public class Chat : UIWidget
	{
		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A12C4", Offset = "0x3A12C4")]
		[SerializeField]
		protected string filterMask;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x3A130C", Offset = "0x3A130C")]
		protected string filter;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A133C", Offset = "0x3A133C")]
		[SerializeField]
		protected Text text;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		protected InputField input;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected Button submit;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private string[] filterWords;

		[Token(Token = "0x600142A")]
		[Address(RVA = "0x64B18C", Offset = "0x64B18C", VA = "0x64B18C", Slot = "9")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0x64B3A8", Offset = "0x64B3A8", VA = "0x64B3A8")]
		private void Submit(string text)
		{
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0x64B460", Offset = "0x64B460", VA = "0x64B460", Slot = "10")]
		protected virtual void OnSubmit(string text)
		{
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0x64B510", Offset = "0x64B510", VA = "0x64B510", Slot = "11")]
		protected virtual string ApplyFilter(string text)
		{
			return null;
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0x64B664", Offset = "0x64B664", VA = "0x64B664")]
		public Chat()
		{
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0x64B76C", Offset = "0x64B76C", VA = "0x64B76C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB93C", Offset = "0x3AB93C")]
		private void <Start>b__6_0()
		{
		}
	}
	[Token(Token = "0x200024B")]
	public class DragPanel : UnityEngine.MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IDragHandler
	{
		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Vector2 pointerOffset;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private RectTransform canvasRectTransform;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RectTransform panelRectTransform;

		[Token(Token = "0x6001430")]
		[Address(RVA = "0x64B798", Offset = "0x64B798", VA = "0x64B798")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0x64B8DC", Offset = "0x64B8DC", VA = "0x64B8DC", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0x64B9D4", Offset = "0x64B9D4", VA = "0x64B9D4", Slot = "5")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0x64BB94", Offset = "0x64BB94", VA = "0x64BB94")]
		private Vector2 ClampToWindow(PointerEventData data)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0x64BD28", Offset = "0x64BD28", VA = "0x64BD28")]
		public DragPanel()
		{
		}
	}
	[Token(Token = "0x200024C")]
	public interface IValidation<T>
	{
		[Token(Token = "0x6001435")]
		bool Validate(T item);
	}
	[Token(Token = "0x200024D")]
	public class Joystick : Selectable, IDragHandler, IEventSystemHandler
	{
		[Serializable]
		[Token(Token = "0x2000738")]
		public class JoystickEvent : UnityEvent<Vector2>
		{
			[Token(Token = "0x60031B6")]
			[Address(RVA = "0x64E174", Offset = "0x64E174", VA = "0x64E174")]
			public JoystickEvent()
			{
			}
		}

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private RectTransform handle;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private float radius;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private float returnSpeed;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private string horizontalAxis;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private string verticalAxis;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public JoystickEvent onChange;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private RectTransform parentTransform;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool returnHandle;

		[Token(Token = "0x17000222")]
		public Vector2 position
		{
			[Token(Token = "0x6001436")]
			[Address(RVA = "0x64D8E0", Offset = "0x64D8E0", VA = "0x64D8E0")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0x64DB74", Offset = "0x64DB74", VA = "0x64DB74", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0x64DBE8", Offset = "0x64DBE8", VA = "0x64DBE8", Slot = "39")]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0x64DE20", Offset = "0x64DE20", VA = "0x64DE20", Slot = "32")]
		public override void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0x64DE50", Offset = "0x64DE50", VA = "0x64DE50", Slot = "33")]
		public override void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0x64DE70", Offset = "0x64DE70", VA = "0x64DE70")]
		private void Update()
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0x64E0BC", Offset = "0x64E0BC", VA = "0x64E0BC")]
		public Joystick()
		{
		}
	}
	[Token(Token = "0x200024E")]
	public class KeyTrigger : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000739")]
		public class KeyEvent : UnityEvent
		{
			[Token(Token = "0x60031B7")]
			[Address(RVA = "0x64E3DC", Offset = "0x64E3DC", VA = "0x64E3DC")]
			public KeyEvent()
			{
			}
		}

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public KeyCode key;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public KeyEvent onKeyDown;

		[Token(Token = "0x600143D")]
		[Address(RVA = "0x64E1D0", Offset = "0x64E1D0", VA = "0x64E1D0")]
		private void Update()
		{
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0x64E3D4", Offset = "0x64E3D4", VA = "0x64E3D4")]
		public KeyTrigger()
		{
		}
	}
	[Token(Token = "0x200024F")]
	public class MessageBox : UIWidget
	{
		[Token(Token = "0x200073A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BF44", Offset = "0x39BF44")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4002811")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MessageBox <>4__this;

			[Token(Token = "0x4002812")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public UnityAction<string> result;

			[Token(Token = "0x60031B8")]
			[Address(RVA = "0x64EEDC", Offset = "0x64EEDC", VA = "0x64EEDC")]
			public <>c__DisplayClass10_0()
			{
			}
		}

		[Token(Token = "0x200073B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BF54", Offset = "0x39BF54")]
		private sealed class <>c__DisplayClass10_1
		{
			[Token(Token = "0x4002813")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string caption;

			[Token(Token = "0x4002814")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public <>c__DisplayClass10_0 CS$<>8__locals1;

			[Token(Token = "0x60031B9")]
			[Address(RVA = "0x64EEE4", Offset = "0x64EEE4", VA = "0x64EEE4")]
			public <>c__DisplayClass10_1()
			{
			}

			[Token(Token = "0x60031BA")]
			[Address(RVA = "0x64F6C0", Offset = "0x64F6C0", VA = "0x64F6C0")]
			internal void <Show>b__0()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200073C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BF64", Offset = "0x39BF64")]
		private sealed class <>c
		{
			[Token(Token = "0x4002815")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002816")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static Predicate<Button> <>9__11_0;

			[Token(Token = "0x60031BC")]
			[Address(RVA = "0x64F68C", Offset = "0x64F68C", VA = "0x64F68C")]
			public <>c()
			{
			}

			[Token(Token = "0x60031BD")]
			[Address(RVA = "0x64F694", Offset = "0x64F694", VA = "0x64F694")]
			internal bool <AddButton>b__11_0(Button x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool autoClose;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A13F4", Offset = "0x3A13F4")]
		public Text title;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Text text;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Image icon;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Button button;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private List<Button> buttonCache;

		[Token(Token = "0x600143F")]
		[Address(RVA = "0x64E3E4", Offset = "0x64E3E4", VA = "0x64E3E4", Slot = "9")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0x64E56C", Offset = "0x64E56C", VA = "0x64E56C", Slot = "10")]
		public virtual void Show(MessageOptions settings, UnityAction<string> result, params string[] buttons)
		{
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0x64E8FC", Offset = "0x64E8FC", VA = "0x64E8FC", Slot = "11")]
		public virtual void Show(string title, string text, params string[] buttons)
		{
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0x64E930", Offset = "0x64E930", VA = "0x64E930", Slot = "12")]
		public virtual void Show(string title, string text, UnityAction<string> result, params string[] buttons)
		{
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0x64E960", Offset = "0x64E960", VA = "0x64E960", Slot = "13")]
		public virtual void Show(string title, string text, Sprite icon, UnityAction<string> result, params string[] buttons)
		{
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0x64EEEC", Offset = "0x64EEEC", VA = "0x64EEEC")]
		private Button AddButton(string text)
		{
			return null;
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0x64F3D0", Offset = "0x64F3D0", VA = "0x64F3D0")]
		public MessageBox()
		{
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0x64F458", Offset = "0x64F458", VA = "0x64F458")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB94C", Offset = "0x3AB94C")]
		[DebuggerHidden]
		private void <>n__0()
		{
		}
	}
	[Token(Token = "0x2000250")]
	public class MessageContainer : UIContainer<MessageOptions>
	{
		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		public bool fadeMessage;

		[Token(Token = "0x6001447")]
		[Address(RVA = "0x64F7B8", Offset = "0x64F7B8", VA = "0x64F7B8", Slot = "13")]
		public virtual bool Add(string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0x64F8F8", Offset = "0x64F8F8", VA = "0x64F8F8", Slot = "14")]
		public virtual bool Add(string message, Sprite icon)
		{
			return default(bool);
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0x64F99C", Offset = "0x64F99C", VA = "0x64F99C", Slot = "15")]
		public virtual bool Remove(string message)
		{
			return default(bool);
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0x64FB28", Offset = "0x64FB28", VA = "0x64FB28")]
		public MessageContainer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000251")]
	public class MessageOptions
	{
		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string title;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string text;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color color;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sprite icon;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float delay;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool ignoreTimeScale;

		[Token(Token = "0x600144B")]
		[Address(RVA = "0x64FB8C", Offset = "0x64FB8C", VA = "0x64FB8C")]
		public MessageOptions(MessageOptions other)
		{
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0x64F844", Offset = "0x64F844", VA = "0x64F844")]
		public MessageOptions()
		{
		}
	}
	[Token(Token = "0x2000252")]
	public class MessageSlot : UISlot<MessageOptions>
	{
		[Token(Token = "0x200073D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BF74", Offset = "0x39BF74")]
		private sealed class <DelayCrossFade>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002817")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002818")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002819")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float delay;

			[Token(Token = "0x400281A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public MessageSlot <>4__this;

			[Token(Token = "0x400281B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Graphic graphic;

			[Token(Token = "0x400281C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float duration;

			[Token(Token = "0x400281D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool ignoreTimeScale;

			[Token(Token = "0x170005A5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031C1")]
				[Address(RVA = "0x650314", Offset = "0x650314", VA = "0x650314", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031C3")]
				[Address(RVA = "0x650394", Offset = "0x650394", VA = "0x650394", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031BE")]
			[Address(RVA = "0x650108", Offset = "0x650108", VA = "0x650108")]
			[DebuggerHidden]
			public <DelayCrossFade>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x60031BF")]
			[Address(RVA = "0x650184", Offset = "0x650184", VA = "0x650184", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031C0")]
			[Address(RVA = "0x650188", Offset = "0x650188", VA = "0x650188", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031C2")]
			[Address(RVA = "0x65031C", Offset = "0x65031C", VA = "0x65031C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Text text;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image icon;

		[Token(Token = "0x600144D")]
		[Address(RVA = "0x64FCD8", Offset = "0x64FCD8", VA = "0x64FCD8", Slot = "10")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0x64FD5C", Offset = "0x64FD5C", VA = "0x64FD5C", Slot = "12")]
		public override void UpdateSlot(MessageOptions item)
		{
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0x64FFA0", Offset = "0x64FFA0", VA = "0x64FFA0")]
		private void DelayCrossFade(Graphic graphic, MessageOptions options)
		{
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0x650024", Offset = "0x650024", VA = "0x650024")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AB97C", Offset = "0x3AB97C")]
		private IEnumerator DelayCrossFade(Graphic graphic, float delay, float duration, bool ignoreTimeScale)
		{
			return null;
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0x650128", Offset = "0x650128", VA = "0x650128")]
		public MessageSlot()
		{
		}
	}
	[Token(Token = "0x2000253")]
	public class Progressbar : UIWidget
	{
		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A1438", Offset = "0x3A1438")]
		[SerializeField]
		protected Image progressbar;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		protected Text progressLabel;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		protected string format;

		[Token(Token = "0x6001452")]
		[Address(RVA = "0x65039C", Offset = "0x65039C", VA = "0x65039C", Slot = "9")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0x6503C8", Offset = "0x6503C8", VA = "0x6503C8", Slot = "10")]
		public virtual void SetProgress(float progress)
		{
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0x6504F8", Offset = "0x6504F8", VA = "0x6504F8", Slot = "5")]
		public override void Show()
		{
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0x6505E0", Offset = "0x6505E0", VA = "0x6505E0")]
		public Progressbar()
		{
		}
	}
	[Token(Token = "0x2000254")]
	public class RadialMenu : UIWidget
	{
		[Token(Token = "0x200073E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BF84", Offset = "0x39BF84")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x400281E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public RadialMenu <>4__this;

			[Token(Token = "0x400281F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public UnityAction<int> result;

			[Token(Token = "0x60031C4")]
			[Address(RVA = "0x650C34", Offset = "0x650C34", VA = "0x650C34")]
			public <>c__DisplayClass5_0()
			{
			}
		}

		[Token(Token = "0x200073F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BF94", Offset = "0x39BF94")]
		private sealed class <>c__DisplayClass5_1
		{
			[Token(Token = "0x4002820")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int index;

			[Token(Token = "0x4002821")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public <>c__DisplayClass5_0 CS$<>8__locals1;

			[Token(Token = "0x60031C5")]
			[Address(RVA = "0x650C3C", Offset = "0x650C3C", VA = "0x650C3C")]
			public <>c__DisplayClass5_1()
			{
			}

			[Token(Token = "0x60031C6")]
			[Address(RVA = "0x651144", Offset = "0x651144", VA = "0x651144")]
			internal void <Show>b__0()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000740")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BFA4", Offset = "0x39BFA4")]
		private sealed class <>c
		{
			[Token(Token = "0x4002822")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002823")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static Predicate<RadialMenuItem> <>9__7_0;

			[Token(Token = "0x60031C8")]
			[Address(RVA = "0x651110", Offset = "0x651110", VA = "0x651110")]
			public <>c()
			{
			}

			[Token(Token = "0x60031C9")]
			[Address(RVA = "0x651118", Offset = "0x651118", VA = "0x651118")]
			internal bool <AddRadialMenuItem>b__7_0(RadialMenuItem x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_Radius;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float m_Angle;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A14C0", Offset = "0x3A14C0")]
		[SerializeField]
		private RadialMenuItem m_Item;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private List<RadialMenuItem> itemCache;

		[Token(Token = "0x6001456")]
		[Address(RVA = "0x650640", Offset = "0x650640", VA = "0x650640")]
		private void Update()
		{
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0x650874", Offset = "0x650874", VA = "0x650874", Slot = "9")]
		public virtual void Show(Sprite[] icons, UnityAction<int> result)
		{
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0x650FBC", Offset = "0x650FBC", VA = "0x650FBC", Slot = "5")]
		public override void Show()
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0x650C44", Offset = "0x650C44", VA = "0x650C44")]
		private RadialMenuItem AddRadialMenuItem(Sprite icon)
		{
			return null;
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0x65100C", Offset = "0x65100C", VA = "0x65100C")]
		public RadialMenu()
		{
		}
	}
	[Token(Token = "0x2000255")]
	public class RadialMenuItem : Selectable, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private UnityEvent m_Trigger;

		[Token(Token = "0x17000223")]
		public UnityEvent onTrigger
		{
			[Token(Token = "0x600145B")]
			[Address(RVA = "0x650F44", Offset = "0x650F44", VA = "0x650F44")]
			get
			{
				return null;
			}
			[Token(Token = "0x600145C")]
			[Address(RVA = "0x65121C", Offset = "0x65121C", VA = "0x65121C")]
			set
			{
			}
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0x651224", Offset = "0x651224", VA = "0x651224")]
		private void Press()
		{
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0x651294", Offset = "0x651294", VA = "0x651294", Slot = "39")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0x651298", Offset = "0x651298", VA = "0x651298", Slot = "34")]
		public override void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0x6512CC", Offset = "0x6512CC", VA = "0x6512CC")]
		public RadialMenuItem()
		{
		}
	}
	[Token(Token = "0x2000256")]
	public class RadialMenuTrigger : UnityEngine.MonoBehaviour, IPointerDownHandler, IEventSystemHandler
	{
		[Serializable]
		[Token(Token = "0x2000741")]
		public class TriggerEvent : UnityEvent<int>
		{
			[Token(Token = "0x60031CA")]
			[Address(RVA = "0x651608", Offset = "0x651608", VA = "0x651608")]
			public TriggerEvent()
			{
			}
		}

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		protected string instanceName;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		protected PointerEventData.InputButton button;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		protected Sprite[] options;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TriggerEvent onValueChanged;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected RadialMenu radialMenu;

		[Token(Token = "0x6001461")]
		[Address(RVA = "0x65136C", Offset = "0x65136C", VA = "0x65136C", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0x6513FC", Offset = "0x6513FC", VA = "0x6513FC", Slot = "6")]
		public virtual void Show()
		{
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0x6514B4", Offset = "0x6514B4", VA = "0x6514B4", Slot = "7")]
		public virtual void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0x6514F8", Offset = "0x6514F8", VA = "0x6514F8", Slot = "8")]
		protected virtual void OnMouseOver()
		{
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0x651530", Offset = "0x651530", VA = "0x651530")]
		public RadialMenuTrigger()
		{
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0x651594", Offset = "0x651594", VA = "0x651594")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AB9EC", Offset = "0x3AB9EC")]
		private void <Show>b__6_0(int index)
		{
		}
	}
	[Token(Token = "0x2000257")]
	public class ResizePanel : UnityEngine.MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IDragHandler
	{
		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector2 minSize;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector2 maxSize;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private RectTransform panelRectTransform;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector2 originalLocalPointerPosition;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector2 originalSizeDelta;

		[Token(Token = "0x6001467")]
		[Address(RVA = "0x651664", Offset = "0x651664", VA = "0x651664")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0x6516FC", Offset = "0x6516FC", VA = "0x6516FC", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0x651808", Offset = "0x651808", VA = "0x651808", Slot = "5")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0x651AB4", Offset = "0x651AB4", VA = "0x651AB4")]
		public ResizePanel()
		{
		}
	}
	[Token(Token = "0x2000258")]
	public class Tooltip : UIWidget
	{
		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A1538", Offset = "0x3A1538")]
		public Text text;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Image icon;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Image background;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float width;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Canvas canvas;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool updatePosition;

		[Token(Token = "0x600146B")]
		[Address(RVA = "0x651B38", Offset = "0x651B38", VA = "0x651B38", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x651F00", Offset = "0x651F00", VA = "0x651F00", Slot = "9")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0x651F54", Offset = "0x651F54", VA = "0x651F54")]
		private void UpdatePosition()
		{
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x6523AC", Offset = "0x6523AC", VA = "0x6523AC", Slot = "5")]
		public override void Show()
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x652400", Offset = "0x652400", VA = "0x652400", Slot = "10")]
		public virtual void Show(string tooltipText)
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0x652430", Offset = "0x652430", VA = "0x652430", Slot = "11")]
		public virtual void Show(string tooltipText, float width, bool showBackground)
		{
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0x652468", Offset = "0x652468", VA = "0x652468", Slot = "12")]
		public virtual void Show(string tooltipText, Sprite icon, float width, bool showBackground)
		{
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x6526D8", Offset = "0x6526D8", VA = "0x6526D8", Slot = "6")]
		public override void Close()
		{
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x6526F4", Offset = "0x6526F4", VA = "0x6526F4")]
		public Tooltip()
		{
		}
	}
	[Token(Token = "0x2000259")]
	public class TooltipTrigger : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private string instanceName;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private bool showBackground;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float width;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color color;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x3A15AC", Offset = "0x3A15AC")]
		public string tooltip;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Sprite icon;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Tooltip instance;

		[Token(Token = "0x6001474")]
		[Address(RVA = "0x652704", Offset = "0x652704", VA = "0x652704")]
		private void Start()
		{
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x652804", Offset = "0x652804", VA = "0x652804", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0x652908", Offset = "0x652908", VA = "0x652908", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x652938", Offset = "0x652938", VA = "0x652938")]
		private void OnMouseEnter()
		{
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0x652A3C", Offset = "0x652A3C", VA = "0x652A3C")]
		private void OnMouseExit()
		{
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0x652A6C", Offset = "0x652A6C", VA = "0x652A6C")]
		public TooltipTrigger()
		{
		}
	}
	[Token(Token = "0x200025A")]
	public static class EasingEquations
	{
		[Token(Token = "0x2000742")]
		public enum EaseType
		{
			[Token(Token = "0x4002825")]
			EaseInQuad,
			[Token(Token = "0x4002826")]
			EaseOutQuad,
			[Token(Token = "0x4002827")]
			EaseInOutQuad,
			[Token(Token = "0x4002828")]
			EaseInCubic,
			[Token(Token = "0x4002829")]
			EaseOutCubic,
			[Token(Token = "0x400282A")]
			EaseInOutCubic,
			[Token(Token = "0x400282B")]
			EaseInQuart,
			[Token(Token = "0x400282C")]
			EaseOutQuart,
			[Token(Token = "0x400282D")]
			EaseInOutQuart,
			[Token(Token = "0x400282E")]
			EaseInQuint,
			[Token(Token = "0x400282F")]
			EaseOutQuint,
			[Token(Token = "0x4002830")]
			EaseInOutQuint,
			[Token(Token = "0x4002831")]
			EaseInSine,
			[Token(Token = "0x4002832")]
			EaseOutSine,
			[Token(Token = "0x4002833")]
			EaseInOutSine,
			[Token(Token = "0x4002834")]
			EaseInExpo,
			[Token(Token = "0x4002835")]
			EaseOutExpo,
			[Token(Token = "0x4002836")]
			EaseInOutExpo,
			[Token(Token = "0x4002837")]
			EaseInCirc,
			[Token(Token = "0x4002838")]
			EaseOutCirc,
			[Token(Token = "0x4002839")]
			EaseInOutCirc,
			[Token(Token = "0x400283A")]
			Linear,
			[Token(Token = "0x400283B")]
			Spring,
			[Token(Token = "0x400283C")]
			EaseInBounce,
			[Token(Token = "0x400283D")]
			EaseOutBounce,
			[Token(Token = "0x400283E")]
			EaseInOutBounce,
			[Token(Token = "0x400283F")]
			EaseInBack,
			[Token(Token = "0x4002840")]
			EaseOutBack,
			[Token(Token = "0x4002841")]
			EaseInOutBack,
			[Token(Token = "0x4002842")]
			EaseInElastic,
			[Token(Token = "0x4002843")]
			EaseOutElastic,
			[Token(Token = "0x4002844")]
			EaseInOutElastic,
			[Token(Token = "0x4002845")]
			Punch
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0x64BD30", Offset = "0x64BD30", VA = "0x64BD30")]
		public static float GetValue(EaseType easeType, float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x64D3D0", Offset = "0x64D3D0", VA = "0x64D3D0")]
		public static float Linear(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x64D45C", Offset = "0x64D45C", VA = "0x64D45C")]
		public static float CLerp(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0x64CC6C", Offset = "0x64CC6C", VA = "0x64CC6C")]
		public static float Spring(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0x64C238", Offset = "0x64C238", VA = "0x64C238")]
		public static float EaseInQuad(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0x64C258", Offset = "0x64C258", VA = "0x64C258")]
		public static float EaseOutQuad(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0x64C280", Offset = "0x64C280", VA = "0x64C280")]
		public static float EaseInOutQuad(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0x64C2E4", Offset = "0x64C2E4", VA = "0x64C2E4")]
		public static float EaseInCubic(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0x64C308", Offset = "0x64C308", VA = "0x64C308")]
		public static float EaseOutCubic(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0x64C338", Offset = "0x64C338", VA = "0x64C338")]
		public static float EaseInOutCubic(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0x64C3A0", Offset = "0x64C3A0", VA = "0x64C3A0")]
		public static float EaseInQuart(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0x64C3C8", Offset = "0x64C3C8", VA = "0x64C3C8")]
		public static float EaseOutQuart(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0x64C3F8", Offset = "0x64C3F8", VA = "0x64C3F8")]
		public static float EaseInOutQuart(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0x64C464", Offset = "0x64C464", VA = "0x64C464")]
		public static float EaseInQuint(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0x64C490", Offset = "0x64C490", VA = "0x64C490")]
		public static float EaseOutQuint(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0x64C4C8", Offset = "0x64C4C8", VA = "0x64C4C8")]
		public static float EaseInOutQuint(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0x64C540", Offset = "0x64C540", VA = "0x64C540")]
		public static float EaseInSine(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0x64C5EC", Offset = "0x64C5EC", VA = "0x64C5EC")]
		public static float EaseOutSine(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0x64C694", Offset = "0x64C694", VA = "0x64C694")]
		public static float EaseInOutSine(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0x64C74C", Offset = "0x64C74C", VA = "0x64C74C")]
		public static float EaseInExpo(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0x64C7F8", Offset = "0x64C7F8", VA = "0x64C7F8")]
		public static float EaseOutExpo(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0x64C8A4", Offset = "0x64C8A4", VA = "0x64C8A4")]
		public static float EaseInOutExpo(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x64C9C8", Offset = "0x64C9C8", VA = "0x64C9C8")]
		public static float EaseInCirc(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0x64CA8C", Offset = "0x64CA8C", VA = "0x64CA8C")]
		public static float EaseOutCirc(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0x64CB4C", Offset = "0x64CB4C", VA = "0x64CB4C")]
		public static float EaseInOutCirc(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0x64CD78", Offset = "0x64CD78", VA = "0x64CD78")]
		public static float EaseInBounce(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0x64CDC8", Offset = "0x64CDC8", VA = "0x64CDC8")]
		public static float EaseOutBounce(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0x64CE94", Offset = "0x64CE94", VA = "0x64CE94")]
		public static float EaseInOutBounce(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0x64CF2C", Offset = "0x64CF2C", VA = "0x64CF2C")]
		public static float EaseInBack(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0x64CF64", Offset = "0x64CF64", VA = "0x64CF64")]
		public static float EaseOutBack(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0x64CFA8", Offset = "0x64CFA8", VA = "0x64CFA8")]
		public static float EaseInOutBack(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0x64D544", Offset = "0x64D544", VA = "0x64D544")]
		public static float Punch(float amplitude, float value)
		{
			return default(float);
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0x64D034", Offset = "0x64D034", VA = "0x64D034")]
		public static float EaseInElastic(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0x64D140", Offset = "0x64D140", VA = "0x64D140")]
		public static float EaseOutElastic(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0x64D240", Offset = "0x64D240", VA = "0x64D240")]
		public static float EaseInOutElastic(float start, float end, float value)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200025B")]
	internal struct FloatTween : ITweenValue
	{
		[Token(Token = "0x2000743")]
		public class FloatTweenCallback : UnityEvent<float>
		{
			[Token(Token = "0x60031CB")]
			[Address(RVA = "0x64D7D0", Offset = "0x64D7D0", VA = "0x64D7D0")]
			public FloatTweenCallback()
			{
			}
		}

		[Token(Token = "0x2000744")]
		public class FloatTweenFinishCallback : UnityEvent
		{
			[Token(Token = "0x60031CC")]
			[Address(RVA = "0x64D8C4", Offset = "0x64D8C4", VA = "0x64D8C4")]
			public FloatTweenFinishCallback()
			{
			}
		}

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FloatTweenCallback m_Target;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private FloatTweenFinishCallback m_OnFinish;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private EasingEquations.EaseType m_EaseType;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float m_StartValue;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float m_TargetValue;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float m_Duration;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool m_IgnoreTimeScale;

		[Token(Token = "0x17000224")]
		public EasingEquations.EaseType easeType
		{
			[Token(Token = "0x600149D")]
			[Address(RVA = "0x456C5C", Offset = "0x456C5C", VA = "0x456C5C")]
			get
			{
				return default(EasingEquations.EaseType);
			}
			[Token(Token = "0x600149E")]
			[Address(RVA = "0x456C64", Offset = "0x456C64", VA = "0x456C64")]
			set
			{
			}
		}

		[Token(Token = "0x17000225")]
		public float startValue
		{
			[Token(Token = "0x600149F")]
			[Address(RVA = "0x456C6C", Offset = "0x456C6C", VA = "0x456C6C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014A0")]
			[Address(RVA = "0x456C74", Offset = "0x456C74", VA = "0x456C74")]
			set
			{
			}
		}

		[Token(Token = "0x17000226")]
		public float targetValue
		{
			[Token(Token = "0x60014A1")]
			[Address(RVA = "0x456C7C", Offset = "0x456C7C", VA = "0x456C7C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014A2")]
			[Address(RVA = "0x456C84", Offset = "0x456C84", VA = "0x456C84")]
			set
			{
			}
		}

		[Token(Token = "0x17000227")]
		public float duration
		{
			[Token(Token = "0x60014A3")]
			[Address(RVA = "0x456C8C", Offset = "0x456C8C", VA = "0x456C8C", Slot = "6")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014A4")]
			[Address(RVA = "0x456C94", Offset = "0x456C94", VA = "0x456C94")]
			set
			{
			}
		}

		[Token(Token = "0x17000228")]
		public bool ignoreTimeScale
		{
			[Token(Token = "0x60014A5")]
			[Address(RVA = "0x456C9C", Offset = "0x456C9C", VA = "0x456C9C", Slot = "5")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014A6")]
			[Address(RVA = "0x456CA4", Offset = "0x456CA4", VA = "0x456CA4")]
			set
			{
			}
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x456CAC", Offset = "0x456CAC", VA = "0x456CAC", Slot = "7")]
		public bool ValidTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x456CBC", Offset = "0x456CBC", VA = "0x456CBC", Slot = "4")]
		public void TweenValue(float floatPercentage)
		{
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x456CC4", Offset = "0x456CC4", VA = "0x456CC4")]
		public void AddOnChangedCallback(UnityAction<float> callback)
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x456CCC", Offset = "0x456CCC", VA = "0x456CCC")]
		public void AddOnFinishCallback(UnityAction callback)
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0x456CD4", Offset = "0x456CD4", VA = "0x456CD4", Slot = "8")]
		public void OnFinish()
		{
		}
	}
	[Token(Token = "0x200025C")]
	internal interface ITweenValue
	{
		[Token(Token = "0x17000229")]
		bool ignoreTimeScale
		{
			[Token(Token = "0x60014AD")]
			get;
		}

		[Token(Token = "0x1700022A")]
		float duration
		{
			[Token(Token = "0x60014AE")]
			get;
		}

		[Token(Token = "0x60014AC")]
		void TweenValue(float floatPercentage);

		[Token(Token = "0x60014AF")]
		bool ValidTarget();

		[Token(Token = "0x60014B0")]
		void OnFinish();
	}
	[Token(Token = "0x200025D")]
	internal class TweenRunner<T> where T : struct, ITweenValue
	{
		[Token(Token = "0x2000745")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BFB4", Offset = "0x39BFB4")]
		private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002846")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002847")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002848")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T tweenInfo;

			[Token(Token = "0x4002849")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x170005A7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031D0")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031D2")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031CD")]
			[DebuggerHidden]
			public <Start>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x60031CE")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031CF")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031D1")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected UnityEngine.MonoBehaviour m_CoroutineContainer;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected IEnumerator m_Tween;

		[Token(Token = "0x60014B1")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AB9FC", Offset = "0x3AB9FC")]
		private static IEnumerator Start(T tweenInfo)
		{
			return null;
		}

		[Token(Token = "0x60014B2")]
		public void Init(UnityEngine.MonoBehaviour coroutineContainer)
		{
		}

		[Token(Token = "0x60014B3")]
		public void StartTween(T info)
		{
		}

		[Token(Token = "0x60014B4")]
		public TweenRunner()
		{
		}
	}
	[Token(Token = "0x200025E")]
	internal struct Vector3Tween : ITweenValue
	{
		[Token(Token = "0x2000746")]
		public class Vector3TweenCallback : UnityEvent<Vector3>
		{
			[Token(Token = "0x60031D3")]
			[Address(RVA = "0x653FA8", Offset = "0x653FA8", VA = "0x653FA8")]
			public Vector3TweenCallback()
			{
			}
		}

		[Token(Token = "0x2000747")]
		public class Vector3TweenFinishCallback : UnityEvent
		{
			[Token(Token = "0x60031D4")]
			[Address(RVA = "0x65409C", Offset = "0x65409C", VA = "0x65409C")]
			public Vector3TweenFinishCallback()
			{
			}
		}

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3TweenCallback m_Target;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private Vector3TweenFinishCallback m_OnFinish;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private EasingEquations.EaseType m_EaseType;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Vector3 m_StartValue;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 m_TargetValue;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_Duration;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_IgnoreTimeScale;

		[Token(Token = "0x1700022B")]
		public EasingEquations.EaseType easeType
		{
			[Token(Token = "0x60014B5")]
			[Address(RVA = "0x456D34", Offset = "0x456D34", VA = "0x456D34")]
			get
			{
				return default(EasingEquations.EaseType);
			}
			[Token(Token = "0x60014B6")]
			[Address(RVA = "0x456D3C", Offset = "0x456D3C", VA = "0x456D3C")]
			set
			{
			}
		}

		[Token(Token = "0x1700022C")]
		public Vector3 startValue
		{
			[Token(Token = "0x60014B7")]
			[Address(RVA = "0x456D44", Offset = "0x456D44", VA = "0x456D44")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60014B8")]
			[Address(RVA = "0x456D58", Offset = "0x456D58", VA = "0x456D58")]
			set
			{
			}
		}

		[Token(Token = "0x1700022D")]
		public Vector3 targetValue
		{
			[Token(Token = "0x60014B9")]
			[Address(RVA = "0x456D64", Offset = "0x456D64", VA = "0x456D64")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60014BA")]
			[Address(RVA = "0x456D78", Offset = "0x456D78", VA = "0x456D78")]
			set
			{
			}
		}

		[Token(Token = "0x1700022E")]
		public float duration
		{
			[Token(Token = "0x60014BB")]
			[Address(RVA = "0x456D84", Offset = "0x456D84", VA = "0x456D84", Slot = "6")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014BC")]
			[Address(RVA = "0x456D8C", Offset = "0x456D8C", VA = "0x456D8C")]
			set
			{
			}
		}

		[Token(Token = "0x1700022F")]
		public bool ignoreTimeScale
		{
			[Token(Token = "0x60014BD")]
			[Address(RVA = "0x456D94", Offset = "0x456D94", VA = "0x456D94", Slot = "5")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014BE")]
			[Address(RVA = "0x456D9C", Offset = "0x456D9C", VA = "0x456D9C")]
			set
			{
			}
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x456DA4", Offset = "0x456DA4", VA = "0x456DA4", Slot = "7")]
		public bool ValidTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x456DB4", Offset = "0x456DB4", VA = "0x456DB4", Slot = "4")]
		public void TweenValue(float floatPercentage)
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0x456DBC", Offset = "0x456DBC", VA = "0x456DBC")]
		public void AddOnChangedCallback(UnityAction<Vector3> callback)
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0x456DC4", Offset = "0x456DC4", VA = "0x456DC4")]
		public void AddOnFinishCallback(UnityAction callback)
		{
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0x456DCC", Offset = "0x456DCC", VA = "0x456DCC", Slot = "8")]
		public void OnFinish()
		{
		}
	}
	[Token(Token = "0x200025F")]
	public class UIContainer<T> : UIWidget, IDropHandler, IEventSystemHandler where T : class
	{
		[Serializable]
		[Token(Token = "0x2000748")]
		public class ContainerEvent : UnityEvent<T>
		{
			[Token(Token = "0x60031D5")]
			public ContainerEvent()
			{
			}
		}

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A15BC", Offset = "0x3A15BC")]
		[SerializeField]
		protected bool dynamicContainer;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected Transform grid;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected GameObject slotPrefab;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool reference;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool canDragItems;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool canDropItems;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool removeDraggedItems;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<UISlot<T>> slots;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<T> items;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ContainerEvent onAdd;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ContainerEvent onFailedToAdd;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ContainerEvent onRemove;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ContainerEvent onDoubleClick;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ContainerEvent onDrop;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ContainerEvent onClick;

		[Token(Token = "0x17000230")]
		public List<UISlot<T>> Slots
		{
			[Token(Token = "0x60014C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000231")]
		public List<T> Items
		{
			[Token(Token = "0x60014C5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014C6")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60014C7")]
		public virtual T Replace(int slotId, T item)
		{
			return null;
		}

		[Token(Token = "0x60014C8")]
		public virtual bool Add(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x60014C9")]
		public GameObject CreateSlot()
		{
			return null;
		}

		[Token(Token = "0x60014CA")]
		public void RefreshSlots()
		{
		}

		[Token(Token = "0x60014CB")]
		public virtual void Clear()
		{
		}

		[Token(Token = "0x60014CC")]
		public T GetItem(int slotId)
		{
			return null;
		}

		[Token(Token = "0x60014CD")]
		public void MoveTo(string container)
		{
		}

		[Token(Token = "0x60014CE")]
		public void OnDrop(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60014CF")]
		public UIContainer()
		{
		}
	}
	[Token(Token = "0x2000260")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x39A8B0", Offset = "0x39A8B0")]
	public class UICursor : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UICursor instance;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private RectTransform rectTransform;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Image image;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private CanvasGroup canvasGroup;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Canvas canvas;

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0x652B04", Offset = "0x652B04", VA = "0x652B04")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0x652B60", Offset = "0x652B60", VA = "0x652B60")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0x652BBC", Offset = "0x652BBC", VA = "0x652BBC")]
		private void Start()
		{
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0x652CD0", Offset = "0x652CD0", VA = "0x652CD0")]
		private void Update()
		{
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0x652F18", Offset = "0x652F18", VA = "0x652F18")]
		public static void Clear()
		{
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0x652F20", Offset = "0x652F20", VA = "0x652F20")]
		public static void Set(Sprite sprite)
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0x653110", Offset = "0x653110", VA = "0x653110")]
		public UICursor()
		{
		}
	}
	[Token(Token = "0x2000261")]
	public class UISlot<T> : UnityEngine.MonoBehaviour, IDropHandler, IEventSystemHandler, IBeginDragHandler, IDragHandler, IEndDragHandler, IPointerUpHandler, IPointerDownHandler where T : class
	{
		[NonSerialized]
		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public int id;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIContainer<T> container;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static T draggedItem;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool draggedReference;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected ScrollRect scrollRect;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected bool placingItem;

		[Token(Token = "0x17000232")]
		public T observedItem
		{
			[Token(Token = "0x60014D7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014D8")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60014D9")]
		public virtual T Replace(T item)
		{
			return null;
		}

		[Token(Token = "0x60014DA")]
		public virtual void UpdateSlot(T item)
		{
		}

		[Token(Token = "0x60014DB")]
		public virtual void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60014DC")]
		public virtual void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60014DD")]
		public virtual void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60014DE")]
		public virtual void OnDrop(PointerEventData data)
		{
		}

		[Token(Token = "0x60014DF")]
		public virtual void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60014E0")]
		public virtual void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60014E1")]
		public virtual bool Validate(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x60014E2")]
		public virtual void MoveTo(string container)
		{
		}

		[Token(Token = "0x60014E3")]
		public UISlot()
		{
		}
	}
	[Token(Token = "0x2000262")]
	public static class UIUtility
	{
		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, UIWidget> widgetCache;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static AudioSource audioSource;

		[Token(Token = "0x60014E4")]
		public static T Find<T>(string name) where T : UIWidget
		{
			return null;
		}

		[Token(Token = "0x60014E5")]
		public static T[] Find<T>(params string[] names) where T : UIWidget
		{
			return null;
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x653118", Offset = "0x653118", VA = "0x653118")]
		public static void PlaySound(AudioClip clip, float volume)
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x653420", Offset = "0x653420", VA = "0x653420")]
		public static string ColorToHex(Color32 color)
		{
			return null;
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0x6534C8", Offset = "0x6534C8", VA = "0x6534C8")]
		public static Color HexToColor(string hex)
		{
			return default(Color);
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x64E67C", Offset = "0x64E67C", VA = "0x64E67C")]
		public static string ColorString(string value, Color color)
		{
			return null;
		}
	}
	[Token(Token = "0x2000263")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x39A93C", Offset = "0x39A93C")]
	public class UIWidget : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000749")]
		public enum TriggerType
		{
			[Token(Token = "0x400284B")]
			OnShow,
			[Token(Token = "0x400284C")]
			OnClose,
			[Token(Token = "0x400284D")]
			OnShowFinished,
			[Token(Token = "0x400284E")]
			OnCloseFinished
		}

		[Serializable]
		[Token(Token = "0x200074A")]
		public class Entry
		{
			[Token(Token = "0x400284F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public TriggerType eventID;

			[Token(Token = "0x4002850")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public WidgetEvent callback;

			[Token(Token = "0x60031D6")]
			[Address(RVA = "0x653E1C", Offset = "0x653E1C", VA = "0x653E1C")]
			public Entry()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200074B")]
		public class WidgetEvent : UnityEvent
		{
			[Token(Token = "0x60031D7")]
			[Address(RVA = "0x653E24", Offset = "0x653E24", VA = "0x653E24")]
			public WidgetEvent()
			{
			}
		}

		[Token(Token = "0x200074C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BFC4", Offset = "0x39BFC4")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x4002851")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public UIWidget <>4__this;

			[Token(Token = "0x4002852")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float startValue;

			[Token(Token = "0x4002853")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float targetValue;

			[Token(Token = "0x60031D8")]
			[Address(RVA = "0x653B30", Offset = "0x653B30", VA = "0x653B30")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x60031D9")]
			[Address(RVA = "0x653D88", Offset = "0x653D88", VA = "0x653D88")]
			internal void <TweenCanvasGroupAlpha>b__0(float value)
			{
			}

			[Token(Token = "0x60031DA")]
			[Address(RVA = "0x653DC8", Offset = "0x653DC8", VA = "0x653DC8")]
			internal void <TweenCanvasGroupAlpha>b__1()
			{
			}
		}

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private new string name;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A1644", Offset = "0x3A1644")]
		[SerializeField]
		private bool focus;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[SerializeField]
		private bool interactable;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private EasingEquations.EaseType easeType;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float duration;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AudioClip showSound;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip closeSound;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private List<Entry> m_Delegates;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public WidgetEvent onShow;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public WidgetEvent onClose;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public WidgetEvent onShowFinished;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public WidgetEvent onCloseFinished;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected RectTransform rectTransform;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected CanvasGroup canvasGroup;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TweenRunner<FloatTween> m_AlphaTweenRunner;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private TweenRunner<Vector3Tween> m_ScaleTweenRunner;

		[Token(Token = "0x17000233")]
		public string Name
		{
			[Token(Token = "0x60014EB")]
			[Address(RVA = "0x653708", Offset = "0x653708", VA = "0x653708")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014EC")]
			[Address(RVA = "0x653710", Offset = "0x653710", VA = "0x653710")]
			set
			{
			}
		}

		[Token(Token = "0x17000234")]
		public List<Entry> triggers
		{
			[Token(Token = "0x60014ED")]
			[Address(RVA = "0x653718", Offset = "0x653718", VA = "0x653718")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014EE")]
			[Address(RVA = "0x6537A0", Offset = "0x6537A0", VA = "0x6537A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000235")]
		public bool IsVisible
		{
			[Token(Token = "0x60014EF")]
			[Address(RVA = "0x651EBC", Offset = "0x651EBC", VA = "0x651EBC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x651BF4", Offset = "0x651BF4", VA = "0x651BF4", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x64F1DC", Offset = "0x64F1DC", VA = "0x64F1DC", Slot = "5")]
		public virtual void Show()
		{
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x64F45C", Offset = "0x64F45C", VA = "0x64F45C", Slot = "6")]
		public virtual void Close()
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x6537A8", Offset = "0x6537A8", VA = "0x6537A8")]
		private void TweenCanvasGroupAlpha(float startValue, float targetValue)
		{
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x6539B8", Offset = "0x6539B8", VA = "0x6539B8")]
		private void TweenTransformScale(Vector3 startValue, Vector3 targetValue)
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x653BD8", Offset = "0x653BD8", VA = "0x653BD8", Slot = "7")]
		public virtual void Toggle()
		{
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x653C14", Offset = "0x653C14", VA = "0x653C14", Slot = "8")]
		public virtual void Focus()
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x653C3C", Offset = "0x653C3C", VA = "0x653C3C")]
		private void Execute(TriggerType id)
		{
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0x64B6D8", Offset = "0x64B6D8", VA = "0x64B6D8")]
		public UIWidget()
		{
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x653D1C", Offset = "0x653D1C", VA = "0x653D1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ABA6C", Offset = "0x3ABA6C")]
		private void <OnEnable>b__24_0()
		{
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0x653D24", Offset = "0x653D24", VA = "0x653D24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ABA7C", Offset = "0x3ABA7C")]
		private void <OnEnable>b__24_1()
		{
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0x653D2C", Offset = "0x653D2C", VA = "0x653D2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ABA8C", Offset = "0x3ABA8C")]
		private void <OnEnable>b__24_2()
		{
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0x653D34", Offset = "0x653D34", VA = "0x653D34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ABA9C", Offset = "0x3ABA9C")]
		private void <OnEnable>b__24_3()
		{
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0x653D3C", Offset = "0x653D3C", VA = "0x653D3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ABAAC", Offset = "0x3ABAAC")]
		private void <TweenTransformScale>b__28_0(Vector3 value)
		{
		}
	}
}
namespace Technie.VirtualConsole
{
	[Token(Token = "0x2000264")]
	public class AutoBreakPanel : DebugPanel
	{
		[Token(Token = "0x200074D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BFD4", Offset = "0x39BFD4")]
		private sealed class <BreakTimerRoutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002854")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002855")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002856")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AutoBreakPanel <>4__this;

			[Token(Token = "0x4002857")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <elapsed>5__2;

			[Token(Token = "0x170005A9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031DE")]
				[Address(RVA = "0x55AFA4", Offset = "0x55AFA4", VA = "0x55AFA4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005AA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031E0")]
				[Address(RVA = "0x55B024", Offset = "0x55B024", VA = "0x55B024", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031DB")]
			[Address(RVA = "0x55AD64", Offset = "0x55AD64", VA = "0x55AD64")]
			[DebuggerHidden]
			public <BreakTimerRoutine>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60031DC")]
			[Address(RVA = "0x55ADA0", Offset = "0x55ADA0", VA = "0x55ADA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031DD")]
			[Address(RVA = "0x55ADA4", Offset = "0x55ADA4", VA = "0x55ADA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031DF")]
			[Address(RVA = "0x55AFAC", Offset = "0x55AFAC", VA = "0x55AFAC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float breakTimerDelaySecs;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text timerDelayDisplay;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Text countdownDisplay;

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0x55AAA0", Offset = "0x55AAA0", VA = "0x55AAA0")]
		private void Start()
		{
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0x55AB64", Offset = "0x55AB64", VA = "0x55AB64", Slot = "4")]
		public override void OnAttach()
		{
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0x55AB68", Offset = "0x55AB68", VA = "0x55AB68", Slot = "5")]
		public override void OnDetach()
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0x55AB6C", Offset = "0x55AB6C", VA = "0x55AB6C", Slot = "6")]
		public override void OnResized(VrDebugDisplay.State size)
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0x55AB70", Offset = "0x55AB70", VA = "0x55AB70")]
		public void OnAutoBreak()
		{
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0x55ABE4", Offset = "0x55ABE4", VA = "0x55ABE4")]
		public void OnIncBreakTimer()
		{
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0x55AC48", Offset = "0x55AC48", VA = "0x55AC48")]
		public void OnDecBreakTimer()
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0x55ACB4", Offset = "0x55ACB4", VA = "0x55ACB4")]
		public void OnStartBreakTimer()
		{
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0x55ACE4", Offset = "0x55ACE4", VA = "0x55ACE4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3ABABC", Offset = "0x3ABABC")]
		private IEnumerator BreakTimerRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0x55AD84", Offset = "0x55AD84", VA = "0x55AD84")]
		public AutoBreakPanel()
		{
		}
	}
	[Token(Token = "0x2000265")]
	public class AutoScreenshot : DebugPanel
	{
		[Token(Token = "0x200074E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39BFE4", Offset = "0x39BFE4")]
		private sealed class <TimerRoutine>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002858")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002859")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x400285A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AutoScreenshot <>4__this;

			[Token(Token = "0x400285B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <elapsed>5__2;

			[Token(Token = "0x400285C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private string <path>5__3;

			[Token(Token = "0x170005AB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031E4")]
				[Address(RVA = "0x55BCA4", Offset = "0x55BCA4", VA = "0x55BCA4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005AC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031E6")]
				[Address(RVA = "0x55BD24", Offset = "0x55BD24", VA = "0x55BD24", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031E1")]
			[Address(RVA = "0x55B4D0", Offset = "0x55B4D0", VA = "0x55B4D0")]
			[DebuggerHidden]
			public <TimerRoutine>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x60031E2")]
			[Address(RVA = "0x55B56C", Offset = "0x55B56C", VA = "0x55B56C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031E3")]
			[Address(RVA = "0x55B570", Offset = "0x55B570", VA = "0x55B570", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031E5")]
			[Address(RVA = "0x55BCAC", Offset = "0x55BCAC", VA = "0x55BCAC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public string screenshotOutputFolder;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float screenshotTimerDelaySecs;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int supersamplingAmount;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool hidePanelsOnScreenshot;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Text timerDelayDisplay;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text countdownDisplay;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Text lastScreenshotPathDisplay;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text captureModeDisplay;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Toggle hidePanelsToggle;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject[] captureModeUiElements;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public HandAbstraction handAbstraction;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PanelManager panelManager;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private ScreenCapture.StereoScreenCaptureMode captureMode;

		[Token(Token = "0x6001508")]
		[Address(RVA = "0x55B02C", Offset = "0x55B02C", VA = "0x55B02C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0x55B228", Offset = "0x55B228", VA = "0x55B228", Slot = "4")]
		public override void OnAttach()
		{
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0x55B22C", Offset = "0x55B22C", VA = "0x55B22C", Slot = "5")]
		public override void OnDetach()
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0x55B230", Offset = "0x55B230", VA = "0x55B230", Slot = "6")]
		public override void OnResized(VrDebugDisplay.State size)
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0x55B234", Offset = "0x55B234", VA = "0x55B234")]
		public void OnAutoBreak()
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0x55B2A8", Offset = "0x55B2A8", VA = "0x55B2A8")]
		public void OnIncTimer()
		{
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0x55B30C", Offset = "0x55B30C", VA = "0x55B30C")]
		public void OnDecTimer()
		{
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0x55B378", Offset = "0x55B378", VA = "0x55B378")]
		public void OnIncSupersampling()
		{
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0x55B390", Offset = "0x55B390", VA = "0x55B390")]
		public void OnDecSupersampling()
		{
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0x55B3A8", Offset = "0x55B3A8", VA = "0x55B3A8")]
		public void OnHidePanelsToggled()
		{
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0x55B3D0", Offset = "0x55B3D0", VA = "0x55B3D0")]
		public void OnNextCaptureMode()
		{
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0x55B3F8", Offset = "0x55B3F8", VA = "0x55B3F8")]
		public void OnPrevCaptureMode()
		{
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0x55B14C", Offset = "0x55B14C", VA = "0x55B14C")]
		private void UpdateCaptureModeDisplay()
		{
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0x55B420", Offset = "0x55B420", VA = "0x55B420")]
		public void OnStartTimer()
		{
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0x55B450", Offset = "0x55B450", VA = "0x55B450")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3ABB2C", Offset = "0x3ABB2C")]
		private IEnumerator TimerRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0x55B4F0", Offset = "0x55B4F0", VA = "0x55B4F0")]
		public AutoScreenshot()
		{
		}
	}
	[Token(Token = "0x2000266")]
	public class DebugPanel : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string panelName;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool isAttached;

		[Token(Token = "0x6001518")]
		[Address(RVA = "0x55BD2C", Offset = "0x55BD2C", VA = "0x55BD2C")]
		public bool IsAttached()
		{
			return default(bool);
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0x55BD34", Offset = "0x55BD34", VA = "0x55BD34")]
		public void NotifyOnAttach()
		{
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0x55BD4C", Offset = "0x55BD4C", VA = "0x55BD4C")]
		public void NotifyOnDetach()
		{
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0x55BD64", Offset = "0x55BD64", VA = "0x55BD64", Slot = "4")]
		public virtual void OnAttach()
		{
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0x55BD68", Offset = "0x55BD68", VA = "0x55BD68", Slot = "5")]
		public virtual void OnDetach()
		{
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0x55BD6C", Offset = "0x55BD6C", VA = "0x55BD6C", Slot = "6")]
		public virtual void OnResized(VrDebugDisplay.State size)
		{
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0x55AD98", Offset = "0x55AD98", VA = "0x55AD98")]
		public DebugPanel()
		{
		}
	}
	[Token(Token = "0x2000267")]
	public class ErrorExample : HandTrigger
	{
		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int numErrorsTriggered;

		[Token(Token = "0x600151F")]
		[Address(RVA = "0x55BD70", Offset = "0x55BD70", VA = "0x55BD70", Slot = "4")]
		public override void OnHandEntered()
		{
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0x55C374", Offset = "0x55C374", VA = "0x55C374")]
		public ErrorExample()
		{
		}
	}
	[Token(Token = "0x2000268")]
	public class ExceptionExample : HandTrigger
	{
		[Token(Token = "0x6001521")]
		[Address(RVA = "0x55C384", Offset = "0x55C384", VA = "0x55C384", Slot = "4")]
		public override void OnHandEntered()
		{
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0x55C504", Offset = "0x55C504", VA = "0x55C504")]
		public ExceptionExample()
		{
		}
	}
	[Token(Token = "0x2000269")]
	public class HandTrigger : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public BoxCollider area;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private XrNodeRig xrRig;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool wasInBox;

		[Token(Token = "0x6001523")]
		[Address(RVA = "0x55D79C", Offset = "0x55D79C", VA = "0x55D79C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0x55D824", Offset = "0x55D824", VA = "0x55D824")]
		private void Update()
		{
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0x55D964", Offset = "0x55D964", VA = "0x55D964")]
		private bool IsInBox(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0x55DAA0", Offset = "0x55DAA0", VA = "0x55DAA0", Slot = "4")]
		public virtual void OnHandEntered()
		{
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0x55C37C", Offset = "0x55C37C", VA = "0x55C37C")]
		public HandTrigger()
		{
		}
	}
	[Token(Token = "0x200026A")]
	public class InfoExample : HandTrigger
	{
		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int nextBallNumber;

		[Token(Token = "0x6001528")]
		[Address(RVA = "0x55DAA4", Offset = "0x55DAA4", VA = "0x55DAA4", Slot = "4")]
		public override void OnHandEntered()
		{
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0x55DD30", Offset = "0x55DD30", VA = "0x55DD30")]
		public InfoExample()
		{
		}
	}
	[Token(Token = "0x200026B")]
	public class WarningExample : HandTrigger
	{
		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int numWarningsTriggered;

		[Token(Token = "0x600152A")]
		[Address(RVA = "0x568754", Offset = "0x568754", VA = "0x568754", Slot = "4")]
		public override void OnHandEntered()
		{
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0x568858", Offset = "0x568858", VA = "0x568858")]
		public WarningExample()
		{
		}
	}
	[Token(Token = "0x200026C")]
	public enum HandType
	{
		[Token(Token = "0x4001154")]
		Invalid,
		[Token(Token = "0x4001155")]
		Left,
		[Token(Token = "0x4001156")]
		Right
	}
	[Token(Token = "0x200026D")]
	public class Hand : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HandType type;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform trackedTransform;

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x55C50C", Offset = "0x55C50C", VA = "0x55C50C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0x55C510", Offset = "0x55C510", VA = "0x55C510")]
		private void TrackTargetHand()
		{
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0x55C6D4", Offset = "0x55C6D4", VA = "0x55C6D4")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x200026E")]
	public class HandAbstraction : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public VirtualConsole virtualConsole;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material ballMaterial;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Material laserMaterial;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite cursorSprite;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Material cursorMaterial;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public XrNodeRig xrRig;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public PanelManager panelManager;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WandInputModule wandInputModule;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Hand leftHand;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Hand rightHand;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private UiStylus leftStylus;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UiStylus rightStylus;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool wasLeftDown;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private bool wasRightDown;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float findHandsTimer;

		[Token(Token = "0x600152F")]
		[Address(RVA = "0x55C6DC", Offset = "0x55C6DC", VA = "0x55C6DC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x55C6E0", Offset = "0x55C6E0", VA = "0x55C6E0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x55C6E4", Offset = "0x55C6E4", VA = "0x55C6E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0x55C6E8", Offset = "0x55C6E8", VA = "0x55C6E8")]
		private void FindHands()
		{
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x55D2D8", Offset = "0x55D2D8", VA = "0x55D2D8")]
		private UiLaser CreateLaser()
		{
			return null;
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x55CB6C", Offset = "0x55CB6C", VA = "0x55CB6C")]
		private UiStylus CreateStylus(HandType type, Transform handTransform, WandInputModule inputModule)
		{
			return null;
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x55CCA8", Offset = "0x55CCA8", VA = "0x55CCA8")]
		private void SetStylusPosition(UiStylus stylus, HandType hand, StylusPosition stylusPosition, Vector3 customStylusPosition)
		{
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x55D558", Offset = "0x55D558", VA = "0x55D558")]
		public GameObject GetLeftHand()
		{
			return null;
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x55D560", Offset = "0x55D560", VA = "0x55D560")]
		public GameObject GetRightHand()
		{
			return null;
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x55D568", Offset = "0x55D568", VA = "0x55D568")]
		public bool HasTarget(HandType targetHand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x55D704", Offset = "0x55D704", VA = "0x55D704")]
		public void TriggerInput(HandType targetHand)
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x55B9D4", Offset = "0x55B9D4", VA = "0x55B9D4")]
		public void SetStylusVisible(bool visible)
		{
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x55D794", Offset = "0x55D794", VA = "0x55D794")]
		public HandAbstraction()
		{
		}
	}
	[Token(Token = "0x200026F")]
	public class IsolatedEventSystem : EventSystem
	{
		[Token(Token = "0x600153C")]
		[Address(RVA = "0x55DD40", Offset = "0x55DD40", VA = "0x55DD40", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x55DD48", Offset = "0x55DD48", VA = "0x55DD48", Slot = "18")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0x55DDE8", Offset = "0x55DDE8", VA = "0x55DDE8")]
		public IsolatedEventSystem()
		{
		}
	}
	[Token(Token = "0x2000270")]
	public class PanelManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public XrNodeRig xrRig;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VrDebugDisplay templateDisplay;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public DebugPanel[] panels;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<VrDebugDisplay> displays;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool isInitialised;

		[Token(Token = "0x600153F")]
		[Address(RVA = "0x55DE64", Offset = "0x55DE64", VA = "0x55DE64")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0x55DF2C", Offset = "0x55DF2C", VA = "0x55DF2C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0x55CFA0", Offset = "0x55CFA0", VA = "0x55CFA0")]
		public void OnHandsDetected(Camera eventCamera)
		{
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0x55DF30", Offset = "0x55DF30", VA = "0x55DF30")]
		private void CreateDisplay(HandType handType, Transform targetHand, Camera eventCamera)
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x55E180", Offset = "0x55E180", VA = "0x55E180")]
		private VrDebugDisplay FindDisplay(HandType type)
		{
			return null;
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0x55E2BC", Offset = "0x55E2BC", VA = "0x55E2BC")]
		private DebugPanel FindPanel(string panelName)
		{
			return null;
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0x55E33C", Offset = "0x55E33C", VA = "0x55E33C")]
		private void AttachPanel(VrDebugDisplay display, DebugPanel panel)
		{
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0x55E85C", Offset = "0x55E85C", VA = "0x55E85C")]
		public void ChangePanel(int direction, VrDebugDisplay display, DebugPanel currentPanel)
		{
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0x55BB74", Offset = "0x55BB74", VA = "0x55BB74")]
		public void SetDisplaysVisible(bool visible)
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0x55EB38", Offset = "0x55EB38", VA = "0x55EB38")]
		public PanelManager()
		{
		}
	}
	[Token(Token = "0x2000271")]
	public class ReadOnlyAttribute : PropertyAttribute
	{
		[Token(Token = "0x6001549")]
		[Address(RVA = "0x55EBBC", Offset = "0x55EBBC", VA = "0x55EBBC")]
		public ReadOnlyAttribute()
		{
		}
	}
	[Token(Token = "0x2000272")]
	public class UiIgnoreRaycast : UnityEngine.MonoBehaviour, ICanvasRaycastFilter
	{
		[Token(Token = "0x600154A")]
		[Address(RVA = "0x55EBC4", Offset = "0x55EBC4", VA = "0x55EBC4", Slot = "4")]
		public bool IsRaycastLocationValid(Vector2 sp, Camera eventCamera)
		{
			return default(bool);
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0x55EBCC", Offset = "0x55EBCC", VA = "0x55EBCC")]
		public UiIgnoreRaycast()
		{
		}
	}
	[Token(Token = "0x2000273")]
	public class UiLaser : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[ReadOnly]
		public GameObject targetHand;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private WandInputModule inputModule;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private GameObject cylinder;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VrDebugDisplay[] displays;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float lastDistance;

		[Token(Token = "0x600154C")]
		[Address(RVA = "0x55EBD4", Offset = "0x55EBD4", VA = "0x55EBD4")]
		private void Start()
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x55D3E4", Offset = "0x55D3E4", VA = "0x55D3E4")]
		public void CreateBeam(Material material)
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0x55ECB4", Offset = "0x55ECB4", VA = "0x55ECB4")]
		public void OnHandDetected(int index, GameObject handObj, WandInputModule wandInputModule)
		{
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0x55ECC0", Offset = "0x55ECC0", VA = "0x55ECC0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x55F438", Offset = "0x55F438", VA = "0x55F438")]
		private float CalcOpacity()
		{
			return default(float);
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0x55F534", Offset = "0x55F534", VA = "0x55F534")]
		private float CalcOpacity(VrDebugDisplay display)
		{
			return default(float);
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0x55F3BC", Offset = "0x55F3BC", VA = "0x55F3BC")]
		public bool IsPointingAtPanel()
		{
			return default(bool);
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x55F6A4", Offset = "0x55F6A4", VA = "0x55F6A4")]
		private bool IsPointingAtPanel(VrDebugDisplay display)
		{
			return default(bool);
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x55F894", Offset = "0x55F894", VA = "0x55F894")]
		public UiLaser()
		{
		}
	}
	[Token(Token = "0x2000274")]
	public class UiStylus : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Material laserMaterial;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material ballMaterial;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public HandType handType;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WandInputModule inputModule;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private VrDebugDisplay[] displays;

		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject sphereObj;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private GameObject laserObj;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool isButtonDown;

		[Token(Token = "0x6001555")]
		[Address(RVA = "0x55F8A8", Offset = "0x55F8A8", VA = "0x55F8A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0x55FD14", Offset = "0x55FD14", VA = "0x55FD14")]
		private void Update()
		{
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0x5605A0", Offset = "0x5605A0", VA = "0x5605A0")]
		private void SetVisualEnabled(bool visible)
		{
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0x5601B0", Offset = "0x5601B0", VA = "0x5601B0")]
		private VrDebugDisplay FindClosestDisplay()
		{
			return null;
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0x55D678", Offset = "0x55D678", VA = "0x55D678")]
		public bool IsPointingAtPanel()
		{
			return default(bool);
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0x5605D0", Offset = "0x5605D0", VA = "0x5605D0")]
		public UiStylus()
		{
		}
	}
	[Token(Token = "0x2000275")]
	public enum StylusPosition
	{
		[Token(Token = "0x400117B")]
		Bottom,
		[Token(Token = "0x400117C")]
		Left,
		[Token(Token = "0x400117D")]
		Right,
		[Token(Token = "0x400117E")]
		Top,
		[Token(Token = "0x400117F")]
		Custom
	}
	[Token(Token = "0x2000276")]
	public enum CameraDetectionMode
	{
		[Token(Token = "0x4001181")]
		Automatic,
		[Token(Token = "0x4001182")]
		UseExplicitCameraReference,
		[Token(Token = "0x4001183")]
		UseExplicitCameraName
	}
	[Token(Token = "0x2000277")]
	public class VirtualConsole : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool onlyInDebugBuilds;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A171C", Offset = "0x3A171C")]
		public StylusPosition leftStylusPosition;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public StylusPosition rightStylusPosition;

		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A1750", Offset = "0x3A1750")]
		public Vector3 customLeftStylusPosition;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 customRightStylusPosition;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A1784", Offset = "0x3A1784")]
		public CameraDetectionMode cameraDetectionMode;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Camera explicitVrCameraReference;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string explicitVrCameraName;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VirtualConsole instance;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private HandAbstraction handAbstraction;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private XrNodeRig xrNodeRig;

		[Token(Token = "0x17000236")]
		public static VirtualConsole Instance
		{
			[Token(Token = "0x600155B")]
			[Address(RVA = "0x5605D8", Offset = "0x5605D8", VA = "0x5605D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0x560630", Offset = "0x560630", VA = "0x560630")]
		private void Start()
		{
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0x56076C", Offset = "0x56076C", VA = "0x56076C")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0x560858", Offset = "0x560858", VA = "0x560858")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0x560928", Offset = "0x560928", VA = "0x560928")]
		public GameObject GetHand(HandType hand)
		{
			return null;
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0x5609C8", Offset = "0x5609C8", VA = "0x5609C8")]
		public bool HasTarget(HandType targetHand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0x560A7C", Offset = "0x560A7C", VA = "0x560A7C")]
		public void TriggerInput(HandType targetHand)
		{
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0x560B14", Offset = "0x560B14", VA = "0x560B14")]
		public VirtualConsole()
		{
		}
	}
	[Token(Token = "0x2000278")]
	public class VrConsole : DebugPanel
	{
		[Token(Token = "0x200074F")]
		private struct LogMessage
		{
			[Token(Token = "0x400285D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string text;

			[Token(Token = "0x400285E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public string stackTrace;

			[Token(Token = "0x400285F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public LogType type;

			[Token(Token = "0x4002860")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int sequenceNumber;

			[Token(Token = "0x60031E7")]
			[Address(RVA = "0x456148", Offset = "0x456148", VA = "0x456148")]
			public LogMessage(string t, string trace, LogType type, int seqNum)
			{
			}
		}

		[Token(Token = "0x2000750")]
		private struct LogLine
		{
			[Token(Token = "0x4002861")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string text;

			[Token(Token = "0x4002862")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Color colour;

			[Token(Token = "0x60031E8")]
			[Address(RVA = "0x456074", Offset = "0x456074", VA = "0x456074")]
			public LogLine(string s, Color c)
			{
			}

			[Token(Token = "0x60031E9")]
			[Address(RVA = "0x45609C", Offset = "0x45609C", VA = "0x45609C")]
			public string AsRichText()
			{
				return null;
			}

			[Token(Token = "0x60031EA")]
			[Address(RVA = "0x562D84", Offset = "0x562D84", VA = "0x562D84")]
			private static string ToHex(float val)
			{
				return null;
			}
		}

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<LogType, Color> logTypeColors;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Text consoleArea;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button infoToggleButton;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Button warningToggleButton;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Button errorToggleButton;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Text infoButtonText;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text warningButtonText;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Text errorButtonText;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private object mutex;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private List<LogMessage> infoMessages;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<LogMessage> warningMessages;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private List<LogMessage> errorMessages;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int numInfos;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int numWarnings;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int numErrors;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int nextSequenceNumber;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool hasMessagesChanged;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool showInfo;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool showWarnings;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		private bool showErrors;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int maxLines;

		[Token(Token = "0x6001563")]
		[Address(RVA = "0x560B24", Offset = "0x560B24", VA = "0x560B24")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0x560BAC", Offset = "0x560BAC", VA = "0x560BAC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0x560C34", Offset = "0x560C34", VA = "0x560C34")]
		private void Start()
		{
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0x561CC8", Offset = "0x561CC8", VA = "0x561CC8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0x561CD8", Offset = "0x561CD8", VA = "0x561CD8", Slot = "4")]
		public override void OnAttach()
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0x561CDC", Offset = "0x561CDC", VA = "0x561CDC", Slot = "5")]
		public override void OnDetach()
		{
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0x561CE0", Offset = "0x561CE0", VA = "0x561CE0", Slot = "6")]
		public override void OnResized(VrDebugDisplay.State size)
		{
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0x561CE4", Offset = "0x561CE4", VA = "0x561CE4")]
		private void HandleLog(string text, string stackTrace, LogType type)
		{
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0x560C50", Offset = "0x560C50", VA = "0x560C50")]
		private void UpdateLogVisual()
		{
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0x5623E8", Offset = "0x5623E8", VA = "0x5623E8")]
		private bool TryGenerateConsoleText(List<LogLine> lines, Text targetTextArea, int numLines, out string newText)
		{
			return default(bool);
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0x561EA8", Offset = "0x561EA8", VA = "0x561EA8")]
		private List<LogMessage> FindList(LogType type)
		{
			return null;
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x561EF0", Offset = "0x561EF0", VA = "0x561EF0")]
		private void IncLogCount(LogType type)
		{
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0x562750", Offset = "0x562750", VA = "0x562750")]
		private int SequenceComparator(LogMessage lhs, LogMessage rhs)
		{
			return default(int);
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0x561F58", Offset = "0x561F58", VA = "0x561F58")]
		private bool ParseTrace(string traceLine, out string namespaceName, out string className, out string methodName, out string fileName, out int lineNumber)
		{
			return default(bool);
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0x562770", Offset = "0x562770", VA = "0x562770")]
		public void ClearLog()
		{
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0x5628FC", Offset = "0x5628FC", VA = "0x5628FC")]
		public void ToggleInfo()
		{
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0x562914", Offset = "0x562914", VA = "0x562914")]
		public void ToggleWarnings()
		{
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0x56292C", Offset = "0x56292C", VA = "0x56292C")]
		public void ToggleErrors()
		{
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0x561AC0", Offset = "0x561AC0", VA = "0x561AC0")]
		private void UpdateButtonColours()
		{
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0x562944", Offset = "0x562944", VA = "0x562944")]
		private static void SetColour(Button button, Color col)
		{
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0x562A78", Offset = "0x562A78", VA = "0x562A78")]
		private static void SetText(Text text, int count)
		{
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0x562AD0", Offset = "0x562AD0", VA = "0x562AD0")]
		public VrConsole()
		{
		}
	}
	[Token(Token = "0x2000279")]
	public class VrDebugDisplay : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000751")]
		public enum State
		{
			[Token(Token = "0x4002864")]
			Collapsed,
			[Token(Token = "0x4002865")]
			NormalSize,
			[Token(Token = "0x4002866")]
			LargeSize
		}

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Canvas mainCanvas;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Canvas collapsedCanvas;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public HandType handType;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform center;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Transform panelAttach;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float panelScale;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Text titleText;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text maximiseText;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PanelManager panelManager;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[ReadOnly]
		public GameObject targetHand;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[ReadOnly]
		public Camera eventCamera;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private State state;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private State prevState;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private DebugPanel attachedPanel;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool disableCanvasWhenNotInView;

		[Token(Token = "0x600157A")]
		[Address(RVA = "0x562E58", Offset = "0x562E58", VA = "0x562E58")]
		private void Start()
		{
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0x563050", Offset = "0x563050", VA = "0x563050")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0x563054", Offset = "0x563054", VA = "0x563054")]
		private void TrackTargetHand()
		{
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0x563444", Offset = "0x563444", VA = "0x563444")]
		public void AllowDisableCanvasWhenNotInView(bool allow)
		{
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0x56344C", Offset = "0x56344C", VA = "0x56344C")]
		public void OnToggleSize()
		{
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0x563824", Offset = "0x563824", VA = "0x563824")]
		public void OnCollapse()
		{
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0x5638BC", Offset = "0x5638BC", VA = "0x5638BC")]
		public void OnRestore()
		{
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0x563958", Offset = "0x563958", VA = "0x563958")]
		public void OnNextPanel()
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0x563998", Offset = "0x563998", VA = "0x563998")]
		public void OnPrevPanel()
		{
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0x560458", Offset = "0x560458", VA = "0x560458")]
		public float DistanceTo(Vector3 worldPosition)
		{
			return default(float);
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0x560320", Offset = "0x560320", VA = "0x560320")]
		public Vector3 FindClosestPoint(Vector3 worldPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0x5639D8", Offset = "0x5639D8", VA = "0x5639D8")]
		private Vector3 ClosestPoint(Vector3 worldPosition, Canvas canvas, Vector2 canvasSize)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0x55E41C", Offset = "0x55E41C", VA = "0x55E41C")]
		public void Attach(DebugPanel newPanel)
		{
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0x55EAE8", Offset = "0x55EAE8", VA = "0x55EAE8")]
		public void SetDisplayVisible(bool visible)
		{
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0x563B68", Offset = "0x563B68", VA = "0x563B68")]
		public VrDebugDisplay()
		{
		}
	}
	[Token(Token = "0x200027A")]
	public class VrDebugStats : DebugPanel
	{
		[Token(Token = "0x2000752")]
		private class StatPage
		{
			[Token(Token = "0x4002867")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private Dictionary<string, string> stats;

			[Token(Token = "0x60031EB")]
			[Address(RVA = "0x564F9C", Offset = "0x564F9C", VA = "0x564F9C")]
			public StatPage(string cat)
			{
			}

			[Token(Token = "0x60031EC")]
			[Address(RVA = "0x564F20", Offset = "0x564F20", VA = "0x564F20")]
			public void SetStat(string name, string value)
			{
			}

			[Token(Token = "0x60031ED")]
			[Address(RVA = "0x564710", Offset = "0x564710", VA = "0x564710")]
			public void GetStats(List<string> keys, List<string> values)
			{
			}
		}

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Text pageTitle;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text fullPanelText;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Text leftCollumnText;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text rightCollumnText;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool allowLogging;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static Dictionary<string, StatPage> pages;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<string> categories;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static bool hasStatsChanged;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private string currentCategory;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool useTwoCollumns;

		[Token(Token = "0x6001589")]
		[Address(RVA = "0x563B84", Offset = "0x563B84", VA = "0x563B84")]
		private void Start()
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x563C74", Offset = "0x563C74", VA = "0x563C74")]
		private void Update()
		{
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0x564350", Offset = "0x564350", VA = "0x564350", Slot = "4")]
		public override void OnAttach()
		{
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0x5643CC", Offset = "0x5643CC", VA = "0x5643CC", Slot = "5")]
		public override void OnDetach()
		{
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0x5643D0", Offset = "0x5643D0", VA = "0x5643D0", Slot = "6")]
		public override void OnResized(VrDebugDisplay.State size)
		{
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0x563D30", Offset = "0x563D30", VA = "0x563D30")]
		private void UpdateStats()
		{
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0x5648CC", Offset = "0x5648CC", VA = "0x5648CC")]
		private bool TryGenerateConsoleText(List<string> lines, Text targetTextArea, int numLines, out string newText)
		{
			return default(bool);
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0x564A60", Offset = "0x564A60", VA = "0x564A60")]
		public void ClearStats()
		{
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0x564B54", Offset = "0x564B54", VA = "0x564B54")]
		public void PrevCategory()
		{
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0x564DBC", Offset = "0x564DBC", VA = "0x564DBC")]
		public void NextCateogry()
		{
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0x564B5C", Offset = "0x564B5C", VA = "0x564B5C")]
		private void ChangeCategory(int direction)
		{
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0x564DC4", Offset = "0x564DC4", VA = "0x564DC4")]
		public static void AllowLogging(bool allow)
		{
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0x55C464", Offset = "0x55C464", VA = "0x55C464")]
		public static void SetStat(string category, string name, bool value)
		{
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0x55C2D4", Offset = "0x55C2D4", VA = "0x55C2D4")]
		public static void SetStat(string category, string name, int value)
		{
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0x564E40", Offset = "0x564E40", VA = "0x564E40")]
		public static void SetStat(string category, string name, string value)
		{
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0x564514", Offset = "0x564514", VA = "0x564514")]
		private static StatPage FindPage(string categoryName)
		{
			return null;
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0x565020", Offset = "0x565020", VA = "0x565020")]
		public VrDebugStats()
		{
		}
	}
	[Token(Token = "0x200027B")]
	public class WandInputModule : BaseInputModule
	{
		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static WandInputModule Instance;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A17D8", Offset = "0x3A17D8")]
		public Sprite CursorSprite;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material CursorMaterial;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float NormalCursorScale;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x3A180C", Offset = "0x3A180C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3A180C", Offset = "0x3A180C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A180C", Offset = "0x3A180C")]
		public bool guiHit;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A1884", Offset = "0x3A1884")]
		public bool ButtonUsed;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A18B8", Offset = "0x3A18B8")]
		public RectTransform[] Cursors;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A18EC", Offset = "0x3A18EC")]
		public Camera ControllerCamera;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color[] cursorColours;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool ignoreOverlayCanvases;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Transform[] raycastOrigin;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool[] raycastActive;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private GameObject[] CurrentPoint;

		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject[] CurrentPressed;

		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private GameObject[] CurrentDragging;

		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3[] CurrentRaycastPosition;

		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Ray[] LastRays;

		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PointerEventData[] PointEvents;

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool[] latchedDownEdges;

		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool[] latchedUpEdges;

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool Initialized;

		[Token(Token = "0x600159B")]
		[Address(RVA = "0x565158", Offset = "0x565158", VA = "0x565158", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0x565160", Offset = "0x565160", VA = "0x565160", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0x55CF9C", Offset = "0x55CF9C", VA = "0x55CF9C")]
		public void OnHandsDetected(HandAbstraction hands)
		{
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0x55CE68", Offset = "0x55CE68", VA = "0x55CE68")]
		public void SetRaycastOrigins(Transform leftOrigin, Transform rightOrigin)
		{
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0x5602B8", Offset = "0x5602B8", VA = "0x5602B8")]
		public void SetRaycastActive(HandType hand, bool isActive)
		{
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0x565168", Offset = "0x565168", VA = "0x565168")]
		private void Initialise()
		{
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0x565C1C", Offset = "0x565C1C", VA = "0x565C1C")]
		public Camera GetControllerCamera()
		{
			return null;
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0x565C24", Offset = "0x565C24", VA = "0x565C24")]
		private bool GetLookPointerEventData(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0x5663C4", Offset = "0x5663C4", VA = "0x5663C4")]
		private static Canvas FindParentCanvas(GameObject obj)
		{
			return null;
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0x566528", Offset = "0x566528", VA = "0x566528")]
		private void UpdateCursor(int index, PointerEventData pointData)
		{
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0x566A50", Offset = "0x566A50", VA = "0x566A50")]
		public void ClearSelection()
		{
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0x566B08", Offset = "0x566B08", VA = "0x566B08")]
		private void Select(GameObject go)
		{
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0x566C04", Offset = "0x566C04", VA = "0x566C04")]
		private bool SendUpdateEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0x566D9C", Offset = "0x566D9C", VA = "0x566D9C")]
		private void UpdateCameraPosition(int index)
		{
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0x566EAC", Offset = "0x566EAC", VA = "0x566EAC", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0x5684C8", Offset = "0x5684C8", VA = "0x5684C8")]
		private bool ButtonDown(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0x568554", Offset = "0x568554", VA = "0x568554")]
		private bool ButtonUp(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0x56055C", Offset = "0x56055C", VA = "0x56055C")]
		public void LatchButtonDown(int index)
		{
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0x560518", Offset = "0x560518", VA = "0x560518")]
		public void LatchButtonUp(int index)
		{
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x55F2B0", Offset = "0x55F2B0", VA = "0x55F2B0")]
		public bool HasCurrentPointTarget(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x55F368", Offset = "0x55F368", VA = "0x55F368")]
		public Vector3 GetCurrentPointPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x5685E0", Offset = "0x5685E0", VA = "0x5685E0")]
		public bool HasLeftPointTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x56868C", Offset = "0x56868C", VA = "0x56868C")]
		public bool HasRightPointTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0x55D708", Offset = "0x55D708", VA = "0x55D708")]
		public void SetCursorsVisible(bool visible)
		{
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0x568738", Offset = "0x568738", VA = "0x568738")]
		public WandInputModule()
		{
		}
	}
	[Token(Token = "0x200027C")]
	public class XrNodeRig : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Transform headTransform;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform leftHandTransform;

		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Transform rightHandTransform;

		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CameraDetectionMode cameraDetectionMode;

		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Camera explicitVrCameraReference;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string explicitVrCameraName;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Camera vrCamera;

		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool hasShowExplicitCameraWarning;

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0x560760", Offset = "0x560760", VA = "0x560760")]
		public void SetCameraDetection(CameraDetectionMode mode, Camera explicitRef, string explicitName)
		{
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0x568860", Offset = "0x568860", VA = "0x568860")]
		private void Update()
		{
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0x56922C", Offset = "0x56922C", VA = "0x56922C")]
		private void Sync(XRNodeState node, Transform destTransform)
		{
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0x568DF8", Offset = "0x568DF8", VA = "0x568DF8")]
		private bool IsVrCameraValid()
		{
			return default(bool);
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0x568EDC", Offset = "0x568EDC", VA = "0x568EDC")]
		private void FindVrCamera()
		{
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x569358", Offset = "0x569358", VA = "0x569358")]
		public XrNodeRig()
		{
		}
	}
}
namespace DeviceNetwork
{
	[Token(Token = "0x200027D")]
	public enum DeviceNetworkProtocol
	{
		[Token(Token = "0x40011DB")]
		None,
		[Token(Token = "0x40011DC")]
		CS_Req_ChangeHMDLauncher,
		[Token(Token = "0x40011DD")]
		CS_Ack_ChangeVRApp,
		[Token(Token = "0x40011DE")]
		SC_Ack_ChangeHMDLauncher,
		[Token(Token = "0x40011DF")]
		SC_Req_ChangeVRApp,
		[Token(Token = "0x40011E0")]
		SC_Req_QuitVRApp,
		[Token(Token = "0x40011E1")]
		CS_Req_ShowHideOverlay,
		[Token(Token = "0x40011E2")]
		SC_Ack_ShowHideOverlay,
		[Token(Token = "0x40011E3")]
		CS_Ack_ShowHideOverlay,
		[Token(Token = "0x40011E4")]
		SC_Req_ErrorCode,
		[Token(Token = "0x40011E5")]
		CS_Ack_ErrorCode,
		[Token(Token = "0x40011E6")]
		SC_Req_GetVersionInfo,
		[Token(Token = "0x40011E7")]
		CS_Ack_GetVersionInfo,
		[Token(Token = "0x40011E8")]
		CS_Req_SendVGSInfo,
		[Token(Token = "0x40011E9")]
		SC_Ack_SendVGSInfo,
		[Token(Token = "0x40011EA")]
		Max
	}
	[Token(Token = "0x200027E")]
	public enum eErrorCodeType
	{
		[Token(Token = "0x40011EC")]
		None,
		[Token(Token = "0x40011ED")]
		AppQuitByFailedConnectToVGS,
		[Token(Token = "0x40011EE")]
		Max
	}
	[Serializable]
	[Token(Token = "0x200027F")]
	public class DevicePacketData
	{
		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Protocol;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string Data;

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x7FB654", Offset = "0x7FB654", VA = "0x7FB654")]
		public DevicePacketData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000280")]
	public class DevicePacketDataOverlay
	{
		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Request;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string Result;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Data;

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0x7FBDB0", Offset = "0x7FBDB0", VA = "0x7FBDB0")]
		public DevicePacketDataOverlay()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000281")]
	public class DevicePacketDataOverlayAppName
	{
		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string AppName;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string AppFolderName;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string WindowHandle;

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x7FC4E8", Offset = "0x7FC4E8", VA = "0x7FC4E8")]
		public DevicePacketDataOverlayAppName()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000282")]
	public class DevicePacketDataOverlaySetting
	{
		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string OverlayKey;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float Scale;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float AdditionalHeight;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float DistanceFromCamera;

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x7FCCF8", Offset = "0x7FCCF8", VA = "0x7FCCF8")]
		public DevicePacketDataOverlaySetting()
		{
		}
	}
	[Token(Token = "0x2000283")]
	public static class JsonUtilityCustom
	{
		[Token(Token = "0x60015BE")]
		public static T FromJson<T>(T instance, string data) where T : class
		{
			return null;
		}
	}
}
namespace Valve.VR
{
	[Token(Token = "0x2000284")]
	public struct IVRSystem
	{
		[Token(Token = "0x2000753")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39BFF4", Offset = "0x39BFF4")]
		internal delegate void _GetRecommendedRenderTargetSize(ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x2000754")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C008", Offset = "0x39C008")]
		internal delegate HmdMatrix44_t _GetProjectionMatrix(EVREye eEye, float fNearZ, float fFarZ);

		[Token(Token = "0x2000755")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C01C", Offset = "0x39C01C")]
		internal delegate void _GetProjectionRaw(EVREye eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom);

		[Token(Token = "0x2000756")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C030", Offset = "0x39C030")]
		internal delegate bool _ComputeDistortion(EVREye eEye, float fU, float fV, ref DistortionCoordinates_t pDistortionCoordinates);

		[Token(Token = "0x2000757")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C044", Offset = "0x39C044")]
		internal delegate HmdMatrix34_t _GetEyeToHeadTransform(EVREye eEye);

		[Token(Token = "0x2000758")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C058", Offset = "0x39C058")]
		internal delegate bool _GetTimeSinceLastVsync(ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter);

		[Token(Token = "0x2000759")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C06C", Offset = "0x39C06C")]
		internal delegate int _GetD3D9AdapterIndex();

		[Token(Token = "0x200075A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C080", Offset = "0x39C080")]
		internal delegate void _GetDXGIOutputInfo(ref int pnAdapterIndex);

		[Token(Token = "0x200075B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C094", Offset = "0x39C094")]
		internal delegate void _GetOutputDevice(ref ulong pnDevice, ETextureType textureType, IntPtr pInstance);

		[Token(Token = "0x200075C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C0A8", Offset = "0x39C0A8")]
		internal delegate bool _IsDisplayOnDesktop();

		[Token(Token = "0x200075D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C0BC", Offset = "0x39C0BC")]
		internal delegate bool _SetDisplayVisibility(bool bIsVisibleOnDesktop);

		[Token(Token = "0x200075E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C0D0", Offset = "0x39C0D0")]
		internal delegate void _GetDeviceToAbsoluteTrackingPose(ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, [In][Out] TrackedDevicePose_t[] pTrackedDevicePoseArray, uint unTrackedDevicePoseArrayCount);

		[Token(Token = "0x200075F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C0E4", Offset = "0x39C0E4")]
		internal delegate void _ResetSeatedZeroPose();

		[Token(Token = "0x2000760")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C0F8", Offset = "0x39C0F8")]
		internal delegate HmdMatrix34_t _GetSeatedZeroPoseToStandingAbsoluteTrackingPose();

		[Token(Token = "0x2000761")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C10C", Offset = "0x39C10C")]
		internal delegate HmdMatrix34_t _GetRawZeroPoseToStandingAbsoluteTrackingPose();

		[Token(Token = "0x2000762")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C120", Offset = "0x39C120")]
		internal delegate uint _GetSortedTrackedDeviceIndicesOfClass(ETrackedDeviceClass eTrackedDeviceClass, [In][Out] uint[] punTrackedDeviceIndexArray, uint unTrackedDeviceIndexArrayCount, uint unRelativeToTrackedDeviceIndex);

		[Token(Token = "0x2000763")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C134", Offset = "0x39C134")]
		internal delegate EDeviceActivityLevel _GetTrackedDeviceActivityLevel(uint unDeviceId);

		[Token(Token = "0x2000764")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C148", Offset = "0x39C148")]
		internal delegate void _ApplyTransform(ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pTrackedDevicePose, ref HmdMatrix34_t pTransform);

		[Token(Token = "0x2000765")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C15C", Offset = "0x39C15C")]
		internal delegate uint _GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole unDeviceType);

		[Token(Token = "0x2000766")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C170", Offset = "0x39C170")]
		internal delegate ETrackedControllerRole _GetControllerRoleForTrackedDeviceIndex(uint unDeviceIndex);

		[Token(Token = "0x2000767")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C184", Offset = "0x39C184")]
		internal delegate ETrackedDeviceClass _GetTrackedDeviceClass(uint unDeviceIndex);

		[Token(Token = "0x2000768")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C198", Offset = "0x39C198")]
		internal delegate bool _IsTrackedDeviceConnected(uint unDeviceIndex);

		[Token(Token = "0x2000769")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C1AC", Offset = "0x39C1AC")]
		internal delegate bool _GetBoolTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x200076A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C1C0", Offset = "0x39C1C0")]
		internal delegate float _GetFloatTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x200076B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C1D4", Offset = "0x39C1D4")]
		internal delegate int _GetInt32TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x200076C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C1E8", Offset = "0x39C1E8")]
		internal delegate ulong _GetUint64TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x200076D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C1FC", Offset = "0x39C1FC")]
		internal delegate HmdMatrix34_t _GetMatrix34TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x200076E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C210", Offset = "0x39C210")]
		internal delegate uint _GetArrayTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, uint propType, IntPtr pBuffer, uint unBufferSize, ref ETrackedPropertyError pError);

		[Token(Token = "0x200076F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C224", Offset = "0x39C224")]
		internal delegate uint _GetStringTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, StringBuilder pchValue, uint unBufferSize, ref ETrackedPropertyError pError);

		[Token(Token = "0x2000770")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C238", Offset = "0x39C238")]
		internal delegate IntPtr _GetPropErrorNameFromEnum(ETrackedPropertyError error);

		[Token(Token = "0x2000771")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C24C", Offset = "0x39C24C")]
		internal delegate bool _PollNextEvent(ref VREvent_t pEvent, uint uncbVREvent);

		[Token(Token = "0x2000772")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C260", Offset = "0x39C260")]
		internal delegate bool _PollNextEventWithPose(ETrackingUniverseOrigin eOrigin, ref VREvent_t pEvent, uint uncbVREvent, ref TrackedDevicePose_t pTrackedDevicePose);

		[Token(Token = "0x2000773")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C274", Offset = "0x39C274")]
		internal delegate IntPtr _GetEventTypeNameFromEnum(EVREventType eType);

		[Token(Token = "0x2000774")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C288", Offset = "0x39C288")]
		internal delegate HiddenAreaMesh_t _GetHiddenAreaMesh(EVREye eEye, EHiddenAreaMeshType type);

		[Token(Token = "0x2000775")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C29C", Offset = "0x39C29C")]
		internal delegate bool _GetControllerState(uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize);

		[Token(Token = "0x2000776")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C2B0", Offset = "0x39C2B0")]
		internal delegate bool _GetControllerStateWithPose(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose);

		[Token(Token = "0x2000777")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C2C4", Offset = "0x39C2C4")]
		internal delegate void _TriggerHapticPulse(uint unControllerDeviceIndex, uint unAxisId, char usDurationMicroSec);

		[Token(Token = "0x2000778")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C2D8", Offset = "0x39C2D8")]
		internal delegate IntPtr _GetButtonIdNameFromEnum(EVRButtonId eButtonId);

		[Token(Token = "0x2000779")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C2EC", Offset = "0x39C2EC")]
		internal delegate IntPtr _GetControllerAxisTypeNameFromEnum(EVRControllerAxisType eAxisType);

		[Token(Token = "0x200077A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C300", Offset = "0x39C300")]
		internal delegate bool _IsInputAvailable();

		[Token(Token = "0x200077B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C314", Offset = "0x39C314")]
		internal delegate bool _IsSteamVRDrawingControllers();

		[Token(Token = "0x200077C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C328", Offset = "0x39C328")]
		internal delegate bool _ShouldApplicationPause();

		[Token(Token = "0x200077D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C33C", Offset = "0x39C33C")]
		internal delegate bool _ShouldApplicationReduceRenderingWork();

		[Token(Token = "0x200077E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C350", Offset = "0x39C350")]
		internal delegate uint _DriverDebugRequest(uint unDeviceIndex, string pchRequest, StringBuilder pchResponseBuffer, uint unResponseBufferSize);

		[Token(Token = "0x200077F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C364", Offset = "0x39C364")]
		internal delegate EVRFirmwareError _PerformFirmwareUpdate(uint unDeviceIndex);

		[Token(Token = "0x2000780")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C378", Offset = "0x39C378")]
		internal delegate void _AcknowledgeQuit_Exiting();

		[Token(Token = "0x2000781")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C38C", Offset = "0x39C38C")]
		internal delegate void _AcknowledgeQuit_UserPrompt();

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetRecommendedRenderTargetSize GetRecommendedRenderTargetSize;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal _GetProjectionMatrix GetProjectionMatrix;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetProjectionRaw GetProjectionRaw;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal _ComputeDistortion ComputeDistortion;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetEyeToHeadTransform GetEyeToHeadTransform;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal _GetTimeSinceLastVsync GetTimeSinceLastVsync;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetD3D9AdapterIndex GetD3D9AdapterIndex;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal _GetDXGIOutputInfo GetDXGIOutputInfo;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetOutputDevice GetOutputDevice;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal _IsDisplayOnDesktop IsDisplayOnDesktop;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _SetDisplayVisibility SetDisplayVisibility;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal _GetDeviceToAbsoluteTrackingPose GetDeviceToAbsoluteTrackingPose;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _ResetSeatedZeroPose ResetSeatedZeroPose;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal _GetSeatedZeroPoseToStandingAbsoluteTrackingPose GetSeatedZeroPoseToStandingAbsoluteTrackingPose;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetRawZeroPoseToStandingAbsoluteTrackingPose GetRawZeroPoseToStandingAbsoluteTrackingPose;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		internal _GetSortedTrackedDeviceIndicesOfClass GetSortedTrackedDeviceIndicesOfClass;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetTrackedDeviceActivityLevel GetTrackedDeviceActivityLevel;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		internal _ApplyTransform ApplyTransform;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetTrackedDeviceIndexForControllerRole GetTrackedDeviceIndexForControllerRole;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		internal _GetControllerRoleForTrackedDeviceIndex GetControllerRoleForTrackedDeviceIndex;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetTrackedDeviceClass GetTrackedDeviceClass;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		internal _IsTrackedDeviceConnected IsTrackedDeviceConnected;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetBoolTrackedDeviceProperty GetBoolTrackedDeviceProperty;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		internal _GetFloatTrackedDeviceProperty GetFloatTrackedDeviceProperty;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _GetInt32TrackedDeviceProperty GetInt32TrackedDeviceProperty;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		internal _GetUint64TrackedDeviceProperty GetUint64TrackedDeviceProperty;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetMatrix34TrackedDeviceProperty GetMatrix34TrackedDeviceProperty;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		internal _GetArrayTrackedDeviceProperty GetArrayTrackedDeviceProperty;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _GetStringTrackedDeviceProperty GetStringTrackedDeviceProperty;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		internal _GetPropErrorNameFromEnum GetPropErrorNameFromEnum;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _PollNextEvent PollNextEvent;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		internal _PollNextEventWithPose PollNextEventWithPose;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetEventTypeNameFromEnum GetEventTypeNameFromEnum;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		internal _GetHiddenAreaMesh GetHiddenAreaMesh;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetControllerState GetControllerState;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		internal _GetControllerStateWithPose GetControllerStateWithPose;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _TriggerHapticPulse TriggerHapticPulse;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		internal _GetButtonIdNameFromEnum GetButtonIdNameFromEnum;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _GetControllerAxisTypeNameFromEnum GetControllerAxisTypeNameFromEnum;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		internal _IsInputAvailable IsInputAvailable;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _IsSteamVRDrawingControllers IsSteamVRDrawingControllers;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		internal _ShouldApplicationPause ShouldApplicationPause;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _ShouldApplicationReduceRenderingWork ShouldApplicationReduceRenderingWork;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		internal _DriverDebugRequest DriverDebugRequest;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _PerformFirmwareUpdate PerformFirmwareUpdate;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		internal _AcknowledgeQuit_Exiting AcknowledgeQuit_Exiting;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _AcknowledgeQuit_UserPrompt AcknowledgeQuit_UserPrompt;
	}
	[Token(Token = "0x2000285")]
	public struct IVRExtendedDisplay
	{
		[Token(Token = "0x2000782")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C3A0", Offset = "0x39C3A0")]
		internal delegate void _GetWindowBounds(ref int pnX, ref int pnY, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x2000783")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C3B4", Offset = "0x39C3B4")]
		internal delegate void _GetEyeOutputViewport(EVREye eEye, ref uint pnX, ref uint pnY, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x2000784")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C3C8", Offset = "0x39C3C8")]
		internal delegate void _GetDXGIOutputInfo(ref int pnAdapterIndex, ref int pnAdapterOutputIndex);

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetWindowBounds GetWindowBounds;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal _GetEyeOutputViewport GetEyeOutputViewport;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetDXGIOutputInfo GetDXGIOutputInfo;
	}
	[Token(Token = "0x2000286")]
	public struct IVRTrackedCamera
	{
		[Token(Token = "0x2000785")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C3DC", Offset = "0x39C3DC")]
		internal delegate IntPtr _GetCameraErrorNameFromEnum(EVRTrackedCameraError eCameraError);

		[Token(Token = "0x2000786")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C3F0", Offset = "0x39C3F0")]
		internal delegate EVRTrackedCameraError _HasCamera(uint nDeviceIndex, ref bool pHasCamera);

		[Token(Token = "0x2000787")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C404", Offset = "0x39C404")]
		internal delegate EVRTrackedCameraError _GetCameraFrameSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref uint pnWidth, ref uint pnHeight, ref uint pnFrameBufferSize);

		[Token(Token = "0x2000788")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C418", Offset = "0x39C418")]
		internal delegate EVRTrackedCameraError _GetCameraIntrinsics(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref HmdVector2_t pFocalLength, ref HmdVector2_t pCenter);

		[Token(Token = "0x2000789")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C42C", Offset = "0x39C42C")]
		internal delegate EVRTrackedCameraError _GetCameraProjection(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, float flZNear, float flZFar, ref HmdMatrix44_t pProjection);

		[Token(Token = "0x200078A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C440", Offset = "0x39C440")]
		internal delegate EVRTrackedCameraError _AcquireVideoStreamingService(uint nDeviceIndex, ref ulong pHandle);

		[Token(Token = "0x200078B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C454", Offset = "0x39C454")]
		internal delegate EVRTrackedCameraError _ReleaseVideoStreamingService(ulong hTrackedCamera);

		[Token(Token = "0x200078C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C468", Offset = "0x39C468")]
		internal delegate EVRTrackedCameraError _GetVideoStreamFrameBuffer(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pFrameBuffer, uint nFrameBufferSize, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x200078D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C47C", Offset = "0x39C47C")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref VRTextureBounds_t pTextureBounds, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x200078E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C490", Offset = "0x39C490")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureD3D11(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x200078F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C4A4", Offset = "0x39C4A4")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureGL(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, ref uint pglTextureId, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x2000790")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C4B8", Offset = "0x39C4B8")]
		internal delegate EVRTrackedCameraError _ReleaseVideoStreamTextureGL(ulong hTrackedCamera, uint glTextureId);

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetCameraErrorNameFromEnum GetCameraErrorNameFromEnum;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal _HasCamera HasCamera;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetCameraFrameSize GetCameraFrameSize;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal _GetCameraIntrinsics GetCameraIntrinsics;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetCameraProjection GetCameraProjection;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal _AcquireVideoStreamingService AcquireVideoStreamingService;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _ReleaseVideoStreamingService ReleaseVideoStreamingService;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal _GetVideoStreamFrameBuffer GetVideoStreamFrameBuffer;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetVideoStreamTextureSize GetVideoStreamTextureSize;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal _GetVideoStreamTextureD3D11 GetVideoStreamTextureD3D11;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetVideoStreamTextureGL GetVideoStreamTextureGL;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal _ReleaseVideoStreamTextureGL ReleaseVideoStreamTextureGL;
	}
	[Token(Token = "0x2000287")]
	public struct IVRApplications
	{
		[Token(Token = "0x2000791")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C4CC", Offset = "0x39C4CC")]
		internal delegate EVRApplicationError _AddApplicationManifest(string pchApplicationManifestFullPath, bool bTemporary);

		[Token(Token = "0x2000792")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C4E0", Offset = "0x39C4E0")]
		internal delegate EVRApplicationError _RemoveApplicationManifest(string pchApplicationManifestFullPath);

		[Token(Token = "0x2000793")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C4F4", Offset = "0x39C4F4")]
		internal delegate bool _IsApplicationInstalled(string pchAppKey);

		[Token(Token = "0x2000794")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C508", Offset = "0x39C508")]
		internal delegate uint _GetApplicationCount();

		[Token(Token = "0x2000795")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C51C", Offset = "0x39C51C")]
		internal delegate EVRApplicationError _GetApplicationKeyByIndex(uint unApplicationIndex, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x2000796")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C530", Offset = "0x39C530")]
		internal delegate EVRApplicationError _GetApplicationKeyByProcessId(uint unProcessId, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x2000797")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C544", Offset = "0x39C544")]
		internal delegate EVRApplicationError _LaunchApplication(string pchAppKey);

		[Token(Token = "0x2000798")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C558", Offset = "0x39C558")]
		internal delegate EVRApplicationError _LaunchTemplateApplication(string pchTemplateAppKey, string pchNewAppKey, [In][Out] AppOverrideKeys_t[] pKeys, uint unKeys);

		[Token(Token = "0x2000799")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C56C", Offset = "0x39C56C")]
		internal delegate EVRApplicationError _LaunchApplicationFromMimeType(string pchMimeType, string pchArgs);

		[Token(Token = "0x200079A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C580", Offset = "0x39C580")]
		internal delegate EVRApplicationError _LaunchDashboardOverlay(string pchAppKey);

		[Token(Token = "0x200079B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C594", Offset = "0x39C594")]
		internal delegate bool _CancelApplicationLaunch(string pchAppKey);

		[Token(Token = "0x200079C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C5A8", Offset = "0x39C5A8")]
		internal delegate EVRApplicationError _IdentifyApplication(uint unProcessId, string pchAppKey);

		[Token(Token = "0x200079D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C5BC", Offset = "0x39C5BC")]
		internal delegate uint _GetApplicationProcessId(string pchAppKey);

		[Token(Token = "0x200079E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C5D0", Offset = "0x39C5D0")]
		internal delegate IntPtr _GetApplicationsErrorNameFromEnum(EVRApplicationError error);

		[Token(Token = "0x200079F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C5E4", Offset = "0x39C5E4")]
		internal delegate uint _GetApplicationPropertyString(string pchAppKey, EVRApplicationProperty eProperty, StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, ref EVRApplicationError peError);

		[Token(Token = "0x20007A0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C5F8", Offset = "0x39C5F8")]
		internal delegate bool _GetApplicationPropertyBool(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError);

		[Token(Token = "0x20007A1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C60C", Offset = "0x39C60C")]
		internal delegate ulong _GetApplicationPropertyUint64(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError);

		[Token(Token = "0x20007A2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C620", Offset = "0x39C620")]
		internal delegate EVRApplicationError _SetApplicationAutoLaunch(string pchAppKey, bool bAutoLaunch);

		[Token(Token = "0x20007A3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C634", Offset = "0x39C634")]
		internal delegate bool _GetApplicationAutoLaunch(string pchAppKey);

		[Token(Token = "0x20007A4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C648", Offset = "0x39C648")]
		internal delegate EVRApplicationError _SetDefaultApplicationForMimeType(string pchAppKey, string pchMimeType);

		[Token(Token = "0x20007A5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C65C", Offset = "0x39C65C")]
		internal delegate bool _GetDefaultApplicationForMimeType(string pchMimeType, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x20007A6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C670", Offset = "0x39C670")]
		internal delegate bool _GetApplicationSupportedMimeTypes(string pchAppKey, StringBuilder pchMimeTypesBuffer, uint unMimeTypesBuffer);

		[Token(Token = "0x20007A7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C684", Offset = "0x39C684")]
		internal delegate uint _GetApplicationsThatSupportMimeType(string pchMimeType, StringBuilder pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer);

		[Token(Token = "0x20007A8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C698", Offset = "0x39C698")]
		internal delegate uint _GetApplicationLaunchArguments(uint unHandle, StringBuilder pchArgs, uint unArgs);

		[Token(Token = "0x20007A9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C6AC", Offset = "0x39C6AC")]
		internal delegate EVRApplicationError _GetStartingApplication(StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x20007AA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C6C0", Offset = "0x39C6C0")]
		internal delegate EVRApplicationTransitionState _GetTransitionState();

		[Token(Token = "0x20007AB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C6D4", Offset = "0x39C6D4")]
		internal delegate EVRApplicationError _PerformApplicationPrelaunchCheck(string pchAppKey);

		[Token(Token = "0x20007AC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C6E8", Offset = "0x39C6E8")]
		internal delegate IntPtr _GetApplicationsTransitionStateNameFromEnum(EVRApplicationTransitionState state);

		[Token(Token = "0x20007AD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C6FC", Offset = "0x39C6FC")]
		internal delegate bool _IsQuitUserPromptRequested();

		[Token(Token = "0x20007AE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C710", Offset = "0x39C710")]
		internal delegate EVRApplicationError _LaunchInternalProcess(string pchBinaryPath, string pchArguments, string pchWorkingDirectory);

		[Token(Token = "0x20007AF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C724", Offset = "0x39C724")]
		internal delegate uint _GetCurrentSceneProcessId();

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _AddApplicationManifest AddApplicationManifest;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal _RemoveApplicationManifest RemoveApplicationManifest;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _IsApplicationInstalled IsApplicationInstalled;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal _GetApplicationCount GetApplicationCount;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetApplicationKeyByIndex GetApplicationKeyByIndex;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal _GetApplicationKeyByProcessId GetApplicationKeyByProcessId;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _LaunchApplication LaunchApplication;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal _LaunchTemplateApplication LaunchTemplateApplication;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _LaunchApplicationFromMimeType LaunchApplicationFromMimeType;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal _LaunchDashboardOverlay LaunchDashboardOverlay;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _CancelApplicationLaunch CancelApplicationLaunch;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal _IdentifyApplication IdentifyApplication;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetApplicationProcessId GetApplicationProcessId;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal _GetApplicationsErrorNameFromEnum GetApplicationsErrorNameFromEnum;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetApplicationPropertyString GetApplicationPropertyString;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		internal _GetApplicationPropertyBool GetApplicationPropertyBool;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetApplicationPropertyUint64 GetApplicationPropertyUint64;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		internal _SetApplicationAutoLaunch SetApplicationAutoLaunch;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetApplicationAutoLaunch GetApplicationAutoLaunch;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		internal _SetDefaultApplicationForMimeType SetDefaultApplicationForMimeType;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetDefaultApplicationForMimeType GetDefaultApplicationForMimeType;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		internal _GetApplicationSupportedMimeTypes GetApplicationSupportedMimeTypes;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetApplicationsThatSupportMimeType GetApplicationsThatSupportMimeType;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		internal _GetApplicationLaunchArguments GetApplicationLaunchArguments;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _GetStartingApplication GetStartingApplication;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		internal _GetTransitionState GetTransitionState;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _PerformApplicationPrelaunchCheck PerformApplicationPrelaunchCheck;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		internal _GetApplicationsTransitionStateNameFromEnum GetApplicationsTransitionStateNameFromEnum;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _IsQuitUserPromptRequested IsQuitUserPromptRequested;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		internal _LaunchInternalProcess LaunchInternalProcess;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetCurrentSceneProcessId GetCurrentSceneProcessId;
	}
	[Token(Token = "0x2000288")]
	public struct IVRChaperone
	{
		[Token(Token = "0x20007B0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C738", Offset = "0x39C738")]
		internal delegate ChaperoneCalibrationState _GetCalibrationState();

		[Token(Token = "0x20007B1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C74C", Offset = "0x39C74C")]
		internal delegate bool _GetPlayAreaSize(ref float pSizeX, ref float pSizeZ);

		[Token(Token = "0x20007B2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C760", Offset = "0x39C760")]
		internal delegate bool _GetPlayAreaRect(ref HmdQuad_t rect);

		[Token(Token = "0x20007B3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C774", Offset = "0x39C774")]
		internal delegate void _ReloadInfo();

		[Token(Token = "0x20007B4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C788", Offset = "0x39C788")]
		internal delegate void _SetSceneColor(HmdColor_t color);

		[Token(Token = "0x20007B5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C79C", Offset = "0x39C79C")]
		internal delegate void _GetBoundsColor(ref HmdColor_t pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, ref HmdColor_t pOutputCameraColor);

		[Token(Token = "0x20007B6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C7B0", Offset = "0x39C7B0")]
		internal delegate bool _AreBoundsVisible();

		[Token(Token = "0x20007B7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C7C4", Offset = "0x39C7C4")]
		internal delegate void _ForceBoundsVisible(bool bForce);

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetCalibrationState GetCalibrationState;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal _GetPlayAreaSize GetPlayAreaSize;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetPlayAreaRect GetPlayAreaRect;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal _ReloadInfo ReloadInfo;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _SetSceneColor SetSceneColor;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal _GetBoundsColor GetBoundsColor;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _AreBoundsVisible AreBoundsVisible;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal _ForceBoundsVisible ForceBoundsVisible;
	}
	[Token(Token = "0x2000289")]
	public struct IVRChaperoneSetup
	{
		[Token(Token = "0x20007B8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C7D8", Offset = "0x39C7D8")]
		internal delegate bool _CommitWorkingCopy(EChaperoneConfigFile configFile);

		[Token(Token = "0x20007B9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C7EC", Offset = "0x39C7EC")]
		internal delegate void _RevertWorkingCopy();

		[Token(Token = "0x20007BA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C800", Offset = "0x39C800")]
		internal delegate bool _GetWorkingPlayAreaSize(ref float pSizeX, ref float pSizeZ);

		[Token(Token = "0x20007BB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C814", Offset = "0x39C814")]
		internal delegate bool _GetWorkingPlayAreaRect(ref HmdQuad_t rect);

		[Token(Token = "0x20007BC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C828", Offset = "0x39C828")]
		internal delegate bool _GetWorkingCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x20007BD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C83C", Offset = "0x39C83C")]
		internal delegate bool _GetLiveCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x20007BE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C850", Offset = "0x39C850")]
		internal delegate bool _GetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x20007BF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C864", Offset = "0x39C864")]
		internal delegate bool _GetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose);

		[Token(Token = "0x20007C0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C878", Offset = "0x39C878")]
		internal delegate void _SetWorkingPlayAreaSize(float sizeX, float sizeZ);

		[Token(Token = "0x20007C1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C88C", Offset = "0x39C88C")]
		internal delegate void _SetWorkingCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint unQuadsCount);

		[Token(Token = "0x20007C2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C8A0", Offset = "0x39C8A0")]
		internal delegate void _SetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x20007C3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C8B4", Offset = "0x39C8B4")]
		internal delegate void _SetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose);

		[Token(Token = "0x20007C4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C8C8", Offset = "0x39C8C8")]
		internal delegate void _ReloadFromDisk(EChaperoneConfigFile configFile);

		[Token(Token = "0x20007C5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C8DC", Offset = "0x39C8DC")]
		internal delegate bool _GetLiveSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x20007C6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C8F0", Offset = "0x39C8F0")]
		internal delegate void _SetWorkingCollisionBoundsTagsInfo([In][Out] byte[] pTagsBuffer, uint unTagCount);

		[Token(Token = "0x20007C7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C904", Offset = "0x39C904")]
		internal delegate bool _GetLiveCollisionBoundsTagsInfo([In][Out] byte[] pTagsBuffer, ref uint punTagCount);

		[Token(Token = "0x20007C8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C918", Offset = "0x39C918")]
		internal delegate bool _SetWorkingPhysicalBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint unQuadsCount);

		[Token(Token = "0x20007C9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C92C", Offset = "0x39C92C")]
		internal delegate bool _GetLivePhysicalBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x20007CA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C940", Offset = "0x39C940")]
		internal delegate bool _ExportLiveToBuffer(StringBuilder pBuffer, ref uint pnBufferLength);

		[Token(Token = "0x20007CB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C954", Offset = "0x39C954")]
		internal delegate bool _ImportFromBufferToWorking(string pBuffer, uint nImportFlags);

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CommitWorkingCopy CommitWorkingCopy;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal _RevertWorkingCopy RevertWorkingCopy;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetWorkingPlayAreaSize GetWorkingPlayAreaSize;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal _GetWorkingPlayAreaRect GetWorkingPlayAreaRect;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetWorkingCollisionBoundsInfo GetWorkingCollisionBoundsInfo;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal _GetLiveCollisionBoundsInfo GetLiveCollisionBoundsInfo;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetWorkingSeatedZeroPoseToRawTrackingPose GetWorkingSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal _GetWorkingStandingZeroPoseToRawTrackingPose GetWorkingStandingZeroPoseToRawTrackingPose;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _SetWorkingPlayAreaSize SetWorkingPlayAreaSize;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal _SetWorkingCollisionBoundsInfo SetWorkingCollisionBoundsInfo;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _SetWorkingSeatedZeroPoseToRawTrackingPose SetWorkingSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal _SetWorkingStandingZeroPoseToRawTrackingPose SetWorkingStandingZeroPoseToRawTrackingPose;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _ReloadFromDisk ReloadFromDisk;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal _GetLiveSeatedZeroPoseToRawTrackingPose GetLiveSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _SetWorkingCollisionBoundsTagsInfo SetWorkingCollisionBoundsTagsInfo;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		internal _GetLiveCollisionBoundsTagsInfo GetLiveCollisionBoundsTagsInfo;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _SetWorkingPhysicalBoundsInfo SetWorkingPhysicalBoundsInfo;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		internal _GetLivePhysicalBoundsInfo GetLivePhysicalBoundsInfo;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _ExportLiveToBuffer ExportLiveToBuffer;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		internal _ImportFromBufferToWorking ImportFromBufferToWorking;
	}
	[Token(Token = "0x200028A")]
	public struct IVRCompositor
	{
		[Token(Token = "0x20007CC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C968", Offset = "0x39C968")]
		internal delegate void _SetTrackingSpace(ETrackingUniverseOrigin eOrigin);

		[Token(Token = "0x20007CD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C97C", Offset = "0x39C97C")]
		internal delegate ETrackingUniverseOrigin _GetTrackingSpace();

		[Token(Token = "0x20007CE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C990", Offset = "0x39C990")]
		internal delegate EVRCompositorError _WaitGetPoses([In][Out] TrackedDevicePose_t[] pRenderPoseArray, uint unRenderPoseArrayCount, [In][Out] TrackedDevicePose_t[] pGamePoseArray, uint unGamePoseArrayCount);

		[Token(Token = "0x20007CF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C9A4", Offset = "0x39C9A4")]
		internal delegate EVRCompositorError _GetLastPoses([In][Out] TrackedDevicePose_t[] pRenderPoseArray, uint unRenderPoseArrayCount, [In][Out] TrackedDevicePose_t[] pGamePoseArray, uint unGamePoseArrayCount);

		[Token(Token = "0x20007D0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C9B8", Offset = "0x39C9B8")]
		internal delegate EVRCompositorError _GetLastPoseForTrackedDeviceIndex(uint unDeviceIndex, ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pOutputGamePose);

		[Token(Token = "0x20007D1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C9CC", Offset = "0x39C9CC")]
		internal delegate EVRCompositorError _Submit(EVREye eEye, ref Texture_t pTexture, ref VRTextureBounds_t pBounds, EVRSubmitFlags nSubmitFlags);

		[Token(Token = "0x20007D2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C9E0", Offset = "0x39C9E0")]
		internal delegate void _ClearLastSubmittedFrame();

		[Token(Token = "0x20007D3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39C9F4", Offset = "0x39C9F4")]
		internal delegate void _PostPresentHandoff();

		[Token(Token = "0x20007D4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CA08", Offset = "0x39CA08")]
		internal delegate bool _GetFrameTiming(ref Compositor_FrameTiming pTiming, uint unFramesAgo);

		[Token(Token = "0x20007D5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CA1C", Offset = "0x39CA1C")]
		internal delegate uint _GetFrameTimings(ref Compositor_FrameTiming pTiming, uint nFrames);

		[Token(Token = "0x20007D6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CA30", Offset = "0x39CA30")]
		internal delegate float _GetFrameTimeRemaining();

		[Token(Token = "0x20007D7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CA44", Offset = "0x39CA44")]
		internal delegate void _GetCumulativeStats(ref Compositor_CumulativeStats pStats, uint nStatsSizeInBytes);

		[Token(Token = "0x20007D8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CA58", Offset = "0x39CA58")]
		internal delegate void _FadeToColor(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground);

		[Token(Token = "0x20007D9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CA6C", Offset = "0x39CA6C")]
		internal delegate HmdColor_t _GetCurrentFadeColor(bool bBackground);

		[Token(Token = "0x20007DA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CA80", Offset = "0x39CA80")]
		internal delegate void _FadeGrid(float fSeconds, bool bFadeIn);

		[Token(Token = "0x20007DB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CA94", Offset = "0x39CA94")]
		internal delegate float _GetCurrentGridAlpha();

		[Token(Token = "0x20007DC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CAA8", Offset = "0x39CAA8")]
		internal delegate EVRCompositorError _SetSkyboxOverride([In][Out] Texture_t[] pTextures, uint unTextureCount);

		[Token(Token = "0x20007DD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CABC", Offset = "0x39CABC")]
		internal delegate void _ClearSkyboxOverride();

		[Token(Token = "0x20007DE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CAD0", Offset = "0x39CAD0")]
		internal delegate void _CompositorBringToFront();

		[Token(Token = "0x20007DF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CAE4", Offset = "0x39CAE4")]
		internal delegate void _CompositorGoToBack();

		[Token(Token = "0x20007E0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CAF8", Offset = "0x39CAF8")]
		internal delegate void _CompositorQuit();

		[Token(Token = "0x20007E1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CB0C", Offset = "0x39CB0C")]
		internal delegate bool _IsFullscreen();

		[Token(Token = "0x20007E2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CB20", Offset = "0x39CB20")]
		internal delegate uint _GetCurrentSceneFocusProcess();

		[Token(Token = "0x20007E3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CB34", Offset = "0x39CB34")]
		internal delegate uint _GetLastFrameRenderer();

		[Token(Token = "0x20007E4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CB48", Offset = "0x39CB48")]
		internal delegate bool _CanRenderScene();

		[Token(Token = "0x20007E5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CB5C", Offset = "0x39CB5C")]
		internal delegate void _ShowMirrorWindow();

		[Token(Token = "0x20007E6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CB70", Offset = "0x39CB70")]
		internal delegate void _HideMirrorWindow();

		[Token(Token = "0x20007E7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CB84", Offset = "0x39CB84")]
		internal delegate bool _IsMirrorWindowVisible();

		[Token(Token = "0x20007E8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CB98", Offset = "0x39CB98")]
		internal delegate void _CompositorDumpImages();

		[Token(Token = "0x20007E9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CBAC", Offset = "0x39CBAC")]
		internal delegate bool _ShouldAppRenderWithLowResources();

		[Token(Token = "0x20007EA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CBC0", Offset = "0x39CBC0")]
		internal delegate void _ForceInterleavedReprojectionOn(bool bOverride);

		[Token(Token = "0x20007EB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CBD4", Offset = "0x39CBD4")]
		internal delegate void _ForceReconnectProcess();

		[Token(Token = "0x20007EC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CBE8", Offset = "0x39CBE8")]
		internal delegate void _SuspendRendering(bool bSuspend);

		[Token(Token = "0x20007ED")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CBFC", Offset = "0x39CBFC")]
		internal delegate EVRCompositorError _GetMirrorTextureD3D11(EVREye eEye, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView);

		[Token(Token = "0x20007EE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CC10", Offset = "0x39CC10")]
		internal delegate void _ReleaseMirrorTextureD3D11(IntPtr pD3D11ShaderResourceView);

		[Token(Token = "0x20007EF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CC24", Offset = "0x39CC24")]
		internal delegate EVRCompositorError _GetMirrorTextureGL(EVREye eEye, ref uint pglTextureId, IntPtr pglSharedTextureHandle);

		[Token(Token = "0x20007F0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CC38", Offset = "0x39CC38")]
		internal delegate bool _ReleaseSharedGLTexture(uint glTextureId, IntPtr glSharedTextureHandle);

		[Token(Token = "0x20007F1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CC4C", Offset = "0x39CC4C")]
		internal delegate void _LockGLSharedTextureForAccess(IntPtr glSharedTextureHandle);

		[Token(Token = "0x20007F2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CC60", Offset = "0x39CC60")]
		internal delegate void _UnlockGLSharedTextureForAccess(IntPtr glSharedTextureHandle);

		[Token(Token = "0x20007F3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CC74", Offset = "0x39CC74")]
		internal delegate uint _GetVulkanInstanceExtensionsRequired(StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x20007F4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CC88", Offset = "0x39CC88")]
		internal delegate uint _GetVulkanDeviceExtensionsRequired(IntPtr pPhysicalDevice, StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x20007F5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CC9C", Offset = "0x39CC9C")]
		internal delegate void _SetExplicitTimingMode(EVRCompositorTimingMode eTimingMode);

		[Token(Token = "0x20007F6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CCB0", Offset = "0x39CCB0")]
		internal delegate EVRCompositorError _SubmitExplicitTimingData();

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetTrackingSpace SetTrackingSpace;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal _GetTrackingSpace GetTrackingSpace;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _WaitGetPoses WaitGetPoses;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal _GetLastPoses GetLastPoses;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetLastPoseForTrackedDeviceIndex GetLastPoseForTrackedDeviceIndex;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal _Submit Submit;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _ClearLastSubmittedFrame ClearLastSubmittedFrame;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal _PostPresentHandoff PostPresentHandoff;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetFrameTiming GetFrameTiming;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal _GetFrameTimings GetFrameTimings;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetFrameTimeRemaining GetFrameTimeRemaining;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal _GetCumulativeStats GetCumulativeStats;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _FadeToColor FadeToColor;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal _GetCurrentFadeColor GetCurrentFadeColor;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _FadeGrid FadeGrid;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		internal _GetCurrentGridAlpha GetCurrentGridAlpha;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _SetSkyboxOverride SetSkyboxOverride;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		internal _ClearSkyboxOverride ClearSkyboxOverride;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _CompositorBringToFront CompositorBringToFront;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		internal _CompositorGoToBack CompositorGoToBack;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _CompositorQuit CompositorQuit;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		internal _IsFullscreen IsFullscreen;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetCurrentSceneFocusProcess GetCurrentSceneFocusProcess;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		internal _GetLastFrameRenderer GetLastFrameRenderer;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _CanRenderScene CanRenderScene;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		internal _ShowMirrorWindow ShowMirrorWindow;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _HideMirrorWindow HideMirrorWindow;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		internal _IsMirrorWindowVisible IsMirrorWindowVisible;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _CompositorDumpImages CompositorDumpImages;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		internal _ShouldAppRenderWithLowResources ShouldAppRenderWithLowResources;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _ForceInterleavedReprojectionOn ForceInterleavedReprojectionOn;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		internal _ForceReconnectProcess ForceReconnectProcess;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SuspendRendering SuspendRendering;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		internal _GetMirrorTextureD3D11 GetMirrorTextureD3D11;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _ReleaseMirrorTextureD3D11 ReleaseMirrorTextureD3D11;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		internal _GetMirrorTextureGL GetMirrorTextureGL;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _ReleaseSharedGLTexture ReleaseSharedGLTexture;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		internal _LockGLSharedTextureForAccess LockGLSharedTextureForAccess;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _UnlockGLSharedTextureForAccess UnlockGLSharedTextureForAccess;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		internal _GetVulkanInstanceExtensionsRequired GetVulkanInstanceExtensionsRequired;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _GetVulkanDeviceExtensionsRequired GetVulkanDeviceExtensionsRequired;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		internal _SetExplicitTimingMode SetExplicitTimingMode;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _SubmitExplicitTimingData SubmitExplicitTimingData;
	}
	[Token(Token = "0x200028B")]
	public struct IVROverlay
	{
		[Token(Token = "0x20007F7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CCC4", Offset = "0x39CCC4")]
		internal delegate EVROverlayError _FindOverlay(string pchOverlayKey, ref ulong pOverlayHandle);

		[Token(Token = "0x20007F8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CCD8", Offset = "0x39CCD8")]
		internal delegate EVROverlayError _CreateOverlay(string pchOverlayKey, string pchOverlayName, ref ulong pOverlayHandle);

		[Token(Token = "0x20007F9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CCEC", Offset = "0x39CCEC")]
		internal delegate EVROverlayError _DestroyOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20007FA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CD00", Offset = "0x39CD00")]
		internal delegate EVROverlayError _SetHighQualityOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20007FB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CD14", Offset = "0x39CD14")]
		internal delegate ulong _GetHighQualityOverlay();

		[Token(Token = "0x20007FC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CD28", Offset = "0x39CD28")]
		internal delegate uint _GetOverlayKey(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError);

		[Token(Token = "0x20007FD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CD3C", Offset = "0x39CD3C")]
		internal delegate uint _GetOverlayName(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError);

		[Token(Token = "0x20007FE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CD50", Offset = "0x39CD50")]
		internal delegate EVROverlayError _SetOverlayName(ulong ulOverlayHandle, string pchName);

		[Token(Token = "0x20007FF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CD64", Offset = "0x39CD64")]
		internal delegate EVROverlayError _GetOverlayImageData(ulong ulOverlayHandle, IntPtr pvBuffer, uint unBufferSize, ref uint punWidth, ref uint punHeight);

		[Token(Token = "0x2000800")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CD78", Offset = "0x39CD78")]
		internal delegate IntPtr _GetOverlayErrorNameFromEnum(EVROverlayError error);

		[Token(Token = "0x2000801")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CD8C", Offset = "0x39CD8C")]
		internal delegate EVROverlayError _SetOverlayRenderingPid(ulong ulOverlayHandle, uint unPID);

		[Token(Token = "0x2000802")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CDA0", Offset = "0x39CDA0")]
		internal delegate uint _GetOverlayRenderingPid(ulong ulOverlayHandle);

		[Token(Token = "0x2000803")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CDB4", Offset = "0x39CDB4")]
		internal delegate EVROverlayError _SetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool bEnabled);

		[Token(Token = "0x2000804")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CDC8", Offset = "0x39CDC8")]
		internal delegate EVROverlayError _GetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, ref bool pbEnabled);

		[Token(Token = "0x2000805")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CDDC", Offset = "0x39CDDC")]
		internal delegate EVROverlayError _SetOverlayColor(ulong ulOverlayHandle, float fRed, float fGreen, float fBlue);

		[Token(Token = "0x2000806")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CDF0", Offset = "0x39CDF0")]
		internal delegate EVROverlayError _GetOverlayColor(ulong ulOverlayHandle, ref float pfRed, ref float pfGreen, ref float pfBlue);

		[Token(Token = "0x2000807")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CE04", Offset = "0x39CE04")]
		internal delegate EVROverlayError _SetOverlayAlpha(ulong ulOverlayHandle, float fAlpha);

		[Token(Token = "0x2000808")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CE18", Offset = "0x39CE18")]
		internal delegate EVROverlayError _GetOverlayAlpha(ulong ulOverlayHandle, ref float pfAlpha);

		[Token(Token = "0x2000809")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CE2C", Offset = "0x39CE2C")]
		internal delegate EVROverlayError _SetOverlayTexelAspect(ulong ulOverlayHandle, float fTexelAspect);

		[Token(Token = "0x200080A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CE40", Offset = "0x39CE40")]
		internal delegate EVROverlayError _GetOverlayTexelAspect(ulong ulOverlayHandle, ref float pfTexelAspect);

		[Token(Token = "0x200080B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CE54", Offset = "0x39CE54")]
		internal delegate EVROverlayError _SetOverlaySortOrder(ulong ulOverlayHandle, uint unSortOrder);

		[Token(Token = "0x200080C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CE68", Offset = "0x39CE68")]
		internal delegate EVROverlayError _GetOverlaySortOrder(ulong ulOverlayHandle, ref uint punSortOrder);

		[Token(Token = "0x200080D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CE7C", Offset = "0x39CE7C")]
		internal delegate EVROverlayError _SetOverlayWidthInMeters(ulong ulOverlayHandle, float fWidthInMeters);

		[Token(Token = "0x200080E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CE90", Offset = "0x39CE90")]
		internal delegate EVROverlayError _GetOverlayWidthInMeters(ulong ulOverlayHandle, ref float pfWidthInMeters);

		[Token(Token = "0x200080F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CEA4", Offset = "0x39CEA4")]
		internal delegate EVROverlayError _SetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters);

		[Token(Token = "0x2000810")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CEB8", Offset = "0x39CEB8")]
		internal delegate EVROverlayError _GetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, ref float pfMinDistanceInMeters, ref float pfMaxDistanceInMeters);

		[Token(Token = "0x2000811")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CECC", Offset = "0x39CECC")]
		internal delegate EVROverlayError _SetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace eTextureColorSpace);

		[Token(Token = "0x2000812")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CEE0", Offset = "0x39CEE0")]
		internal delegate EVROverlayError _GetOverlayTextureColorSpace(ulong ulOverlayHandle, ref EColorSpace peTextureColorSpace);

		[Token(Token = "0x2000813")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CEF4", Offset = "0x39CEF4")]
		internal delegate EVROverlayError _SetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds);

		[Token(Token = "0x2000814")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CF08", Offset = "0x39CF08")]
		internal delegate EVROverlayError _GetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds);

		[Token(Token = "0x2000815")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CF1C", Offset = "0x39CF1C")]
		internal delegate uint _GetOverlayRenderModel(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref HmdColor_t pColor, ref EVROverlayError pError);

		[Token(Token = "0x2000816")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CF30", Offset = "0x39CF30")]
		internal delegate EVROverlayError _SetOverlayRenderModel(ulong ulOverlayHandle, string pchRenderModel, ref HmdColor_t pColor);

		[Token(Token = "0x2000817")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CF44", Offset = "0x39CF44")]
		internal delegate EVROverlayError _GetOverlayTransformType(ulong ulOverlayHandle, ref VROverlayTransformType peTransformType);

		[Token(Token = "0x2000818")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CF58", Offset = "0x39CF58")]
		internal delegate EVROverlayError _SetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform);

		[Token(Token = "0x2000819")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CF6C", Offset = "0x39CF6C")]
		internal delegate EVROverlayError _GetOverlayTransformAbsolute(ulong ulOverlayHandle, ref ETrackingUniverseOrigin peTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform);

		[Token(Token = "0x200081A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CF80", Offset = "0x39CF80")]
		internal delegate EVROverlayError _SetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint unTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform);

		[Token(Token = "0x200081B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CF94", Offset = "0x39CF94")]
		internal delegate EVROverlayError _GetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, ref uint punTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform);

		[Token(Token = "0x200081C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CFA8", Offset = "0x39CFA8")]
		internal delegate EVROverlayError _SetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint unDeviceIndex, string pchComponentName);

		[Token(Token = "0x200081D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CFBC", Offset = "0x39CFBC")]
		internal delegate EVROverlayError _GetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, ref uint punDeviceIndex, StringBuilder pchComponentName, uint unComponentNameSize);

		[Token(Token = "0x200081E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CFD0", Offset = "0x39CFD0")]
		internal delegate EVROverlayError _GetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ref ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform);

		[Token(Token = "0x200081F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CFE4", Offset = "0x39CFE4")]
		internal delegate EVROverlayError _SetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform);

		[Token(Token = "0x2000820")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39CFF8", Offset = "0x39CFF8")]
		internal delegate EVROverlayError _ShowOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x2000821")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D00C", Offset = "0x39D00C")]
		internal delegate EVROverlayError _HideOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x2000822")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D020", Offset = "0x39D020")]
		internal delegate bool _IsOverlayVisible(ulong ulOverlayHandle);

		[Token(Token = "0x2000823")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D034", Offset = "0x39D034")]
		internal delegate EVROverlayError _GetTransformForOverlayCoordinates(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdVector2_t coordinatesInOverlay, ref HmdMatrix34_t pmatTransform);

		[Token(Token = "0x2000824")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D048", Offset = "0x39D048")]
		internal delegate bool _PollNextOverlayEvent(ulong ulOverlayHandle, ref VREvent_t pEvent, uint uncbVREvent);

		[Token(Token = "0x2000825")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D05C", Offset = "0x39D05C")]
		internal delegate EVROverlayError _GetOverlayInputMethod(ulong ulOverlayHandle, ref VROverlayInputMethod peInputMethod);

		[Token(Token = "0x2000826")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D070", Offset = "0x39D070")]
		internal delegate EVROverlayError _SetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod eInputMethod);

		[Token(Token = "0x2000827")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D084", Offset = "0x39D084")]
		internal delegate EVROverlayError _GetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale);

		[Token(Token = "0x2000828")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D098", Offset = "0x39D098")]
		internal delegate EVROverlayError _SetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale);

		[Token(Token = "0x2000829")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D0AC", Offset = "0x39D0AC")]
		internal delegate bool _ComputeOverlayIntersection(ulong ulOverlayHandle, ref VROverlayIntersectionParams_t pParams, ref VROverlayIntersectionResults_t pResults);

		[Token(Token = "0x200082A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D0C0", Offset = "0x39D0C0")]
		internal delegate bool _IsHoverTargetOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x200082B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D0D4", Offset = "0x39D0D4")]
		internal delegate ulong _GetGamepadFocusOverlay();

		[Token(Token = "0x200082C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D0E8", Offset = "0x39D0E8")]
		internal delegate EVROverlayError _SetGamepadFocusOverlay(ulong ulNewFocusOverlay);

		[Token(Token = "0x200082D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D0FC", Offset = "0x39D0FC")]
		internal delegate EVROverlayError _SetOverlayNeighbor(EOverlayDirection eDirection, ulong ulFrom, ulong ulTo);

		[Token(Token = "0x200082E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D110", Offset = "0x39D110")]
		internal delegate EVROverlayError _MoveGamepadFocusToNeighbor(EOverlayDirection eDirection, ulong ulFrom);

		[Token(Token = "0x200082F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D124", Offset = "0x39D124")]
		internal delegate EVROverlayError _SetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, IntPtr vCenter, float fRadius);

		[Token(Token = "0x2000830")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D138", Offset = "0x39D138")]
		internal delegate EVROverlayError _GetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, ref HmdVector2_t pvCenter, ref float pfRadius);

		[Token(Token = "0x2000831")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D14C", Offset = "0x39D14C")]
		internal delegate EVROverlayError _SetOverlayTexture(ulong ulOverlayHandle, ref Texture_t pTexture);

		[Token(Token = "0x2000832")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D160", Offset = "0x39D160")]
		internal delegate EVROverlayError _ClearOverlayTexture(ulong ulOverlayHandle);

		[Token(Token = "0x2000833")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D174", Offset = "0x39D174")]
		internal delegate EVROverlayError _SetOverlayRaw(ulong ulOverlayHandle, IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth);

		[Token(Token = "0x2000834")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D188", Offset = "0x39D188")]
		internal delegate EVROverlayError _SetOverlayFromFile(ulong ulOverlayHandle, string pchFilePath);

		[Token(Token = "0x2000835")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D19C", Offset = "0x39D19C")]
		internal delegate EVROverlayError _GetOverlayTexture(ulong ulOverlayHandle, ref IntPtr pNativeTextureHandle, IntPtr pNativeTextureRef, ref uint pWidth, ref uint pHeight, ref uint pNativeFormat, ref ETextureType pAPIType, ref EColorSpace pColorSpace, ref VRTextureBounds_t pTextureBounds);

		[Token(Token = "0x2000836")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D1B0", Offset = "0x39D1B0")]
		internal delegate EVROverlayError _ReleaseNativeOverlayHandle(ulong ulOverlayHandle, IntPtr pNativeTextureHandle);

		[Token(Token = "0x2000837")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D1C4", Offset = "0x39D1C4")]
		internal delegate EVROverlayError _GetOverlayTextureSize(ulong ulOverlayHandle, ref uint pWidth, ref uint pHeight);

		[Token(Token = "0x2000838")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D1D8", Offset = "0x39D1D8")]
		internal delegate EVROverlayError _CreateDashboardOverlay(string pchOverlayKey, string pchOverlayFriendlyName, ref ulong pMainHandle, ref ulong pThumbnailHandle);

		[Token(Token = "0x2000839")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D1EC", Offset = "0x39D1EC")]
		internal delegate bool _IsDashboardVisible();

		[Token(Token = "0x200083A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D200", Offset = "0x39D200")]
		internal delegate bool _IsActiveDashboardOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x200083B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D214", Offset = "0x39D214")]
		internal delegate EVROverlayError _SetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint unProcessId);

		[Token(Token = "0x200083C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D228", Offset = "0x39D228")]
		internal delegate EVROverlayError _GetDashboardOverlaySceneProcess(ulong ulOverlayHandle, ref uint punProcessId);

		[Token(Token = "0x200083D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D23C", Offset = "0x39D23C")]
		internal delegate void _ShowDashboard(string pchOverlayToShow);

		[Token(Token = "0x200083E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D250", Offset = "0x39D250")]
		internal delegate uint _GetPrimaryDashboardDevice();

		[Token(Token = "0x200083F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D264", Offset = "0x39D264")]
		internal delegate EVROverlayError _ShowKeyboard(int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue);

		[Token(Token = "0x2000840")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D278", Offset = "0x39D278")]
		internal delegate EVROverlayError _ShowKeyboardForOverlay(ulong ulOverlayHandle, int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue);

		[Token(Token = "0x2000841")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D28C", Offset = "0x39D28C")]
		internal delegate uint _GetKeyboardText(StringBuilder pchText, uint cchText);

		[Token(Token = "0x2000842")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D2A0", Offset = "0x39D2A0")]
		internal delegate void _HideKeyboard();

		[Token(Token = "0x2000843")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D2B4", Offset = "0x39D2B4")]
		internal delegate void _SetKeyboardTransformAbsolute(ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToKeyboardTransform);

		[Token(Token = "0x2000844")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D2C8", Offset = "0x39D2C8")]
		internal delegate void _SetKeyboardPositionForOverlay(ulong ulOverlayHandle, HmdRect2_t avoidRect);

		[Token(Token = "0x2000845")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D2DC", Offset = "0x39D2DC")]
		internal delegate EVROverlayError _SetOverlayIntersectionMask(ulong ulOverlayHandle, ref VROverlayIntersectionMaskPrimitive_t pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize);

		[Token(Token = "0x2000846")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D2F0", Offset = "0x39D2F0")]
		internal delegate EVROverlayError _GetOverlayFlags(ulong ulOverlayHandle, ref uint pFlags);

		[Token(Token = "0x2000847")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D304", Offset = "0x39D304")]
		internal delegate VRMessageOverlayResponse _ShowMessageOverlay(string pchText, string pchCaption, string pchButton0Text, string pchButton1Text, string pchButton2Text, string pchButton3Text);

		[Token(Token = "0x2000848")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D318", Offset = "0x39D318")]
		internal delegate void _CloseMessageOverlay();

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _FindOverlay FindOverlay;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal _CreateOverlay CreateOverlay;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _DestroyOverlay DestroyOverlay;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal _SetHighQualityOverlay SetHighQualityOverlay;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetHighQualityOverlay GetHighQualityOverlay;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal _GetOverlayKey GetOverlayKey;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetOverlayName GetOverlayName;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal _SetOverlayName SetOverlayName;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetOverlayImageData GetOverlayImageData;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal _GetOverlayErrorNameFromEnum GetOverlayErrorNameFromEnum;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _SetOverlayRenderingPid SetOverlayRenderingPid;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal _GetOverlayRenderingPid GetOverlayRenderingPid;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _SetOverlayFlag SetOverlayFlag;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal _GetOverlayFlag GetOverlayFlag;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _SetOverlayColor SetOverlayColor;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		internal _GetOverlayColor GetOverlayColor;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _SetOverlayAlpha SetOverlayAlpha;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		internal _GetOverlayAlpha GetOverlayAlpha;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _SetOverlayTexelAspect SetOverlayTexelAspect;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		internal _GetOverlayTexelAspect GetOverlayTexelAspect;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetOverlaySortOrder SetOverlaySortOrder;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		internal _GetOverlaySortOrder GetOverlaySortOrder;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _SetOverlayWidthInMeters SetOverlayWidthInMeters;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		internal _GetOverlayWidthInMeters GetOverlayWidthInMeters;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _SetOverlayAutoCurveDistanceRangeInMeters SetOverlayAutoCurveDistanceRangeInMeters;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		internal _GetOverlayAutoCurveDistanceRangeInMeters GetOverlayAutoCurveDistanceRangeInMeters;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _SetOverlayTextureColorSpace SetOverlayTextureColorSpace;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		internal _GetOverlayTextureColorSpace GetOverlayTextureColorSpace;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _SetOverlayTextureBounds SetOverlayTextureBounds;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		internal _GetOverlayTextureBounds GetOverlayTextureBounds;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetOverlayRenderModel GetOverlayRenderModel;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		internal _SetOverlayRenderModel SetOverlayRenderModel;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetOverlayTransformType GetOverlayTransformType;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		internal _SetOverlayTransformAbsolute SetOverlayTransformAbsolute;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetOverlayTransformAbsolute GetOverlayTransformAbsolute;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		internal _SetOverlayTransformTrackedDeviceRelative SetOverlayTransformTrackedDeviceRelative;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _GetOverlayTransformTrackedDeviceRelative GetOverlayTransformTrackedDeviceRelative;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		internal _SetOverlayTransformTrackedDeviceComponent SetOverlayTransformTrackedDeviceComponent;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _GetOverlayTransformTrackedDeviceComponent GetOverlayTransformTrackedDeviceComponent;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		internal _GetOverlayTransformOverlayRelative GetOverlayTransformOverlayRelative;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _SetOverlayTransformOverlayRelative SetOverlayTransformOverlayRelative;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		internal _ShowOverlay ShowOverlay;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _HideOverlay HideOverlay;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		internal _IsOverlayVisible IsOverlayVisible;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetTransformForOverlayCoordinates GetTransformForOverlayCoordinates;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		internal _PollNextOverlayEvent PollNextOverlayEvent;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetOverlayInputMethod GetOverlayInputMethod;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		internal _SetOverlayInputMethod SetOverlayInputMethod;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _GetOverlayMouseScale GetOverlayMouseScale;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		internal _SetOverlayMouseScale SetOverlayMouseScale;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _ComputeOverlayIntersection ComputeOverlayIntersection;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		internal _IsHoverTargetOverlay IsHoverTargetOverlay;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _GetGamepadFocusOverlay GetGamepadFocusOverlay;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		internal _SetGamepadFocusOverlay SetGamepadFocusOverlay;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _SetOverlayNeighbor SetOverlayNeighbor;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		internal _MoveGamepadFocusToNeighbor MoveGamepadFocusToNeighbor;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _SetOverlayDualAnalogTransform SetOverlayDualAnalogTransform;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		internal _GetOverlayDualAnalogTransform GetOverlayDualAnalogTransform;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _SetOverlayTexture SetOverlayTexture;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		internal _ClearOverlayTexture ClearOverlayTexture;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _SetOverlayRaw SetOverlayRaw;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		internal _SetOverlayFromFile SetOverlayFromFile;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _GetOverlayTexture GetOverlayTexture;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		internal _ReleaseNativeOverlayHandle ReleaseNativeOverlayHandle;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _GetOverlayTextureSize GetOverlayTextureSize;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		internal _CreateDashboardOverlay CreateDashboardOverlay;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _IsDashboardVisible IsDashboardVisible;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		internal _IsActiveDashboardOverlay IsActiveDashboardOverlay;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _SetDashboardOverlaySceneProcess SetDashboardOverlaySceneProcess;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		internal _GetDashboardOverlaySceneProcess GetDashboardOverlaySceneProcess;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _ShowDashboard ShowDashboard;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		internal _GetPrimaryDashboardDevice GetPrimaryDashboardDevice;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _ShowKeyboard ShowKeyboard;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		internal _ShowKeyboardForOverlay ShowKeyboardForOverlay;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _GetKeyboardText GetKeyboardText;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		internal _HideKeyboard HideKeyboard;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _SetKeyboardTransformAbsolute SetKeyboardTransformAbsolute;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		internal _SetKeyboardPositionForOverlay SetKeyboardPositionForOverlay;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _SetOverlayIntersectionMask SetOverlayIntersectionMask;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		internal _GetOverlayFlags GetOverlayFlags;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _ShowMessageOverlay ShowMessageOverlay;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		internal _CloseMessageOverlay CloseMessageOverlay;
	}
	[Token(Token = "0x200028C")]
	public struct IVRRenderModels
	{
		[Token(Token = "0x2000849")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D32C", Offset = "0x39D32C")]
		internal delegate EVRRenderModelError _LoadRenderModel_Async(string pchRenderModelName, ref IntPtr ppRenderModel);

		[Token(Token = "0x200084A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D340", Offset = "0x39D340")]
		internal delegate void _FreeRenderModel(IntPtr pRenderModel);

		[Token(Token = "0x200084B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D354", Offset = "0x39D354")]
		internal delegate EVRRenderModelError _LoadTexture_Async(int textureId, ref IntPtr ppTexture);

		[Token(Token = "0x200084C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D368", Offset = "0x39D368")]
		internal delegate void _FreeTexture(IntPtr pTexture);

		[Token(Token = "0x200084D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D37C", Offset = "0x39D37C")]
		internal delegate EVRRenderModelError _LoadTextureD3D11_Async(int textureId, IntPtr pD3D11Device, ref IntPtr ppD3D11Texture2D);

		[Token(Token = "0x200084E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D390", Offset = "0x39D390")]
		internal delegate EVRRenderModelError _LoadIntoTextureD3D11_Async(int textureId, IntPtr pDstTexture);

		[Token(Token = "0x200084F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D3A4", Offset = "0x39D3A4")]
		internal delegate void _FreeTextureD3D11(IntPtr pD3D11Texture2D);

		[Token(Token = "0x2000850")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D3B8", Offset = "0x39D3B8")]
		internal delegate uint _GetRenderModelName(uint unRenderModelIndex, StringBuilder pchRenderModelName, uint unRenderModelNameLen);

		[Token(Token = "0x2000851")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D3CC", Offset = "0x39D3CC")]
		internal delegate uint _GetRenderModelCount();

		[Token(Token = "0x2000852")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D3E0", Offset = "0x39D3E0")]
		internal delegate uint _GetComponentCount(string pchRenderModelName);

		[Token(Token = "0x2000853")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D3F4", Offset = "0x39D3F4")]
		internal delegate uint _GetComponentName(string pchRenderModelName, uint unComponentIndex, StringBuilder pchComponentName, uint unComponentNameLen);

		[Token(Token = "0x2000854")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D408", Offset = "0x39D408")]
		internal delegate ulong _GetComponentButtonMask(string pchRenderModelName, string pchComponentName);

		[Token(Token = "0x2000855")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D41C", Offset = "0x39D41C")]
		internal delegate uint _GetComponentRenderModelName(string pchRenderModelName, string pchComponentName, StringBuilder pchComponentRenderModelName, uint unComponentRenderModelNameLen);

		[Token(Token = "0x2000856")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D430", Offset = "0x39D430")]
		internal delegate bool _GetComponentState(string pchRenderModelName, string pchComponentName, ref VRControllerState_t pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState);

		[Token(Token = "0x2000857")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D444", Offset = "0x39D444")]
		internal delegate bool _RenderModelHasComponent(string pchRenderModelName, string pchComponentName);

		[Token(Token = "0x2000858")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D458", Offset = "0x39D458")]
		internal delegate uint _GetRenderModelThumbnailURL(string pchRenderModelName, StringBuilder pchThumbnailURL, uint unThumbnailURLLen, ref EVRRenderModelError peError);

		[Token(Token = "0x2000859")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D46C", Offset = "0x39D46C")]
		internal delegate uint _GetRenderModelOriginalPath(string pchRenderModelName, StringBuilder pchOriginalPath, uint unOriginalPathLen, ref EVRRenderModelError peError);

		[Token(Token = "0x200085A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D480", Offset = "0x39D480")]
		internal delegate IntPtr _GetRenderModelErrorNameFromEnum(EVRRenderModelError error);

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LoadRenderModel_Async LoadRenderModel_Async;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal _FreeRenderModel FreeRenderModel;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _LoadTexture_Async LoadTexture_Async;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal _FreeTexture FreeTexture;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _LoadTextureD3D11_Async LoadTextureD3D11_Async;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal _LoadIntoTextureD3D11_Async LoadIntoTextureD3D11_Async;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _FreeTextureD3D11 FreeTextureD3D11;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal _GetRenderModelName GetRenderModelName;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetRenderModelCount GetRenderModelCount;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal _GetComponentCount GetComponentCount;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetComponentName GetComponentName;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal _GetComponentButtonMask GetComponentButtonMask;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetComponentRenderModelName GetComponentRenderModelName;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal _GetComponentState GetComponentState;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _RenderModelHasComponent RenderModelHasComponent;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		internal _GetRenderModelThumbnailURL GetRenderModelThumbnailURL;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetRenderModelOriginalPath GetRenderModelOriginalPath;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		internal _GetRenderModelErrorNameFromEnum GetRenderModelErrorNameFromEnum;
	}
	[Token(Token = "0x200028D")]
	public struct IVRNotifications
	{
		[Token(Token = "0x200085B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D494", Offset = "0x39D494")]
		internal delegate EVRNotificationError _CreateNotification(ulong ulOverlayHandle, ulong ulUserValue, EVRNotificationType type, string pchText, EVRNotificationStyle style, ref NotificationBitmap_t pImage, ref uint pNotificationId);

		[Token(Token = "0x200085C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D4A8", Offset = "0x39D4A8")]
		internal delegate EVRNotificationError _RemoveNotification(uint notificationId);

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CreateNotification CreateNotification;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal _RemoveNotification RemoveNotification;
	}
	[Token(Token = "0x200028E")]
	public struct IVRSettings
	{
		[Token(Token = "0x200085D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D4BC", Offset = "0x39D4BC")]
		internal delegate IntPtr _GetSettingsErrorNameFromEnum(EVRSettingsError eError);

		[Token(Token = "0x200085E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D4D0", Offset = "0x39D4D0")]
		internal delegate bool _Sync(bool bForce, ref EVRSettingsError peError);

		[Token(Token = "0x200085F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D4E4", Offset = "0x39D4E4")]
		internal delegate void _SetBool(string pchSection, string pchSettingsKey, bool bValue, ref EVRSettingsError peError);

		[Token(Token = "0x2000860")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D4F8", Offset = "0x39D4F8")]
		internal delegate void _SetInt32(string pchSection, string pchSettingsKey, int nValue, ref EVRSettingsError peError);

		[Token(Token = "0x2000861")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D50C", Offset = "0x39D50C")]
		internal delegate void _SetFloat(string pchSection, string pchSettingsKey, float flValue, ref EVRSettingsError peError);

		[Token(Token = "0x2000862")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D520", Offset = "0x39D520")]
		internal delegate void _SetString(string pchSection, string pchSettingsKey, string pchValue, ref EVRSettingsError peError);

		[Token(Token = "0x2000863")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D534", Offset = "0x39D534")]
		internal delegate bool _GetBool(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x2000864")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D548", Offset = "0x39D548")]
		internal delegate int _GetInt32(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x2000865")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D55C", Offset = "0x39D55C")]
		internal delegate float _GetFloat(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x2000866")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D570", Offset = "0x39D570")]
		internal delegate void _GetString(string pchSection, string pchSettingsKey, StringBuilder pchValue, uint unValueLen, ref EVRSettingsError peError);

		[Token(Token = "0x2000867")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D584", Offset = "0x39D584")]
		internal delegate void _RemoveSection(string pchSection, ref EVRSettingsError peError);

		[Token(Token = "0x2000868")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D598", Offset = "0x39D598")]
		internal delegate void _RemoveKeyInSection(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetSettingsErrorNameFromEnum GetSettingsErrorNameFromEnum;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal _Sync Sync;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _SetBool SetBool;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal _SetInt32 SetInt32;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _SetFloat SetFloat;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal _SetString SetString;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetBool GetBool;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal _GetInt32 GetInt32;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetFloat GetFloat;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal _GetString GetString;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _RemoveSection RemoveSection;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal _RemoveKeyInSection RemoveKeyInSection;
	}
	[Token(Token = "0x200028F")]
	public struct IVRScreenshots
	{
		[Token(Token = "0x2000869")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D5AC", Offset = "0x39D5AC")]
		internal delegate EVRScreenshotError _RequestScreenshot(ref uint pOutScreenshotHandle, EVRScreenshotType type, string pchPreviewFilename, string pchVRFilename);

		[Token(Token = "0x200086A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D5C0", Offset = "0x39D5C0")]
		internal delegate EVRScreenshotError _HookScreenshot([In][Out] EVRScreenshotType[] pSupportedTypes, int numTypes);

		[Token(Token = "0x200086B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D5D4", Offset = "0x39D5D4")]
		internal delegate EVRScreenshotType _GetScreenshotPropertyType(uint screenshotHandle, ref EVRScreenshotError pError);

		[Token(Token = "0x200086C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D5E8", Offset = "0x39D5E8")]
		internal delegate uint _GetScreenshotPropertyFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames filenameType, StringBuilder pchFilename, uint cchFilename, ref EVRScreenshotError pError);

		[Token(Token = "0x200086D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D5FC", Offset = "0x39D5FC")]
		internal delegate EVRScreenshotError _UpdateScreenshotProgress(uint screenshotHandle, float flProgress);

		[Token(Token = "0x200086E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D610", Offset = "0x39D610")]
		internal delegate EVRScreenshotError _TakeStereoScreenshot(ref uint pOutScreenshotHandle, string pchPreviewFilename, string pchVRFilename);

		[Token(Token = "0x200086F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D624", Offset = "0x39D624")]
		internal delegate EVRScreenshotError _SubmitScreenshot(uint screenshotHandle, EVRScreenshotType type, string pchSourcePreviewFilename, string pchSourceVRFilename);

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _RequestScreenshot RequestScreenshot;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal _HookScreenshot HookScreenshot;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetScreenshotPropertyType GetScreenshotPropertyType;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal _GetScreenshotPropertyFilename GetScreenshotPropertyFilename;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _UpdateScreenshotProgress UpdateScreenshotProgress;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal _TakeStereoScreenshot TakeStereoScreenshot;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _SubmitScreenshot SubmitScreenshot;
	}
	[Token(Token = "0x2000290")]
	public struct IVRResources
	{
		[Token(Token = "0x2000870")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D638", Offset = "0x39D638")]
		internal delegate uint _LoadSharedResource(string pchResourceName, string pchBuffer, uint unBufferLen);

		[Token(Token = "0x2000871")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D64C", Offset = "0x39D64C")]
		internal delegate uint _GetResourceFullPath(string pchResourceName, string pchResourceTypeDirectory, StringBuilder pchPathBuffer, uint unBufferLen);

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LoadSharedResource LoadSharedResource;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal _GetResourceFullPath GetResourceFullPath;
	}
	[Token(Token = "0x2000291")]
	public struct IVRDriverManager
	{
		[Token(Token = "0x2000872")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D660", Offset = "0x39D660")]
		internal delegate uint _GetDriverCount();

		[Token(Token = "0x2000873")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D674", Offset = "0x39D674")]
		internal delegate uint _GetDriverName(uint nDriver, StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetDriverCount GetDriverCount;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal _GetDriverName GetDriverName;
	}
	[Token(Token = "0x2000292")]
	public class CVRSystem
	{
		[Token(Token = "0x2000874")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D688", Offset = "0x39D688")]
		internal delegate bool _PollNextEventPacked(ref VREvent_t_Packed pEvent, uint uncbVREvent);

		[StructLayout(2)]
		[Token(Token = "0x2000875")]
		private struct PollNextEventUnion
		{
			[Token(Token = "0x4002868")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._PollNextEvent pPollNextEvent;

			[Token(Token = "0x4002869")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _PollNextEventPacked pPollNextEventPacked;
		}

		[Token(Token = "0x2000876")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D69C", Offset = "0x39D69C")]
		internal delegate bool _GetControllerStatePacked(uint unControllerDeviceIndex, ref VRControllerState_t_Packed pControllerState, uint unControllerStateSize);

		[StructLayout(2)]
		[Token(Token = "0x2000877")]
		private struct GetControllerStateUnion
		{
			[Token(Token = "0x400286A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._GetControllerState pGetControllerState;

			[Token(Token = "0x400286B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetControllerStatePacked pGetControllerStatePacked;
		}

		[Token(Token = "0x2000878")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D6B0", Offset = "0x39D6B0")]
		internal delegate bool _GetControllerStateWithPosePacked(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t_Packed pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose);

		[StructLayout(2)]
		[Token(Token = "0x2000879")]
		private struct GetControllerStateWithPoseUnion
		{
			[Token(Token = "0x400286C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._GetControllerStateWithPose pGetControllerStateWithPose;

			[Token(Token = "0x400286D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetControllerStateWithPosePacked pGetControllerStateWithPosePacked;
		}

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IVRSystem FnTable;

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0xA30BB0", Offset = "0xA30BB0", VA = "0xA30BB0")]
		internal CVRSystem(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0xA30CEC", Offset = "0xA30CEC", VA = "0xA30CEC")]
		public void GetRecommendedRenderTargetSize(ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0xA30D30", Offset = "0xA30D30", VA = "0xA30D30")]
		public HmdMatrix44_t GetProjectionMatrix(EVREye eEye, float fNearZ, float fFarZ)
		{
			return default(HmdMatrix44_t);
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0xA30D8C", Offset = "0xA30D8C", VA = "0xA30D8C")]
		public void GetProjectionRaw(EVREye eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom)
		{
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0xA30DF8", Offset = "0xA30DF8", VA = "0xA30DF8")]
		public bool ComputeDistortion(EVREye eEye, float fU, float fV, ref DistortionCoordinates_t pDistortionCoordinates)
		{
			return default(bool);
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0xA30E4C", Offset = "0xA30E4C", VA = "0xA30E4C")]
		public HmdMatrix34_t GetEyeToHeadTransform(EVREye eEye)
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0xA30E84", Offset = "0xA30E84", VA = "0xA30E84")]
		public bool GetTimeSinceLastVsync(ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter)
		{
			return default(bool);
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0xA30ECC", Offset = "0xA30ECC", VA = "0xA30ECC")]
		public int GetD3D9AdapterIndex()
		{
			return default(int);
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0xA30EF4", Offset = "0xA30EF4", VA = "0xA30EF4")]
		public void GetDXGIOutputInfo(ref int pnAdapterIndex)
		{
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0xA30F2C", Offset = "0xA30F2C", VA = "0xA30F2C")]
		public void GetOutputDevice(ref ulong pnDevice, ETextureType textureType, IntPtr pInstance)
		{
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0xA30F80", Offset = "0xA30F80", VA = "0xA30F80")]
		public bool IsDisplayOnDesktop()
		{
			return default(bool);
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0xA30FA8", Offset = "0xA30FA8", VA = "0xA30FA8")]
		public bool SetDisplayVisibility(bool bIsVisibleOnDesktop)
		{
			return default(bool);
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0xA30FD8", Offset = "0xA30FD8", VA = "0xA30FD8")]
		public void GetDeviceToAbsoluteTrackingPose(ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, TrackedDevicePose_t[] pTrackedDevicePoseArray)
		{
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0xA31034", Offset = "0xA31034", VA = "0xA31034")]
		public void ResetSeatedZeroPose()
		{
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0xA3105C", Offset = "0xA3105C", VA = "0xA3105C")]
		public HmdMatrix34_t GetSeatedZeroPoseToStandingAbsoluteTrackingPose()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0xA3108C", Offset = "0xA3108C", VA = "0xA3108C")]
		public HmdMatrix34_t GetRawZeroPoseToStandingAbsoluteTrackingPose()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0xA310BC", Offset = "0xA310BC", VA = "0xA310BC")]
		public uint GetSortedTrackedDeviceIndicesOfClass(ETrackedDeviceClass eTrackedDeviceClass, uint[] punTrackedDeviceIndexArray, uint unRelativeToTrackedDeviceIndex)
		{
			return default(uint);
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0xA31118", Offset = "0xA31118", VA = "0xA31118")]
		public EDeviceActivityLevel GetTrackedDeviceActivityLevel(uint unDeviceId)
		{
			return default(EDeviceActivityLevel);
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0xA31148", Offset = "0xA31148", VA = "0xA31148")]
		public void ApplyTransform(ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pTrackedDevicePose, ref HmdMatrix34_t pTransform)
		{
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0xA31194", Offset = "0xA31194", VA = "0xA31194")]
		public uint GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole unDeviceType)
		{
			return default(uint);
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0xA311C4", Offset = "0xA311C4", VA = "0xA311C4")]
		public ETrackedControllerRole GetControllerRoleForTrackedDeviceIndex(uint unDeviceIndex)
		{
			return default(ETrackedControllerRole);
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0xA311F4", Offset = "0xA311F4", VA = "0xA311F4")]
		public ETrackedDeviceClass GetTrackedDeviceClass(uint unDeviceIndex)
		{
			return default(ETrackedDeviceClass);
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0xA31224", Offset = "0xA31224", VA = "0xA31224")]
		public bool IsTrackedDeviceConnected(uint unDeviceIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0xA31254", Offset = "0xA31254", VA = "0xA31254")]
		public bool GetBoolTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(bool);
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0xA312A0", Offset = "0xA312A0", VA = "0xA312A0")]
		public float GetFloatTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(float);
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0xA312EC", Offset = "0xA312EC", VA = "0xA312EC")]
		public int GetInt32TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(int);
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0xA31338", Offset = "0xA31338", VA = "0xA31338")]
		public ulong GetUint64TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(ulong);
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0xA31384", Offset = "0xA31384", VA = "0xA31384")]
		public HmdMatrix34_t GetMatrix34TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0xA313D8", Offset = "0xA313D8", VA = "0xA313D8")]
		public uint GetArrayTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, uint propType, IntPtr pBuffer, uint unBufferSize, ref ETrackedPropertyError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0xA3143C", Offset = "0xA3143C", VA = "0xA3143C")]
		public uint GetStringTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, StringBuilder pchValue, uint unBufferSize, ref ETrackedPropertyError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0xA31498", Offset = "0xA31498", VA = "0xA31498")]
		public string GetPropErrorNameFromEnum(ETrackedPropertyError error)
		{
			return null;
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0xA3153C", Offset = "0xA3153C", VA = "0xA3153C")]
		public bool PollNextEvent(ref VREvent_t pEvent, uint uncbVREvent)
		{
			return default(bool);
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0xA319B0", Offset = "0xA319B0", VA = "0xA319B0")]
		public bool PollNextEventWithPose(ETrackingUniverseOrigin eOrigin, ref VREvent_t pEvent, uint uncbVREvent, ref TrackedDevicePose_t pTrackedDevicePose)
		{
			return default(bool);
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0xA31A04", Offset = "0xA31A04", VA = "0xA31A04")]
		public string GetEventTypeNameFromEnum(EVREventType eType)
		{
			return null;
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0xA31AA8", Offset = "0xA31AA8", VA = "0xA31AA8")]
		public HiddenAreaMesh_t GetHiddenAreaMesh(EVREye eEye, EHiddenAreaMeshType type)
		{
			return default(HiddenAreaMesh_t);
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0xA31AF4", Offset = "0xA31AF4", VA = "0xA31AF4")]
		public bool GetControllerState(uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize)
		{
			return default(bool);
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0xA32038", Offset = "0xA32038", VA = "0xA32038")]
		public bool GetControllerStateWithPose(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose)
		{
			return default(bool);
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0xA325F4", Offset = "0xA325F4", VA = "0xA325F4")]
		public void TriggerHapticPulse(uint unControllerDeviceIndex, uint unAxisId, char usDurationMicroSec)
		{
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0xA32640", Offset = "0xA32640", VA = "0xA32640")]
		public string GetButtonIdNameFromEnum(EVRButtonId eButtonId)
		{
			return null;
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0xA326E4", Offset = "0xA326E4", VA = "0xA326E4")]
		public string GetControllerAxisTypeNameFromEnum(EVRControllerAxisType eAxisType)
		{
			return null;
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0xA32788", Offset = "0xA32788", VA = "0xA32788")]
		public bool IsInputAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0xA327B0", Offset = "0xA327B0", VA = "0xA327B0")]
		public bool IsSteamVRDrawingControllers()
		{
			return default(bool);
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0xA327D8", Offset = "0xA327D8", VA = "0xA327D8")]
		public bool ShouldApplicationPause()
		{
			return default(bool);
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0xA32800", Offset = "0xA32800", VA = "0xA32800")]
		public bool ShouldApplicationReduceRenderingWork()
		{
			return default(bool);
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0xA32828", Offset = "0xA32828", VA = "0xA32828")]
		public uint DriverDebugRequest(uint unDeviceIndex, string pchRequest, StringBuilder pchResponseBuffer, uint unResponseBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0xA3287C", Offset = "0xA3287C", VA = "0xA3287C")]
		public EVRFirmwareError PerformFirmwareUpdate(uint unDeviceIndex)
		{
			return default(EVRFirmwareError);
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0xA328AC", Offset = "0xA328AC", VA = "0xA328AC")]
		public void AcknowledgeQuit_Exiting()
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0xA328D4", Offset = "0xA328D4", VA = "0xA328D4")]
		public void AcknowledgeQuit_UserPrompt()
		{
		}
	}
	[Token(Token = "0x2000293")]
	public class CVRExtendedDisplay
	{
		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IVRExtendedDisplay FnTable;

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0xA2CE70", Offset = "0xA2CE70", VA = "0xA2CE70")]
		internal CVRExtendedDisplay(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0xA2CFA8", Offset = "0xA2CFA8", VA = "0xA2CFA8")]
		public void GetWindowBounds(ref int pnX, ref int pnY, ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0xA2D00C", Offset = "0xA2D00C", VA = "0xA2D00C")]
		public void GetEyeOutputViewport(EVREye eEye, ref uint pnX, ref uint pnY, ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0xA2D078", Offset = "0xA2D078", VA = "0xA2D078")]
		public void GetDXGIOutputInfo(ref int pnAdapterIndex, ref int pnAdapterOutputIndex)
		{
		}
	}
	[Token(Token = "0x2000294")]
	public class CVRTrackedCamera
	{
		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IVRTrackedCamera FnTable;

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0xA32C88", Offset = "0xA32C88", VA = "0xA32C88")]
		internal CVRTrackedCamera(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0xA32DD8", Offset = "0xA32DD8", VA = "0xA32DD8")]
		public string GetCameraErrorNameFromEnum(EVRTrackedCameraError eCameraError)
		{
			return null;
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0xA32E7C", Offset = "0xA32E7C", VA = "0xA32E7C")]
		public EVRTrackedCameraError HasCamera(uint nDeviceIndex, ref bool pHasCamera)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0xA32EBC", Offset = "0xA32EBC", VA = "0xA32EBC")]
		public EVRTrackedCameraError GetCameraFrameSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref uint pnWidth, ref uint pnHeight, ref uint pnFrameBufferSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0xA32F20", Offset = "0xA32F20", VA = "0xA32F20")]
		public EVRTrackedCameraError GetCameraIntrinsics(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref HmdVector2_t pFocalLength, ref HmdVector2_t pCenter)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0xA32F74", Offset = "0xA32F74", VA = "0xA32F74")]
		public EVRTrackedCameraError GetCameraProjection(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, float flZNear, float flZFar, ref HmdMatrix44_t pProjection)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0xA32FD8", Offset = "0xA32FD8", VA = "0xA32FD8")]
		public EVRTrackedCameraError AcquireVideoStreamingService(uint nDeviceIndex, ref ulong pHandle)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0xA3301C", Offset = "0xA3301C", VA = "0xA3301C")]
		public EVRTrackedCameraError ReleaseVideoStreamingService(ulong hTrackedCamera)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0xA33060", Offset = "0xA33060", VA = "0xA33060")]
		public EVRTrackedCameraError GetVideoStreamFrameBuffer(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pFrameBuffer, uint nFrameBufferSize, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0xA330CC", Offset = "0xA330CC", VA = "0xA330CC")]
		public EVRTrackedCameraError GetVideoStreamTextureSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref VRTextureBounds_t pTextureBounds, ref uint pnWidth, ref uint pnHeight)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0xA3312C", Offset = "0xA3312C", VA = "0xA3312C")]
		public EVRTrackedCameraError GetVideoStreamTextureD3D11(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0xA33198", Offset = "0xA33198", VA = "0xA33198")]
		public EVRTrackedCameraError GetVideoStreamTextureGL(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, ref uint pglTextureId, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0xA33200", Offset = "0xA33200", VA = "0xA33200")]
		public EVRTrackedCameraError ReleaseVideoStreamTextureGL(ulong hTrackedCamera, uint glTextureId)
		{
			return default(EVRTrackedCameraError);
		}
	}
	[Token(Token = "0x2000295")]
	public class CVRApplications
	{
		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IVRApplications FnTable;

		[Token(Token = "0x6001600")]
		[Address(RVA = "0xA22068", Offset = "0xA22068", VA = "0xA22068")]
		internal CVRApplications(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0xA221A4", Offset = "0xA221A4", VA = "0xA221A4")]
		public EVRApplicationError AddApplicationManifest(string pchApplicationManifestFullPath, bool bTemporary)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0xA226C4", Offset = "0xA226C4", VA = "0xA226C4")]
		public EVRApplicationError RemoveApplicationManifest(string pchApplicationManifestFullPath)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0xA22B24", Offset = "0xA22B24", VA = "0xA22B24")]
		public bool IsApplicationInstalled(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0xA22F84", Offset = "0xA22F84", VA = "0xA22F84")]
		public uint GetApplicationCount()
		{
			return default(uint);
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0xA231F4", Offset = "0xA231F4", VA = "0xA231F4")]
		public EVRApplicationError GetApplicationKeyByIndex(uint unApplicationIndex, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0xA23520", Offset = "0xA23520", VA = "0xA23520")]
		public EVRApplicationError GetApplicationKeyByProcessId(uint unProcessId, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0xA2384C", Offset = "0xA2384C", VA = "0xA2384C")]
		public EVRApplicationError LaunchApplication(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0xA23CAC", Offset = "0xA23CAC", VA = "0xA23CAC")]
		public EVRApplicationError LaunchTemplateApplication(string pchTemplateAppKey, string pchNewAppKey, AppOverrideKeys_t[] pKeys)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0xA241B4", Offset = "0xA241B4", VA = "0xA241B4")]
		public EVRApplicationError LaunchApplicationFromMimeType(string pchMimeType, string pchArgs)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0xA24668", Offset = "0xA24668", VA = "0xA24668")]
		public EVRApplicationError LaunchDashboardOverlay(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0xA24AC8", Offset = "0xA24AC8", VA = "0xA24AC8")]
		public bool CancelApplicationLaunch(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0xA24F28", Offset = "0xA24F28", VA = "0xA24F28")]
		public EVRApplicationError IdentifyApplication(uint unProcessId, string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0xA25234", Offset = "0xA25234", VA = "0xA25234")]
		public uint GetApplicationProcessId(string pchAppKey)
		{
			return default(uint);
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0xA25694", Offset = "0xA25694", VA = "0xA25694")]
		public string GetApplicationsErrorNameFromEnum(EVRApplicationError error)
		{
			return null;
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0xA259FC", Offset = "0xA259FC", VA = "0xA259FC")]
		public uint GetApplicationPropertyString(string pchAppKey, EVRApplicationProperty eProperty, StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, ref EVRApplicationError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0xA25F98", Offset = "0xA25F98", VA = "0xA25F98")]
		public bool GetApplicationPropertyBool(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0xA264D0", Offset = "0xA264D0", VA = "0xA264D0")]
		public ulong GetApplicationPropertyUint64(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0xA26A0C", Offset = "0xA26A0C", VA = "0xA26A0C")]
		public EVRApplicationError SetApplicationAutoLaunch(string pchAppKey, bool bAutoLaunch)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0xA26F2C", Offset = "0xA26F2C", VA = "0xA26F2C")]
		public bool GetApplicationAutoLaunch(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0xA2738C", Offset = "0xA2738C", VA = "0xA2738C")]
		public EVRApplicationError SetDefaultApplicationForMimeType(string pchAppKey, string pchMimeType)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0xA27840", Offset = "0xA27840", VA = "0xA27840")]
		public bool GetDefaultApplicationForMimeType(string pchMimeType, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(bool);
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0xA27D20", Offset = "0xA27D20", VA = "0xA27D20")]
		public bool GetApplicationSupportedMimeTypes(string pchAppKey, StringBuilder pchMimeTypesBuffer, uint unMimeTypesBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0xA28200", Offset = "0xA28200", VA = "0xA28200")]
		public uint GetApplicationsThatSupportMimeType(string pchMimeType, StringBuilder pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer)
		{
			return default(uint);
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0xA286E0", Offset = "0xA286E0", VA = "0xA286E0")]
		public uint GetApplicationLaunchArguments(uint unHandle, StringBuilder pchArgs, uint unArgs)
		{
			return default(uint);
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0xA28A0C", Offset = "0xA28A0C", VA = "0xA28A0C")]
		public EVRApplicationError GetStartingApplication(StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0xA28F1C", Offset = "0xA28F1C", VA = "0xA28F1C")]
		public EVRApplicationTransitionState GetTransitionState()
		{
			return default(EVRApplicationTransitionState);
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0xA2918C", Offset = "0xA2918C", VA = "0xA2918C")]
		public EVRApplicationError PerformApplicationPrelaunchCheck(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0xA295EC", Offset = "0xA295EC", VA = "0xA295EC")]
		public string GetApplicationsTransitionStateNameFromEnum(EVRApplicationTransitionState state)
		{
			return null;
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0xA29954", Offset = "0xA29954", VA = "0xA29954")]
		public bool IsQuitUserPromptRequested()
		{
			return default(bool);
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0xA29BC4", Offset = "0xA29BC4", VA = "0xA29BC4")]
		public EVRApplicationError LaunchInternalProcess(string pchBinaryPath, string pchArguments, string pchWorkingDirectory)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0xA2A0A4", Offset = "0xA2A0A4", VA = "0xA2A0A4")]
		public uint GetCurrentSceneProcessId()
		{
			return default(uint);
		}
	}
	[Token(Token = "0x2000296")]
	public class CVRChaperone
	{
		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IVRChaperone FnTable;

		[Token(Token = "0x6001620")]
		[Address(RVA = "0xA2A314", Offset = "0xA2A314", VA = "0xA2A314")]
		internal CVRChaperone(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0xA2A450", Offset = "0xA2A450", VA = "0xA2A450")]
		public ChaperoneCalibrationState GetCalibrationState()
		{
			return default(ChaperoneCalibrationState);
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0xA2A6C0", Offset = "0xA2A6C0", VA = "0xA2A6C0")]
		public bool GetPlayAreaSize(ref float pSizeX, ref float pSizeZ)
		{
			return default(bool);
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0xA2A9B4", Offset = "0xA2A9B4", VA = "0xA2A9B4")]
		public bool GetPlayAreaRect(ref HmdQuad_t rect)
		{
			return default(bool);
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0xA2AC7C", Offset = "0xA2AC7C", VA = "0xA2AC7C")]
		public void ReloadInfo()
		{
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0xA2AEE4", Offset = "0xA2AEE4", VA = "0xA2AEE4")]
		public void SetSceneColor(HmdColor_t color)
		{
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0xA2B278", Offset = "0xA2B278", VA = "0xA2B278")]
		public void GetBoundsColor(ref HmdColor_t pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, ref HmdColor_t pOutputCameraColor)
		{
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0xA2B58C", Offset = "0xA2B58C", VA = "0xA2B58C")]
		public bool AreBoundsVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0xA2B7FC", Offset = "0xA2B7FC", VA = "0xA2B7FC")]
		public void ForceBoundsVisible(bool bForce)
		{
		}
	}
	[Token(Token = "0x2000297")]
	public class CVRChaperoneSetup
	{
		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IVRChaperoneSetup FnTable;

		[Token(Token = "0x6001629")]
		[Address(RVA = "0xA2BB00", Offset = "0xA2BB00", VA = "0xA2BB00")]
		internal CVRChaperoneSetup(IntPtr pInterface)
		{
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0xA2BC3C", Offset = "0xA2BC3C", VA = "0xA2BC3C")]
		public bool CommitWorkingCopy(EChaperoneConfigFile configFile)
		{
			return default(bool);
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0xA2BC6C", Offset = "0xA2BC6C", VA = "0xA2BC6C")]
		public void RevertWorkingCopy()
		{
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0xA2BC94", Offset = "0xA2BC94", VA = "0xA2BC94")]
		public bool GetWorkingPlayAreaSize(ref float pSizeX, ref float pSizeZ)
		{
			return default(bool);
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0xA2BCD8", Offset = "0xA2BCD8", VA = "0xA2BCD8")]
		public bool GetWorkingPlayAreaRect(ref HmdQuad_t rect)
		{
			return default(bool);
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0xA2BD08", Offset = "0xA2BD08", VA = "0xA2BD08")]
		public bool GetWorkingCollisionBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0xA2BDC8", Offset = "0xA2BDC8", VA = "0xA2BDC8")]
		public bool GetLiveCollisionBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0xA2BE88", Offset = "0xA2BE88", VA = "0xA2BE88")]
		public bool GetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0xA2BEB8", Offset = "0xA2BEB8", VA = "0xA2BEB8")]
		public bool GetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0xA2BEE8", Offset = "0xA2BEE8", VA = "0xA2BEE8")]
		public void SetWorkingPlayAreaSize(float sizeX, float sizeZ)
		{
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0xA2BF20", Offset = "0xA2BF20", VA = "0xA2BF20")]
		public void SetWorkingCollisionBoundsInfo(HmdQuad_t[] pQuadsBuffer)
		{
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0xA2BF60", Offset = "0xA2BF60", VA = "0xA2BF60")]
		public void SetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose)
		{
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0xA2BF90", Offset = "0xA2BF90", VA = "0xA2BF90")]
		public void SetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose)
		{
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0xA2BFC0", Offset = "0xA2BFC0", VA = "0xA2BFC0")]
		public void ReloadFromDisk(EChaperoneConfigFile configFile)
		{
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0xA2BFF0", Offset = "0xA2BFF0", VA = "0xA2BFF0")]
		public bool GetLiveSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0xA2C020", Offset = "0xA2C020", VA = "0xA2C020")]
		public void SetWorkingCollisionBoundsTagsInfo(byte[] pTagsBuffer)
		{
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0xA2C060", Offset = "0xA2C060", VA = "0xA2C060")]
		public bool GetLiveCollisionBoundsTagsInfo(out byte[] pTagsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0xA2C120", Offset = "0xA2C120", VA = "0xA2C120")]
		public bool SetWorkingPhysicalBoundsInfo(HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0xA2C160", Offset = "0xA2C160", VA = "0xA2C160")]
		public bool GetLivePhysicalBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0xA2C220", Offset = "0xA2C220", VA = "0xA2C220")]
		public bool ExportLiveToBuffer(StringBuilder pBuffer, ref uint pnBufferLength)
		{
			return default(bool);
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0xA2C260", Offset = "0xA2C260", VA = "0xA2C260")]
		public bool ImportFromBufferToWorking(string pBuffer, uint nImportFlags)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000298")]
	public class CVRCompositor
	{
		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IVRCompositor FnTable;

		[Token(Token = "0x600163E")]
		[Address(RVA = "0xA2C298", Offset = "0xA2C298", VA = "0xA2C298")]
		internal CVRCompositor(IntPtr pInterface)
		{
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0xA2C3D4", Offset = "0xA2C3D4", VA = "0xA2C3D4")]
		public void SetTrackingSpace(ETrackingUniverseOrigin eOrigin)
		{
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0xA2C404", Offset = "0xA2C404", VA = "0xA2C404")]
		public ETrackingUniverseOrigin GetTrackingSpace()
		{
			return default(ETrackingUniverseOrigin);
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0xA2C42C", Offset = "0xA2C42C", VA = "0xA2C42C")]
		public EVRCompositorError WaitGetPoses(TrackedDevicePose_t[] pRenderPoseArray, TrackedDevicePose_t[] pGamePoseArray)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0xA2C490", Offset = "0xA2C490", VA = "0xA2C490")]
		public EVRCompositorError GetLastPoses(TrackedDevicePose_t[] pRenderPoseArray, TrackedDevicePose_t[] pGamePoseArray)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0xA2C4F4", Offset = "0xA2C4F4", VA = "0xA2C4F4")]
		public EVRCompositorError GetLastPoseForTrackedDeviceIndex(uint unDeviceIndex, ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pOutputGamePose)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0xA2C540", Offset = "0xA2C540", VA = "0xA2C540")]
		public EVRCompositorError Submit(EVREye eEye, ref Texture_t pTexture, ref VRTextureBounds_t pBounds, EVRSubmitFlags nSubmitFlags)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0xA2C594", Offset = "0xA2C594", VA = "0xA2C594")]
		public void ClearLastSubmittedFrame()
		{
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0xA2C5BC", Offset = "0xA2C5BC", VA = "0xA2C5BC")]
		public void PostPresentHandoff()
		{
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0xA2C5E4", Offset = "0xA2C5E4", VA = "0xA2C5E4")]
		public bool GetFrameTiming(ref Compositor_FrameTiming pTiming, uint unFramesAgo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0xA2C61C", Offset = "0xA2C61C", VA = "0xA2C61C")]
		public uint GetFrameTimings(ref Compositor_FrameTiming pTiming, uint nFrames)
		{
			return default(uint);
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0xA2C654", Offset = "0xA2C654", VA = "0xA2C654")]
		public float GetFrameTimeRemaining()
		{
			return default(float);
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0xA2C67C", Offset = "0xA2C67C", VA = "0xA2C67C")]
		public void GetCumulativeStats(ref Compositor_CumulativeStats pStats, uint nStatsSizeInBytes)
		{
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0xA2C6B4", Offset = "0xA2C6B4", VA = "0xA2C6B4")]
		public void FadeToColor(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground)
		{
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0xA2C720", Offset = "0xA2C720", VA = "0xA2C720")]
		public HmdColor_t GetCurrentFadeColor(bool bBackground)
		{
			return default(HmdColor_t);
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0xA2C758", Offset = "0xA2C758", VA = "0xA2C758")]
		public void FadeGrid(float fSeconds, bool bFadeIn)
		{
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0xA2C790", Offset = "0xA2C790", VA = "0xA2C790")]
		public float GetCurrentGridAlpha()
		{
			return default(float);
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0xA2C7B8", Offset = "0xA2C7B8", VA = "0xA2C7B8")]
		public EVRCompositorError SetSkyboxOverride(Texture_t[] pTextures)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0xA2C7F8", Offset = "0xA2C7F8", VA = "0xA2C7F8")]
		public void ClearSkyboxOverride()
		{
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0xA2C820", Offset = "0xA2C820", VA = "0xA2C820")]
		public void CompositorBringToFront()
		{
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0xA2C848", Offset = "0xA2C848", VA = "0xA2C848")]
		public void CompositorGoToBack()
		{
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0xA2C870", Offset = "0xA2C870", VA = "0xA2C870")]
		public void CompositorQuit()
		{
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0xA2C898", Offset = "0xA2C898", VA = "0xA2C898")]
		public bool IsFullscreen()
		{
			return default(bool);
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0xA2C8C0", Offset = "0xA2C8C0", VA = "0xA2C8C0")]
		public uint GetCurrentSceneFocusProcess()
		{
			return default(uint);
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0xA2C8E8", Offset = "0xA2C8E8", VA = "0xA2C8E8")]
		public uint GetLastFrameRenderer()
		{
			return default(uint);
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0xA2C910", Offset = "0xA2C910", VA = "0xA2C910")]
		public bool CanRenderScene()
		{
			return default(bool);
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0xA2C938", Offset = "0xA2C938", VA = "0xA2C938")]
		public void ShowMirrorWindow()
		{
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0xA2C960", Offset = "0xA2C960", VA = "0xA2C960")]
		public void HideMirrorWindow()
		{
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0xA2C988", Offset = "0xA2C988", VA = "0xA2C988")]
		public bool IsMirrorWindowVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0xA2C9B0", Offset = "0xA2C9B0", VA = "0xA2C9B0")]
		public void CompositorDumpImages()
		{
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0xA2C9D8", Offset = "0xA2C9D8", VA = "0xA2C9D8")]
		public bool ShouldAppRenderWithLowResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0xA2CA00", Offset = "0xA2CA00", VA = "0xA2CA00")]
		public void ForceInterleavedReprojectionOn(bool bOverride)
		{
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0xA2CA30", Offset = "0xA2CA30", VA = "0xA2CA30")]
		public void ForceReconnectProcess()
		{
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0xA2CA58", Offset = "0xA2CA58", VA = "0xA2CA58")]
		public void SuspendRendering(bool bSuspend)
		{
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0xA2CA88", Offset = "0xA2CA88", VA = "0xA2CA88")]
		public EVRCompositorError GetMirrorTextureD3D11(EVREye eEye, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0xA2CAD4", Offset = "0xA2CAD4", VA = "0xA2CAD4")]
		public void ReleaseMirrorTextureD3D11(IntPtr pD3D11ShaderResourceView)
		{
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0xA2CB04", Offset = "0xA2CB04", VA = "0xA2CB04")]
		public EVRCompositorError GetMirrorTextureGL(EVREye eEye, ref uint pglTextureId, IntPtr pglSharedTextureHandle)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0xA2CB54", Offset = "0xA2CB54", VA = "0xA2CB54")]
		public bool ReleaseSharedGLTexture(uint glTextureId, IntPtr glSharedTextureHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0xA2CB8C", Offset = "0xA2CB8C", VA = "0xA2CB8C")]
		public void LockGLSharedTextureForAccess(IntPtr glSharedTextureHandle)
		{
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0xA2CBBC", Offset = "0xA2CBBC", VA = "0xA2CBBC")]
		public void UnlockGLSharedTextureForAccess(IntPtr glSharedTextureHandle)
		{
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0xA2CBEC", Offset = "0xA2CBEC", VA = "0xA2CBEC")]
		public uint GetVulkanInstanceExtensionsRequired(StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0xA2CC24", Offset = "0xA2CC24", VA = "0xA2CC24")]
		public uint GetVulkanDeviceExtensionsRequired(IntPtr pPhysicalDevice, StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0xA2CC70", Offset = "0xA2CC70", VA = "0xA2CC70")]
		public void SetExplicitTimingMode(EVRCompositorTimingMode eTimingMode)
		{
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0xA2CCA0", Offset = "0xA2CCA0", VA = "0xA2CCA0")]
		public EVRCompositorError SubmitExplicitTimingData()
		{
			return default(EVRCompositorError);
		}
	}
	[Token(Token = "0x2000299")]
	public class CVROverlay
	{
		[Token(Token = "0x200087A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D6C4", Offset = "0x39D6C4")]
		internal delegate bool _PollNextOverlayEventPacked(ulong ulOverlayHandle, ref VREvent_t_Packed pEvent, uint uncbVREvent);

		[StructLayout(2)]
		[Token(Token = "0x200087B")]
		private struct PollNextOverlayEventUnion
		{
			[Token(Token = "0x400286E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVROverlay._PollNextOverlayEvent pPollNextOverlayEvent;

			[Token(Token = "0x400286F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _PollNextOverlayEventPacked pPollNextOverlayEventPacked;
		}

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IVROverlay FnTable;

		[Token(Token = "0x600166A")]
		[Address(RVA = "0xA2D2A8", Offset = "0xA2D2A8", VA = "0xA2D2A8")]
		internal CVROverlay(IntPtr pInterface)
		{
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0xA2D3E4", Offset = "0xA2D3E4", VA = "0xA2D3E4")]
		public EVROverlayError FindOverlay(string pchOverlayKey, ref ulong pOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0xA2D428", Offset = "0xA2D428", VA = "0xA2D428")]
		public EVROverlayError CreateOverlay(string pchOverlayKey, string pchOverlayName, ref ulong pOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0xA2D47C", Offset = "0xA2D47C", VA = "0xA2D47C")]
		public EVROverlayError DestroyOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0xA2D4C0", Offset = "0xA2D4C0", VA = "0xA2D4C0")]
		public EVROverlayError SetHighQualityOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0xA2D504", Offset = "0xA2D504", VA = "0xA2D504")]
		public ulong GetHighQualityOverlay()
		{
			return default(ulong);
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0xA2D52C", Offset = "0xA2D52C", VA = "0xA2D52C")]
		public uint GetOverlayKey(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0xA2D584", Offset = "0xA2D584", VA = "0xA2D584")]
		public uint GetOverlayName(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0xA2D5DC", Offset = "0xA2D5DC", VA = "0xA2D5DC")]
		public EVROverlayError SetOverlayName(ulong ulOverlayHandle, string pchName)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0xA2D628", Offset = "0xA2D628", VA = "0xA2D628")]
		public EVROverlayError GetOverlayImageData(ulong ulOverlayHandle, IntPtr pvBuffer, uint unBufferSize, ref uint punWidth, ref uint punHeight)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0xA2D68C", Offset = "0xA2D68C", VA = "0xA2D68C")]
		public string GetOverlayErrorNameFromEnum(EVROverlayError error)
		{
			return null;
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0xA2D730", Offset = "0xA2D730", VA = "0xA2D730")]
		public EVROverlayError SetOverlayRenderingPid(ulong ulOverlayHandle, uint unPID)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0xA2D77C", Offset = "0xA2D77C", VA = "0xA2D77C")]
		public uint GetOverlayRenderingPid(ulong ulOverlayHandle)
		{
			return default(uint);
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0xA2D7C0", Offset = "0xA2D7C0", VA = "0xA2D7C0")]
		public EVROverlayError SetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool bEnabled)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0xA2D810", Offset = "0xA2D810", VA = "0xA2D810")]
		public EVROverlayError GetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, ref bool pbEnabled)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0xA2D868", Offset = "0xA2D868", VA = "0xA2D868")]
		public EVROverlayError SetOverlayColor(ulong ulOverlayHandle, float fRed, float fGreen, float fBlue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0xA2D8CC", Offset = "0xA2D8CC", VA = "0xA2D8CC")]
		public EVROverlayError GetOverlayColor(ulong ulOverlayHandle, ref float pfRed, ref float pfGreen, ref float pfBlue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0xA2D930", Offset = "0xA2D930", VA = "0xA2D930")]
		public EVROverlayError SetOverlayAlpha(ulong ulOverlayHandle, float fAlpha)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0xA2D984", Offset = "0xA2D984", VA = "0xA2D984")]
		public EVROverlayError GetOverlayAlpha(ulong ulOverlayHandle, ref float pfAlpha)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0xA2D9D0", Offset = "0xA2D9D0", VA = "0xA2D9D0")]
		public EVROverlayError SetOverlayTexelAspect(ulong ulOverlayHandle, float fTexelAspect)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0xA2DA24", Offset = "0xA2DA24", VA = "0xA2DA24")]
		public EVROverlayError GetOverlayTexelAspect(ulong ulOverlayHandle, ref float pfTexelAspect)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0xA2DA70", Offset = "0xA2DA70", VA = "0xA2DA70")]
		public EVROverlayError SetOverlaySortOrder(ulong ulOverlayHandle, uint unSortOrder)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0xA2DABC", Offset = "0xA2DABC", VA = "0xA2DABC")]
		public EVROverlayError GetOverlaySortOrder(ulong ulOverlayHandle, ref uint punSortOrder)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0xA2DB08", Offset = "0xA2DB08", VA = "0xA2DB08")]
		public EVROverlayError SetOverlayWidthInMeters(ulong ulOverlayHandle, float fWidthInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0xA2DB5C", Offset = "0xA2DB5C", VA = "0xA2DB5C")]
		public EVROverlayError GetOverlayWidthInMeters(ulong ulOverlayHandle, ref float pfWidthInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0xA2DBA8", Offset = "0xA2DBA8", VA = "0xA2DBA8")]
		public EVROverlayError SetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0xA2DC04", Offset = "0xA2DC04", VA = "0xA2DC04")]
		public EVROverlayError GetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, ref float pfMinDistanceInMeters, ref float pfMaxDistanceInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0xA2DC60", Offset = "0xA2DC60", VA = "0xA2DC60")]
		public EVROverlayError SetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace eTextureColorSpace)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0xA2DCAC", Offset = "0xA2DCAC", VA = "0xA2DCAC")]
		public EVROverlayError GetOverlayTextureColorSpace(ulong ulOverlayHandle, ref EColorSpace peTextureColorSpace)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0xA2DCF8", Offset = "0xA2DCF8", VA = "0xA2DCF8")]
		public EVROverlayError SetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0xA2DD44", Offset = "0xA2DD44", VA = "0xA2DD44")]
		public EVROverlayError GetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0xA2DD90", Offset = "0xA2DD90", VA = "0xA2DD90")]
		public uint GetOverlayRenderModel(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref HmdColor_t pColor, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0xA2DDF0", Offset = "0xA2DDF0", VA = "0xA2DDF0")]
		public EVROverlayError SetOverlayRenderModel(ulong ulOverlayHandle, string pchRenderModel, ref HmdColor_t pColor)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0xA2DE40", Offset = "0xA2DE40", VA = "0xA2DE40")]
		public EVROverlayError GetOverlayTransformType(ulong ulOverlayHandle, ref VROverlayTransformType peTransformType)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0xA2DE8C", Offset = "0xA2DE8C", VA = "0xA2DE8C")]
		public EVROverlayError SetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0xA2DEDC", Offset = "0xA2DEDC", VA = "0xA2DEDC")]
		public EVROverlayError GetOverlayTransformAbsolute(ulong ulOverlayHandle, ref ETrackingUniverseOrigin peTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0xA2DF2C", Offset = "0xA2DF2C", VA = "0xA2DF2C")]
		public EVROverlayError SetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint unTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0xA2DF7C", Offset = "0xA2DF7C", VA = "0xA2DF7C")]
		public EVROverlayError GetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, ref uint punTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0xA2DFCC", Offset = "0xA2DFCC", VA = "0xA2DFCC")]
		public EVROverlayError SetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint unDeviceIndex, string pchComponentName)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0xA2E01C", Offset = "0xA2E01C", VA = "0xA2E01C")]
		public EVROverlayError GetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, ref uint punDeviceIndex, StringBuilder pchComponentName, uint unComponentNameSize)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0xA2E078", Offset = "0xA2E078", VA = "0xA2E078")]
		public EVROverlayError GetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ref ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0xA2E0D0", Offset = "0xA2E0D0", VA = "0xA2E0D0")]
		public EVROverlayError SetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0xA2E120", Offset = "0xA2E120", VA = "0xA2E120")]
		public EVROverlayError ShowOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0xA2E164", Offset = "0xA2E164", VA = "0xA2E164")]
		public EVROverlayError HideOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0xA2E1A8", Offset = "0xA2E1A8", VA = "0xA2E1A8")]
		public bool IsOverlayVisible(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0xA2E1EC", Offset = "0xA2E1EC", VA = "0xA2E1EC")]
		public EVROverlayError GetTransformForOverlayCoordinates(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdVector2_t coordinatesInOverlay, ref HmdMatrix34_t pmatTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0xA2E24C", Offset = "0xA2E24C", VA = "0xA2E24C")]
		public bool PollNextOverlayEvent(ulong ulOverlayHandle, ref VREvent_t pEvent, uint uncbVREvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0xA2E780", Offset = "0xA2E780", VA = "0xA2E780")]
		public EVROverlayError GetOverlayInputMethod(ulong ulOverlayHandle, ref VROverlayInputMethod peInputMethod)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0xA2E7CC", Offset = "0xA2E7CC", VA = "0xA2E7CC")]
		public EVROverlayError SetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod eInputMethod)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0xA2E818", Offset = "0xA2E818", VA = "0xA2E818")]
		public EVROverlayError GetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0xA2E864", Offset = "0xA2E864", VA = "0xA2E864")]
		public EVROverlayError SetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0xA2E8B0", Offset = "0xA2E8B0", VA = "0xA2E8B0")]
		public bool ComputeOverlayIntersection(ulong ulOverlayHandle, ref VROverlayIntersectionParams_t pParams, ref VROverlayIntersectionResults_t pResults)
		{
			return default(bool);
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0xA2E900", Offset = "0xA2E900", VA = "0xA2E900")]
		public bool IsHoverTargetOverlay(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0xA2E944", Offset = "0xA2E944", VA = "0xA2E944")]
		public ulong GetGamepadFocusOverlay()
		{
			return default(ulong);
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0xA2E96C", Offset = "0xA2E96C", VA = "0xA2E96C")]
		public EVROverlayError SetGamepadFocusOverlay(ulong ulNewFocusOverlay)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0xA2E9B0", Offset = "0xA2E9B0", VA = "0xA2E9B0")]
		public EVROverlayError SetOverlayNeighbor(EOverlayDirection eDirection, ulong ulFrom, ulong ulTo)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0xA2EA0C", Offset = "0xA2EA0C", VA = "0xA2EA0C")]
		public EVROverlayError MoveGamepadFocusToNeighbor(EOverlayDirection eDirection, ulong ulFrom)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0xA2EA58", Offset = "0xA2EA58", VA = "0xA2EA58")]
		public EVROverlayError SetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, IntPtr vCenter, float fRadius)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0xA2EAB8", Offset = "0xA2EAB8", VA = "0xA2EAB8")]
		public EVROverlayError GetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, ref HmdVector2_t pvCenter, ref float pfRadius)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0xA2EB14", Offset = "0xA2EB14", VA = "0xA2EB14")]
		public EVROverlayError SetOverlayTexture(ulong ulOverlayHandle, ref Texture_t pTexture)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0xA2EB60", Offset = "0xA2EB60", VA = "0xA2EB60")]
		public EVROverlayError ClearOverlayTexture(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0xA2EBA4", Offset = "0xA2EBA4", VA = "0xA2EBA4")]
		public EVROverlayError SetOverlayRaw(ulong ulOverlayHandle, IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0xA2EC04", Offset = "0xA2EC04", VA = "0xA2EC04")]
		public EVROverlayError SetOverlayFromFile(ulong ulOverlayHandle, string pchFilePath)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0xA2EC50", Offset = "0xA2EC50", VA = "0xA2EC50")]
		public EVROverlayError GetOverlayTexture(ulong ulOverlayHandle, ref IntPtr pNativeTextureHandle, IntPtr pNativeTextureRef, ref uint pWidth, ref uint pHeight, ref uint pNativeFormat, ref ETextureType pAPIType, ref EColorSpace pColorSpace, ref VRTextureBounds_t pTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0xA2ECEC", Offset = "0xA2ECEC", VA = "0xA2ECEC")]
		public EVROverlayError ReleaseNativeOverlayHandle(ulong ulOverlayHandle, IntPtr pNativeTextureHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0xA2ED38", Offset = "0xA2ED38", VA = "0xA2ED38")]
		public EVROverlayError GetOverlayTextureSize(ulong ulOverlayHandle, ref uint pWidth, ref uint pHeight)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0xA2ED94", Offset = "0xA2ED94", VA = "0xA2ED94")]
		public EVROverlayError CreateDashboardOverlay(string pchOverlayKey, string pchOverlayFriendlyName, ref ulong pMainHandle, ref ulong pThumbnailHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0xA2EDF4", Offset = "0xA2EDF4", VA = "0xA2EDF4")]
		public bool IsDashboardVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0xA2EE1C", Offset = "0xA2EE1C", VA = "0xA2EE1C")]
		public bool IsActiveDashboardOverlay(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0xA2EE60", Offset = "0xA2EE60", VA = "0xA2EE60")]
		public EVROverlayError SetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint unProcessId)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0xA2EEAC", Offset = "0xA2EEAC", VA = "0xA2EEAC")]
		public EVROverlayError GetDashboardOverlaySceneProcess(ulong ulOverlayHandle, ref uint punProcessId)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0xA2EEF8", Offset = "0xA2EEF8", VA = "0xA2EEF8")]
		public void ShowDashboard(string pchOverlayToShow)
		{
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0xA2EF28", Offset = "0xA2EF28", VA = "0xA2EF28")]
		public uint GetPrimaryDashboardDevice()
		{
			return default(uint);
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0xA2EF50", Offset = "0xA2EF50", VA = "0xA2EF50")]
		public EVROverlayError ShowKeyboard(int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0xA2EFCC", Offset = "0xA2EFCC", VA = "0xA2EFCC")]
		public EVROverlayError ShowKeyboardForOverlay(ulong ulOverlayHandle, int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0xA2F068", Offset = "0xA2F068", VA = "0xA2F068")]
		public uint GetKeyboardText(StringBuilder pchText, uint cchText)
		{
			return default(uint);
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0xA2F0A0", Offset = "0xA2F0A0", VA = "0xA2F0A0")]
		public void HideKeyboard()
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xA2F0C8", Offset = "0xA2F0C8", VA = "0xA2F0C8")]
		public void SetKeyboardTransformAbsolute(ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToKeyboardTransform)
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0xA2F100", Offset = "0xA2F100", VA = "0xA2F100")]
		public void SetKeyboardPositionForOverlay(ulong ulOverlayHandle, HmdRect2_t avoidRect)
		{
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0xA2F160", Offset = "0xA2F160", VA = "0xA2F160")]
		public EVROverlayError SetOverlayIntersectionMask(ulong ulOverlayHandle, ref VROverlayIntersectionMaskPrimitive_t pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0xA2F1B8", Offset = "0xA2F1B8", VA = "0xA2F1B8")]
		public EVROverlayError GetOverlayFlags(ulong ulOverlayHandle, ref uint pFlags)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0xA2F204", Offset = "0xA2F204", VA = "0xA2F204")]
		public VRMessageOverlayResponse ShowMessageOverlay(string pchText, string pchCaption, string pchButton0Text, string pchButton1Text, string pchButton2Text, string pchButton3Text)
		{
			return default(VRMessageOverlayResponse);
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0xA2F268", Offset = "0xA2F268", VA = "0xA2F268")]
		public void CloseMessageOverlay()
		{
		}
	}
	[Token(Token = "0x200029A")]
	public class CVRRenderModels
	{
		[Token(Token = "0x200087C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D6D8", Offset = "0x39D6D8")]
		internal delegate bool _GetComponentStatePacked(string pchRenderModelName, string pchComponentName, ref VRControllerState_t_Packed pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState);

		[StructLayout(2)]
		[Token(Token = "0x200087D")]
		private struct GetComponentStateUnion
		{
			[Token(Token = "0x4002870")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRRenderModels._GetComponentState pGetComponentState;

			[Token(Token = "0x4002871")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetComponentStatePacked pGetComponentStatePacked;
		}

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IVRRenderModels FnTable;

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0xA2F3BC", Offset = "0xA2F3BC", VA = "0xA2F3BC")]
		internal CVRRenderModels(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0xA2F4F8", Offset = "0xA2F4F8", VA = "0xA2F4F8")]
		public EVRRenderModelError LoadRenderModel_Async(string pchRenderModelName, ref IntPtr ppRenderModel)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0xA2F530", Offset = "0xA2F530", VA = "0xA2F530")]
		public void FreeRenderModel(IntPtr pRenderModel)
		{
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0xA2F560", Offset = "0xA2F560", VA = "0xA2F560")]
		public EVRRenderModelError LoadTexture_Async(int textureId, ref IntPtr ppTexture)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0xA2F598", Offset = "0xA2F598", VA = "0xA2F598")]
		public void FreeTexture(IntPtr pTexture)
		{
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0xA2F5C8", Offset = "0xA2F5C8", VA = "0xA2F5C8")]
		public EVRRenderModelError LoadTextureD3D11_Async(int textureId, IntPtr pD3D11Device, ref IntPtr ppD3D11Texture2D)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0xA2F614", Offset = "0xA2F614", VA = "0xA2F614")]
		public EVRRenderModelError LoadIntoTextureD3D11_Async(int textureId, IntPtr pDstTexture)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0xA2F64C", Offset = "0xA2F64C", VA = "0xA2F64C")]
		public void FreeTextureD3D11(IntPtr pD3D11Texture2D)
		{
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0xA2F67C", Offset = "0xA2F67C", VA = "0xA2F67C")]
		public uint GetRenderModelName(uint unRenderModelIndex, StringBuilder pchRenderModelName, uint unRenderModelNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0xA2F6C8", Offset = "0xA2F6C8", VA = "0xA2F6C8")]
		public uint GetRenderModelCount()
		{
			return default(uint);
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0xA2F6F0", Offset = "0xA2F6F0", VA = "0xA2F6F0")]
		public uint GetComponentCount(string pchRenderModelName)
		{
			return default(uint);
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0xA2F720", Offset = "0xA2F720", VA = "0xA2F720")]
		public uint GetComponentName(string pchRenderModelName, uint unComponentIndex, StringBuilder pchComponentName, uint unComponentNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0xA2F774", Offset = "0xA2F774", VA = "0xA2F774")]
		public ulong GetComponentButtonMask(string pchRenderModelName, string pchComponentName)
		{
			return default(ulong);
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0xA2F7AC", Offset = "0xA2F7AC", VA = "0xA2F7AC")]
		public uint GetComponentRenderModelName(string pchRenderModelName, string pchComponentName, StringBuilder pchComponentRenderModelName, uint unComponentRenderModelNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0xA2F800", Offset = "0xA2F800", VA = "0xA2F800")]
		public bool GetComponentState(string pchRenderModelName, string pchComponentName, ref VRControllerState_t pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState)
		{
			return default(bool);
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0xA2FE90", Offset = "0xA2FE90", VA = "0xA2FE90")]
		public bool RenderModelHasComponent(string pchRenderModelName, string pchComponentName)
		{
			return default(bool);
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0xA2FEC8", Offset = "0xA2FEC8", VA = "0xA2FEC8")]
		public uint GetRenderModelThumbnailURL(string pchRenderModelName, StringBuilder pchThumbnailURL, uint unThumbnailURLLen, ref EVRRenderModelError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0xA2FF1C", Offset = "0xA2FF1C", VA = "0xA2FF1C")]
		public uint GetRenderModelOriginalPath(string pchRenderModelName, StringBuilder pchOriginalPath, uint unOriginalPathLen, ref EVRRenderModelError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0xA2FF70", Offset = "0xA2FF70", VA = "0xA2FF70")]
		public string GetRenderModelErrorNameFromEnum(EVRRenderModelError error)
		{
			return null;
		}
	}
	[Token(Token = "0x200029B")]
	public class CVRNotifications
	{
		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IVRNotifications FnTable;

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0xA2D0BC", Offset = "0xA2D0BC", VA = "0xA2D0BC")]
		internal CVRNotifications(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0xA2D1F0", Offset = "0xA2D1F0", VA = "0xA2D1F0")]
		public EVRNotificationError CreateNotification(ulong ulOverlayHandle, ulong ulUserValue, EVRNotificationType type, string pchText, EVRNotificationStyle style, ref NotificationBitmap_t pImage, ref uint pNotificationId)
		{
			return default(EVRNotificationError);
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0xA2D278", Offset = "0xA2D278", VA = "0xA2D278")]
		public EVRNotificationError RemoveNotification(uint notificationId)
		{
			return default(EVRNotificationError);
		}
	}
	[Token(Token = "0x200029C")]
	public class CVRSettings
	{
		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IVRSettings FnTable;

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0xA30670", Offset = "0xA30670", VA = "0xA30670")]
		internal CVRSettings(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0xA307C0", Offset = "0xA307C0", VA = "0xA307C0")]
		public string GetSettingsErrorNameFromEnum(EVRSettingsError eError)
		{
			return null;
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0xA30864", Offset = "0xA30864", VA = "0xA30864")]
		public bool Sync(bool bForce, ref EVRSettingsError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0xA3089C", Offset = "0xA3089C", VA = "0xA3089C")]
		public void SetBool(string pchSection, string pchSettingsKey, bool bValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0xA308F0", Offset = "0xA308F0", VA = "0xA308F0")]
		public void SetInt32(string pchSection, string pchSettingsKey, int nValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0xA30944", Offset = "0xA30944", VA = "0xA30944")]
		public void SetFloat(string pchSection, string pchSettingsKey, float flValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0xA30998", Offset = "0xA30998", VA = "0xA30998")]
		public void SetString(string pchSection, string pchSettingsKey, string pchValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0xA309EC", Offset = "0xA309EC", VA = "0xA309EC")]
		public bool GetBool(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0xA30A38", Offset = "0xA30A38", VA = "0xA30A38")]
		public int GetInt32(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(int);
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0xA30A84", Offset = "0xA30A84", VA = "0xA30A84")]
		public float GetFloat(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(float);
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0xA30AD0", Offset = "0xA30AD0", VA = "0xA30AD0")]
		public void GetString(string pchSection, string pchSettingsKey, StringBuilder pchValue, uint unValueLen, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0xA30B2C", Offset = "0xA30B2C", VA = "0xA30B2C")]
		public void RemoveSection(string pchSection, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0xA30B64", Offset = "0xA30B64", VA = "0xA30B64")]
		public void RemoveKeyInSection(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
		}
	}
	[Token(Token = "0x200029D")]
	public class CVRScreenshots
	{
		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IVRScreenshots FnTable;

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0xA3031C", Offset = "0xA3031C", VA = "0xA3031C")]
		internal CVRScreenshots(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0xA3046C", Offset = "0xA3046C", VA = "0xA3046C")]
		public EVRScreenshotError RequestScreenshot(ref uint pOutScreenshotHandle, EVRScreenshotType type, string pchPreviewFilename, string pchVRFilename)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0xA304C0", Offset = "0xA304C0", VA = "0xA304C0")]
		public EVRScreenshotError HookScreenshot(EVRScreenshotType[] pSupportedTypes)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0xA30500", Offset = "0xA30500", VA = "0xA30500")]
		public EVRScreenshotType GetScreenshotPropertyType(uint screenshotHandle, ref EVRScreenshotError pError)
		{
			return default(EVRScreenshotType);
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0xA30538", Offset = "0xA30538", VA = "0xA30538")]
		public uint GetScreenshotPropertyFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames filenameType, StringBuilder pchFilename, uint cchFilename, ref EVRScreenshotError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0xA30594", Offset = "0xA30594", VA = "0xA30594")]
		public EVRScreenshotError UpdateScreenshotProgress(uint screenshotHandle, float flProgress)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0xA305CC", Offset = "0xA305CC", VA = "0xA305CC")]
		public EVRScreenshotError TakeStereoScreenshot(ref uint pOutScreenshotHandle, string pchPreviewFilename, string pchVRFilename)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0xA3061C", Offset = "0xA3061C", VA = "0xA3061C")]
		public EVRScreenshotError SubmitScreenshot(uint screenshotHandle, EVRScreenshotType type, string pchSourcePreviewFilename, string pchSourceVRFilename)
		{
			return default(EVRScreenshotError);
		}
	}
	[Token(Token = "0x200029E")]
	public class CVRResources
	{
		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IVRResources FnTable;

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0xA30148", Offset = "0xA30148", VA = "0xA30148")]
		internal CVRResources(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0xA3027C", Offset = "0xA3027C", VA = "0xA3027C")]
		public uint LoadSharedResource(string pchResourceName, string pchBuffer, uint unBufferLen)
		{
			return default(uint);
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0xA302C8", Offset = "0xA302C8", VA = "0xA302C8")]
		public uint GetResourceFullPath(string pchResourceName, string pchResourceTypeDirectory, StringBuilder pchPathBuffer, uint unBufferLen)
		{
			return default(uint);
		}
	}
	[Token(Token = "0x200029F")]
	public class CVRDriverManager
	{
		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IVRDriverManager FnTable;

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0xA2CCC8", Offset = "0xA2CCC8", VA = "0xA2CCC8")]
		internal CVRDriverManager(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0xA2CDFC", Offset = "0xA2CDFC", VA = "0xA2CDFC")]
		public uint GetDriverCount()
		{
			return default(uint);
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0xA2CE24", Offset = "0xA2CE24", VA = "0xA2CE24")]
		public uint GetDriverName(uint nDriver, StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}
	}
	[Token(Token = "0x20002A0")]
	public class OpenVRInterop
	{
		[PreserveSig]
		[Token(Token = "0x60016EE")]
		[Address(RVA = "0x868BB0", Offset = "0x868BB0", VA = "0x868BB0")]
		internal static extern uint InitInternal(ref EVRInitError peError, EVRApplicationType eApplicationType);

		[PreserveSig]
		[Token(Token = "0x60016EF")]
		[Address(RVA = "0x868C60", Offset = "0x868C60", VA = "0x868C60")]
		internal static extern void ShutdownInternal();

		[PreserveSig]
		[Token(Token = "0x60016F0")]
		[Address(RVA = "0x868D00", Offset = "0x868D00", VA = "0x868D00")]
		internal static extern bool IsHmdPresent();

		[PreserveSig]
		[Token(Token = "0x60016F1")]
		[Address(RVA = "0x868DA8", Offset = "0x868DA8", VA = "0x868DA8")]
		internal static extern bool IsRuntimeInstalled();

		[PreserveSig]
		[Token(Token = "0x60016F2")]
		[Address(RVA = "0x868ED0", Offset = "0x868ED0", VA = "0x868ED0")]
		internal static extern IntPtr GetStringForHmdError(EVRInitError error);

		[PreserveSig]
		[Token(Token = "0x60016F3")]
		[Address(RVA = "0x868F78", Offset = "0x868F78", VA = "0x868F78")]
		internal static extern IntPtr GetGenericInterface([In] string pchInterfaceVersion, ref EVRInitError peError);

		[PreserveSig]
		[Token(Token = "0x60016F4")]
		[Address(RVA = "0x869048", Offset = "0x869048", VA = "0x869048")]
		internal static extern bool IsInterfaceVersionValid([In] string pchInterfaceVersion);

		[PreserveSig]
		[Token(Token = "0x60016F5")]
		[Address(RVA = "0x869118", Offset = "0x869118", VA = "0x869118")]
		internal static extern uint GetInitToken();

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0x86A704", Offset = "0x86A704", VA = "0x86A704")]
		public OpenVRInterop()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public enum EVREye
	{
		[Token(Token = "0x400132B")]
		Eye_Left,
		[Token(Token = "0x400132C")]
		Eye_Right
	}
	[Token(Token = "0x20002A2")]
	public enum ETextureType
	{
		[Token(Token = "0x400132E")]
		DirectX,
		[Token(Token = "0x400132F")]
		OpenGL,
		[Token(Token = "0x4001330")]
		Vulkan,
		[Token(Token = "0x4001331")]
		IOSurface,
		[Token(Token = "0x4001332")]
		DirectX12
	}
	[Token(Token = "0x20002A3")]
	public enum EColorSpace
	{
		[Token(Token = "0x4001334")]
		Auto,
		[Token(Token = "0x4001335")]
		Gamma,
		[Token(Token = "0x4001336")]
		Linear
	}
	[Token(Token = "0x20002A4")]
	public enum ETrackingResult
	{
		[Token(Token = "0x4001338")]
		Uninitialized = 1,
		[Token(Token = "0x4001339")]
		Calibrating_InProgress = 100,
		[Token(Token = "0x400133A")]
		Calibrating_OutOfRange = 101,
		[Token(Token = "0x400133B")]
		Running_OK = 200,
		[Token(Token = "0x400133C")]
		Running_OutOfRange = 201
	}
	[Token(Token = "0x20002A5")]
	public enum ETrackedDeviceClass
	{
		[Token(Token = "0x400133E")]
		Invalid,
		[Token(Token = "0x400133F")]
		HMD,
		[Token(Token = "0x4001340")]
		Controller,
		[Token(Token = "0x4001341")]
		GenericTracker,
		[Token(Token = "0x4001342")]
		TrackingReference,
		[Token(Token = "0x4001343")]
		DisplayRedirect
	}
	[Token(Token = "0x20002A6")]
	public enum ETrackedControllerRole
	{
		[Token(Token = "0x4001345")]
		Invalid,
		[Token(Token = "0x4001346")]
		LeftHand,
		[Token(Token = "0x4001347")]
		RightHand
	}
	[Token(Token = "0x20002A7")]
	public enum ETrackingUniverseOrigin
	{
		[Token(Token = "0x4001349")]
		TrackingUniverseSeated,
		[Token(Token = "0x400134A")]
		TrackingUniverseStanding,
		[Token(Token = "0x400134B")]
		TrackingUniverseRawAndUncalibrated
	}
	[Token(Token = "0x20002A8")]
	public enum ETrackedDeviceProperty
	{
		[Token(Token = "0x400134D")]
		Prop_Invalid = 0,
		[Token(Token = "0x400134E")]
		Prop_TrackingSystemName_String = 1000,
		[Token(Token = "0x400134F")]
		Prop_ModelNumber_String = 1001,
		[Token(Token = "0x4001350")]
		Prop_SerialNumber_String = 1002,
		[Token(Token = "0x4001351")]
		Prop_RenderModelName_String = 1003,
		[Token(Token = "0x4001352")]
		Prop_WillDriftInYaw_Bool = 1004,
		[Token(Token = "0x4001353")]
		Prop_ManufacturerName_String = 1005,
		[Token(Token = "0x4001354")]
		Prop_TrackingFirmwareVersion_String = 1006,
		[Token(Token = "0x4001355")]
		Prop_HardwareRevision_String = 1007,
		[Token(Token = "0x4001356")]
		Prop_AllWirelessDongleDescriptions_String = 1008,
		[Token(Token = "0x4001357")]
		Prop_ConnectedWirelessDongle_String = 1009,
		[Token(Token = "0x4001358")]
		Prop_DeviceIsWireless_Bool = 1010,
		[Token(Token = "0x4001359")]
		Prop_DeviceIsCharging_Bool = 1011,
		[Token(Token = "0x400135A")]
		Prop_DeviceBatteryPercentage_Float = 1012,
		[Token(Token = "0x400135B")]
		Prop_StatusDisplayTransform_Matrix34 = 1013,
		[Token(Token = "0x400135C")]
		Prop_Firmware_UpdateAvailable_Bool = 1014,
		[Token(Token = "0x400135D")]
		Prop_Firmware_ManualUpdate_Bool = 1015,
		[Token(Token = "0x400135E")]
		Prop_Firmware_ManualUpdateURL_String = 1016,
		[Token(Token = "0x400135F")]
		Prop_HardwareRevision_Uint64 = 1017,
		[Token(Token = "0x4001360")]
		Prop_FirmwareVersion_Uint64 = 1018,
		[Token(Token = "0x4001361")]
		Prop_FPGAVersion_Uint64 = 1019,
		[Token(Token = "0x4001362")]
		Prop_VRCVersion_Uint64 = 1020,
		[Token(Token = "0x4001363")]
		Prop_RadioVersion_Uint64 = 1021,
		[Token(Token = "0x4001364")]
		Prop_DongleVersion_Uint64 = 1022,
		[Token(Token = "0x4001365")]
		Prop_BlockServerShutdown_Bool = 1023,
		[Token(Token = "0x4001366")]
		Prop_CanUnifyCoordinateSystemWithHmd_Bool = 1024,
		[Token(Token = "0x4001367")]
		Prop_ContainsProximitySensor_Bool = 1025,
		[Token(Token = "0x4001368")]
		Prop_DeviceProvidesBatteryStatus_Bool = 1026,
		[Token(Token = "0x4001369")]
		Prop_DeviceCanPowerOff_Bool = 1027,
		[Token(Token = "0x400136A")]
		Prop_Firmware_ProgrammingTarget_String = 1028,
		[Token(Token = "0x400136B")]
		Prop_DeviceClass_Int32 = 1029,
		[Token(Token = "0x400136C")]
		Prop_HasCamera_Bool = 1030,
		[Token(Token = "0x400136D")]
		Prop_DriverVersion_String = 1031,
		[Token(Token = "0x400136E")]
		Prop_Firmware_ForceUpdateRequired_Bool = 1032,
		[Token(Token = "0x400136F")]
		Prop_ViveSystemButtonFixRequired_Bool = 1033,
		[Token(Token = "0x4001370")]
		Prop_ParentDriver_Uint64 = 1034,
		[Token(Token = "0x4001371")]
		Prop_ResourceRoot_String = 1035,
		[Token(Token = "0x4001372")]
		Prop_RegisteredDeviceType_String = 1036,
		[Token(Token = "0x4001373")]
		Prop_InputProfilePath_String = 1037,
		[Token(Token = "0x4001374")]
		Prop_ReportsTimeSinceVSync_Bool = 2000,
		[Token(Token = "0x4001375")]
		Prop_SecondsFromVsyncToPhotons_Float = 2001,
		[Token(Token = "0x4001376")]
		Prop_DisplayFrequency_Float = 2002,
		[Token(Token = "0x4001377")]
		Prop_UserIpdMeters_Float = 2003,
		[Token(Token = "0x4001378")]
		Prop_CurrentUniverseId_Uint64 = 2004,
		[Token(Token = "0x4001379")]
		Prop_PreviousUniverseId_Uint64 = 2005,
		[Token(Token = "0x400137A")]
		Prop_DisplayFirmwareVersion_Uint64 = 2006,
		[Token(Token = "0x400137B")]
		Prop_IsOnDesktop_Bool = 2007,
		[Token(Token = "0x400137C")]
		Prop_DisplayMCType_Int32 = 2008,
		[Token(Token = "0x400137D")]
		Prop_DisplayMCOffset_Float = 2009,
		[Token(Token = "0x400137E")]
		Prop_DisplayMCScale_Float = 2010,
		[Token(Token = "0x400137F")]
		Prop_EdidVendorID_Int32 = 2011,
		[Token(Token = "0x4001380")]
		Prop_DisplayMCImageLeft_String = 2012,
		[Token(Token = "0x4001381")]
		Prop_DisplayMCImageRight_String = 2013,
		[Token(Token = "0x4001382")]
		Prop_DisplayGCBlackClamp_Float = 2014,
		[Token(Token = "0x4001383")]
		Prop_EdidProductID_Int32 = 2015,
		[Token(Token = "0x4001384")]
		Prop_CameraToHeadTransform_Matrix34 = 2016,
		[Token(Token = "0x4001385")]
		Prop_DisplayGCType_Int32 = 2017,
		[Token(Token = "0x4001386")]
		Prop_DisplayGCOffset_Float = 2018,
		[Token(Token = "0x4001387")]
		Prop_DisplayGCScale_Float = 2019,
		[Token(Token = "0x4001388")]
		Prop_DisplayGCPrescale_Float = 2020,
		[Token(Token = "0x4001389")]
		Prop_DisplayGCImage_String = 2021,
		[Token(Token = "0x400138A")]
		Prop_LensCenterLeftU_Float = 2022,
		[Token(Token = "0x400138B")]
		Prop_LensCenterLeftV_Float = 2023,
		[Token(Token = "0x400138C")]
		Prop_LensCenterRightU_Float = 2024,
		[Token(Token = "0x400138D")]
		Prop_LensCenterRightV_Float = 2025,
		[Token(Token = "0x400138E")]
		Prop_UserHeadToEyeDepthMeters_Float = 2026,
		[Token(Token = "0x400138F")]
		Prop_CameraFirmwareVersion_Uint64 = 2027,
		[Token(Token = "0x4001390")]
		Prop_CameraFirmwareDescription_String = 2028,
		[Token(Token = "0x4001391")]
		Prop_DisplayFPGAVersion_Uint64 = 2029,
		[Token(Token = "0x4001392")]
		Prop_DisplayBootloaderVersion_Uint64 = 2030,
		[Token(Token = "0x4001393")]
		Prop_DisplayHardwareVersion_Uint64 = 2031,
		[Token(Token = "0x4001394")]
		Prop_AudioFirmwareVersion_Uint64 = 2032,
		[Token(Token = "0x4001395")]
		Prop_CameraCompatibilityMode_Int32 = 2033,
		[Token(Token = "0x4001396")]
		Prop_ScreenshotHorizontalFieldOfViewDegrees_Float = 2034,
		[Token(Token = "0x4001397")]
		Prop_ScreenshotVerticalFieldOfViewDegrees_Float = 2035,
		[Token(Token = "0x4001398")]
		Prop_DisplaySuppressed_Bool = 2036,
		[Token(Token = "0x4001399")]
		Prop_DisplayAllowNightMode_Bool = 2037,
		[Token(Token = "0x400139A")]
		Prop_DisplayMCImageWidth_Int32 = 2038,
		[Token(Token = "0x400139B")]
		Prop_DisplayMCImageHeight_Int32 = 2039,
		[Token(Token = "0x400139C")]
		Prop_DisplayMCImageNumChannels_Int32 = 2040,
		[Token(Token = "0x400139D")]
		Prop_DisplayMCImageData_Binary = 2041,
		[Token(Token = "0x400139E")]
		Prop_SecondsFromPhotonsToVblank_Float = 2042,
		[Token(Token = "0x400139F")]
		Prop_DriverDirectModeSendsVsyncEvents_Bool = 2043,
		[Token(Token = "0x40013A0")]
		Prop_DisplayDebugMode_Bool = 2044,
		[Token(Token = "0x40013A1")]
		Prop_GraphicsAdapterLuid_Uint64 = 2045,
		[Token(Token = "0x40013A2")]
		Prop_DriverProvidedChaperonePath_String = 2048,
		[Token(Token = "0x40013A3")]
		Prop_ExpectedTrackingReferenceCount_Int32 = 2049,
		[Token(Token = "0x40013A4")]
		Prop_ExpectedControllerCount_Int32 = 2050,
		[Token(Token = "0x40013A5")]
		Prop_NamedIconPathControllerLeftDeviceOff_String = 2051,
		[Token(Token = "0x40013A6")]
		Prop_NamedIconPathControllerRightDeviceOff_String = 2052,
		[Token(Token = "0x40013A7")]
		Prop_NamedIconPathTrackingReferenceDeviceOff_String = 2053,
		[Token(Token = "0x40013A8")]
		Prop_DoNotApplyPrediction_Bool = 2054,
		[Token(Token = "0x40013A9")]
		Prop_CameraToHeadTransforms_Matrix34_Array = 2055,
		[Token(Token = "0x40013AA")]
		Prop_DriverIsDrawingControllers_Bool = 2057,
		[Token(Token = "0x40013AB")]
		Prop_DriverRequestsApplicationPause_Bool = 2058,
		[Token(Token = "0x40013AC")]
		Prop_DriverRequestsReducedRendering_Bool = 2059,
		[Token(Token = "0x40013AD")]
		Prop_AttachedDeviceId_String = 3000,
		[Token(Token = "0x40013AE")]
		Prop_SupportedButtons_Uint64 = 3001,
		[Token(Token = "0x40013AF")]
		Prop_Axis0Type_Int32 = 3002,
		[Token(Token = "0x40013B0")]
		Prop_Axis1Type_Int32 = 3003,
		[Token(Token = "0x40013B1")]
		Prop_Axis2Type_Int32 = 3004,
		[Token(Token = "0x40013B2")]
		Prop_Axis3Type_Int32 = 3005,
		[Token(Token = "0x40013B3")]
		Prop_Axis4Type_Int32 = 3006,
		[Token(Token = "0x40013B4")]
		Prop_ControllerRoleHint_Int32 = 3007,
		[Token(Token = "0x40013B5")]
		Prop_FieldOfViewLeftDegrees_Float = 4000,
		[Token(Token = "0x40013B6")]
		Prop_FieldOfViewRightDegrees_Float = 4001,
		[Token(Token = "0x40013B7")]
		Prop_FieldOfViewTopDegrees_Float = 4002,
		[Token(Token = "0x40013B8")]
		Prop_FieldOfViewBottomDegrees_Float = 4003,
		[Token(Token = "0x40013B9")]
		Prop_TrackingRangeMinimumMeters_Float = 4004,
		[Token(Token = "0x40013BA")]
		Prop_TrackingRangeMaximumMeters_Float = 4005,
		[Token(Token = "0x40013BB")]
		Prop_ModeLabel_String = 4006,
		[Token(Token = "0x40013BC")]
		Prop_IconPathName_String = 5000,
		[Token(Token = "0x40013BD")]
		Prop_NamedIconPathDeviceOff_String = 5001,
		[Token(Token = "0x40013BE")]
		Prop_NamedIconPathDeviceSearching_String = 5002,
		[Token(Token = "0x40013BF")]
		Prop_NamedIconPathDeviceSearchingAlert_String = 5003,
		[Token(Token = "0x40013C0")]
		Prop_NamedIconPathDeviceReady_String = 5004,
		[Token(Token = "0x40013C1")]
		Prop_NamedIconPathDeviceReadyAlert_String = 5005,
		[Token(Token = "0x40013C2")]
		Prop_NamedIconPathDeviceNotReady_String = 5006,
		[Token(Token = "0x40013C3")]
		Prop_NamedIconPathDeviceStandby_String = 5007,
		[Token(Token = "0x40013C4")]
		Prop_NamedIconPathDeviceAlertLow_String = 5008,
		[Token(Token = "0x40013C5")]
		Prop_DisplayHiddenArea_Binary_Start = 5100,
		[Token(Token = "0x40013C6")]
		Prop_DisplayHiddenArea_Binary_End = 5150,
		[Token(Token = "0x40013C7")]
		Prop_ParentContainer = 5151,
		[Token(Token = "0x40013C8")]
		Prop_UserConfigPath_String = 6000,
		[Token(Token = "0x40013C9")]
		Prop_InstallPath_String = 6001,
		[Token(Token = "0x40013CA")]
		Prop_HasDisplayComponent_Bool = 6002,
		[Token(Token = "0x40013CB")]
		Prop_HasControllerComponent_Bool = 6003,
		[Token(Token = "0x40013CC")]
		Prop_HasCameraComponent_Bool = 6004,
		[Token(Token = "0x40013CD")]
		Prop_HasDriverDirectModeComponent_Bool = 6005,
		[Token(Token = "0x40013CE")]
		Prop_HasVirtualDisplayComponent_Bool = 6006,
		[Token(Token = "0x40013CF")]
		Prop_ControllerType_String = 7000,
		[Token(Token = "0x40013D0")]
		Prop_LegacyInputProfile_String = 7001,
		[Token(Token = "0x40013D1")]
		Prop_VendorSpecific_Reserved_Start = 10000,
		[Token(Token = "0x40013D2")]
		Prop_VendorSpecific_Reserved_End = 10999,
		[Token(Token = "0x40013D3")]
		Prop_TrackedDeviceProperty_Max = 1000000
	}
	[Token(Token = "0x20002A9")]
	public enum ETrackedPropertyError
	{
		[Token(Token = "0x40013D5")]
		TrackedProp_Success,
		[Token(Token = "0x40013D6")]
		TrackedProp_WrongDataType,
		[Token(Token = "0x40013D7")]
		TrackedProp_WrongDeviceClass,
		[Token(Token = "0x40013D8")]
		TrackedProp_BufferTooSmall,
		[Token(Token = "0x40013D9")]
		TrackedProp_UnknownProperty,
		[Token(Token = "0x40013DA")]
		TrackedProp_InvalidDevice,
		[Token(Token = "0x40013DB")]
		TrackedProp_CouldNotContactServer,
		[Token(Token = "0x40013DC")]
		TrackedProp_ValueNotProvidedByDevice,
		[Token(Token = "0x40013DD")]
		TrackedProp_StringExceedsMaximumLength,
		[Token(Token = "0x40013DE")]
		TrackedProp_NotYetAvailable,
		[Token(Token = "0x40013DF")]
		TrackedProp_PermissionDenied,
		[Token(Token = "0x40013E0")]
		TrackedProp_InvalidOperation,
		[Token(Token = "0x40013E1")]
		TrackedProp_CannotWriteToWildcards
	}
	[Token(Token = "0x20002AA")]
	public enum EVRSubmitFlags
	{
		[Token(Token = "0x40013E3")]
		Submit_Default = 0,
		[Token(Token = "0x40013E4")]
		Submit_LensDistortionAlreadyApplied = 1,
		[Token(Token = "0x40013E5")]
		Submit_GlRenderBuffer = 2,
		[Token(Token = "0x40013E6")]
		Submit_Reserved = 4,
		[Token(Token = "0x40013E7")]
		Submit_TextureWithPose = 8,
		[Token(Token = "0x40013E8")]
		Submit_TextureWithDepth = 0x10
	}
	[Token(Token = "0x20002AB")]
	public enum EVRState
	{
		[Token(Token = "0x40013EA")]
		Undefined = -1,
		[Token(Token = "0x40013EB")]
		Off,
		[Token(Token = "0x40013EC")]
		Searching,
		[Token(Token = "0x40013ED")]
		Searching_Alert,
		[Token(Token = "0x40013EE")]
		Ready,
		[Token(Token = "0x40013EF")]
		Ready_Alert,
		[Token(Token = "0x40013F0")]
		NotReady,
		[Token(Token = "0x40013F1")]
		Standby,
		[Token(Token = "0x40013F2")]
		Ready_Alert_Low
	}
	[Token(Token = "0x20002AC")]
	public enum EVREventType
	{
		[Token(Token = "0x40013F4")]
		VREvent_None = 0,
		[Token(Token = "0x40013F5")]
		VREvent_TrackedDeviceActivated = 100,
		[Token(Token = "0x40013F6")]
		VREvent_TrackedDeviceDeactivated = 101,
		[Token(Token = "0x40013F7")]
		VREvent_TrackedDeviceUpdated = 102,
		[Token(Token = "0x40013F8")]
		VREvent_TrackedDeviceUserInteractionStarted = 103,
		[Token(Token = "0x40013F9")]
		VREvent_TrackedDeviceUserInteractionEnded = 104,
		[Token(Token = "0x40013FA")]
		VREvent_IpdChanged = 105,
		[Token(Token = "0x40013FB")]
		VREvent_EnterStandbyMode = 106,
		[Token(Token = "0x40013FC")]
		VREvent_LeaveStandbyMode = 107,
		[Token(Token = "0x40013FD")]
		VREvent_TrackedDeviceRoleChanged = 108,
		[Token(Token = "0x40013FE")]
		VREvent_WatchdogWakeUpRequested = 109,
		[Token(Token = "0x40013FF")]
		VREvent_LensDistortionChanged = 110,
		[Token(Token = "0x4001400")]
		VREvent_PropertyChanged = 111,
		[Token(Token = "0x4001401")]
		VREvent_WirelessDisconnect = 112,
		[Token(Token = "0x4001402")]
		VREvent_WirelessReconnect = 113,
		[Token(Token = "0x4001403")]
		VREvent_ButtonPress = 200,
		[Token(Token = "0x4001404")]
		VREvent_ButtonUnpress = 201,
		[Token(Token = "0x4001405")]
		VREvent_ButtonTouch = 202,
		[Token(Token = "0x4001406")]
		VREvent_ButtonUntouch = 203,
		[Token(Token = "0x4001407")]
		VREvent_DualAnalog_Press = 250,
		[Token(Token = "0x4001408")]
		VREvent_DualAnalog_Unpress = 251,
		[Token(Token = "0x4001409")]
		VREvent_DualAnalog_Touch = 252,
		[Token(Token = "0x400140A")]
		VREvent_DualAnalog_Untouch = 253,
		[Token(Token = "0x400140B")]
		VREvent_DualAnalog_Move = 254,
		[Token(Token = "0x400140C")]
		VREvent_DualAnalog_ModeSwitch1 = 255,
		[Token(Token = "0x400140D")]
		VREvent_DualAnalog_ModeSwitch2 = 256,
		[Token(Token = "0x400140E")]
		VREvent_DualAnalog_Cancel = 257,
		[Token(Token = "0x400140F")]
		VREvent_MouseMove = 300,
		[Token(Token = "0x4001410")]
		VREvent_MouseButtonDown = 301,
		[Token(Token = "0x4001411")]
		VREvent_MouseButtonUp = 302,
		[Token(Token = "0x4001412")]
		VREvent_FocusEnter = 303,
		[Token(Token = "0x4001413")]
		VREvent_FocusLeave = 304,
		[Token(Token = "0x4001414")]
		VREvent_Scroll = 305,
		[Token(Token = "0x4001415")]
		VREvent_TouchPadMove = 306,
		[Token(Token = "0x4001416")]
		VREvent_OverlayFocusChanged = 307,
		[Token(Token = "0x4001417")]
		VREvent_InputFocusCaptured = 400,
		[Token(Token = "0x4001418")]
		VREvent_InputFocusReleased = 401,
		[Token(Token = "0x4001419")]
		VREvent_SceneFocusLost = 402,
		[Token(Token = "0x400141A")]
		VREvent_SceneFocusGained = 403,
		[Token(Token = "0x400141B")]
		VREvent_SceneApplicationChanged = 404,
		[Token(Token = "0x400141C")]
		VREvent_SceneFocusChanged = 405,
		[Token(Token = "0x400141D")]
		VREvent_InputFocusChanged = 406,
		[Token(Token = "0x400141E")]
		VREvent_SceneApplicationSecondaryRenderingStarted = 407,
		[Token(Token = "0x400141F")]
		VREvent_HideRenderModels = 410,
		[Token(Token = "0x4001420")]
		VREvent_ShowRenderModels = 411,
		[Token(Token = "0x4001421")]
		VREvent_ConsoleOpened = 420,
		[Token(Token = "0x4001422")]
		VREvent_ConsoleClosed = 421,
		[Token(Token = "0x4001423")]
		VREvent_OverlayShown = 500,
		[Token(Token = "0x4001424")]
		VREvent_OverlayHidden = 501,
		[Token(Token = "0x4001425")]
		VREvent_DashboardActivated = 502,
		[Token(Token = "0x4001426")]
		VREvent_DashboardDeactivated = 503,
		[Token(Token = "0x4001427")]
		VREvent_DashboardThumbSelected = 504,
		[Token(Token = "0x4001428")]
		VREvent_DashboardRequested = 505,
		[Token(Token = "0x4001429")]
		VREvent_ResetDashboard = 506,
		[Token(Token = "0x400142A")]
		VREvent_RenderToast = 507,
		[Token(Token = "0x400142B")]
		VREvent_ImageLoaded = 508,
		[Token(Token = "0x400142C")]
		VREvent_ShowKeyboard = 509,
		[Token(Token = "0x400142D")]
		VREvent_HideKeyboard = 510,
		[Token(Token = "0x400142E")]
		VREvent_OverlayGamepadFocusGained = 511,
		[Token(Token = "0x400142F")]
		VREvent_OverlayGamepadFocusLost = 512,
		[Token(Token = "0x4001430")]
		VREvent_OverlaySharedTextureChanged = 513,
		[Token(Token = "0x4001431")]
		VREvent_DashboardGuideButtonDown = 514,
		[Token(Token = "0x4001432")]
		VREvent_DashboardGuideButtonUp = 515,
		[Token(Token = "0x4001433")]
		VREvent_ScreenshotTriggered = 516,
		[Token(Token = "0x4001434")]
		VREvent_ImageFailed = 517,
		[Token(Token = "0x4001435")]
		VREvent_DashboardOverlayCreated = 518,
		[Token(Token = "0x4001436")]
		VREvent_RequestScreenshot = 520,
		[Token(Token = "0x4001437")]
		VREvent_ScreenshotTaken = 521,
		[Token(Token = "0x4001438")]
		VREvent_ScreenshotFailed = 522,
		[Token(Token = "0x4001439")]
		VREvent_SubmitScreenshotToDashboard = 523,
		[Token(Token = "0x400143A")]
		VREvent_ScreenshotProgressToDashboard = 524,
		[Token(Token = "0x400143B")]
		VREvent_PrimaryDashboardDeviceChanged = 525,
		[Token(Token = "0x400143C")]
		VREvent_Notification_Shown = 600,
		[Token(Token = "0x400143D")]
		VREvent_Notification_Hidden = 601,
		[Token(Token = "0x400143E")]
		VREvent_Notification_BeginInteraction = 602,
		[Token(Token = "0x400143F")]
		VREvent_Notification_Destroyed = 603,
		[Token(Token = "0x4001440")]
		VREvent_Quit = 700,
		[Token(Token = "0x4001441")]
		VREvent_ProcessQuit = 701,
		[Token(Token = "0x4001442")]
		VREvent_QuitAborted_UserPrompt = 702,
		[Token(Token = "0x4001443")]
		VREvent_QuitAcknowledged = 703,
		[Token(Token = "0x4001444")]
		VREvent_DriverRequestedQuit = 704,
		[Token(Token = "0x4001445")]
		VREvent_ChaperoneDataHasChanged = 800,
		[Token(Token = "0x4001446")]
		VREvent_ChaperoneUniverseHasChanged = 801,
		[Token(Token = "0x4001447")]
		VREvent_ChaperoneTempDataHasChanged = 802,
		[Token(Token = "0x4001448")]
		VREvent_ChaperoneSettingsHaveChanged = 803,
		[Token(Token = "0x4001449")]
		VREvent_SeatedZeroPoseReset = 804,
		[Token(Token = "0x400144A")]
		VREvent_AudioSettingsHaveChanged = 820,
		[Token(Token = "0x400144B")]
		VREvent_BackgroundSettingHasChanged = 850,
		[Token(Token = "0x400144C")]
		VREvent_CameraSettingsHaveChanged = 851,
		[Token(Token = "0x400144D")]
		VREvent_ReprojectionSettingHasChanged = 852,
		[Token(Token = "0x400144E")]
		VREvent_ModelSkinSettingsHaveChanged = 853,
		[Token(Token = "0x400144F")]
		VREvent_EnvironmentSettingsHaveChanged = 854,
		[Token(Token = "0x4001450")]
		VREvent_PowerSettingsHaveChanged = 855,
		[Token(Token = "0x4001451")]
		VREvent_EnableHomeAppSettingsHaveChanged = 856,
		[Token(Token = "0x4001452")]
		VREvent_SteamVRSectionSettingChanged = 857,
		[Token(Token = "0x4001453")]
		VREvent_LighthouseSectionSettingChanged = 858,
		[Token(Token = "0x4001454")]
		VREvent_NullSectionSettingChanged = 859,
		[Token(Token = "0x4001455")]
		VREvent_UserInterfaceSectionSettingChanged = 860,
		[Token(Token = "0x4001456")]
		VREvent_NotificationsSectionSettingChanged = 861,
		[Token(Token = "0x4001457")]
		VREvent_KeyboardSectionSettingChanged = 862,
		[Token(Token = "0x4001458")]
		VREvent_PerfSectionSettingChanged = 863,
		[Token(Token = "0x4001459")]
		VREvent_DashboardSectionSettingChanged = 864,
		[Token(Token = "0x400145A")]
		VREvent_WebInterfaceSectionSettingChanged = 865,
		[Token(Token = "0x400145B")]
		VREvent_StatusUpdate = 900,
		[Token(Token = "0x400145C")]
		VREvent_WebInterface_InstallDriverCompleted = 950,
		[Token(Token = "0x400145D")]
		VREvent_MCImageUpdated = 1000,
		[Token(Token = "0x400145E")]
		VREvent_FirmwareUpdateStarted = 1100,
		[Token(Token = "0x400145F")]
		VREvent_FirmwareUpdateFinished = 1101,
		[Token(Token = "0x4001460")]
		VREvent_KeyboardClosed = 1200,
		[Token(Token = "0x4001461")]
		VREvent_KeyboardCharInput = 1201,
		[Token(Token = "0x4001462")]
		VREvent_KeyboardDone = 1202,
		[Token(Token = "0x4001463")]
		VREvent_ApplicationTransitionStarted = 1300,
		[Token(Token = "0x4001464")]
		VREvent_ApplicationTransitionAborted = 1301,
		[Token(Token = "0x4001465")]
		VREvent_ApplicationTransitionNewAppStarted = 1302,
		[Token(Token = "0x4001466")]
		VREvent_ApplicationListUpdated = 1303,
		[Token(Token = "0x4001467")]
		VREvent_ApplicationMimeTypeLoad = 1304,
		[Token(Token = "0x4001468")]
		VREvent_ApplicationTransitionNewAppLaunchComplete = 1305,
		[Token(Token = "0x4001469")]
		VREvent_ProcessConnected = 1306,
		[Token(Token = "0x400146A")]
		VREvent_ProcessDisconnected = 1307,
		[Token(Token = "0x400146B")]
		VREvent_Compositor_MirrorWindowShown = 1400,
		[Token(Token = "0x400146C")]
		VREvent_Compositor_MirrorWindowHidden = 1401,
		[Token(Token = "0x400146D")]
		VREvent_Compositor_ChaperoneBoundsShown = 1410,
		[Token(Token = "0x400146E")]
		VREvent_Compositor_ChaperoneBoundsHidden = 1411,
		[Token(Token = "0x400146F")]
		VREvent_TrackedCamera_StartVideoStream = 1500,
		[Token(Token = "0x4001470")]
		VREvent_TrackedCamera_StopVideoStream = 1501,
		[Token(Token = "0x4001471")]
		VREvent_TrackedCamera_PauseVideoStream = 1502,
		[Token(Token = "0x4001472")]
		VREvent_TrackedCamera_ResumeVideoStream = 1503,
		[Token(Token = "0x4001473")]
		VREvent_TrackedCamera_EditingSurface = 1550,
		[Token(Token = "0x4001474")]
		VREvent_PerformanceTest_EnableCapture = 1600,
		[Token(Token = "0x4001475")]
		VREvent_PerformanceTest_DisableCapture = 1601,
		[Token(Token = "0x4001476")]
		VREvent_PerformanceTest_FidelityLevel = 1602,
		[Token(Token = "0x4001477")]
		VREvent_MessageOverlay_Closed = 1650,
		[Token(Token = "0x4001478")]
		VREvent_MessageOverlayCloseRequested = 1651,
		[Token(Token = "0x4001479")]
		VREvent_Input_HapticVibration = 1700,
		[Token(Token = "0x400147A")]
		VREvent_VendorSpecific_Reserved_Start = 10000,
		[Token(Token = "0x400147B")]
		VREvent_VendorSpecific_Reserved_End = 19999
	}
	[Token(Token = "0x20002AD")]
	public enum EDeviceActivityLevel
	{
		[Token(Token = "0x400147D")]
		k_EDeviceActivityLevel_Unknown = -1,
		[Token(Token = "0x400147E")]
		k_EDeviceActivityLevel_Idle,
		[Token(Token = "0x400147F")]
		k_EDeviceActivityLevel_UserInteraction,
		[Token(Token = "0x4001480")]
		k_EDeviceActivityLevel_UserInteraction_Timeout,
		[Token(Token = "0x4001481")]
		k_EDeviceActivityLevel_Standby
	}
	[Token(Token = "0x20002AE")]
	public enum EVRButtonId
	{
		[Token(Token = "0x4001483")]
		k_EButton_System = 0,
		[Token(Token = "0x4001484")]
		k_EButton_ApplicationMenu = 1,
		[Token(Token = "0x4001485")]
		k_EButton_Grip = 2,
		[Token(Token = "0x4001486")]
		k_EButton_DPad_Left = 3,
		[Token(Token = "0x4001487")]
		k_EButton_DPad_Up = 4,
		[Token(Token = "0x4001488")]
		k_EButton_DPad_Right = 5,
		[Token(Token = "0x4001489")]
		k_EButton_DPad_Down = 6,
		[Token(Token = "0x400148A")]
		k_EButton_A = 7,
		[Token(Token = "0x400148B")]
		k_EButton_ProximitySensor = 31,
		[Token(Token = "0x400148C")]
		k_EButton_Axis0 = 32,
		[Token(Token = "0x400148D")]
		k_EButton_Axis1 = 33,
		[Token(Token = "0x400148E")]
		k_EButton_Axis2 = 34,
		[Token(Token = "0x400148F")]
		k_EButton_Axis3 = 35,
		[Token(Token = "0x4001490")]
		k_EButton_Axis4 = 36,
		[Token(Token = "0x4001491")]
		k_EButton_SteamVR_Touchpad = 32,
		[Token(Token = "0x4001492")]
		k_EButton_SteamVR_Trigger = 33,
		[Token(Token = "0x4001493")]
		k_EButton_Dashboard_Back = 2,
		[Token(Token = "0x4001494")]
		k_EButton_Max = 64
	}
	[Token(Token = "0x20002AF")]
	public enum EVRMouseButton
	{
		[Token(Token = "0x4001496")]
		Left = 1,
		[Token(Token = "0x4001497")]
		Right = 2,
		[Token(Token = "0x4001498")]
		Middle = 4
	}
	[Token(Token = "0x20002B0")]
	public enum EDualAnalogWhich
	{
		[Token(Token = "0x400149A")]
		k_EDualAnalog_Left,
		[Token(Token = "0x400149B")]
		k_EDualAnalog_Right
	}
	[Token(Token = "0x20002B1")]
	public enum EVRInputError
	{
		[Token(Token = "0x400149D")]
		None,
		[Token(Token = "0x400149E")]
		NameNotFound,
		[Token(Token = "0x400149F")]
		WrongType,
		[Token(Token = "0x40014A0")]
		InvalidHandle,
		[Token(Token = "0x40014A1")]
		InvalidParam,
		[Token(Token = "0x40014A2")]
		NoSteam,
		[Token(Token = "0x40014A3")]
		MaxCapacityReached,
		[Token(Token = "0x40014A4")]
		IPCError,
		[Token(Token = "0x40014A5")]
		NoActiveActionSet,
		[Token(Token = "0x40014A6")]
		InvalidDevice
	}
	[Token(Token = "0x20002B2")]
	public enum EHiddenAreaMeshType
	{
		[Token(Token = "0x40014A8")]
		k_eHiddenAreaMesh_Standard,
		[Token(Token = "0x40014A9")]
		k_eHiddenAreaMesh_Inverse,
		[Token(Token = "0x40014AA")]
		k_eHiddenAreaMesh_LineLoop,
		[Token(Token = "0x40014AB")]
		k_eHiddenAreaMesh_Max
	}
	[Token(Token = "0x20002B3")]
	public enum EVRControllerAxisType
	{
		[Token(Token = "0x40014AD")]
		k_eControllerAxis_None,
		[Token(Token = "0x40014AE")]
		k_eControllerAxis_TrackPad,
		[Token(Token = "0x40014AF")]
		k_eControllerAxis_Joystick,
		[Token(Token = "0x40014B0")]
		k_eControllerAxis_Trigger
	}
	[Token(Token = "0x20002B4")]
	public enum EVRControllerEventOutputType
	{
		[Token(Token = "0x40014B2")]
		ControllerEventOutput_OSEvents,
		[Token(Token = "0x40014B3")]
		ControllerEventOutput_VREvents
	}
	[Token(Token = "0x20002B5")]
	public enum ECollisionBoundsStyle
	{
		[Token(Token = "0x40014B5")]
		COLLISION_BOUNDS_STYLE_BEGINNER,
		[Token(Token = "0x40014B6")]
		COLLISION_BOUNDS_STYLE_INTERMEDIATE,
		[Token(Token = "0x40014B7")]
		COLLISION_BOUNDS_STYLE_SQUARES,
		[Token(Token = "0x40014B8")]
		COLLISION_BOUNDS_STYLE_ADVANCED,
		[Token(Token = "0x40014B9")]
		COLLISION_BOUNDS_STYLE_NONE,
		[Token(Token = "0x40014BA")]
		COLLISION_BOUNDS_STYLE_COUNT
	}
	[Token(Token = "0x20002B6")]
	public enum EVROverlayError
	{
		[Token(Token = "0x40014BC")]
		None = 0,
		[Token(Token = "0x40014BD")]
		UnknownOverlay = 10,
		[Token(Token = "0x40014BE")]
		InvalidHandle = 11,
		[Token(Token = "0x40014BF")]
		PermissionDenied = 12,
		[Token(Token = "0x40014C0")]
		OverlayLimitExceeded = 13,
		[Token(Token = "0x40014C1")]
		WrongVisibilityType = 14,
		[Token(Token = "0x40014C2")]
		KeyTooLong = 15,
		[Token(Token = "0x40014C3")]
		NameTooLong = 16,
		[Token(Token = "0x40014C4")]
		KeyInUse = 17,
		[Token(Token = "0x40014C5")]
		WrongTransformType = 18,
		[Token(Token = "0x40014C6")]
		InvalidTrackedDevice = 19,
		[Token(Token = "0x40014C7")]
		InvalidParameter = 20,
		[Token(Token = "0x40014C8")]
		ThumbnailCantBeDestroyed = 21,
		[Token(Token = "0x40014C9")]
		ArrayTooSmall = 22,
		[Token(Token = "0x40014CA")]
		RequestFailed = 23,
		[Token(Token = "0x40014CB")]
		InvalidTexture = 24,
		[Token(Token = "0x40014CC")]
		UnableToLoadFile = 25,
		[Token(Token = "0x40014CD")]
		KeyboardAlreadyInUse = 26,
		[Token(Token = "0x40014CE")]
		NoNeighbor = 27,
		[Token(Token = "0x40014CF")]
		TooManyMaskPrimitives = 29,
		[Token(Token = "0x40014D0")]
		BadMaskPrimitive = 30,
		[Token(Token = "0x40014D1")]
		TextureAlreadyLocked = 31,
		[Token(Token = "0x40014D2")]
		TextureLockCapacityReached = 32,
		[Token(Token = "0x40014D3")]
		TextureNotLocked = 33
	}
	[Token(Token = "0x20002B7")]
	public enum EVRApplicationType
	{
		[Token(Token = "0x40014D5")]
		VRApplication_Other,
		[Token(Token = "0x40014D6")]
		VRApplication_Scene,
		[Token(Token = "0x40014D7")]
		VRApplication_Overlay,
		[Token(Token = "0x40014D8")]
		VRApplication_Background,
		[Token(Token = "0x40014D9")]
		VRApplication_Utility,
		[Token(Token = "0x40014DA")]
		VRApplication_VRMonitor,
		[Token(Token = "0x40014DB")]
		VRApplication_SteamWatchdog,
		[Token(Token = "0x40014DC")]
		VRApplication_Bootstrapper,
		[Token(Token = "0x40014DD")]
		VRApplication_Max
	}
	[Token(Token = "0x20002B8")]
	public enum EVRFirmwareError
	{
		[Token(Token = "0x40014DF")]
		None,
		[Token(Token = "0x40014E0")]
		Success,
		[Token(Token = "0x40014E1")]
		Fail
	}
	[Token(Token = "0x20002B9")]
	public enum EVRNotificationError
	{
		[Token(Token = "0x40014E3")]
		OK = 0,
		[Token(Token = "0x40014E4")]
		InvalidNotificationId = 100,
		[Token(Token = "0x40014E5")]
		NotificationQueueFull = 101,
		[Token(Token = "0x40014E6")]
		InvalidOverlayHandle = 102,
		[Token(Token = "0x40014E7")]
		SystemWithUserValueAlreadyExists = 103
	}
	[Token(Token = "0x20002BA")]
	public enum EVRInitError
	{
		[Token(Token = "0x40014E9")]
		None = 0,
		[Token(Token = "0x40014EA")]
		Unknown = 1,
		[Token(Token = "0x40014EB")]
		Init_InstallationNotFound = 100,
		[Token(Token = "0x40014EC")]
		Init_InstallationCorrupt = 101,
		[Token(Token = "0x40014ED")]
		Init_VRClientDLLNotFound = 102,
		[Token(Token = "0x40014EE")]
		Init_FileNotFound = 103,
		[Token(Token = "0x40014EF")]
		Init_FactoryNotFound = 104,
		[Token(Token = "0x40014F0")]
		Init_InterfaceNotFound = 105,
		[Token(Token = "0x40014F1")]
		Init_InvalidInterface = 106,
		[Token(Token = "0x40014F2")]
		Init_UserConfigDirectoryInvalid = 107,
		[Token(Token = "0x40014F3")]
		Init_HmdNotFound = 108,
		[Token(Token = "0x40014F4")]
		Init_NotInitialized = 109,
		[Token(Token = "0x40014F5")]
		Init_PathRegistryNotFound = 110,
		[Token(Token = "0x40014F6")]
		Init_NoConfigPath = 111,
		[Token(Token = "0x40014F7")]
		Init_NoLogPath = 112,
		[Token(Token = "0x40014F8")]
		Init_PathRegistryNotWritable = 113,
		[Token(Token = "0x40014F9")]
		Init_AppInfoInitFailed = 114,
		[Token(Token = "0x40014FA")]
		Init_Retry = 115,
		[Token(Token = "0x40014FB")]
		Init_InitCanceledByUser = 116,
		[Token(Token = "0x40014FC")]
		Init_AnotherAppLaunching = 117,
		[Token(Token = "0x40014FD")]
		Init_SettingsInitFailed = 118,
		[Token(Token = "0x40014FE")]
		Init_ShuttingDown = 119,
		[Token(Token = "0x40014FF")]
		Init_TooManyObjects = 120,
		[Token(Token = "0x4001500")]
		Init_NoServerForBackgroundApp = 121,
		[Token(Token = "0x4001501")]
		Init_NotSupportedWithCompositor = 122,
		[Token(Token = "0x4001502")]
		Init_NotAvailableToUtilityApps = 123,
		[Token(Token = "0x4001503")]
		Init_Internal = 124,
		[Token(Token = "0x4001504")]
		Init_HmdDriverIdIsNone = 125,
		[Token(Token = "0x4001505")]
		Init_HmdNotFoundPresenceFailed = 126,
		[Token(Token = "0x4001506")]
		Init_VRMonitorNotFound = 127,
		[Token(Token = "0x4001507")]
		Init_VRMonitorStartupFailed = 128,
		[Token(Token = "0x4001508")]
		Init_LowPowerWatchdogNotSupported = 129,
		[Token(Token = "0x4001509")]
		Init_InvalidApplicationType = 130,
		[Token(Token = "0x400150A")]
		Init_NotAvailableToWatchdogApps = 131,
		[Token(Token = "0x400150B")]
		Init_WatchdogDisabledInSettings = 132,
		[Token(Token = "0x400150C")]
		Init_VRDashboardNotFound = 133,
		[Token(Token = "0x400150D")]
		Init_VRDashboardStartupFailed = 134,
		[Token(Token = "0x400150E")]
		Init_VRHomeNotFound = 135,
		[Token(Token = "0x400150F")]
		Init_VRHomeStartupFailed = 136,
		[Token(Token = "0x4001510")]
		Init_RebootingBusy = 137,
		[Token(Token = "0x4001511")]
		Init_FirmwareUpdateBusy = 138,
		[Token(Token = "0x4001512")]
		Init_FirmwareRecoveryBusy = 139,
		[Token(Token = "0x4001513")]
		Init_USBServiceBusy = 140,
		[Token(Token = "0x4001514")]
		Driver_Failed = 200,
		[Token(Token = "0x4001515")]
		Driver_Unknown = 201,
		[Token(Token = "0x4001516")]
		Driver_HmdUnknown = 202,
		[Token(Token = "0x4001517")]
		Driver_NotLoaded = 203,
		[Token(Token = "0x4001518")]
		Driver_RuntimeOutOfDate = 204,
		[Token(Token = "0x4001519")]
		Driver_HmdInUse = 205,
		[Token(Token = "0x400151A")]
		Driver_NotCalibrated = 206,
		[Token(Token = "0x400151B")]
		Driver_CalibrationInvalid = 207,
		[Token(Token = "0x400151C")]
		Driver_HmdDisplayNotFound = 208,
		[Token(Token = "0x400151D")]
		Driver_TrackedDeviceInterfaceUnknown = 209,
		[Token(Token = "0x400151E")]
		Driver_HmdDriverIdOutOfBounds = 211,
		[Token(Token = "0x400151F")]
		Driver_HmdDisplayMirrored = 212,
		[Token(Token = "0x4001520")]
		IPC_ServerInitFailed = 300,
		[Token(Token = "0x4001521")]
		IPC_ConnectFailed = 301,
		[Token(Token = "0x4001522")]
		IPC_SharedStateInitFailed = 302,
		[Token(Token = "0x4001523")]
		IPC_CompositorInitFailed = 303,
		[Token(Token = "0x4001524")]
		IPC_MutexInitFailed = 304,
		[Token(Token = "0x4001525")]
		IPC_Failed = 305,
		[Token(Token = "0x4001526")]
		IPC_CompositorConnectFailed = 306,
		[Token(Token = "0x4001527")]
		IPC_CompositorInvalidConnectResponse = 307,
		[Token(Token = "0x4001528")]
		IPC_ConnectFailedAfterMultipleAttempts = 308,
		[Token(Token = "0x4001529")]
		Compositor_Failed = 400,
		[Token(Token = "0x400152A")]
		Compositor_D3D11HardwareRequired = 401,
		[Token(Token = "0x400152B")]
		Compositor_FirmwareRequiresUpdate = 402,
		[Token(Token = "0x400152C")]
		Compositor_OverlayInitFailed = 403,
		[Token(Token = "0x400152D")]
		Compositor_ScreenshotsInitFailed = 404,
		[Token(Token = "0x400152E")]
		Compositor_UnableToCreateDevice = 405,
		[Token(Token = "0x400152F")]
		VendorSpecific_UnableToConnectToOculusRuntime = 1000,
		[Token(Token = "0x4001530")]
		VendorSpecific_WindowsNotInDevMode = 1001,
		[Token(Token = "0x4001531")]
		VendorSpecific_HmdFound_CantOpenDevice = 1101,
		[Token(Token = "0x4001532")]
		VendorSpecific_HmdFound_UnableToRequestConfigStart = 1102,
		[Token(Token = "0x4001533")]
		VendorSpecific_HmdFound_NoStoredConfig = 1103,
		[Token(Token = "0x4001534")]
		VendorSpecific_HmdFound_ConfigTooBig = 1104,
		[Token(Token = "0x4001535")]
		VendorSpecific_HmdFound_ConfigTooSmall = 1105,
		[Token(Token = "0x4001536")]
		VendorSpecific_HmdFound_UnableToInitZLib = 1106,
		[Token(Token = "0x4001537")]
		VendorSpecific_HmdFound_CantReadFirmwareVersion = 1107,
		[Token(Token = "0x4001538")]
		VendorSpecific_HmdFound_UnableToSendUserDataStart = 1108,
		[Token(Token = "0x4001539")]
		VendorSpecific_HmdFound_UnableToGetUserDataStart = 1109,
		[Token(Token = "0x400153A")]
		VendorSpecific_HmdFound_UnableToGetUserDataNext = 1110,
		[Token(Token = "0x400153B")]
		VendorSpecific_HmdFound_UserDataAddressRange = 1111,
		[Token(Token = "0x400153C")]
		VendorSpecific_HmdFound_UserDataError = 1112,
		[Token(Token = "0x400153D")]
		VendorSpecific_HmdFound_ConfigFailedSanityCheck = 1113,
		[Token(Token = "0x400153E")]
		Steam_SteamInstallationNotFound = 2000
	}
	[Token(Token = "0x20002BB")]
	public enum EVRScreenshotType
	{
		[Token(Token = "0x4001540")]
		None,
		[Token(Token = "0x4001541")]
		Mono,
		[Token(Token = "0x4001542")]
		Stereo,
		[Token(Token = "0x4001543")]
		Cubemap,
		[Token(Token = "0x4001544")]
		MonoPanorama,
		[Token(Token = "0x4001545")]
		StereoPanorama
	}
	[Token(Token = "0x20002BC")]
	public enum EVRScreenshotPropertyFilenames
	{
		[Token(Token = "0x4001547")]
		Preview,
		[Token(Token = "0x4001548")]
		VR
	}
	[Token(Token = "0x20002BD")]
	public enum EVRTrackedCameraError
	{
		[Token(Token = "0x400154A")]
		None = 0,
		[Token(Token = "0x400154B")]
		OperationFailed = 100,
		[Token(Token = "0x400154C")]
		InvalidHandle = 101,
		[Token(Token = "0x400154D")]
		InvalidFrameHeaderVersion = 102,
		[Token(Token = "0x400154E")]
		OutOfHandles = 103,
		[Token(Token = "0x400154F")]
		IPCFailure = 104,
		[Token(Token = "0x4001550")]
		NotSupportedForThisDevice = 105,
		[Token(Token = "0x4001551")]
		SharedMemoryFailure = 106,
		[Token(Token = "0x4001552")]
		FrameBufferingFailure = 107,
		[Token(Token = "0x4001553")]
		StreamSetupFailure = 108,
		[Token(Token = "0x4001554")]
		InvalidGLTextureId = 109,
		[Token(Token = "0x4001555")]
		InvalidSharedTextureHandle = 110,
		[Token(Token = "0x4001556")]
		FailedToGetGLTextureId = 111,
		[Token(Token = "0x4001557")]
		SharedTextureFailure = 112,
		[Token(Token = "0x4001558")]
		NoFrameAvailable = 113,
		[Token(Token = "0x4001559")]
		InvalidArgument = 114,
		[Token(Token = "0x400155A")]
		InvalidFrameBufferSize = 115
	}
	[Token(Token = "0x20002BE")]
	public enum EVRTrackedCameraFrameType
	{
		[Token(Token = "0x400155C")]
		Distorted,
		[Token(Token = "0x400155D")]
		Undistorted,
		[Token(Token = "0x400155E")]
		MaximumUndistorted,
		[Token(Token = "0x400155F")]
		MAX_CAMERA_FRAME_TYPES
	}
	[Token(Token = "0x20002BF")]
	public enum EVRApplicationError
	{
		[Token(Token = "0x4001561")]
		None = 0,
		[Token(Token = "0x4001562")]
		AppKeyAlreadyExists = 100,
		[Token(Token = "0x4001563")]
		NoManifest = 101,
		[Token(Token = "0x4001564")]
		NoApplication = 102,
		[Token(Token = "0x4001565")]
		InvalidIndex = 103,
		[Token(Token = "0x4001566")]
		UnknownApplication = 104,
		[Token(Token = "0x4001567")]
		IPCFailed = 105,
		[Token(Token = "0x4001568")]
		ApplicationAlreadyRunning = 106,
		[Token(Token = "0x4001569")]
		InvalidManifest = 107,
		[Token(Token = "0x400156A")]
		InvalidApplication = 108,
		[Token(Token = "0x400156B")]
		LaunchFailed = 109,
		[Token(Token = "0x400156C")]
		ApplicationAlreadyStarting = 110,
		[Token(Token = "0x400156D")]
		LaunchInProgress = 111,
		[Token(Token = "0x400156E")]
		OldApplicationQuitting = 112,
		[Token(Token = "0x400156F")]
		TransitionAborted = 113,
		[Token(Token = "0x4001570")]
		IsTemplate = 114,
		[Token(Token = "0x4001571")]
		SteamVRIsExiting = 115,
		[Token(Token = "0x4001572")]
		BufferTooSmall = 200,
		[Token(Token = "0x4001573")]
		PropertyNotSet = 201,
		[Token(Token = "0x4001574")]
		UnknownProperty = 202,
		[Token(Token = "0x4001575")]
		InvalidParameter = 203
	}
	[Token(Token = "0x20002C0")]
	public enum EVRApplicationProperty
	{
		[Token(Token = "0x4001577")]
		Name_String = 0,
		[Token(Token = "0x4001578")]
		LaunchType_String = 11,
		[Token(Token = "0x4001579")]
		WorkingDirectory_String = 12,
		[Token(Token = "0x400157A")]
		BinaryPath_String = 13,
		[Token(Token = "0x400157B")]
		Arguments_String = 14,
		[Token(Token = "0x400157C")]
		URL_String = 15,
		[Token(Token = "0x400157D")]
		Description_String = 50,
		[Token(Token = "0x400157E")]
		NewsURL_String = 51,
		[Token(Token = "0x400157F")]
		ImagePath_String = 52,
		[Token(Token = "0x4001580")]
		Source_String = 53,
		[Token(Token = "0x4001581")]
		ActionManifestURL_String = 54,
		[Token(Token = "0x4001582")]
		IsDashboardOverlay_Bool = 60,
		[Token(Token = "0x4001583")]
		IsTemplate_Bool = 61,
		[Token(Token = "0x4001584")]
		IsInstanced_Bool = 62,
		[Token(Token = "0x4001585")]
		IsInternal_Bool = 63,
		[Token(Token = "0x4001586")]
		WantsCompositorPauseInStandby_Bool = 64,
		[Token(Token = "0x4001587")]
		LastLaunchTime_Uint64 = 70
	}
	[Token(Token = "0x20002C1")]
	public enum EVRApplicationTransitionState
	{
		[Token(Token = "0x4001589")]
		VRApplicationTransition_None = 0,
		[Token(Token = "0x400158A")]
		VRApplicationTransition_OldAppQuitSent = 10,
		[Token(Token = "0x400158B")]
		VRApplicationTransition_WaitingForExternalLaunch = 11,
		[Token(Token = "0x400158C")]
		VRApplicationTransition_NewAppLaunched = 20
	}
	[Token(Token = "0x20002C2")]
	public enum ChaperoneCalibrationState
	{
		[Token(Token = "0x400158E")]
		OK = 1,
		[Token(Token = "0x400158F")]
		Warning = 100,
		[Token(Token = "0x4001590")]
		Warning_BaseStationMayHaveMoved = 101,
		[Token(Token = "0x4001591")]
		Warning_BaseStationRemoved = 102,
		[Token(Token = "0x4001592")]
		Warning_SeatedBoundsInvalid = 103,
		[Token(Token = "0x4001593")]
		Error = 200,
		[Token(Token = "0x4001594")]
		Error_BaseStationUninitialized = 201,
		[Token(Token = "0x4001595")]
		Error_BaseStationConflict = 202,
		[Token(Token = "0x4001596")]
		Error_PlayAreaInvalid = 203,
		[Token(Token = "0x4001597")]
		Error_CollisionBoundsInvalid = 204
	}
	[Token(Token = "0x20002C3")]
	public enum EChaperoneConfigFile
	{
		[Token(Token = "0x4001599")]
		Live = 1,
		[Token(Token = "0x400159A")]
		Temp
	}
	[Token(Token = "0x20002C4")]
	public enum EChaperoneImportFlags
	{
		[Token(Token = "0x400159C")]
		EChaperoneImport_BoundsOnly = 1
	}
	[Token(Token = "0x20002C5")]
	public enum EVRCompositorError
	{
		[Token(Token = "0x400159E")]
		None = 0,
		[Token(Token = "0x400159F")]
		RequestFailed = 1,
		[Token(Token = "0x40015A0")]
		IncompatibleVersion = 100,
		[Token(Token = "0x40015A1")]
		DoNotHaveFocus = 101,
		[Token(Token = "0x40015A2")]
		InvalidTexture = 102,
		[Token(Token = "0x40015A3")]
		IsNotSceneApplication = 103,
		[Token(Token = "0x40015A4")]
		TextureIsOnWrongDevice = 104,
		[Token(Token = "0x40015A5")]
		TextureUsesUnsupportedFormat = 105,
		[Token(Token = "0x40015A6")]
		SharedTexturesNotSupported = 106,
		[Token(Token = "0x40015A7")]
		IndexOutOfRange = 107,
		[Token(Token = "0x40015A8")]
		AlreadySubmitted = 108,
		[Token(Token = "0x40015A9")]
		InvalidBounds = 109
	}
	[Token(Token = "0x20002C6")]
	public enum EVRCompositorTimingMode
	{
		[Token(Token = "0x40015AB")]
		Implicit,
		[Token(Token = "0x40015AC")]
		Explicit_RuntimePerformsPostPresentHandoff,
		[Token(Token = "0x40015AD")]
		Explicit_ApplicationPerformsPostPresentHandoff
	}
	[Token(Token = "0x20002C7")]
	public enum VROverlayInputMethod
	{
		[Token(Token = "0x40015AF")]
		None,
		[Token(Token = "0x40015B0")]
		Mouse,
		[Token(Token = "0x40015B1")]
		DualAnalog
	}
	[Token(Token = "0x20002C8")]
	public enum VROverlayTransformType
	{
		[Token(Token = "0x40015B3")]
		VROverlayTransform_Absolute,
		[Token(Token = "0x40015B4")]
		VROverlayTransform_TrackedDeviceRelative,
		[Token(Token = "0x40015B5")]
		VROverlayTransform_SystemOverlay,
		[Token(Token = "0x40015B6")]
		VROverlayTransform_TrackedComponent
	}
	[Token(Token = "0x20002C9")]
	public enum VROverlayFlags
	{
		[Token(Token = "0x40015B8")]
		None,
		[Token(Token = "0x40015B9")]
		Curved,
		[Token(Token = "0x40015BA")]
		RGSS4X,
		[Token(Token = "0x40015BB")]
		NoDashboardTab,
		[Token(Token = "0x40015BC")]
		AcceptsGamepadEvents,
		[Token(Token = "0x40015BD")]
		ShowGamepadFocus,
		[Token(Token = "0x40015BE")]
		SendVRScrollEvents,
		[Token(Token = "0x40015BF")]
		SendVRTouchpadEvents,
		[Token(Token = "0x40015C0")]
		ShowTouchPadScrollWheel,
		[Token(Token = "0x40015C1")]
		TransferOwnershipToInternalProcess,
		[Token(Token = "0x40015C2")]
		SideBySide_Parallel,
		[Token(Token = "0x40015C3")]
		SideBySide_Crossed,
		[Token(Token = "0x40015C4")]
		Panorama,
		[Token(Token = "0x40015C5")]
		StereoPanorama,
		[Token(Token = "0x40015C6")]
		SortWithNonSceneOverlays,
		[Token(Token = "0x40015C7")]
		VisibleInDashboard
	}
	[Token(Token = "0x20002CA")]
	public enum VRMessageOverlayResponse
	{
		[Token(Token = "0x40015C9")]
		ButtonPress_0,
		[Token(Token = "0x40015CA")]
		ButtonPress_1,
		[Token(Token = "0x40015CB")]
		ButtonPress_2,
		[Token(Token = "0x40015CC")]
		ButtonPress_3,
		[Token(Token = "0x40015CD")]
		CouldntFindSystemOverlay,
		[Token(Token = "0x40015CE")]
		CouldntFindOrCreateClientOverlay,
		[Token(Token = "0x40015CF")]
		ApplicationQuit
	}
	[Token(Token = "0x20002CB")]
	public enum EGamepadTextInputMode
	{
		[Token(Token = "0x40015D1")]
		k_EGamepadTextInputModeNormal,
		[Token(Token = "0x40015D2")]
		k_EGamepadTextInputModePassword,
		[Token(Token = "0x40015D3")]
		k_EGamepadTextInputModeSubmit
	}
	[Token(Token = "0x20002CC")]
	public enum EGamepadTextInputLineMode
	{
		[Token(Token = "0x40015D5")]
		k_EGamepadTextInputLineModeSingleLine,
		[Token(Token = "0x40015D6")]
		k_EGamepadTextInputLineModeMultipleLines
	}
	[Token(Token = "0x20002CD")]
	public enum EOverlayDirection
	{
		[Token(Token = "0x40015D8")]
		Up,
		[Token(Token = "0x40015D9")]
		Down,
		[Token(Token = "0x40015DA")]
		Left,
		[Token(Token = "0x40015DB")]
		Right,
		[Token(Token = "0x40015DC")]
		Count
	}
	[Token(Token = "0x20002CE")]
	public enum EVROverlayIntersectionMaskPrimitiveType
	{
		[Token(Token = "0x40015DE")]
		OverlayIntersectionPrimitiveType_Rectangle,
		[Token(Token = "0x40015DF")]
		OverlayIntersectionPrimitiveType_Circle
	}
	[Token(Token = "0x20002CF")]
	public enum EVRRenderModelError
	{
		[Token(Token = "0x40015E1")]
		None = 0,
		[Token(Token = "0x40015E2")]
		Loading = 100,
		[Token(Token = "0x40015E3")]
		NotSupported = 200,
		[Token(Token = "0x40015E4")]
		InvalidArg = 300,
		[Token(Token = "0x40015E5")]
		InvalidModel = 301,
		[Token(Token = "0x40015E6")]
		NoShapes = 302,
		[Token(Token = "0x40015E7")]
		MultipleShapes = 303,
		[Token(Token = "0x40015E8")]
		TooManyVertices = 304,
		[Token(Token = "0x40015E9")]
		MultipleTextures = 305,
		[Token(Token = "0x40015EA")]
		BufferTooSmall = 306,
		[Token(Token = "0x40015EB")]
		NotEnoughNormals = 307,
		[Token(Token = "0x40015EC")]
		NotEnoughTexCoords = 308,
		[Token(Token = "0x40015ED")]
		InvalidTexture = 400
	}
	[Token(Token = "0x20002D0")]
	public enum EVRComponentProperty
	{
		[Token(Token = "0x40015EF")]
		IsStatic = 1,
		[Token(Token = "0x40015F0")]
		IsVisible = 2,
		[Token(Token = "0x40015F1")]
		IsTouched = 4,
		[Token(Token = "0x40015F2")]
		IsPressed = 8,
		[Token(Token = "0x40015F3")]
		IsScrolled = 0x10
	}
	[Token(Token = "0x20002D1")]
	public enum EVRNotificationType
	{
		[Token(Token = "0x40015F5")]
		Transient,
		[Token(Token = "0x40015F6")]
		Persistent,
		[Token(Token = "0x40015F7")]
		Transient_SystemWithUserValue
	}
	[Token(Token = "0x20002D2")]
	public enum EVRNotificationStyle
	{
		[Token(Token = "0x40015F9")]
		None = 0,
		[Token(Token = "0x40015FA")]
		Application = 100,
		[Token(Token = "0x40015FB")]
		Contact_Disabled = 200,
		[Token(Token = "0x40015FC")]
		Contact_Enabled = 201,
		[Token(Token = "0x40015FD")]
		Contact_Active = 202
	}
	[Token(Token = "0x20002D3")]
	public enum EVRSettingsError
	{
		[Token(Token = "0x40015FF")]
		None,
		[Token(Token = "0x4001600")]
		IPCFailed,
		[Token(Token = "0x4001601")]
		WriteFailed,
		[Token(Token = "0x4001602")]
		ReadFailed,
		[Token(Token = "0x4001603")]
		JsonParseFailed,
		[Token(Token = "0x4001604")]
		UnsetSettingHasNoDefault
	}
	[Token(Token = "0x20002D4")]
	public enum EVRScreenshotError
	{
		[Token(Token = "0x4001606")]
		None = 0,
		[Token(Token = "0x4001607")]
		RequestFailed = 1,
		[Token(Token = "0x4001608")]
		IncompatibleVersion = 100,
		[Token(Token = "0x4001609")]
		NotFound = 101,
		[Token(Token = "0x400160A")]
		BufferTooSmall = 102,
		[Token(Token = "0x400160B")]
		ScreenshotAlreadyInProgress = 108
	}
	[StructLayout(2)]
	[Token(Token = "0x20002D5")]
	public struct VREvent_Data_t
	{
		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Reserved_t reserved;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Controller_t controller;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Mouse_t mouse;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Scroll_t scroll;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Process_t process;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Notification_t notification;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Overlay_t overlay;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Status_t status;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Ipd_t ipd;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Chaperone_t chaperone;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_PerformanceTest_t performanceTest;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_TouchPadMove_t touchPadMove;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_SeatedZeroPoseReset_t seatedZeroPoseReset;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Screenshot_t screenshot;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_ScreenshotProgress_t screenshotProgress;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_ApplicationLaunch_t applicationLaunch;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_EditingCameraSurface_t cameraSurface;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_MessageOverlay_t messageOverlay;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Property_t property;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_DualAnalog_t dualAnalog;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_HapticVibration_t hapticVibration;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Keyboard_t keyboard;
	}
	[StructLayout(2)]
	[Token(Token = "0x20002D6")]
	public struct VROverlayIntersectionMaskPrimitive_Data_t
	{
		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntersectionMaskRectangle_t m_Rectangle;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntersectionMaskCircle_t m_Circle;
	}
	[Token(Token = "0x20002D7")]
	public struct HmdMatrix34_t
	{
		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m0;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m1;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m2;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m3;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m4;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m5;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m6;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m7;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m8;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m9;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m10;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m11;
	}
	[Token(Token = "0x20002D8")]
	public struct HmdMatrix44_t
	{
		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m0;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m1;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m2;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m3;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m4;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m5;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m6;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m7;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m8;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m9;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m10;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m11;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m12;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m13;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m14;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m15;
	}
	[Token(Token = "0x20002D9")]
	public struct HmdVector3_t
	{
		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float v2;
	}
	[Token(Token = "0x20002DA")]
	public struct HmdVector4_t
	{
		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float v2;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float v3;
	}
	[Token(Token = "0x20002DB")]
	public struct HmdVector3d_t
	{
		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double v0;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double v1;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double v2;
	}
	[Token(Token = "0x20002DC")]
	public struct HmdVector2_t
	{
		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;
	}
	[Token(Token = "0x20002DD")]
	public struct HmdQuaternion_t
	{
		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double w;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double x;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double y;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double z;
	}
	[Token(Token = "0x20002DE")]
	public struct HmdColor_t
	{
		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float r;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float g;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float b;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float a;
	}
	[Token(Token = "0x20002DF")]
	public struct HmdQuad_t
	{
		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vCorners0;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vCorners1;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HmdVector3_t vCorners2;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public HmdVector3_t vCorners3;
	}
	[Token(Token = "0x20002E0")]
	public struct HmdRect2_t
	{
		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector2_t vTopLeft;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HmdVector2_t vBottomRight;
	}
	[Token(Token = "0x20002E1")]
	public struct DistortionCoordinates_t
	{
		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float rfRed0;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float rfRed1;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float rfGreen0;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rfGreen1;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float rfBlue0;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rfBlue1;
	}
	[Token(Token = "0x20002E2")]
	public struct Texture_t
	{
		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr handle;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ETextureType eType;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public EColorSpace eColorSpace;
	}
	[Token(Token = "0x20002E3")]
	public struct TrackedDevicePose_t
	{
		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mDeviceToAbsoluteTracking;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdVector3_t vVelocity;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public HmdVector3_t vAngularVelocity;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ETrackingResult eTrackingResult;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool bPoseIsValid;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool bDeviceIsConnected;
	}
	[Token(Token = "0x20002E4")]
	public struct VRTextureBounds_t
	{
		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float uMin;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float vMin;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float uMax;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float vMax;
	}
	[Token(Token = "0x20002E5")]
	public struct VRTextureWithPose_t
	{
		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mDeviceToAbsoluteTracking;
	}
	[Token(Token = "0x20002E6")]
	public struct VRTextureDepthInfo_t
	{
		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr handle;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public HmdMatrix44_t mProjection;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public HmdVector2_t vRange;
	}
	[Token(Token = "0x20002E7")]
	public struct VRTextureWithDepth_t
	{
		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTextureDepthInfo_t depth;
	}
	[Token(Token = "0x20002E8")]
	public struct VRTextureWithPoseAndDepth_t
	{
		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTextureDepthInfo_t depth;
	}
	[Token(Token = "0x20002E9")]
	public struct VRVulkanTextureData_t
	{
		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong m_nImage;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pDevice;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public IntPtr m_pPhysicalDevice;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr m_pInstance;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr m_pQueue;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint m_nQueueFamilyIndex;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public uint m_nWidth;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public uint m_nHeight;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public uint m_nFormat;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_nSampleCount;
	}
	[Token(Token = "0x20002EA")]
	public struct D3D12TextureData_t
	{
		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pResource;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public IntPtr m_pCommandQueue;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNodeMask;
	}
	[Token(Token = "0x20002EB")]
	public struct VREvent_Controller_t
	{
		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint button;
	}
	[Token(Token = "0x20002EC")]
	public struct VREvent_Mouse_t
	{
		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint button;
	}
	[Token(Token = "0x20002ED")]
	public struct VREvent_Scroll_t
	{
		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float xdelta;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float ydelta;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint repeatCount;
	}
	[Token(Token = "0x20002EE")]
	public struct VREvent_TouchPadMove_t
	{
		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bFingerDown;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float flSecondsFingerDown;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float fValueXFirst;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float fValueYFirst;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float fValueXRaw;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fValueYRaw;
	}
	[Token(Token = "0x20002EF")]
	public struct VREvent_Notification_t
	{
		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong ulUserValue;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint notificationId;
	}
	[Token(Token = "0x20002F0")]
	public struct VREvent_Process_t
	{
		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint pid;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint oldPid;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool bForced;
	}
	[Token(Token = "0x20002F1")]
	public struct VREvent_Overlay_t
	{
		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong overlayHandle;
	}
	[Token(Token = "0x20002F2")]
	public struct VREvent_Status_t
	{
		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint statusState;
	}
	[Token(Token = "0x20002F3")]
	public struct VREvent_Keyboard_t
	{
		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte cNewInput0;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public byte cNewInput1;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public byte cNewInput2;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public byte cNewInput3;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public byte cNewInput4;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public byte cNewInput5;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public byte cNewInput6;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public byte cNewInput7;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong uUserValue;
	}
	[Token(Token = "0x20002F4")]
	public struct VREvent_Ipd_t
	{
		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float ipdMeters;
	}
	[Token(Token = "0x20002F5")]
	public struct VREvent_Chaperone_t
	{
		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong m_nPreviousUniverse;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong m_nCurrentUniverse;
	}
	[Token(Token = "0x20002F6")]
	public struct VREvent_Reserved_t
	{
		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong reserved0;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong reserved1;
	}
	[Token(Token = "0x20002F7")]
	public struct VREvent_PerformanceTest_t
	{
		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nFidelityLevel;
	}
	[Token(Token = "0x20002F8")]
	public struct VREvent_SeatedZeroPoseReset_t
	{
		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bResetBySystemMenu;
	}
	[Token(Token = "0x20002F9")]
	public struct VREvent_Screenshot_t
	{
		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint handle;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint type;
	}
	[Token(Token = "0x20002FA")]
	public struct VREvent_ScreenshotProgress_t
	{
		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float progress;
	}
	[Token(Token = "0x20002FB")]
	public struct VREvent_ApplicationLaunch_t
	{
		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint pid;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint unArgsHandle;
	}
	[Token(Token = "0x20002FC")]
	public struct VREvent_EditingCameraSurface_t
	{
		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong overlayHandle;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint nVisualMode;
	}
	[Token(Token = "0x20002FD")]
	public struct VREvent_MessageOverlay_t
	{
		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unVRMessageOverlayResponse;
	}
	[Token(Token = "0x20002FE")]
	public struct VREvent_Property_t
	{
		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong container;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ETrackedDeviceProperty prop;
	}
	[Token(Token = "0x20002FF")]
	public struct VREvent_DualAnalog_t
	{
		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float transformedX;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float transformedY;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EDualAnalogWhich which;
	}
	[Token(Token = "0x2000300")]
	public struct VREvent_HapticVibration_t
	{
		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong containerHandle;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong componentHandle;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float fDurationSeconds;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fFrequency;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fAmplitude;
	}
	[Token(Token = "0x2000301")]
	public struct VREvent_t
	{
		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint eventType;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint trackedDeviceIndex;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float eventAgeSeconds;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VREvent_Data_t data;
	}
	[Token(Token = "0x2000302")]
	public struct VREvent_t_Packed
	{
		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint eventType;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint trackedDeviceIndex;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float eventAgeSeconds;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public VREvent_Data_t data;

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0x457D84", Offset = "0x457D84", VA = "0x457D84")]
		public VREvent_t_Packed(VREvent_t unpacked)
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0x457DDC", Offset = "0x457DDC", VA = "0x457DDC")]
		public void Unpack(ref VREvent_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000303")]
	public struct HiddenAreaMesh_t
	{
		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr pVertexData;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint unTriangleCount;
	}
	[Token(Token = "0x2000304")]
	public struct VRControllerAxis_t
	{
		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;
	}
	[Token(Token = "0x2000305")]
	public struct VRControllerState_t
	{
		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unPacketNum;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong ulButtonPressed;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong ulButtonTouched;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRControllerAxis_t rAxis0;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRControllerAxis_t rAxis1;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VRControllerAxis_t rAxis2;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VRControllerAxis_t rAxis3;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public VRControllerAxis_t rAxis4;
	}
	[Token(Token = "0x2000306")]
	public struct VRControllerState_t_Packed
	{
		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unPacketNum;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ulong ulButtonPressed;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public ulong ulButtonTouched;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public VRControllerAxis_t rAxis0;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public VRControllerAxis_t rAxis1;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public VRControllerAxis_t rAxis2;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public VRControllerAxis_t rAxis3;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public VRControllerAxis_t rAxis4;

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0x457D00", Offset = "0x457D00", VA = "0x457D00")]
		public VRControllerState_t_Packed(VRControllerState_t unpacked)
		{
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0x457D7C", Offset = "0x457D7C", VA = "0x457D7C")]
		public void Unpack(ref VRControllerState_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000307")]
	public struct Compositor_OverlaySettings
	{
		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint size;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool curved;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public bool antialias;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float scale;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float distance;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float alpha;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float uOffset;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float vOffset;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float uScale;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float vScale;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float gridDivs;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float gridWidth;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float gridScale;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdMatrix44_t transform;
	}
	[Token(Token = "0x2000308")]
	public struct CameraVideoStreamFrameHeader_t
	{
		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EVRTrackedCameraFrameType eFrameType;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint nWidth;

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint nHeight;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint nBytesPerPixel;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint nFrameSequence;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TrackedDevicePose_t standingTrackedDevicePose;
	}
	[Token(Token = "0x2000309")]
	public struct DriverDirectMode_FrameTiming
	{
		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nSize;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumMisPresented;

		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nReprojectionFlags;
	}
	[Token(Token = "0x200030A")]
	public struct AppOverrideKeys_t
	{
		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr pchKey;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public IntPtr pchValue;
	}
	[Token(Token = "0x200030B")]
	public struct Compositor_FrameTiming
	{
		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nSize;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nFrameIndex;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumMisPresented;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint m_nReprojectionFlags;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double m_flSystemTimeInSeconds;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_flPreSubmitGpuMs;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_flPostSubmitGpuMs;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_flTotalRenderGpuMs;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_flCompositorRenderGpuMs;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_flCompositorRenderCpuMs;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_flCompositorIdleCpuMs;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_flClientFrameIntervalMs;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_flPresentCallCpuMs;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_flWaitForPresentCpuMs;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float m_flSubmitFrameMs;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float m_flWaitGetPosesCalledMs;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float m_flNewPosesReadyMs;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float m_flNewFrameReadyMs;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float m_flCompositorUpdateStartMs;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float m_flCompositorUpdateEndMs;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float m_flCompositorRenderStartMs;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TrackedDevicePose_t m_HmdPose;
	}
	[Token(Token = "0x200030C")]
	public struct Compositor_CumulativeStats
	{
		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nPid;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumReprojectedFrames;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNumFramePresentsOnStartup;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint m_nNumDroppedFramesOnStartup;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint m_nNumReprojectedFramesOnStartup;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public uint m_nNumLoading;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public uint m_nNumFramePresentsLoading;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public uint m_nNumDroppedFramesLoading;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_nNumReprojectedFramesLoading;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public uint m_nNumTimedOut;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public uint m_nNumFramePresentsTimedOut;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public uint m_nNumDroppedFramesTimedOut;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public uint m_nNumReprojectedFramesTimedOut;
	}
	[Token(Token = "0x200030D")]
	public struct VROverlayIntersectionParams_t
	{
		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vSource;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vDirection;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ETrackingUniverseOrigin eOrigin;
	}
	[Token(Token = "0x200030E")]
	public struct VROverlayIntersectionResults_t
	{
		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vPoint;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vNormal;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HmdVector2_t vUVs;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fDistance;
	}
	[Token(Token = "0x200030F")]
	public struct IntersectionMaskRectangle_t
	{
		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flTopLeftX;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m_flTopLeftY;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_flWidth;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m_flHeight;
	}
	[Token(Token = "0x2000310")]
	public struct IntersectionMaskCircle_t
	{
		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flCenterX;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m_flCenterY;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_flRadius;
	}
	[Token(Token = "0x2000311")]
	public struct VROverlayIntersectionMaskPrimitive_t
	{
		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EVROverlayIntersectionMaskPrimitiveType m_nPrimitiveType;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public VROverlayIntersectionMaskPrimitive_Data_t m_Primitive;
	}
	[Token(Token = "0x2000312")]
	public struct RenderModel_ComponentState_t
	{
		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mTrackingToComponentRenderModel;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdMatrix34_t mTrackingToComponentLocal;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public uint uProperties;
	}
	[Token(Token = "0x2000313")]
	public struct RenderModel_Vertex_t
	{
		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vPosition;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vNormal;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rfTextureCoord0;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float rfTextureCoord1;
	}
	[Token(Token = "0x2000314")]
	public struct RenderModel_TextureMap_t
	{
		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public char unWidth;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public char unHeight;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public IntPtr rubTextureMapData;
	}
	[Token(Token = "0x2000315")]
	public struct RenderModel_TextureMap_t_Packed
	{
		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public char unWidth;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public char unHeight;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public IntPtr rubTextureMapData;

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0x457C7C", Offset = "0x457C7C", VA = "0x457C7C")]
		public RenderModel_TextureMap_t_Packed(RenderModel_TextureMap_t unpacked)
		{
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0x457C90", Offset = "0x457C90", VA = "0x457C90")]
		public void Unpack(ref RenderModel_TextureMap_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000316")]
	public struct RenderModel_t
	{
		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr rVertexData;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint unVertexCount;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr rIndexData;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint unTriangleCount;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int diffuseTextureId;
	}
	[Token(Token = "0x2000317")]
	public struct RenderModel_t_Packed
	{
		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr rVertexData;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint unVertexCount;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr rIndexData;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint unTriangleCount;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int diffuseTextureId;

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0x457CAC", Offset = "0x457CAC", VA = "0x457CAC")]
		public RenderModel_t_Packed(RenderModel_t unpacked)
		{
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0x457CD4", Offset = "0x457CD4", VA = "0x457CD4")]
		public void Unpack(ref RenderModel_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000318")]
	public struct RenderModel_ControllerMode_State_t
	{
		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bScrollWheelVisible;
	}
	[Token(Token = "0x2000319")]
	public struct NotificationBitmap_t
	{
		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pImageData;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int m_nWidth;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int m_nHeight;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int m_nBytesPerPixel;
	}
	[Token(Token = "0x200031A")]
	public struct COpenVRContext
	{
		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pVRSystem;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public IntPtr m_pVRChaperone;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pVRChaperoneSetup;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public IntPtr m_pVRCompositor;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr m_pVROverlay;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr m_pVRResources;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr m_pVRRenderModels;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public IntPtr m_pVRExtendedDisplay;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr m_pVRSettings;

		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public IntPtr m_pVRApplications;

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IntPtr m_pVRTrackedCamera;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public IntPtr m_pVRScreenshots;

		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IntPtr m_pVRDriverManager;
	}
	[Token(Token = "0x200031B")]
	public class OpenVR
	{
		[Token(Token = "0x200087E")]
		private class COpenVRContext
		{
			[Token(Token = "0x4002872")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private CVRSystem m_pVRSystem;

			[Token(Token = "0x4002873")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private CVRChaperone m_pVRChaperone;

			[Token(Token = "0x4002874")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private CVRChaperoneSetup m_pVRChaperoneSetup;

			[Token(Token = "0x4002875")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private CVRCompositor m_pVRCompositor;

			[Token(Token = "0x4002876")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private CVROverlay m_pVROverlay;

			[Token(Token = "0x4002877")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private CVRRenderModels m_pVRRenderModels;

			[Token(Token = "0x4002878")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private CVRExtendedDisplay m_pVRExtendedDisplay;

			[Token(Token = "0x4002879")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private CVRSettings m_pVRSettings;

			[Token(Token = "0x400287A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private CVRApplications m_pVRApplications;

			[Token(Token = "0x400287B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private CVRScreenshots m_pVRScreenshots;

			[Token(Token = "0x400287C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CVRTrackedCamera m_pVRTrackedCamera;

			[Token(Token = "0x6003686")]
			[Address(RVA = "0x8693B4", Offset = "0x8693B4", VA = "0x8693B4")]
			public COpenVRContext()
			{
			}

			[Token(Token = "0x6003687")]
			[Address(RVA = "0x86A4E8", Offset = "0x86A4E8", VA = "0x86A4E8")]
			public void Clear()
			{
			}

			[Token(Token = "0x6003688")]
			[Address(RVA = "0x86A584", Offset = "0x86A584", VA = "0x86A584")]
			private void CheckClear()
			{
			}

			[Token(Token = "0x6003689")]
			[Address(RVA = "0x869470", Offset = "0x869470", VA = "0x869470")]
			public CVRSystem VRSystem()
			{
				return null;
			}

			[Token(Token = "0x600368A")]
			[Address(RVA = "0x8695D4", Offset = "0x8695D4", VA = "0x8695D4")]
			public CVRChaperone VRChaperone()
			{
				return null;
			}

			[Token(Token = "0x600368B")]
			[Address(RVA = "0x869738", Offset = "0x869738", VA = "0x869738")]
			public CVRChaperoneSetup VRChaperoneSetup()
			{
				return null;
			}

			[Token(Token = "0x600368C")]
			[Address(RVA = "0x86989C", Offset = "0x86989C", VA = "0x86989C")]
			public CVRCompositor VRCompositor()
			{
				return null;
			}

			[Token(Token = "0x600368D")]
			[Address(RVA = "0x869A00", Offset = "0x869A00", VA = "0x869A00")]
			public CVROverlay VROverlay()
			{
				return null;
			}

			[Token(Token = "0x600368E")]
			[Address(RVA = "0x869B64", Offset = "0x869B64", VA = "0x869B64")]
			public CVRRenderModels VRRenderModels()
			{
				return null;
			}

			[Token(Token = "0x600368F")]
			[Address(RVA = "0x869CC8", Offset = "0x869CC8", VA = "0x869CC8")]
			public CVRExtendedDisplay VRExtendedDisplay()
			{
				return null;
			}

			[Token(Token = "0x6003690")]
			[Address(RVA = "0x869E2C", Offset = "0x869E2C", VA = "0x869E2C")]
			public CVRSettings VRSettings()
			{
				return null;
			}

			[Token(Token = "0x6003691")]
			[Address(RVA = "0x869F90", Offset = "0x869F90", VA = "0x869F90")]
			public CVRApplications VRApplications()
			{
				return null;
			}

			[Token(Token = "0x6003692")]
			[Address(RVA = "0x86A0F4", Offset = "0x86A0F4", VA = "0x86A0F4")]
			public CVRScreenshots VRScreenshots()
			{
				return null;
			}

			[Token(Token = "0x6003693")]
			[Address(RVA = "0x86A258", Offset = "0x86A258", VA = "0x86A258")]
			public CVRTrackedCamera VRTrackedCamera()
			{
				return null;
			}
		}

		[Token(Token = "0x400174F")]
		public const uint k_nDriverNone = uint.MaxValue;

		[Token(Token = "0x4001750")]
		public const uint k_unMaxDriverDebugResponseSize = 32768u;

		[Token(Token = "0x4001751")]
		public const uint k_unTrackedDeviceIndex_Hmd = 0u;

		[Token(Token = "0x4001752")]
		public const uint k_unMaxTrackedDeviceCount = 64u;

		[Token(Token = "0x4001753")]
		public const uint k_unTrackedDeviceIndexOther = 4294967294u;

		[Token(Token = "0x4001754")]
		public const uint k_unTrackedDeviceIndexInvalid = uint.MaxValue;

		[Token(Token = "0x4001755")]
		public const ulong k_ulInvalidPropertyContainer = 0uL;

		[Token(Token = "0x4001756")]
		public const uint k_unInvalidPropertyTag = 0u;

		[Token(Token = "0x4001757")]
		public const uint k_unFloatPropertyTag = 1u;

		[Token(Token = "0x4001758")]
		public const uint k_unInt32PropertyTag = 2u;

		[Token(Token = "0x4001759")]
		public const uint k_unUint64PropertyTag = 3u;

		[Token(Token = "0x400175A")]
		public const uint k_unBoolPropertyTag = 4u;

		[Token(Token = "0x400175B")]
		public const uint k_unStringPropertyTag = 5u;

		[Token(Token = "0x400175C")]
		public const uint k_unHmdMatrix34PropertyTag = 20u;

		[Token(Token = "0x400175D")]
		public const uint k_unHmdMatrix44PropertyTag = 21u;

		[Token(Token = "0x400175E")]
		public const uint k_unHmdVector3PropertyTag = 22u;

		[Token(Token = "0x400175F")]
		public const uint k_unHmdVector4PropertyTag = 23u;

		[Token(Token = "0x4001760")]
		public const uint k_unHiddenAreaPropertyTag = 30u;

		[Token(Token = "0x4001761")]
		public const uint k_unPathHandleInfoTag = 31u;

		[Token(Token = "0x4001762")]
		public const uint k_unActionPropertyTag = 32u;

		[Token(Token = "0x4001763")]
		public const uint k_unInputValuePropertyTag = 33u;

		[Token(Token = "0x4001764")]
		public const uint k_unWildcardPropertyTag = 34u;

		[Token(Token = "0x4001765")]
		public const uint k_unHapticVibrationPropertyTag = 35u;

		[Token(Token = "0x4001766")]
		public const uint k_unOpenVRInternalReserved_Start = 1000u;

		[Token(Token = "0x4001767")]
		public const uint k_unOpenVRInternalReserved_End = 10000u;

		[Token(Token = "0x4001768")]
		public const uint k_unMaxPropertyStringSize = 32768u;

		[Token(Token = "0x4001769")]
		public const uint k_unControllerStateAxisCount = 5u;

		[Token(Token = "0x400176A")]
		public const ulong k_ulOverlayHandleInvalid = 0uL;

		[Token(Token = "0x400176B")]
		public const uint k_unScreenshotHandleInvalid = 0u;

		[Token(Token = "0x400176C")]
		public const string IVRSystem_Version = "IVRSystem_019";

		[Token(Token = "0x400176D")]
		public const string IVRExtendedDisplay_Version = "IVRExtendedDisplay_001";

		[Token(Token = "0x400176E")]
		public const string IVRTrackedCamera_Version = "IVRTrackedCamera_003";

		[Token(Token = "0x400176F")]
		public const uint k_unMaxApplicationKeyLength = 128u;

		[Token(Token = "0x4001770")]
		public const string k_pch_MimeType_HomeApp = "vr/home";

		[Token(Token = "0x4001771")]
		public const string k_pch_MimeType_GameTheater = "vr/game_theater";

		[Token(Token = "0x4001772")]
		public const string IVRApplications_Version = "IVRApplications_006";

		[Token(Token = "0x4001773")]
		public const string IVRChaperone_Version = "IVRChaperone_003";

		[Token(Token = "0x4001774")]
		public const string IVRChaperoneSetup_Version = "IVRChaperoneSetup_005";

		[Token(Token = "0x4001775")]
		public const string IVRCompositor_Version = "IVRCompositor_022";

		[Token(Token = "0x4001776")]
		public const uint k_unVROverlayMaxKeyLength = 128u;

		[Token(Token = "0x4001777")]
		public const uint k_unVROverlayMaxNameLength = 128u;

		[Token(Token = "0x4001778")]
		public const uint k_unMaxOverlayCount = 64u;

		[Token(Token = "0x4001779")]
		public const uint k_unMaxOverlayIntersectionMaskPrimitivesCount = 32u;

		[Token(Token = "0x400177A")]
		public const string IVROverlay_Version = "IVROverlay_018";

		[Token(Token = "0x400177B")]
		public const string k_pch_Controller_Component_GDC2015 = "gdc2015";

		[Token(Token = "0x400177C")]
		public const string k_pch_Controller_Component_Base = "base";

		[Token(Token = "0x400177D")]
		public const string k_pch_Controller_Component_Tip = "tip";

		[Token(Token = "0x400177E")]
		public const string k_pch_Controller_Component_HandGrip = "handgrip";

		[Token(Token = "0x400177F")]
		public const string k_pch_Controller_Component_Status = "status";

		[Token(Token = "0x4001780")]
		public const string IVRRenderModels_Version = "IVRRenderModels_005";

		[Token(Token = "0x4001781")]
		public const uint k_unNotificationTextMaxSize = 256u;

		[Token(Token = "0x4001782")]
		public const string IVRNotifications_Version = "IVRNotifications_002";

		[Token(Token = "0x4001783")]
		public const uint k_unMaxSettingsKeyLength = 128u;

		[Token(Token = "0x4001784")]
		public const string IVRSettings_Version = "IVRSettings_002";

		[Token(Token = "0x4001785")]
		public const string k_pch_SteamVR_Section = "steamvr";

		[Token(Token = "0x4001786")]
		public const string k_pch_SteamVR_RequireHmd_String = "requireHmd";

		[Token(Token = "0x4001787")]
		public const string k_pch_SteamVR_ForcedDriverKey_String = "forcedDriver";

		[Token(Token = "0x4001788")]
		public const string k_pch_SteamVR_ForcedHmdKey_String = "forcedHmd";

		[Token(Token = "0x4001789")]
		public const string k_pch_SteamVR_DisplayDebug_Bool = "displayDebug";

		[Token(Token = "0x400178A")]
		public const string k_pch_SteamVR_DebugProcessPipe_String = "debugProcessPipe";

		[Token(Token = "0x400178B")]
		public const string k_pch_SteamVR_DisplayDebugX_Int32 = "displayDebugX";

		[Token(Token = "0x400178C")]
		public const string k_pch_SteamVR_DisplayDebugY_Int32 = "displayDebugY";

		[Token(Token = "0x400178D")]
		public const string k_pch_SteamVR_SendSystemButtonToAllApps_Bool = "sendSystemButtonToAllApps";

		[Token(Token = "0x400178E")]
		public const string k_pch_SteamVR_LogLevel_Int32 = "loglevel";

		[Token(Token = "0x400178F")]
		public const string k_pch_SteamVR_IPD_Float = "ipd";

		[Token(Token = "0x4001790")]
		public const string k_pch_SteamVR_Background_String = "background";

		[Token(Token = "0x4001791")]
		public const string k_pch_SteamVR_BackgroundUseDomeProjection_Bool = "backgroundUseDomeProjection";

		[Token(Token = "0x4001792")]
		public const string k_pch_SteamVR_BackgroundCameraHeight_Float = "backgroundCameraHeight";

		[Token(Token = "0x4001793")]
		public const string k_pch_SteamVR_BackgroundDomeRadius_Float = "backgroundDomeRadius";

		[Token(Token = "0x4001794")]
		public const string k_pch_SteamVR_GridColor_String = "gridColor";

		[Token(Token = "0x4001795")]
		public const string k_pch_SteamVR_PlayAreaColor_String = "playAreaColor";

		[Token(Token = "0x4001796")]
		public const string k_pch_SteamVR_ShowStage_Bool = "showStage";

		[Token(Token = "0x4001797")]
		public const string k_pch_SteamVR_ActivateMultipleDrivers_Bool = "activateMultipleDrivers";

		[Token(Token = "0x4001798")]
		public const string k_pch_SteamVR_DirectMode_Bool = "directMode";

		[Token(Token = "0x4001799")]
		public const string k_pch_SteamVR_DirectModeEdidVid_Int32 = "directModeEdidVid";

		[Token(Token = "0x400179A")]
		public const string k_pch_SteamVR_DirectModeEdidPid_Int32 = "directModeEdidPid";

		[Token(Token = "0x400179B")]
		public const string k_pch_SteamVR_UsingSpeakers_Bool = "usingSpeakers";

		[Token(Token = "0x400179C")]
		public const string k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float = "speakersForwardYawOffsetDegrees";

		[Token(Token = "0x400179D")]
		public const string k_pch_SteamVR_BaseStationPowerManagement_Bool = "basestationPowerManagement";

		[Token(Token = "0x400179E")]
		public const string k_pch_SteamVR_NeverKillProcesses_Bool = "neverKillProcesses";

		[Token(Token = "0x400179F")]
		public const string k_pch_SteamVR_SupersampleScale_Float = "supersampleScale";

		[Token(Token = "0x40017A0")]
		public const string k_pch_SteamVR_AllowAsyncReprojection_Bool = "allowAsyncReprojection";

		[Token(Token = "0x40017A1")]
		public const string k_pch_SteamVR_AllowReprojection_Bool = "allowInterleavedReprojection";

		[Token(Token = "0x40017A2")]
		public const string k_pch_SteamVR_ForceReprojection_Bool = "forceReprojection";

		[Token(Token = "0x40017A3")]
		public const string k_pch_SteamVR_ForceFadeOnBadTracking_Bool = "forceFadeOnBadTracking";

		[Token(Token = "0x40017A4")]
		public const string k_pch_SteamVR_DefaultMirrorView_Int32 = "defaultMirrorView";

		[Token(Token = "0x40017A5")]
		public const string k_pch_SteamVR_ShowMirrorView_Bool = "showMirrorView";

		[Token(Token = "0x40017A6")]
		public const string k_pch_SteamVR_MirrorViewGeometry_String = "mirrorViewGeometry";

		[Token(Token = "0x40017A7")]
		public const string k_pch_SteamVR_StartMonitorFromAppLaunch = "startMonitorFromAppLaunch";

		[Token(Token = "0x40017A8")]
		public const string k_pch_SteamVR_StartCompositorFromAppLaunch_Bool = "startCompositorFromAppLaunch";

		[Token(Token = "0x40017A9")]
		public const string k_pch_SteamVR_StartDashboardFromAppLaunch_Bool = "startDashboardFromAppLaunch";

		[Token(Token = "0x40017AA")]
		public const string k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool = "startOverlayAppsFromDashboard";

		[Token(Token = "0x40017AB")]
		public const string k_pch_SteamVR_EnableHomeApp = "enableHomeApp";

		[Token(Token = "0x40017AC")]
		public const string k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32 = "CycleBackgroundImageTimeSec";

		[Token(Token = "0x40017AD")]
		public const string k_pch_SteamVR_RetailDemo_Bool = "retailDemo";

		[Token(Token = "0x40017AE")]
		public const string k_pch_SteamVR_IpdOffset_Float = "ipdOffset";

		[Token(Token = "0x40017AF")]
		public const string k_pch_SteamVR_AllowSupersampleFiltering_Bool = "allowSupersampleFiltering";

		[Token(Token = "0x40017B0")]
		public const string k_pch_SteamVR_EnableLinuxVulkanAsync_Bool = "enableLinuxVulkanAsync";

		[Token(Token = "0x40017B1")]
		public const string k_pch_SteamVR_AllowDisplayLockedMode_Bool = "allowDisplayLockedMode";

		[Token(Token = "0x40017B2")]
		public const string k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool = "haveStartedTutorialForNativeChaperoneDriver";

		[Token(Token = "0x40017B3")]
		public const string k_pch_SteamVR_ForceWindows32bitVRMonitor = "forceWindows32BitVRMonitor";

		[Token(Token = "0x40017B4")]
		public const string k_pch_Lighthouse_Section = "driver_lighthouse";

		[Token(Token = "0x40017B5")]
		public const string k_pch_Lighthouse_DisableIMU_Bool = "disableimu";

		[Token(Token = "0x40017B6")]
		public const string k_pch_Lighthouse_DisableIMUExceptHMD_Bool = "disableimuexcepthmd";

		[Token(Token = "0x40017B7")]
		public const string k_pch_Lighthouse_UseDisambiguation_String = "usedisambiguation";

		[Token(Token = "0x40017B8")]
		public const string k_pch_Lighthouse_DisambiguationDebug_Int32 = "disambiguationdebug";

		[Token(Token = "0x40017B9")]
		public const string k_pch_Lighthouse_PrimaryBasestation_Int32 = "primarybasestation";

		[Token(Token = "0x40017BA")]
		public const string k_pch_Lighthouse_DBHistory_Bool = "dbhistory";

		[Token(Token = "0x40017BB")]
		public const string k_pch_Lighthouse_EnableBluetooth_Bool = "enableBluetooth";

		[Token(Token = "0x40017BC")]
		public const string k_pch_Null_Section = "driver_null";

		[Token(Token = "0x40017BD")]
		public const string k_pch_Null_SerialNumber_String = "serialNumber";

		[Token(Token = "0x40017BE")]
		public const string k_pch_Null_ModelNumber_String = "modelNumber";

		[Token(Token = "0x40017BF")]
		public const string k_pch_Null_WindowX_Int32 = "windowX";

		[Token(Token = "0x40017C0")]
		public const string k_pch_Null_WindowY_Int32 = "windowY";

		[Token(Token = "0x40017C1")]
		public const string k_pch_Null_WindowWidth_Int32 = "windowWidth";

		[Token(Token = "0x40017C2")]
		public const string k_pch_Null_WindowHeight_Int32 = "windowHeight";

		[Token(Token = "0x40017C3")]
		public const string k_pch_Null_RenderWidth_Int32 = "renderWidth";

		[Token(Token = "0x40017C4")]
		public const string k_pch_Null_RenderHeight_Int32 = "renderHeight";

		[Token(Token = "0x40017C5")]
		public const string k_pch_Null_SecondsFromVsyncToPhotons_Float = "secondsFromVsyncToPhotons";

		[Token(Token = "0x40017C6")]
		public const string k_pch_Null_DisplayFrequency_Float = "displayFrequency";

		[Token(Token = "0x40017C7")]
		public const string k_pch_UserInterface_Section = "userinterface";

		[Token(Token = "0x40017C8")]
		public const string k_pch_UserInterface_StatusAlwaysOnTop_Bool = "StatusAlwaysOnTop";

		[Token(Token = "0x40017C9")]
		public const string k_pch_UserInterface_MinimizeToTray_Bool = "MinimizeToTray";

		[Token(Token = "0x40017CA")]
		public const string k_pch_UserInterface_Screenshots_Bool = "screenshots";

		[Token(Token = "0x40017CB")]
		public const string k_pch_UserInterface_ScreenshotType_Int = "screenshotType";

		[Token(Token = "0x40017CC")]
		public const string k_pch_Notifications_Section = "notifications";

		[Token(Token = "0x40017CD")]
		public const string k_pch_Notifications_DoNotDisturb_Bool = "DoNotDisturb";

		[Token(Token = "0x40017CE")]
		public const string k_pch_Keyboard_Section = "keyboard";

		[Token(Token = "0x40017CF")]
		public const string k_pch_Keyboard_TutorialCompletions = "TutorialCompletions";

		[Token(Token = "0x40017D0")]
		public const string k_pch_Keyboard_ScaleX = "ScaleX";

		[Token(Token = "0x40017D1")]
		public const string k_pch_Keyboard_ScaleY = "ScaleY";

		[Token(Token = "0x40017D2")]
		public const string k_pch_Keyboard_OffsetLeftX = "OffsetLeftX";

		[Token(Token = "0x40017D3")]
		public const string k_pch_Keyboard_OffsetRightX = "OffsetRightX";

		[Token(Token = "0x40017D4")]
		public const string k_pch_Keyboard_OffsetY = "OffsetY";

		[Token(Token = "0x40017D5")]
		public const string k_pch_Keyboard_Smoothing = "Smoothing";

		[Token(Token = "0x40017D6")]
		public const string k_pch_Perf_Section = "perfcheck";

		[Token(Token = "0x40017D7")]
		public const string k_pch_Perf_HeuristicActive_Bool = "heuristicActive";

		[Token(Token = "0x40017D8")]
		public const string k_pch_Perf_NotifyInHMD_Bool = "warnInHMD";

		[Token(Token = "0x40017D9")]
		public const string k_pch_Perf_NotifyOnlyOnce_Bool = "warnOnlyOnce";

		[Token(Token = "0x40017DA")]
		public const string k_pch_Perf_AllowTimingStore_Bool = "allowTimingStore";

		[Token(Token = "0x40017DB")]
		public const string k_pch_Perf_SaveTimingsOnExit_Bool = "saveTimingsOnExit";

		[Token(Token = "0x40017DC")]
		public const string k_pch_Perf_TestData_Float = "perfTestData";

		[Token(Token = "0x40017DD")]
		public const string k_pch_Perf_LinuxGPUProfiling_Bool = "linuxGPUProfiling";

		[Token(Token = "0x40017DE")]
		public const string k_pch_CollisionBounds_Section = "collisionBounds";

		[Token(Token = "0x40017DF")]
		public const string k_pch_CollisionBounds_Style_Int32 = "CollisionBoundsStyle";

		[Token(Token = "0x40017E0")]
		public const string k_pch_CollisionBounds_GroundPerimeterOn_Bool = "CollisionBoundsGroundPerimeterOn";

		[Token(Token = "0x40017E1")]
		public const string k_pch_CollisionBounds_CenterMarkerOn_Bool = "CollisionBoundsCenterMarkerOn";

		[Token(Token = "0x40017E2")]
		public const string k_pch_CollisionBounds_PlaySpaceOn_Bool = "CollisionBoundsPlaySpaceOn";

		[Token(Token = "0x40017E3")]
		public const string k_pch_CollisionBounds_FadeDistance_Float = "CollisionBoundsFadeDistance";

		[Token(Token = "0x40017E4")]
		public const string k_pch_CollisionBounds_ColorGammaR_Int32 = "CollisionBoundsColorGammaR";

		[Token(Token = "0x40017E5")]
		public const string k_pch_CollisionBounds_ColorGammaG_Int32 = "CollisionBoundsColorGammaG";

		[Token(Token = "0x40017E6")]
		public const string k_pch_CollisionBounds_ColorGammaB_Int32 = "CollisionBoundsColorGammaB";

		[Token(Token = "0x40017E7")]
		public const string k_pch_CollisionBounds_ColorGammaA_Int32 = "CollisionBoundsColorGammaA";

		[Token(Token = "0x40017E8")]
		public const string k_pch_Camera_Section = "camera";

		[Token(Token = "0x40017E9")]
		public const string k_pch_Camera_EnableCamera_Bool = "enableCamera";

		[Token(Token = "0x40017EA")]
		public const string k_pch_Camera_EnableCameraInDashboard_Bool = "enableCameraInDashboard";

		[Token(Token = "0x40017EB")]
		public const string k_pch_Camera_EnableCameraForCollisionBounds_Bool = "enableCameraForCollisionBounds";

		[Token(Token = "0x40017EC")]
		public const string k_pch_Camera_EnableCameraForRoomView_Bool = "enableCameraForRoomView";

		[Token(Token = "0x40017ED")]
		public const string k_pch_Camera_BoundsColorGammaR_Int32 = "cameraBoundsColorGammaR";

		[Token(Token = "0x40017EE")]
		public const string k_pch_Camera_BoundsColorGammaG_Int32 = "cameraBoundsColorGammaG";

		[Token(Token = "0x40017EF")]
		public const string k_pch_Camera_BoundsColorGammaB_Int32 = "cameraBoundsColorGammaB";

		[Token(Token = "0x40017F0")]
		public const string k_pch_Camera_BoundsColorGammaA_Int32 = "cameraBoundsColorGammaA";

		[Token(Token = "0x40017F1")]
		public const string k_pch_Camera_BoundsStrength_Int32 = "cameraBoundsStrength";

		[Token(Token = "0x40017F2")]
		public const string k_pch_audio_Section = "audio";

		[Token(Token = "0x40017F3")]
		public const string k_pch_audio_OnPlaybackDevice_String = "onPlaybackDevice";

		[Token(Token = "0x40017F4")]
		public const string k_pch_audio_OnRecordDevice_String = "onRecordDevice";

		[Token(Token = "0x40017F5")]
		public const string k_pch_audio_OnPlaybackMirrorDevice_String = "onPlaybackMirrorDevice";

		[Token(Token = "0x40017F6")]
		public const string k_pch_audio_OffPlaybackDevice_String = "offPlaybackDevice";

		[Token(Token = "0x40017F7")]
		public const string k_pch_audio_OffRecordDevice_String = "offRecordDevice";

		[Token(Token = "0x40017F8")]
		public const string k_pch_audio_VIVEHDMIGain = "viveHDMIGain";

		[Token(Token = "0x40017F9")]
		public const string k_pch_Power_Section = "power";

		[Token(Token = "0x40017FA")]
		public const string k_pch_Power_PowerOffOnExit_Bool = "powerOffOnExit";

		[Token(Token = "0x40017FB")]
		public const string k_pch_Power_TurnOffScreensTimeout_Float = "turnOffScreensTimeout";

		[Token(Token = "0x40017FC")]
		public const string k_pch_Power_TurnOffControllersTimeout_Float = "turnOffControllersTimeout";

		[Token(Token = "0x40017FD")]
		public const string k_pch_Power_ReturnToWatchdogTimeout_Float = "returnToWatchdogTimeout";

		[Token(Token = "0x40017FE")]
		public const string k_pch_Power_AutoLaunchSteamVROnButtonPress = "autoLaunchSteamVROnButtonPress";

		[Token(Token = "0x40017FF")]
		public const string k_pch_Power_PauseCompositorOnStandby_Bool = "pauseCompositorOnStandby";

		[Token(Token = "0x4001800")]
		public const string k_pch_Dashboard_Section = "dashboard";

		[Token(Token = "0x4001801")]
		public const string k_pch_Dashboard_EnableDashboard_Bool = "enableDashboard";

		[Token(Token = "0x4001802")]
		public const string k_pch_Dashboard_ArcadeMode_Bool = "arcadeMode";

		[Token(Token = "0x4001803")]
		public const string k_pch_modelskin_Section = "modelskins";

		[Token(Token = "0x4001804")]
		public const string k_pch_Driver_Enable_Bool = "enable";

		[Token(Token = "0x4001805")]
		public const string IVRScreenshots_Version = "IVRScreenshots_001";

		[Token(Token = "0x4001806")]
		public const string IVRResources_Version = "IVRResources_001";

		[Token(Token = "0x4001807")]
		public const string IVRDriverManager_Version = "IVRDriverManager_001";

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1920", Offset = "0x3A1920")]
		private static uint <VRToken>k__BackingField;

		[Token(Token = "0x4001809")]
		private const string FnTable_Prefix = "FnTable:";

		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static COpenVRContext _OpenVRInternal_ModuleContext;

		[Token(Token = "0x17000237")]
		private static uint VRToken
		{
			[Token(Token = "0x6001707")]
			[Address(RVA = "0x8691B0", Offset = "0x8691B0", VA = "0x8691B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ABB9C", Offset = "0x3ABB9C")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6001708")]
			[Address(RVA = "0x869228", Offset = "0x869228", VA = "0x869228")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ABBAC", Offset = "0x3ABBAC")]
			set
			{
			}
		}

		[Token(Token = "0x17000238")]
		private static COpenVRContext OpenVRInternal_ModuleContext
		{
			[Token(Token = "0x6001709")]
			[Address(RVA = "0x8692A4", Offset = "0x8692A4", VA = "0x8692A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000239")]
		public static CVRSystem System
		{
			[Token(Token = "0x600170A")]
			[Address(RVA = "0x8693E8", Offset = "0x8693E8", VA = "0x8693E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023A")]
		public static CVRChaperone Chaperone
		{
			[Token(Token = "0x600170B")]
			[Address(RVA = "0x86954C", Offset = "0x86954C", VA = "0x86954C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023B")]
		public static CVRChaperoneSetup ChaperoneSetup
		{
			[Token(Token = "0x600170C")]
			[Address(RVA = "0x8696B0", Offset = "0x8696B0", VA = "0x8696B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023C")]
		public static CVRCompositor Compositor
		{
			[Token(Token = "0x600170D")]
			[Address(RVA = "0x869814", Offset = "0x869814", VA = "0x869814")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023D")]
		public static CVROverlay Overlay
		{
			[Token(Token = "0x600170E")]
			[Address(RVA = "0x869978", Offset = "0x869978", VA = "0x869978")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023E")]
		public static CVRRenderModels RenderModels
		{
			[Token(Token = "0x600170F")]
			[Address(RVA = "0x869ADC", Offset = "0x869ADC", VA = "0x869ADC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023F")]
		public static CVRExtendedDisplay ExtendedDisplay
		{
			[Token(Token = "0x6001710")]
			[Address(RVA = "0x869C40", Offset = "0x869C40", VA = "0x869C40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000240")]
		public static CVRSettings Settings
		{
			[Token(Token = "0x6001711")]
			[Address(RVA = "0x869DA4", Offset = "0x869DA4", VA = "0x869DA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000241")]
		public static CVRApplications Applications
		{
			[Token(Token = "0x6001712")]
			[Address(RVA = "0x869F08", Offset = "0x869F08", VA = "0x869F08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000242")]
		public static CVRScreenshots Screenshots
		{
			[Token(Token = "0x6001713")]
			[Address(RVA = "0x86A06C", Offset = "0x86A06C", VA = "0x86A06C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000243")]
		public static CVRTrackedCamera TrackedCamera
		{
			[Token(Token = "0x6001714")]
			[Address(RVA = "0x86A1D0", Offset = "0x86A1D0", VA = "0x86A1D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0x868BAC", Offset = "0x868BAC", VA = "0x868BAC")]
		public static uint InitInternal(ref EVRInitError peError, EVRApplicationType eApplicationType)
		{
			return default(uint);
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0x868C58", Offset = "0x868C58", VA = "0x868C58")]
		public static void ShutdownInternal()
		{
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0x868CF8", Offset = "0x868CF8", VA = "0x868CF8")]
		public static bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0x868DA0", Offset = "0x868DA0", VA = "0x868DA0")]
		public static bool IsRuntimeInstalled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0x868E48", Offset = "0x868E48", VA = "0x868E48")]
		public static string GetStringForHmdError(EVRInitError error)
		{
			return null;
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0x868F70", Offset = "0x868F70", VA = "0x868F70")]
		public static IntPtr GetGenericInterface(string pchInterfaceVersion, ref EVRInitError peError)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0x869044", Offset = "0x869044", VA = "0x869044")]
		public static bool IsInterfaceVersionValid(string pchInterfaceVersion)
		{
			return default(bool);
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0x869114", Offset = "0x869114", VA = "0x869114")]
		public static uint GetInitToken()
		{
			return default(uint);
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0x86A334", Offset = "0x86A334", VA = "0x86A334")]
		public static CVRSystem Init(ref EVRInitError peError, EVRApplicationType eApplicationType = EVRApplicationType.VRApplication_Scene)
		{
			return null;
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0x86A508", Offset = "0x86A508", VA = "0x86A508")]
		public static void Shutdown()
		{
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0x86A578", Offset = "0x86A578", VA = "0x86A578")]
		public OpenVR()
		{
		}
	}
}
namespace MiniJSON
{
	[Token(Token = "0x200031C")]
	public static class Json
	{
		[Token(Token = "0x200087F")]
		private sealed class Parser : IDisposable
		{
			[Token(Token = "0x2000921")]
			private enum TOKEN
			{
				[Token(Token = "0x4002BFD")]
				NONE,
				[Token(Token = "0x4002BFE")]
				CURLY_OPEN,
				[Token(Token = "0x4002BFF")]
				CURLY_CLOSE,
				[Token(Token = "0x4002C00")]
				SQUARED_OPEN,
				[Token(Token = "0x4002C01")]
				SQUARED_CLOSE,
				[Token(Token = "0x4002C02")]
				COLON,
				[Token(Token = "0x4002C03")]
				COMMA,
				[Token(Token = "0x4002C04")]
				STRING,
				[Token(Token = "0x4002C05")]
				NUMBER,
				[Token(Token = "0x4002C06")]
				TRUE,
				[Token(Token = "0x4002C07")]
				FALSE,
				[Token(Token = "0x4002C08")]
				NULL
			}

			[Token(Token = "0x400287D")]
			private const string WORD_BREAK = "{}[],:\"";

			[Token(Token = "0x400287E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private StringReader json;

			[Token(Token = "0x170005AD")]
			private char PeekChar
			{
				[Token(Token = "0x600369F")]
				[Address(RVA = "0x6C9E64", Offset = "0x6C9E64", VA = "0x6C9E64")]
				get
				{
					return default(char);
				}
			}

			[Token(Token = "0x170005AE")]
			private char NextChar
			{
				[Token(Token = "0x60036A0")]
				[Address(RVA = "0x6C9BF4", Offset = "0x6C9BF4", VA = "0x6C9BF4")]
				get
				{
					return default(char);
				}
			}

			[Token(Token = "0x170005AF")]
			private string NextWord
			{
				[Token(Token = "0x60036A1")]
				[Address(RVA = "0x6C9C98", Offset = "0x6C9C98", VA = "0x6C9C98")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005B0")]
			private TOKEN NextToken
			{
				[Token(Token = "0x60036A2")]
				[Address(RVA = "0x6C936C", Offset = "0x6C936C", VA = "0x6C936C")]
				get
				{
					return default(TOKEN);
				}
			}

			[Token(Token = "0x6003694")]
			[Address(RVA = "0x6C907C", Offset = "0x6C907C", VA = "0x6C907C")]
			public static bool IsWordBreak(char c)
			{
				return default(bool);
			}

			[Token(Token = "0x6003695")]
			[Address(RVA = "0x6C9144", Offset = "0x6C9144", VA = "0x6C9144")]
			private Parser(string jsonString)
			{
			}

			[Token(Token = "0x6003696")]
			[Address(RVA = "0x6C8E68", Offset = "0x6C8E68", VA = "0x6C8E68")]
			public static object Parse(string jsonString)
			{
				return null;
			}

			[Token(Token = "0x6003697")]
			[Address(RVA = "0x6C91E0", Offset = "0x6C91E0", VA = "0x6C91E0", Slot = "4")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6003698")]
			[Address(RVA = "0x6C9214", Offset = "0x6C9214", VA = "0x6C9214")]
			private Dictionary<string, object> ParseObject()
			{
				return null;
			}

			[Token(Token = "0x6003699")]
			[Address(RVA = "0x6C98E4", Offset = "0x6C98E4", VA = "0x6C98E4")]
			private List<object> ParseArray()
			{
				return null;
			}

			[Token(Token = "0x600369A")]
			[Address(RVA = "0x6C91C0", Offset = "0x6C91C0", VA = "0x6C91C0")]
			private object ParseValue()
			{
				return null;
			}

			[Token(Token = "0x600369B")]
			[Address(RVA = "0x6C99E0", Offset = "0x6C99E0", VA = "0x6C99E0")]
			private object ParseByToken(TOKEN token)
			{
				return null;
			}

			[Token(Token = "0x600369C")]
			[Address(RVA = "0x6C95CC", Offset = "0x6C95CC", VA = "0x6C95CC")]
			private string ParseString()
			{
				return null;
			}

			[Token(Token = "0x600369D")]
			[Address(RVA = "0x6C9AE4", Offset = "0x6C9AE4", VA = "0x6C9AE4")]
			private object ParseNumber()
			{
				return null;
			}

			[Token(Token = "0x600369E")]
			[Address(RVA = "0x6C9D84", Offset = "0x6C9D84", VA = "0x6C9D84")]
			private void EatWhitespace()
			{
			}
		}

		[Token(Token = "0x2000880")]
		private sealed class Serializer
		{
			[Token(Token = "0x400287F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private StringBuilder builder;

			[Token(Token = "0x60036A3")]
			[Address(RVA = "0x6C9F08", Offset = "0x6C9F08", VA = "0x6C9F08")]
			private Serializer()
			{
			}

			[Token(Token = "0x60036A4")]
			[Address(RVA = "0x6C8FCC", Offset = "0x6C8FCC", VA = "0x6C8FCC")]
			public static string Serialize(object obj)
			{
				return null;
			}

			[Token(Token = "0x60036A5")]
			[Address(RVA = "0x6C9F7C", Offset = "0x6C9F7C", VA = "0x6C9F7C")]
			private void SerializeValue(object value)
			{
			}

			[Token(Token = "0x60036A6")]
			[Address(RVA = "0x6CA770", Offset = "0x6CA770", VA = "0x6CA770")]
			private void SerializeObject(IDictionary obj)
			{
			}

			[Token(Token = "0x60036A7")]
			[Address(RVA = "0x6CA428", Offset = "0x6CA428", VA = "0x6CA428")]
			private void SerializeArray(IList anArray)
			{
			}

			[Token(Token = "0x60036A8")]
			[Address(RVA = "0x6CA140", Offset = "0x6CA140", VA = "0x6CA140")]
			private void SerializeString(string str)
			{
			}

			[Token(Token = "0x60036A9")]
			[Address(RVA = "0x6CAC38", Offset = "0x6CAC38", VA = "0x6CAC38")]
			private void SerializeOther(object value)
			{
			}
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0x6C8E58", Offset = "0x6C8E58", VA = "0x6C8E58")]
		public static object Deserialize(string json)
		{
			return null;
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0x6C8FC8", Offset = "0x6C8FC8", VA = "0x6C8FC8")]
		public static string Serialize(object obj)
		{
			return null;
		}
	}
}
namespace PubNubMessaging.Core
{
	[Token(Token = "0x200031D")]
	public class BuildRequests
	{
		[Token(Token = "0x600171B")]
		internal static RequestState<T> BuildRequestState<T>(List<ChannelEntity> channelEntities, ResponseType responseType, bool reconnect, long id, bool timeout, long timetoken, Type typeParam, string uuid, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
			return null;
		}

		[Token(Token = "0x600171C")]
		internal static RequestState<T> BuildRequestState<T>(List<ChannelEntity> channelEntities, ResponseType responseType, bool reconnect, long id, bool timeout, long timetoken, Type typeParam)
		{
			return null;
		}

		[Token(Token = "0x600171D")]
		internal static RequestState<T> BuildRequestState<T>(Action<T> userCallback, Action<PubnubClientError> errorCallback, ResponseType responseType, bool reconnect, long id, bool timeout, long timetoken, Type typeParam, string uuid)
		{
			return null;
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0x909CE0", Offset = "0x909CE0", VA = "0x909CE0")]
		internal static Uri BuildRegisterDevicePushRequest(string channel, PushTypeService pushType, string pushToken, string uuid, bool ssl, string origin, string authenticationKey, string subscribeKey)
		{
			return null;
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0x90A014", Offset = "0x90A014", VA = "0x90A014")]
		internal static Uri BuildRemoveChannelPushRequest(string channel, PushTypeService pushType, string pushToken, string uuid, bool ssl, string origin, string authenticationKey, string subscribeKey)
		{
			return null;
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0x90A348", Offset = "0x90A348", VA = "0x90A348")]
		internal static Uri BuildGetChannelsPushRequest(PushTypeService pushType, string pushToken, string uuid, bool ssl, string origin, string authenticationKey, string subscribeKey)
		{
			return null;
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0x90A62C", Offset = "0x90A62C", VA = "0x90A62C")]
		internal static Uri BuildUnregisterDevicePushRequest(PushTypeService pushType, string pushToken, string uuid, bool ssl, string origin, string authenticationKey, string subscribeKey)
		{
			return null;
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0x90A944", Offset = "0x90A944", VA = "0x90A944")]
		internal static Uri BuildPublishRequest(string channel, string message, bool storeInHistory, string uuid, bool ssl, string origin, string authenticationKey, string publishKey, string subscribeKey, string cipherKey, string secretKey, string metadata, uint messageCounter, int ttl)
		{
			return null;
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0x90AE70", Offset = "0x90AE70", VA = "0x90AE70")]
		internal static Uri BuildDetailedHistoryRequest(string channel, long start, long end, int count, bool reverse, bool includeToken, string uuid, bool ssl, string origin, string authenticationKey, string subscribeKey)
		{
			return null;
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0x90B450", Offset = "0x90B450", VA = "0x90B450")]
		internal static Uri BuildHereNowRequest(string channel, string channelGroups, bool showUUIDList, bool includeUserState, string uuid, bool ssl, string origin, string authenticationKey, string subscribeKey)
		{
			return null;
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0x90B784", Offset = "0x90B784", VA = "0x90B784")]
		internal static Uri BuildGlobalHereNowRequest(bool showUUIDList, bool includeUserState, string uuid, bool ssl, string origin, string authenticationKey, string subscribeKey)
		{
			return null;
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0x90B990", Offset = "0x90B990", VA = "0x90B990")]
		internal static Uri BuildWhereNowRequest(string uuid, string sessionUUID, bool ssl, string origin, string authenticationKey, string subscribeKey)
		{
			return null;
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0x90BB9C", Offset = "0x90BB9C", VA = "0x90BB9C")]
		internal static Uri BuildTimeRequest(string uuid, bool ssl, string origin)
		{
			return null;
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0x90BCF8", Offset = "0x90BCF8", VA = "0x90BCF8")]
		internal static Uri BuildGrantAccessRequest(string channel, bool read, bool write, int ttl, string uuid, bool ssl, string origin, string authenticationKey, string publishKey, string subscribeKey, string cipherKey, string secretKey)
		{
			return null;
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0x90C5B8", Offset = "0x90C5B8", VA = "0x90C5B8")]
		internal static Uri BuildAuditAccessRequest(string channel, string uuid, bool ssl, string origin, string authenticationKey, string publishKey, string subscribeKey, string cipherKey, string secretKey)
		{
			return null;
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0x90CDA4", Offset = "0x90CDA4", VA = "0x90CDA4")]
		internal static Uri BuildSetUserStateRequest(string channel, string channelGroup, string jsonUserState, string uuid, string sessionUUID, bool ssl, string origin, string authenticationKey, string subscribeKey)
		{
			return null;
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0x90D178", Offset = "0x90D178", VA = "0x90D178")]
		internal static Uri BuildGetUserStateRequest(string channel, string channelGroup, string uuid, string sessionUUID, bool ssl, string origin, string authenticationKey, string subscribeKey)
		{
			return null;
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0x90D488", Offset = "0x90D488", VA = "0x90D488")]
		internal static Uri BuildPresenceHeartbeatRequest(string channels, string channelGroups, string channelsJsonState, string uuid, bool ssl, string origin, string authenticationKey, string subscribeKey)
		{
			return null;
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0x90D820", Offset = "0x90D820", VA = "0x90D820")]
		internal static Uri BuildMultiChannelLeaveRequest(string channels, string channelGroups, string uuid, bool ssl, string origin, string authenticationKey, string subscribeKey)
		{
			return null;
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0x90DBFC", Offset = "0x90DBFC", VA = "0x90DBFC")]
		internal static Uri BuildMultiChannelSubscribeRequestV2(string channels, string channelGroups, string timetoken, string channelsJsonState, string uuid, string region, string filterExpr, bool ssl, string origin, string authenticationKey, string subscribeKey, int presenceHeartbeat)
		{
			return null;
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0x90E018", Offset = "0x90E018", VA = "0x90E018")]
		internal static Uri BuildAddChannelsToChannelGroupRequest(string[] channels, string nameSpace, string groupName, string uuid, bool ssl, string origin, string authenticationKey, string subscribeKey)
		{
			return null;
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0x90E2BC", Offset = "0x90E2BC", VA = "0x90E2BC")]
		internal static Uri BuildRemoveChannelsFromChannelGroupRequest(string[] channels, string nameSpace, string groupName, string uuid, bool ssl, string origin, string authenticationKey, string subscribeKey)
		{
			return null;
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0x90E5BC", Offset = "0x90E5BC", VA = "0x90E5BC")]
		internal static Uri BuildGetChannelsForChannelGroupRequest(string nameSpace, string groupName, bool limitToChannelGroupScopeOnly, string uuid, bool ssl, string origin, string authenticationKey, string subscribeKey)
		{
			return null;
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0x90E918", Offset = "0x90E918", VA = "0x90E918")]
		internal static Uri BuildChannelGroupAuditAccessRequest(string channelGroup, string uuid, bool ssl, string origin, string authenticationKey, string publishKey, string subscribeKey, string cipherKey, string secretKey)
		{
			return null;
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0x90F104", Offset = "0x90F104", VA = "0x90F104")]
		internal static Uri BuildChannelGroupGrantAccessRequest(string channelGroup, bool read, bool write, bool manage, int ttl, string uuid, bool ssl, string origin, string authenticationKey, string publishKey, string subscribeKey, string cipherKey, string secretKey)
		{
			return null;
		}

		[Token(Token = "0x6001734")]
		private static StringBuilder AddSSLAndEncodeURL<T>(List<string> urlComponents, ResponseType type, bool ssl, string origin, StringBuilder url)
		{
			return null;
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0x90F9A4", Offset = "0x90F9A4", VA = "0x90F9A4")]
		private static StringBuilder AppendAuthKeyToURL(StringBuilder url, string authenticationKey, ResponseType type)
		{
			return null;
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0x90FA5C", Offset = "0x90FA5C", VA = "0x90FA5C")]
		private static StringBuilder AppendUUIDToURL(StringBuilder url, string uuid, bool firstInQS)
		{
			return null;
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0x90FAF0", Offset = "0x90FAF0", VA = "0x90FAF0")]
		private static StringBuilder AppendPresenceHeartbeatToURL(StringBuilder url, int pubnubPresenceHeartbeatInSeconds)
		{
			return null;
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0x90FB98", Offset = "0x90FB98", VA = "0x90FB98")]
		private static StringBuilder AppendPNSDKVersionToURL(StringBuilder url, string pnsdkVersion, ResponseType type)
		{
			return null;
		}

		[Token(Token = "0x6001739")]
		private static Uri BuildRestApiRequest<T>(List<string> urlComponents, ResponseType type, string uuid, bool ssl, string origin, int pubnubPresenceHeartbeatInSeconds, string authenticationKey, string parameters)
		{
			return null;
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0x90FC3C", Offset = "0x90FC3C", VA = "0x90FC3C")]
		public BuildRequests()
		{
		}
	}
	[Token(Token = "0x200031E")]
	internal static class EventExtensions
	{
		[Token(Token = "0x600173B")]
		public static void Raise<T>(this EventHandler<T> handler, object sender, T args) where T : EventArgs
		{
		}
	}
	[Token(Token = "0x200031F")]
	internal class CustomEventArgs<T> : EventArgs
	{
		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal string Message;

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal RequestState<T> PubnubRequestState;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal bool IsError;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal bool IsTimeout;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal CurrentRequestType CurrRequestType;

		[Token(Token = "0x600173C")]
		public CustomEventArgs()
		{
		}
	}
	[Token(Token = "0x2000320")]
	internal class CoroutineParams<T>
	{
		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string url;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int timeout;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int pause;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public CurrentRequestType crt;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Type typeParameterType;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RequestState<T> requestState;

		[Token(Token = "0x600173D")]
		public CoroutineParams(string url, int timeout, int pause, CurrentRequestType crt, Type typeParameterType, RequestState<T> requestState)
		{
		}
	}
	[Token(Token = "0x2000321")]
	public enum CurrentRequestType
	{
		[Token(Token = "0x4001817")]
		Heartbeat,
		[Token(Token = "0x4001818")]
		PresenceHeartbeat,
		[Token(Token = "0x4001819")]
		Subscribe,
		[Token(Token = "0x400181A")]
		NonSubscribe
	}
	[Token(Token = "0x2000322")]
	internal class CoroutineClass : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000881")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D6EC", Offset = "0x39D6EC")]
		private sealed class <DelayRequest>d__62<T> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002880")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002881")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002882")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int pause;

			[Token(Token = "0x4002883")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CoroutineClass <>4__this;

			[Token(Token = "0x4002884")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string url;

			[Token(Token = "0x4002885")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public RequestState<T> pubnubRequestState;

			[Token(Token = "0x4002886")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int timeout;

			[Token(Token = "0x4002887")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CurrentRequestType crt;

			[Token(Token = "0x170005B1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60036AD")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005B2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60036AF")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60036AA")]
			[DebuggerHidden]
			public <DelayRequest>d__62(int <>1__state)
			{
			}

			[Token(Token = "0x60036AB")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60036AC")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60036AE")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000882")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D6FC", Offset = "0x39D6FC")]
		private sealed class <SendRequestSub>d__64<T> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002888")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002889")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x400288A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CoroutineClass <>4__this;

			[Token(Token = "0x400288B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CoroutineParams<T> cp;

			[Token(Token = "0x170005B3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60036B3")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005B4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60036B5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60036B0")]
			[DebuggerHidden]
			public <SendRequestSub>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x60036B1")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60036B2")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60036B4")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000883")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D70C", Offset = "0x39D70C")]
		private sealed class <SendRequestNonSub>d__65<T> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400288C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x400288D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x400288E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CoroutineClass <>4__this;

			[Token(Token = "0x400288F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CoroutineParams<T> cp;

			[Token(Token = "0x170005B5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60036B9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005B6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60036BB")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60036B6")]
			[DebuggerHidden]
			public <SendRequestNonSub>d__65(int <>1__state)
			{
			}

			[Token(Token = "0x60036B7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60036B8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60036BA")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000884")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D71C", Offset = "0x39D71C")]
		private sealed class <SendRequestPresenceHeartbeat>d__66<T> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002890")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002891")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002892")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CoroutineClass <>4__this;

			[Token(Token = "0x4002893")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CoroutineParams<T> cp;

			[Token(Token = "0x170005B7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60036BF")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005B8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60036C1")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60036BC")]
			[DebuggerHidden]
			public <SendRequestPresenceHeartbeat>d__66(int <>1__state)
			{
			}

			[Token(Token = "0x60036BD")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60036BE")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60036C0")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000885")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D72C", Offset = "0x39D72C")]
		private sealed class <SendRequestHeartbeat>d__67<T> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002894")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002895")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002896")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CoroutineClass <>4__this;

			[Token(Token = "0x4002897")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CoroutineParams<T> cp;

			[Token(Token = "0x170005B9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60036C5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005BA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60036C7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60036C2")]
			[DebuggerHidden]
			public <SendRequestHeartbeat>d__67(int <>1__state)
			{
			}

			[Token(Token = "0x60036C3")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60036C4")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60036C6")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000886")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D73C", Offset = "0x39D73C")]
		private sealed class <CheckTimeoutSub>d__73<T> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002898")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002899")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x400289A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CoroutineParams<T> cp;

			[Token(Token = "0x400289B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CoroutineClass <>4__this;

			[Token(Token = "0x170005BB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60036CB")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005BC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60036CD")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60036C8")]
			[DebuggerHidden]
			public <CheckTimeoutSub>d__73(int <>1__state)
			{
			}

			[Token(Token = "0x60036C9")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60036CA")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60036CC")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000887")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D74C", Offset = "0x39D74C")]
		private sealed class <CheckTimeoutNonSub>d__74<T> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400289C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x400289D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x400289E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CoroutineParams<T> cp;

			[Token(Token = "0x400289F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CoroutineClass <>4__this;

			[Token(Token = "0x170005BD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60036D1")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005BE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60036D3")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60036CE")]
			[DebuggerHidden]
			public <CheckTimeoutNonSub>d__74(int <>1__state)
			{
			}

			[Token(Token = "0x60036CF")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60036D0")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60036D2")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000888")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D75C", Offset = "0x39D75C")]
		private sealed class <CheckTimeoutPresenceHeartbeat>d__75<T> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40028A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x40028A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CoroutineParams<T> cp;

			[Token(Token = "0x40028A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CoroutineClass <>4__this;

			[Token(Token = "0x170005BF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60036D7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005C0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60036D9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60036D4")]
			[DebuggerHidden]
			public <CheckTimeoutPresenceHeartbeat>d__75(int <>1__state)
			{
			}

			[Token(Token = "0x60036D5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60036D6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60036D8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000889")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D76C", Offset = "0x39D76C")]
		private sealed class <CheckTimeoutHeartbeat>d__76<T> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40028A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x40028A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CoroutineParams<T> cp;

			[Token(Token = "0x40028A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CoroutineClass <>4__this;

			[Token(Token = "0x170005C1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60036DD")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005C2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60036DF")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60036DA")]
			[DebuggerHidden]
			public <CheckTimeoutHeartbeat>d__76(int <>1__state)
			{
			}

			[Token(Token = "0x60036DB")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60036DC")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60036DE")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string[][] _unused;

		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int[][] _unused2;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static long[][] _unused3;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static short[][] _unused4;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static ushort[][] _unused5;

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static ulong[][] _unused6;

		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static uint[][] _unused7;

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static decimal[][] _unused8;

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static double[][] _unused9;

		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static bool[][] _unused91;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static object[][] _unused92;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private static long[][] _unused10;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static int[][] _unused11;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private static float[][] _unused12;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static decimal[][] _unused13;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private static uint[][] _unused14;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static ulong[][] _unused15;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal bool isHearbeatComplete;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		internal bool isPresenceHeartbeatComplete;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		internal bool isSubscribeComplete;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
		internal bool isNonSubscribeComplete;

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IEnumerator SubCoroutine;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private IEnumerator SubTimeoutCoroutine;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IEnumerator NonSubCoroutine;

		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private IEnumerator NonSubTimeoutCoroutine;

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IEnumerator PresenceHeartbeatCoroutine;

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private IEnumerator PresenceHeartbeatTimeoutCoroutine;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IEnumerator HeartbeatCoroutine;

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private IEnumerator HeartbeatTimeoutCoroutine;

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IEnumerator DelayRequestCoroutineHB;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private IEnumerator DelayRequestCoroutinePHB;

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IEnumerator DelayRequestCoroutineSub;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		internal WWW subscribeWww;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal WWW heartbeatWww;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		internal WWW presenceHeartbeatWww;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal WWW nonSubscribeWww;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private EventHandler<EventArgs> subCoroutineComplete;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private EventHandler<EventArgs> nonSubCoroutineComplete;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private EventHandler<EventArgs> presenceHeartbeatCoroutineComplete;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private EventHandler<EventArgs> heartbeatCoroutineComplete;

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float subscribeTimer;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float heartbeatTimer;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float presenceHeartbeatTimer;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float nonSubscribeTimer;

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float heartbeatPauseTimer;

		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float presenceHeartbeatPauseTimer;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float subscribePauseTimer;

		[Token(Token = "0x1400002D")]
		public event EventHandler<EventArgs> SubCoroutineComplete
		{
			[Token(Token = "0x600173E")]
			[Address(RVA = "0x90FD30", Offset = "0x90FD30", VA = "0x90FD30")]
			add
			{
			}
			[Token(Token = "0x600173F")]
			[Address(RVA = "0x90FDF4", Offset = "0x90FDF4", VA = "0x90FDF4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002E")]
		public event EventHandler<EventArgs> NonSubCoroutineComplete
		{
			[Token(Token = "0x6001740")]
			[Address(RVA = "0x90FE7C", Offset = "0x90FE7C", VA = "0x90FE7C")]
			add
			{
			}
			[Token(Token = "0x6001741")]
			[Address(RVA = "0x90FF40", Offset = "0x90FF40", VA = "0x90FF40")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002F")]
		public event EventHandler<EventArgs> PresenceHeartbeatCoroutineComplete
		{
			[Token(Token = "0x6001742")]
			[Address(RVA = "0x90FFC8", Offset = "0x90FFC8", VA = "0x90FFC8")]
			add
			{
			}
			[Token(Token = "0x6001743")]
			[Address(RVA = "0x91008C", Offset = "0x91008C", VA = "0x91008C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000030")]
		public event EventHandler<EventArgs> HeartbeatCoroutineComplete
		{
			[Token(Token = "0x6001744")]
			[Address(RVA = "0x910114", Offset = "0x910114", VA = "0x910114")]
			add
			{
			}
			[Token(Token = "0x6001745")]
			[Address(RVA = "0x9101D8", Offset = "0x9101D8", VA = "0x9101D8")]
			remove
			{
			}
		}

		[Token(Token = "0x6001746")]
		public void DelayStartCoroutine<T>(string url, RequestState<T> pubnubRequestState, int timeout, int pause, CurrentRequestType crt)
		{
		}

		[Token(Token = "0x6001747")]
		public void Run<T>(string url, RequestState<T> pubnubRequestState, int timeout, int pause)
		{
		}

		[Token(Token = "0x6001748")]
		internal void StartCoroutinesByName<T>(string url, RequestState<T> pubnubRequestState, int timeout, int pause, CurrentRequestType crt)
		{
		}

		[Token(Token = "0x6001749")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3ABBCC", Offset = "0x3ABBCC")]
		public IEnumerator DelayRequest<T>(string url, RequestState<T> pubnubRequestState, int timeout, int pause, CurrentRequestType crt)
		{
			return null;
		}

		[Token(Token = "0x600174A")]
		public void ProcessResponse<T>(WWW www, CoroutineParams<T> cp)
		{
		}

		[Token(Token = "0x600174B")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3ABC3C", Offset = "0x3ABC3C")]
		public IEnumerator SendRequestSub<T>(CoroutineParams<T> cp)
		{
			return null;
		}

		[Token(Token = "0x600174C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3ABCAC", Offset = "0x3ABCAC")]
		public IEnumerator SendRequestNonSub<T>(CoroutineParams<T> cp)
		{
			return null;
		}

		[Token(Token = "0x600174D")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3ABD1C", Offset = "0x3ABD1C")]
		public IEnumerator SendRequestPresenceHeartbeat<T>(CoroutineParams<T> cp)
		{
			return null;
		}

		[Token(Token = "0x600174E")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3ABD8C", Offset = "0x3ABD8C")]
		public IEnumerator SendRequestHeartbeat<T>(CoroutineParams<T> cp)
		{
			return null;
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0x910260", Offset = "0x910260", VA = "0x910260")]
		internal void SetComplete(CurrentRequestType crt)
		{
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0x910640", Offset = "0x910640", VA = "0x910640")]
		internal void StopRunningCoroutines(CurrentRequestType crt)
		{
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0x9107D4", Offset = "0x9107D4", VA = "0x9107D4")]
		public bool CheckComplete(CurrentRequestType crt)
		{
			return default(bool);
		}

		[Token(Token = "0x6001752")]
		public void BounceRequest<T>(CurrentRequestType crt, RequestState<T> pubnubRequestState, bool fireEvent)
		{
		}

		[Token(Token = "0x6001753")]
		public void ProcessTimeout<T>(CoroutineParams<T> cp)
		{
		}

		[Token(Token = "0x6001754")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3ABDFC", Offset = "0x3ABDFC")]
		public IEnumerator CheckTimeoutSub<T>(CoroutineParams<T> cp)
		{
			return null;
		}

		[Token(Token = "0x6001755")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3ABE6C", Offset = "0x3ABE6C")]
		public IEnumerator CheckTimeoutNonSub<T>(CoroutineParams<T> cp)
		{
			return null;
		}

		[Token(Token = "0x6001756")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3ABEDC", Offset = "0x3ABEDC")]
		public IEnumerator CheckTimeoutPresenceHeartbeat<T>(CoroutineParams<T> cp)
		{
			return null;
		}

		[Token(Token = "0x6001757")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3ABF4C", Offset = "0x3ABF4C")]
		public IEnumerator CheckTimeoutHeartbeat<T>(CoroutineParams<T> cp)
		{
			return null;
		}

		[Token(Token = "0x6001758")]
		public void FireEvent<T>(string message, bool isError, bool isTimeout, RequestState<T> pubnubRequestState, CurrentRequestType crt)
		{
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0x910A08", Offset = "0x910A08", VA = "0x910A08")]
		public CoroutineClass()
		{
		}
	}
	[Token(Token = "0x2000323")]
	public class PubnubWebResponse
	{
		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private WWW www;

		[Token(Token = "0x17000244")]
		public string ResponseUri
		{
			[Token(Token = "0x600175B")]
			[Address(RVA = "0x88C438", Offset = "0x88C438", VA = "0x88C438")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000245")]
		public Dictionary<string, string> Headers
		{
			[Token(Token = "0x600175C")]
			[Address(RVA = "0x88C460", Offset = "0x88C460", VA = "0x88C460")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0x88C418", Offset = "0x88C418", VA = "0x88C418")]
		public PubnubWebResponse(WWW www)
		{
		}
	}
	[Token(Token = "0x2000324")]
	public class PubnubWebRequest
	{
		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private WWW www;

		[Token(Token = "0x17000246")]
		public string RequestUri
		{
			[Token(Token = "0x600175E")]
			[Address(RVA = "0x88C3C8", Offset = "0x88C3C8", VA = "0x88C3C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000247")]
		public Dictionary<string, string> Headers
		{
			[Token(Token = "0x600175F")]
			[Address(RVA = "0x88C3F0", Offset = "0x88C3F0", VA = "0x88C3F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0x88C3A8", Offset = "0x88C3A8", VA = "0x88C3A8")]
		public PubnubWebRequest(WWW www)
		{
		}
	}
	[Token(Token = "0x2000325")]
	internal class MultiplexExceptionEventArgs<T> : EventArgs
	{
		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal List<ChannelEntity> channelEntities;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal bool reconnectMaxTried;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal bool resumeOnReconnect;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal ResponseType responseType;

		[Token(Token = "0x6001760")]
		public MultiplexExceptionEventArgs()
		{
		}
	}
	[Token(Token = "0x2000326")]
	public class ExceptionHandlers
	{
		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static EventHandler<EventArgs> multiplexException;

		[Token(Token = "0x14000031")]
		public static event EventHandler<EventArgs> MultiplexException
		{
			[Token(Token = "0x6001761")]
			[Address(RVA = "0x910BF0", Offset = "0x910BF0", VA = "0x910BF0")]
			add
			{
			}
			[Token(Token = "0x6001762")]
			[Address(RVA = "0x910CD8", Offset = "0x910CD8", VA = "0x910CD8")]
			remove
			{
			}
		}

		[Token(Token = "0x6001763")]
		internal static void CreateErrorCodeAndCallErrorCallback<T>(int statusCode, CustomEventArgs<T> cea, RequestState<T> requestState, PubnubErrorFilter.Level errorLevel)
		{
		}

		[Token(Token = "0x6001764")]
		internal static void ResponseCallbackErrorOrTimeoutHandler<T>(CustomEventArgs<T> cea, RequestState<T> requestState, PubnubErrorFilter.Level errorLevel)
		{
		}

		[Token(Token = "0x6001765")]
		internal static void ResponseCallbackWebExceptionHandler<T>(CustomEventArgs<T> cea, RequestState<T> requestState, WebException webEx, PubnubErrorFilter.Level errorLevel)
		{
		}

		[Token(Token = "0x6001766")]
		internal static void ResponseCallbackExceptionHandler<T>(CustomEventArgs<T> cea, RequestState<T> requestState, Exception ex, PubnubErrorFilter.Level errorLevel)
		{
		}

		[Token(Token = "0x6001767")]
		internal static void ProcessResponseCallbackExceptionHandler<T>(Exception ex, RequestState<T> asynchRequestState, PubnubErrorFilter.Level errorLevel)
		{
		}

		[Token(Token = "0x6001768")]
		internal static void ProcessResponseCallbackWebExceptionHandler<T>(WebException webEx, RequestState<T> asynchRequestState, PubnubErrorFilter.Level errorLevel)
		{
		}

		[Token(Token = "0x6001769")]
		private static void FireMultiplexException<T>(bool resumeOnReconnect, RequestState<T> requestState)
		{
		}

		[Token(Token = "0x600176A")]
		internal static void UrlRequestCommonExceptionHandler<T>(string message, RequestState<T> requestState, bool requestTimeout, bool resumeOnReconnect, PubnubErrorFilter.Level errorLevel)
		{
		}

		[Token(Token = "0x600176B")]
		internal static void PushNotificationExceptionHandler<T>(RequestState<T> requestState, bool requestTimeout, PubnubErrorFilter.Level errorLevel)
		{
		}

		[Token(Token = "0x600176C")]
		internal static void ChannelGroupExceptionHandler<T>(RequestState<T> requestState, bool requestTimeout, PubnubErrorFilter.Level errorLevel)
		{
		}

		[Token(Token = "0x600176D")]
		internal static void CommonExceptionHandler<T>(RequestState<T> requestState, string message, bool requestTimeout, PubnubErrorFilter.Level errorLevel)
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0x910D78", Offset = "0x910D78", VA = "0x910D78")]
		public ExceptionHandlers()
		{
		}
	}
	[Token(Token = "0x2000327")]
	public sealed class Counter
	{
		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private uint current;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object syncRoot;

		[Token(Token = "0x600176F")]
		[Address(RVA = "0x910A48", Offset = "0x910A48", VA = "0x910A48")]
		public Counter()
		{
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0x910AC4", Offset = "0x910AC4", VA = "0x910AC4")]
		public uint NextValue()
		{
			return default(uint);
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0x910B60", Offset = "0x910B60", VA = "0x910B60")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x2000328")]
	internal static class Helpers
	{
		[Serializable]
		[Token(Token = "0x200088A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D77C", Offset = "0x39D77C")]
		private sealed class <>c
		{
			[Token(Token = "0x40028A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40028A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static Func<object, object> <>9__2_0;

			[Token(Token = "0x40028AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<string, string> <>9__11_0;

			[Token(Token = "0x40028AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public static Func<IGrouping<string, string>, bool> <>9__11_1;

			[Token(Token = "0x40028AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<object, object> <>9__19_0;

			[Token(Token = "0x40028AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public static Func<object, object> <>9__20_0;

			[Token(Token = "0x60036E1")]
			[Address(RVA = "0x914A9C", Offset = "0x914A9C", VA = "0x914A9C")]
			public <>c()
			{
			}

			[Token(Token = "0x60036E2")]
			[Address(RVA = "0x914AA4", Offset = "0x914AA4", VA = "0x914AA4")]
			internal object <CreateListOfSubscribeMessage>b__2_0(object item)
			{
				return null;
			}

			[Token(Token = "0x60036E3")]
			[Address(RVA = "0x914AAC", Offset = "0x914AAC", VA = "0x914AAC")]
			internal string <GetDuplicates>b__11_0(string a)
			{
				return null;
			}

			[Token(Token = "0x60036E4")]
			[Address(RVA = "0x914AB4", Offset = "0x914AB4", VA = "0x914AB4")]
			internal bool <GetDuplicates>b__11_1(IGrouping<string, string> g)
			{
				return default(bool);
			}

			[Token(Token = "0x60036E5")]
			[Address(RVA = "0x914B20", Offset = "0x914B20", VA = "0x914B20")]
			internal object <DecryptCipheredMessage>b__19_0(object item)
			{
				return null;
			}

			[Token(Token = "0x60036E6")]
			[Address(RVA = "0x914B28", Offset = "0x914B28", VA = "0x914B28")]
			internal object <DecryptNonCipheredMessage>b__20_0(object item)
			{
				return null;
			}
		}

		[Token(Token = "0x200088B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D78C", Offset = "0x39D78C")]
		private sealed class <GetDuplicates>d__11 : IEnumerable<string>, IEnumerable, IEnumerator<string>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x40028AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private string <>2__current;

			[Token(Token = "0x40028B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40028B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private string[] rawChannels;

			[Token(Token = "0x40028B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string[] <>3__rawChannels;

			[Token(Token = "0x40028B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private IEnumerator<IGrouping<string, string>> <>7__wrap1;

			[Token(Token = "0x40028B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private IEnumerator<string> <>7__wrap2;

			[Token(Token = "0x170005C3")]
			private string System.Collections.Generic.IEnumerator<System.String>.Current
			{
				[Token(Token = "0x60036EC")]
				[Address(RVA = "0x915390", Offset = "0x915390", VA = "0x915390", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005C4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60036EE")]
				[Address(RVA = "0x915410", Offset = "0x915410", VA = "0x915410", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60036E7")]
			[Address(RVA = "0x912B44", Offset = "0x912B44", VA = "0x912B44")]
			[DebuggerHidden]
			public <GetDuplicates>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60036E8")]
			[Address(RVA = "0x914B30", Offset = "0x914B30", VA = "0x914B30", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60036E9")]
			[Address(RVA = "0x914D38", Offset = "0x914D38", VA = "0x914D38", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60036EA")]
			[Address(RVA = "0x914C64", Offset = "0x914C64", VA = "0x914C64")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60036EB")]
			[Address(RVA = "0x914B90", Offset = "0x914B90", VA = "0x914B90")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x60036ED")]
			[Address(RVA = "0x915398", Offset = "0x915398", VA = "0x915398", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60036EF")]
			[Address(RVA = "0x915418", Offset = "0x915418", VA = "0x915418", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<string> System.Collections.Generic.IEnumerable<System.String>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60036F0")]
			[Address(RVA = "0x9154D8", Offset = "0x9154D8", VA = "0x9154D8", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x200088C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D79C", Offset = "0x39D79C")]
		private sealed class <>c__13<T>
		{
			[Token(Token = "0x40028B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__13<T> <>9;

			[Token(Token = "0x40028B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<string, bool> <>9__13_0;

			[Token(Token = "0x60036F2")]
			public <>c__13()
			{
			}

			[Token(Token = "0x60036F3")]
			internal bool <RemoveDuplicatesCheckAlreadySubscribedAndGetChannelsCommon>b__13_0(string x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200088D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D7AC", Offset = "0x39D7AC")]
		private sealed class <>c__DisplayClass30_0<T>
		{
			[Token(Token = "0x40028B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ChannelIdentity ci;

			[Token(Token = "0x60036F4")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x60036F5")]
			internal bool <FindChannelEntityAndCallback>b__0(ChannelEntity x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0x910D80", Offset = "0x910D80", VA = "0x910D80")]
		internal static TimetokenMetadata CreateTimetokenMetadata(object timeTokenDataObject, string whichTT)
		{
			return null;
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0x910EFC", Offset = "0x910EFC", VA = "0x910EFC")]
		internal static void AddToSubscribeMessageList(object dictObject, ref List<SubscribeMessage> subscribeMessages)
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0x911DF8", Offset = "0x911DF8", VA = "0x911DF8")]
		internal static List<SubscribeMessage> CreateListOfSubscribeMessage(object message)
		{
			return null;
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0x9120F8", Offset = "0x9120F8", VA = "0x9120F8")]
		internal static string BuildJsonUserState(Dictionary<string, object> userStateDictionary)
		{
			return null;
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0x912358", Offset = "0x912358", VA = "0x912358")]
		internal static string BuildJsonUserState(List<ChannelEntity> ce)
		{
			return null;
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0x9125E8", Offset = "0x9125E8", VA = "0x9125E8")]
		internal static string GetNamesFromChannelEntities(List<ChannelEntity> channelEntities, bool isChannelGroup)
		{
			return null;
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0x91282C", Offset = "0x91282C", VA = "0x91282C")]
		internal static string GetNamesFromChannelEntities(List<ChannelEntity> channelEntities)
		{
			return null;
		}

		[Token(Token = "0x6001779")]
		internal static bool UpdateOrAddUserStateOfEntity<T>(string channel, bool isChannelGroup, Dictionary<string, object> userState, bool edit, Action<T> userCallback, Action<PubnubClientError> errorCallback, PubnubErrorFilter.Level errorLevel, ref List<ChannelEntity> channelEntities)
		{
			return default(bool);
		}

		[Token(Token = "0x600177A")]
		internal static bool CheckAndAddExistingUserState<T>(string channel, string channelGroup, Dictionary<string, object> userState, Action<T> userCallback, Action<PubnubClientError> errorCallback, PubnubErrorFilter.Level errorLevel, bool edit, out string returnUserState, out List<ChannelEntity> channelEntities)
		{
			return default(bool);
		}

		[Token(Token = "0x600177B")]
		internal static ChannelEntity CreateChannelEntity<T>(string channelOrChannelGroupName2, bool isAwaitingConnectCallback, bool isChannelGroup, Dictionary<string, object> userState, Action<T> userCallback, Action<T> connectCallback, Action<PubnubClientError> errorCallback, Action<T> disconnectCallback, Action<T> wildcardPresenceCallback)
		{
			return null;
		}

		[Token(Token = "0x600177C")]
		internal static List<ChannelEntity> CreateChannelEntity<T>(string[] channelOrChannelGroupNames, bool isAwaitingConnectCallback, bool isChannelGroup, Dictionary<string, object> userState, Action<T> userCallback, Action<T> connectCallback, Action<PubnubClientError> errorCallback, Action<T> disconnectCallback, Action<T> wildcardPresenceCallback)
		{
			return null;
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0x912AB8", Offset = "0x912AB8", VA = "0x912AB8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3ABFBC", Offset = "0x3ABFBC")]
		internal static IEnumerable<string> GetDuplicates(string[] rawChannels)
		{
			return null;
		}

		[Token(Token = "0x600177E")]
		internal static bool CreateChannelEntityAndAddToSubscribe<T>(ResponseType type, string[] rawChannels, bool isChannelGroup, Action<T> userCallback, Action<T> connectCallback, Action<PubnubClientError> errorCallback, Action<T> wildcardPresenceCallback, Action<T> disconnectCallback, PubnubErrorFilter.Level errorLevel, bool unsubscribeCheck, ref List<ChannelEntity> channelEntities)
		{
			return default(bool);
		}

		[Token(Token = "0x600177F")]
		internal static bool RemoveDuplicatesCheckAlreadySubscribedAndGetChannelsCommon<T>(ResponseType type, Action<T> userCallback, Action<T> connectCallback, Action<PubnubClientError> errorCallback, Action<T> wildcardPresenceCallback, Action<T> disconnectCallback, string[] channelsOrChannelGroups, bool isChannelGroup, PubnubErrorFilter.Level errorLevel, bool unsubscribeCheck, ref List<ChannelEntity> channelEntities)
		{
			return default(bool);
		}

		[Token(Token = "0x6001780")]
		internal static bool RemoveDuplicatesCheckAlreadySubscribedAndGetChannels<T>(ResponseType type, Action<T> userCallback, Action<T> connectCallback, Action<PubnubClientError> errorCallback, Action<T> wildcardPresenceCallback, Action<T> disconnectCallback, string[] rawChannels, string[] rawChannelGroups, PubnubErrorFilter.Level errorLevel, bool unsubscribeCheck, out List<ChannelEntity> channelEntities)
		{
			return default(bool);
		}

		[Token(Token = "0x6001781")]
		internal static void ProcessResponseCallbacksV2<T>(ref SubscribeEnvelope resultSubscribeEnvelope, RequestState<T> asynchRequestState, string cipherKey, IJsonPluggableLibrary jsonPluggableLibrary)
		{
		}

		[Token(Token = "0x6001782")]
		internal static void ProcessResponseCallbacks<T>(ref List<object> result, RequestState<T> asynchRequestState, string cipherKey, IJsonPluggableLibrary jsonPluggableLibrary)
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0x912B70", Offset = "0x912B70", VA = "0x912B70")]
		internal static string JsonEncodePublishMsg(object originalMessage, string cipherKey, IJsonPluggableLibrary jsonPluggableLibrary)
		{
			return null;
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0x912D34", Offset = "0x912D34", VA = "0x912D34")]
		internal static object DecodeMessage(PubnubCrypto aes, object element, List<ChannelEntity> channelEntities, IJsonPluggableLibrary jsonPluggableLibrary, PubnubErrorFilter.Level errorLevel)
		{
			return null;
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0x912F4C", Offset = "0x912F4C", VA = "0x912F4C")]
		internal static List<object> DecryptCipheredMessage(List<object> message, List<ChannelEntity> channelEntities, string cipherKey, IJsonPluggableLibrary jsonPluggableLibrary, PubnubErrorFilter.Level errorLevel)
		{
			return null;
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0x913488", Offset = "0x913488", VA = "0x913488")]
		internal static List<object> DecryptNonCipheredMessage(List<object> message)
		{
			return null;
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0x913970", Offset = "0x913970", VA = "0x913970")]
		internal static List<object> DecodeDecryptLoop(List<object> message, List<ChannelEntity> channelEntities, string cipherKey, IJsonPluggableLibrary jsonPluggableLibrary, PubnubErrorFilter.Level errorLevel)
		{
			return null;
		}

		[Token(Token = "0x6001788")]
		internal static void CheckSubscribedChannelsAndSendCallbacks<T>(List<ChannelEntity> channelEntities, ResponseType type, int pubnubNetworkCheckRetries, PubnubErrorFilter.Level errorLevel)
		{
		}

		[Token(Token = "0x6001789")]
		public static void WrapResultBasedOnResponseType<T>(RequestState<T> pubnubRequestState, string jsonString, IJsonPluggableLibrary jsonPluggableLibrary, PubnubErrorFilter.Level errorLevel, string cipherKey, ref List<object> result)
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0x9139D8", Offset = "0x9139D8", VA = "0x9139D8")]
		internal static List<object> DeserializeAndAddToResult(string jsonString, string multiChannel, IJsonPluggableLibrary jsonPluggableLibrary, bool addChannel)
		{
			return null;
		}

		[Token(Token = "0x600178B")]
		internal static void ProcessWrapResultBasedOnResponseTypeException<T>(RequestState<T> pubnubRequestState, PubnubErrorFilter.Level errorLevel, Exception ex)
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0x913B3C", Offset = "0x913B3C", VA = "0x913B3C")]
		internal static void CreatePNMessageResult(SubscribeMessage subscribeMessage, out PNMessageResult messageResult)
		{
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0x913E28", Offset = "0x913E28", VA = "0x913E28")]
		internal static PNPresenceEvent CreatePNPresenceEvent(object payload)
		{
			return null;
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0x914130", Offset = "0x914130", VA = "0x914130")]
		internal static void CreatePNPresenceEventResult(SubscribeMessage subscribeMessage, out PNPresenceEventResult messageResult)
		{
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0x914400", Offset = "0x914400", VA = "0x914400")]
		internal static void AddMessageToListV2(string cipherKey, IJsonPluggableLibrary jsonPluggableLibrary, SubscribeMessage subscribeMessage, ChannelEntity ce, out List<object> itemMessage)
		{
		}

		[Token(Token = "0x6001790")]
		internal static void FindChannelEntityAndCallback<T>(SubscribeMessage subscribeMessage, List<ChannelEntity> channelEntities, string cipherKey, IJsonPluggableLibrary jsonPluggableLibrary, ChannelIdentity ci)
		{
		}

		[Token(Token = "0x6001791")]
		internal static void ResponseToUserCallbackForSubscribeV2<T>(List<SubscribeMessage> subscribeMessages, List<ChannelEntity> channelEntities, string cipherKey, IJsonPluggableLibrary jsonPluggableLibrary)
		{
		}

		[Token(Token = "0x6001792")]
		internal static void ResponseToUserCallback<T>(List<object> result, RequestState<T> asynchRequestState, string cipherKey, IJsonPluggableLibrary jsonPluggableLibrary)
		{
		}

		[Token(Token = "0x6001793")]
		internal static void ResponseToConnectCallback<T>(RequestState<T> asynchRequestState, IJsonPluggableLibrary jsonPluggableLibrary)
		{
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0x9148B4", Offset = "0x9148B4", VA = "0x9148B4")]
		internal static List<object> CreateJsonResponse(string message, string channel, IJsonPluggableLibrary jsonPluggableLibrary)
		{
			return null;
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0x914A00", Offset = "0x914A00", VA = "0x914A00")]
		internal static PubnubErrorCode GetTimeOutErrorCode(ResponseType responseType)
		{
			return default(PubnubErrorCode);
		}

		[Token(Token = "0x6001796")]
		internal static PubnubClientError CreatePubnubClientError<T>(Exception ex, RequestState<T> requestState, List<ChannelEntity> channelEntities, PubnubErrorCode errorCode, PubnubErrorSeverity severity)
		{
			return null;
		}

		[Token(Token = "0x6001797")]
		internal static PubnubClientError CreatePubnubClientError<T>(string message, RequestState<T> requestState, PubnubErrorCode errorCode, PubnubErrorSeverity severity, string channels, string channelGroups)
		{
			return null;
		}

		[Token(Token = "0x6001798")]
		internal static PubnubClientError CreatePubnubClientError<T>(Exception ex, RequestState<T> requestState, PubnubErrorCode errorCode, PubnubErrorSeverity severity, string channels, string channelGroups)
		{
			return null;
		}

		[Token(Token = "0x6001799")]
		internal static PubnubClientError CreatePubnubClientError<T>(string message, RequestState<T> requestState, List<ChannelEntity> channelEntities, PubnubErrorCode errorCode, PubnubErrorSeverity severity)
		{
			return null;
		}

		[Token(Token = "0x600179A")]
		internal static PubnubClientError CreatePubnubClientError<T>(WebException ex, RequestState<T> requestState, string channel, PubnubErrorSeverity severity)
		{
			return null;
		}
	}
	[Token(Token = "0x2000329")]
	public interface IPubnubUnitTest
	{
		[Token(Token = "0x17000248")]
		bool EnableStubTest
		{
			[Token(Token = "0x600179B")]
			get;
			[Token(Token = "0x600179C")]
			set;
		}

		[Token(Token = "0x17000249")]
		string TestClassName
		{
			[Token(Token = "0x600179D")]
			get;
			[Token(Token = "0x600179E")]
			set;
		}

		[Token(Token = "0x1700024A")]
		string TestCaseName
		{
			[Token(Token = "0x600179F")]
			get;
			[Token(Token = "0x60017A0")]
			set;
		}
	}
	[Token(Token = "0x200032A")]
	public interface IJsonPluggableLibrary
	{
		[Token(Token = "0x60017A1")]
		bool IsArrayCompatible(string jsonString);

		[Token(Token = "0x60017A2")]
		bool IsDictionaryCompatible(string jsonString);

		[Token(Token = "0x60017A3")]
		string SerializeToJsonString(object objectToSerialize);

		[Token(Token = "0x60017A4")]
		List<object> DeserializeToListOfObject(string jsonString);

		[Token(Token = "0x60017A5")]
		object DeserializeToObject(string jsonString);

		[Token(Token = "0x60017A6")]
		Dictionary<string, object> DeserializeToDictionaryOfObject(string jsonString);
	}
	[Token(Token = "0x200032B")]
	public static class JSONSerializer
	{
		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IJsonPluggableLibrary jsonPluggableLibrary;

		[Token(Token = "0x1700024B")]
		public static IJsonPluggableLibrary JsonPluggableLibrary
		{
			[Token(Token = "0x60017A7")]
			[Address(RVA = "0x9154DC", Offset = "0x9154DC", VA = "0x9154DC")]
			get
			{
				return null;
			}
		}
	}
	[Token(Token = "0x200032C")]
	public class LoggingMethod : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x200088E")]
		public enum Level
		{
			[Token(Token = "0x40028B9")]
			Off,
			[Token(Token = "0x40028BA")]
			Error,
			[Token(Token = "0x40028BB")]
			Info,
			[Token(Token = "0x40028BC")]
			Verbose,
			[Token(Token = "0x40028BD")]
			Warning
		}

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int logLevel;

		[Token(Token = "0x1700024C")]
		public static Level LogLevel
		{
			[Token(Token = "0x60017A9")]
			[Address(RVA = "0x915558", Offset = "0x915558", VA = "0x915558")]
			get
			{
				return default(Level);
			}
			[Token(Token = "0x60017AA")]
			[Address(RVA = "0x9155D0", Offset = "0x9155D0", VA = "0x9155D0")]
			set
			{
			}
		}

		[Token(Token = "0x1700024D")]
		public static bool LevelError
		{
			[Token(Token = "0x60017AB")]
			[Address(RVA = "0x9104BC", Offset = "0x9104BC", VA = "0x9104BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024E")]
		public static bool LevelInfo
		{
			[Token(Token = "0x60017AC")]
			[Address(RVA = "0x91564C", Offset = "0x91564C", VA = "0x91564C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024F")]
		public static bool LevelVerbose
		{
			[Token(Token = "0x60017AD")]
			[Address(RVA = "0x915724", Offset = "0x915724", VA = "0x915724")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000250")]
		public static bool LevelWarning
		{
			[Token(Token = "0x60017AE")]
			[Address(RVA = "0x9157FC", Offset = "0x9157FC", VA = "0x9157FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x910594", Offset = "0x910594", VA = "0x910594")]
		public static void WriteToLog(string logText, bool writeToLog)
		{
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x9158D4", Offset = "0x9158D4", VA = "0x9158D4")]
		public LoggingMethod()
		{
		}
	}
	[Token(Token = "0x200032D")]
	public enum PubnubErrorSeverity
	{
		[Token(Token = "0x4001856")]
		Critical = 1,
		[Token(Token = "0x4001857")]
		Warn,
		[Token(Token = "0x4001858")]
		Info
	}
	[Token(Token = "0x200032E")]
	public enum PubnubMessageSource
	{
		[Token(Token = "0x400185A")]
		Server,
		[Token(Token = "0x400185B")]
		Client
	}
	[Token(Token = "0x200032F")]
	public class PubnubClientError
	{
		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int _statusCode;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private PubnubErrorSeverity _errorSeverity;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _isDotNetException;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private PubnubMessageSource _messageSource;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _message;

		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private string _channel;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _channelGroup;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Exception _detailedDotNetException;

		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PubnubWebRequest _pubnubWebRequest;

		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private PubnubWebResponse _pubnubWebResponse;

		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _description;

		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private DateTime _dateTimeGMT;

		[Token(Token = "0x17000251")]
		public int StatusCode
		{
			[Token(Token = "0x60017B7")]
			[Address(RVA = "0x91BB3C", Offset = "0x91BB3C", VA = "0x91BB3C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000252")]
		public PubnubErrorSeverity Severity
		{
			[Token(Token = "0x60017B8")]
			[Address(RVA = "0x91BB44", Offset = "0x91BB44", VA = "0x91BB44")]
			get
			{
				return default(PubnubErrorSeverity);
			}
		}

		[Token(Token = "0x17000253")]
		public PubnubMessageSource MessageSource
		{
			[Token(Token = "0x60017B9")]
			[Address(RVA = "0x91BB4C", Offset = "0x91BB4C", VA = "0x91BB4C")]
			get
			{
				return default(PubnubMessageSource);
			}
		}

		[Token(Token = "0x17000254")]
		public bool IsDotNetException
		{
			[Token(Token = "0x60017BA")]
			[Address(RVA = "0x91BB54", Offset = "0x91BB54", VA = "0x91BB54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000255")]
		public string Message
		{
			[Token(Token = "0x60017BB")]
			[Address(RVA = "0x91BB5C", Offset = "0x91BB5C", VA = "0x91BB5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000256")]
		public Exception DetailedDotNetException
		{
			[Token(Token = "0x60017BC")]
			[Address(RVA = "0x91BB64", Offset = "0x91BB64", VA = "0x91BB64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000257")]
		public PubnubWebRequest PubnubWebRequest
		{
			[Token(Token = "0x60017BD")]
			[Address(RVA = "0x91BB6C", Offset = "0x91BB6C", VA = "0x91BB6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000258")]
		public PubnubWebResponse PubnubWebResponse
		{
			[Token(Token = "0x60017BE")]
			[Address(RVA = "0x91BB74", Offset = "0x91BB74", VA = "0x91BB74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000259")]
		public string Channel
		{
			[Token(Token = "0x60017BF")]
			[Address(RVA = "0x91BB7C", Offset = "0x91BB7C", VA = "0x91BB7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025A")]
		public string ChannelGroup
		{
			[Token(Token = "0x60017C0")]
			[Address(RVA = "0x91BB84", Offset = "0x91BB84", VA = "0x91BB84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025B")]
		public string Description
		{
			[Token(Token = "0x60017C1")]
			[Address(RVA = "0x91BB8C", Offset = "0x91BB8C", VA = "0x91BB8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025C")]
		public DateTime ErrorDateTimeGMT
		{
			[Token(Token = "0x60017C2")]
			[Address(RVA = "0x91BB94", Offset = "0x91BB94", VA = "0x91BB94")]
			get
			{
				return default(DateTime);
			}
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0x91B864", Offset = "0x91B864", VA = "0x91B864")]
		public PubnubClientError()
		{
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0x91B8D4", Offset = "0x91B8D4", VA = "0x91B8D4")]
		public PubnubClientError(int statusCode, PubnubErrorSeverity errorSeverity, bool isDotNetException, string message, Exception detailedDotNetException, PubnubMessageSource source, PubnubWebRequest pubnubWebRequest, PubnubWebResponse pubnubWebResponse, string description, List<ChannelEntity> channelEntitles)
		{
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0x91B960", Offset = "0x91B960", VA = "0x91B960")]
		public PubnubClientError(int statusCode, PubnubErrorSeverity errorSeverity, bool isDotNetException, string message, Exception detailedDotNetException, PubnubMessageSource source, PubnubWebRequest pubnubWebRequest, PubnubWebResponse pubnubWebResponse, string description, string channels, string channelGroups)
		{
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0x91BA9C", Offset = "0x91BA9C", VA = "0x91BA9C")]
		public PubnubClientError(int statusCode, PubnubErrorSeverity errorSeverity, string message, PubnubMessageSource source, PubnubWebRequest pubnubWebRequest, PubnubWebResponse pubnubWebResponse, string description, List<ChannelEntity> channelEntitles)
		{
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0x91BAE8", Offset = "0x91BAE8", VA = "0x91BAE8")]
		public PubnubClientError(int statusCode, PubnubErrorSeverity errorSeverity, string message, PubnubMessageSource source, PubnubWebRequest pubnubWebRequest, PubnubWebResponse pubnubWebResponse, string description, string channels, string channelGroups)
		{
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x91BBA0", Offset = "0x91BBA0", VA = "0x91BBA0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000330")]
	public class PubnubErrorFilter
	{
		[Token(Token = "0x200088F")]
		public enum Level
		{
			[Token(Token = "0x40028BF")]
			Critical = 1,
			[Token(Token = "0x40028C0")]
			Warning,
			[Token(Token = "0x40028C1")]
			Info
		}

		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int errorLevel;

		[Token(Token = "0x1700025D")]
		public static Level ErrorLevel
		{
			[Token(Token = "0x60017C4")]
			[Address(RVA = "0x88A7EC", Offset = "0x88A7EC", VA = "0x88A7EC")]
			get
			{
				return default(Level);
			}
			[Token(Token = "0x60017C5")]
			[Address(RVA = "0x88A864", Offset = "0x88A864", VA = "0x88A864")]
			set
			{
			}
		}

		[Token(Token = "0x1700025E")]
		public static bool Critical
		{
			[Token(Token = "0x60017C6")]
			[Address(RVA = "0x88A8E0", Offset = "0x88A8E0", VA = "0x88A8E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700025F")]
		public static bool Warn
		{
			[Token(Token = "0x60017C7")]
			[Address(RVA = "0x88A964", Offset = "0x88A964", VA = "0x88A964")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000260")]
		public static bool Info
		{
			[Token(Token = "0x60017C8")]
			[Address(RVA = "0x88A9E8", Offset = "0x88A9E8", VA = "0x88A9E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0x88AA6C", Offset = "0x88AA6C", VA = "0x88AA6C")]
		public PubnubErrorFilter()
		{
		}
	}
	[Token(Token = "0x2000331")]
	internal static class PubnubErrorCodeHelper
	{
		[Token(Token = "0x60017CB")]
		[Address(RVA = "0x889EDC", Offset = "0x889EDC", VA = "0x889EDC")]
		public static PubnubErrorCode GetErrorType(WebExceptionStatus webExceptionStatus, string webExceptionMessage)
		{
			return default(PubnubErrorCode);
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0x88A088", Offset = "0x88A088", VA = "0x88A088")]
		public static PubnubErrorCode GetErrorType(Exception ex)
		{
			return default(PubnubErrorCode);
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x88A458", Offset = "0x88A458", VA = "0x88A458")]
		public static PubnubErrorCode GetErrorType(int statusCode, string httpErrorCodeMessage)
		{
			return default(PubnubErrorCode);
		}
	}
	[Token(Token = "0x2000332")]
	public enum PubnubErrorCode
	{
		[Token(Token = "0x400186A")]
		None = 0,
		[Token(Token = "0x400186B")]
		NameResolutionFailure = 103,
		[Token(Token = "0x400186C")]
		PubnubMessageDecryptException = 104,
		[Token(Token = "0x400186D")]
		WebRequestCanceled = 105,
		[Token(Token = "0x400186E")]
		ConnectFailure = 106,
		[Token(Token = "0x400186F")]
		PubnubObjectDisposedException = 107,
		[Token(Token = "0x4001870")]
		PubnubSocketConnectException = 108,
		[Token(Token = "0x4001871")]
		NoInternet = 109,
		[Token(Token = "0x4001872")]
		YesInternet = 110,
		[Token(Token = "0x4001873")]
		DuplicateChannel = 111,
		[Token(Token = "0x4001874")]
		AlreadySubscribed = 112,
		[Token(Token = "0x4001875")]
		AlreadyPresenceSubscribed = 113,
		[Token(Token = "0x4001876")]
		PubnubCryptographicException = 114,
		[Token(Token = "0x4001877")]
		ProtocolError = 115,
		[Token(Token = "0x4001878")]
		ServerProtocolViolation = 116,
		[Token(Token = "0x4001879")]
		InvalidChannel = 117,
		[Token(Token = "0x400187A")]
		NotSubscribed = 118,
		[Token(Token = "0x400187B")]
		NotPresenceSubscribed = 119,
		[Token(Token = "0x400187C")]
		UnsubscribeFailed = 120,
		[Token(Token = "0x400187D")]
		PresenceUnsubscribeFailed = 121,
		[Token(Token = "0x400187E")]
		NoInternetRetryConnect = 122,
		[Token(Token = "0x400187F")]
		UnsubscribedAfterMaxRetries = 123,
		[Token(Token = "0x4001880")]
		PresenceUnsubscribedAfterMaxRetries = 124,
		[Token(Token = "0x4001881")]
		PublishOperationTimeout = 125,
		[Token(Token = "0x4001882")]
		HereNowOperationTimeout = 126,
		[Token(Token = "0x4001883")]
		DetailedHistoryOperationTimeout = 127,
		[Token(Token = "0x4001884")]
		TimeOperationTimeout = 128,
		[Token(Token = "0x4001885")]
		PubnubInterOpSEHException = 129,
		[Token(Token = "0x4001886")]
		PubnubClientMachineSleep = 130,
		[Token(Token = "0x4001887")]
		SetUserStateTimeout = 131,
		[Token(Token = "0x4001888")]
		GetUserStateTimeout = 132,
		[Token(Token = "0x4001889")]
		WhereNowOperationTimeout = 133,
		[Token(Token = "0x400188A")]
		GlobalHereNowOperationTimeout = 134,
		[Token(Token = "0x400188B")]
		PAMAccessOperationTimeout = 135,
		[Token(Token = "0x400188C")]
		UserStateUnchanged = 136,
		[Token(Token = "0x400188D")]
		PushNotificationTimeout = 137,
		[Token(Token = "0x400188E")]
		OperationTimeout = 138,
		[Token(Token = "0x400188F")]
		ChannelGroupTimeout = 139,
		[Token(Token = "0x4001890")]
		DuplicateChannelGroup = 140,
		[Token(Token = "0x4001891")]
		ReceiveFailure = 141,
		[Token(Token = "0x4001892")]
		MessageTooLarge = 4000,
		[Token(Token = "0x4001893")]
		BadRequest = 4001,
		[Token(Token = "0x4001894")]
		InvalidKey = 4002,
		[Token(Token = "0x4001895")]
		NoUuidSpecified = 4003,
		[Token(Token = "0x4001896")]
		InvalidTimestamp = 4004,
		[Token(Token = "0x4001897")]
		InvalidSubscribeKey = 4010,
		[Token(Token = "0x4001898")]
		PamNotEnabled = 4020,
		[Token(Token = "0x4001899")]
		Forbidden = 4030,
		[Token(Token = "0x400189A")]
		SignatureDoesNotMatch = 4031,
		[Token(Token = "0x400189B")]
		NotFound = 4040,
		[Token(Token = "0x400189C")]
		RequestUriTooLong = 4140,
		[Token(Token = "0x400189D")]
		InternalServerError = 5000,
		[Token(Token = "0x400189E")]
		BadGateway = 5020,
		[Token(Token = "0x400189F")]
		ServiceUnavailable = 5030,
		[Token(Token = "0x40018A0")]
		GatewayTimeout = 5040
	}
	[Token(Token = "0x2000333")]
	internal static class PubnubErrorCodeDescription
	{
		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<int, string> dictionaryCodes;

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0x889140", Offset = "0x889140", VA = "0x889140")]
		static PubnubErrorCodeDescription()
		{
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x889DC4", Offset = "0x889DC4", VA = "0x889DC4")]
		public static string GetStatusCodeDescription(PubnubErrorCode pubnubErrorCode)
		{
			return null;
		}
	}
	[Token(Token = "0x2000334")]
	internal class MD5CryptoServiceProvider : MD5
	{
		[Token(Token = "0x60017D0")]
		[Address(RVA = "0x9186B4", Offset = "0x9186B4", VA = "0x9186B4")]
		public MD5CryptoServiceProvider()
		{
		}
	}
	[Token(Token = "0x2000335")]
	internal class MD5 : IDisposable
	{
		[Token(Token = "0x40018A2")]
		private const byte S11 = 7;

		[Token(Token = "0x40018A3")]
		private const byte S12 = 12;

		[Token(Token = "0x40018A4")]
		private const byte S13 = 17;

		[Token(Token = "0x40018A5")]
		private const byte S14 = 22;

		[Token(Token = "0x40018A6")]
		private const byte S21 = 5;

		[Token(Token = "0x40018A7")]
		private const byte S22 = 9;

		[Token(Token = "0x40018A8")]
		private const byte S23 = 14;

		[Token(Token = "0x40018A9")]
		private const byte S24 = 20;

		[Token(Token = "0x40018AA")]
		private const byte S31 = 4;

		[Token(Token = "0x40018AB")]
		private const byte S32 = 11;

		[Token(Token = "0x40018AC")]
		private const byte S33 = 16;

		[Token(Token = "0x40018AD")]
		private const byte S34 = 23;

		[Token(Token = "0x40018AE")]
		private const byte S41 = 6;

		[Token(Token = "0x40018AF")]
		private const byte S42 = 10;

		[Token(Token = "0x40018B0")]
		private const byte S43 = 15;

		[Token(Token = "0x40018B1")]
		private const byte S44 = 21;

		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte[] PADDING;

		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private uint[] state;

		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private uint[] count;

		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private byte[] buffer;

		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected byte[] HashValue;

		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected int State;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected int HashSizeValue;

		[Token(Token = "0x17000261")]
		public virtual bool CanReuseTransform
		{
			[Token(Token = "0x60017E4")]
			[Address(RVA = "0x917EB0", Offset = "0x917EB0", VA = "0x917EB0", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000262")]
		public virtual bool CanTransformMultipleBlocks
		{
			[Token(Token = "0x60017E5")]
			[Address(RVA = "0x917EB8", Offset = "0x917EB8", VA = "0x917EB8", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000263")]
		public virtual byte[] Hash
		{
			[Token(Token = "0x60017E6")]
			[Address(RVA = "0x917EC0", Offset = "0x917EC0", VA = "0x917EC0", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000264")]
		public virtual int HashSize
		{
			[Token(Token = "0x60017E7")]
			[Address(RVA = "0x917FB4", Offset = "0x917FB4", VA = "0x917FB4", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000265")]
		public virtual int InputBlockSize
		{
			[Token(Token = "0x60017E8")]
			[Address(RVA = "0x917FBC", Offset = "0x917FBC", VA = "0x917FBC", Slot = "12")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000266")]
		public virtual int OutputBlockSize
		{
			[Token(Token = "0x60017E9")]
			[Address(RVA = "0x917FC4", Offset = "0x917FC4", VA = "0x917FC4", Slot = "13")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0x9158E0", Offset = "0x9158E0", VA = "0x9158E0")]
		public static MD5 Create(string hashName)
		{
			return null;
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0x915A58", Offset = "0x915A58", VA = "0x915A58")]
		public static string GetMd5String(string source)
		{
			return null;
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0x915C08", Offset = "0x915C08", VA = "0x915C08")]
		public static MD5 Create()
		{
			return null;
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0x915CA4", Offset = "0x915CA4", VA = "0x915CA4")]
		private static uint F(uint x, uint y, uint z)
		{
			return default(uint);
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0x915CB4", Offset = "0x915CB4", VA = "0x915CB4")]
		private static uint G(uint x, uint y, uint z)
		{
			return default(uint);
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0x915CC4", Offset = "0x915CC4", VA = "0x915CC4")]
		private static uint H(uint x, uint y, uint z)
		{
			return default(uint);
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x915CD0", Offset = "0x915CD0", VA = "0x915CD0")]
		private static uint I(uint x, uint y, uint z)
		{
			return default(uint);
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0x915CE0", Offset = "0x915CE0", VA = "0x915CE0")]
		private static uint ROTATE_LEFT(uint x, byte n)
		{
			return default(uint);
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0x915CF0", Offset = "0x915CF0", VA = "0x915CF0")]
		private static void FF(ref uint a, uint b, uint c, uint d, uint x, byte s, uint ac)
		{
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0x915DB0", Offset = "0x915DB0", VA = "0x915DB0")]
		private static void GG(ref uint a, uint b, uint c, uint d, uint x, byte s, uint ac)
		{
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0x915E70", Offset = "0x915E70", VA = "0x915E70")]
		private static void HH(ref uint a, uint b, uint c, uint d, uint x, byte s, uint ac)
		{
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0x915F2C", Offset = "0x915F2C", VA = "0x915F2C")]
		private static void II(ref uint a, uint b, uint c, uint d, uint x, byte s, uint ac)
		{
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0x9159A4", Offset = "0x9159A4", VA = "0x9159A4")]
		internal MD5()
		{
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0x915FEC", Offset = "0x915FEC", VA = "0x915FEC", Slot = "5")]
		public virtual void Initialize()
		{
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0x916128", Offset = "0x916128", VA = "0x916128", Slot = "6")]
		protected virtual void HashCore(byte[] input, int offset, int count)
		{
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0x9178E8", Offset = "0x9178E8", VA = "0x9178E8", Slot = "7")]
		protected virtual byte[] HashFinal()
		{
			return null;
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0x9162B4", Offset = "0x9162B4", VA = "0x9162B4")]
		private void Transform(byte[] block, int offset)
		{
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0x917BAC", Offset = "0x917BAC", VA = "0x917BAC")]
		private static void Encode(byte[] output, int outputOffset, uint[] input, int inputOffset, int count)
		{
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0x917D58", Offset = "0x917D58", VA = "0x917D58")]
		private static void Decode(uint[] output, int outputOffset, byte[] input, int inputOffset, int count)
		{
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0x917FCC", Offset = "0x917FCC", VA = "0x917FCC")]
		public void Clear()
		{
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0x915C68", Offset = "0x915C68", VA = "0x915C68")]
		public byte[] ComputeHash(byte[] buffer)
		{
			return null;
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0x917FE0", Offset = "0x917FE0", VA = "0x917FE0")]
		public byte[] ComputeHash(byte[] buffer, int offset, int count)
		{
			return null;
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0x9180F0", Offset = "0x9180F0", VA = "0x9180F0")]
		public byte[] ComputeHash(Stream inputStream)
		{
			return null;
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0x91823C", Offset = "0x91823C", VA = "0x91823C")]
		public int TransformBlock(byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset)
		{
			return default(int);
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0x918404", Offset = "0x918404", VA = "0x918404")]
		public byte[] TransformFinalBlock(byte[] inputBuffer, int inputOffset, int inputCount)
		{
			return null;
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0x9185E8", Offset = "0x9185E8", VA = "0x9185E8", Slot = "14")]
		protected virtual void Dispose(bool disposing)
		{
		}

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0x918600", Offset = "0x918600", VA = "0x918600", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000336")]
	public abstract class PubnubCryptoBase
	{
		[Serializable]
		[Token(Token = "0x2000890")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D7BC", Offset = "0x39D7BC")]
		private sealed class <>c
		{
			[Token(Token = "0x40028C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40028C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static MatchEvaluator <>9__7_0;

			[Token(Token = "0x60036F7")]
			[Address(RVA = "0x889060", Offset = "0x889060", VA = "0x889060")]
			public <>c()
			{
			}

			[Token(Token = "0x60036F8")]
			[Address(RVA = "0x889068", Offset = "0x889068", VA = "0x889068")]
			internal string <ConvertHexToUnicodeChars>b__7_0(Match m)
			{
				return null;
			}
		}

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private string cipherKey;

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0x88822C", Offset = "0x88822C", VA = "0x88822C")]
		public PubnubCryptoBase(string cipher_key)
		{
		}

		[Token(Token = "0x60017F4")]
		protected abstract string ComputeHashRaw(string input);

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0x8888A4", Offset = "0x8888A4", VA = "0x8888A4")]
		protected string GetEncryptionKey()
		{
			return null;
		}

		[Token(Token = "0x60017F6")]
		protected abstract string EncryptOrDecrypt(bool type, string plainStr);

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0x888ACC", Offset = "0x888ACC", VA = "0x888ACC")]
		public string Encrypt(string plainText)
		{
			return null;
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0x888B94", Offset = "0x888B94", VA = "0x888B94")]
		public string Decrypt(string cipherText)
		{
			return null;
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0x888C50", Offset = "0x888C50", VA = "0x888C50")]
		public static string ConvertHexToUnicodeChars(string value)
		{
			return null;
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0x88897C", Offset = "0x88897C", VA = "0x88897C")]
		protected string EncodeNonAsciiCharacters(string value)
		{
			return null;
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0x888D90", Offset = "0x888D90", VA = "0x888D90")]
		public string PubnubAccessManagerSign(string key, string data)
		{
			return null;
		}
	}
	[Token(Token = "0x2000337")]
	public class Pubnub
	{
		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private PubnubUnity pubnub;

		[Token(Token = "0x17000267")]
		public string FilterExpression
		{
			[Token(Token = "0x600188D")]
			[Address(RVA = "0x91AD04", Offset = "0x91AD04", VA = "0x91AD04")]
			get
			{
				return null;
			}
			[Token(Token = "0x600188E")]
			[Address(RVA = "0x91AD24", Offset = "0x91AD24", VA = "0x91AD24")]
			set
			{
			}
		}

		[Token(Token = "0x17000268")]
		public string AuthenticationKey
		{
			[Token(Token = "0x600188F")]
			[Address(RVA = "0x91AD54", Offset = "0x91AD54", VA = "0x91AD54")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001890")]
			[Address(RVA = "0x91AD74", Offset = "0x91AD74", VA = "0x91AD74")]
			set
			{
			}
		}

		[Token(Token = "0x17000269")]
		public LoggingMethod.Level PubnubLogLevel
		{
			[Token(Token = "0x6001891")]
			[Address(RVA = "0x91AD98", Offset = "0x91AD98", VA = "0x91AD98")]
			get
			{
				return default(LoggingMethod.Level);
			}
			[Token(Token = "0x6001892")]
			[Address(RVA = "0x91ADB8", Offset = "0x91ADB8", VA = "0x91ADB8")]
			set
			{
			}
		}

		[Token(Token = "0x1700026A")]
		public PubnubErrorFilter.Level PubnubErrorLevel
		{
			[Token(Token = "0x6001893")]
			[Address(RVA = "0x91ADE8", Offset = "0x91ADE8", VA = "0x91ADE8")]
			get
			{
				return default(PubnubErrorFilter.Level);
			}
			[Token(Token = "0x6001894")]
			[Address(RVA = "0x91AE08", Offset = "0x91AE08", VA = "0x91AE08")]
			set
			{
			}
		}

		[Token(Token = "0x1700026B")]
		public int LocalClientHeartbeatInterval
		{
			[Token(Token = "0x6001895")]
			[Address(RVA = "0x91AE38", Offset = "0x91AE38", VA = "0x91AE38")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001896")]
			[Address(RVA = "0x91AE58", Offset = "0x91AE58", VA = "0x91AE58")]
			set
			{
			}
		}

		[Token(Token = "0x1700026C")]
		public int NetworkCheckRetryInterval
		{
			[Token(Token = "0x6001897")]
			[Address(RVA = "0x91AE7C", Offset = "0x91AE7C", VA = "0x91AE7C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001898")]
			[Address(RVA = "0x91AE9C", Offset = "0x91AE9C", VA = "0x91AE9C")]
			set
			{
			}
		}

		[Token(Token = "0x1700026D")]
		public int NetworkCheckMaxRetries
		{
			[Token(Token = "0x6001899")]
			[Address(RVA = "0x91AEC0", Offset = "0x91AEC0", VA = "0x91AEC0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600189A")]
			[Address(RVA = "0x91AEE0", Offset = "0x91AEE0", VA = "0x91AEE0")]
			set
			{
			}
		}

		[Token(Token = "0x1700026E")]
		public int NonSubscribeTimeout
		{
			[Token(Token = "0x600189B")]
			[Address(RVA = "0x91AF04", Offset = "0x91AF04", VA = "0x91AF04")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600189C")]
			[Address(RVA = "0x91AF24", Offset = "0x91AF24", VA = "0x91AF24")]
			set
			{
			}
		}

		[Token(Token = "0x1700026F")]
		public int SubscribeTimeout
		{
			[Token(Token = "0x600189D")]
			[Address(RVA = "0x91AF48", Offset = "0x91AF48", VA = "0x91AF48")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600189E")]
			[Address(RVA = "0x91AF68", Offset = "0x91AF68", VA = "0x91AF68")]
			set
			{
			}
		}

		[Token(Token = "0x17000270")]
		public bool EnableResumeOnReconnect
		{
			[Token(Token = "0x600189F")]
			[Address(RVA = "0x91AF8C", Offset = "0x91AF8C", VA = "0x91AF8C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018A0")]
			[Address(RVA = "0x91AFAC", Offset = "0x91AFAC", VA = "0x91AFAC")]
			set
			{
			}
		}

		[Token(Token = "0x17000271")]
		public string SessionUUID
		{
			[Token(Token = "0x60018A1")]
			[Address(RVA = "0x91AFD0", Offset = "0x91AFD0", VA = "0x91AFD0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018A2")]
			[Address(RVA = "0x91AFF8", Offset = "0x91AFF8", VA = "0x91AFF8")]
			set
			{
			}
		}

		[Token(Token = "0x17000272")]
		public string Origin
		{
			[Token(Token = "0x60018A3")]
			[Address(RVA = "0x91B01C", Offset = "0x91B01C", VA = "0x91B01C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018A4")]
			[Address(RVA = "0x91B03C", Offset = "0x91B03C", VA = "0x91B03C")]
			set
			{
			}
		}

		[Token(Token = "0x17000273")]
		public int PresenceHeartbeat
		{
			[Token(Token = "0x60018A5")]
			[Address(RVA = "0x91B060", Offset = "0x91B060", VA = "0x91B060")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018A6")]
			[Address(RVA = "0x91B080", Offset = "0x91B080", VA = "0x91B080")]
			set
			{
			}
		}

		[Token(Token = "0x17000274")]
		public int PresenceHeartbeatInterval
		{
			[Token(Token = "0x60018A7")]
			[Address(RVA = "0x91B0B0", Offset = "0x91B0B0", VA = "0x91B0B0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018A8")]
			[Address(RVA = "0x91B0D0", Offset = "0x91B0D0", VA = "0x91B0D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000275")]
		public IPubnubUnitTest PubnubUnitTest
		{
			[Token(Token = "0x60018A9")]
			[Address(RVA = "0x91B100", Offset = "0x91B100", VA = "0x91B100")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018AA")]
			[Address(RVA = "0x91B130", Offset = "0x91B130", VA = "0x91B130")]
			set
			{
			}
		}

		[Token(Token = "0x17000276")]
		public bool EnableJsonEncodingForPublish
		{
			[Token(Token = "0x60018AB")]
			[Address(RVA = "0x91B168", Offset = "0x91B168", VA = "0x91B168")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018AC")]
			[Address(RVA = "0x91B188", Offset = "0x91B188", VA = "0x91B188")]
			set
			{
			}
		}

		[Token(Token = "0x17000277")]
		public IJsonPluggableLibrary JsonPluggableLibrary
		{
			[Token(Token = "0x60018AD")]
			[Address(RVA = "0x91B1AC", Offset = "0x91B1AC", VA = "0x91B1AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018AE")]
			[Address(RVA = "0x91B220", Offset = "0x91B220", VA = "0x91B220")]
			set
			{
			}
		}

		[Token(Token = "0x17000278")]
		public string Version
		{
			[Token(Token = "0x60018AF")]
			[Address(RVA = "0x91B29C", Offset = "0x91B29C", VA = "0x91B29C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000279")]
		public static GameObject SetGameObject
		{
			[Token(Token = "0x60018B0")]
			[Address(RVA = "0x91B368", Offset = "0x91B368", VA = "0x91B368")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018B1")]
			[Address(RVA = "0x91B434", Offset = "0x91B434", VA = "0x91B434")]
			set
			{
			}
		}

		[Token(Token = "0x60017FC")]
		public void Subscribe<T>(string channel, Action<T> subscribeCallback, Action<T> connectCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0x9188B4", Offset = "0x9188B4", VA = "0x9188B4")]
		public void Subscribe(string channel, Action<object> subscribeCallback, Action<object> connectCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0x918958", Offset = "0x918958", VA = "0x918958")]
		public void Subscribe(string channel, Action<object> subscribeCallback, Action<object> connectCallback, Action<object> wildcardPresenceCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x60017FF")]
		public void Subscribe<T>(string channel, string channelGroup, Action<T> subscribeCallback, Action<T> connectCallback, Action<T> wildcardPresenceCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001800")]
		public void Subscribe<T>(string channel, Action<T> subscribeCallback, Action<T> connectCallback, Action<PubnubClientError> errorCallback, string timetoken)
		{
		}

		[Token(Token = "0x6001801")]
		public void Subscribe<T>(string channel, string channelGroup, string timetoken, Action<T> subscribeCallback, Action<T> connectCallback, Action<T> wildcardPresenceCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001802")]
		public void Subscribe<T>(string channel, string channelGroup, Action<T> subscribeCallback, Action<T> connectCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0x9189F8", Offset = "0x9189F8", VA = "0x9189F8")]
		public void Subscribe(string channel, string channelGroup, Action<object> subscribeCallback, Action<object> connectCallback, Action<object> wildcardPresenceCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0x918AA0", Offset = "0x918AA0", VA = "0x918AA0")]
		public void Subscribe(string channel, string channelGroup, Action<object> subscribeCallback, Action<object> connectCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0x918B44", Offset = "0x918B44", VA = "0x918B44")]
		public bool Publish(string channel, object message, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001806")]
		public bool Publish<T>(string channel, object message, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0x918BD0", Offset = "0x918BD0", VA = "0x918BD0")]
		public bool Publish(string channel, object message, bool storeInHistory, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001808")]
		public bool Publish<T>(string channel, object message, bool storeInHistory, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0x918C64", Offset = "0x918C64", VA = "0x918C64")]
		public bool Publish(string channel, object message, Dictionary<string, string> metadata, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x600180A")]
		public bool Publish<T>(string channel, object message, Dictionary<string, string> metadata, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0x918CF4", Offset = "0x918CF4", VA = "0x918CF4")]
		public bool Publish(string channel, object message, bool storeInHistory, Dictionary<string, string> metadata, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x600180C")]
		public bool Publish<T>(string channel, object message, bool storeInHistory, Dictionary<string, string> metadata, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x600180D")]
		public bool Publish<T>(string channel, object message, bool storeInHistory, Dictionary<string, string> metadata, int ttl, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x600180E")]
		[Address(RVA = "0x918D90", Offset = "0x918D90", VA = "0x918D90")]
		public bool Publish(string channel, object message, bool storeInHistory, Dictionary<string, string> metadata, int ttl, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x600180F")]
		public void Presence<T>(string channel, string channelGroup, Action<T> userCallback, Action<T> connectCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001810")]
		public void Presence<T>(string channel, string channelGroup, string timetoken, Action<T> userCallback, Action<T> connectCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0x918E34", Offset = "0x918E34", VA = "0x918E34")]
		public void Presence(string channel, string channelGroup, Action<object> userCallback, Action<object> connectCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0x918ED0", Offset = "0x918ED0", VA = "0x918ED0")]
		public void Presence(string channel, Action<object> userCallback, Action<object> connectCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001813")]
		public void Presence<T>(string channel, Action<T> userCallback, Action<T> connectCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001814")]
		public void Presence<T>(string channel, Action<T> userCallback, Action<T> connectCallback, Action<PubnubClientError> errorCallback, string timetoken)
		{
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0x918F68", Offset = "0x918F68", VA = "0x918F68")]
		public bool DetailedHistory(string channel, long start, long end, int count, bool reverse, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001816")]
		public bool DetailedHistory<T>(string channel, long start, long end, int count, bool reverse, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0x919050", Offset = "0x919050", VA = "0x919050")]
		public bool DetailedHistory(string channel, long start, Action<object> userCallback, Action<PubnubClientError> errorCallback, bool reverse)
		{
			return default(bool);
		}

		[Token(Token = "0x6001818")]
		public bool DetailedHistory<T>(string channel, long start, Action<T> userCallback, Action<PubnubClientError> errorCallback, bool reverse)
		{
			return default(bool);
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0x919104", Offset = "0x919104", VA = "0x919104")]
		public bool DetailedHistory(string channel, int count, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x600181A")]
		public bool DetailedHistory<T>(string channel, int count, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0x9191A4", Offset = "0x9191A4", VA = "0x9191A4")]
		public bool DetailedHistory(string channel, long start, long end, int count, bool reverse, bool includeTimetoken, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x600181C")]
		public bool DetailedHistory<T>(string channel, long start, long end, int count, bool reverse, bool includeTimetoken, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0x919298", Offset = "0x919298", VA = "0x919298")]
		public bool DetailedHistory(string channel, long start, bool includeTimetoken, Action<object> userCallback, Action<PubnubClientError> errorCallback, bool reverse)
		{
			return default(bool);
		}

		[Token(Token = "0x600181E")]
		public bool DetailedHistory<T>(string channel, long start, bool includeTimetoken, Action<T> userCallback, Action<PubnubClientError> errorCallback, bool reverse)
		{
			return default(bool);
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0x91934C", Offset = "0x91934C", VA = "0x91934C")]
		public bool DetailedHistory(string channel, int count, bool includeTimetoken, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001820")]
		public bool DetailedHistory<T>(string channel, int count, bool includeTimetoken, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0x9193F0", Offset = "0x9193F0", VA = "0x9193F0")]
		public bool HereNow(string channel, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0x919478", Offset = "0x919478", VA = "0x919478")]
		public bool HereNow(string channel, bool showUUIDList, bool includeUserState, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001823")]
		public bool HereNow<T>(string channel, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001824")]
		public bool HereNow<T>(string channel, bool showUUIDList, bool includeUserState, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0x919508", Offset = "0x919508", VA = "0x919508")]
		public bool HereNow(string channel, string channelGroup, bool showUUIDList, bool includeUserState, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001826")]
		public bool HereNow<T>(string channel, string channelGroup, bool showUUIDList, bool includeUserState, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0x9195A4", Offset = "0x9195A4", VA = "0x9195A4")]
		public bool GlobalHereNow(bool showUUIDList, bool includeUserState, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001828")]
		public bool GlobalHereNow<T>(bool showUUIDList, bool includeUserState, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0x91962C", Offset = "0x91962C", VA = "0x91962C")]
		public bool GlobalHereNow(Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x600182A")]
		public bool GlobalHereNow<T>(Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0x9196AC", Offset = "0x9196AC", VA = "0x9196AC")]
		public void WhereNow(string uuid, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x600182C")]
		public void WhereNow<T>(string uuid, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x600182D")]
		public void Unsubscribe<T>(string channel, string channelGroup, Action<T> userCallback, Action<T> connectCallback, Action<T> disconnectCallback, Action<T> wildcardPresenceCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0x91972C", Offset = "0x91972C", VA = "0x91972C")]
		public void Unsubscribe(string channel, string channelGroup, Action<object> userCallback, Action<object> connectCallback, Action<object> disconnectCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0x9197D0", Offset = "0x9197D0", VA = "0x9197D0")]
		public void Unsubscribe(string channel, Action<object> userCallback, Action<object> connectCallback, Action<object> disconnectCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001830")]
		public void Unsubscribe<T>(string channel, Action<T> userCallback, Action<T> connectCallback, Action<T> disconnectCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001831")]
		public void Unsubscribe<T>(string channel, string channelGroup, Action<T> userCallback, Action<T> connectCallback, Action<T> disconnectCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0x919874", Offset = "0x919874", VA = "0x919874")]
		public void PresenceUnsubscribe(string channel, Action<object> userCallback, Action<object> connectCallback, Action<object> disconnectCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001833")]
		public void PresenceUnsubscribe<T>(string channel, Action<T> userCallback, Action<T> connectCallback, Action<T> disconnectCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0x919910", Offset = "0x919910", VA = "0x919910")]
		public void PresenceUnsubscribe(string channel, string channelGroup, Action<object> userCallback, Action<object> connectCallback, Action<object> disconnectCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001835")]
		public void PresenceUnsubscribe<T>(string channel, string channelGroup, Action<T> userCallback, Action<T> connectCallback, Action<T> disconnectCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0x9199AC", Offset = "0x9199AC", VA = "0x9199AC")]
		public bool Time(Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001837")]
		public bool Time<T>(Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001838")]
		public void AuditAccess<T>(string channel, string authenticationKey, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001839")]
		public void AuditAccess<T>(string channel, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x600183A")]
		public void AuditAccess<T>(Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0x919A18", Offset = "0x919A18", VA = "0x919A18")]
		public void AuditAccess(string channel, string authenticationKey, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0x919AA0", Offset = "0x919AA0", VA = "0x919AA0")]
		public void AuditAccess(string channel, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0x919B30", Offset = "0x919B30", VA = "0x919B30")]
		public void AuditAccess(Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x600183E")]
		public void ChannelGroupAuditAccess<T>(string channelGroup, string authenticationKey, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x600183F")]
		public void ChannelGroupAuditAccess<T>(string channelGroup, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001840")]
		public void ChannelGroupAuditAccess<T>(Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001841")]
		public void ChannelGroupAuditPresenceAccess<T>(string channelGroup, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001842")]
		public void ChannelGroupAuditPresenceAccess<T>(string channelGroup, string authenticationKey, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001843")]
		public bool ChannelGroupGrantAccess<T>(string channelGroup, bool read, bool manage, int ttl, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001844")]
		public bool ChannelGroupGrantAccess<T>(string channelGroup, bool read, bool manage, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001845")]
		public bool ChannelGroupGrantAccess<T>(string channelGroup, string authenticationKey, bool read, bool manage, int ttl, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001846")]
		public bool ChannelGroupGrantAccess<T>(string channelGroup, string authenticationKey, bool read, bool manage, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001847")]
		public bool ChannelGroupGrantPresenceAccess<T>(string channelGroup, bool read, bool manage, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001848")]
		public bool ChannelGroupGrantPresenceAccess<T>(string channelGroup, bool read, bool manage, int ttl, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001849")]
		public bool ChannelGroupGrantPresenceAccess<T>(string channelGroup, string authenticationKey, bool read, bool manage, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x600184A")]
		public bool ChannelGroupGrantPresenceAccess<T>(string channelGroup, string authenticationKey, bool read, bool manage, int ttl, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0x919BBC", Offset = "0x919BBC", VA = "0x919BBC")]
		public void AuditPresenceAccess(string channel, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0x919C4C", Offset = "0x919C4C", VA = "0x919C4C")]
		public void AuditPresenceAccess(string channel, string authenticationKey, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x600184D")]
		public void AuditPresenceAccess<T>(string channel, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x600184E")]
		public void AuditPresenceAccess<T>(string channel, string authenticationKey, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x600184F")]
		public bool GrantAccess<T>(string channel, bool read, bool write, int ttl, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001850")]
		public bool GrantAccess<T>(string channel, bool read, bool write, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001851")]
		public bool GrantAccess<T>(string channel, string authenticationKey, bool read, bool write, int ttl, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001852")]
		public bool GrantAccess<T>(string channel, string authenticationKey, bool read, bool write, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0x919CD4", Offset = "0x919CD4", VA = "0x919CD4")]
		public bool GrantAccess(string channel, bool read, bool write, int ttl, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0x919D7C", Offset = "0x919D7C", VA = "0x919D7C")]
		public bool GrantAccess(string channel, bool read, bool write, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0x919E20", Offset = "0x919E20", VA = "0x919E20")]
		public bool GrantAccess(string channel, string authenticationKey, bool read, bool write, int ttl, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0x919EC4", Offset = "0x919EC4", VA = "0x919EC4")]
		public bool GrantAccess(string channel, string authenticationKey, bool read, bool write, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001857")]
		public bool GrantPresenceAccess<T>(string channel, bool read, bool write, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001858")]
		public bool GrantPresenceAccess<T>(string channel, bool read, bool write, int ttl, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001859")]
		public bool GrantPresenceAccess<T>(string channel, string authenticationKey, bool read, bool write, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x600185A")]
		public bool GrantPresenceAccess<T>(string channel, string authenticationKey, bool read, bool write, int ttl, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0x919F64", Offset = "0x919F64", VA = "0x919F64")]
		public bool GrantPresenceAccess(string channel, bool read, bool write, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0x91A008", Offset = "0x91A008", VA = "0x91A008")]
		public bool GrantPresenceAccess(string channel, bool read, bool write, int ttl, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0x91A0B0", Offset = "0x91A0B0", VA = "0x91A0B0")]
		public bool GrantPresenceAccess(string channel, string authenticationKey, bool read, bool write, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0x91A150", Offset = "0x91A150", VA = "0x91A150")]
		public bool GrantPresenceAccess(string channel, string authenticationKey, bool read, bool write, int ttl, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0x91A1F4", Offset = "0x91A1F4", VA = "0x91A1F4")]
		public void SetUserState(string channel, string channelGroup, string uuid, string jsonUserState, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001860")]
		public void SetUserState<T>(string channel, string jsonUserState, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001861")]
		public void SetUserState<T>(string channel, string uuid, string jsonUserState, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001862")]
		public void SetUserState<T>(string channel, string channelGroup, string uuid, string jsonUserState, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0x91A290", Offset = "0x91A290", VA = "0x91A290")]
		public void SetUserState(string channel, string jsonUserState, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0x91A328", Offset = "0x91A328", VA = "0x91A328")]
		public void SetUserState(string channel, string uuid, string jsonUserState, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001865")]
		public void SetUserState<T>(string channel, string uuid, KeyValuePair<string, object> keyValuePair, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001866")]
		public void SetUserState<T>(string channel, string channelGroup, string uuid, KeyValuePair<string, object> keyValuePair, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001867")]
		public void SetUserState<T>(string channel, KeyValuePair<string, object> keyValuePair, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0x91A3C4", Offset = "0x91A3C4", VA = "0x91A3C4")]
		public void SetUserState(string channel, string uuid, KeyValuePair<string, object> keyValuePair, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0x91A468", Offset = "0x91A468", VA = "0x91A468")]
		public void SetUserState(string channel, KeyValuePair<string, object> keyValuePair, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x600186A")]
		public void GetUserState<T>(string channel, string uuid, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x600186B")]
		public void GetUserState<T>(string channel, string channelGroup, string uuid, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x600186C")]
		public void GetUserState<T>(string channel, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0x91A508", Offset = "0x91A508", VA = "0x91A508")]
		public void GetUserState(string channel, string uuid, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0x91A590", Offset = "0x91A590", VA = "0x91A590")]
		public void GetUserState(string channel, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0x91A620", Offset = "0x91A620", VA = "0x91A620")]
		public void GetUserState(string channel, string channelGroup, string uuid, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0x91A6B0", Offset = "0x91A6B0", VA = "0x91A6B0")]
		public void RegisterDeviceForPush(string channel, PushTypeService pushType, string pushToken, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001871")]
		public void RegisterDeviceForPush<T>(string channel, PushTypeService pushType, string pushToken, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0x91A740", Offset = "0x91A740", VA = "0x91A740")]
		public void UnregisterDeviceForPush(PushTypeService pushType, string pushToken, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001873")]
		public void UnregisterDeviceForPush<T>(PushTypeService pushType, string pushToken, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0x91A7C8", Offset = "0x91A7C8", VA = "0x91A7C8")]
		public void RemoveChannelForDevicePush(string channel, PushTypeService pushType, string pushToken, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001875")]
		public void RemoveChannelForDevicePush<T>(string channel, PushTypeService pushType, string pushToken, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0x91A858", Offset = "0x91A858", VA = "0x91A858")]
		public void GetChannelsForDevicePush(PushTypeService pushType, string pushToken, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001877")]
		public void GetChannelsForDevicePush<T>(PushTypeService pushType, string pushToken, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0x91A8E0", Offset = "0x91A8E0", VA = "0x91A8E0")]
		public void AddChannelsToChannelGroup(string[] channels, string channelGroup, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001879")]
		public void AddChannelsToChannelGroup<T>(string[] channels, string channelGroup, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x600187A")]
		public void RemoveChannelsFromChannelGroup<T>(string[] channels, string channelGroup, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0x91A968", Offset = "0x91A968", VA = "0x91A968")]
		public void RemoveChannelsFromChannelGroup(string[] channels, string channelGroup, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0x91A9F0", Offset = "0x91A9F0", VA = "0x91A9F0")]
		public void RemoveChannelGroup(string channelGroup, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x600187D")]
		public void RemoveChannelGroup<T>(string channelGroup, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0x91AA70", Offset = "0x91AA70", VA = "0x91AA70")]
		public void GetChannelsForChannelGroup(string channelGroup, Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x600187F")]
		public void GetChannelsForChannelGroup<T>(string channelGroup, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0x91AAF0", Offset = "0x91AAF0", VA = "0x91AAF0")]
		public void GetAllChannelGroups(Action<object> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001881")]
		public void GetAllChannelGroups<T>(Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001882")]
		public void TerminateCurrentSubscriberRequest<T>()
		{
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0x91AB5C", Offset = "0x91AB5C", VA = "0x91AB5C")]
		public void ResetPublishMessageCounter()
		{
		}

		[Token(Token = "0x6001884")]
		public void EndPendingRequests<T>()
		{
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0x91AB84", Offset = "0x91AB84", VA = "0x91AB84")]
		public void CleanUp()
		{
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0x91ABAC", Offset = "0x91ABAC", VA = "0x91ABAC")]
		public Guid GenerateGuid()
		{
			return default(Guid);
		}

		[Token(Token = "0x6001887")]
		public void ChangeUUID<T>(string newUUID)
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0x91ABC0", Offset = "0x91ABC0", VA = "0x91ABC0")]
		public void TerminateCurrentSubscriberRequest()
		{
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0x91AC1C", Offset = "0x91AC1C", VA = "0x91AC1C")]
		public void EndPendingRequests()
		{
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0x91AC78", Offset = "0x91AC78", VA = "0x91AC78")]
		public void ChangeUUID(string newUUID)
		{
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0x91ACDC", Offset = "0x91ACDC", VA = "0x91ACDC")]
		public static long TranslateDateTimeToPubnubUnixNanoSeconds(DateTime dotNetUTCDateTime)
		{
			return default(long);
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0x91ACE4", Offset = "0x91ACE4", VA = "0x91ACE4")]
		public static DateTime TranslatePubnubUnixNanoSecondsToDateTime(long unixNanoSecondTime)
		{
			return default(DateTime);
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0x91B504", Offset = "0x91B504", VA = "0x91B504")]
		public Pubnub(string publishKey, string subscribeKey, string secretKey, string cipherKey, bool sslOn)
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x91B5AC", Offset = "0x91B5AC", VA = "0x91B5AC")]
		public Pubnub(string publishKey, string subscribeKey, string secretKey)
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x91B644", Offset = "0x91B644", VA = "0x91B644")]
		public Pubnub(string publishKey, string subscribeKey)
		{
		}
	}
	[Token(Token = "0x2000338")]
	internal class PubnubChannelCallback<T>
	{
		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action<T> SuccessCallback;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action<PubnubClientError> ErrorCallback;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action<PNMessageResult> MessageCallback;

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action<T> ConnectCallback;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action<T> DisconnectCallback;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action<T> WildcardPresenceCallback;

		[Token(Token = "0x60018B5")]
		public PubnubChannelCallback()
		{
		}
	}
	[Token(Token = "0x2000339")]
	public enum CallbackType
	{
		[Token(Token = "0x40018C2")]
		Success,
		[Token(Token = "0x40018C3")]
		Message,
		[Token(Token = "0x40018C4")]
		Connect,
		[Token(Token = "0x40018C5")]
		Error,
		[Token(Token = "0x40018C6")]
		Disconnect,
		[Token(Token = "0x40018C7")]
		Wildcard
	}
	[Token(Token = "0x200033A")]
	internal static class PubnubCallbacks
	{
		[Token(Token = "0x60018B6")]
		internal static void SendCallbacks<T>(IJsonPluggableLibrary jsonPluggableLibrary, ChannelEntity channelEntity, List<object> itemMessage, CallbackType callbackType, bool checkType)
		{
		}

		[Token(Token = "0x60018B7")]
		internal static void SendCallbackChannelEntity<T>(IJsonPluggableLibrary jsonPluggableLibrary, ChannelEntity channelEntity, List<object> itemMessage, CallbackType callbackType, bool checkType)
		{
		}

		[Token(Token = "0x60018B8")]
		internal static void SendCallbacks<T>(IJsonPluggableLibrary jsonPluggableLibrary, RequestState<T> asynchRequestState, List<object> itemMessage, CallbackType callbackType, bool checkType)
		{
		}

		[Token(Token = "0x60018B9")]
		internal static void SendCallbackBasedOnType<T>(IJsonPluggableLibrary jsonPluggableLibrary, PubnubChannelCallback<T> channelCallbacks, List<object> itemMessage, CallbackType callbackType)
		{
		}

		[Token(Token = "0x60018BA")]
		internal static void SendCallbacks<T>(IJsonPluggableLibrary jsonPluggableLibrary, List<ChannelEntity> channelEntities, List<object> itemMessage, CallbackType callbackType, bool checkType)
		{
		}

		[Token(Token = "0x60018BB")]
		internal static void SendCallback<T>(IJsonPluggableLibrary jsonPluggableLibrary, ChannelEntity channelEntity, List<object> itemMessage, CallbackType callbackType)
		{
		}

		[Token(Token = "0x60018BC")]
		internal static void FireErrorCallbacksForAllChannels<T>(WebException webEx, RequestState<T> requestState, PubnubErrorSeverity severity, PubnubErrorFilter.Level errorLevel)
		{
		}

		[Token(Token = "0x60018BD")]
		internal static void FireErrorCallbacksForAllChannels<T>(Exception ex, RequestState<T> requestState, PubnubErrorSeverity severity, PubnubErrorCode errorType, PubnubErrorFilter.Level errorLevel)
		{
		}

		[Token(Token = "0x60018BE")]
		internal static void FireErrorCallbacksForAllChannelsCommon<T>(Exception ex, string message, RequestState<T> requestState, List<ChannelEntity> channelEntities, PubnubErrorSeverity severity, PubnubErrorCode errorType, ResponseType responseType, PubnubErrorFilter.Level errorLevel)
		{
		}

		[Token(Token = "0x60018BF")]
		internal static void FireErrorCallbacksForAllChannels<T>(string message, RequestState<T> requestState, PubnubErrorSeverity severity, PubnubErrorCode errorType, PubnubErrorFilter.Level errorLevel)
		{
		}

		[Token(Token = "0x60018C0")]
		internal static void FireErrorCallback<T>(ChannelEntity channelEntity, PubnubErrorFilter.Level errorLevel, PubnubClientError error)
		{
		}

		[Token(Token = "0x60018C1")]
		internal static PubnubChannelCallback<T> GetPubnubChannelCallback<T>(Action<T> userCallback, Action<T> connectCallback, Action<PubnubClientError> errorCallback, Action<T> disconnectCallback, Action<T> wildcardPresenceCallback)
		{
			return null;
		}

		[Token(Token = "0x60018C2")]
		internal static void CallErrorCallback<T>(Exception ex, List<ChannelEntity> channelEntities, PubnubErrorCode errorCode, PubnubErrorSeverity severity, PubnubErrorFilter.Level errorLevel)
		{
		}

		[Token(Token = "0x60018C3")]
		internal static void CallErrorCallback<T>(string message, Action<PubnubClientError> errorCallback, PubnubErrorCode errorCode, PubnubErrorSeverity severity, PubnubErrorFilter.Level errorLevel)
		{
		}

		[Token(Token = "0x60018C4")]
		internal static void CallErrorCallback<T>(ChannelEntity channelEntity, string message, PubnubErrorCode errorCode, PubnubErrorSeverity severity, PubnubErrorFilter.Level errorLevel)
		{
		}

		[Token(Token = "0x60018C5")]
		internal static void CallCallbackForEachChannelEntity<T>(List<ChannelEntity> channelEntities, PubnubClientError clientError, PubnubErrorFilter.Level errorLevel)
		{
		}

		[Token(Token = "0x60018C6")]
		internal static void CallErrorCallback<T>(Action<PubnubClientError> errorCallback, List<ChannelEntity> channelEntities, PubnubClientError clientError, PubnubErrorFilter.Level errorLevel)
		{
		}

		[Token(Token = "0x60018C7")]
		private static void JsonResponseToCallback<T>(List<object> result, Action<T> callback, IJsonPluggableLibrary jsonPluggableLibrary)
		{
		}

		[Token(Token = "0x60018C8")]
		private static void JsonResponseToCallback<T>(object result, Action<T> callback, IJsonPluggableLibrary jsonPluggableLibrary)
		{
		}

		[Token(Token = "0x60018C9")]
		internal static void GoToCallback<T>(object result, Action<T> Callback, IJsonPluggableLibrary jsonPluggableLibrary)
		{
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0x91B6C8", Offset = "0x91B6C8", VA = "0x91B6C8")]
		internal static void GoToCallback(object result, Action<string> Callback, IJsonPluggableLibrary jsonPluggableLibrary)
		{
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0x91B740", Offset = "0x91B740", VA = "0x91B740")]
		internal static void GoToCallback(object result, Action<object> Callback)
		{
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0x91B7B0", Offset = "0x91B7B0", VA = "0x91B7B0")]
		internal static void GoToCallback(PubnubClientError error, Action<PubnubClientError> Callback, PubnubErrorFilter.Level errorLevel)
		{
		}
	}
	[Token(Token = "0x200033B")]
	public class PubnubCrypto : PubnubCryptoBase
	{
		[Token(Token = "0x60018CD")]
		[Address(RVA = "0x888228", Offset = "0x888228", VA = "0x888228")]
		public PubnubCrypto(string cipher_key)
		{
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x888298", Offset = "0x888298", VA = "0x888298", Slot = "4")]
		protected override string ComputeHashRaw(string input)
		{
			return null;
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0x888388", Offset = "0x888388", VA = "0x888388", Slot = "5")]
		protected override string EncryptOrDecrypt(bool type, string plainStr)
		{
			return null;
		}
	}
	[Token(Token = "0x200033C")]
	public class PubnubUnity
	{
		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameObject gobj;

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool localGobj;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Counter publishMessageCounter;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private CoroutineClass coroutine;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string origin;

		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private string publishKey;

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string subscribeKey;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private string secretKey;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string cipherKey;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool ssl;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static long lastSubscribeTimetoken;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static long lastSubscribeTimetokenForNewMultiplex;

		[Token(Token = "0x40018D5")]
		private const string build = "3.7.6.1";

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string pnsdkVersion;

		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int pubnubWebRequestCallbackIntervalInSeconds;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int pubnubOperationTimeoutIntervalInSeconds;

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int pubnubHeartbeatTimeoutIntervalInSeconds;

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int pubnubNetworkTcpCheckIntervalInSeconds;

		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int pubnubNetworkCheckRetries;

		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int pubnubWebRequestRetryIntervalInSeconds;

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int pubnubPresenceHeartbeatInSeconds;

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int presenceHeartbeatIntervalInSeconds;

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int requestDelayTime;

		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool enableResumeOnReconnect;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		private bool uuidChanged;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		public bool overrideTcpKeepAlive;

		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x57")]
		private bool enableJsonEncodingForPublish;

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private LoggingMethod.Level pubnubLogLevel;

		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private PubnubErrorFilter.Level errorLevel;

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool resetTimetoken;

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool keepHearbeatRunning;

		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool isHearbeatRunning;

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		private bool keepPresenceHearbeatRunning;

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool isPresenceHearbeatRunning;

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		private bool internetStatus;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		private bool retriesExceeded;

		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int retryCount;

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private List<object> history;

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private string authenticationKey;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private IPubnubUnitTest pubnubUnitTest;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static IJsonPluggableLibrary jsonPluggableLibrary;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string sessionUUID;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private string filterExpr;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1940", Offset = "0x3A1940")]
		private string <Region>k__BackingField;

		[Token(Token = "0x1700027A")]
		public string PublishKey
		{
			[Token(Token = "0x60018D3")]
			[Address(RVA = "0x88AC68", Offset = "0x88AC68", VA = "0x88AC68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027B")]
		public string SubscribeKey
		{
			[Token(Token = "0x60018D4")]
			[Address(RVA = "0x88AC70", Offset = "0x88AC70", VA = "0x88AC70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027C")]
		public string SecretKey
		{
			[Token(Token = "0x60018D5")]
			[Address(RVA = "0x88AC78", Offset = "0x88AC78", VA = "0x88AC78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027D")]
		public static GameObject SetGameObject
		{
			[Token(Token = "0x60018D6")]
			[Address(RVA = "0x88AC80", Offset = "0x88AC80", VA = "0x88AC80")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018D7")]
			[Address(RVA = "0x88ACF8", Offset = "0x88ACF8", VA = "0x88ACF8")]
			set
			{
			}
		}

		[Token(Token = "0x1700027E")]
		public static string Version
		{
			[Token(Token = "0x60018D8")]
			[Address(RVA = "0x88AD74", Offset = "0x88AD74", VA = "0x88AD74")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018D9")]
			[Address(RVA = "0x88ADEC", Offset = "0x88ADEC", VA = "0x88ADEC")]
			set
			{
			}
		}

		[Token(Token = "0x1700027F")]
		public List<object> History
		{
			[Token(Token = "0x60018DA")]
			[Address(RVA = "0x88AE68", Offset = "0x88AE68", VA = "0x88AE68")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018DB")]
			[Address(RVA = "0x88AE70", Offset = "0x88AE70", VA = "0x88AE70")]
			set
			{
			}
		}

		[Token(Token = "0x17000280")]
		public int SubscribeTimeout
		{
			[Token(Token = "0x60018DC")]
			[Address(RVA = "0x88AED4", Offset = "0x88AED4", VA = "0x88AED4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018DD")]
			[Address(RVA = "0x88AEDC", Offset = "0x88AEDC", VA = "0x88AEDC")]
			set
			{
			}
		}

		[Token(Token = "0x17000281")]
		public int HeartbeatTimeout
		{
			[Token(Token = "0x60018DE")]
			[Address(RVA = "0x88AEE4", Offset = "0x88AEE4", VA = "0x88AEE4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018DF")]
			[Address(RVA = "0x88AEEC", Offset = "0x88AEEC", VA = "0x88AEEC")]
			set
			{
			}
		}

		[Token(Token = "0x17000282")]
		public int NonSubscribeTimeout
		{
			[Token(Token = "0x60018E0")]
			[Address(RVA = "0x88AEF4", Offset = "0x88AEF4", VA = "0x88AEF4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018E1")]
			[Address(RVA = "0x88AEFC", Offset = "0x88AEFC", VA = "0x88AEFC")]
			set
			{
			}
		}

		[Token(Token = "0x17000283")]
		public int NetworkCheckMaxRetries
		{
			[Token(Token = "0x60018E2")]
			[Address(RVA = "0x88AF04", Offset = "0x88AF04", VA = "0x88AF04")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018E3")]
			[Address(RVA = "0x88AF0C", Offset = "0x88AF0C", VA = "0x88AF0C")]
			set
			{
			}
		}

		[Token(Token = "0x17000284")]
		public int NetworkCheckRetryInterval
		{
			[Token(Token = "0x60018E4")]
			[Address(RVA = "0x88AF14", Offset = "0x88AF14", VA = "0x88AF14")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018E5")]
			[Address(RVA = "0x88AF1C", Offset = "0x88AF1C", VA = "0x88AF1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000285")]
		public int LocalClientHeartbeatInterval
		{
			[Token(Token = "0x60018E6")]
			[Address(RVA = "0x88AF24", Offset = "0x88AF24", VA = "0x88AF24")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018E7")]
			[Address(RVA = "0x88AF2C", Offset = "0x88AF2C", VA = "0x88AF2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000286")]
		public bool EnableResumeOnReconnect
		{
			[Token(Token = "0x60018E8")]
			[Address(RVA = "0x88AF34", Offset = "0x88AF34", VA = "0x88AF34")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018E9")]
			[Address(RVA = "0x88AF3C", Offset = "0x88AF3C", VA = "0x88AF3C")]
			set
			{
			}
		}

		[Token(Token = "0x17000287")]
		public bool EnableJsonEncodingForPublish
		{
			[Token(Token = "0x60018EA")]
			[Address(RVA = "0x88AF44", Offset = "0x88AF44", VA = "0x88AF44")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018EB")]
			[Address(RVA = "0x88AF4C", Offset = "0x88AF4C", VA = "0x88AF4C")]
			set
			{
			}
		}

		[Token(Token = "0x17000288")]
		public string AuthenticationKey
		{
			[Token(Token = "0x60018EC")]
			[Address(RVA = "0x88AF54", Offset = "0x88AF54", VA = "0x88AF54")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018ED")]
			[Address(RVA = "0x88AF5C", Offset = "0x88AF5C", VA = "0x88AF5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000289")]
		public virtual IPubnubUnitTest PubnubUnitTest
		{
			[Token(Token = "0x60018EE")]
			[Address(RVA = "0x88AF64", Offset = "0x88AF64", VA = "0x88AF64", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018EF")]
			[Address(RVA = "0x88AF6C", Offset = "0x88AF6C", VA = "0x88AF6C", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x1700028A")]
		public static IJsonPluggableLibrary JsonPluggableLibrary
		{
			[Token(Token = "0x60018F0")]
			[Address(RVA = "0x88AF74", Offset = "0x88AF74", VA = "0x88AF74")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018F1")]
			[Address(RVA = "0x88B0D8", Offset = "0x88B0D8", VA = "0x88B0D8")]
			set
			{
			}
		}

		[Token(Token = "0x1700028B")]
		public string Origin
		{
			[Token(Token = "0x60018F2")]
			[Address(RVA = "0x88B1D8", Offset = "0x88B1D8", VA = "0x88B1D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018F3")]
			[Address(RVA = "0x88B1E0", Offset = "0x88B1E0", VA = "0x88B1E0")]
			set
			{
			}
		}

		[Token(Token = "0x1700028C")]
		public string SessionUUID
		{
			[Token(Token = "0x60018F4")]
			[Address(RVA = "0x88B1E8", Offset = "0x88B1E8", VA = "0x88B1E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018F5")]
			[Address(RVA = "0x88B2DC", Offset = "0x88B2DC", VA = "0x88B2DC")]
			set
			{
			}
		}

		[Token(Token = "0x1700028D")]
		public int PresenceHeartbeat
		{
			[Token(Token = "0x60018F6")]
			[Address(RVA = "0x88B2E4", Offset = "0x88B2E4", VA = "0x88B2E4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018F7")]
			[Address(RVA = "0x88B2EC", Offset = "0x88B2EC", VA = "0x88B2EC")]
			set
			{
			}
		}

		[Token(Token = "0x1700028E")]
		public int PresenceHeartbeatInterval
		{
			[Token(Token = "0x60018F8")]
			[Address(RVA = "0x88B374", Offset = "0x88B374", VA = "0x88B374")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018F9")]
			[Address(RVA = "0x88B37C", Offset = "0x88B37C", VA = "0x88B37C")]
			set
			{
			}
		}

		[Token(Token = "0x1700028F")]
		public LoggingMethod.Level PubnubLogLevel
		{
			[Token(Token = "0x60018FA")]
			[Address(RVA = "0x88B39C", Offset = "0x88B39C", VA = "0x88B39C")]
			get
			{
				return default(LoggingMethod.Level);
			}
			[Token(Token = "0x60018FB")]
			[Address(RVA = "0x88B3A4", Offset = "0x88B3A4", VA = "0x88B3A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000290")]
		public PubnubErrorFilter.Level PubnubErrorLevel
		{
			[Token(Token = "0x60018FC")]
			[Address(RVA = "0x88B47C", Offset = "0x88B47C", VA = "0x88B47C")]
			get
			{
				return default(PubnubErrorFilter.Level);
			}
			[Token(Token = "0x60018FD")]
			[Address(RVA = "0x88B484", Offset = "0x88B484", VA = "0x88B484")]
			set
			{
			}
		}

		[Token(Token = "0x17000291")]
		public string FilterExpr
		{
			[Token(Token = "0x60018FE")]
			[Address(RVA = "0x88B55C", Offset = "0x88B55C", VA = "0x88B55C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018FF")]
			[Address(RVA = "0x88B564", Offset = "0x88B564", VA = "0x88B564")]
			set
			{
			}
		}

		[Token(Token = "0x17000292")]
		public string Region
		{
			[Token(Token = "0x6001900")]
			[Address(RVA = "0x88B56C", Offset = "0x88B56C", VA = "0x88B56C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC04C", Offset = "0x3AC04C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001901")]
			[Address(RVA = "0x88B574", Offset = "0x88B574", VA = "0x88B574")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC05C", Offset = "0x3AC05C")]
			set
			{
			}
		}

		[Token(Token = "0x14000032")]
		public event PropertyChangedEventHandler PropertyChanged
		{
			[Token(Token = "0x60018D0")]
			[Address(RVA = "0x88AA78", Offset = "0x88AA78", VA = "0x88AA78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC02C", Offset = "0x3AC02C")]
			add
			{
			}
			[Token(Token = "0x60018D1")]
			[Address(RVA = "0x88AB28", Offset = "0x88AB28", VA = "0x88AB28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC03C", Offset = "0x3AC03C")]
			remove
			{
			}
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0x88ABD8", Offset = "0x88ABD8", VA = "0x88ABD8")]
		public void RaisePropertyChanged(string propertyName)
		{
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0x88B580", Offset = "0x88B580", VA = "0x88B580")]
		public PubnubUnity(string publishKey, string subscribeKey, string secretKey, string cipherKey, bool sslOn)
		{
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0x88BBA0", Offset = "0x88BBA0", VA = "0x88BBA0")]
		public PubnubUnity(string publishKey, string subscribeKey, string secretKey)
		{
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0x88BCE8", Offset = "0x88BCE8", VA = "0x88BCE8")]
		public PubnubUnity(string publishKey, string subscribeKey)
		{
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0x88BE28", Offset = "0x88BE28", VA = "0x88BE28", Slot = "1")]
		~PubnubUnity()
		{
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0x88B6D0", Offset = "0x88B6D0", VA = "0x88B6D0")]
		private void Init(string publishKey, string subscribeKey, string secretKey, string cipherKey, bool sslOn)
		{
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0x88BE30", Offset = "0x88BE30", VA = "0x88BE30")]
		private static bool ValidatorUnity(object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors)
		{
			return default(bool);
		}

		[Token(Token = "0x6001908")]
		public void Subscribe<T>(string channel, string channelGroup, long timetoken, Action<T> userCallback, Action<T> connectCallback, Action<T> wildcardPresenceCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001909")]
		public bool Publish<T>(string channel, object message, bool storeInHistory, Dictionary<string, string> metadata, int ttl, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x600190A")]
		public void Presence<T>(string channel, string channelGroup, long timetoken, Action<T> userCallback, Action<T> connectCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x600190B")]
		public bool DetailedHistory<T>(string channel, long start, long end, int count, bool reverse, bool includeToken, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x600190C")]
		public bool HereNow<T>(string channel, string channelGroup, bool showUUIDList, bool includeUserState, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x600190D")]
		public bool GlobalHereNow<T>(bool showUUIDList, bool includeUserState, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x600190E")]
		public void WhereNow<T>(string uuid, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x600190F")]
		public void PresenceUnsubscribe<T>(string channel, string channelGroup, Action<T> userCallback, Action<T> connectCallback, Action<T> disconnectCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001910")]
		public void Unsubscribe<T>(string channel, string channelGroup, Action<T> userCallback, Action<T> connectCallback, Action<T> disconnectCallback, Action<T> wildcardPresenceCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001911")]
		public bool Time<T>(Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001912")]
		public bool GrantAccess<T>(string channel, string authenticationKey, bool read, bool write, int ttl, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001913")]
		public bool GrantPresenceAccess<T>(string channel, string authenticationKey, bool read, bool write, int ttl, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001914")]
		public void AuditAccess<T>(string channel, string authenticationKey, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001915")]
		public void AuditPresenceAccess<T>(string channel, string authenticationKey, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001916")]
		public void SetUserState<T>(string channel, string channelGroup, string uuid, string jsonUserState, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001917")]
		public void SetUserState<T>(string channel, string channelGroup, string uuid, KeyValuePair<string, object> keyValuePair, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001918")]
		private void SharedSetUserState<T>(string channel, string channelGroup, List<ChannelEntity> channelEntities, string uuid, string jsonUserState)
		{
		}

		[Token(Token = "0x6001919")]
		public void GetUserState<T>(string channel, string channelGroup, string uuid, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x600191A")]
		public void RegisterDeviceForPush<T>(string channel, PushTypeService pushType, string pushToken, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x600191B")]
		public void UnregisterDeviceForPush<T>(PushTypeService pushType, string pushToken, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x600191C")]
		public void RemoveChannelForDevicePush<T>(string channel, PushTypeService pushType, string pushToken, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x600191D")]
		public void GetChannelsForDevicePush<T>(PushTypeService pushType, string pushToken, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x600191E")]
		public void AddChannelsToChannelGroup<T>(string[] channels, string nameSpace, string groupName, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x600191F")]
		public void RemoveChannelsFromChannelGroup<T>(string[] channels, string nameSpace, string groupName, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001920")]
		public void RemoveChannelGroup<T>(string nameSpace, string groupName, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001921")]
		public void GetChannelsForChannelGroup<T>(string nameSpace, string groupName, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001922")]
		public void GetAllChannelGroups<T>(string nameSpace, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001923")]
		public void ChannelGroupAuditAccess<T>(string channelGroup, string authenticationKey, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001924")]
		public bool ChannelGroupGrantAccess<T>(string channelGroup, string authenticationKey, bool read, bool write, bool manage, int ttl, Action<T> userCallback, Action<PubnubClientError> errorCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0x88B318", Offset = "0x88B318", VA = "0x88B318")]
		public void TerminateCurrentSubscriberRequest()
		{
		}

		[Token(Token = "0x6001926")]
		public void TerminateCurrentSubscriberRequest<T>()
		{
		}

		[Token(Token = "0x6001927")]
		public void EndPendingRequests<T>()
		{
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0x88BE38", Offset = "0x88BE38", VA = "0x88BE38")]
		public void ResetPublishMessageCounter()
		{
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0x88BE60", Offset = "0x88BE60", VA = "0x88BE60")]
		public void CleanUp()
		{
		}

		[Token(Token = "0x600192A")]
		public void ChangeUUID<T>(string newUUID)
		{
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0x88C018", Offset = "0x88C018", VA = "0x88C018")]
		private void StopHeartbeat()
		{
		}

		[Token(Token = "0x600192C")]
		private void StopHeartbeat<T>()
		{
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0x88C074", Offset = "0x88C074", VA = "0x88C074")]
		private void StopPresenceHeartbeat()
		{
		}

		[Token(Token = "0x600192E")]
		private void StopPresenceHeartbeat<T>()
		{
		}

		[Token(Token = "0x600192F")]
		private void StartPresenceHeartbeat<T>(bool pause, int pauseTime, RequestState<T> pubnubRequestState)
		{
		}

		[Token(Token = "0x6001930")]
		private void RunPresenceHeartbeat<T>(bool pause, int pauseTime, RequestState<T> pubnubRequestState)
		{
		}

		[Token(Token = "0x6001931")]
		private void StartHeartbeat<T>(bool pause, int pauseTime, RequestState<T> pubnubRequestState)
		{
		}

		[Token(Token = "0x6001932")]
		private void RunHeartbeat<T>(bool pause, int pauseTime, RequestState<T> pubnubRequestState)
		{
		}

		[Token(Token = "0x6001933")]
		private void InternetConnectionAvailableHandler<T>(CustomEventArgs<T> cea)
		{
		}

		[Token(Token = "0x6001934")]
		private void HeartbeatHandler<T>(CustomEventArgs<T> cea)
		{
		}

		[Token(Token = "0x6001935")]
		private void PresenceHeartbeatHandler<T>(CustomEventArgs<T> cea)
		{
		}

		[Token(Token = "0x6001936")]
		private void SubscribePresenceHanlder<T>(CustomEventArgs<T> cea)
		{
		}

		[Token(Token = "0x6001937")]
		private void NonSubscribeHandler<T>(CustomEventArgs<T> cea)
		{
		}

		[Token(Token = "0x6001938")]
		private void ProcessCoroutineCompleteResponse<T>(CustomEventArgs<T> cea)
		{
		}

		[Token(Token = "0x6001939")]
		private void CoroutineCompleteHandler<T>(object sender, EventArgs ea)
		{
		}

		[Token(Token = "0x600193A")]
		private void ResponseCallbackNonErrorHandler<T>(CustomEventArgs<T> cea, RequestState<T> requestState)
		{
		}

		[Token(Token = "0x600193B")]
		private void UrlProcessResponseCallbackNonAsync<T>(CustomEventArgs<T> cea)
		{
		}

		[Token(Token = "0x600193C")]
		protected void MultiplexExceptionHandler<T>(ResponseType type, bool reconnectMaxTried, bool reconnect)
		{
		}

		[Token(Token = "0x600193D")]
		private void HandleMultiplexException<T>(object sender, EventArgs ea)
		{
		}

		[Token(Token = "0x600193E")]
		private SubscribeEnvelope ParseReceiedJSONV2<T>(RequestState<T> requestState, string jsonString)
		{
			return null;
		}

		[Token(Token = "0x600193F")]
		private void ParseReceiedTimetoken<T>(RequestState<T> requestState, long receivedTimetoken)
		{
		}

		[Token(Token = "0x6001940")]
		private void RunRequests<T>(Uri requestUri, RequestState<T> pubnubRequestState)
		{
		}

		[Token(Token = "0x6001941")]
		private bool UrlProcessRequest<T>(Uri requestUri, RequestState<T> pubnubRequestState)
		{
			return default(bool);
		}

		[Token(Token = "0x6001942")]
		private void AbortPreviousRequest<T>(List<ChannelEntity> existingChannels)
		{
		}

		[Token(Token = "0x6001943")]
		private void RemoveUnsubscribedChannelsAndDeleteUserState<T>(List<ChannelEntity> channelEntities)
		{
		}

		[Token(Token = "0x6001944")]
		private void ContinueToSubscribeRestOfChannels<T>(ResponseType type, Action<T> userCallback, Action<T> connectCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001945")]
		private void MultiChannelUnsubscribeInit<T>(ResponseType respType, string channel, string channelGroups, Action<T> userCallback, Action<T> connectCallback, Action<T> disconnectCallback, Action<PubnubClientError> errorCallback)
		{
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0x88C0D0", Offset = "0x88C0D0", VA = "0x88C0D0")]
		private void ResetInternetCheckSettings()
		{
		}

		[Token(Token = "0x6001947")]
		public void MultiChannelSubscribeInit<T>(ResponseType respType, string channel, string channelGroup, long timetokenToUse, Action<T> userCallback, Action<T> connectCallback, Action<PubnubClientError> errorCallback, Action<T> wildcardPresenceCallback)
		{
		}

		[Token(Token = "0x6001948")]
		private bool CheckAllChannelsAreUnsubscribed<T>()
		{
			return default(bool);
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0x88C0E4", Offset = "0x88C0E4", VA = "0x88C0E4")]
		private long SaveLastTimetoken(long timetoken)
		{
			return default(long);
		}

		[Token(Token = "0x600194A")]
		private void MultiChannelSubscribeRequest<T>(ResponseType type, long timetoken, bool reconnect)
		{
		}

		[Token(Token = "0x600194B")]
		private void RetryLoop<T>(RequestState<T> pubnubRequestState)
		{
		}
	}
	[Token(Token = "0x200033D")]
	public class ReconnectState<T>
	{
		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string[] Channels;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ResponseType Type;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action<T> Callback;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action<PubnubClientError> ErrorCallback;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action<T> ConnectCallback;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public object Timetoken;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Reconnect;

		[Token(Token = "0x600194D")]
		public ReconnectState()
		{
		}
	}
	[Token(Token = "0x200033E")]
	public enum ResponseType
	{
		[Token(Token = "0x40018FD")]
		Publish,
		[Token(Token = "0x40018FE")]
		History,
		[Token(Token = "0x40018FF")]
		Time,
		[Token(Token = "0x4001900")]
		SubscribeV2,
		[Token(Token = "0x4001901")]
		PresenceV2,
		[Token(Token = "0x4001902")]
		HereNow,
		[Token(Token = "0x4001903")]
		Heartbeat,
		[Token(Token = "0x4001904")]
		DetailedHistory,
		[Token(Token = "0x4001905")]
		Leave,
		[Token(Token = "0x4001906")]
		Unsubscribe,
		[Token(Token = "0x4001907")]
		PresenceUnsubscribe,
		[Token(Token = "0x4001908")]
		GrantAccess,
		[Token(Token = "0x4001909")]
		AuditAccess,
		[Token(Token = "0x400190A")]
		RevokeAccess,
		[Token(Token = "0x400190B")]
		PresenceHeartbeat,
		[Token(Token = "0x400190C")]
		SetUserState,
		[Token(Token = "0x400190D")]
		GetUserState,
		[Token(Token = "0x400190E")]
		WhereNow,
		[Token(Token = "0x400190F")]
		GlobalHereNow,
		[Token(Token = "0x4001910")]
		PushRegister,
		[Token(Token = "0x4001911")]
		PushRemove,
		[Token(Token = "0x4001912")]
		PushGet,
		[Token(Token = "0x4001913")]
		PushUnregister,
		[Token(Token = "0x4001914")]
		ChannelGroupAdd,
		[Token(Token = "0x4001915")]
		ChannelGroupRemove,
		[Token(Token = "0x4001916")]
		ChannelGroupRemoveAll,
		[Token(Token = "0x4001917")]
		ChannelGroupGet,
		[Token(Token = "0x4001918")]
		ChannelGroupGrantAccess,
		[Token(Token = "0x4001919")]
		ChannelGroupAuditAccess,
		[Token(Token = "0x400191A")]
		ChannelGroupRevokeAccess
	}
	[Token(Token = "0x200033F")]
	internal class InternetState<T>
	{
		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action<bool> Callback;

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action<PubnubClientError> ErrorCallback;

		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string[] Channels;

		[Token(Token = "0x600194E")]
		public InternetState()
		{
		}
	}
	[Token(Token = "0x2000340")]
	public class StoredRequestState
	{
		[Token(Token = "0x2000891")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D7CC", Offset = "0x39D7CC")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x40028C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public object reqState;

			[Token(Token = "0x60036F9")]
			[Address(RVA = "0x88C814", Offset = "0x88C814", VA = "0x88C814")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x60036FA")]
			[Address(RVA = "0x88C96C", Offset = "0x88C96C", VA = "0x88C96C")]
			internal object <SetRequestState>b__0(CurrentRequestType oldData, object newData)
			{
				return null;
			}
		}

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static StoredRequestState instance;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly object syncRoot;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private SafeDictionary<CurrentRequestType, object> requestStates;

		[Token(Token = "0x17000293")]
		public static StoredRequestState Instance
		{
			[Token(Token = "0x6001950")]
			[Address(RVA = "0x88C50C", Offset = "0x88C50C", VA = "0x88C50C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0x88C488", Offset = "0x88C488", VA = "0x88C488")]
		private StoredRequestState()
		{
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0x88C6FC", Offset = "0x88C6FC", VA = "0x88C6FC")]
		public void SetRequestState(CurrentRequestType key, object requestState)
		{
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0x88C81C", Offset = "0x88C81C", VA = "0x88C81C")]
		public object GetStoredRequestState(CurrentRequestType aKey)
		{
			return null;
		}
	}
	[Token(Token = "0x2000341")]
	public class RequestState<T>
	{
		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action<T> SuccessCallback;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action<PubnubClientError> ErrorCallback;

		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PubnubWebRequest Request;

		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PubnubWebResponse Response;

		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ResponseType RespType;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<ChannelEntity> ChannelEntities;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Timeout;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Reconnect;

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public long Timetoken;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Type TypeParameterType;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public long ID;

		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string UUID;

		[Token(Token = "0x6001954")]
		public RequestState()
		{
		}

		[Token(Token = "0x6001955")]
		public RequestState(RequestState<T> requestState)
		{
		}
	}
	[Token(Token = "0x2000342")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x39A9BC", Offset = "0x39A9BC")]
	public class SafeDictionary<TKey, TValue> : IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IEnumerable
	{
		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly object syncRoot;

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<TKey, TValue> d;

		[Token(Token = "0x17000294")]
		public ICollection<TKey> Keys
		{
			[Token(Token = "0x600195A")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000295")]
		public ICollection<TValue> Values
		{
			[Token(Token = "0x600195F")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000296")]
		public TValue Item
		{
			[Token(Token = "0x6001960")]
			get
			{
				return (TValue)null;
			}
			[Token(Token = "0x6001961")]
			set
			{
			}
		}

		[Token(Token = "0x17000297")]
		public int Count
		{
			[Token(Token = "0x6001966")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000298")]
		public bool IsReadOnly
		{
			[Token(Token = "0x6001967")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001956")]
		public void Add(TKey key, TValue value)
		{
		}

		[Token(Token = "0x6001957")]
		public TValue AddOrUpdate(TKey key, TValue value, Func<TKey, TValue, TValue> f)
		{
			return (TValue)null;
		}

		[Token(Token = "0x6001958")]
		public TValue GetOrAdd(TKey key, TValue value)
		{
			return (TValue)null;
		}

		[Token(Token = "0x6001959")]
		public bool ContainsKey(TKey key)
		{
			return default(bool);
		}

		[Token(Token = "0x600195B")]
		public bool Remove(TKey key)
		{
			return default(bool);
		}

		[Token(Token = "0x600195C")]
		public bool Remove(TKey key, out TValue value)
		{
			return default(bool);
		}

		[Token(Token = "0x600195D")]
		public bool TryRemove(TKey key, out TValue value)
		{
			return default(bool);
		}

		[Token(Token = "0x600195E")]
		public bool TryGetValue(TKey key, out TValue value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001962")]
		public void Add(KeyValuePair<TKey, TValue> item)
		{
		}

		[Token(Token = "0x6001963")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001964")]
		public bool Contains(KeyValuePair<TKey, TValue> item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001965")]
		public void CopyTo(KeyValuePair<TKey, TValue>[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6001968")]
		public bool Remove(KeyValuePair<TKey, TValue> item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001969")]
		public IEnumerator<KeyValuePair<TKey, TValue>> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600196A")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600196B")]
		public SafeDictionary()
		{
		}
	}
	[Token(Token = "0x2000343")]
	internal class SubscribeEnvelope
	{
		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1950", Offset = "0x3A1950")]
		private List<SubscribeMessage> <m>k__BackingField;

		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1960", Offset = "0x3A1960")]
		private TimetokenMetadata <t>k__BackingField;

		[Token(Token = "0x17000299")]
		private List<SubscribeMessage> m
		{
			[Token(Token = "0x600196C")]
			[Address(RVA = "0x88C974", Offset = "0x88C974", VA = "0x88C974")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC06C", Offset = "0x3AC06C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600196D")]
			[Address(RVA = "0x88C97C", Offset = "0x88C97C", VA = "0x88C97C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC07C", Offset = "0x3AC07C")]
			set
			{
			}
		}

		[Token(Token = "0x1700029A")]
		private TimetokenMetadata t
		{
			[Token(Token = "0x600196E")]
			[Address(RVA = "0x88C984", Offset = "0x88C984", VA = "0x88C984")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC08C", Offset = "0x3AC08C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600196F")]
			[Address(RVA = "0x88C98C", Offset = "0x88C98C", VA = "0x88C98C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC09C", Offset = "0x3AC09C")]
			set
			{
			}
		}

		[Token(Token = "0x1700029B")]
		public List<SubscribeMessage> Messages
		{
			[Token(Token = "0x6001970")]
			[Address(RVA = "0x88C994", Offset = "0x88C994", VA = "0x88C994")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001971")]
			[Address(RVA = "0x88C99C", Offset = "0x88C99C", VA = "0x88C99C")]
			set
			{
			}
		}

		[Token(Token = "0x1700029C")]
		public TimetokenMetadata TimetokenMeta
		{
			[Token(Token = "0x6001972")]
			[Address(RVA = "0x88C9A4", Offset = "0x88C9A4", VA = "0x88C9A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001973")]
			[Address(RVA = "0x88C9AC", Offset = "0x88C9AC", VA = "0x88C9AC")]
			set
			{
			}
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0x88C9B4", Offset = "0x88C9B4", VA = "0x88C9B4")]
		public SubscribeEnvelope()
		{
		}
	}
	[Token(Token = "0x2000344")]
	public class PNPresenceEvent
	{
		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1970", Offset = "0x3A1970")]
		private string <Action>k__BackingField;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1980", Offset = "0x3A1980")]
		private string <UUID>k__BackingField;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1990", Offset = "0x3A1990")]
		private int <Occupancy>k__BackingField;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A19A0", Offset = "0x3A19A0")]
		private long <Timestamp>k__BackingField;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A19B0", Offset = "0x3A19B0")]
		private object <State>k__BackingField;

		[Token(Token = "0x1700029D")]
		public string Action
		{
			[Token(Token = "0x6001975")]
			[Address(RVA = "0x9187AC", Offset = "0x9187AC", VA = "0x9187AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC0AC", Offset = "0x3AC0AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001976")]
			[Address(RVA = "0x9187B4", Offset = "0x9187B4", VA = "0x9187B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC0BC", Offset = "0x3AC0BC")]
			set
			{
			}
		}

		[Token(Token = "0x1700029E")]
		public string UUID
		{
			[Token(Token = "0x6001977")]
			[Address(RVA = "0x9187BC", Offset = "0x9187BC", VA = "0x9187BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC0CC", Offset = "0x3AC0CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001978")]
			[Address(RVA = "0x9187C4", Offset = "0x9187C4", VA = "0x9187C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC0DC", Offset = "0x3AC0DC")]
			set
			{
			}
		}

		[Token(Token = "0x1700029F")]
		public int Occupancy
		{
			[Token(Token = "0x6001979")]
			[Address(RVA = "0x9187CC", Offset = "0x9187CC", VA = "0x9187CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC0EC", Offset = "0x3AC0EC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600197A")]
			[Address(RVA = "0x9187D4", Offset = "0x9187D4", VA = "0x9187D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC0FC", Offset = "0x3AC0FC")]
			set
			{
			}
		}

		[Token(Token = "0x170002A0")]
		public long Timestamp
		{
			[Token(Token = "0x600197B")]
			[Address(RVA = "0x9187DC", Offset = "0x9187DC", VA = "0x9187DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC10C", Offset = "0x3AC10C")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x600197C")]
			[Address(RVA = "0x9187E4", Offset = "0x9187E4", VA = "0x9187E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC11C", Offset = "0x3AC11C")]
			set
			{
			}
		}

		[Token(Token = "0x170002A1")]
		public object State
		{
			[Token(Token = "0x600197D")]
			[Address(RVA = "0x9187F4", Offset = "0x9187F4", VA = "0x9187F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC12C", Offset = "0x3AC12C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600197E")]
			[Address(RVA = "0x9187FC", Offset = "0x9187FC", VA = "0x9187FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC13C", Offset = "0x3AC13C")]
			set
			{
			}
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0x9140E8", Offset = "0x9140E8", VA = "0x9140E8")]
		public PNPresenceEvent(string action, string uuid, int Occupancy, long timestamp, object state)
		{
		}
	}
	[Token(Token = "0x2000345")]
	public class PNMessageResult
	{
		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A19C0", Offset = "0x3A19C0")]
		private object <Payload>k__BackingField;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A19D0", Offset = "0x3A19D0")]
		private string <Subscription>k__BackingField;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A19E0", Offset = "0x3A19E0")]
		private string <Channel>k__BackingField;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A19F0", Offset = "0x3A19F0")]
		private long <Timetoken>k__BackingField;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1A00", Offset = "0x3A1A00")]
		private long <OriginatingTimetoken>k__BackingField;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1A10", Offset = "0x3A1A10")]
		private object <UserMetadata>k__BackingField;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1A20", Offset = "0x3A1A20")]
		private string <IssuingClientId>k__BackingField;

		[Token(Token = "0x170002A2")]
		public object Payload
		{
			[Token(Token = "0x6001980")]
			[Address(RVA = "0x91872C", Offset = "0x91872C", VA = "0x91872C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC14C", Offset = "0x3AC14C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001981")]
			[Address(RVA = "0x918734", Offset = "0x918734", VA = "0x918734")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC15C", Offset = "0x3AC15C")]
			set
			{
			}
		}

		[Token(Token = "0x170002A3")]
		public string Subscription
		{
			[Token(Token = "0x6001982")]
			[Address(RVA = "0x91873C", Offset = "0x91873C", VA = "0x91873C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC16C", Offset = "0x3AC16C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001983")]
			[Address(RVA = "0x918744", Offset = "0x918744", VA = "0x918744")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC17C", Offset = "0x3AC17C")]
			set
			{
			}
		}

		[Token(Token = "0x170002A4")]
		public string Channel
		{
			[Token(Token = "0x6001984")]
			[Address(RVA = "0x91874C", Offset = "0x91874C", VA = "0x91874C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC18C", Offset = "0x3AC18C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001985")]
			[Address(RVA = "0x918754", Offset = "0x918754", VA = "0x918754")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC19C", Offset = "0x3AC19C")]
			set
			{
			}
		}

		[Token(Token = "0x170002A5")]
		public long Timetoken
		{
			[Token(Token = "0x6001986")]
			[Address(RVA = "0x91875C", Offset = "0x91875C", VA = "0x91875C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC1AC", Offset = "0x3AC1AC")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6001987")]
			[Address(RVA = "0x918764", Offset = "0x918764", VA = "0x918764")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC1BC", Offset = "0x3AC1BC")]
			set
			{
			}
		}

		[Token(Token = "0x170002A6")]
		public long OriginatingTimetoken
		{
			[Token(Token = "0x6001988")]
			[Address(RVA = "0x918774", Offset = "0x918774", VA = "0x918774")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC1CC", Offset = "0x3AC1CC")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6001989")]
			[Address(RVA = "0x91877C", Offset = "0x91877C", VA = "0x91877C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC1DC", Offset = "0x3AC1DC")]
			set
			{
			}
		}

		[Token(Token = "0x170002A7")]
		public object UserMetadata
		{
			[Token(Token = "0x600198A")]
			[Address(RVA = "0x91878C", Offset = "0x91878C", VA = "0x91878C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC1EC", Offset = "0x3AC1EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600198B")]
			[Address(RVA = "0x918794", Offset = "0x918794", VA = "0x918794")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC1FC", Offset = "0x3AC1FC")]
			set
			{
			}
		}

		[Token(Token = "0x170002A8")]
		public string IssuingClientId
		{
			[Token(Token = "0x600198C")]
			[Address(RVA = "0x91879C", Offset = "0x91879C", VA = "0x91879C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC20C", Offset = "0x3AC20C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600198D")]
			[Address(RVA = "0x9187A4", Offset = "0x9187A4", VA = "0x9187A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC21C", Offset = "0x3AC21C")]
			set
			{
			}
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0x913DC8", Offset = "0x913DC8", VA = "0x913DC8")]
		public PNMessageResult(string subscribedChannel, string actualchannel, object payload, long timetoken, long originatingTimetoken, object userMetadata, string issuingClientId)
		{
		}
	}
	[Token(Token = "0x2000346")]
	public class PNPresenceEventResult
	{
		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1A30", Offset = "0x3A1A30")]
		private string <Event>k__BackingField;

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1A40", Offset = "0x3A1A40")]
		private string <Subscription>k__BackingField;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1A50", Offset = "0x3A1A50")]
		private string <Channel>k__BackingField;

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1A60", Offset = "0x3A1A60")]
		private string <UUID>k__BackingField;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1A70", Offset = "0x3A1A70")]
		private long <Timestamp>k__BackingField;

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1A80", Offset = "0x3A1A80")]
		private long <Timetoken>k__BackingField;

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1A90", Offset = "0x3A1A90")]
		private int <Occupancy>k__BackingField;

		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1AA0", Offset = "0x3A1AA0")]
		private object <State>k__BackingField;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1AB0", Offset = "0x3A1AB0")]
		private object <UserMetadata>k__BackingField;

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1AC0", Offset = "0x3A1AC0")]
		private string <IssuingClientId>k__BackingField;

		[Token(Token = "0x170002A9")]
		public string Event
		{
			[Token(Token = "0x600198F")]
			[Address(RVA = "0x918804", Offset = "0x918804", VA = "0x918804")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC22C", Offset = "0x3AC22C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001990")]
			[Address(RVA = "0x91880C", Offset = "0x91880C", VA = "0x91880C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC23C", Offset = "0x3AC23C")]
			set
			{
			}
		}

		[Token(Token = "0x170002AA")]
		public string Subscription
		{
			[Token(Token = "0x6001991")]
			[Address(RVA = "0x918814", Offset = "0x918814", VA = "0x918814")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC24C", Offset = "0x3AC24C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001992")]
			[Address(RVA = "0x91881C", Offset = "0x91881C", VA = "0x91881C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC25C", Offset = "0x3AC25C")]
			set
			{
			}
		}

		[Token(Token = "0x170002AB")]
		public string Channel
		{
			[Token(Token = "0x6001993")]
			[Address(RVA = "0x918824", Offset = "0x918824", VA = "0x918824")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC26C", Offset = "0x3AC26C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001994")]
			[Address(RVA = "0x91882C", Offset = "0x91882C", VA = "0x91882C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC27C", Offset = "0x3AC27C")]
			set
			{
			}
		}

		[Token(Token = "0x170002AC")]
		public string UUID
		{
			[Token(Token = "0x6001995")]
			[Address(RVA = "0x918834", Offset = "0x918834", VA = "0x918834")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC28C", Offset = "0x3AC28C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001996")]
			[Address(RVA = "0x91883C", Offset = "0x91883C", VA = "0x91883C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC29C", Offset = "0x3AC29C")]
			set
			{
			}
		}

		[Token(Token = "0x170002AD")]
		public long Timestamp
		{
			[Token(Token = "0x6001997")]
			[Address(RVA = "0x918844", Offset = "0x918844", VA = "0x918844")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC2AC", Offset = "0x3AC2AC")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6001998")]
			[Address(RVA = "0x91884C", Offset = "0x91884C", VA = "0x91884C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC2BC", Offset = "0x3AC2BC")]
			set
			{
			}
		}

		[Token(Token = "0x170002AE")]
		public long Timetoken
		{
			[Token(Token = "0x6001999")]
			[Address(RVA = "0x91885C", Offset = "0x91885C", VA = "0x91885C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC2CC", Offset = "0x3AC2CC")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x600199A")]
			[Address(RVA = "0x918864", Offset = "0x918864", VA = "0x918864")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC2DC", Offset = "0x3AC2DC")]
			set
			{
			}
		}

		[Token(Token = "0x170002AF")]
		public int Occupancy
		{
			[Token(Token = "0x600199B")]
			[Address(RVA = "0x918874", Offset = "0x918874", VA = "0x918874")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC2EC", Offset = "0x3AC2EC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600199C")]
			[Address(RVA = "0x91887C", Offset = "0x91887C", VA = "0x91887C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC2FC", Offset = "0x3AC2FC")]
			set
			{
			}
		}

		[Token(Token = "0x170002B0")]
		public object State
		{
			[Token(Token = "0x600199D")]
			[Address(RVA = "0x918884", Offset = "0x918884", VA = "0x918884")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC30C", Offset = "0x3AC30C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600199E")]
			[Address(RVA = "0x91888C", Offset = "0x91888C", VA = "0x91888C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC31C", Offset = "0x3AC31C")]
			set
			{
			}
		}

		[Token(Token = "0x170002B1")]
		public object UserMetadata
		{
			[Token(Token = "0x600199F")]
			[Address(RVA = "0x918894", Offset = "0x918894", VA = "0x918894")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC32C", Offset = "0x3AC32C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019A0")]
			[Address(RVA = "0x91889C", Offset = "0x91889C", VA = "0x91889C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC33C", Offset = "0x3AC33C")]
			set
			{
			}
		}

		[Token(Token = "0x170002B2")]
		public string IssuingClientId
		{
			[Token(Token = "0x60019A1")]
			[Address(RVA = "0x9188A4", Offset = "0x9188A4", VA = "0x9188A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC34C", Offset = "0x3AC34C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019A2")]
			[Address(RVA = "0x9188AC", Offset = "0x9188AC", VA = "0x9188AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC35C", Offset = "0x3AC35C")]
			set
			{
			}
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0x91438C", Offset = "0x91438C", VA = "0x91438C")]
		public PNPresenceEventResult(string subscribedChannel, string actualchannel, string presenceEvent, long timetoken, long timestamp, object userMetadata, object state, string uuid, int occupancy, string issuingClientId)
		{
		}
	}
	[Token(Token = "0x2000347")]
	internal class SubscribeMessage
	{
		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1AD0", Offset = "0x3A1AD0")]
		private string <a>k__BackingField;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1AE0", Offset = "0x3A1AE0")]
		private string <b>k__BackingField;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1AF0", Offset = "0x3A1AF0")]
		private string <c>k__BackingField;

		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1B00", Offset = "0x3A1B00")]
		private object <d>k__BackingField;

		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1B10", Offset = "0x3A1B10")]
		private string <f>k__BackingField;

		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1B20", Offset = "0x3A1B20")]
		private string <i>k__BackingField;

		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1B30", Offset = "0x3A1B30")]
		private string <k>k__BackingField;

		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1B40", Offset = "0x3A1B40")]
		private long <s>k__BackingField;

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1B50", Offset = "0x3A1B50")]
		private TimetokenMetadata <o>k__BackingField;

		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1B60", Offset = "0x3A1B60")]
		private TimetokenMetadata <p>k__BackingField;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1B70", Offset = "0x3A1B70")]
		private object <u>k__BackingField;

		[Token(Token = "0x170002B3")]
		private string a
		{
			[Token(Token = "0x60019A4")]
			[Address(RVA = "0x88C9BC", Offset = "0x88C9BC", VA = "0x88C9BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC36C", Offset = "0x3AC36C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019A5")]
			[Address(RVA = "0x88C9C4", Offset = "0x88C9C4", VA = "0x88C9C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC37C", Offset = "0x3AC37C")]
			set
			{
			}
		}

		[Token(Token = "0x170002B4")]
		private string b
		{
			[Token(Token = "0x60019A6")]
			[Address(RVA = "0x88C9CC", Offset = "0x88C9CC", VA = "0x88C9CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC38C", Offset = "0x3AC38C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019A7")]
			[Address(RVA = "0x88C9D4", Offset = "0x88C9D4", VA = "0x88C9D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC39C", Offset = "0x3AC39C")]
			set
			{
			}
		}

		[Token(Token = "0x170002B5")]
		private string c
		{
			[Token(Token = "0x60019A8")]
			[Address(RVA = "0x88C9DC", Offset = "0x88C9DC", VA = "0x88C9DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC3AC", Offset = "0x3AC3AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019A9")]
			[Address(RVA = "0x88C9E4", Offset = "0x88C9E4", VA = "0x88C9E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC3BC", Offset = "0x3AC3BC")]
			set
			{
			}
		}

		[Token(Token = "0x170002B6")]
		private object d
		{
			[Token(Token = "0x60019AA")]
			[Address(RVA = "0x88C9EC", Offset = "0x88C9EC", VA = "0x88C9EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC3CC", Offset = "0x3AC3CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019AB")]
			[Address(RVA = "0x88C9F4", Offset = "0x88C9F4", VA = "0x88C9F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC3DC", Offset = "0x3AC3DC")]
			set
			{
			}
		}

		[Token(Token = "0x170002B7")]
		private string f
		{
			[Token(Token = "0x60019AC")]
			[Address(RVA = "0x88C9FC", Offset = "0x88C9FC", VA = "0x88C9FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC3EC", Offset = "0x3AC3EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019AD")]
			[Address(RVA = "0x88CA04", Offset = "0x88CA04", VA = "0x88CA04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC3FC", Offset = "0x3AC3FC")]
			set
			{
			}
		}

		[Token(Token = "0x170002B8")]
		private string i
		{
			[Token(Token = "0x60019AE")]
			[Address(RVA = "0x88CA0C", Offset = "0x88CA0C", VA = "0x88CA0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC40C", Offset = "0x3AC40C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019AF")]
			[Address(RVA = "0x88CA14", Offset = "0x88CA14", VA = "0x88CA14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC41C", Offset = "0x3AC41C")]
			set
			{
			}
		}

		[Token(Token = "0x170002B9")]
		private string k
		{
			[Token(Token = "0x60019B0")]
			[Address(RVA = "0x88CA1C", Offset = "0x88CA1C", VA = "0x88CA1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC42C", Offset = "0x3AC42C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019B1")]
			[Address(RVA = "0x88CA24", Offset = "0x88CA24", VA = "0x88CA24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC43C", Offset = "0x3AC43C")]
			set
			{
			}
		}

		[Token(Token = "0x170002BA")]
		private long s
		{
			[Token(Token = "0x60019B2")]
			[Address(RVA = "0x88CA2C", Offset = "0x88CA2C", VA = "0x88CA2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC44C", Offset = "0x3AC44C")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x60019B3")]
			[Address(RVA = "0x88CA34", Offset = "0x88CA34", VA = "0x88CA34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC45C", Offset = "0x3AC45C")]
			set
			{
			}
		}

		[Token(Token = "0x170002BB")]
		private TimetokenMetadata o
		{
			[Token(Token = "0x60019B4")]
			[Address(RVA = "0x88CA44", Offset = "0x88CA44", VA = "0x88CA44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC46C", Offset = "0x3AC46C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019B5")]
			[Address(RVA = "0x88CA4C", Offset = "0x88CA4C", VA = "0x88CA4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC47C", Offset = "0x3AC47C")]
			set
			{
			}
		}

		[Token(Token = "0x170002BC")]
		private TimetokenMetadata p
		{
			[Token(Token = "0x60019B6")]
			[Address(RVA = "0x88CA54", Offset = "0x88CA54", VA = "0x88CA54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC48C", Offset = "0x3AC48C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019B7")]
			[Address(RVA = "0x88CA5C", Offset = "0x88CA5C", VA = "0x88CA5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC49C", Offset = "0x3AC49C")]
			set
			{
			}
		}

		[Token(Token = "0x170002BD")]
		private object u
		{
			[Token(Token = "0x60019B8")]
			[Address(RVA = "0x88CA64", Offset = "0x88CA64", VA = "0x88CA64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC4AC", Offset = "0x3AC4AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019B9")]
			[Address(RVA = "0x88CA6C", Offset = "0x88CA6C", VA = "0x88CA6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC4BC", Offset = "0x3AC4BC")]
			set
			{
			}
		}

		[Token(Token = "0x170002BE")]
		public string Shard
		{
			[Token(Token = "0x60019BB")]
			[Address(RVA = "0x88CADC", Offset = "0x88CADC", VA = "0x88CADC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BF")]
		public string SubscriptionMatch
		{
			[Token(Token = "0x60019BC")]
			[Address(RVA = "0x88CAE4", Offset = "0x88CAE4", VA = "0x88CAE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C0")]
		public string Channel
		{
			[Token(Token = "0x60019BD")]
			[Address(RVA = "0x88CAEC", Offset = "0x88CAEC", VA = "0x88CAEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C1")]
		public object Payload
		{
			[Token(Token = "0x60019BE")]
			[Address(RVA = "0x88CAF4", Offset = "0x88CAF4", VA = "0x88CAF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C2")]
		public string Flags
		{
			[Token(Token = "0x60019BF")]
			[Address(RVA = "0x88CAFC", Offset = "0x88CAFC", VA = "0x88CAFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C3")]
		public string IssuingClientId
		{
			[Token(Token = "0x60019C0")]
			[Address(RVA = "0x88CB04", Offset = "0x88CB04", VA = "0x88CB04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C4")]
		public string SubscribeKey
		{
			[Token(Token = "0x60019C1")]
			[Address(RVA = "0x88CB0C", Offset = "0x88CB0C", VA = "0x88CB0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C5")]
		public long SequenceNumber
		{
			[Token(Token = "0x60019C2")]
			[Address(RVA = "0x88CB14", Offset = "0x88CB14", VA = "0x88CB14")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x170002C6")]
		public TimetokenMetadata OriginatingTimetoken
		{
			[Token(Token = "0x60019C3")]
			[Address(RVA = "0x88CB1C", Offset = "0x88CB1C", VA = "0x88CB1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C7")]
		public TimetokenMetadata PublishTimetokenMetadata
		{
			[Token(Token = "0x60019C4")]
			[Address(RVA = "0x88CB24", Offset = "0x88CB24", VA = "0x88CB24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C8")]
		public object UserMetadata
		{
			[Token(Token = "0x60019C5")]
			[Address(RVA = "0x88CB2C", Offset = "0x88CB2C", VA = "0x88CB2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0x88CA74", Offset = "0x88CA74", VA = "0x88CA74")]
		internal SubscribeMessage(string shard, string subscriptionMatch, string channel, object payload, string flags, string issuingClientId, string subscribeKey, long sequenceNumber, TimetokenMetadata originatingTimetoken, TimetokenMetadata publishMetadata, object userMetadata)
		{
		}
	}
	[Token(Token = "0x2000348")]
	internal class TimetokenMetadata
	{
		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1B80", Offset = "0x3A1B80")]
		private long <t>k__BackingField;

		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1B90", Offset = "0x3A1B90")]
		private string <r>k__BackingField;

		[Token(Token = "0x170002C9")]
		private long t
		{
			[Token(Token = "0x60019C6")]
			[Address(RVA = "0x88E8A4", Offset = "0x88E8A4", VA = "0x88E8A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC4CC", Offset = "0x3AC4CC")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x60019C7")]
			[Address(RVA = "0x88E8AC", Offset = "0x88E8AC", VA = "0x88E8AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC4DC", Offset = "0x3AC4DC")]
			set
			{
			}
		}

		[Token(Token = "0x170002CA")]
		private string r
		{
			[Token(Token = "0x60019C8")]
			[Address(RVA = "0x88E8BC", Offset = "0x88E8BC", VA = "0x88E8BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC4EC", Offset = "0x3AC4EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019C9")]
			[Address(RVA = "0x88E8C4", Offset = "0x88E8C4", VA = "0x88E8C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC4FC", Offset = "0x3AC4FC")]
			set
			{
			}
		}

		[Token(Token = "0x170002CB")]
		public long Timetoken
		{
			[Token(Token = "0x60019CB")]
			[Address(RVA = "0x88E8FC", Offset = "0x88E8FC", VA = "0x88E8FC")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x170002CC")]
		public string Region
		{
			[Token(Token = "0x60019CC")]
			[Address(RVA = "0x88E904", Offset = "0x88E904", VA = "0x88E904")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0x88E8CC", Offset = "0x88E8CC", VA = "0x88E8CC")]
		internal TimetokenMetadata(long timetoken, string region)
		{
		}
	}
	[Token(Token = "0x2000349")]
	public struct ChannelIdentity
	{
		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1BA0", Offset = "0x3A1BA0")]
		private string <ChannelOrChannelGroupName>k__BackingField;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1BB0", Offset = "0x3A1BB0")]
		private bool <IsChannelGroup>k__BackingField;

		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1BC0", Offset = "0x3A1BC0")]
		private bool <IsPresenceChannel>k__BackingField;

		[Token(Token = "0x170002CD")]
		public string ChannelOrChannelGroupName
		{
			[Token(Token = "0x60019CD")]
			[Address(RVA = "0x458668", Offset = "0x458668", VA = "0x458668")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC50C", Offset = "0x3AC50C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019CE")]
			[Address(RVA = "0x458670", Offset = "0x458670", VA = "0x458670")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC51C", Offset = "0x3AC51C")]
			set
			{
			}
		}

		[Token(Token = "0x170002CE")]
		public bool IsChannelGroup
		{
			[Token(Token = "0x60019CF")]
			[Address(RVA = "0x458678", Offset = "0x458678", VA = "0x458678")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC52C", Offset = "0x3AC52C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019D0")]
			[Address(RVA = "0x458680", Offset = "0x458680", VA = "0x458680")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC53C", Offset = "0x3AC53C")]
			set
			{
			}
		}

		[Token(Token = "0x170002CF")]
		public bool IsPresenceChannel
		{
			[Token(Token = "0x60019D1")]
			[Address(RVA = "0x458688", Offset = "0x458688", VA = "0x458688")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC54C", Offset = "0x3AC54C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019D2")]
			[Address(RVA = "0x458690", Offset = "0x458690", VA = "0x458690")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC55C", Offset = "0x3AC55C")]
			set
			{
			}
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0x458698", Offset = "0x458698", VA = "0x458698")]
		public ChannelIdentity(string channelOrChannelGroupName, bool isChannelGroup, bool isPresenceChannel)
		{
		}
	}
	[Token(Token = "0x200034A")]
	public class ChannelParameters
	{
		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1BD0", Offset = "0x3A1BD0")]
		private bool <IsAwaitingConnectCallback>k__BackingField;

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1BE0", Offset = "0x3A1BE0")]
		private bool <IsSubscribed>k__BackingField;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1BF0", Offset = "0x3A1BF0")]
		private object <Callbacks>k__BackingField;

		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1C00", Offset = "0x3A1C00")]
		private Dictionary<string, object> <UserState>k__BackingField;

		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1C10", Offset = "0x3A1C10")]
		private Type <TypeParameterType>k__BackingField;

		[Token(Token = "0x170002D0")]
		public bool IsAwaitingConnectCallback
		{
			[Token(Token = "0x60019D4")]
			[Address(RVA = "0x90FCB4", Offset = "0x90FCB4", VA = "0x90FCB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC56C", Offset = "0x3AC56C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019D5")]
			[Address(RVA = "0x90FCBC", Offset = "0x90FCBC", VA = "0x90FCBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC57C", Offset = "0x3AC57C")]
			set
			{
			}
		}

		[Token(Token = "0x170002D1")]
		public bool IsSubscribed
		{
			[Token(Token = "0x60019D6")]
			[Address(RVA = "0x90FCC4", Offset = "0x90FCC4", VA = "0x90FCC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC58C", Offset = "0x3AC58C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019D7")]
			[Address(RVA = "0x90FCCC", Offset = "0x90FCCC", VA = "0x90FCCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC59C", Offset = "0x3AC59C")]
			set
			{
			}
		}

		[Token(Token = "0x170002D2")]
		public object Callbacks
		{
			[Token(Token = "0x60019D8")]
			[Address(RVA = "0x90FCD4", Offset = "0x90FCD4", VA = "0x90FCD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC5AC", Offset = "0x3AC5AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019D9")]
			[Address(RVA = "0x90FCDC", Offset = "0x90FCDC", VA = "0x90FCDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC5BC", Offset = "0x3AC5BC")]
			set
			{
			}
		}

		[Token(Token = "0x170002D3")]
		public Dictionary<string, object> UserState
		{
			[Token(Token = "0x60019DA")]
			[Address(RVA = "0x90FCE4", Offset = "0x90FCE4", VA = "0x90FCE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC5CC", Offset = "0x3AC5CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019DB")]
			[Address(RVA = "0x90FCEC", Offset = "0x90FCEC", VA = "0x90FCEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC5DC", Offset = "0x3AC5DC")]
			set
			{
			}
		}

		[Token(Token = "0x170002D4")]
		public Type TypeParameterType
		{
			[Token(Token = "0x60019DC")]
			[Address(RVA = "0x90FCF4", Offset = "0x90FCF4", VA = "0x90FCF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC5EC", Offset = "0x3AC5EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019DD")]
			[Address(RVA = "0x90FCFC", Offset = "0x90FCFC", VA = "0x90FCFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC5FC", Offset = "0x3AC5FC")]
			set
			{
			}
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0x90FD04", Offset = "0x90FD04", VA = "0x90FD04")]
		public ChannelParameters()
		{
		}
	}
	[Token(Token = "0x200034B")]
	public class ChannelEntity
	{
		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ChannelIdentity ChannelID;

		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ChannelParameters ChannelParams;

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0x90FC44", Offset = "0x90FC44", VA = "0x90FC44")]
		public ChannelEntity(ChannelIdentity channelID, ChannelParameters channelParams)
		{
		}
	}
	[Token(Token = "0x200034C")]
	public sealed class Subscription
	{
		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Subscription instance;

		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static object syncRoot;

		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1C20", Offset = "0x3A1C20")]
		private bool <HasChannelGroups>k__BackingField;

		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1C30", Offset = "0x3A1C30")]
		private bool <HasPresenceChannels>k__BackingField;

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1C40", Offset = "0x3A1C40")]
		private bool <HasChannelsOrChannelGroups>k__BackingField;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1C50", Offset = "0x3A1C50")]
		private bool <HasChannels>k__BackingField;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1C60", Offset = "0x3A1C60")]
		private int <CurrentSubscribedChannelsCount>k__BackingField;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1C70", Offset = "0x3A1C70")]
		private int <CurrentSubscribedChannelGroupsCount>k__BackingField;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1C80", Offset = "0x3A1C80")]
		private List<ChannelEntity> <ChannelsAndChannelGroupsAwaitingConnectCallback>k__BackingField;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1C90", Offset = "0x3A1C90")]
		private List<ChannelEntity> <AllChannels>k__BackingField;

		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1CA0", Offset = "0x3A1CA0")]
		private List<ChannelEntity> <AllChannelGroups>k__BackingField;

		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1CB0", Offset = "0x3A1CB0")]
		private List<ChannelEntity> <AllSubscribedChannelsAndChannelGroups>k__BackingField;

		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1CC0", Offset = "0x3A1CC0")]
		private List<ChannelEntity> <AllPresenceChannelsOrChannelGroups>k__BackingField;

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1CD0", Offset = "0x3A1CD0")]
		private List<ChannelEntity> <AllNonPresenceChannelsOrChannelGroups>k__BackingField;

		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1CE0", Offset = "0x3A1CE0")]
		private string <CompiledUserState>k__BackingField;

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A1CF0", Offset = "0x3A1CF0")]
		private bool <ConnectCallbackSent>k__BackingField;

		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private SafeDictionary<ChannelIdentity, ChannelParameters> channelEntitiesDictionary;

		[Token(Token = "0x170002D5")]
		public static Subscription Instance
		{
			[Token(Token = "0x60019E0")]
			[Address(RVA = "0x88CB34", Offset = "0x88CB34", VA = "0x88CB34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D6")]
		public bool HasChannelGroups
		{
			[Token(Token = "0x60019E1")]
			[Address(RVA = "0x88CF44", Offset = "0x88CF44", VA = "0x88CF44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC60C", Offset = "0x3AC60C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019E2")]
			[Address(RVA = "0x88CF4C", Offset = "0x88CF4C", VA = "0x88CF4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC61C", Offset = "0x3AC61C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002D7")]
		public bool HasPresenceChannels
		{
			[Token(Token = "0x60019E3")]
			[Address(RVA = "0x88CF54", Offset = "0x88CF54", VA = "0x88CF54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC62C", Offset = "0x3AC62C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019E4")]
			[Address(RVA = "0x88CF5C", Offset = "0x88CF5C", VA = "0x88CF5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC63C", Offset = "0x3AC63C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002D8")]
		public bool HasChannelsOrChannelGroups
		{
			[Token(Token = "0x60019E5")]
			[Address(RVA = "0x88CF64", Offset = "0x88CF64", VA = "0x88CF64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC64C", Offset = "0x3AC64C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019E6")]
			[Address(RVA = "0x88CF6C", Offset = "0x88CF6C", VA = "0x88CF6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC65C", Offset = "0x3AC65C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002D9")]
		public bool HasChannels
		{
			[Token(Token = "0x60019E7")]
			[Address(RVA = "0x88CF74", Offset = "0x88CF74", VA = "0x88CF74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC66C", Offset = "0x3AC66C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019E8")]
			[Address(RVA = "0x88CF7C", Offset = "0x88CF7C", VA = "0x88CF7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC67C", Offset = "0x3AC67C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002DA")]
		public int CurrentSubscribedChannelsCount
		{
			[Token(Token = "0x60019E9")]
			[Address(RVA = "0x88CF84", Offset = "0x88CF84", VA = "0x88CF84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC68C", Offset = "0x3AC68C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60019EA")]
			[Address(RVA = "0x88CF8C", Offset = "0x88CF8C", VA = "0x88CF8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC69C", Offset = "0x3AC69C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002DB")]
		public int CurrentSubscribedChannelGroupsCount
		{
			[Token(Token = "0x60019EB")]
			[Address(RVA = "0x88CF94", Offset = "0x88CF94", VA = "0x88CF94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC6AC", Offset = "0x3AC6AC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60019EC")]
			[Address(RVA = "0x88CF9C", Offset = "0x88CF9C", VA = "0x88CF9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC6BC", Offset = "0x3AC6BC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002DC")]
		public List<ChannelEntity> ChannelsAndChannelGroupsAwaitingConnectCallback
		{
			[Token(Token = "0x60019ED")]
			[Address(RVA = "0x88CFA4", Offset = "0x88CFA4", VA = "0x88CFA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC6CC", Offset = "0x3AC6CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019EE")]
			[Address(RVA = "0x88CFAC", Offset = "0x88CFAC", VA = "0x88CFAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC6DC", Offset = "0x3AC6DC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002DD")]
		public List<ChannelEntity> AllChannels
		{
			[Token(Token = "0x60019EF")]
			[Address(RVA = "0x88CFB4", Offset = "0x88CFB4", VA = "0x88CFB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC6EC", Offset = "0x3AC6EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019F0")]
			[Address(RVA = "0x88CFBC", Offset = "0x88CFBC", VA = "0x88CFBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC6FC", Offset = "0x3AC6FC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002DE")]
		public List<ChannelEntity> AllChannelGroups
		{
			[Token(Token = "0x60019F1")]
			[Address(RVA = "0x88CFC4", Offset = "0x88CFC4", VA = "0x88CFC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC70C", Offset = "0x3AC70C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019F2")]
			[Address(RVA = "0x88CFCC", Offset = "0x88CFCC", VA = "0x88CFCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC71C", Offset = "0x3AC71C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002DF")]
		public List<ChannelEntity> AllSubscribedChannelsAndChannelGroups
		{
			[Token(Token = "0x60019F3")]
			[Address(RVA = "0x88CFD4", Offset = "0x88CFD4", VA = "0x88CFD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC72C", Offset = "0x3AC72C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019F4")]
			[Address(RVA = "0x88CFDC", Offset = "0x88CFDC", VA = "0x88CFDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC73C", Offset = "0x3AC73C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002E0")]
		public List<ChannelEntity> AllPresenceChannelsOrChannelGroups
		{
			[Token(Token = "0x60019F5")]
			[Address(RVA = "0x88CFE4", Offset = "0x88CFE4", VA = "0x88CFE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC74C", Offset = "0x3AC74C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019F6")]
			[Address(RVA = "0x88CFEC", Offset = "0x88CFEC", VA = "0x88CFEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC75C", Offset = "0x3AC75C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002E1")]
		public List<ChannelEntity> AllNonPresenceChannelsOrChannelGroups
		{
			[Token(Token = "0x60019F7")]
			[Address(RVA = "0x88CFF4", Offset = "0x88CFF4", VA = "0x88CFF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC76C", Offset = "0x3AC76C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019F8")]
			[Address(RVA = "0x88CFFC", Offset = "0x88CFFC", VA = "0x88CFFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC77C", Offset = "0x3AC77C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002E2")]
		public string CompiledUserState
		{
			[Token(Token = "0x60019F9")]
			[Address(RVA = "0x88D004", Offset = "0x88D004", VA = "0x88D004")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC78C", Offset = "0x3AC78C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019FA")]
			[Address(RVA = "0x88D00C", Offset = "0x88D00C", VA = "0x88D00C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC79C", Offset = "0x3AC79C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002E3")]
		public bool ConnectCallbackSent
		{
			[Token(Token = "0x60019FB")]
			[Address(RVA = "0x88D014", Offset = "0x88D014", VA = "0x88D014")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC7AC", Offset = "0x3AC7AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019FC")]
			[Address(RVA = "0x88D01C", Offset = "0x88D01C", VA = "0x88D01C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC7BC", Offset = "0x3AC7BC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002E4")]
		public SafeDictionary<ChannelIdentity, ChannelParameters> ChannelEntitiesDictionary
		{
			[Token(Token = "0x60019FD")]
			[Address(RVA = "0x88D024", Offset = "0x88D024", VA = "0x88D024")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0x88D02C", Offset = "0x88D02C", VA = "0x88D02C")]
		public void Add(ChannelEntity channelEntity, bool reset)
		{
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0x88D98C", Offset = "0x88D98C", VA = "0x88D98C")]
		public void Add(List<ChannelEntity> channelEntities)
		{
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0x88DAB4", Offset = "0x88DAB4", VA = "0x88DAB4")]
		public bool Delete(ChannelEntity channelEntity)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0x88D320", Offset = "0x88D320", VA = "0x88D320")]
		public void ResetChannelsAndChannelGroupsAndBuildState()
		{
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0x88DB68", Offset = "0x88DB68", VA = "0x88DB68")]
		public Dictionary<string, object> EditUserState(Dictionary<string, object> newUserState, Dictionary<string, object> oldUserState, bool edit)
		{
			return null;
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0x88DD10", Offset = "0x88DD10", VA = "0x88DD10")]
		public bool UpdateOrAddUserStateOfEntity(ref ChannelEntity channelEntity, Dictionary<string, object> userState, bool edit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0x88E1D0", Offset = "0x88E1D0", VA = "0x88E1D0")]
		public void UpdateIsAwaitingConnectCallbacksOfEntity(List<ChannelEntity> channelEntity, bool isAwaitingConnectCallback)
		{
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0x88E6D8", Offset = "0x88E6D8", VA = "0x88E6D8")]
		public void CleanUp()
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0x88CEC0", Offset = "0x88CEC0", VA = "0x88CEC0")]
		public Subscription()
		{
		}
	}
	[Token(Token = "0x200034D")]
	public enum PushTypeService
	{
		[Token(Token = "0x4001970")]
		None,
		[Token(Token = "0x4001971")]
		MPNS,
		[Token(Token = "0x4001972")]
		WNS,
		[Token(Token = "0x4001973")]
		GCM,
		[Token(Token = "0x4001974")]
		APNS
	}
	[Token(Token = "0x200034E")]
	internal static class Utility
	{
		[Token(Token = "0x4001975")]
		internal const string PresenceChannelSuffix = "-pnpres";

		[Token(Token = "0x4001976")]
		internal const int iOSRequestTimeout = 59;

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0x88E90C", Offset = "0x88E90C", VA = "0x88E90C")]
		internal static long CheckKeyAndParseLong(IDictionary dict, string what, string key)
		{
			return default(long);
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0x88EAB4", Offset = "0x88EAB4", VA = "0x88EAB4")]
		internal static int CheckKeyAndParseInt(IDictionary dict, string what, string key)
		{
			return default(int);
		}

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0x88EC54", Offset = "0x88EC54", VA = "0x88EC54")]
		internal static long ValidateTimetoken(string timetoken, bool raiseError)
		{
			return default(long);
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0x88ED50", Offset = "0x88ED50", VA = "0x88ED50")]
		internal static string CheckChannelGroup(string channelGroup, bool convertToPresence)
		{
			return null;
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0x88F03C", Offset = "0x88F03C", VA = "0x88F03C")]
		internal static List<string> CheckAndAddNameSpace(string nameSpace)
		{
			return null;
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0x88F188", Offset = "0x88F188", VA = "0x88F188")]
		internal static void CheckPushType(PushTypeService pushType)
		{
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0x88F220", Offset = "0x88F220", VA = "0x88F220")]
		internal static void CheckChannelOrChannelGroup(string channel, string channelGroup)
		{
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0x88F330", Offset = "0x88F330", VA = "0x88F330")]
		internal static void CheckChannels(string[] channels)
		{
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0x88F3D4", Offset = "0x88F3D4", VA = "0x88F3D4")]
		internal static void CheckChannel(string channel)
		{
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0x88F4A0", Offset = "0x88F4A0", VA = "0x88F4A0")]
		internal static void CheckMessage(object message)
		{
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0x88F538", Offset = "0x88F538", VA = "0x88F538")]
		internal static void CheckString(string message, string what)
		{
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0x88F5E4", Offset = "0x88F5E4", VA = "0x88F5E4")]
		internal static void CheckPublishKey(string publishKey)
		{
		}

		[Token(Token = "0x6001A14")]
		internal static void CheckCallback<T>(Action<T> callback, CallbackType callbackType)
		{
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0x88F6C8", Offset = "0x88F6C8", VA = "0x88F6C8")]
		internal static void CheckJSONPluggableLibrary()
		{
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0x88F78C", Offset = "0x88F78C", VA = "0x88F78C")]
		internal static void CheckUserState(string jsonUserState)
		{
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0x88F858", Offset = "0x88F858", VA = "0x88F858")]
		internal static void CheckSecretKey(string secretKey)
		{
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0x88F93C", Offset = "0x88F93C", VA = "0x88F93C")]
		internal static Guid GenerateGuid()
		{
			return default(Guid);
		}

		[Token(Token = "0x6001A19")]
		internal static bool CheckRequestTimeoutMessageInError<T>(CustomEventArgs<T> cea)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0x88F9B8", Offset = "0x88F9B8", VA = "0x88F9B8")]
		internal static bool IsPresenceChannel(string channel)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0x88FA34", Offset = "0x88FA34", VA = "0x88FA34")]
		internal static bool IsUnsafe(char ch, bool ignoreComma)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0x88FAC8", Offset = "0x88FAC8", VA = "0x88FAC8")]
		private static char ToHex(int ch)
		{
			return default(char);
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0x88FAE0", Offset = "0x88FAE0", VA = "0x88FAE0")]
		public static string EncodeUricomponent(string s, ResponseType type, bool ignoreComma, bool ignorePercent2fEncode)
		{
			return null;
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0x88FD9C", Offset = "0x88FD9C", VA = "0x88FD9C")]
		public static string Md5(string text)
		{
			return null;
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0x88FF00", Offset = "0x88FF00", VA = "0x88FF00")]
		public static long TranslateDateTimeToSeconds(DateTime dotNetUTCDateTime)
		{
			return default(long);
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0x890038", Offset = "0x890038", VA = "0x890038")]
		public static long TranslateDateTimeToPubnubUnixNanoSeconds(DateTime dotNetUTCDateTime)
		{
			return default(long);
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0x890180", Offset = "0x890180", VA = "0x890180")]
		public static DateTime TranslatePubnubUnixNanoSecondsToDateTime(long unixNanoSecondTime)
		{
			return default(DateTime);
		}
	}
}
namespace SofaVR
{
	[Token(Token = "0x200034F")]
	public class SofaMessage
	{
		[Token(Token = "0x2000892")]
		public delegate void OnMessageHandleDelegate(Type callerType, Type handlerType, Type messageType, string messageName, string handlerMethodName);

		[Token(Token = "0x2000893")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D7DC", Offset = "0x39D7DC")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x40028C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Delegate callback;

			[Token(Token = "0x60036FF")]
			[Address(RVA = "0x70CB20", Offset = "0x70CB20", VA = "0x70CB20")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6003700")]
			[Address(RVA = "0x70CBB8", Offset = "0x70CBB8", VA = "0x70CBB8")]
			internal bool <UnregisterListener>b__0(Delegate x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static OnMessageHandleDelegate OnMessageHandle;

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static Dictionary<string, List<Delegate>> handlers;

		[Token(Token = "0x4001979")]
		private const string TypelessMessagePrefix = "typeless ";

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0x70C554", Offset = "0x70C554", VA = "0x70C554")]
		public static void AddListener(string messageName, Action callback)
		{
		}

		[Token(Token = "0x6001A23")]
		public static void AddListener<T>(Action<T> callback) where T : SofaMessage
		{
		}

		[Token(Token = "0x6001A24")]
		public static void AddListener<T>(string messageName, Action<T> callback) where T : SofaMessage
		{
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0x70C7FC", Offset = "0x70C7FC", VA = "0x70C7FC")]
		public static void RemoveListener(string messageName, Action callback)
		{
		}

		[Token(Token = "0x6001A26")]
		public static void RemoveListener<T>(Action<T> callback) where T : SofaMessage
		{
		}

		[Token(Token = "0x6001A27")]
		public static void RemoveListener<T>(string messageName, Action<T> callback) where T : SofaMessage
		{
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0x70CA74", Offset = "0x70CA74", VA = "0x70CA74")]
		public static void Send(string messageName)
		{
		}

		[Token(Token = "0x6001A29")]
		public static void Send<T>(T message) where T : SofaMessage
		{
		}

		[Token(Token = "0x6001A2A")]
		public static void Send<T>(string messageName, T message) where T : SofaMessage
		{
		}

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0x70C5F4", Offset = "0x70C5F4", VA = "0x70C5F4")]
		private static void RegisterListener(string messageName, Delegate callback)
		{
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0x70C89C", Offset = "0x70C89C", VA = "0x70C89C")]
		private static void UnregisterListener(string messageName, Delegate callback)
		{
		}

		[Token(Token = "0x6001A2D")]
		private static void SendMessage<T>(string messageName, T e) where T : SofaMessage
		{
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0x70CB28", Offset = "0x70CB28", VA = "0x70CB28")]
		protected SofaMessage()
		{
		}
	}
}
namespace WSMGameStudio.Cameras
{
	[Token(Token = "0x2000350")]
	public class CameraFollow : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool follow;

		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform target;

		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public CameraSettings cameraSettings;

		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 newPos;

		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Quaternion newRot;

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0x88636C", Offset = "0x88636C", VA = "0x88636C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0x886374", Offset = "0x886374", VA = "0x886374")]
		private void ApplyOffsetToPosition(CameraSettings cameraSettings)
		{
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0x886968", Offset = "0x886968", VA = "0x886968")]
		public CameraFollow()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000351")]
	public class CameraSettings
	{
		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float cameraSpeed;

		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 offset;

		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool rotateAround;

		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool lookAtTarget;

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0x886978", Offset = "0x886978", VA = "0x886978")]
		public CameraSettings()
		{
		}
	}
}
namespace WSMGameStudio.RailroadSystem
{
	[Token(Token = "0x2000352")]
	public static class AnimationParameters
	{
		[Token(Token = "0x4001983")]
		public const string Open = "Open";
	}
	[Token(Token = "0x2000353")]
	public class BellZone : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public ZoneTriggerType triggerType;

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0x886988", Offset = "0x886988", VA = "0x886988")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0x886AB0", Offset = "0x886AB0", VA = "0x886AB0")]
		public BellZone()
		{
		}
	}
	[Token(Token = "0x2000354")]
	public class DemoUI_v3 : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public TrainController_v3 train;

		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Slider maxSpeedSlider;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Slider accelerationSlider;

		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Slider brakeSlider;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Toggle automaticBrakes;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text playerInputText;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private ITrainDoorsController _doorController;

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TrainPlayerInput _playerInput;

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0x886AB8", Offset = "0x886AB8", VA = "0x886AB8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0x887310", Offset = "0x887310", VA = "0x887310")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0x886BA4", Offset = "0x886BA4", VA = "0x886BA4")]
		private void ConfigureInputText()
		{
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0x887668", Offset = "0x887668", VA = "0x887668")]
		public void ToggleEngine()
		{
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0x887710", Offset = "0x887710", VA = "0x887710")]
		public void ToggleLights()
		{
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0x8877B8", Offset = "0x8877B8", VA = "0x8877B8")]
		public void ToggleInternalLights()
		{
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0x887860", Offset = "0x887860", VA = "0x887860")]
		public void Honk()
		{
		}

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0x887908", Offset = "0x887908", VA = "0x887908")]
		public void ToggleBell()
		{
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0x8879B0", Offset = "0x8879B0", VA = "0x8879B0")]
		public void CabinDoor()
		{
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0x887B54", Offset = "0x887B54", VA = "0x887B54")]
		public DemoUI_v3()
		{
		}
	}
	[Token(Token = "0x2000355")]
	public class DirectionIndicator : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Animator animator;

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0x887B5C", Offset = "0x887B5C", VA = "0x887B5C")]
		public void TurnRight()
		{
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0x887C48", Offset = "0x887C48", VA = "0x887C48")]
		public void TurnLeft()
		{
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0x887D34", Offset = "0x887D34", VA = "0x887D34")]
		public void ReturnToDefaultPosition()
		{
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0x887E20", Offset = "0x887E20", VA = "0x887E20")]
		public DirectionIndicator()
		{
		}
	}
	[Token(Token = "0x2000356")]
	public static class GeneralSettings
	{
		[Token(Token = "0x400198E")]
		public const float AccelerationRate = 5f;

		[Token(Token = "0x400198F")]
		public const float DeaccelerationRate = 2f;

		[Token(Token = "0x4001990")]
		public const float BrakeDrag = 5f;

		[Token(Token = "0x4001991")]
		public const float IdleDrag = 0.05f;

		[Token(Token = "0x4001992")]
		public const float WheelsMaxAngularVelocity = 50f;

		[Token(Token = "0x4001993")]
		public const float DownForceFactor = 8f;

		[Token(Token = "0x4001994")]
		public const float MinSpeed = 0f;

		[Token(Token = "0x4001995")]
		public const float MaxSpeed = 105f;
	}
	[Token(Token = "0x2000357")]
	public class HonkZone_v3 : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x6001A44")]
		[Address(RVA = "0x887E28", Offset = "0x887E28", VA = "0x887E28")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0x887EF0", Offset = "0x887EF0", VA = "0x887EF0")]
		public HonkZone_v3()
		{
		}
	}
	[Token(Token = "0x2000358")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x39A9F0", Offset = "0x39A9F0")]
	public class PassengerTags : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool kinematicWhileMoving;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<string> passengerTags;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private TrainController_v3 _trainController;

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0x887EF8", Offset = "0x887EF8", VA = "0x887EF8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0x887F60", Offset = "0x887F60", VA = "0x887F60")]
		private void UpdateWagonsPassengerTags()
		{
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0x888138", Offset = "0x888138", VA = "0x888138")]
		private void SetPassengerTags(GameObject wagon)
		{
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0x88821C", Offset = "0x88821C", VA = "0x88821C")]
		public PassengerTags()
		{
		}
	}
	[Token(Token = "0x2000359")]
	public static class Probability
	{
		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0xED3370", Offset = "0xED3370", VA = "0xED3370")]
		public static bool RandomEvent(int randomProbability)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200035A")]
	public class RailSensor : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool onRails;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		public bool grounded;

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0xED33A0", Offset = "0xED33A0", VA = "0xED33A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0xED3750", Offset = "0xED3750", VA = "0xED3750")]
		public RailSensor()
		{
		}
	}
	[Token(Token = "0x200035B")]
	public class RailroadSwitch_v3 : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool _activated;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<GameObject> _railsColliders;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public UnityEvent _onActivate;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent _onDeactivate;

		[Token(Token = "0x170002E5")]
		public bool Activated
		{
			[Token(Token = "0x6001A4D")]
			[Address(RVA = "0xED3758", Offset = "0xED3758", VA = "0xED3758")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0xED3760", Offset = "0xED3760", VA = "0xED3760")]
		public void SwitchRails()
		{
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0xED3930", Offset = "0xED3930", VA = "0xED3930")]
		public RailroadSwitch_v3()
		{
		}
	}
	[Token(Token = "0x200035C")]
	public class ReverseDirectionZone : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public ReverseDirectionMode reverseDirectionMode;

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0xED3938", Offset = "0xED3938", VA = "0xED3938")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0xED3A84", Offset = "0xED3A84", VA = "0xED3A84")]
		public ReverseDirectionZone()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200035D")]
	public class SFX
	{
		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AudioSource hornSFX;

		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public AudioSource bellSFX;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioSource engineSFX;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public AudioSource wheelsSFX;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource brakesSFX;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AudioSource wagonConnectionSFX;

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0xED3A8C", Offset = "0xED3A8C", VA = "0xED3A8C")]
		public SFX()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200035E")]
	public class Sensors
	{
		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public RailSensor leftSensor;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public RailSensor rightSensor;

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0xED3A94", Offset = "0xED3A94", VA = "0xED3A94")]
		public Sensors()
		{
		}
	}
	[Token(Token = "0x200035F")]
	public static class Speed
	{
		[Token(Token = "0x6001A54")]
		[Address(RVA = "0xED3A9C", Offset = "0xED3A9C", VA = "0xED3A9C")]
		public static float Convert_MPS_To_KPH(float metersPerSecond)
		{
			return default(float);
		}

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0xED3AB4", Offset = "0xED3AB4", VA = "0xED3AB4")]
		public static float Convert_KPH_To_MPS(float kilometersPerHour)
		{
			return default(float);
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0xED3ACC", Offset = "0xED3ACC", VA = "0xED3ACC")]
		public static float Convert_MPS_To_MPH(float metersPerSecond)
		{
			return default(float);
		}

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0xED3AE4", Offset = "0xED3AE4", VA = "0xED3AE4")]
		public static float Convert_MPH_To_MPS(float milesPerHour)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000360")]
	public class SpeedChangeZone_v3 : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3A1D00", Offset = "0x3A1D00")]
		public float targetSpeedKph;

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0xED3AFC", Offset = "0xED3AFC", VA = "0xED3AFC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0xED3BC4", Offset = "0xED3BC4", VA = "0xED3BC4")]
		public SpeedChangeZone_v3()
		{
		}
	}
	[Token(Token = "0x2000361")]
	public class StationStopTrigger : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public StopMode stopMode;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StationDoorDirection stationDoorDirection;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public StationBehaviour stationBehaviour;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float stopTimeout;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3A1D1C", Offset = "0x3A1D1C")]
		public int randomStopProbability;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool turnOffEngines;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool _alreadyStopped;

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0xED3BCC", Offset = "0xED3BCC", VA = "0xED3BCC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0xED3DF0", Offset = "0xED3DF0", VA = "0xED3DF0")]
		public StationStopTrigger()
		{
		}
	}
	[Token(Token = "0x2000362")]
	public class SwitchTrigger : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SwitchMode switchMode;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3A1D38", Offset = "0x3A1D38")]
		public int randomSwitchProbability;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public List<RailroadSwitch_v3> railroadSwitches;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _alreadySwitched;

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0xED3E0C", Offset = "0xED3E0C", VA = "0xED3E0C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0xED3FA8", Offset = "0xED3FA8", VA = "0xED3FA8")]
		private void SwitchRails()
		{
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0xED40D0", Offset = "0xED40D0", VA = "0xED40D0")]
		private void SwitchActivatedRails()
		{
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0xED4208", Offset = "0xED4208", VA = "0xED4208")]
		private void SwitchDeactivatedRails()
		{
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0xED4340", Offset = "0xED4340", VA = "0xED4340")]
		public SwitchTrigger()
		{
		}
	}
	[Token(Token = "0x2000363")]
	public enum SpeedUnits
	{
		[Token(Token = "0x40019B5")]
		kph,
		[Token(Token = "0x40019B6")]
		mph
	}
	[Token(Token = "0x2000364")]
	public enum SwitchMode
	{
		[Token(Token = "0x40019B8")]
		Always,
		[Token(Token = "0x40019B9")]
		Once,
		[Token(Token = "0x40019BA")]
		Random,
		[Token(Token = "0x40019BB")]
		IfActivated,
		[Token(Token = "0x40019BC")]
		IfDeactivated
	}
	[Token(Token = "0x2000365")]
	public enum StopMode
	{
		[Token(Token = "0x40019BE")]
		Always,
		[Token(Token = "0x40019BF")]
		Once,
		[Token(Token = "0x40019C0")]
		Random
	}
	[Token(Token = "0x2000366")]
	public enum ReverseDirectionMode
	{
		[Token(Token = "0x40019C2")]
		Always,
		[Token(Token = "0x40019C3")]
		OnlyIfMovingForward,
		[Token(Token = "0x40019C4")]
		OnlyIfMovingBackwards
	}
	[Token(Token = "0x2000367")]
	public enum StationBehaviour
	{
		[Token(Token = "0x40019C6")]
		LeaveAfterTime,
		[Token(Token = "0x40019C7")]
		StopForever
	}
	[Token(Token = "0x2000368")]
	public enum StationDoorDirection
	{
		[Token(Token = "0x40019C9")]
		BothSides,
		[Token(Token = "0x40019CA")]
		Left,
		[Token(Token = "0x40019CB")]
		Right
	}
	[Token(Token = "0x2000369")]
	public enum CarCouplerType
	{
		[Token(Token = "0x40019CD")]
		FrontCoupler,
		[Token(Token = "0x40019CE")]
		BackCoupler
	}
	[Token(Token = "0x200036A")]
	public enum WagonCoupling
	{
		[Token(Token = "0x40019D0")]
		Enabled,
		[Token(Token = "0x40019D1")]
		Disabled
	}
	[Token(Token = "0x200036B")]
	public enum WagonDecouplingSettings
	{
		[Token(Token = "0x40019D3")]
		AllowRecoupling,
		[Token(Token = "0x40019D4")]
		NeverRecouple
	}
	[Token(Token = "0x200036C")]
	public enum TrainControllerInspectorMenu
	{
		[Token(Token = "0x40019D6")]
		Controls,
		[Token(Token = "0x40019D7")]
		Wagons,
		[Token(Token = "0x40019D8")]
		Lights,
		[Token(Token = "0x40019D9")]
		SFX,
		[Token(Token = "0x40019DA")]
		OtherSettings
	}
	[Token(Token = "0x200036D")]
	public enum WagonInspectorMenu
	{
		[Token(Token = "0x40019DC")]
		Coupling,
		[Token(Token = "0x40019DD")]
		Lights,
		[Token(Token = "0x40019DE")]
		SFX,
		[Token(Token = "0x40019DF")]
		OtherSettings
	}
	[Token(Token = "0x200036E")]
	public enum WagonType
	{
		[Token(Token = "0x40019E1")]
		Locomotive,
		[Token(Token = "0x40019E2")]
		Wagon
	}
	[Token(Token = "0x200036F")]
	public enum ZoneTriggerType
	{
		[Token(Token = "0x40019E4")]
		Activate,
		[Token(Token = "0x40019E5")]
		Deactivate
	}
	[Token(Token = "0x2000370")]
	public class TrainAttachPassenger : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000894")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D7EC", Offset = "0x39D7EC")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x40028C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject other;

			[Token(Token = "0x40028C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public TrainAttachPassenger <>4__this;

			[Token(Token = "0x6003701")]
			[Address(RVA = "0xED4B74", Offset = "0xED4B74", VA = "0xED4B74")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x6003702")]
			[Address(RVA = "0xED4DE0", Offset = "0xED4DE0", VA = "0xED4DE0")]
			internal void <SetPassengerParent>b__0()
			{
			}

			[Token(Token = "0x6003703")]
			[Address(RVA = "0xED4E0C", Offset = "0xED4E0C", VA = "0xED4E0C")]
			internal void <SetPassengerParent>b__1()
			{
			}
		}

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Dictionary<int, UnityAction> _onStopRuntimeEvents;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<int, UnityAction> _onLeaveRuntimeEvents;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private List<string> _passengerTags;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _kinematicWhileMoving;

		[Token(Token = "0x170002E6")]
		public List<string> PassengerTags
		{
			[Token(Token = "0x6001A61")]
			[Address(RVA = "0xED4350", Offset = "0xED4350", VA = "0xED4350")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A62")]
			[Address(RVA = "0xED4358", Offset = "0xED4358", VA = "0xED4358")]
			set
			{
			}
		}

		[Token(Token = "0x170002E7")]
		public bool KinematicWhileMoving
		{
			[Token(Token = "0x6001A63")]
			[Address(RVA = "0xED4360", Offset = "0xED4360", VA = "0xED4360")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A64")]
			[Address(RVA = "0xED4368", Offset = "0xED4368", VA = "0xED4368")]
			set
			{
			}
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0xED4370", Offset = "0xED4370", VA = "0xED4370")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0xED47B8", Offset = "0xED47B8", VA = "0xED47B8")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0xED4820", Offset = "0xED4820", VA = "0xED4820")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0xED43D8", Offset = "0xED43D8", VA = "0xED43D8")]
		private void SetPassengerParent(GameObject other, Transform parent)
		{
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0xED4858", Offset = "0xED4858", VA = "0xED4858")]
		private void RemovePassengerParent(GameObject other)
		{
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0xED4BF0", Offset = "0xED4BF0", VA = "0xED4BF0")]
		public void SetPassengerKinematic(GameObject gameObject, bool isKinematic)
		{
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0xED4B7C", Offset = "0xED4B7C", VA = "0xED4B7C")]
		private bool IsPassenger(string tag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0xED4D48", Offset = "0xED4D48", VA = "0xED4D48")]
		public TrainAttachPassenger()
		{
		}
	}
	[Token(Token = "0x2000371")]
	public static class TrainAudio
	{
		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0xED4E38", Offset = "0xED4E38", VA = "0xED4E38")]
		public static void PlaySFX(SFX sfx, float speedKMH, float brake, bool enginesOn, bool isGrounded)
		{
		}
	}
	[Token(Token = "0x2000372")]
	public class TrainCarCoupler : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public CarCouplerType couplerType;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TrainController_v3 _locomotive;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Wagon_v3 _wagon;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _isLocomotive;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _isWagon;

		[Token(Token = "0x170002E8")]
		public TrainController_v3 Locomotive
		{
			[Token(Token = "0x6001A6E")]
			[Address(RVA = "0xED51F8", Offset = "0xED51F8", VA = "0xED51F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E9")]
		public Wagon_v3 Wagon
		{
			[Token(Token = "0x6001A6F")]
			[Address(RVA = "0xED5200", Offset = "0xED5200", VA = "0xED5200")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EA")]
		public bool IsBackJoint
		{
			[Token(Token = "0x6001A70")]
			[Address(RVA = "0xED5208", Offset = "0xED5208", VA = "0xED5208")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002EB")]
		public bool IsLocomotive
		{
			[Token(Token = "0x6001A71")]
			[Address(RVA = "0xED521C", Offset = "0xED521C", VA = "0xED521C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002EC")]
		public bool IsWagon
		{
			[Token(Token = "0x6001A72")]
			[Address(RVA = "0xED5224", Offset = "0xED5224", VA = "0xED5224")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0xED522C", Offset = "0xED522C", VA = "0xED522C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0xED5374", Offset = "0xED5374", VA = "0xED5374")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0xED548C", Offset = "0xED548C", VA = "0xED548C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0xED537C", Offset = "0xED537C", VA = "0xED537C")]
		private void ConnectOnCollision(Collider other, bool playSFX)
		{
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0xED578C", Offset = "0xED578C", VA = "0xED578C")]
		public TrainCarCoupler()
		{
		}
	}
	[Token(Token = "0x2000373")]
	public class TrainController_v3 : UnityEngine.MonoBehaviour, IRailroadCar
	{
		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Rigidbody _rigidbody;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Transform _transform;

		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool _isGrounded;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		private bool _onRails;

		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _speed;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _speed_KPH;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _speed_MPH;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 _targetVelocity;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _targetSpeed;

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _currentSpeed;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 _localVelocity;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private SFX _sfx;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ITrainDoorsController _doorController;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool enginesOn;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3A1D54", Offset = "0x3A1D54")]
		public float maxSpeedKph;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3A1D70", Offset = "0x3A1D70")]
		public float acceleration;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool automaticBrakes;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3A1D8C", Offset = "0x3A1D8C")]
		public float brake;

		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<TrainWheel_v3> wheelsScripts;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Sensors sensors;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<Wagon_v3> wagons;

		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public List<Light> externalLights;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<Light> internalLights;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public AudioSource hornSFX;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AudioSource bellSFX;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public AudioSource engineSFX;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AudioSource wheelsSFX;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public AudioSource brakesSFX;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Rigidbody backJoint;

		[Token(Token = "0x170002ED")]
		public float Speed_MPS
		{
			[Token(Token = "0x6001A78")]
			[Address(RVA = "0xED5794", Offset = "0xED5794", VA = "0xED5794")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002EE")]
		public float Speed_KPH
		{
			[Token(Token = "0x6001A79")]
			[Address(RVA = "0xED579C", Offset = "0xED579C", VA = "0xED579C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002EF")]
		public float Speed_MPH
		{
			[Token(Token = "0x6001A7A")]
			[Address(RVA = "0xED57A4", Offset = "0xED57A4", VA = "0xED57A4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002F0")]
		public bool IsGrounded
		{
			[Token(Token = "0x6001A7B")]
			[Address(RVA = "0xED57AC", Offset = "0xED57AC", VA = "0xED57AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A7C")]
			[Address(RVA = "0xED57B4", Offset = "0xED57B4", VA = "0xED57B4")]
			set
			{
			}
		}

		[Token(Token = "0x170002F1")]
		public bool OnRails
		{
			[Token(Token = "0x6001A7D")]
			[Address(RVA = "0xED57BC", Offset = "0xED57BC", VA = "0xED57BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F2")]
		public ITrainDoorsController DoorsController
		{
			[Token(Token = "0x6001A7E")]
			[Address(RVA = "0xED57C4", Offset = "0xED57C4", VA = "0xED57C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F3")]
		public bool BellOn
		{
			[Token(Token = "0x6001A7F")]
			[Address(RVA = "0xED5830", Offset = "0xED5830", VA = "0xED5830")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F4")]
		public Rigidbody BackJoint
		{
			[Token(Token = "0x6001A80")]
			[Address(RVA = "0xED5900", Offset = "0xED5900", VA = "0xED5900", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A81")]
			[Address(RVA = "0xED5908", Offset = "0xED5908", VA = "0xED5908", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170002F5")]
		public List<TrainWheel_v3> Wheels
		{
			[Token(Token = "0x6001A82")]
			[Address(RVA = "0xED5910", Offset = "0xED5910", VA = "0xED5910", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A83")]
			[Address(RVA = "0xED5918", Offset = "0xED5918", VA = "0xED5918", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170002F6")]
		public AudioSource WheelsSFX
		{
			[Token(Token = "0x6001A84")]
			[Address(RVA = "0xED5920", Offset = "0xED5920", VA = "0xED5920", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A85")]
			[Address(RVA = "0xED5928", Offset = "0xED5928", VA = "0xED5928", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x170002F7")]
		public Sensors Sensors
		{
			[Token(Token = "0x6001A86")]
			[Address(RVA = "0xED5930", Offset = "0xED5930", VA = "0xED5930", Slot = "10")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A87")]
			[Address(RVA = "0xED5938", Offset = "0xED5938", VA = "0xED5938", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x170002F8")]
		public List<Light> ExternalLights
		{
			[Token(Token = "0x6001A88")]
			[Address(RVA = "0xED5940", Offset = "0xED5940", VA = "0xED5940", Slot = "12")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A89")]
			[Address(RVA = "0xED5948", Offset = "0xED5948", VA = "0xED5948", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x170002F9")]
		public List<Light> InternalLights
		{
			[Token(Token = "0x6001A8A")]
			[Address(RVA = "0xED5950", Offset = "0xED5950", VA = "0xED5950", Slot = "14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A8B")]
			[Address(RVA = "0xED5958", Offset = "0xED5958", VA = "0xED5958", Slot = "15")]
			set
			{
			}
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0xED5960", Offset = "0xED5960", VA = "0xED5960")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0xED5C58", Offset = "0xED5C58", VA = "0xED5C58")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0xED5A08", Offset = "0xED5A08", VA = "0xED5A08")]
		private void ConnectWagons()
		{
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0xED5B7C", Offset = "0xED5B7C", VA = "0xED5B7C")]
		private void InitializeSFX()
		{
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0xED6434", Offset = "0xED6434", VA = "0xED6434")]
		public void UpdateDoorController()
		{
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0xED6500", Offset = "0xED6500", VA = "0xED6500")]
		public void DecoupleLastWagon()
		{
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0xED667C", Offset = "0xED667C", VA = "0xED667C")]
		public void DecoupleFirstWagon()
		{
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0xED6564", Offset = "0xED6564", VA = "0xED6564")]
		public void DecoupleWagon(int index)
		{
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0xED67FC", Offset = "0xED67FC", VA = "0xED67FC")]
		public void ToggleLights()
		{
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0xED6B60", Offset = "0xED6B60", VA = "0xED6B60")]
		public void ToggleInternalLights()
		{
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0xED6EC4", Offset = "0xED6EC4", VA = "0xED6EC4")]
		public void ToggleEngine()
		{
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0xED6ED4", Offset = "0xED6ED4", VA = "0xED6ED4")]
		public void Honk()
		{
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0xED6FD4", Offset = "0xED6FD4", VA = "0xED6FD4")]
		public void ToogleBell()
		{
		}

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0xED70DC", Offset = "0xED70DC", VA = "0xED70DC")]
		public TrainController_v3()
		{
		}
	}
	[Token(Token = "0x2000374")]
	public class TrainDoor : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool _isOpen;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Animator> animators;

		[Token(Token = "0x170002FA")]
		public bool IsOpen
		{
			[Token(Token = "0x6001A9A")]
			[Address(RVA = "0xED70F8", Offset = "0xED70F8", VA = "0xED70F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A9B")]
			[Address(RVA = "0xED7100", Offset = "0xED7100", VA = "0xED7100")]
			set
			{
			}
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0xED7108", Offset = "0xED7108", VA = "0xED7108")]
		public bool Open()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0xED7274", Offset = "0xED7274", VA = "0xED7274")]
		public bool Close()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0xED7138", Offset = "0xED7138", VA = "0xED7138")]
		private void UpdateDoorAnimator(bool open)
		{
		}

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0xED72A4", Offset = "0xED72A4", VA = "0xED72A4")]
		public TrainDoor()
		{
		}
	}
	[Token(Token = "0x2000375")]
	public class TrainDoorsController : UnityEngine.MonoBehaviour, ITrainDoorsController
	{
		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool _cabinLeftDoorOpen;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		private bool _cabinRightDoorOpen;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		private bool _passengerLeftDoorOpen;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
		private bool _passengerRightDoorOpen;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private StationDoorDirection _stationDoorDirection;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private TrainController_v3 _trainController;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<TrainDoorsController> _wagonsDoorsControllers;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AudioSource openDoorSFX;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource closeDoorSFX;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public TrainDoor cabinDoorLeft;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TrainDoor cabinDoorRight;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public List<TrainDoor> passengerDoorsLeft;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<TrainDoor> passengerDoorsRight;

		[Token(Token = "0x170002FB")]
		public StationDoorDirection StationDoorDirection
		{
			[Token(Token = "0x6001AA0")]
			[Address(RVA = "0xED72AC", Offset = "0xED72AC", VA = "0xED72AC", Slot = "4")]
			get
			{
				return default(StationDoorDirection);
			}
			[Token(Token = "0x6001AA1")]
			[Address(RVA = "0xED72B4", Offset = "0xED72B4", VA = "0xED72B4", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170002FC")]
		public bool CabinLeftDoorOpen
		{
			[Token(Token = "0x6001AA2")]
			[Address(RVA = "0xED73E4", Offset = "0xED73E4", VA = "0xED73E4", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002FD")]
		public bool CabinRightDoorOpen
		{
			[Token(Token = "0x6001AA3")]
			[Address(RVA = "0xED73EC", Offset = "0xED73EC", VA = "0xED73EC", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002FE")]
		public bool PassengerLeftDoorOpen
		{
			[Token(Token = "0x6001AA4")]
			[Address(RVA = "0xED73F4", Offset = "0xED73F4", VA = "0xED73F4", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002FF")]
		public bool PassengerRightDoorOpen
		{
			[Token(Token = "0x6001AA5")]
			[Address(RVA = "0xED73FC", Offset = "0xED73FC", VA = "0xED73FC", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0xED7404", Offset = "0xED7404", VA = "0xED7404")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0xED76C4", Offset = "0xED76C4", VA = "0xED76C4", Slot = "10")]
		public void OpenCabinDoorLeft()
		{
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0xED77C4", Offset = "0xED77C4", VA = "0xED77C4", Slot = "11")]
		public void OpenCabinDoorRight()
		{
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0xED77F4", Offset = "0xED77F4", VA = "0xED77F4", Slot = "12")]
		public void CloseCabinDoorLeft()
		{
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0xED78FC", Offset = "0xED78FC", VA = "0xED78FC", Slot = "13")]
		public void CloseCabinDoorRight()
		{
		}

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0xED7930", Offset = "0xED7930", VA = "0xED7930", Slot = "15")]
		public void OpenPassengersDoors(StationDoorDirection doorsDiretion)
		{
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0xED7938", Offset = "0xED7938", VA = "0xED7938", Slot = "14")]
		public void OpenPassengersDoors()
		{
		}

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0xED7C48", Offset = "0xED7C48", VA = "0xED7C48", Slot = "16")]
		public void ClosePassengersDoors()
		{
		}

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0xED7F24", Offset = "0xED7F24", VA = "0xED7F24", Slot = "17")]
		public void ClosePassengersLeftDoors()
		{
		}

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0xED807C", Offset = "0xED807C", VA = "0xED807C", Slot = "18")]
		public void ClosePassengersRightDoors()
		{
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0xED746C", Offset = "0xED746C", VA = "0xED746C", Slot = "19")]
		public void UpdateWagonsDoorsControllers()
		{
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0xED72BC", Offset = "0xED72BC", VA = "0xED72BC")]
		private void UpdateWagonDoorsDirection()
		{
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0xED76F4", Offset = "0xED76F4", VA = "0xED76F4")]
		private bool OpenDoor(TrainDoor door, bool playSFX)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0xED7B04", Offset = "0xED7B04", VA = "0xED7B04")]
		private bool OpenDoor(List<TrainDoor> doors)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0xED7828", Offset = "0xED7828", VA = "0xED7828")]
		private bool CloseDoor(TrainDoor door, bool playSFX)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0xED7DE0", Offset = "0xED7DE0", VA = "0xED7DE0")]
		private bool CloseDoor(List<TrainDoor> doors)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0xED81D4", Offset = "0xED81D4", VA = "0xED81D4")]
		private void PlayDoorSFX(AudioSource sfx)
		{
		}

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0xED8274", Offset = "0xED8274", VA = "0xED8274")]
		public TrainDoorsController()
		{
		}
	}
	[Token(Token = "0x2000376")]
	public static class TrainPhysics
	{
		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0xED60F0", Offset = "0xED60F0", VA = "0xED60F0")]
		public static void SpeedControl(Rigidbody rigidbody, bool isGrounded, float maxSpeedKph, float speed_KPH, float acceleration, float brake, Vector3 targetVelocityIn, out Vector3 targetVelocityOut, float currentSpeedIn, out float currentSpeedOut, float targetSpeedIn, out float targetSpeedOut)
		{
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0xED827C", Offset = "0xED827C", VA = "0xED827C")]
		private static float GetTargetSpeed(float acceleration, float maxSpeed)
		{
			return default(float);
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0xED8368", Offset = "0xED8368", VA = "0xED8368")]
		public static float ApplyBrakes(Rigidbody rigidbody, float brake, float targetSpeed)
		{
			return default(float);
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0xED838C", Offset = "0xED838C", VA = "0xED838C")]
		public static float SoftAcceleration(float currentSpeed, float targetSpeed)
		{
			return default(float);
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0xED5FA0", Offset = "0xED5FA0", VA = "0xED5FA0")]
		public static void UpdateWheels(List<TrainWheel_v3> wheelsScripts, float brake, float speed)
		{
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0xED6404", Offset = "0xED6404", VA = "0xED6404")]
		public static void ConnectTrainCar(HingeJoint newTrainCar, Rigidbody frontCarCoupler)
		{
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0xED84A8", Offset = "0xED84A8", VA = "0xED84A8")]
		public static void DisconnectTrainCar(HingeJoint trainCar)
		{
		}
	}
	[Token(Token = "0x2000377")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x39AA60", Offset = "0x39AA60")]
	public class TrainPlayerInput : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool enablePlayerInput;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TrainInputSettings inputSettings;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public UnityEvent[] customEvents;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TrainController_v3 _locomotive;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private TrainDoorsController _doorController;

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0xED84D4", Offset = "0xED84D4", VA = "0xED84D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0xED8550", Offset = "0xED8550", VA = "0xED8550")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0xED8D00", Offset = "0xED8D00", VA = "0xED8D00")]
		public TrainPlayerInput()
		{
		}
	}
	[Token(Token = "0x2000378")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x39AAD0", Offset = "0x39AAD0")]
	public class TrainSpeedMonitor : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private TrainController_v3 _trainController;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SpeedUnits speedUnit;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Text outputText;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float kph;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float mph;

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0xED8D08", Offset = "0xED8D08", VA = "0xED8D08")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0xED8D68", Offset = "0xED8D68", VA = "0xED8D68")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0xED8EEC", Offset = "0xED8EEC", VA = "0xED8EEC")]
		public TrainSpeedMonitor()
		{
		}
	}
	[Token(Token = "0x2000379")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x39AB40", Offset = "0x39AB40")]
	public class TrainStationController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private TrainController_v3 _trainController;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _turnOffEngines;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool _stopping;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float _stopTimeout;

		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _lastDirection;

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private StationBehaviour _stationBehaviour;

		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent onBrakesActivation;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public UnityEvent onStop;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent onLeave;

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0xED8EF4", Offset = "0xED8EF4", VA = "0xED8EF4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0xED8F54", Offset = "0xED8F54", VA = "0xED8F54")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0xED3DE0", Offset = "0xED3DE0", VA = "0xED3DE0")]
		public void StopAtStation(StationBehaviour stationBehaviour, float stopTimeout, bool turnOffEngines)
		{
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0xED9054", Offset = "0xED9054", VA = "0xED9054")]
		private void Stop()
		{
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0xED90E0", Offset = "0xED90E0", VA = "0xED90E0")]
		private void Leave()
		{
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0xED915C", Offset = "0xED915C", VA = "0xED915C")]
		public TrainStationController()
		{
		}
	}
	[Token(Token = "0x200037A")]
	public class TrainSuspension : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Rigidbody _rigidbody;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3 _angularVelocity;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _xAngularDamp;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _yAngularDamp;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _zAngularDamp;

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0xED9164", Offset = "0xED9164", VA = "0xED9164")]
		private void Start()
		{
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0xED91D4", Offset = "0xED91D4", VA = "0xED91D4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0xED92B4", Offset = "0xED92B4", VA = "0xED92B4")]
		public TrainSuspension()
		{
		}
	}
	[Token(Token = "0x200037B")]
	public class TrainWheel_v3 : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A1DA4", Offset = "0x3A1DA4")]
		public bool optimized;

		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float _speed;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3A1DD8", Offset = "0x3A1DD8")]
		private float _brake;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Rigidbody _rigidbody;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Transform _transform;

		[Token(Token = "0x17000300")]
		public float Brake
		{
			[Token(Token = "0x6001ACE")]
			[Address(RVA = "0xED92D0", Offset = "0xED92D0", VA = "0xED92D0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001ACF")]
			[Address(RVA = "0xED92D8", Offset = "0xED92D8", VA = "0xED92D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000301")]
		public float Speed
		{
			[Token(Token = "0x6001AD0")]
			[Address(RVA = "0xED92E0", Offset = "0xED92E0", VA = "0xED92E0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AD1")]
			[Address(RVA = "0xED92E8", Offset = "0xED92E8", VA = "0xED92E8")]
			set
			{
			}
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0xED92F0", Offset = "0xED92F0", VA = "0xED92F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0xED93C0", Offset = "0xED93C0", VA = "0xED93C0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0xED9420", Offset = "0xED9420", VA = "0xED9420")]
		private void ApplyDownForce()
		{
		}

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0xED95A8", Offset = "0xED95A8", VA = "0xED95A8")]
		public TrainWheel_v3()
		{
		}
	}
	[Token(Token = "0x200037C")]
	public class Wagon_v3 : UnityEngine.MonoBehaviour, IRailroadCar
	{
		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private TrainController_v3 _locomotive;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HingeJoint _carJoint;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Rigidbody _rigidbody;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _isGrounded;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3A1DF0", Offset = "0x3A1DF0")]
		private float _maxSpeedKph;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3A1E0C", Offset = "0x3A1E0C")]
		private float _acceleration;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3A1E28", Offset = "0x3A1E28")]
		private float _brake;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _speed;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool _reverseAcceleration;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _targetVelocity;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _targetSpeed;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _currentSpeed;

		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _wagonAccel;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SFX _sfx;

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public AudioSource wheelsSFX;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioSource wagonConnectionSFX;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public List<TrainWheel_v3> wheelsScripts;

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Sensors sensors;

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public List<Light> externalLights;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<Light> internalLights;

		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Rigidbody backJoint;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Rigidbody frontJoint;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Rigidbody jointAnchor;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public WagonCoupling coupling;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public WagonDecouplingSettings decouplingSettings;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float recouplingTimeout;

		[Token(Token = "0x17000302")]
		public TrainController_v3 Locomotive
		{
			[Token(Token = "0x6001AD6")]
			[Address(RVA = "0xED95B0", Offset = "0xED95B0", VA = "0xED95B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AD7")]
			[Address(RVA = "0xED95B8", Offset = "0xED95B8", VA = "0xED95B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000303")]
		public HingeJoint CarJoint
		{
			[Token(Token = "0x6001AD8")]
			[Address(RVA = "0xED95C0", Offset = "0xED95C0", VA = "0xED95C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000304")]
		public bool IsConected
		{
			[Token(Token = "0x6001AD9")]
			[Address(RVA = "0xED5494", Offset = "0xED5494", VA = "0xED5494")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000305")]
		public bool IsGrounded
		{
			[Token(Token = "0x6001ADA")]
			[Address(RVA = "0xED95C8", Offset = "0xED95C8", VA = "0xED95C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000306")]
		public float MaxSpeedKph
		{
			[Token(Token = "0x6001ADB")]
			[Address(RVA = "0xED95D0", Offset = "0xED95D0", VA = "0xED95D0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001ADC")]
			[Address(RVA = "0xED95D8", Offset = "0xED95D8", VA = "0xED95D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000307")]
		public float Acceleration
		{
			[Token(Token = "0x6001ADD")]
			[Address(RVA = "0xED95E0", Offset = "0xED95E0", VA = "0xED95E0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001ADE")]
			[Address(RVA = "0xED95E8", Offset = "0xED95E8", VA = "0xED95E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000308")]
		public float Brake
		{
			[Token(Token = "0x6001ADF")]
			[Address(RVA = "0xED95F0", Offset = "0xED95F0", VA = "0xED95F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AE0")]
			[Address(RVA = "0xED95F8", Offset = "0xED95F8", VA = "0xED95F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000309")]
		public float JoinDistance
		{
			[Token(Token = "0x6001AE1")]
			[Address(RVA = "0xED9600", Offset = "0xED9600", VA = "0xED9600")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700030A")]
		public bool ReverseAcceleration
		{
			[Token(Token = "0x6001AE2")]
			[Address(RVA = "0xED97E4", Offset = "0xED97E4", VA = "0xED97E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AE3")]
			[Address(RVA = "0xED97EC", Offset = "0xED97EC", VA = "0xED97EC")]
			set
			{
			}
		}

		[Token(Token = "0x1700030B")]
		public Rigidbody BackJoint
		{
			[Token(Token = "0x6001AE4")]
			[Address(RVA = "0xED97F4", Offset = "0xED97F4", VA = "0xED97F4", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AE5")]
			[Address(RVA = "0xED97FC", Offset = "0xED97FC", VA = "0xED97FC", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x1700030C")]
		public List<TrainWheel_v3> Wheels
		{
			[Token(Token = "0x6001AE6")]
			[Address(RVA = "0xED9804", Offset = "0xED9804", VA = "0xED9804", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AE7")]
			[Address(RVA = "0xED980C", Offset = "0xED980C", VA = "0xED980C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700030D")]
		public AudioSource WheelsSFX
		{
			[Token(Token = "0x6001AE8")]
			[Address(RVA = "0xED9814", Offset = "0xED9814", VA = "0xED9814", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AE9")]
			[Address(RVA = "0xED981C", Offset = "0xED981C", VA = "0xED981C", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x1700030E")]
		public Sensors Sensors
		{
			[Token(Token = "0x6001AEA")]
			[Address(RVA = "0xED9824", Offset = "0xED9824", VA = "0xED9824", Slot = "10")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AEB")]
			[Address(RVA = "0xED982C", Offset = "0xED982C", VA = "0xED982C", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x1700030F")]
		public List<Light> ExternalLights
		{
			[Token(Token = "0x6001AEC")]
			[Address(RVA = "0xED9834", Offset = "0xED9834", VA = "0xED9834", Slot = "12")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AED")]
			[Address(RVA = "0xED983C", Offset = "0xED983C", VA = "0xED983C", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x17000310")]
		public List<Light> InternalLights
		{
			[Token(Token = "0x6001AEE")]
			[Address(RVA = "0xED9844", Offset = "0xED9844", VA = "0xED9844", Slot = "14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AEF")]
			[Address(RVA = "0xED984C", Offset = "0xED984C", VA = "0xED984C", Slot = "15")]
			set
			{
			}
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0xED9854", Offset = "0xED9854", VA = "0xED9854")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0xED996C", Offset = "0xED996C", VA = "0xED996C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0xED98D8", Offset = "0xED98D8", VA = "0xED98D8")]
		private void InitializeSFX()
		{
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0xED6A18", Offset = "0xED6A18", VA = "0xED6A18")]
		public void ToggleLights()
		{
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0xED6D7C", Offset = "0xED6D7C", VA = "0xED6D7C")]
		public void ToggleInternalLights()
		{
		}

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0xED5518", Offset = "0xED5518", VA = "0xED5518")]
		public void Connect(TrainCarCoupler carCoupler, TrainCarCoupler otherCarCoupler, bool playSFX)
		{
		}

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0xED6684", Offset = "0xED6684", VA = "0xED6684")]
		public void Disconnect(bool disconnectJoint)
		{
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0xED9E2C", Offset = "0xED9E2C", VA = "0xED9E2C")]
		private void ReenabledCoupling()
		{
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0xED9C34", Offset = "0xED9C34", VA = "0xED9C34")]
		private void UpdateVelocity()
		{
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0xED9B04", Offset = "0xED9B04", VA = "0xED9B04")]
		private void EnforceAnchorPosition()
		{
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0xED9E38", Offset = "0xED9E38", VA = "0xED9E38")]
		public Wagon_v3()
		{
		}
	}
}
namespace WSMGameStudio.Splines
{
	[Token(Token = "0x200037D")]
	public class SplineFollowerSF : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A1E40", Offset = "0x3A1E40")]
		public List<Spline> splines;

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A1E74", Offset = "0x3A1E74")]
		public float speed;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A1EA8", Offset = "0x3A1EA8")]
		public SplineFollowerBehaviour followerBehaviour;

		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A1EDC", Offset = "0x3A1EDC")]
		public SplineFollowerReference followerReference;

		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A1F10", Offset = "0x3A1F10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3A1F10", Offset = "0x3A1F10")]
		public float customStartPosition;

		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A1F64", Offset = "0x3A1F64")]
		public bool applySplineRotation;

		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A1F98", Offset = "0x3A1F98")]
		public SplineFollowerStops cycleEndStops;

		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A1FCC", Offset = "0x3A1FCC")]
		public float cycleStopTime;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _currentStopTime;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _cicleDuration;

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _progress;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _goingForward;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _distance;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _currentSpline;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _oldSpeedValue;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _oldGoingForward;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 _currentPosition;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion _currentRotation;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 _lookDirection;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 _lastLookDirection;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 _lastCustomUpDirection;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 _startPosition;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _endPosition;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Quaternion _startRotation;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Quaternion _endRotation;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int _currentIndex;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float _segmentdistance;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float _segmentTime;

		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float _step;

		[Token(Token = "0x17000311")]
		public bool SpeedChanged
		{
			[Token(Token = "0x6001AFB")]
			[Address(RVA = "0xEE5634", Offset = "0xEE5634", VA = "0xEE5634")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000312")]
		public bool DirectionChanged
		{
			[Token(Token = "0x6001AFC")]
			[Address(RVA = "0xEE5650", Offset = "0xEE5650", VA = "0xEE5650")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0xEE5670", Offset = "0xEE5670", VA = "0xEE5670")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0xEE5674", Offset = "0xEE5674", VA = "0xEE5674")]
		private void InitializeFollower()
		{
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0xEE5814", Offset = "0xEE5814", VA = "0xEE5814")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0xEE5818", Offset = "0xEE5818", VA = "0xEE5818")]
		private void MoveTrain()
		{
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0xEE58B4", Offset = "0xEE58B4", VA = "0xEE58B4")]
		private void FollowSpline()
		{
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0xEE652C", Offset = "0xEE652C", VA = "0xEE652C")]
		private void RecalculateCicleDuration()
		{
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0xEE5D28", Offset = "0xEE5D28", VA = "0xEE5D28")]
		private void FollowTerrain()
		{
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0xEE6EF0", Offset = "0xEE6EF0", VA = "0xEE6EF0")]
		private void CalculateTerrainStep()
		{
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0xEE6800", Offset = "0xEE6800", VA = "0xEE6800")]
		private void CalculateSegmentPositionsAndDirection(bool reversed = false)
		{
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0xEE6620", Offset = "0xEE6620", VA = "0xEE6620")]
		private void ValidateOrientedPoints()
		{
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0xEE7064", Offset = "0xEE7064", VA = "0xEE7064")]
		public void MoveToStartPosition()
		{
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0xEE7274", Offset = "0xEE7274", VA = "0xEE7274")]
		public void RestartFollower()
		{
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0xEE7290", Offset = "0xEE7290", VA = "0xEE7290")]
		public SplineFollowerSF()
		{
		}
	}
	[Token(Token = "0x200037E")]
	public class SplineFollower : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A2000", Offset = "0x3A2000")]
		public List<Spline> splines;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A2034", Offset = "0x3A2034")]
		public float speed;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A2068", Offset = "0x3A2068")]
		public SplineFollowerBehaviour followerBehaviour;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A209C", Offset = "0x3A209C")]
		public SplineFollowerReference followerReference;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A20D0", Offset = "0x3A20D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3A20D0", Offset = "0x3A20D0")]
		public float customStartPosition;

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A2124", Offset = "0x3A2124")]
		public bool applySplineRotation;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A2158", Offset = "0x3A2158")]
		public SplineFollowerStops cycleEndStops;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A218C", Offset = "0x3A218C")]
		public float cycleStopTime;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _currentStopTime;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _cicleDuration;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _progress;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _goingForward;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _distance;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _currentSpline;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _oldSpeedValue;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _oldGoingForward;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 _currentPosition;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion _currentRotation;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 _lookDirection;

		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 _lastLookDirection;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 _lastCustomUpDirection;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 _startPosition;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _endPosition;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Quaternion _startRotation;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Quaternion _endRotation;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int _currentIndex;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float _segmentdistance;

		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float _segmentTime;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float _step;

		[Token(Token = "0x17000313")]
		public bool SpeedChanged
		{
			[Token(Token = "0x6001B0A")]
			[Address(RVA = "0xEE3800", Offset = "0xEE3800", VA = "0xEE3800")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000314")]
		public bool DirectionChanged
		{
			[Token(Token = "0x6001B0B")]
			[Address(RVA = "0xEE381C", Offset = "0xEE381C", VA = "0xEE381C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0xEE383C", Offset = "0xEE383C", VA = "0xEE383C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0xEE3840", Offset = "0xEE3840", VA = "0xEE3840")]
		private void InitializeFollower()
		{
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0xEE39E0", Offset = "0xEE39E0", VA = "0xEE39E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0xEE3A7C", Offset = "0xEE3A7C", VA = "0xEE3A7C")]
		private void FollowSpline()
		{
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0xEE4724", Offset = "0xEE4724", VA = "0xEE4724")]
		private void RecalculateCicleDuration()
		{
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0xEE3F20", Offset = "0xEE3F20", VA = "0xEE3F20")]
		private void FollowTerrain()
		{
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0xEE50E8", Offset = "0xEE50E8", VA = "0xEE50E8")]
		private void CalculateTerrainStep()
		{
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0xEE49F8", Offset = "0xEE49F8", VA = "0xEE49F8")]
		private void CalculateSegmentPositionsAndDirection(bool reversed = false)
		{
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0xEE4818", Offset = "0xEE4818", VA = "0xEE4818")]
		private void ValidateOrientedPoints()
		{
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0xEE525C", Offset = "0xEE525C", VA = "0xEE525C")]
		public void MoveToStartPosition()
		{
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0xEE546C", Offset = "0xEE546C", VA = "0xEE546C")]
		public void RestartFollower()
		{
		}

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0xEE5470", Offset = "0xEE5470", VA = "0xEE5470")]
		public SplineFollower()
		{
		}
	}
	[Token(Token = "0x200037F")]
	public static class Bezier
	{
		[Token(Token = "0x6001B18")]
		[Address(RVA = "0xED9E58", Offset = "0xED9E58", VA = "0xED9E58")]
		public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0xED9FF4", Offset = "0xED9FF4", VA = "0xED9FF4")]
		public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0xEDA150", Offset = "0xEDA150", VA = "0xEDA150")]
		public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0xEDA348", Offset = "0xEDA348", VA = "0xEDA348")]
		public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0xEDA56C", Offset = "0xEDA56C", VA = "0xEDA56C")]
		public static Quaternion GetPointRotation(Quaternion r0, Quaternion r1, Quaternion r2, Quaternion r3, float t)
		{
			return default(Quaternion);
		}
	}
	[Token(Token = "0x2000380")]
	public static class Convert
	{
		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0xEDA920", Offset = "0xEDA920", VA = "0xEDA920")]
		public static Quaternion Vector3ToQuaternion(Vector3 v3)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0xEDA9C0", Offset = "0xEDA9C0", VA = "0xEDA9C0")]
		public static Vector3 QuaternionToVector3(Quaternion q)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0xEDA8F4", Offset = "0xEDA8F4", VA = "0xEDA8F4")]
		public static Quaternion Vector4ToQuaternion(Vector4 v4)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0xEDA8C8", Offset = "0xEDA8C8", VA = "0xEDA8C8")]
		public static Vector4 QuaternionToVector4(Quaternion q)
		{
			return default(Vector4);
		}
	}
	[Serializable]
	[Token(Token = "0x2000381")]
	public struct OrientedPoint
	{
		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 _position;

		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Quaternion _rotation;

		[Token(Token = "0x17000315")]
		[SerializeField]
		public Vector3 Position
		{
			[Token(Token = "0x6001B21")]
			[Address(RVA = "0x46DEC8", Offset = "0x46DEC8", VA = "0x46DEC8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001B22")]
			[Address(RVA = "0x46DEDC", Offset = "0x46DEDC", VA = "0x46DEDC")]
			set
			{
			}
		}

		[Token(Token = "0x17000316")]
		[SerializeField]
		public Quaternion Rotation
		{
			[Token(Token = "0x6001B23")]
			[Address(RVA = "0x46DEE8", Offset = "0x46DEE8", VA = "0x46DEE8")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001B24")]
			[Address(RVA = "0x46DEF8", Offset = "0x46DEF8", VA = "0x46DEF8")]
			set
			{
			}
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0x46DF08", Offset = "0x46DF08", VA = "0x46DF08")]
		public OrientedPoint(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0x46DF3C", Offset = "0x46DF3C", VA = "0x46DF3C")]
		public Vector3 LocalToWorld(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0x46DF60", Offset = "0x46DF60", VA = "0x46DF60")]
		public Vector3 WorldToLocal(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0x46DF84", Offset = "0x46DF84", VA = "0x46DF84")]
		public Vector3 LocalToWorldDirection(Vector3 direction)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000382")]
	public enum MeshGenerationMethod
	{
		[Token(Token = "0x4001A8F")]
		Manual,
		[Token(Token = "0x4001A90")]
		Realtime
	}
	[Token(Token = "0x2000383")]
	public enum HandlesVisibility
	{
		[Token(Token = "0x4001A92")]
		ShowOnlyActiveHandles,
		[Token(Token = "0x4001A93")]
		ShowAllHandles
	}
	[Token(Token = "0x2000384")]
	public enum BezierHandlesAlignment
	{
		[Token(Token = "0x4001A95")]
		Aligned,
		[Token(Token = "0x4001A96")]
		Mirrored,
		[Token(Token = "0x4001A97")]
		Free,
		[Token(Token = "0x4001A98")]
		Automatic
	}
	[Token(Token = "0x2000385")]
	public enum SplineFollowerBehaviour
	{
		[Token(Token = "0x4001A9A")]
		StopAtTheEnd,
		[Token(Token = "0x4001A9B")]
		Loop,
		[Token(Token = "0x4001A9C")]
		BackAndForward
	}
	[Token(Token = "0x2000386")]
	public enum SplineFollowerReference
	{
		[Token(Token = "0x4001A9E")]
		Spline,
		[Token(Token = "0x4001A9F")]
		Terrain
	}
	[Token(Token = "0x2000387")]
	public enum SplineFollowerStops
	{
		[Token(Token = "0x4001AA1")]
		Disabled,
		[Token(Token = "0x4001AA2")]
		LastSpline,
		[Token(Token = "0x4001AA3")]
		EachSpline
	}
	[Token(Token = "0x2000388")]
	public enum SplineInspectorMenu
	{
		[Token(Token = "0x4001AA5")]
		CurveSettings,
		[Token(Token = "0x4001AA6")]
		SplineSettings,
		[Token(Token = "0x4001AA7")]
		HandlesSettings
	}
	[Token(Token = "0x2000389")]
	public enum SplineUpwardsDirection
	{
		[Token(Token = "0x4001AA9")]
		Up,
		[Token(Token = "0x4001AAA")]
		Down,
		[Token(Token = "0x4001AAB")]
		Right,
		[Token(Token = "0x4001AAC")]
		Left,
		[Token(Token = "0x4001AAD")]
		Foward,
		[Token(Token = "0x4001AAE")]
		Back
	}
	[Token(Token = "0x200038A")]
	public enum MeshRendererInspectorMenu
	{
		[Token(Token = "0x4001AB0")]
		MeshGenerationSettings,
		[Token(Token = "0x4001AB1")]
		CollisionSettings
	}
	[Token(Token = "0x200038B")]
	public enum MessageType
	{
		[Token(Token = "0x4001AB3")]
		Success,
		[Token(Token = "0x4001AB4")]
		Error,
		[Token(Token = "0x4001AB5")]
		Warning
	}
	[Token(Token = "0x200038C")]
	public class SMR_IgnoredObject : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x6001B29")]
		[Address(RVA = "0xEDAD58", Offset = "0xEDAD58", VA = "0xEDAD58")]
		public SMR_IgnoredObject()
		{
		}
	}
	[Token(Token = "0x200038D")]
	public static class SMR_UISettings
	{
		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int btnWidth;

		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static int btnHeight;

		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static int btnColumnLine_1;

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static int btnColumnLine_2;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static int btnColumnLine_3;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static int btnColumnLine_4;
	}
	[Token(Token = "0x200038E")]
	public class Spline : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float newCurveLength;

		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private SMR_Theme _theme;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Vector3[] _controlPointsPositions;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Quaternion[] _controlPointsRotations;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private BezierHandlesAlignment[] _modes;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private OrientedPoint[] _orientedPoints;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool _loop;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[SerializeField]
		private bool _followTerrain;

		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _terrainCheckDistance;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3A2240", Offset = "0x3A2240")]
		private float _autoHandleSpacing;

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private HandlesVisibility _handlesVisibility;

		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private Vector3 _customUpwardsDirection;

		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SplineUpwardsDirection _splineUpwardsDirection;

		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Transform _transform;

		[Token(Token = "0x17000317")]
		public bool Loop
		{
			[Token(Token = "0x6001B2B")]
			[Address(RVA = "0xEDADF8", Offset = "0xEDADF8", VA = "0xEDADF8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B2C")]
			[Address(RVA = "0xEDAE00", Offset = "0xEDAE00", VA = "0xEDAE00")]
			set
			{
			}
		}

		[Token(Token = "0x17000318")]
		public bool FollowTerrain
		{
			[Token(Token = "0x6001B2D")]
			[Address(RVA = "0xEDB8F4", Offset = "0xEDB8F4", VA = "0xEDB8F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B2E")]
			[Address(RVA = "0xEDB8FC", Offset = "0xEDB8FC", VA = "0xEDB8FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000319")]
		public float TerrainCheckDistance
		{
			[Token(Token = "0x6001B2F")]
			[Address(RVA = "0xEDB904", Offset = "0xEDB904", VA = "0xEDB904")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B30")]
			[Address(RVA = "0xEDB90C", Offset = "0xEDB90C", VA = "0xEDB90C")]
			set
			{
			}
		}

		[Token(Token = "0x1700031A")]
		public float AutoHandleSpacing
		{
			[Token(Token = "0x6001B31")]
			[Address(RVA = "0xEDB914", Offset = "0xEDB914", VA = "0xEDB914")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B32")]
			[Address(RVA = "0xEDB91C", Offset = "0xEDB91C", VA = "0xEDB91C")]
			set
			{
			}
		}

		[Token(Token = "0x1700031B")]
		public HandlesVisibility HandlesVisibility
		{
			[Token(Token = "0x6001B33")]
			[Address(RVA = "0xEDB938", Offset = "0xEDB938", VA = "0xEDB938")]
			get
			{
				return default(HandlesVisibility);
			}
			[Token(Token = "0x6001B34")]
			[Address(RVA = "0xEDB940", Offset = "0xEDB940", VA = "0xEDB940")]
			set
			{
			}
		}

		[Token(Token = "0x1700031C")]
		public Vector3 CustomUpwardsDirection
		{
			[Token(Token = "0x6001B35")]
			[Address(RVA = "0xEDB948", Offset = "0xEDB948", VA = "0xEDB948")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001B36")]
			[Address(RVA = "0xEDBC48", Offset = "0xEDBC48", VA = "0xEDBC48")]
			set
			{
			}
		}

		[Token(Token = "0x1700031D")]
		public SplineUpwardsDirection SplineUpwardsDirection
		{
			[Token(Token = "0x6001B37")]
			[Address(RVA = "0xEDBC54", Offset = "0xEDBC54", VA = "0xEDBC54")]
			get
			{
				return default(SplineUpwardsDirection);
			}
			[Token(Token = "0x6001B38")]
			[Address(RVA = "0xEDBC5C", Offset = "0xEDBC5C", VA = "0xEDBC5C")]
			set
			{
			}
		}

		[Token(Token = "0x1700031E")]
		public int ControlPointCount
		{
			[Token(Token = "0x6001B39")]
			[Address(RVA = "0xEDBC64", Offset = "0xEDBC64", VA = "0xEDBC64")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700031F")]
		public int CurveCount
		{
			[Token(Token = "0x6001B3A")]
			[Address(RVA = "0xEDBC78", Offset = "0xEDBC78", VA = "0xEDBC78")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000320")]
		public float Length
		{
			[Token(Token = "0x6001B3B")]
			[Address(RVA = "0xEDBCA4", Offset = "0xEDBCA4", VA = "0xEDBCA4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000321")]
		public OrientedPoint[] OrientedPoints
		{
			[Token(Token = "0x6001B3C")]
			[Address(RVA = "0xEDBED0", Offset = "0xEDBED0", VA = "0xEDBED0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B3D")]
			[Address(RVA = "0xEDBED8", Offset = "0xEDBED8", VA = "0xEDBED8")]
			set
			{
			}
		}

		[Token(Token = "0x17000322")]
		public SMR_Theme Theme
		{
			[Token(Token = "0x6001B3E")]
			[Address(RVA = "0xEDBEE0", Offset = "0xEDBEE0", VA = "0xEDBEE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B3F")]
			[Address(RVA = "0xEDBEE8", Offset = "0xEDBEE8", VA = "0xEDBEE8")]
			set
			{
			}
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0xEDBEF0", Offset = "0xEDBEF0", VA = "0xEDBEF0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0xEDBF50", Offset = "0xEDBF50", VA = "0xEDBF50")]
		public Vector3 GetControlPointPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0xEDC21C", Offset = "0xEDC21C", VA = "0xEDC21C")]
		public Quaternion GetControlPointRotation(int index)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0xEDC268", Offset = "0xEDC268", VA = "0xEDC268")]
		public void SetControlPointRotation(int index, Quaternion rotation)
		{
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0xEDAF0C", Offset = "0xEDAF0C", VA = "0xEDAF0C")]
		public void SetControlPointPosition(int index, Vector3 point)
		{
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0xEDE26C", Offset = "0xEDE26C", VA = "0xEDE26C")]
		public BezierHandlesAlignment GetHandlesAlignment(int index)
		{
			return default(BezierHandlesAlignment);
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0xEDE2C0", Offset = "0xEDE2C0", VA = "0xEDE2C0")]
		public void SetHandlesAlignment(int index, BezierHandlesAlignment handleAlignment, bool enforceMode)
		{
		}

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0xEDB8A8", Offset = "0xEDB8A8", VA = "0xEDB8A8")]
		private void UpdateAllHandlesAligment()
		{
		}

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0xEDC9DC", Offset = "0xEDC9DC", VA = "0xEDC9DC")]
		private void EnforceHandleAlignment(int index)
		{
		}

		[Token(Token = "0x6001B49")]
		private int LoopIndexAroundArray<T>(T[] array, int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0xEDE3D4", Offset = "0xEDE3D4", VA = "0xEDE3D4")]
		public Vector3 GetPoint(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0xEDE698", Offset = "0xEDE698", VA = "0xEDE698")]
		public int GetClosestOrientedPointIndex(float t)
		{
			return default(int);
		}

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0xEDE74C", Offset = "0xEDE74C", VA = "0xEDE74C")]
		public Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0xEDE7B8", Offset = "0xEDE7B8", VA = "0xEDE7B8")]
		public Quaternion GetRotation(float t)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0xEDEA40", Offset = "0xEDEA40", VA = "0xEDEA40")]
		public Vector3 GetVelocity(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0xEDECBC", Offset = "0xEDECBC", VA = "0xEDECBC")]
		public Vector3 GetVelocity(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0xEDEE74", Offset = "0xEDEE74", VA = "0xEDEE74")]
		public Vector3 GetDirection(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0xEDEEC4", Offset = "0xEDEEC4", VA = "0xEDEEC4")]
		public Vector3 GetDirection(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0xEDEF64", Offset = "0xEDEF64", VA = "0xEDEF64")]
		public List<OrientedPoint> GetOrientedPoints(int steps)
		{
			return null;
		}

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0xEDF098", Offset = "0xEDF098", VA = "0xEDF098")]
		public OrientedPoint GetOrientedPoint(float t)
		{
			return default(OrientedPoint);
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0xEDF218", Offset = "0xEDF218", VA = "0xEDF218")]
		public OrientedPoint GetOrientedPoint(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, Quaternion r0, Quaternion r1, Quaternion r2, Quaternion r3, float t)
		{
			return default(OrientedPoint);
		}

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0xEDBFC0", Offset = "0xEDBFC0", VA = "0xEDBFC0")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0xEDF4BC", Offset = "0xEDF4BC", VA = "0xEDF4BC")]
		public void ResetRotations()
		{
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0xEDF558", Offset = "0xEDF558", VA = "0xEDF558")]
		public void ResetRotations(Quaternion newRotation)
		{
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0xEDF5E4", Offset = "0xEDF5E4", VA = "0xEDF5E4")]
		public void AddCurve()
		{
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0xEDFB2C", Offset = "0xEDFB2C", VA = "0xEDFB2C")]
		public void RemoveCurve()
		{
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0xEDFC60", Offset = "0xEDFC60", VA = "0xEDFC60")]
		public void ShapeCurve_QuarterCircle(Vector3 direction)
		{
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0xEDB680", Offset = "0xEDB680", VA = "0xEDB680")]
		public void ResetLastCurve()
		{
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0xEE0544", Offset = "0xEE0544", VA = "0xEE0544")]
		private Vector3 GetCurveDirection(int curveStartIndex)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0xEE0728", Offset = "0xEE0728", VA = "0xEE0728")]
		private Quaternion GetCurveRotation(int curveStartIndex)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0xEE08AC", Offset = "0xEE08AC", VA = "0xEE08AC")]
		private static bool[] DisableColliders(MeshCollider[] colliders)
		{
			return null;
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0xEE09D8", Offset = "0xEE09D8", VA = "0xEE09D8")]
		private static void RenableColliders(MeshCollider[] colliders, bool[] collidersState)
		{
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0xEE0A84", Offset = "0xEE0A84", VA = "0xEE0A84")]
		private static bool[] DisableIgnoredObjects(SMR_IgnoredObject[] objects)
		{
			return null;
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0xEE0BE8", Offset = "0xEE0BE8", VA = "0xEE0BE8")]
		private static void RenableIgnoredObjects(SMR_IgnoredObject[] objects, bool[] objectsState)
		{
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0xEE0CB0", Offset = "0xEE0CB0", VA = "0xEE0CB0")]
		public void Flatten()
		{
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0xEE0ED0", Offset = "0xEE0ED0", VA = "0xEE0ED0")]
		private void UpdateMeshRenderer()
		{
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0xEDBCAC", Offset = "0xEDBCAC", VA = "0xEDBCAC")]
		public float GetTotalDistance(bool realDistance = false)
		{
			return default(float);
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0xEE1134", Offset = "0xEE1134", VA = "0xEE1134")]
		public void SplitSpline(int selectedIndex)
		{
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0xEE1694", Offset = "0xEE1694", VA = "0xEE1694")]
		public void SubdivideCurve(int selectedIndex)
		{
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0xEE20CC", Offset = "0xEE20CC", VA = "0xEE20CC")]
		public void DissolveCurve(int selectedIndex)
		{
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0xEE2314", Offset = "0xEE2314", VA = "0xEE2314")]
		public void CalculateOrientedPoints(float spacing, float resolution = 1f)
		{
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0xEE325C", Offset = "0xEE325C", VA = "0xEE325C")]
		[ExecuteInEditMode]
		private Vector3 TerrainCollision(Vector3 origin, RaycastHit hit)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0xEE3420", Offset = "0xEE3420", VA = "0xEE3420")]
		public GameObject AppendSpline()
		{
			return null;
		}

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0xEDBA20", Offset = "0xEDBA20", VA = "0xEDBA20")]
		private void UpdateUpwardsDirectionVector()
		{
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0xEE3740", Offset = "0xEE3740", VA = "0xEE3740")]
		public Spline()
		{
		}
	}
	[Token(Token = "0x200038F")]
	public static class SplineDefaultValues
	{
		[Token(Token = "0x4001ACA")]
		public const int StepsPerCurve = 10;

		[Token(Token = "0x4001ACB")]
		public const float DirectionScale = 0.5f;
	}
	[Serializable]
	[Token(Token = "0x2000390")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x39ABB0", Offset = "0x39ABB0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x39ABB0", Offset = "0x39ABB0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x39ABB0", Offset = "0x39ABB0")]
	public class SplineMeshRenderer : UniqueMesh
	{
		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A22A8", Offset = "0x3A22A8")]
		private Spline _spline;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A22F0", Offset = "0x3A22F0")]
		private MeshGenerationMethod _meshGenerationMethod;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A2338", Offset = "0x3A2338")]
		private Mesh _baseMesh;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A2380", Offset = "0x3A2380")]
		private Vector3 _meshOffset;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A23C8", Offset = "0x3A23C8")]
		private bool _enableCollision;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A2410", Offset = "0x3A2410")]
		private SplineMeshRenderer[] _customMeshColliders;

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _splineLength;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Transform _auxTransform1;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform _auxTransform2;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private MeshCollider _meshCollider;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _baseMeshLength;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _baseMeshMinZ;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _baseMeshMaxZ;

		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _verticeScanned;

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int _baseMesh_VertexCount;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int _baseMesh_SubMeshCount;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3[] _baseMesh_vertices;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3[] _baseMesh_normals;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector4[] _baseMesh_tangents;

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector2[] _baseMesh_uv;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int[] _segmentIndices;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3[] _triangleVertices;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3[] _triangleNormals;

		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector2[] _triangleUvs;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector4[] _triangleTangents;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 _triangleVerticesStart;

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _triangleVerticesEnd;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 _triangleNormalsStart;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 _triangleNormalsEnd;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector4 _triangleTangentsStart;

		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Vector4 _triangleTangentsEnd;

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Matrix4x4 _triangleLocalToWorld_Start;

		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private Matrix4x4 _triangleLocalToWorld_End;

		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private Matrix4x4 _triangleWorldToLocal;

		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private List<Vector3> _vertices;

		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private List<Vector3> _normals;

		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private List<Vector2> _uvs;

		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private List<Vector4> _tangents;

		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private List<List<int>> _subMeshTriangles;

		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private bool _isCustomCollider;

		[Token(Token = "0x17000323")]
		public Mesh GeneratedMesh
		{
			[Token(Token = "0x6001B6D")]
			[Address(RVA = "0xEE7454", Offset = "0xEE7454", VA = "0xEE7454")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000324")]
		public Spline Spline
		{
			[Token(Token = "0x6001B6E")]
			[Address(RVA = "0xEE76D8", Offset = "0xEE76D8", VA = "0xEE76D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B6F")]
			[Address(RVA = "0xEE76E0", Offset = "0xEE76E0", VA = "0xEE76E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000325")]
		public MeshGenerationMethod MeshGenerationMethod
		{
			[Token(Token = "0x6001B70")]
			[Address(RVA = "0xEE76E8", Offset = "0xEE76E8", VA = "0xEE76E8")]
			get
			{
				return default(MeshGenerationMethod);
			}
			[Token(Token = "0x6001B71")]
			[Address(RVA = "0xEE76F0", Offset = "0xEE76F0", VA = "0xEE76F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000326")]
		public Mesh BaseMesh
		{
			[Token(Token = "0x6001B72")]
			[Address(RVA = "0xEE76F8", Offset = "0xEE76F8", VA = "0xEE76F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B73")]
			[Address(RVA = "0xEE7700", Offset = "0xEE7700", VA = "0xEE7700")]
			set
			{
			}
		}

		[Token(Token = "0x17000327")]
		public Vector3 MeshOffset
		{
			[Token(Token = "0x6001B74")]
			[Address(RVA = "0xEE7708", Offset = "0xEE7708", VA = "0xEE7708")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001B75")]
			[Address(RVA = "0xEE771C", Offset = "0xEE771C", VA = "0xEE771C")]
			set
			{
			}
		}

		[Token(Token = "0x17000328")]
		public bool EnableCollision
		{
			[Token(Token = "0x6001B76")]
			[Address(RVA = "0xEE7728", Offset = "0xEE7728", VA = "0xEE7728")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B77")]
			[Address(RVA = "0xEE7730", Offset = "0xEE7730", VA = "0xEE7730")]
			set
			{
			}
		}

		[Token(Token = "0x17000329")]
		public SplineMeshRenderer[] CustomMeshColliders
		{
			[Token(Token = "0x6001B78")]
			[Address(RVA = "0xEE7738", Offset = "0xEE7738", VA = "0xEE7738")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B79")]
			[Address(RVA = "0xEE7740", Offset = "0xEE7740", VA = "0xEE7740")]
			set
			{
			}
		}

		[Token(Token = "0x1700032A")]
		public bool IsCustomCollider
		{
			[Token(Token = "0x6001B7A")]
			[Address(RVA = "0xEE7748", Offset = "0xEE7748", VA = "0xEE7748")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B7B")]
			[Address(RVA = "0xEE7750", Offset = "0xEE7750", VA = "0xEE7750")]
			set
			{
			}
		}

		[Token(Token = "0x1700032B")]
		public bool HasCustomColliders
		{
			[Token(Token = "0x6001B7C")]
			[Address(RVA = "0xEE3400", Offset = "0xEE3400", VA = "0xEE3400")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0xEE7758", Offset = "0xEE7758", VA = "0xEE7758")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0xEE783C", Offset = "0xEE783C", VA = "0xEE783C")]
		private void GetAuxTranforms()
		{
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0xEE7B78", Offset = "0xEE7B78", VA = "0xEE7B78")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0xEE7BDC", Offset = "0xEE7BDC", VA = "0xEE7BDC")]
		private void RealtimeMeshGeneration()
		{
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0xEE0F88", Offset = "0xEE0F88", VA = "0xEE0F88")]
		public void ExtrudeMesh()
		{
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0xEE7BE0", Offset = "0xEE7BE0", VA = "0xEE7BE0")]
		private void ResetAuxTranforms()
		{
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0xEE8738", Offset = "0xEE8738", VA = "0xEE8738")]
		private void UpdateCollider()
		{
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0xEE87F0", Offset = "0xEE87F0", VA = "0xEE87F0")]
		private void GenerateCustomColliders()
		{
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0xEE7DA4", Offset = "0xEE7DA4", VA = "0xEE7DA4")]
		private void ResetMeshValues()
		{
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0xEE7EA4", Offset = "0xEE7EA4", VA = "0xEE7EA4")]
		private void BaseMeshScan(out bool notUVMapped)
		{
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0xEE80A0", Offset = "0xEE80A0", VA = "0xEE80A0")]
		private void CreateMesh()
		{
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0xEE8994", Offset = "0xEE8994", VA = "0xEE8994")]
		private void AddMeshSegment(Transform start, Transform end, out bool exceededVertsLimit)
		{
		}

		[Token(Token = "0x6001B89")]
		private T[] GetVector<T>(T[] vectorArray, int[] indices)
		{
			return null;
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0xEE8C78", Offset = "0xEE8C78", VA = "0xEE8C78")]
		private void CreateTriangle(Transform start, Transform end, int[] indices, int subMeshIndex, out bool exceededVertsLimit)
		{
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0xEE95A4", Offset = "0xEE95A4", VA = "0xEE95A4")]
		public void AddTriangle(Vector3[] vertices, Vector3[] normals, Vector2[] uvs, Vector4[] tangents, int subMeshIndex)
		{
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0xEE99B8", Offset = "0xEE99B8", VA = "0xEE99B8")]
		private bool IsDuplicate(Vector3 vertice, Vector3 normal, Vector2 uv, int lastSegmentStartIndex, int initialVertCount, out int originalIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0xEE84FC", Offset = "0xEE84FC", VA = "0xEE84FC")]
		public void UpdateMeshRenderer()
		{
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0xEE9C20", Offset = "0xEE9C20", VA = "0xEE9C20")]
		public void PrintMeshDetails()
		{
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0xEEA1F4", Offset = "0xEEA1F4", VA = "0xEEA1F4")]
		public GameObject ConnectNewRenderer()
		{
			return null;
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0xEE9574", Offset = "0xEE9574", VA = "0xEE9574")]
		private float GetLerpValue(float value, float oldMin, float oldMax, float newMin, float newMax)
		{
			return default(float);
		}

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0xEEA218", Offset = "0xEEA218", VA = "0xEEA218")]
		public SplineMeshRenderer()
		{
		}
	}
	[Token(Token = "0x2000391")]
	public class UniqueMesh : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[HideInInspector]
		private int ownerID;

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MeshFilter _meshFilter;

		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Mesh _mesh;

		[Token(Token = "0x1700032C")]
		private MeshFilter meshFilter
		{
			[Token(Token = "0x6001B92")]
			[Address(RVA = "0xEEA354", Offset = "0xEEA354", VA = "0xEEA354")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032D")]
		protected Mesh mesh
		{
			[Token(Token = "0x6001B93")]
			[Address(RVA = "0xEE7458", Offset = "0xEE7458", VA = "0xEE7458")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0xEEA34C", Offset = "0xEEA34C", VA = "0xEEA34C")]
		public UniqueMesh()
		{
		}
	}
}
namespace UnityEngine.UI
{
	[Token(Token = "0x2000392")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x39AC88", Offset = "0x39AC88")]
	public class UIIgnoreRaycast : MonoBehaviour, ICanvasRaycastFilter
	{
		[Token(Token = "0x6001B95")]
		[Address(RVA = "0x648FA8", Offset = "0x648FA8", VA = "0x648FA8", Slot = "4")]
		public bool IsRaycastLocationValid(Vector2 sp, Camera eventCamera)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0x648FB0", Offset = "0x648FB0", VA = "0x648FB0")]
		public UIIgnoreRaycast()
		{
		}
	}
}
namespace PygmyMonkey.AdvancedBuilder
{
	[Serializable]
	[Token(Token = "0x2000393")]
	public class AppParameters : ScriptableObject
	{
		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AppParameters mInstance;

		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private string m_releaseType;

		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string m_platformType;

		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private string m_distributionPlatform;

		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string m_platformArchitecture;

		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private string m_textureCompression;

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string m_productName;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private string m_bundleIdentifier;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string m_bundleVersion;

		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int m_buildNumber;

		[Token(Token = "0x1700032E")]
		public static AppParameters Get
		{
			[Token(Token = "0x6001B97")]
			[Address(RVA = "0x819E78", Offset = "0x819E78", VA = "0x819E78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032F")]
		public string releaseType
		{
			[Token(Token = "0x6001B99")]
			[Address(RVA = "0x81A0A0", Offset = "0x81A0A0", VA = "0x81A0A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000330")]
		public string platformType
		{
			[Token(Token = "0x6001B9A")]
			[Address(RVA = "0x81A0A8", Offset = "0x81A0A8", VA = "0x81A0A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000331")]
		public string distributionPlatform
		{
			[Token(Token = "0x6001B9B")]
			[Address(RVA = "0x81A0B0", Offset = "0x81A0B0", VA = "0x81A0B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000332")]
		public string platformArchitecture
		{
			[Token(Token = "0x6001B9C")]
			[Address(RVA = "0x81A0B8", Offset = "0x81A0B8", VA = "0x81A0B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000333")]
		public string textureCompression
		{
			[Token(Token = "0x6001B9D")]
			[Address(RVA = "0x81A0C0", Offset = "0x81A0C0", VA = "0x81A0C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000334")]
		public string productName
		{
			[Token(Token = "0x6001B9E")]
			[Address(RVA = "0x81A0C8", Offset = "0x81A0C8", VA = "0x81A0C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000335")]
		public string bundleIdentifier
		{
			[Token(Token = "0x6001B9F")]
			[Address(RVA = "0x81A0D0", Offset = "0x81A0D0", VA = "0x81A0D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000336")]
		public string bundleVersion
		{
			[Token(Token = "0x6001BA0")]
			[Address(RVA = "0x81A0D8", Offset = "0x81A0D8", VA = "0x81A0D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000337")]
		public int buildNumber
		{
			[Token(Token = "0x6001BA1")]
			[Address(RVA = "0x81A0E0", Offset = "0x81A0E0", VA = "0x81A0E0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0x81A064", Offset = "0x81A064", VA = "0x81A064")]
		public void updateParameters(string releaseType, string platformType, string distributionPlatform, string platformArchitecture, string textureCompression, string productName, string bundleIdentifier, string bundleVersion, int buildNumber)
		{
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0x81A0E8", Offset = "0x81A0E8", VA = "0x81A0E8")]
		public AppParameters()
		{
		}
	}
}
namespace Sony.NP
{
	[Token(Token = "0x2000394")]
	public enum ErrorCode
	{
		[Token(Token = "0x4001B02")]
		NP_OK,
		[Token(Token = "0x4001B03")]
		NP_SIGNED_IN_FLIGHT_MODE,
		[Token(Token = "0x4001B04")]
		NP_ERR_BUSY,
		[Token(Token = "0x4001B05")]
		NP_ERR_FAILED,
		[Token(Token = "0x4001B06")]
		NP_ERR_NOT_SUPPORTED,
		[Token(Token = "0x4001B07")]
		NP_ERR_BAD_STATE,
		[Token(Token = "0x4001B08")]
		NP_ERR_NOT_SIGNED_IN,
		[Token(Token = "0x4001B09")]
		NP_ERR_NOT_CONNECTED,
		[Token(Token = "0x4001B0A")]
		NP_ERR_NOT_CONNECTED_FLIGHT_MODE,
		[Token(Token = "0x4001B0B")]
		NP_ERR_INDEX_OUT_OF_RANGE,
		[Token(Token = "0x4001B0C")]
		NP_ERR_AUTH_NO_CACHED_TICKET,
		[Token(Token = "0x4001B0D")]
		NP_ERR_TUS_NO_VAR_DATA,
		[Token(Token = "0x4001B0E")]
		NP_ERR_LATEST_PATCH_PKG_EXIST,
		[Token(Token = "0x4001B0F")]
		NP_ERR_COMMERCE_SESSION_NOT_CREATED,
		[Token(Token = "0x4001B10")]
		NP_ERR_COMMERCE_SESSION_EXPIRED,
		[Token(Token = "0x4001B11")]
		NP_ERR_INVALID_NP_SERVICE_TYPE
	}
	[Token(Token = "0x2000395")]
	public struct ResultCode
	{
		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IntPtr _serviceName;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ErrorCode lastError;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int lastErrorSCE;

		[Token(Token = "0x17000338")]
		public string className
		{
			[Token(Token = "0x6001BA3")]
			[Address(RVA = "0x4574CC", Offset = "0x4574CC", VA = "0x4574CC")]
			get
			{
				return null;
			}
		}
	}
	[Token(Token = "0x2000396")]
	public enum NpServiceType
	{
		[Token(Token = "0x4001B16")]
		NetInfo,
		[Token(Token = "0x4001B17")]
		Profile,
		[Token(Token = "0x4001B18")]
		Friends,
		[Token(Token = "0x4001B19")]
		Messaging,
		[Token(Token = "0x4001B1A")]
		Ranking,
		[Token(Token = "0x4001B1B")]
		Presence,
		[Token(Token = "0x4001B1C")]
		Tus,
		[Token(Token = "0x4001B1D")]
		Tss,
		[Token(Token = "0x4001B1E")]
		Matching,
		[Token(Token = "0x4001B1F")]
		Sns,
		[Token(Token = "0x4001B20")]
		Commerce,
		[Token(Token = "0x4001B21")]
		Auth,
		[Token(Token = "0x4001B22")]
		Trophy,
		[Token(Token = "0x4001B23")]
		WordFilter,
		[Token(Token = "0x4001B24")]
		Near,
		[Token(Token = "0x4001B25")]
		WebApi,
		[Token(Token = "0x4001B26")]
		Sessions,
		[Token(Token = "0x4001B27")]
		GameCustomData,
		[Token(Token = "0x4001B28")]
		Challenges
	}
	[Token(Token = "0x2000397")]
	public class Messages
	{
		[Token(Token = "0x2000895")]
		public enum MessageType
		{
			[Token(Token = "0x40028C9")]
			kNPToolKit_NotSet,
			[Token(Token = "0x40028CA")]
			kNPToolKit_Log,
			[Token(Token = "0x40028CB")]
			kNPToolKit_LogWarning,
			[Token(Token = "0x40028CC")]
			kNPToolKit_LogError,
			[Token(Token = "0x40028CD")]
			kNPToolKit_NPInitialized,
			[Token(Token = "0x40028CE")]
			kNPToolKit_ConnectionUp,
			[Token(Token = "0x40028CF")]
			kNPToolKit_ConnectionDown,
			[Token(Token = "0x40028D0")]
			kNPToolKit_SignedIn,
			[Token(Token = "0x40028D1")]
			kNPToolKit_SignedOut,
			[Token(Token = "0x40028D2")]
			kNPToolKit_SignInError,
			[Token(Token = "0x40028D3")]
			kNPToolKit_SysEvent,
			[Token(Token = "0x40028D4")]
			kNPToolKit_SysResume,
			[Token(Token = "0x40028D5")]
			kNPToolKit_SysNpMessageArrived,
			[Token(Token = "0x40028D6")]
			kNPToolKit_SysStorePurchase,
			[Token(Token = "0x40028D7")]
			kNPToolKit_SysStoreRedemption,
			[Token(Token = "0x40028D8")]
			kNPToolKit_GotUserProfile,
			[Token(Token = "0x40028D9")]
			kNPToolKit_GotRemoteUserNpID,
			[Token(Token = "0x40028DA")]
			kNPToolKit_GotRemoteUserProfile,
			[Token(Token = "0x40028DB")]
			kNPToolKit_UserProfileError,
			[Token(Token = "0x40028DC")]
			kNPToolKit_NetInfoGotBandwidth,
			[Token(Token = "0x40028DD")]
			kNPToolKit_NetInfoGotBasic,
			[Token(Token = "0x40028DE")]
			kNPToolKit_NetInfoError,
			[Token(Token = "0x40028DF")]
			kNPToolKit_FriendsListUpdated,
			[Token(Token = "0x40028E0")]
			kNPToolkit_FriendsPresenceUpdated,
			[Token(Token = "0x40028E1")]
			kNPToolKit_GotFriendsList,
			[Token(Token = "0x40028E2")]
			kNPToolKit_FriendsListError,
			[Token(Token = "0x40028E3")]
			kNPToolKit_PresenceSet,
			[Token(Token = "0x40028E4")]
			kNPToolKit_PresenceError,
			[Token(Token = "0x40028E5")]
			kNPToolKit_TrophySetSetupSuccess,
			[Token(Token = "0x40028E6")]
			kNPToolKit_TrophySetSetupCancelled,
			[Token(Token = "0x40028E7")]
			kNPToolKit_TrophySetSetupAborted,
			[Token(Token = "0x40028E8")]
			kNPToolKit_TrophySetSetupFail,
			[Token(Token = "0x40028E9")]
			kNPToolKit_TrophyCacheReady,
			[Token(Token = "0x40028EA")]
			kNPToolKit_TrophyGotGameInfo,
			[Token(Token = "0x40028EB")]
			kNPToolKit_TrophyGotGroupInfo,
			[Token(Token = "0x40028EC")]
			kNPToolKit_TrophyGotTrophyInfo,
			[Token(Token = "0x40028ED")]
			kNPToolKit_TrophyGotProgress,
			[Token(Token = "0x40028EE")]
			kNPToolKit_TrophyUnlocked,
			[Token(Token = "0x40028EF")]
			kNPToolKit_TrophyUnlockFailed,
			[Token(Token = "0x40028F0")]
			kNPToolKit_TrophyUnlockedAlready,
			[Token(Token = "0x40028F1")]
			kNPToolKit_TrophyUnlockedPlatinum,
			[Token(Token = "0x40028F2")]
			kNPToolKit_TrophyError,
			[Token(Token = "0x40028F3")]
			kNPToolKit_RankingCacheRegistered,
			[Token(Token = "0x40028F4")]
			kNPToolKit_RankingNewBestScore,
			[Token(Token = "0x40028F5")]
			kNPToolKit_RankingNotBestScore,
			[Token(Token = "0x40028F6")]
			kNPToolKit_RankingGotOwnRank,
			[Token(Token = "0x40028F7")]
			kNPToolKit_RankingGotFriendRank,
			[Token(Token = "0x40028F8")]
			kNPToolKit_RankingGotRankList,
			[Token(Token = "0x40028F9")]
			kNPToolKit_RankingError,
			[Token(Token = "0x40028FA")]
			kNPToolKit_MatchingCreatedSession,
			[Token(Token = "0x40028FB")]
			kNPToolKit_MatchingFoundSessions,
			[Token(Token = "0x40028FC")]
			kNPToolKit_MatchingJoinedSession,
			[Token(Token = "0x40028FD")]
			kNPToolKit_MatchingJoinInvalidSession,
			[Token(Token = "0x40028FE")]
			kNPToolKit_MatchingUpdatedSession,
			[Token(Token = "0x40028FF")]
			kNPToolKit_MatchingLeftSession,
			[Token(Token = "0x4002900")]
			kNPToolKit_MatchingRoomDestroyed,
			[Token(Token = "0x4002901")]
			kNPToolKit_MatchingKickedOut,
			[Token(Token = "0x4002902")]
			kNPToolKit_MatchingError,
			[Token(Token = "0x4002903")]
			kNPToolKit_WordFilterNotCensored,
			[Token(Token = "0x4002904")]
			kNPToolKit_WordFilterCensored,
			[Token(Token = "0x4002905")]
			kNPToolKit_WordFilterSanitized,
			[Token(Token = "0x4002906")]
			kNPToolKit_WordFilterError,
			[Token(Token = "0x4002907")]
			kNPToolKit_MessagingSent,
			[Token(Token = "0x4002908")]
			kNPToolKit_MessagingCanceled,
			[Token(Token = "0x4002909")]
			kNPToolKit_MessagingNotSent,
			[Token(Token = "0x400290A")]
			kNPToolKit_MessagingNotSentFreqTooHigh,
			[Token(Token = "0x400290B")]
			kNPToolKit_MessagingSessionInviteRetrieved,
			[Token(Token = "0x400290C")]
			kNPToolKit_MessagingCustomInviteRetrieved,
			[Token(Token = "0x400290D")]
			kNPToolKit_MessagingDataMessageRetrieved,
			[Token(Token = "0x400290E")]
			kNPToolKit_MessagingInGameDataMessageRetrieved,
			[Token(Token = "0x400290F")]
			kNPToolKit_MessagingSessionInviteReceived,
			[Token(Token = "0x4002910")]
			kNPToolKit_MessagingSessionInviteAccepted,
			[Token(Token = "0x4002911")]
			kNPToolKit_MessagingError,
			[Token(Token = "0x4002912")]
			kNPToolKit_MessagingPlayTogetherReceived,
			[Token(Token = "0x4002913")]
			kNPToolKit_CommerceSessionCreated,
			[Token(Token = "0x4002914")]
			kNPToolKit_CommerceSessionAborted,
			[Token(Token = "0x4002915")]
			kNPToolKit_CommerceGotCategoryInfo,
			[Token(Token = "0x4002916")]
			kNPToolKit_CommerceGotProductList,
			[Token(Token = "0x4002917")]
			kNPToolKit_CommerceGotProductInfo,
			[Token(Token = "0x4002918")]
			kNPToolKit_CommerceGotEntitlementList,
			[Token(Token = "0x4002919")]
			kNPToolKit_CommerceConsumedEntitlement,
			[Token(Token = "0x400291A")]
			kNPToolKit_CommerceError,
			[Token(Token = "0x400291B")]
			kNPToolKit_CommerceCheckoutStarted,
			[Token(Token = "0x400291C")]
			kNPToolKit_CommerceCheckoutFinished,
			[Token(Token = "0x400291D")]
			kNPToolKit_CommerceProductBrowseStarted,
			[Token(Token = "0x400291E")]
			kNPToolKit_CommerceProductBrowseSuccess,
			[Token(Token = "0x400291F")]
			kNPToolKit_CommerceProductBrowseAborted,
			[Token(Token = "0x4002920")]
			kNPToolKit_CommerceProductBrowseFinished,
			[Token(Token = "0x4002921")]
			kNPToolKit_CommerceCategoryBrowseStarted,
			[Token(Token = "0x4002922")]
			kNPToolKit_CommerceCategoryBrowseFinished,
			[Token(Token = "0x4002923")]
			kNPToolKit_CommerceVoucherInputStarted,
			[Token(Token = "0x4002924")]
			kNPToolKit_CommerceVoucherInputFinished,
			[Token(Token = "0x4002925")]
			kNPToolKit_CommerceDownloadListStarted,
			[Token(Token = "0x4002926")]
			kNPToolKit_CommerceDownloadListFinished,
			[Token(Token = "0x4002927")]
			kNPToolKit_TUSDataSet,
			[Token(Token = "0x4002928")]
			kNPToolKit_TUSDataReceived,
			[Token(Token = "0x4002929")]
			kNPToolKit_TUSVariablesSet,
			[Token(Token = "0x400292A")]
			kNPToolKit_TUSVariablesModified,
			[Token(Token = "0x400292B")]
			kNPToolKit_TUSVariablesReceived,
			[Token(Token = "0x400292C")]
			kNPToolKit_TSSDataReceived,
			[Token(Token = "0x400292D")]
			kNPToolKit_TSSNoData,
			[Token(Token = "0x400292E")]
			kNPToolKit_TusTssError,
			[Token(Token = "0x400292F")]
			kNPToolKit_DlgFriendsClosed,
			[Token(Token = "0x4002930")]
			kNPToolKit_DlgSharedPlayHistoryClosed,
			[Token(Token = "0x4002931")]
			kNPToolKit_DlgProfileClosed,
			[Token(Token = "0x4002932")]
			kNPToolKit_DlgCommerceClosed,
			[Token(Token = "0x4002933")]
			kNPToolKit_FacebookDialogStarted,
			[Token(Token = "0x4002934")]
			kNPToolKit_FacebookDialogFinished,
			[Token(Token = "0x4002935")]
			kNPToolKit_FacebookMessagePosted,
			[Token(Token = "0x4002936")]
			kNPToolKit_FacebookMessagePostFailed,
			[Token(Token = "0x4002937")]
			kNPToolKit_TwitterDialogStarted,
			[Token(Token = "0x4002938")]
			kNPToolKit_TwitterDialogFinished,
			[Token(Token = "0x4002939")]
			kNPToolKit_TwitterDialogCanceled,
			[Token(Token = "0x400293A")]
			kNPToolKit_TwitterMessagePosted,
			[Token(Token = "0x400293B")]
			kNPToolKit_TwitterMessagePostFailed,
			[Token(Token = "0x400293C")]
			kNPToolKit_TicketingGotTicket,
			[Token(Token = "0x400293D")]
			kNPToolKit_TicketingGotAccessToken,
			[Token(Token = "0x400293E")]
			kNPToolKit_TicketingError,
			[Token(Token = "0x400293F")]
			kNPToolKit_CheckPlusResult,
			[Token(Token = "0x4002940")]
			kNPToolKit_AccountLanguageResult,
			[Token(Token = "0x4002941")]
			kNPToolKit_ParentalControlResult,
			[Token(Token = "0x4002942")]
			kNPToolKit_END
		}

		[Token(Token = "0x2000896")]
		public delegate void EventHandler(PluginMessage msg);

		[Token(Token = "0x2000897")]
		public struct PluginMessage
		{
			[Token(Token = "0x4002943")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MessageType type;

			[Token(Token = "0x4002944")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int userId;

			[Token(Token = "0x4002945")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int dataSize;

			[Token(Token = "0x4002946")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public IntPtr data;

			[Token(Token = "0x170005C5")]
			public string Text
			{
				[Token(Token = "0x6003708")]
				[Address(RVA = "0x4574A0", Offset = "0x4574A0", VA = "0x4574A0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005C6")]
			public int Int
			{
				[Token(Token = "0x6003709")]
				[Address(RVA = "0x4574A8", Offset = "0x4574A8", VA = "0x4574A8")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x600370A")]
			[Address(RVA = "0x4574C4", Offset = "0x4574C4", VA = "0x4574C4", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0x70D980", Offset = "0x70D980", VA = "0x70D980")]
		private static extern bool PrxHasMessage();

		[PreserveSig]
		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0x70DA20", Offset = "0x70DA20", VA = "0x70DA20")]
		private static extern bool PrxGetFirstMessage(out PluginMessage msg);

		[PreserveSig]
		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0x70DAC8", Offset = "0x70DAC8", VA = "0x70DAC8")]
		private static extern bool PrxRemoveFirstMessage();

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0x70DB68", Offset = "0x70DB68", VA = "0x70DB68")]
		public static bool HasMessage()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0x70DB6C", Offset = "0x70DB6C", VA = "0x70DB6C")]
		public static void RemoveFirstMessage()
		{
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0x70DB70", Offset = "0x70DB70", VA = "0x70DB70")]
		public static void GetFirstMessage(out PluginMessage msg)
		{
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0x70DB74", Offset = "0x70DB74", VA = "0x70DB74")]
		public Messages()
		{
		}
	}
	[Token(Token = "0x2000398")]
	public class Ticketing
	{
		[Token(Token = "0x2000898")]
		public struct Ticket
		{
			[Token(Token = "0x4002947")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IntPtr _data;

			[Token(Token = "0x4002948")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int dataSize;

			[Token(Token = "0x4002949")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int issuerId;

			[Token(Token = "0x170005C7")]
			public byte[] data
			{
				[Token(Token = "0x600370B")]
				[Address(RVA = "0x4574D4", Offset = "0x4574D4", VA = "0x4574D4")]
				get
				{
					return null;
				}
			}
		}

		[Token(Token = "0x2000899")]
		public struct TicketEntitlement
		{
			[Token(Token = "0x400294A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IntPtr _id;

			[Token(Token = "0x400294B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int type;

			[Token(Token = "0x400294C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int remainingCount;

			[Token(Token = "0x400294D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int consumedCount;

			[Token(Token = "0x400294E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ulong createdDate;

			[Token(Token = "0x400294F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ulong expireDate;

			[Token(Token = "0x170005C8")]
			public string id
			{
				[Token(Token = "0x600370C")]
				[Address(RVA = "0x4574DC", Offset = "0x4574DC", VA = "0x4574DC")]
				get
				{
					return null;
				}
			}
		}

		[Token(Token = "0x200089A")]
		public struct TicketEntitlementArray
		{
			[Token(Token = "0x4002950")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IntPtr _data;

			[Token(Token = "0x4002951")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int count;

			[Token(Token = "0x170005C9")]
			public TicketEntitlement[] entitlements
			{
				[Token(Token = "0x600370D")]
				[Address(RVA = "0x4574E4", Offset = "0x4574E4", VA = "0x4574E4")]
				get
				{
					return null;
				}
			}
		}

		[Token(Token = "0x200089B")]
		public struct TicketInfo
		{
			[Token(Token = "0x4002952")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public long issuedDate;

			[Token(Token = "0x4002953")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public long expireDate;

			[Token(Token = "0x4002954")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public long subjectAccountID;

			[Token(Token = "0x4002955")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public long statusDuration;

			[Token(Token = "0x4002956")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int serialIDSize;

			[Token(Token = "0x4002957")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private IntPtr _serialID;

			[Token(Token = "0x4002958")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private IntPtr _subjectOnlineID;

			[Token(Token = "0x4002959")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private IntPtr _countryCode;

			[Token(Token = "0x400295A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IntPtr _subjectDomain;

			[Token(Token = "0x400295B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private IntPtr _serviceID;

			[Token(Token = "0x400295C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int issuerID;

			[Token(Token = "0x400295D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int languageCode;

			[Token(Token = "0x400295E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int subjectAge;

			[Token(Token = "0x400295F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int chatDisabled;

			[Token(Token = "0x4002960")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int contentRating;

			[Token(Token = "0x170005CA")]
			public byte[] serialID
			{
				[Token(Token = "0x600370E")]
				[Address(RVA = "0x4574EC", Offset = "0x4574EC", VA = "0x4574EC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005CB")]
			public string subjectOnlineID
			{
				[Token(Token = "0x600370F")]
				[Address(RVA = "0x4574F4", Offset = "0x4574F4", VA = "0x4574F4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005CC")]
			public string countryCode
			{
				[Token(Token = "0x6003710")]
				[Address(RVA = "0x4574FC", Offset = "0x4574FC", VA = "0x4574FC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005CD")]
			public string subjectDomain
			{
				[Token(Token = "0x6003711")]
				[Address(RVA = "0x457504", Offset = "0x457504", VA = "0x457504")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005CE")]
			public string serviceID
			{
				[Token(Token = "0x6003712")]
				[Address(RVA = "0x45750C", Offset = "0x45750C", VA = "0x45750C")]
				get
				{
					return null;
				}
			}
		}

		[Token(Token = "0x14000033")]
		public static event Messages.EventHandler OnGotTicket
		{
			[Token(Token = "0x6001BBB")]
			[Address(RVA = "0x70EA94", Offset = "0x70EA94", VA = "0x70EA94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC7DC", Offset = "0x3AC7DC")]
			add
			{
			}
			[Token(Token = "0x6001BBC")]
			[Address(RVA = "0x70EB58", Offset = "0x70EB58", VA = "0x70EB58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC7EC", Offset = "0x3AC7EC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000034")]
		public static event Messages.EventHandler OnGotAccessToken
		{
			[Token(Token = "0x6001BBD")]
			[Address(RVA = "0x70EC1C", Offset = "0x70EC1C", VA = "0x70EC1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC7FC", Offset = "0x3AC7FC")]
			add
			{
			}
			[Token(Token = "0x6001BBE")]
			[Address(RVA = "0x70ECE4", Offset = "0x70ECE4", VA = "0x70ECE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC80C", Offset = "0x3AC80C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000035")]
		public static event Messages.EventHandler OnError
		{
			[Token(Token = "0x6001BBF")]
			[Address(RVA = "0x70EDAC", Offset = "0x70EDAC", VA = "0x70EDAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC81C", Offset = "0x3AC81C")]
			add
			{
			}
			[Token(Token = "0x6001BC0")]
			[Address(RVA = "0x70EE74", Offset = "0x70EE74", VA = "0x70EE74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC82C", Offset = "0x3AC82C")]
			remove
			{
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0x70E1D8", Offset = "0x70E1D8", VA = "0x70E1D8")]
		private static extern bool PrxTicketingIsBusy();

		[PreserveSig]
		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0x70E278", Offset = "0x70E278", VA = "0x70E278")]
		private static extern bool PrxTicketingGetLastError(out ResultCode result);

		[PreserveSig]
		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0x70E320", Offset = "0x70E320", VA = "0x70E320")]
		private static extern ErrorCode PrxTicketingRequestTicket();

		[PreserveSig]
		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0x70E3B8", Offset = "0x70E3B8", VA = "0x70E3B8")]
		private static extern ErrorCode PrxTicketingRequestUserAccesscode(string clientId, string scope);

		[PreserveSig]
		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0x70E4A0", Offset = "0x70E4A0", VA = "0x70E4A0")]
		private static extern ErrorCode PrxTicketingRequestCachedTicket();

		[PreserveSig]
		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0x70E538", Offset = "0x70E538", VA = "0x70E538")]
		private static extern ErrorCode PrxTicketingGetTicket(out Ticket ticket);

		[PreserveSig]
		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0x70E5D8", Offset = "0x70E5D8", VA = "0x70E5D8")]
		private static extern ErrorCode PrxTicketingGetTicketInfo(ref Ticket ticket, out TicketInfo info);

		[PreserveSig]
		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0x70E680", Offset = "0x70E680", VA = "0x70E680")]
		private static extern ErrorCode PrxTicketingGetEntitlementList(ref Ticket ticket, out TicketEntitlementArray result);

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0x70E728", Offset = "0x70E728", VA = "0x70E728")]
		public static bool GetLastError(out ResultCode result)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0x70E748", Offset = "0x70E748", VA = "0x70E748")]
		public static bool IsBusy()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0x70E74C", Offset = "0x70E74C", VA = "0x70E74C")]
		public static ErrorCode RequestTicket()
		{
			return default(ErrorCode);
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0x70E750", Offset = "0x70E750", VA = "0x70E750")]
		public static ErrorCode RequestUserAccesscode(string clientId, string scope)
		{
			return default(ErrorCode);
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0x70E754", Offset = "0x70E754", VA = "0x70E754")]
		public static ErrorCode RequestCachedTicket()
		{
			return default(ErrorCode);
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0x70E758", Offset = "0x70E758", VA = "0x70E758")]
		public static Ticket GetTicket()
		{
			return default(Ticket);
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0x70E798", Offset = "0x70E798", VA = "0x70E798")]
		public static TicketInfo GetTicketInfo(Ticket ticket)
		{
			return default(TicketInfo);
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0x70E7E4", Offset = "0x70E7E4", VA = "0x70E7E4")]
		public static TicketEntitlement[] GetTicketEntitlements(Ticket ticket)
		{
			return null;
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0x70EF3C", Offset = "0x70EF3C", VA = "0x70EF3C")]
		public static bool ProcessMessage(Messages.PluginMessage msg)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0x70F024", Offset = "0x70F024", VA = "0x70F024")]
		public Ticketing()
		{
		}
	}
	[Token(Token = "0x2000399")]
	public class User
	{
		[Token(Token = "0x200089C")]
		public struct UserProfile
		{
			[Token(Token = "0x4002961")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int language;

			[Token(Token = "0x4002962")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int age;

			[Token(Token = "0x4002963")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int chatRestricted;

			[Token(Token = "0x4002964")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int contentRestricted;

			[Token(Token = "0x4002965")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private IntPtr _onlineID;

			[Token(Token = "0x4002966")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private IntPtr _npID;

			[Token(Token = "0x4002967")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int npIDSize;

			[Token(Token = "0x4002968")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private IntPtr _avatarURL;

			[Token(Token = "0x4002969")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private IntPtr _countryCode;

			[Token(Token = "0x400296A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private IntPtr _firstName;

			[Token(Token = "0x400296B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private IntPtr _middleName;

			[Token(Token = "0x400296C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private IntPtr _lastName;

			[Token(Token = "0x400296D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IntPtr _profilePictureUrl;

			[Token(Token = "0x400296E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ulong npAccountId;

			[Token(Token = "0x170005CF")]
			public string firstName
			{
				[Token(Token = "0x6003713")]
				[Address(RVA = "0x45755C", Offset = "0x45755C", VA = "0x45755C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005D0")]
			public string middleName
			{
				[Token(Token = "0x6003714")]
				[Address(RVA = "0x457564", Offset = "0x457564", VA = "0x457564")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005D1")]
			public string lastName
			{
				[Token(Token = "0x6003715")]
				[Address(RVA = "0x45756C", Offset = "0x45756C", VA = "0x45756C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005D2")]
			public string profilePictureUrl
			{
				[Token(Token = "0x6003716")]
				[Address(RVA = "0x457574", Offset = "0x457574", VA = "0x457574")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005D3")]
			public string onlineID
			{
				[Token(Token = "0x6003717")]
				[Address(RVA = "0x45757C", Offset = "0x45757C", VA = "0x45757C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005D4")]
			public byte[] npID
			{
				[Token(Token = "0x6003718")]
				[Address(RVA = "0x457584", Offset = "0x457584", VA = "0x457584")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005D5")]
			public string avatarURL
			{
				[Token(Token = "0x6003719")]
				[Address(RVA = "0x45758C", Offset = "0x45758C", VA = "0x45758C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005D6")]
			public string countryCode
			{
				[Token(Token = "0x600371A")]
				[Address(RVA = "0x457594", Offset = "0x457594", VA = "0x457594")]
				get
				{
					return null;
				}
			}
		}

		[Token(Token = "0x200089D")]
		public struct NpID
		{
			[Token(Token = "0x400296F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IntPtr _npID;

			[Token(Token = "0x4002970")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			private int npIDSize;

			[Token(Token = "0x170005D7")]
			public byte[] npID
			{
				[Token(Token = "0x600371B")]
				[Address(RVA = "0x457514", Offset = "0x457514", VA = "0x457514")]
				get
				{
					return null;
				}
			}
		}

		[Token(Token = "0x200089E")]
		public struct RemoteUserProfile
		{
			[Token(Token = "0x4002971")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int language;

			[Token(Token = "0x4002972")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			private IntPtr _onlineID;

			[Token(Token = "0x4002973")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private IntPtr _npID;

			[Token(Token = "0x4002974")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private int npIDSize;

			[Token(Token = "0x4002975")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private IntPtr _avatarURL;

			[Token(Token = "0x4002976")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private IntPtr _countryCode;

			[Token(Token = "0x4002977")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private IntPtr _firstName;

			[Token(Token = "0x4002978")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private IntPtr _middleName;

			[Token(Token = "0x4002979")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private IntPtr _lastName;

			[Token(Token = "0x400297A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private IntPtr _profilePictureUrl;

			[Token(Token = "0x170005D8")]
			public string onlineID
			{
				[Token(Token = "0x600371C")]
				[Address(RVA = "0x45751C", Offset = "0x45751C", VA = "0x45751C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005D9")]
			public string firstName
			{
				[Token(Token = "0x600371D")]
				[Address(RVA = "0x457524", Offset = "0x457524", VA = "0x457524")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005DA")]
			public string middleName
			{
				[Token(Token = "0x600371E")]
				[Address(RVA = "0x45752C", Offset = "0x45752C", VA = "0x45752C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005DB")]
			public string lastName
			{
				[Token(Token = "0x600371F")]
				[Address(RVA = "0x457534", Offset = "0x457534", VA = "0x457534")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005DC")]
			public string profilePictureUrl
			{
				[Token(Token = "0x6003720")]
				[Address(RVA = "0x45753C", Offset = "0x45753C", VA = "0x45753C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005DD")]
			public byte[] npID
			{
				[Token(Token = "0x6003721")]
				[Address(RVA = "0x457544", Offset = "0x457544", VA = "0x457544")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005DE")]
			public string avatarURL
			{
				[Token(Token = "0x6003722")]
				[Address(RVA = "0x45754C", Offset = "0x45754C", VA = "0x45754C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005DF")]
			public string countryCode
			{
				[Token(Token = "0x6003723")]
				[Address(RVA = "0x457554", Offset = "0x457554", VA = "0x457554")]
				get
				{
					return null;
				}
			}
		}

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static bool signedIn;

		[Token(Token = "0x17000339")]
		public static bool IsSignedInPSN
		{
			[Token(Token = "0x6001BF0")]
			[Address(RVA = "0x711DEC", Offset = "0x711DEC", VA = "0x711DEC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700033A")]
		public static bool IsSignedIn
		{
			[Token(Token = "0x6001BF1")]
			[Address(RVA = "0x712018", Offset = "0x712018", VA = "0x712018")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700033B")]
		public static bool IsSigninBusy
		{
			[Token(Token = "0x6001BF2")]
			[Address(RVA = "0x712090", Offset = "0x712090", VA = "0x712090")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700033C")]
		public static bool IsUserProfileBusy
		{
			[Token(Token = "0x6001BF3")]
			[Address(RVA = "0x712100", Offset = "0x712100", VA = "0x712100")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000036")]
		public static event Messages.EventHandler OnSignedIn
		{
			[Token(Token = "0x6001BDD")]
			[Address(RVA = "0x710568", Offset = "0x710568", VA = "0x710568")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC83C", Offset = "0x3AC83C")]
			add
			{
			}
			[Token(Token = "0x6001BDE")]
			[Address(RVA = "0x71066C", Offset = "0x71066C", VA = "0x71066C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC84C", Offset = "0x3AC84C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000037")]
		public static event Messages.EventHandler OnSignedOut
		{
			[Token(Token = "0x6001BDF")]
			[Address(RVA = "0x710770", Offset = "0x710770", VA = "0x710770")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC85C", Offset = "0x3AC85C")]
			add
			{
			}
			[Token(Token = "0x6001BE0")]
			[Address(RVA = "0x710878", Offset = "0x710878", VA = "0x710878")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC86C", Offset = "0x3AC86C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000038")]
		public static event Messages.EventHandler OnPresenceSet
		{
			[Token(Token = "0x6001BE1")]
			[Address(RVA = "0x710980", Offset = "0x710980", VA = "0x710980")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC87C", Offset = "0x3AC87C")]
			add
			{
			}
			[Token(Token = "0x6001BE2")]
			[Address(RVA = "0x710A88", Offset = "0x710A88", VA = "0x710A88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC88C", Offset = "0x3AC88C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000039")]
		public static event Messages.EventHandler OnGotUserProfile
		{
			[Token(Token = "0x6001BE3")]
			[Address(RVA = "0x710B90", Offset = "0x710B90", VA = "0x710B90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC89C", Offset = "0x3AC89C")]
			add
			{
			}
			[Token(Token = "0x6001BE4")]
			[Address(RVA = "0x710C98", Offset = "0x710C98", VA = "0x710C98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC8AC", Offset = "0x3AC8AC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003A")]
		public static event Messages.EventHandler OnGotRemoteUserNpID
		{
			[Token(Token = "0x6001BE5")]
			[Address(RVA = "0x710DA0", Offset = "0x710DA0", VA = "0x710DA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC8BC", Offset = "0x3AC8BC")]
			add
			{
			}
			[Token(Token = "0x6001BE6")]
			[Address(RVA = "0x710EA8", Offset = "0x710EA8", VA = "0x710EA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC8CC", Offset = "0x3AC8CC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003B")]
		public static event Messages.EventHandler OnGotRemoteUserProfile
		{
			[Token(Token = "0x6001BE7")]
			[Address(RVA = "0x710FB0", Offset = "0x710FB0", VA = "0x710FB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC8DC", Offset = "0x3AC8DC")]
			add
			{
			}
			[Token(Token = "0x6001BE8")]
			[Address(RVA = "0x7110B8", Offset = "0x7110B8", VA = "0x7110B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC8EC", Offset = "0x3AC8EC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003C")]
		public static event Messages.EventHandler OnUserProfileError
		{
			[Token(Token = "0x6001BE9")]
			[Address(RVA = "0x7111C0", Offset = "0x7111C0", VA = "0x7111C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC8FC", Offset = "0x3AC8FC")]
			add
			{
			}
			[Token(Token = "0x6001BEA")]
			[Address(RVA = "0x7112C8", Offset = "0x7112C8", VA = "0x7112C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC90C", Offset = "0x3AC90C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003D")]
		public static event Messages.EventHandler OnPresenceError
		{
			[Token(Token = "0x6001BEB")]
			[Address(RVA = "0x7113D0", Offset = "0x7113D0", VA = "0x7113D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC91C", Offset = "0x3AC91C")]
			add
			{
			}
			[Token(Token = "0x6001BEC")]
			[Address(RVA = "0x7114D8", Offset = "0x7114D8", VA = "0x7114D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC92C", Offset = "0x3AC92C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003E")]
		public static event Messages.EventHandler OnSignInError
		{
			[Token(Token = "0x6001BED")]
			[Address(RVA = "0x7115E0", Offset = "0x7115E0", VA = "0x7115E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC93C", Offset = "0x3AC93C")]
			add
			{
			}
			[Token(Token = "0x6001BEE")]
			[Address(RVA = "0x7116E8", Offset = "0x7116E8", VA = "0x7116E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AC94C", Offset = "0x3AC94C")]
			remove
			{
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0x70F420", Offset = "0x70F420", VA = "0x70F420")]
		private static extern ErrorCode PrxSignin();

		[PreserveSig]
		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0x70F4B8", Offset = "0x70F4B8", VA = "0x70F4B8")]
		private static extern bool PrxSigninIsBusy();

		[PreserveSig]
		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0x70F558", Offset = "0x70F558", VA = "0x70F558")]
		private static extern bool PrxIsSignedIn();

		[PreserveSig]
		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0x70F5F8", Offset = "0x70F5F8", VA = "0x70F5F8")]
		private static extern bool PrxSigninGetLastError(out ResultCode result);

		[PreserveSig]
		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0x70F6A0", Offset = "0x70F6A0", VA = "0x70F6A0")]
		private static extern int PrxSetCurrentUserId(int UserId);

		[PreserveSig]
		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0x70F740", Offset = "0x70F740", VA = "0x70F740")]
		private static extern int PrxGetCurrentUserId();

		[PreserveSig]
		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0x70F7D8", Offset = "0x70F7D8", VA = "0x70F7D8")]
		private static extern int PrxLogOutUser(int UserId);

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0x70F878", Offset = "0x70F878", VA = "0x70F878")]
		public static int SetCurrentUserId(int UserId)
		{
			return default(int);
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0x70F8F0", Offset = "0x70F8F0", VA = "0x70F8F0")]
		public static int GetCurrentUserId()
		{
			return default(int);
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0x70F960", Offset = "0x70F960", VA = "0x70F960")]
		public static int LogOutUser(int UserId)
		{
			return default(int);
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0x70F9D8", Offset = "0x70F9D8", VA = "0x70F9D8")]
		public static bool GetLastSignInError(out ResultCode result)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0x70FA60", Offset = "0x70FA60", VA = "0x70FA60")]
		private static extern bool PrxUserProfileGetLastError(out ResultCode result);

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0x70FB08", Offset = "0x70FB08", VA = "0x70FB08")]
		public static bool GetLastUserProfileError(out ResultCode result)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0x70FB90", Offset = "0x70FB90", VA = "0x70FB90")]
		private static extern bool PrxPresenceGetLastError(out ResultCode result);

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0x70FC38", Offset = "0x70FC38", VA = "0x70FC38")]
		public static bool GetLastPresenceError(out ResultCode result)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0x70FCC0", Offset = "0x70FCC0", VA = "0x70FCC0")]
		private static extern ErrorCode PrxSetPresence(string text);

		[PreserveSig]
		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0x70FD88", Offset = "0x70FD88", VA = "0x70FD88")]
		private static extern bool PrxSetPresenceIsBusy();

		[PreserveSig]
		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0x70FE28", Offset = "0x70FE28", VA = "0x70FE28")]
		private static extern ErrorCode PrxRequestUserProfile();

		[PreserveSig]
		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0x70FEC0", Offset = "0x70FEC0", VA = "0x70FEC0")]
		private static extern bool PrxUserProfileIsBusy();

		[PreserveSig]
		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0x70FF60", Offset = "0x70FF60", VA = "0x70FF60")]
		private static extern bool PrxGetUserProfile(out UserProfile profile);

		[PreserveSig]
		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0x710008", Offset = "0x710008", VA = "0x710008")]
		private static extern int PrxGetUserSigninStatus(int userID, ref byte[] npID);

		[PreserveSig]
		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0x7101E0", Offset = "0x7101E0", VA = "0x7101E0")]
		private static extern ErrorCode PrxRequestRemoteUserNpID(string onlineID);

		[PreserveSig]
		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0x7102A8", Offset = "0x7102A8", VA = "0x7102A8")]
		private static extern bool PrxGetRemoteUserNpID(out NpID npID);

		[PreserveSig]
		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0x710350", Offset = "0x710350", VA = "0x710350")]
		private static extern ErrorCode PrxRequestRemoteUserProfileForOnlineID(string onlineID);

		[PreserveSig]
		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0x710418", Offset = "0x710418", VA = "0x710418")]
		private static extern ErrorCode PrxRequestRemoteUserProfileForNpID(byte[] npID);

		[PreserveSig]
		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0x7104C0", Offset = "0x7104C0", VA = "0x7104C0")]
		private static extern bool PrxGetRemoteUserProfile(out RemoteUserProfile profile);

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0x7117F0", Offset = "0x7117F0", VA = "0x7117F0")]
		public static bool ProcessMessage(Messages.PluginMessage msg)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0x712170", Offset = "0x712170", VA = "0x712170")]
		public static ErrorCode SignIn()
		{
			return default(ErrorCode);
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0x7121E0", Offset = "0x7121E0", VA = "0x7121E0")]
		public static ErrorCode SetOnlinePresence(string text)
		{
			return default(ErrorCode);
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0x712258", Offset = "0x712258", VA = "0x712258")]
		public static bool OnlinePresenceIsBusy()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0x7122C8", Offset = "0x7122C8", VA = "0x7122C8")]
		public static ErrorCode RequestUserProfile()
		{
			return default(ErrorCode);
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0x712338", Offset = "0x712338", VA = "0x712338")]
		public static UserProfile GetCachedUserProfile()
		{
			return default(UserProfile);
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0x7123F8", Offset = "0x7123F8", VA = "0x7123F8")]
		public static ErrorCode RequestRemoteUserNpID(string onlineID)
		{
			return default(ErrorCode);
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0x711F1C", Offset = "0x711F1C", VA = "0x711F1C")]
		public static int GetUserSigninStatus(int userID, out byte[] npID)
		{
			return default(int);
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0x712470", Offset = "0x712470", VA = "0x712470")]
		public static byte[] GetCachedRemoteUserNpID()
		{
			return null;
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0x7125C0", Offset = "0x7125C0", VA = "0x7125C0")]
		public static ErrorCode RequestRemoteUserProfileForOnlineID(string onlineID)
		{
			return default(ErrorCode);
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0x712638", Offset = "0x712638", VA = "0x712638")]
		public static ErrorCode RequestRemoteUserProfileForNpID(byte[] npID)
		{
			return default(ErrorCode);
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0x7126B0", Offset = "0x7126B0", VA = "0x7126B0")]
		public static RemoteUserProfile GetCachedRemoteUserProfile()
		{
			return default(RemoteUserProfile);
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0x712768", Offset = "0x712768", VA = "0x712768")]
		public static bool UserProfileIsBusy()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0x7127D8", Offset = "0x7127D8", VA = "0x7127D8")]
		public User()
		{
		}
	}
}
namespace BoundarySystem_Ext
{
	[Token(Token = "0x200039A")]
	internal static class Pvr_BoundaryAPI
	{
		[Token(Token = "0x4001B36")]
		private const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x6001C02")]
		[Address(RVA = "0x67FA20", Offset = "0x67FA20", VA = "0x67FA20")]
		public static extern void Pvr_StartSDKBoundary();

		[PreserveSig]
		[Token(Token = "0x6001C03")]
		[Address(RVA = "0x67FAB8", Offset = "0x67FAB8", VA = "0x67FAB8")]
		public static extern void Pvr_ShutdownSDKBoundary();

		[PreserveSig]
		[Token(Token = "0x6001C04")]
		[Address(RVA = "0x67FB50", Offset = "0x67FB50", VA = "0x67FB50")]
		private static extern int Pvr_GetMainSensorStateExt(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber);

		[PreserveSig]
		[Token(Token = "0x6001C05")]
		[Address(RVA = "0x67FC50", Offset = "0x67FC50", VA = "0x67FC50")]
		private static extern IntPtr Pvr_GetCameraData_Ext();

		[PreserveSig]
		[Token(Token = "0x6001C06")]
		[Address(RVA = "0x67FCE8", Offset = "0x67FCE8", VA = "0x67FCE8")]
		public static extern void Pvr_ResetVrModebyForce();

		[PreserveSig]
		[Token(Token = "0x6001C07")]
		[Address(RVA = "0x67FD80", Offset = "0x67FD80", VA = "0x67FD80")]
		private static extern bool Pvr_ResumeBoundaryForSTS();

		[PreserveSig]
		[Token(Token = "0x6001C08")]
		[Address(RVA = "0x67FE20", Offset = "0x67FE20", VA = "0x67FE20")]
		private static extern void Pvr_PauseBoundaryForSTS();

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0x67FEB8", Offset = "0x67FEB8", VA = "0x67FEB8")]
		public static int UPvr_GetMainSensorStateExt(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber)
		{
			return default(int);
		}

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0x67FEFC", Offset = "0x67FEFC", VA = "0x67FEFC")]
		public static IntPtr UPvr_GetCameraData_Ext()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0x67FF40", Offset = "0x67FF40", VA = "0x67FF40")]
		public static bool UPvr_ResumeBoundaryForSTS()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0x67FF44", Offset = "0x67FF44", VA = "0x67FF44")]
		public static void UPvr_PauseBoundaryForSTS()
		{
		}

		[Token(Token = "0x6001C0D")]
		public static IntPtr StructToIntPtr<T>(T info)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001C0E")]
		public static T IntPtrToStruct<T>(IntPtr info)
		{
			return (T)null;
		}
	}
	[Token(Token = "0x200039B")]
	internal static class Pvr_SafeAreaAlgoAPI
	{
		[Token(Token = "0x200089F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D7FC", Offset = "0x39D7FC")]
		public delegate void SafeAreaCallback(IntPtr lineCollectionPtr, IntPtr safeAreaRectPtr);

		[Token(Token = "0x20008A0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D810", Offset = "0x39D810")]
		public delegate void SafeAreaCallbackShrink(IntPtr lineCollectionPtr, IntPtr safeAreaDetailRectPtr);

		[Token(Token = "0x20008A1")]
		public struct GSAPoint3i
		{
			[Token(Token = "0x400297B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int x;

			[Token(Token = "0x400297C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int y;

			[Token(Token = "0x400297D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int z;
		}

		[Token(Token = "0x20008A2")]
		public struct GSALine
		{
			[Token(Token = "0x400297E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr pointArray;

			[Token(Token = "0x400297F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int pointCount;
		}

		[Token(Token = "0x20008A3")]
		public struct GSALineCollection
		{
			[Token(Token = "0x4002980")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr lineArray;

			[Token(Token = "0x4002981")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int lineCount;
		}

		[Token(Token = "0x20008A4")]
		public struct GSALegalData
		{
			[Token(Token = "0x4002982")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int overMaxRange;

			[Token(Token = "0x4002983")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int includeBigGrap;

			[Token(Token = "0x4002984")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int bigGapNum;

			[Token(Token = "0x4002985")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int centerOut;

			[Token(Token = "0x4002986")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int removeNarrow;

			[Token(Token = "0x4002987")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int overMaxRange_more;

			[Token(Token = "0x4002988")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int validShrinkArea;
		}

		[Token(Token = "0x20008A5")]
		public struct GSARect
		{
			[Token(Token = "0x4002989")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GSAPoint3i leftup;

			[Token(Token = "0x400298A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public GSAPoint3i leftdown;

			[Token(Token = "0x400298B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GSAPoint3i rightup;

			[Token(Token = "0x400298C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public GSAPoint3i rightdown;

			[Token(Token = "0x400298D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GSAPoint3i center;

			[Token(Token = "0x400298E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public uint width;

			[Token(Token = "0x400298F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public uint height;

			[Token(Token = "0x4002990")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int isLegal;

			[Token(Token = "0x4002991")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public GSALegalData legalData;
		}

		[Token(Token = "0x4001B37")]
		private const string LibFileName = "SafetyArea";

		[PreserveSig]
		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0x6802E0", Offset = "0x6802E0", VA = "0x6802E0")]
		private static extern int GSAInit(int width, int height);

		[PreserveSig]
		[Token(Token = "0x6001C10")]
		[Address(RVA = "0x680388", Offset = "0x680388", VA = "0x680388")]
		private static extern int GSAShutDown();

		[PreserveSig]
		[Token(Token = "0x6001C11")]
		[Address(RVA = "0x680420", Offset = "0x680420", VA = "0x680420")]
		private static extern int GSASetCallback(SafeAreaCallback cb);

		[PreserveSig]
		[Token(Token = "0x6001C12")]
		[Address(RVA = "0x6804D0", Offset = "0x6804D0", VA = "0x6804D0")]
		private static extern int GSASetCallbackShrink(SafeAreaCallbackShrink cb);

		[PreserveSig]
		[Token(Token = "0x6001C13")]
		[Address(RVA = "0x680580", Offset = "0x680580", VA = "0x680580")]
		private static extern int GSAUpDateData(IntPtr lineCollectionPtr);

		[PreserveSig]
		[Token(Token = "0x6001C14")]
		[Address(RVA = "0x680620", Offset = "0x680620", VA = "0x680620")]
		private static extern int GSASetConfigFilePath(IntPtr configPath);

		[PreserveSig]
		[Token(Token = "0x6001C15")]
		[Address(RVA = "0x6806C0", Offset = "0x6806C0", VA = "0x6806C0")]
		private static extern bool GSAGetClosedAreaUpdateFlag();

		[PreserveSig]
		[Token(Token = "0x6001C16")]
		[Address(RVA = "0x680760", Offset = "0x680760", VA = "0x680760")]
		private static extern int GSALoadSafetyArea(IntPtr lineCollectionPtr);

		[PreserveSig]
		[Token(Token = "0x6001C17")]
		[Address(RVA = "0x680800", Offset = "0x680800", VA = "0x680800")]
		private static extern double GSABoundaryDetector(ref GSAPoint3i pointPtr);

		[PreserveSig]
		[Token(Token = "0x6001C18")]
		[Address(RVA = "0x6808A0", Offset = "0x6808A0", VA = "0x6808A0")]
		private static extern int GSALoadSafetyArea2(IntPtr lineCollectionPtr, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x6001C19")]
		[Address(RVA = "0x680948", Offset = "0x680948", VA = "0x680948")]
		private static extern double GSABoundaryDetector2(ref GSAPoint3i point, bool isPlayArea, ref GSAPoint3i closestPoint, ref GSAPoint3i normalDir);

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0x680A00", Offset = "0x680A00", VA = "0x680A00")]
		public static int Pvr_GSAInit(int width, int height)
		{
			return default(int);
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0x680A04", Offset = "0x680A04", VA = "0x680A04")]
		public static int Pvr_GSASetCallback(SafeAreaCallback cb)
		{
			return default(int);
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0x680A08", Offset = "0x680A08", VA = "0x680A08")]
		public static int Pvr_GSASetCallbackShrink(SafeAreaCallbackShrink cb)
		{
			return default(int);
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0x680A0C", Offset = "0x680A0C", VA = "0x680A0C")]
		public static int Pvr_GSAUpDateData(IntPtr lineCollectionPtr)
		{
			return default(int);
		}

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0x680A10", Offset = "0x680A10", VA = "0x680A10")]
		public static bool Pvr_GSAGetClosedAreaUpdateFlag()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0x680A14", Offset = "0x680A14", VA = "0x680A14")]
		public static int Pvr_GSASetConfigFilePath(string configPath)
		{
			return default(int);
		}

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0x680AAC", Offset = "0x680AAC", VA = "0x680AAC")]
		public static int Pvr_GSALoadSafetyArea(IntPtr lineCollectionPtr)
		{
			return default(int);
		}

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0x680AB0", Offset = "0x680AB0", VA = "0x680AB0")]
		public static double Pvr_GSABoundaryDetector(ref GSAPoint3i point)
		{
			return default(double);
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0x680AB4", Offset = "0x680AB4", VA = "0x680AB4")]
		public static int Pvr_GSAShutDown()
		{
			return default(int);
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0x680AB8", Offset = "0x680AB8", VA = "0x680AB8")]
		public static int Pvr_GSALoadSafetyArea2(IntPtr lineCollectionPtr, bool isPlayArea)
		{
			return default(int);
		}

		[Token(Token = "0x6001C24")]
		[Address(RVA = "0x680ABC", Offset = "0x680ABC", VA = "0x680ABC")]
		public static double Pvr_GSABoundaryDetector2(ref GSAPoint3i point, bool isPlayArea, ref GSAPoint3i closestPoint, ref GSAPoint3i normalDir)
		{
			return default(double);
		}
	}
	[Token(Token = "0x200039C")]
	public class Pvr_BoundarySystem
	{
		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pvr_BoundarySystem instance;

		[Token(Token = "0x4001B39")]
		public const int CameraImageWidth = 1280;

		[Token(Token = "0x4001B3A")]
		public const int CameraImageHeight = 400;

		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr CameraFramePtr;

		[Token(Token = "0x1700033D")]
		public static Pvr_BoundarySystem Instance
		{
			[Token(Token = "0x6001C25")]
			[Address(RVA = "0x67FF48", Offset = "0x67FF48", VA = "0x67FF48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0x680028", Offset = "0x680028", VA = "0x680028")]
		public void OpenBoundary()
		{
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0x68002C", Offset = "0x68002C", VA = "0x68002C")]
		public void CloseBoundary()
		{
		}

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0x680030", Offset = "0x680030", VA = "0x680030")]
		public void Reset6Dof()
		{
		}

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0x680034", Offset = "0x680034", VA = "0x680034")]
		public float[] GetControllerFixedPoseData(int hand)
		{
			return null;
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0x67FFD0", Offset = "0x67FFD0", VA = "0x67FFD0")]
		public Pvr_BoundarySystem()
		{
		}
	}
	[Token(Token = "0x200039D")]
	public class Pvr_SafeAreaAlgoModule
	{
		[Token(Token = "0x20008A6")]
		public struct ExtraInfo
		{
			[Token(Token = "0x4002992")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool overMaxRange;

			[Token(Token = "0x4002993")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool includeBigGap;

			[Token(Token = "0x4002994")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int bigGapNum;

			[Token(Token = "0x4002995")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool centerOut;

			[Token(Token = "0x4002996")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
			public bool removeNarrow;

			[Token(Token = "0x4002997")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
			public bool overMaxRange_more;

			[Token(Token = "0x4002998")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int validShrinkArea;
		}

		[Token(Token = "0x20008A7")]
		public struct BoundaryPlayerArea
		{
			[Token(Token = "0x4002999")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 lowerleft;

			[Token(Token = "0x400299A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 upperleft;

			[Token(Token = "0x400299B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 upperRight;

			[Token(Token = "0x400299C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 lowerRight;

			[Token(Token = "0x400299D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 center;

			[Token(Token = "0x400299E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public uint width;

			[Token(Token = "0x400299F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public uint height;

			[Token(Token = "0x40029A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public bool isLegal;

			[Token(Token = "0x40029A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public ExtraInfo extraInfo;
		}

		[Token(Token = "0x20008A8")]
		public delegate void BoundarySystemCallback(BoundaryPlayerArea playAreaInfo, List<Vector3> boundaryPoints, List<List<Vector3>> unusedLines);

		[Token(Token = "0x20008A9")]
		public delegate void BoundarySystemCallbackShrink(List<Vector3> rectPoints, List<Vector3> boundaryPoints, List<List<Vector3>> unusedLines);

		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pvr_SafeAreaAlgoModule instance;

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private BoundarySystemCallback boundarySystemCallback;

		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private BoundarySystemCallbackShrink boundarySystemCallbackShrink;

		[Token(Token = "0x1700033E")]
		public static Pvr_SafeAreaAlgoModule Instance
		{
			[Token(Token = "0x6001C2B")]
			[Address(RVA = "0x6823B4", Offset = "0x6823B4", VA = "0x6823B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0x682448", Offset = "0x682448", VA = "0x682448")]
		public void RegisterCallBack(BoundarySystemCallback callback)
		{
		}

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0x682450", Offset = "0x682450", VA = "0x682450")]
		public void RegisterCallBackShrink(BoundarySystemCallbackShrink callback)
		{
		}

		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0x682458", Offset = "0x682458", VA = "0x682458")]
		public bool Start()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0x6825BC", Offset = "0x6825BC", VA = "0x6825BC")]
		public bool CommitNewLineData(bool isFistLine, Vector3[] points)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C30")]
		[Address(RVA = "0x6829F0", Offset = "0x6829F0", VA = "0x6829F0")]
		public bool Shutdown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0x682A90", Offset = "0x682A90", VA = "0x682A90")]
		public double QueryDistanceOfPoint(Vector3 point)
		{
			return default(double);
		}

		[Token(Token = "0x6001C32")]
		[Address(RVA = "0x682B00", Offset = "0x682B00", VA = "0x682B00")]
		public double QueryDistanceOfPoint(Vector3 point, bool isPlayArea, ref Vector3 closestPoint, ref Vector3 normalDir)
		{
			return default(double);
		}

		[Token(Token = "0x6001C33")]
		[Address(RVA = "0x681204", Offset = "0x681204", VA = "0x681204")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x3AC95C", Offset = "0x3AC95C")]
		private static void _SafeAreaCallback(IntPtr lineCollectionPtr, IntPtr safeAreaRectPtr)
		{
		}

		[Token(Token = "0x6001C34")]
		[Address(RVA = "0x681AA0", Offset = "0x681AA0", VA = "0x681AA0")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x3AC9CC", Offset = "0x3AC9CC")]
		private static void _SafeAreaCallbackShrink(IntPtr lineCollectionPtr, IntPtr safeAreaDetailRectPtr)
		{
		}

		[Token(Token = "0x6001C35")]
		[Address(RVA = "0x682440", Offset = "0x682440", VA = "0x682440")]
		public Pvr_SafeAreaAlgoModule()
		{
		}
	}
}
namespace Pvr_UnitySDKAPI
{
	[Token(Token = "0x200039E")]
	public class PvrControllerKey
	{
		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool State;

		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public bool PressedDown;

		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		public bool PressedUp;

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
		public bool LongPressed;

		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool Click;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		public bool Touch;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		public bool TouchDown;

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
		public bool TouchUp;

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0x14E1C80", Offset = "0x14E1C80", VA = "0x14E1C80")]
		public PvrControllerKey()
		{
		}
	}
	[Token(Token = "0x200039F")]
	public class ControllerHand
	{
		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public PvrControllerKey App;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public PvrControllerKey Touch;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PvrControllerKey Home;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public PvrControllerKey VolumeDown;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PvrControllerKey VolumeUp;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public PvrControllerKey Trigger;

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PvrControllerKey X;

		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public PvrControllerKey Y;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PvrControllerKey A;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PvrControllerKey B;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PvrControllerKey Left;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public PvrControllerKey Right;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PvrControllerKey Thumbrest;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector2 TouchPadPosition;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int TriggerNum;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int GripValue;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Quaternion Rotation;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 Position;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int Battery;

		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public ControllerState ConnectState;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SwipeDirection SwipeDirection;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public TouchPadClick TouchPadClick;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool isShowBoundary;

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0x14E1A50", Offset = "0x14E1A50", VA = "0x14E1A50")]
		public ControllerHand()
		{
		}
	}
	[Token(Token = "0x20003A0")]
	public enum ControllerState
	{
		[Token(Token = "0x4001B5F")]
		Error = -1,
		[Token(Token = "0x4001B60")]
		DisConnected,
		[Token(Token = "0x4001B61")]
		Connected
	}
	[Token(Token = "0x20003A1")]
	public enum Pvr_KeyCode
	{
		[Token(Token = "0x4001B63")]
		APP = 1,
		[Token(Token = "0x4001B64")]
		TOUCHPAD,
		[Token(Token = "0x4001B65")]
		HOME,
		[Token(Token = "0x4001B66")]
		VOLUMEUP,
		[Token(Token = "0x4001B67")]
		VOLUMEDOWN,
		[Token(Token = "0x4001B68")]
		TRIGGER,
		[Token(Token = "0x4001B69")]
		A,
		[Token(Token = "0x4001B6A")]
		B,
		[Token(Token = "0x4001B6B")]
		X,
		[Token(Token = "0x4001B6C")]
		Y,
		[Token(Token = "0x4001B6D")]
		Left,
		[Token(Token = "0x4001B6E")]
		Right,
		[Token(Token = "0x4001B6F")]
		Thumbrest
	}
	[Token(Token = "0x20003A2")]
	public enum SwipeDirection
	{
		[Token(Token = "0x4001B71")]
		No,
		[Token(Token = "0x4001B72")]
		SwipeUp,
		[Token(Token = "0x4001B73")]
		SwipeDown,
		[Token(Token = "0x4001B74")]
		SwipeLeft,
		[Token(Token = "0x4001B75")]
		SwipeRight
	}
	[Token(Token = "0x20003A3")]
	public enum TouchPadClick
	{
		[Token(Token = "0x4001B77")]
		No,
		[Token(Token = "0x4001B78")]
		ClickUp,
		[Token(Token = "0x4001B79")]
		ClickDown,
		[Token(Token = "0x4001B7A")]
		ClickLeft,
		[Token(Token = "0x4001B7B")]
		ClickRight
	}
	[Token(Token = "0x20003A4")]
	public struct Controller
	{
		[Token(Token = "0x4001B7C")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0x14DBD68", Offset = "0x14DBD68", VA = "0x14DBD68")]
		public static Vector2 UPvr_GetTouchPadPosition(int hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0x14DBE94", Offset = "0x14DBE94", VA = "0x14DBE94")]
		public static float UPvr_GetAxis1D(int hand, Pvr_KeyCode key)
		{
			return default(float);
		}

		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0x14DC074", Offset = "0x14DC074", VA = "0x14DC074")]
		public static Vector2 UPvr_GetAxis2D(int hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0x14DC3AC", Offset = "0x14DC3AC", VA = "0x14DC3AC")]
		public static ControllerState UPvr_GetControllerState(int hand)
		{
			return default(ControllerState);
		}

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0x14DC4E4", Offset = "0x14DC4E4", VA = "0x14DC4E4")]
		public static Quaternion UPvr_GetControllerQUA(int hand)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0x14DC624", Offset = "0x14DC624", VA = "0x14DC624")]
		public static Vector3 UPvr_GetControllerPOS(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0x14DC764", Offset = "0x14DC764", VA = "0x14DC764")]
		public static int UPvr_GetControllerTriggerValue(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0x14DC860", Offset = "0x14DC860", VA = "0x14DC860")]
		public static int UPvr_GetControllerPower(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0x14DC95C", Offset = "0x14DC95C", VA = "0x14DC95C")]
		public static SwipeDirection UPvr_GetSwipeDirection(int hand)
		{
			return default(SwipeDirection);
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0x14DCA58", Offset = "0x14DCA58", VA = "0x14DCA58")]
		public static TouchPadClick UPvr_GetTouchPadClick(int hand)
		{
			return default(TouchPadClick);
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0x14DCB54", Offset = "0x14DCB54", VA = "0x14DCB54")]
		public static bool UPvr_GetKey(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0x14DD268", Offset = "0x14DD268", VA = "0x14DD268")]
		public static bool UPvr_GetKeyDown(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0x14DD97C", Offset = "0x14DD97C", VA = "0x14DD97C")]
		public static bool UPvr_GetKeyUp(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0x14DE090", Offset = "0x14DE090", VA = "0x14DE090")]
		public static bool UPvr_GetTouch(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0x14DE4F8", Offset = "0x14DE4F8", VA = "0x14DE4F8")]
		public static bool UPvr_GetTouchDown(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0x14DE960", Offset = "0x14DE960", VA = "0x14DE960")]
		public static bool UPvr_GetTouchUp(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0x14DEDC8", Offset = "0x14DEDC8", VA = "0x14DEDC8")]
		public static bool UPvr_GetKeyClick(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0x14DF4DC", Offset = "0x14DF4DC", VA = "0x14DF4DC")]
		public static bool UPvr_GetKeyLongPressed(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0x14DFBF0", Offset = "0x14DFBF0", VA = "0x14DFBF0")]
		public static bool UPvr_IsTouching(int hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0x14DFE48", Offset = "0x14DFE48", VA = "0x14DFE48")]
		public static void UPvr_SetHandNess(Pvr_Controller.UserHandNess hand)
		{
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0x14DFF30", Offset = "0x14DFF30", VA = "0x14DFF30")]
		public static Pvr_Controller.UserHandNess UPvr_GetHandNess()
		{
			return default(Pvr_Controller.UserHandNess);
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0x14DFFB8", Offset = "0x14DFFB8", VA = "0x14DFFB8")]
		public static int UPvr_GetPreferenceDevice()
		{
			return default(int);
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0x14E00A8", Offset = "0x14E00A8", VA = "0x14E00A8")]
		public static bool UPvr_IsEnbleTrigger()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0x14E0138", Offset = "0x14E0138", VA = "0x14E0138")]
		public static int UPvr_GetDeviceType()
		{
			return default(int);
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0x14E01C0", Offset = "0x14E01C0", VA = "0x14E01C0")]
		public static int UPvr_GetMainHandNess()
		{
			return default(int);
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0x14E0248", Offset = "0x14E0248", VA = "0x14E0248")]
		public static void UPvr_SetMainHandNess(int hand)
		{
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0x14E02E0", Offset = "0x14E02E0", VA = "0x14E02E0")]
		public static int UPvr_GetControllerAbility(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0x14E0378", Offset = "0x14E0378", VA = "0x14E0378")]
		public static void UPvr_VibrateNeo2Controller(float strength, int time, int hand)
		{
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0x14E042C", Offset = "0x14E042C", VA = "0x14E042C")]
		public static int UPvr_GetControllerBindingState(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0x14E04C4", Offset = "0x14E04C4", VA = "0x14E04C4")]
		public static Vector3 UPvr_GetVelocity(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0x14E0564", Offset = "0x14E0564", VA = "0x14E0564")]
		public static Vector3 UPvr_GetAngularVelocity(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0x14E0604", Offset = "0x14E0604", VA = "0x14E0604")]
		public static Vector3 UPvr_GetAcceleration(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0x14E06A4", Offset = "0x14E06A4", VA = "0x14E06A4")]
		public static void UPvr_ScanController()
		{
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0x14E0734", Offset = "0x14E0734", VA = "0x14E0734")]
		public static void UPvr_StopScanController()
		{
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0x14E07C4", Offset = "0x14E07C4", VA = "0x14E07C4")]
		public static void UPvr_ConnectController(string mac)
		{
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0x14E08C4", Offset = "0x14E08C4", VA = "0x14E08C4")]
		public static void UPvr_DisConnectController()
		{
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0x14E0954", Offset = "0x14E0954", VA = "0x14E0954")]
		public static void UPvr_ResetController(int hand)
		{
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0x14E09EC", Offset = "0x14E09EC", VA = "0x14E09EC")]
		public static string UPvr_GetControllerVersion()
		{
			return null;
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0x14E0A7C", Offset = "0x14E0A7C", VA = "0x14E0A7C")]
		public static void UPvr_GetDeviceVersion(int deviceType)
		{
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0x14E0B14", Offset = "0x14E0B14", VA = "0x14E0B14")]
		public static void UPvr_GetControllerSnCode(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0x14E0BAC", Offset = "0x14E0BAC", VA = "0x14E0BAC")]
		public static void UPvr_SetControllerUnbind(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0x14E0C44", Offset = "0x14E0C44", VA = "0x14E0C44")]
		public static void UPvr_SetStationRestart()
		{
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0x14E0CD4", Offset = "0x14E0CD4", VA = "0x14E0CD4")]
		public static void UPvr_StartStationOtaUpdate()
		{
		}

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0x14E0D64", Offset = "0x14E0D64", VA = "0x14E0D64")]
		public static void UPvr_StartControllerOtaUpdate(int mode, int controllerSerialNum)
		{
		}

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0x14E0E04", Offset = "0x14E0E04", VA = "0x14E0E04")]
		public static void UPvr_EnterPairMode(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0x14E0E9C", Offset = "0x14E0E9C", VA = "0x14E0E9C")]
		public static void UPvr_SetControllerShutdown(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0x14E0F34", Offset = "0x14E0F34", VA = "0x14E0F34")]
		public static int UPvr_GetStationPairState()
		{
			return default(int);
		}

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0x14E0FC4", Offset = "0x14E0FC4", VA = "0x14E0FC4")]
		public static int UPvr_GetStationOtaUpdateProgress()
		{
			return default(int);
		}

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0x14E1054", Offset = "0x14E1054", VA = "0x14E1054")]
		public static int UPvr_GetControllerOtaUpdateProgress()
		{
			return default(int);
		}

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0x14E10E4", Offset = "0x14E10E4", VA = "0x14E10E4")]
		public static void UPvr_GetControllerVersionAndSN(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0x14E117C", Offset = "0x14E117C", VA = "0x14E117C")]
		public static void UPvr_GetControllerUniqueID()
		{
		}

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0x47DF20", Offset = "0x47DF20", VA = "0x47DF20")]
		public void UPvr_InterruptStationPairMode()
		{
		}

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0x47DF24", Offset = "0x47DF24", VA = "0x47DF24")]
		public void UPvr_StartCV2PairingMode(int deviceType)
		{
		}

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0x47DF28", Offset = "0x47DF28", VA = "0x47DF28")]
		public void UPvr_StopCV2PairingMode(int deviceType)
		{
		}

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0x14E13CC", Offset = "0x14E13CC", VA = "0x14E13CC")]
		public static void UPvr_SetArmModelParameters(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle)
		{
		}

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0x14E14B8", Offset = "0x14E14B8", VA = "0x14E14B8")]
		public static void UPvr_CalcArmModelParameters(float[] headOrientation, float[] controllerOrientation, float[] controllerPrimary)
		{
		}

		[Token(Token = "0x6001C70")]
		[Address(RVA = "0x14E1588", Offset = "0x14E1588", VA = "0x14E1588")]
		public static void UPvr_GetPointerPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0x14E1648", Offset = "0x14E1648", VA = "0x14E1648")]
		public static void UPvr_GetElbowPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0x14E1708", Offset = "0x14E1708", VA = "0x14E1708")]
		public static void UPvr_GetWristPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0x14E17C8", Offset = "0x14E17C8", VA = "0x14E17C8")]
		public static void UPvr_GetShoulderPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0x14E1888", Offset = "0x14E1888", VA = "0x14E1888")]
		public static void UPvr_IsEnbleHomeKey(bool state)
		{
		}

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0x14E1920", Offset = "0x14E1920", VA = "0x14E1920")]
		public static void UPvr_SwitchHomeKey(bool state)
		{
		}

		[Token(Token = "0x6001C76")]
		[Address(RVA = "0x14E19B8", Offset = "0x14E19B8", VA = "0x14E19B8")]
		public static int UPvr_GetControllerSensorStatus(int id)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001C77")]
		[Address(RVA = "0x14E14C0", Offset = "0x14E14C0", VA = "0x14E14C0")]
		private static extern void Pvr_CalcArmModelParameters(float[] headOrientation, float[] controllerOrientation, float[] gyro);

		[PreserveSig]
		[Token(Token = "0x6001C78")]
		[Address(RVA = "0x14E1590", Offset = "0x14E1590", VA = "0x14E1590")]
		private static extern void Pvr_GetPointerPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6001C79")]
		[Address(RVA = "0x14E1650", Offset = "0x14E1650", VA = "0x14E1650")]
		private static extern void Pvr_GetElbowPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0x14E1710", Offset = "0x14E1710", VA = "0x14E1710")]
		private static extern void Pvr_GetWristPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0x14E17D0", Offset = "0x14E17D0", VA = "0x14E17D0")]
		private static extern void Pvr_GetShoulderPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0x14E13F0", Offset = "0x14E13F0", VA = "0x14E13F0")]
		private static extern void Pvr_SetArmModelParameters(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle);
	}
	[Token(Token = "0x20003A5")]
	public enum ControllerVariety
	{
		[Token(Token = "0x4001B7E")]
		Controller0,
		[Token(Token = "0x4001B7F")]
		Controller1
	}
	[Token(Token = "0x20003A6")]
	public enum ControllerDevice
	{
		[Token(Token = "0x4001B81")]
		Goblin,
		[Token(Token = "0x4001B82")]
		Neo,
		[Token(Token = "0x4001B83")]
		G2,
		[Token(Token = "0x4001B84")]
		Neo2,
		[Token(Token = "0x4001B85")]
		Neo3,
		[Token(Token = "0x4001B86")]
		NewController
	}
	[Token(Token = "0x20003A7")]
	public enum PBS_SystemInfoEnum
	{
		[Token(Token = "0x4001B88")]
		ELECTRIC_QUANTITY,
		[Token(Token = "0x4001B89")]
		PUI_VERSION,
		[Token(Token = "0x4001B8A")]
		EQUIPMENT_MODEL,
		[Token(Token = "0x4001B8B")]
		EQUIPMENT_SN,
		[Token(Token = "0x4001B8C")]
		CUSTOMER_SN,
		[Token(Token = "0x4001B8D")]
		INTERNAL_STORAGE_SPACE_OF_THE_DEVICE,
		[Token(Token = "0x4001B8E")]
		DEVICE_BLUETOOTH_STATUS,
		[Token(Token = "0x4001B8F")]
		BLUETOOTH_NAME_CONNECTED,
		[Token(Token = "0x4001B90")]
		BLUETOOTH_MAC_ADDRESS,
		[Token(Token = "0x4001B91")]
		DEVICE_WIFI_STATUS,
		[Token(Token = "0x4001B92")]
		WIFI_NAME_CONNECTED,
		[Token(Token = "0x4001B93")]
		WLAN_MAC_ADDRESS,
		[Token(Token = "0x4001B94")]
		DEVICE_IP
	}
	[Token(Token = "0x20003A8")]
	public enum PBS_DeviceControlEnum
	{
		[Token(Token = "0x4001B96")]
		DEVICE_CONTROL_REBOOT,
		[Token(Token = "0x4001B97")]
		DEVICE_CONTROL_SHUTDOWN
	}
	[Token(Token = "0x20003A9")]
	public enum PBS_PackageControlEnum
	{
		[Token(Token = "0x4001B99")]
		PACKAGE_SILENCE_INSTALL,
		[Token(Token = "0x4001B9A")]
		PACKAGE_SILENCE_UNINSTALL
	}
	[Token(Token = "0x20003AA")]
	public enum PBS_SwitchEnum
	{
		[Token(Token = "0x4001B9C")]
		S_ON,
		[Token(Token = "0x4001B9D")]
		S_OFF
	}
	[Token(Token = "0x20003AB")]
	public enum PBS_HomeEventEnum
	{
		[Token(Token = "0x4001B9F")]
		SINGLE_CLICK,
		[Token(Token = "0x4001BA0")]
		DOUBLE_CLICK,
		[Token(Token = "0x4001BA1")]
		LONG_PRESS
	}
	[Token(Token = "0x20003AC")]
	public enum PBS_HomeFunctionEnum
	{
		[Token(Token = "0x4001BA3")]
		VALUE_HOME_GO_TO_SETTING,
		[Token(Token = "0x4001BA4")]
		VALUE_HOME_BACK,
		[Token(Token = "0x4001BA5")]
		VALUE_HOME_RECENTER,
		[Token(Token = "0x4001BA6")]
		VALUE_HOME_OPEN_APP,
		[Token(Token = "0x4001BA7")]
		VALUE_HOME_DISABLE,
		[Token(Token = "0x4001BA8")]
		VALUE_HOME_GO_TO_HOME,
		[Token(Token = "0x4001BA9")]
		VALUE_HOME_SEND_BROADCAST,
		[Token(Token = "0x4001BAA")]
		VALUE_HOME_CLEAN_MEMORY
	}
	[Token(Token = "0x20003AD")]
	public enum PBS_ScreenOffDelayTimeEnum
	{
		[Token(Token = "0x4001BAC")]
		THREE = 3,
		[Token(Token = "0x4001BAD")]
		TEN = 10,
		[Token(Token = "0x4001BAE")]
		THIRTY = 30,
		[Token(Token = "0x4001BAF")]
		SIXTY = 60,
		[Token(Token = "0x4001BB0")]
		THREE_HUNDRED = 300,
		[Token(Token = "0x4001BB1")]
		SIX_HUNDRED = 600,
		[Token(Token = "0x4001BB2")]
		NEVER = -1
	}
	[Token(Token = "0x20003AE")]
	public enum PBS_SleepDelayTimeEnum
	{
		[Token(Token = "0x4001BB4")]
		FIFTEEN = 15,
		[Token(Token = "0x4001BB5")]
		THIRTY = 30,
		[Token(Token = "0x4001BB6")]
		SIXTY = 60,
		[Token(Token = "0x4001BB7")]
		THREE_HUNDRED = 300,
		[Token(Token = "0x4001BB8")]
		SIX_HUNDRED = 600,
		[Token(Token = "0x4001BB9")]
		ONE_THOUSAND_AND_EIGHT_HUNDRED = 1800,
		[Token(Token = "0x4001BBA")]
		NEVER = -1
	}
	[Token(Token = "0x20003AF")]
	public enum PBS_SystemFunctionSwitchEnum
	{
		[Token(Token = "0x4001BBC")]
		SFS_USB,
		[Token(Token = "0x4001BBD")]
		SFS_AUTOSLEEP,
		[Token(Token = "0x4001BBE")]
		SFS_SCREENON_CHARGING,
		[Token(Token = "0x4001BBF")]
		SFS_OTG_CHARGING,
		[Token(Token = "0x4001BC0")]
		SFS_RETURN_MENU_IN_2DMODE,
		[Token(Token = "0x4001BC1")]
		SFS_COMBINATION_KEY,
		[Token(Token = "0x4001BC2")]
		SFS_CALIBRATION_WITH_POWER_ON,
		[Token(Token = "0x4001BC3")]
		SFS_SYSTEM_UPDATE,
		[Token(Token = "0x4001BC4")]
		SFS_CAST_SERVICE,
		[Token(Token = "0x4001BC5")]
		SFS_EYE_PROTECTION,
		[Token(Token = "0x4001BC6")]
		SFS_SECURITY_ZONE_PERMANENTLY,
		[Token(Token = "0x4001BC7")]
		SFS_GLOBAL_CALIBRATION,
		[Token(Token = "0x4001BC8")]
		SFS_Auto_Calibration,
		[Token(Token = "0x4001BC9")]
		SFS_USB_BOOT
	}
	[Token(Token = "0x20003B0")]
	public enum PBS_USBConfigModeEnum
	{
		[Token(Token = "0x4001BCB")]
		MTP,
		[Token(Token = "0x4001BCC")]
		CHARGE
	}
	[Token(Token = "0x20003B1")]
	public struct ToBService
	{
		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<bool> BoolCallback;

		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static Action<int> IntCallback;

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<long> LongCallback;

		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static AndroidJavaClass unityPlayer;

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaObject currentActivity;

		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static AndroidJavaObject tobHelper;

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaClass tobHelperClass;

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0x14EC998", Offset = "0x14EC998", VA = "0x14EC998")]
		public static void UPvr_InitToBService()
		{
		}

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0x14ECB94", Offset = "0x14ECB94", VA = "0x14ECB94")]
		public static void UPvr_SetUnityObjectName(string obj)
		{
		}

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0x14ECC7C", Offset = "0x14ECC7C", VA = "0x14ECC7C")]
		public static void UPvr_BindToBService()
		{
		}

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0x14ECD6C", Offset = "0x14ECD6C", VA = "0x14ECD6C")]
		public static void UPvr_UnBindToBService()
		{
		}

		[Token(Token = "0x6001C81")]
		[Address(RVA = "0x14ECE5C", Offset = "0x14ECE5C", VA = "0x14ECE5C")]
		private static AndroidJavaObject GetEnumType(Enum enumType)
		{
			return null;
		}

		[Token(Token = "0x6001C82")]
		[Address(RVA = "0x14ECFA8", Offset = "0x14ECFA8", VA = "0x14ECFA8")]
		public static string UPvr_StateGetDeviceInfo(PBS_SystemInfoEnum type)
		{
			return null;
		}

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0x14ED158", Offset = "0x14ED158", VA = "0x14ED158")]
		public static void UPvr_ControlSetDeviceAction(PBS_DeviceControlEnum deviceControl, Action<int> callback)
		{
		}

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0x14ED27C", Offset = "0x14ED27C", VA = "0x14ED27C")]
		public static void UPvr_ControlAPPManger(PBS_PackageControlEnum packageControl, string path, Action<int> callback)
		{
		}

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0x14ED458", Offset = "0x14ED458", VA = "0x14ED458")]
		public static void UPvr_ControlSetAutoConnectWIFI(string ssid, string pwd, Action<bool> callback)
		{
		}

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0x14ED620", Offset = "0x14ED620", VA = "0x14ED620")]
		public static void UPvr_ControlClearAutoConnectWIFI(Action<bool> callback)
		{
		}

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0x14ED6B0", Offset = "0x14ED6B0", VA = "0x14ED6B0")]
		public static void UPvr_PropertySetHomeKey(PBS_HomeEventEnum eventEnum, PBS_HomeFunctionEnum function, Action<bool> callback)
		{
		}

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0x14ED854", Offset = "0x14ED854", VA = "0x14ED854")]
		public static void UPvr_PropertySetHomeKeyAll(PBS_HomeEventEnum eventEnum, PBS_HomeFunctionEnum function, int timesetup, string pkg, string className, Action<bool> callback)
		{
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0x14EDAFC", Offset = "0x14EDAFC", VA = "0x14EDAFC")]
		public static void UPvr_PropertyDisablePowerKey(bool isSingleTap, bool enable, Action<int> callback)
		{
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0x14EDC7C", Offset = "0x14EDC7C", VA = "0x14EDC7C")]
		public static void UPvr_PropertySetScreenOffDelay(PBS_ScreenOffDelayTimeEnum timeEnum, Action<int> callback)
		{
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0x14EDDA0", Offset = "0x14EDDA0", VA = "0x14EDDA0")]
		public static void UPvr_PropertySetSleepDelay(PBS_SleepDelayTimeEnum timeEnum)
		{
		}

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0x14EDEB4", Offset = "0x14EDEB4", VA = "0x14EDEB4")]
		public static void UPvr_SwitchSystemFunction(PBS_SystemFunctionSwitchEnum systemFunction, PBS_SwitchEnum switchEnum)
		{
		}

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0x14EE0A4", Offset = "0x14EE0A4", VA = "0x14EE0A4")]
		public static void UPvr_SwitchSetUsbConfigurationOption(PBS_USBConfigModeEnum uSBConfigModeEnum)
		{
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0x14EE224", Offset = "0x14EE224", VA = "0x14EE224")]
		public static void UPvr_ScreenOn()
		{
		}

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0x14EE33C", Offset = "0x14EE33C", VA = "0x14EE33C")]
		public static void UPvr_ScreenOff()
		{
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0x14EE454", Offset = "0x14EE454", VA = "0x14EE454")]
		public static void UPvr_AcquireWakeLock()
		{
		}

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0x14EE56C", Offset = "0x14EE56C", VA = "0x14EE56C")]
		public static void UPvr_ReleaseWakeLock()
		{
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0x14EE684", Offset = "0x14EE684", VA = "0x14EE684")]
		public static void UPvr_EnableEnterKey()
		{
		}

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0x14EE79C", Offset = "0x14EE79C", VA = "0x14EE79C")]
		public static void UPvr_DisableEnterKey()
		{
		}

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0x14EE8B4", Offset = "0x14EE8B4", VA = "0x14EE8B4")]
		public static void UPvr_EnableVolumeKey()
		{
		}

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0x14EE9CC", Offset = "0x14EE9CC", VA = "0x14EE9CC")]
		public static void UPvr_DisableVolumeKey()
		{
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0x14EEAE4", Offset = "0x14EEAE4", VA = "0x14EEAE4")]
		public static void UPvr_EnableBackKey()
		{
		}

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0x14EEBFC", Offset = "0x14EEBFC", VA = "0x14EEBFC")]
		public static void UPvr_DisableBackKey()
		{
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0x14EED14", Offset = "0x14EED14", VA = "0x14EED14")]
		public static void UPvr_WriteConfigFileToDataLocal(string path, string content, Action<bool> callback)
		{
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0x14EEE68", Offset = "0x14EEE68", VA = "0x14EEE68")]
		public static void UPvr_ResetAllKeyToDefault(Action<bool> callback)
		{
		}
	}
	[Token(Token = "0x20003B2")]
	public enum GlobalIntConfigs
	{
		[Token(Token = "0x4001BD5")]
		EYE_TEXTURE_RESOLUTION0,
		[Token(Token = "0x4001BD6")]
		EYE_TEXTURE_RESOLUTION1,
		[Token(Token = "0x4001BD7")]
		SEENSOR_COUNT,
		[Token(Token = "0x4001BD8")]
		ABILITY6DOF,
		[Token(Token = "0x4001BD9")]
		PLATFORM_TYPE,
		[Token(Token = "0x4001BDA")]
		TRACKING_MODE,
		[Token(Token = "0x4001BDB")]
		LOG_LEVEL,
		[Token(Token = "0x4001BDC")]
		ENBLE_HAND6DOF_BY_HEAD,
		[Token(Token = "0x4001BDD")]
		ENBLE_6DOF_GLOBAL_TRACKING,
		[Token(Token = "0x4001BDE")]
		TARGET_FRAME_RATE,
		[Token(Token = "0x4001BDF")]
		iShowFPS,
		[Token(Token = "0x4001BE0")]
		SensorMode,
		[Token(Token = "0x4001BE1")]
		LOGICFLOW,
		[Token(Token = "0x4001BE2")]
		EYE_TEXTURE_RES_HIGH,
		[Token(Token = "0x4001BE3")]
		EYE_TEXTURE_RES_NORMAL,
		[Token(Token = "0x4001BE4")]
		iCtrlModelLoadingPri,
		[Token(Token = "0x4001BE5")]
		iPhoneHMDModeEnabled,
		[Token(Token = "0x4001BE6")]
		isEnableBoundary,
		[Token(Token = "0x4001BE7")]
		Enable_Activity_Rotation,
		[Token(Token = "0x4001BE8")]
		GetDisplay_Orientation,
		[Token(Token = "0x4001BE9")]
		GetWaitFrameNum,
		[Token(Token = "0x4001BEA")]
		GetResetFrameNum,
		[Token(Token = "0x4001BEB")]
		EnableFFRBYSYS,
		[Token(Token = "0x4001BEC")]
		RotControllerMode
	}
	[Token(Token = "0x20003B3")]
	public enum GlobalFloatConfigs
	{
		[Token(Token = "0x4001BEE")]
		IPD,
		[Token(Token = "0x4001BEF")]
		VFOV,
		[Token(Token = "0x4001BF0")]
		HFOV,
		[Token(Token = "0x4001BF1")]
		NECK_MODEL_X,
		[Token(Token = "0x4001BF2")]
		NECK_MODEL_Y,
		[Token(Token = "0x4001BF3")]
		NECK_MODEL_Z,
		[Token(Token = "0x4001BF4")]
		DISPLAY_REFRESH_RATE
	}
	[Token(Token = "0x20003B4")]
	public enum RenderTextureAntiAliasing
	{
		[Token(Token = "0x4001BF6")]
		X_1 = 1,
		[Token(Token = "0x4001BF7")]
		X_2 = 2,
		[Token(Token = "0x4001BF8")]
		X_4 = 4,
		[Token(Token = "0x4001BF9")]
		X_8 = 8
	}
	[Token(Token = "0x20003B5")]
	public enum PlatForm
	{
		[Token(Token = "0x4001BFB")]
		Android = 1,
		[Token(Token = "0x4001BFC")]
		IOS,
		[Token(Token = "0x4001BFD")]
		Win,
		[Token(Token = "0x4001BFE")]
		Notsupport
	}
	[Token(Token = "0x20003B6")]
	public enum RenderTextureDepth
	{
		[Token(Token = "0x4001C00")]
		BD_0 = 0,
		[Token(Token = "0x4001C01")]
		BD_16 = 16,
		[Token(Token = "0x4001C02")]
		BD_24 = 24
	}
	[Token(Token = "0x20003B7")]
	public enum RenderTextureLevel
	{
		[Token(Token = "0x4001C04")]
		Normal,
		[Token(Token = "0x4001C05")]
		High
	}
	[Token(Token = "0x20003B8")]
	public enum Sensorindex
	{
		[Token(Token = "0x4001C07")]
		Default,
		[Token(Token = "0x4001C08")]
		FirstSensor,
		[Token(Token = "0x4001C09")]
		SecondSensor
	}
	[Token(Token = "0x20003B9")]
	public enum Eye
	{
		[Token(Token = "0x4001C0B")]
		LeftEye,
		[Token(Token = "0x4001C0C")]
		RightEye,
		[Token(Token = "0x4001C0D")]
		BothEye
	}
	[Token(Token = "0x20003BA")]
	public enum ResUtilsType
	{
		[Token(Token = "0x4001C0F")]
		TYPE_TEXTSIZE,
		[Token(Token = "0x4001C10")]
		TYPE_COLOR,
		[Token(Token = "0x4001C11")]
		TYPE_TEXT,
		[Token(Token = "0x4001C12")]
		TYPE_FONT,
		[Token(Token = "0x4001C13")]
		TYPE_VALUE,
		[Token(Token = "0x4001C14")]
		TYPE_DRAWABLE,
		[Token(Token = "0x4001C15")]
		TYPE_OBJECT,
		[Token(Token = "0x4001C16")]
		TYPR_OBJECTARRAY
	}
	[Token(Token = "0x20003BB")]
	public enum TrackingOrigin
	{
		[Token(Token = "0x4001C18")]
		EyeLevel,
		[Token(Token = "0x4001C19")]
		FloorLevel,
		[Token(Token = "0x4001C1A")]
		StageLevel
	}
	[Token(Token = "0x20003BC")]
	public enum EFoveationLevel
	{
		[Token(Token = "0x4001C1C")]
		Low,
		[Token(Token = "0x4001C1D")]
		Med,
		[Token(Token = "0x4001C1E")]
		High,
		[Token(Token = "0x4001C1F")]
		Top_High
	}
	[Token(Token = "0x20003BD")]
	public enum StereoRenderingPathPico
	{
		[Token(Token = "0x4001C21")]
		MultiPass,
		[Token(Token = "0x4001C22")]
		SinglePass
	}
	[Token(Token = "0x20003BE")]
	public enum pvrEyePoseStatus
	{
		[Token(Token = "0x4001C24")]
		kGazePointValid = 1,
		[Token(Token = "0x4001C25")]
		kGazeVectorValid = 2,
		[Token(Token = "0x4001C26")]
		kEyeOpennessValid = 4,
		[Token(Token = "0x4001C27")]
		kEyePupilDilationValid = 8,
		[Token(Token = "0x4001C28")]
		kEyePositionGuideValid = 0x10
	}
	[Token(Token = "0x20003BF")]
	public enum TrackingMode
	{
		[Token(Token = "0x4001C2A")]
		PVR_TRACKING_MODE_ROTATION = 1,
		[Token(Token = "0x4001C2B")]
		PVR_TRACKING_MODE_POSITION = 2,
		[Token(Token = "0x4001C2C")]
		PVR_TRACKING_MODE_EYE = 4
	}
	[Token(Token = "0x20003C0")]
	public struct EyeTrackingData
	{
		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int leftEyePoseStatus;

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int rightEyePoseStatus;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int combinedEyePoseStatus;

		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 leftEyeGazePoint;

		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 rightEyeGazePoint;

		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 combinedEyeGazePoint;

		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 leftEyeGazeVector;

		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 rightEyeGazeVector;

		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 combinedEyeGazeVector;

		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float leftEyeOpenness;

		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float rightEyeOpenness;

		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float leftEyePupilDilation;

		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float rightEyePupilDilation;

		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 leftEyePositionGuide;

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector3 rightEyePositionGuide;

		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Vector3 foveatedGazeDirection;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int foveatedGazeTrackingState;

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public byte[] reserved;
	}
	[Token(Token = "0x20003C1")]
	public struct EyeTrackingGazeRay
	{
		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Direction;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool IsValid;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Origin;
	}
	[Token(Token = "0x20003C2")]
	public struct EyeDeviceInfo
	{
		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ViewFrustum targetFrustumLeft;

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ViewFrustum targetFrustumRight;
	}
	[Token(Token = "0x20003C3")]
	public struct ViewFrustum
	{
		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float left;

		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float right;

		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float top;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float bottom;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float near;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float far;
	}
	[Token(Token = "0x20003C4")]
	public struct EyeSetting
	{
		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform eyelocalPosition;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Rect eyeRect;

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float eyeFov;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float eyeAspect;

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Matrix4x4 eyeProjectionMatrix;

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Shader eyeShader;
	}
	[Token(Token = "0x20003C5")]
	public struct Sensor
	{
		[Token(Token = "0x4001C50")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0x14E4D68", Offset = "0x14E4D68", VA = "0x14E4D68")]
		private static extern int Pvr_Enable6DofModule(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0x14E4E08", Offset = "0x14E4E08", VA = "0x14E4E08")]
		private static extern int Pvr_OptionalResetSensor(int index, int resetRot, int resetPos);

		[PreserveSig]
		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0x14E4EB8", Offset = "0x14E4EB8", VA = "0x14E4EB8")]
		private static extern int Pvr_Init(int index);

		[PreserveSig]
		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0x14E4F58", Offset = "0x14E4F58", VA = "0x14E4F58")]
		private static extern int Pvr_StartSensor(int index);

		[PreserveSig]
		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0x14E4FF8", Offset = "0x14E4FF8", VA = "0x14E4FF8")]
		private static extern int Pvr_StopSensor(int index);

		[PreserveSig]
		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0x14E5098", Offset = "0x14E5098", VA = "0x14E5098")]
		private static extern int Pvr_ResetSensor(int index);

		[PreserveSig]
		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0x14E5138", Offset = "0x14E5138", VA = "0x14E5138")]
		private static extern int Pvr_ResetSensorAll(int index);

		[PreserveSig]
		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0x14E51D8", Offset = "0x14E51D8", VA = "0x14E51D8")]
		private static extern int Pvr_GetSensorState(int index, ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz);

		[PreserveSig]
		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0x14E52C0", Offset = "0x14E52C0", VA = "0x14E52C0")]
		private static extern int Pvr_GetMainSensorState(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber);

		[PreserveSig]
		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0x14E53C0", Offset = "0x14E53C0", VA = "0x14E53C0")]
		private static extern int Pvr_GetPsensorState();

		[PreserveSig]
		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0x14E5458", Offset = "0x14E5458", VA = "0x14E5458")]
		private static extern int Pvr_GetHmdPSensorStatus();

		[PreserveSig]
		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0x14E54F0", Offset = "0x14E54F0", VA = "0x14E54F0")]
		private static extern int Pvr_GetSensorGyroscope(int index, ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0x14E55A8", Offset = "0x14E55A8", VA = "0x14E55A8")]
		private static extern int Pvr_GetSensorMagnet(int index, ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0x14E5660", Offset = "0x14E5660", VA = "0x14E5660")]
		private static extern int Pvr_Get6DofSensorQualityStatus();

		[PreserveSig]
		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0x14E56F8", Offset = "0x14E56F8", VA = "0x14E56F8")]
		private static extern bool Pvr_Get6DofSafePanelFlag();

		[PreserveSig]
		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0x14E5798", Offset = "0x14E5798", VA = "0x14E5798")]
		private static extern void Pvr_SetReinPosition(float x, float y, float z, float w, float px, float py, float pz, int hand, bool valid, int key);

		[PreserveSig]
		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0x14E5898", Offset = "0x14E5898", VA = "0x14E5898")]
		private static extern bool Pvr_SetTrackingOriginType(TrackingOrigin trackingOriginType);

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0x14E5940", Offset = "0x14E5940", VA = "0x14E5940")]
		public static bool UPvr_Pvr_Get6DofSafePanelFlag()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0x14E5944", Offset = "0x14E5944", VA = "0x14E5944")]
		public static int UPvr_Init(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0x14E5948", Offset = "0x14E5948", VA = "0x14E5948")]
		public static void UPvr_InitPsensor()
		{
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0x14E5B6C", Offset = "0x14E5B6C", VA = "0x14E5B6C")]
		public static int UPvr_GetPsensorState()
		{
			return default(int);
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0x14E5E20", Offset = "0x14E5E20", VA = "0x14E5E20")]
		public static int UPvr_GetPSensorStatus()
		{
			return default(int);
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0x14E5E24", Offset = "0x14E5E24", VA = "0x14E5E24")]
		public static void UPvr_UnregisterPsensor()
		{
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0x14E6058", Offset = "0x14E6058", VA = "0x14E6058")]
		public static int UPvr_StartSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0x14E605C", Offset = "0x14E605C", VA = "0x14E605C")]
		public static int UPvr_StopSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0x14E6060", Offset = "0x14E6060", VA = "0x14E6060")]
		public static int UPvr_ResetSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0x14E6100", Offset = "0x14E6100", VA = "0x14E6100")]
		public static int UPvr_OptionalResetSensor(int index, int resetRot, int resetPos)
		{
			return default(int);
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0x14E6104", Offset = "0x14E6104", VA = "0x14E6104")]
		public static int UPvr_GetSensorState(int index, ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz)
		{
			return default(int);
		}

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0x14E613C", Offset = "0x14E613C", VA = "0x14E613C")]
		public static int UPvr_GetMainSensorState(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber)
		{
			return default(int);
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0x14E6180", Offset = "0x14E6180", VA = "0x14E6180")]
		public static int UPvr_GetSensorGyroscope(int index, ref float x, ref float y, ref float z)
		{
			return default(int);
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0x14E6198", Offset = "0x14E6198", VA = "0x14E6198")]
		public static int UPvr_GetSensorMagnet(int index, ref float x, ref float y, ref float z)
		{
			return default(int);
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0x14E61B0", Offset = "0x14E61B0", VA = "0x14E61B0")]
		public static int UPvr_Get6DofSensorQualityStatus()
		{
			return default(int);
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0x14E61B4", Offset = "0x14E61B4", VA = "0x14E61B4")]
		public static int UPvr_Enable6DofModule(bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0x14E594C", Offset = "0x14E594C", VA = "0x14E594C")]
		public static void Pvr_InitPsensor()
		{
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0x14E645C", Offset = "0x14E645C", VA = "0x14E645C")]
		public static bool Pvr_IsHead6dofReset()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0x14E5BC4", Offset = "0x14E5BC4", VA = "0x14E5BC4")]
		public static int Pvr_GetAndroidPsensorState()
		{
			return default(int);
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0x14E5E28", Offset = "0x14E5E28", VA = "0x14E5E28")]
		public static void Pvr_UnregisterPsensor()
		{
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0x14E66D8", Offset = "0x14E66D8", VA = "0x14E66D8")]
		public static int UPvr_ResetSensorAll(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0x14E66DC", Offset = "0x14E66DC", VA = "0x14E66DC")]
		public static void UPvr_SetReinPosition(float x, float y, float z, float w, float px, float py, float pz, int hand, bool valid, int key)
		{
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0x14E6C78", Offset = "0x14E6C78", VA = "0x14E6C78")]
		public static bool UPvr_SetTrackingOriginType(TrackingOrigin trackingOriginType)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003C6")]
	public struct Render
	{
		[Token(Token = "0x4001C51")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0x14E2F08", Offset = "0x14E2F08", VA = "0x14E2F08")]
		private static extern void Pvr_ChangeScreenParameters(string model, int width, int height, double xppi, double yppi, double densityDpi);

		[PreserveSig]
		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0x14E2FF8", Offset = "0x14E2FF8", VA = "0x14E2FF8")]
		private static extern int Pvr_SetRatio(float midH, float midV);

		[PreserveSig]
		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0x14E30A0", Offset = "0x14E30A0", VA = "0x14E30A0")]
		private static extern int Pvr_SetPupillaryPoint(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0x14E3140", Offset = "0x14E3140", VA = "0x14E3140")]
		private static extern IntPtr Pvr_GetSupportHMDTypes();

		[PreserveSig]
		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0x14E31D8", Offset = "0x14E31D8", VA = "0x14E31D8")]
		private static extern void Pvr_SetCurrentHMDType(string type);

		[PreserveSig]
		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0x14E3298", Offset = "0x14E3298", VA = "0x14E3298")]
		private static extern int Pvr_GetIntConfig(int configsenum, ref int res);

		[PreserveSig]
		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0x14E3340", Offset = "0x14E3340", VA = "0x14E3340")]
		private static extern int Pvr_GetFloatConfig(int configsenum, ref float res);

		[PreserveSig]
		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0x14E33E8", Offset = "0x14E33E8", VA = "0x14E33E8")]
		private static extern void Pvr_SetupLayerData(int layerIndex, int sideMask, int textureId, int textureType, int layerFlags, float[] colorScaleAndOffset);

		[PreserveSig]
		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0x14E34B8", Offset = "0x14E34B8", VA = "0x14E34B8")]
		private static extern void Pvr_SetupLayerCoords(int layerIndex, int sideMask, float[] lowerLeft, float[] lowerRight, float[] upperLeft, float[] upperRight);

		[PreserveSig]
		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0x14E35A0", Offset = "0x14E35A0", VA = "0x14E35A0")]
		private static extern void Pvr_SetOverlayModelViewMatrix(int overlayType, int overlayShape, int texId, int eyeSide, int layerIndex, bool isHeadLocked, int layerFlags, float[] mvMatrix, float[] modelS, float[] modelR, float[] modelT, float[] cameraR, float[] cameraT, float[] colorScaleAndOffset);

		[PreserveSig]
		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0x14E36E0", Offset = "0x14E36E0", VA = "0x14E36E0")]
		private static extern bool Pvr_EnableFoveation(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0x14E3788", Offset = "0x14E3788", VA = "0x14E3788")]
		private static extern void Pvr_SetFoveationParameters(int textureId, int previousId, float focalPointX, float focalPointY, float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum);

		[PreserveSig]
		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0x14E3868", Offset = "0x14E3868", VA = "0x14E3868")]
		private static extern void Pvr_SetFoveationResource(int textureId, int previousId, float focalPointX, float focalPointY);

		[PreserveSig]
		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0x14E3920", Offset = "0x14E3920", VA = "0x14E3920")]
		private static extern void Pvr_SetFoveationParameters2(float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum);

		[PreserveSig]
		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0x14E39D8", Offset = "0x14E39D8", VA = "0x14E39D8")]
		private static extern void Pvr_SetFoveationLevel(EFoveationLevel level);

		[PreserveSig]
		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0x14E3A78", Offset = "0x14E3A78", VA = "0x14E3A78")]
		private static extern EFoveationLevel Pvr_GetFoveationLevel();

		[PreserveSig]
		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0x14E3B10", Offset = "0x14E3B10", VA = "0x14E3B10")]
		private static extern bool Pvr_GetIntSysProc(string property, ref int res);

		[PreserveSig]
		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0x14E3BE8", Offset = "0x14E3BE8", VA = "0x14E3BE8")]
		private static extern void Pvr_SetColorspaceType(int colorspaceType);

		[PreserveSig]
		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0x14E3C88", Offset = "0x14E3C88", VA = "0x14E3C88")]
		private static extern void Pvr_SetCastingColorspaceType(int colorspaceType);

		[PreserveSig]
		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0x14E3D28", Offset = "0x14E3D28", VA = "0x14E3D28")]
		private static extern IntPtr Pvr_CreateLayerAndroidSurface(int layerType, int layerIndex);

		[PreserveSig]
		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0x14E3DD0", Offset = "0x14E3DD0", VA = "0x14E3DD0")]
		private static extern IntPtr Pvr_GetLayerAndroidSurface(int layerType, int layerIndex);

		[PreserveSig]
		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0x14E3E78", Offset = "0x14E3E78", VA = "0x14E3E78")]
		private static extern void Pvr_SetMonoMode(bool openMono);

		[PreserveSig]
		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0x14E3F18", Offset = "0x14E3F18", VA = "0x14E3F18")]
		private static extern void Pvr_GetStencilMesh(int eye, ref int vertexCount, ref int triangleCount, ref IntPtr vertexData, ref IntPtr indexData);

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0x14E3FD8", Offset = "0x14E3FD8", VA = "0x14E3FD8")]
		public static void UPvr_ChangeScreenParameters(string model, int width, int height, double xppi, double yppi, double densityDpi)
		{
		}

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0x14E3FFC", Offset = "0x14E3FFC", VA = "0x14E3FFC")]
		public static int UPvr_SetRatio(float midH, float midV)
		{
			return default(int);
		}

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0x14E4000", Offset = "0x14E4000", VA = "0x14E4000")]
		public static void UPvr_EnableFoveation(bool enable)
		{
		}

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0x14E40E8", Offset = "0x14E40E8", VA = "0x14E40E8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3ACA3C", Offset = "0x3ACA3C")]
		public static void UPvr_SetFoveationParameters(int textureId, int previousId, float focalPointX, float focalPointY, float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum)
		{
		}

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0x14E4120", Offset = "0x14E4120", VA = "0x14E4120")]
		public static void UPvr_SetFoveationResource(int textureId, int previousId, float focalPointX, float focalPointY)
		{
		}

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0x14E4138", Offset = "0x14E4138", VA = "0x14E4138")]
		public static void SetFoveatedRenderingLevel(EFoveationLevel level)
		{
		}

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0x14E429C", Offset = "0x14E429C", VA = "0x14E429C")]
		public static EFoveationLevel GetFoveatedRenderingLevel()
		{
			return default(EFoveationLevel);
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0x14E42A0", Offset = "0x14E42A0", VA = "0x14E42A0")]
		public static void SetFoveatedRenderingParameters(Vector2 ffrGainValue, float ffrAreaValue, float ffrMinimumValue)
		{
		}

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0x14E4424", Offset = "0x14E4424", VA = "0x14E4424")]
		public static bool UPvr_GetIntSysProc(string property, ref int res)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0x14E4428", Offset = "0x14E4428", VA = "0x14E4428")]
		public static int UPvr_GetIntConfig(int configsenum, ref int res)
		{
			return default(int);
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0x14E442C", Offset = "0x14E442C", VA = "0x14E442C")]
		public static int UPvr_GetFloatConfig(int configsenum, ref float res)
		{
			return default(int);
		}

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0x14E4430", Offset = "0x14E4430", VA = "0x14E4430")]
		public static string UPvr_GetSupportHMDTypes()
		{
			return null;
		}

		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0x14E44CC", Offset = "0x14E44CC", VA = "0x14E44CC")]
		public static void UPvr_SetCurrentHMDType(string type)
		{
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0x14E44D0", Offset = "0x14E44D0", VA = "0x14E44D0")]
		public static void UPvr_SetupLayerData(int layerIndex, int sideMask, int textureId, int textureType, int layerFlags, Vector4 colorScale, Vector4 colorOffset)
		{
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0x14E4670", Offset = "0x14E4670", VA = "0x14E4670")]
		public static void UPvr_SetupLayerCoords(int layerIndex, int sideMask, float[] lowerLeft, float[] lowerRight, float[] upperLeft, float[] upperRight)
		{
		}

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0x14E4694", Offset = "0x14E4694", VA = "0x14E4694")]
		public static void UPvr_SetOverlayModelViewMatrix(int overlayType, int overlayShape, int texId, int eyeSide, int layerIndex, bool isHeadLocked, int layerFlags, Matrix4x4 mvMatrix, Vector3 modelS, Quaternion modelR, Vector3 modelT, Quaternion cameraR, Vector3 cameraT, Vector4 colorScale, Vector4 colorOffset)
		{
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0x14E4D34", Offset = "0x14E4D34", VA = "0x14E4D34")]
		public static void UPvr_SetColorspaceType(int colorspaceType)
		{
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0x14E4D38", Offset = "0x14E4D38", VA = "0x14E4D38")]
		public static void UPvr_SetCastingColorspaceType(int colorspaceType)
		{
		}

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0x14E4D3C", Offset = "0x14E4D3C", VA = "0x14E4D3C")]
		public static IntPtr UPvr_CreateLayerAndroidSurface(int layerType, int layerIndex)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0x14E4D40", Offset = "0x14E4D40", VA = "0x14E4D40")]
		public static IntPtr UPvr_GetLayerAndroidSurface(int layerType, int layerIndex)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0x14E4D44", Offset = "0x14E4D44", VA = "0x14E4D44")]
		public static void UPvr_SetMonoMode(bool openMono)
		{
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0x14E4D48", Offset = "0x14E4D48", VA = "0x14E4D48")]
		public static void UPvr_GetStencilMesh(int eye, ref int vertexCount, ref int triangleCount, ref IntPtr vertexDataPtr, ref IntPtr indexDataPtr)
		{
		}
	}
	[Token(Token = "0x20003C7")]
	public struct System
	{
		[Token(Token = "0x4001C52")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x4001C53")]
		public const string UnitySDKVersion = "2.8.9.12";

		[PreserveSig]
		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0x14E6C80", Offset = "0x14E6C80", VA = "0x14E6C80")]
		public static extern void Pvr_SetInitActivity(IntPtr activity, IntPtr vrActivityClass);

		[PreserveSig]
		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0x14E6D28", Offset = "0x14E6D28", VA = "0x14E6D28")]
		private static extern IntPtr Pvr_GetSDKVersion();

		[PreserveSig]
		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0x14E6DC0", Offset = "0x14E6DC0", VA = "0x14E6DC0")]
		public static extern int Pvr_GetHmdHardwareVersion();

		[PreserveSig]
		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0x14E6E58", Offset = "0x14E6E58", VA = "0x14E6E58")]
		public static extern IntPtr Pvr_GetHmdFirmwareVersion();

		[PreserveSig]
		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0x14E6EF0", Offset = "0x14E6EF0", VA = "0x14E6EF0")]
		public static extern IntPtr Pvr_GetHmdSerialNumber();

		[PreserveSig]
		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0x14E6F88", Offset = "0x14E6F88", VA = "0x14E6F88")]
		public static extern int PVR_GetHmdBatteryStatus();

		[PreserveSig]
		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0x14E7020", Offset = "0x14E7020", VA = "0x14E7020")]
		public static extern float PVR_GetHmdBatteryTemperature();

		[PreserveSig]
		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0x14E70B8", Offset = "0x14E70B8", VA = "0x14E70B8")]
		public static extern int PVR_SetHmdAudioStatus(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0x14E7158", Offset = "0x14E7158", VA = "0x14E7158")]
		public static extern bool Pvr_GetEyeTrackingData(ref int leftEyePoseStatus, ref int rightEyePoseStatus, ref int combinedEyePoseStatus, ref float leftEyeGazePointX, ref float leftEyeGazePointY, ref float leftEyeGazePointZ, ref float rightEyeGazePointX, ref float rightEyeGazePointY, ref float rightEyeGazePointZ, ref float combinedEyeGazePointX, ref float combinedEyeGazePointY, ref float combinedEyeGazePointZ, ref float leftEyeGazeVectorX, ref float leftEyeGazeVectorY, ref float leftEyeGazeVectorZ, ref float rightEyeGazeVectorX, ref float rightEyeGazeVectorY, ref float rightEyeGazeVectorZ, ref float combinedEyeGazeVectorX, ref float combinedEyeGazeVectorY, ref float combinedEyeGazeVectorZ, ref float leftEyeOpenness, ref float rightEyeOpenness, ref float leftEyePupilDilation, ref float rightEyePupilDilation, ref float leftEyePositionGuideX, ref float leftEyePositionGuideY, ref float leftEyePositionGuideZ, ref float rightEyePositionGuideX, ref float rightEyePositionGuideY, ref float rightEyePositionGuideZ, ref float foveatedGazeDirectionX, ref float foveatedGazeDirectionY, ref float foveatedGazeDirectionZ, ref int foveatedGazeTrackingState);

		[PreserveSig]
		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0x14E7318", Offset = "0x14E7318", VA = "0x14E7318")]
		public static extern bool Pvr_SetTrackingMode(int trackingMode);

		[PreserveSig]
		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0x14E73C0", Offset = "0x14E73C0", VA = "0x14E73C0")]
		public static extern int Pvr_GetTrackingMode();

		[PreserveSig]
		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0x14E7458", Offset = "0x14E7458", VA = "0x14E7458")]
		public static extern IntPtr GetRenderEventFunc();

		[PreserveSig]
		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0x14E74F0", Offset = "0x14E74F0", VA = "0x14E74F0")]
		public static extern void UnityEventData(long data);

		[PreserveSig]
		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0x14E7598", Offset = "0x14E7598", VA = "0x14E7598")]
		public static extern bool Pvr_EnableSinglePass(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0x14E7640", Offset = "0x14E7640", VA = "0x14E7640")]
		public static extern void Pvr_SetAntiAliasing(int antiAliasing);

		[PreserveSig]
		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0x14E76E0", Offset = "0x14E76E0", VA = "0x14E76E0")]
		public static extern void Pvr_SinglePassBeforeForwardOpaque();

		[PreserveSig]
		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0x14E7778", Offset = "0x14E7778", VA = "0x14E7778")]
		public static extern void Pvr_SetCurrentRenderTexture(uint textureId);

		[PreserveSig]
		[Token(Token = "0x6001D00")]
		[Address(RVA = "0x14E7818", Offset = "0x14E7818", VA = "0x14E7818")]
		public static extern bool Pvr_SetSinglePassDepthBufferWidthHeight(int width, int height);

		[PreserveSig]
		[Token(Token = "0x6001D01")]
		[Address(RVA = "0x14E78C8", Offset = "0x14E78C8", VA = "0x14E78C8")]
		public static extern int PVR_setPerformanceLevels(int cpuLevel, int gpuLevel);

		[PreserveSig]
		[Token(Token = "0x6001D02")]
		[Address(RVA = "0x14E7970", Offset = "0x14E7970", VA = "0x14E7970")]
		public static extern bool Pvr_SetIPD(float distance);

		[PreserveSig]
		[Token(Token = "0x6001D03")]
		[Address(RVA = "0x14E7A18", Offset = "0x14E7A18", VA = "0x14E7A18")]
		public static extern float Pvr_GetIPD();

		[PreserveSig]
		[Token(Token = "0x6001D04")]
		[Address(RVA = "0x14E7AB0", Offset = "0x14E7AB0", VA = "0x14E7AB0")]
		public static extern bool Pvr_SetTrackingIPDEnabled(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001D05")]
		[Address(RVA = "0x14E7B58", Offset = "0x14E7B58", VA = "0x14E7B58")]
		public static extern bool Pvr_GetTrackingIPDEnabled();

		[PreserveSig]
		[Token(Token = "0x6001D06")]
		[Address(RVA = "0x14E7BF8", Offset = "0x14E7BF8", VA = "0x14E7BF8")]
		public static extern bool Pvr_GetEyeTrackingAutoIPD(ref float autoIPD);

		[PreserveSig]
		[Token(Token = "0x6001D07")]
		[Address(RVA = "0x14E2E70", Offset = "0x14E2E70", VA = "0x14E2E70")]
		public static extern int PVR_GetHmdAudioStatus();

		[Token(Token = "0x6001D08")]
		public static bool UPvr_CallStaticMethod<T>(ref T result, AndroidJavaClass jclass, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0x14E61B8", Offset = "0x14E61B8", VA = "0x14E61B8")]
		public static bool UPvr_CallStaticMethod(AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D0A")]
		public static bool UPvr_CallMethod<T>(ref T result, AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0x14E7CA0", Offset = "0x14E7CA0", VA = "0x14E7CA0")]
		public static bool UPvr_CallMethod(AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0x14E7F44", Offset = "0x14E7F44", VA = "0x14E7F44")]
		public static string UPvr_GetSDKVersion()
		{
			return null;
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0x14E7FEC", Offset = "0x14E7FEC", VA = "0x14E7FEC")]
		public static string UPvr_GetUnitySDKVersion()
		{
			return null;
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0x14E803C", Offset = "0x14E803C", VA = "0x14E803C")]
		public static string UPvr_GetDeviceMode()
		{
			return null;
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0x14E8044", Offset = "0x14E8044", VA = "0x14E8044")]
		public static string UPvr_GetDeviceModel()
		{
			return null;
		}

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0x14E1F1C", Offset = "0x14E1F1C", VA = "0x14E1F1C")]
		public static string UPvr_GetDeviceSN()
		{
			return null;
		}

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0x14E23D0", Offset = "0x14E23D0", VA = "0x14E23D0")]
		public static AndroidJavaObject UPvr_GetCurrentActivity()
		{
			return null;
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0x14E804C", Offset = "0x14E804C", VA = "0x14E804C")]
		public static bool UPvr_SetMonoPresentation()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0x14E8154", Offset = "0x14E8154", VA = "0x14E8154")]
		public static bool UPvr_IsPresentationExisted()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0x14E828C", Offset = "0x14E828C", VA = "0x14E828C")]
		public static bool UPvr_GetMainActivityPauseStatus()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0x14E83C4", Offset = "0x14E83C4", VA = "0x14E83C4")]
		public static void UPvr_Sleep()
		{
		}

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0x14E84FC", Offset = "0x14E84FC", VA = "0x14E84FC")]
		public static bool UPvr_StartHomeKeyReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0x14E87F0", Offset = "0x14E87F0", VA = "0x14E87F0")]
		public static bool UPvr_StopHomeKeyReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0x14E8A9C", Offset = "0x14E8A9C", VA = "0x14E8A9C")]
		public static void UPvr_StartVRModel()
		{
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0x14E8BD4", Offset = "0x14E8BD4", VA = "0x14E8BD4")]
		public static void UPvr_RemovePlatformLogo()
		{
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0x14E8D0C", Offset = "0x14E8D0C", VA = "0x14E8D0C")]
		public static void UPvr_ShowPlatformLogo()
		{
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0x14E8E44", Offset = "0x14E8E44", VA = "0x14E8E44")]
		public static bool UPvr_IsPicoActivity()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0x14E8F80", Offset = "0x14E8F80", VA = "0x14E8F80")]
		public static void UPvr_StopVRModel()
		{
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0x14E90B8", Offset = "0x14E90B8", VA = "0x14E90B8")]
		public static string UPvr_GetCountryCode()
		{
			return null;
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0x14E91FC", Offset = "0x14E91FC", VA = "0x14E91FC")]
		public static bool UPvr_SetIPD(float distance)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0x14E9718", Offset = "0x14E9718", VA = "0x14E9718")]
		public static float UPvr_GetIPD()
		{
			return default(float);
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0x14E97E0", Offset = "0x14E97E0", VA = "0x14E97E0")]
		public static bool UPvr_SetTrackingIPDEnabled(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0x14E97E4", Offset = "0x14E97E4", VA = "0x14E97E4")]
		public static bool UPvr_GetTrackingIPDEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0x14E97E8", Offset = "0x14E97E8", VA = "0x14E97E8")]
		public static bool UPvr_GetEyeTrackingAutoIPD(ref float autoipd)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0x14E97EC", Offset = "0x14E97EC", VA = "0x14E97EC")]
		public static void UPvr_UnityEventData(long data)
		{
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0x14E97F0", Offset = "0x14E97F0", VA = "0x14E97F0")]
		public static long UPvr_GetEyeBufferData(int id)
		{
			return default(long);
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0x14E9884", Offset = "0x14E9884", VA = "0x14E9884")]
		public static bool UPvr_checkDevice(string packagename)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0x14E9A08", Offset = "0x14E9A08", VA = "0x14E9A08")]
		public static int UPvr_GetHmdHardwareVersion()
		{
			return default(int);
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0x14E9A0C", Offset = "0x14E9A0C", VA = "0x14E9A0C")]
		public static string UPvr_GetHmdFirmwareVersion()
		{
			return null;
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0x14E9AB4", Offset = "0x14E9AB4", VA = "0x14E9AB4")]
		public static string UPvr_GetHmdSerialNumber()
		{
			return null;
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0x14E9B5C", Offset = "0x14E9B5C", VA = "0x14E9B5C")]
		public static int UPvr_GetHmdBatteryStatus()
		{
			return default(int);
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0x14E9B60", Offset = "0x14E9B60", VA = "0x14E9B60")]
		public static float UPvr_GetHmdBatteryTemperature()
		{
			return default(float);
		}

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0x14E9B64", Offset = "0x14E9B64", VA = "0x14E9B64")]
		public static int UPvr_SetHmdAudioStatus(bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0x14E9B68", Offset = "0x14E9B68", VA = "0x14E9B68")]
		public static int UPvr_GetTrackingMode()
		{
			return default(int);
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0x14E9B6C", Offset = "0x14E9B6C", VA = "0x14E9B6C")]
		public static bool UPvr_setTrackingMode(int trackingMode)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0x14E9B70", Offset = "0x14E9B70", VA = "0x14E9B70")]
		public static bool UPvr_getEyeTrackingData(ref EyeTrackingData trackingData)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0x14E9E18", Offset = "0x14E9E18", VA = "0x14E9E18")]
		public static bool UPvr_getEyeTrackingGazeRay(ref EyeTrackingGazeRay gazeRay)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0x14EA0FC", Offset = "0x14EA0FC", VA = "0x14EA0FC")]
		public static bool UPvr_getEyeTrackingGazeRayWorld(ref EyeTrackingGazeRay gazeRay)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0x14EA478", Offset = "0x14EA478", VA = "0x14EA478")]
		public static Vector3 UPvr_getEyeTrackingPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0x14EA8D4", Offset = "0x14EA8D4", VA = "0x14EA8D4")]
		public static int UPvr_GetPhoneScreenBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0x14EAA0C", Offset = "0x14EAA0C", VA = "0x14EAA0C")]
		public static void UPvr_SetPhoneScreenBrightness(int level)
		{
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0x14EAB8C", Offset = "0x14EAB8C", VA = "0x14EAB8C")]
		public static bool UPvr_IsPicoDefaultActivity()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0x14EAFE0", Offset = "0x14EAFE0", VA = "0x14EAFE0")]
		public static bool UPvr_EnableSinglePass(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0x14EAFE4", Offset = "0x14EAFE4", VA = "0x14EAFE4")]
		public static void UPvr_SetAntiAliasing(int antiAliasing)
		{
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0x14EAFE8", Offset = "0x14EAFE8", VA = "0x14EAFE8")]
		public static void UPvr_SinglePassBeforeForwardOpaque()
		{
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0x14EAFEC", Offset = "0x14EAFEC", VA = "0x14EAFEC")]
		public static void UPvr_SetCurrentRenderTexture(uint textureId)
		{
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0x14EAFF0", Offset = "0x14EAFF0", VA = "0x14EAFF0")]
		public static bool UPvr_SetSinglePassDepthBufferWidthHeight(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0x14EAFF4", Offset = "0x14EAFF4", VA = "0x14EAFF4")]
		public static int UPVR_setPerformanceLevels(int cpuLevel, int gpuLevel)
		{
			return default(int);
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0x14EAFF8", Offset = "0x14EAFF8", VA = "0x14EAFF8")]
		public static int UPvr_GetColorRes(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0x14EB228", Offset = "0x14EB228", VA = "0x14EB228")]
		public static int UPvr_GetConfigInt(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0x14EB458", Offset = "0x14EB458", VA = "0x14EB458")]
		public static string UPvr_GetConfigString(string name)
		{
			return null;
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0x14EB694", Offset = "0x14EB694", VA = "0x14EB694")]
		public static string UPvr_GetDrawableLocation(string name)
		{
			return null;
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0x14EB8D0", Offset = "0x14EB8D0", VA = "0x14EB8D0")]
		public static int UPvr_GetTextSize(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0x14EBB00", Offset = "0x14EBB00", VA = "0x14EBB00")]
		public static string UPvr_GetLangString(string name)
		{
			return null;
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0x14EBD3C", Offset = "0x14EBD3C", VA = "0x14EBD3C")]
		public static string UPvr_GetStringValue(string id, int type)
		{
			return null;
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0x14EBFE8", Offset = "0x14EBFE8", VA = "0x14EBFE8")]
		public static int UPvr_GetIntValue(string id, int type)
		{
			return default(int);
		}

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0x14EC288", Offset = "0x14EC288", VA = "0x14EC288")]
		public static float UPvr_GetFloatValue(string id)
		{
			return default(float);
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0x14EC4BC", Offset = "0x14EC4BC", VA = "0x14EC4BC")]
		public static string UPvr_GetObjectOrArray(string id, int type)
		{
			return null;
		}

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0x14EC768", Offset = "0x14EC768", VA = "0x14EC768")]
		public static int UPvr_GetCharSpace(string id)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20003C8")]
	public struct BoundarySystem
	{
		[Token(Token = "0x20008AA")]
		public enum BoundaryType
		{
			[Token(Token = "0x40029A3")]
			OuterBoundary,
			[Token(Token = "0x40029A4")]
			PlayArea
		}

		[Token(Token = "0x20008AB")]
		public struct BoundaryTestResult
		{
			[Token(Token = "0x40029A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool IsTriggering;

			[Token(Token = "0x40029A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float ClosestDistance;

			[Token(Token = "0x40029A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 ClosestPoint;

			[Token(Token = "0x40029A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 ClosestPointNormal;
		}

		[Token(Token = "0x20008AC")]
		public enum BoundaryTrackingNode
		{
			[Token(Token = "0x40029AA")]
			HandLeft,
			[Token(Token = "0x40029AB")]
			HandRight,
			[Token(Token = "0x40029AC")]
			Head
		}

		[Token(Token = "0x20008AD")]
		public enum BoundaryTrackingState
		{
			[Token(Token = "0x40029AE")]
			PVR_NOREASON,
			[Token(Token = "0x40029AF")]
			PVRRELOCATION_IN_PROGRESS,
			[Token(Token = "0x40029B0")]
			PVRLOW_FEATURE_COUNT_ERROR,
			[Token(Token = "0x40029B1")]
			PVRLOW_LIGHT_ERROR,
			[Token(Token = "0x40029B2")]
			PVRBRIGHT_LIGHT_ERROR,
			[Token(Token = "0x40029B3")]
			PVRSTEREO_CAMERA_CALIBRATION_ERROR
		}

		[Token(Token = "0x4001C54")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x6001D46")]
		[Address(RVA = "0xD2AAB8", Offset = "0xD2AAB8", VA = "0xD2AAB8")]
		private static extern float Pvr_GetFloorHeight();

		[PreserveSig]
		[Token(Token = "0x6001D47")]
		[Address(RVA = "0xD2AB50", Offset = "0xD2AB50", VA = "0xD2AB50")]
		private static extern int Pvr_GetSeeThroughState();

		[PreserveSig]
		[Token(Token = "0x6001D48")]
		[Address(RVA = "0xD2ABE8", Offset = "0xD2ABE8", VA = "0xD2ABE8")]
		private static extern void Pvr_BoundarySetSTBackground(bool value);

		[PreserveSig]
		[Token(Token = "0x6001D49")]
		[Address(RVA = "0xD2AC88", Offset = "0xD2AC88", VA = "0xD2AC88")]
		private static extern int Pvr_GetTrackingState();

		[PreserveSig]
		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0xD2AD20", Offset = "0xD2AD20", VA = "0xD2AD20")]
		private static extern bool Pvr_GetFrameRateLimit();

		[PreserveSig]
		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0xD2ADC0", Offset = "0xD2ADC0", VA = "0xD2ADC0")]
		private static extern bool Pvr_IsBoundaryEnable();

		[PreserveSig]
		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0xD2AE60", Offset = "0xD2AE60", VA = "0xD2AE60")]
		private static extern bool Pvr_BoundaryGetConfigured();

		[PreserveSig]
		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0xD2AF00", Offset = "0xD2AF00", VA = "0xD2AF00")]
		private static extern bool Pvr_BoundaryTestNode(int node, bool isPlayArea, ref bool isTriggering, ref float closestDistance, ref float px, ref float py, ref float pz, ref float nx, ref float ny, ref float nz);

		[PreserveSig]
		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0xD2B010", Offset = "0xD2B010", VA = "0xD2B010")]
		private static extern bool Pvr_BoundaryTestPoint(float x, float y, float z, bool isPlayArea, ref bool isTriggering, ref float closestDistance, ref float px, ref float py, ref float pz, ref float nx, ref float ny, ref float nz);

		[PreserveSig]
		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0xD2B148", Offset = "0xD2B148", VA = "0xD2B148")]
		private static extern int Pvr_BoundaryGetGeometry(out IntPtr handle, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x6001D50")]
		[Address(RVA = "0xD2B1F0", Offset = "0xD2B1F0", VA = "0xD2B1F0")]
		private static extern int Pvr_BoundaryGetDimensions(ref float x, ref float y, ref float z, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x6001D51")]
		[Address(RVA = "0xD2B2A8", Offset = "0xD2B2A8", VA = "0xD2B2A8")]
		private static extern bool Pvr_BoundaryGetEnabled();

		[PreserveSig]
		[Token(Token = "0x6001D52")]
		[Address(RVA = "0xD2B348", Offset = "0xD2B348", VA = "0xD2B348")]
		private static extern void Pvr_BoundarySetVisible(bool value);

		[PreserveSig]
		[Token(Token = "0x6001D53")]
		[Address(RVA = "0xD2B3E8", Offset = "0xD2B3E8", VA = "0xD2B3E8")]
		private static extern bool Pvr_BoundaryGetVisible();

		[PreserveSig]
		[Token(Token = "0x6001D54")]
		[Address(RVA = "0xD2B488", Offset = "0xD2B488", VA = "0xD2B488")]
		private static extern bool Pvr_EnableLWRP(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001D55")]
		[Address(RVA = "0xD2B530", Offset = "0xD2B530", VA = "0xD2B530")]
		private static extern bool Pvr_SetViewportSize(int w, int h);

		[PreserveSig]
		[Token(Token = "0x6001D56")]
		[Address(RVA = "0xD2B5E0", Offset = "0xD2B5E0", VA = "0xD2B5E0")]
		private static extern void Pvr_BoundarySetSeeThroughVisible(bool value);

		[PreserveSig]
		[Token(Token = "0x6001D57")]
		[Address(RVA = "0xD2B680", Offset = "0xD2B680", VA = "0xD2B680")]
		private static extern void PVR_SetCameraImageRect(int width, int height);

		[PreserveSig]
		[Token(Token = "0x6001D58")]
		[Address(RVA = "0xD2B728", Offset = "0xD2B728", VA = "0xD2B728")]
		private static extern void Pvr_SetGuardianSystemDisable(bool value);

		[PreserveSig]
		[Token(Token = "0x6001D59")]
		[Address(RVA = "0xD2B7C8", Offset = "0xD2B7C8", VA = "0xD2B7C8")]
		private static extern int Pvr_GetDialogState();

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0xD2B860", Offset = "0xD2B860", VA = "0xD2B860")]
		public static float UPvr_GetFloorHeight()
		{
			return default(float);
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0xD2B864", Offset = "0xD2B864", VA = "0xD2B864")]
		public static int UPvr_GetSeeThroughState()
		{
			return default(int);
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0xD2B868", Offset = "0xD2B868", VA = "0xD2B868")]
		public static void UPvr_EnableSeeThroughManual(bool enable)
		{
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0xD2B86C", Offset = "0xD2B86C", VA = "0xD2B86C")]
		public static BoundaryTrackingState UPvr_GetTrackingState()
		{
			return default(BoundaryTrackingState);
		}

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0xD2B870", Offset = "0xD2B870", VA = "0xD2B870")]
		public static bool UPvr_GetFrameRateLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0xD2B874", Offset = "0xD2B874", VA = "0xD2B874")]
		public static bool UPvr_IsBoundaryEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0xD2B878", Offset = "0xD2B878", VA = "0xD2B878")]
		public static bool UPvr_BoundaryGetConfigured()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0xD2B87C", Offset = "0xD2B87C", VA = "0xD2B87C")]
		public static BoundaryTestResult UPvr_BoundaryTestNode(BoundaryTrackingNode node, BoundaryType boundaryType)
		{
			return default(BoundaryTestResult);
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0xD2B9F4", Offset = "0xD2B9F4", VA = "0xD2B9F4")]
		public static BoundaryTestResult UPvr_BoundaryTestPoint(Vector3 point, BoundaryType boundaryType)
		{
			return default(BoundaryTestResult);
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0xD2BB80", Offset = "0xD2BB80", VA = "0xD2BB80")]
		public static Vector3[] UPvr_BoundaryGetGeometry(BoundaryType boundaryType)
		{
			return null;
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0xD2BDEC", Offset = "0xD2BDEC", VA = "0xD2BDEC")]
		public static Vector3 UPvr_BoundaryGetDimensions(BoundaryType boundaryType)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0xD2BE54", Offset = "0xD2BE54", VA = "0xD2BE54")]
		public static bool UPvr_BoundaryGetEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0xD2BE58", Offset = "0xD2BE58", VA = "0xD2BE58")]
		public static void UPvr_BoundarySetVisible(bool value)
		{
		}

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0xD2BE5C", Offset = "0xD2BE5C", VA = "0xD2BE5C")]
		public static bool UPvr_BoundaryGetVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0xD2BE60", Offset = "0xD2BE60", VA = "0xD2BE60")]
		public static bool UPvr_EnableLWRP(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0xD2BE64", Offset = "0xD2BE64", VA = "0xD2BE64")]
		public static bool UPvr_SetViewportSize(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0xD2BE68", Offset = "0xD2BE68", VA = "0xD2BE68")]
		public static void UPvr_StartCameraFrame()
		{
		}

		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0xD2BFD4", Offset = "0xD2BFD4", VA = "0xD2BFD4")]
		public static void UPvr_StopCameraFrame()
		{
		}

		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0xD2C140", Offset = "0xD2C140", VA = "0xD2C140")]
		public static void UPvr_BoundaryGetSeeThroughData(int cameraIndex, RenderTexture renderTexture)
		{
		}

		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0xD2C378", Offset = "0xD2C378", VA = "0xD2C378")]
		public static void UPvr_BoundarySetCameraImageRect(int width, int height)
		{
		}

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0xD2C4C0", Offset = "0xD2C4C0", VA = "0xD2C4C0")]
		public static void UPvr_BoundarySetSeeThroughVisible(bool value)
		{
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0xD2C600", Offset = "0xD2C600", VA = "0xD2C600")]
		public static void UPvr_SetGuardianSystemDisable(bool value)
		{
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0xD2C740", Offset = "0xD2C740", VA = "0xD2C740")]
		public static int UPvr_GetDialogState()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20003C9")]
	public struct PlatformSettings
	{
		[Token(Token = "0x6001D71")]
		[Address(RVA = "0x14E1CA4", Offset = "0x14E1CA4", VA = "0x14E1CA4")]
		public static Pvr_UnitySDKPlatformSetting.simulationType UPvr_IsCurrentDeviceValid()
		{
			return default(Pvr_UnitySDKPlatformSetting.simulationType);
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0x14E208C", Offset = "0x14E208C", VA = "0x14E208C")]
		public static bool UPvr_AppEntitlementCheck(string appid)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0x14E2478", Offset = "0x14E2478", VA = "0x14E2478")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3ACA70", Offset = "0x3ACA70")]
		public static bool UPvr_KeyEntitlementCheck(string publicKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0x14E27BC", Offset = "0x14E27BC", VA = "0x14E27BC")]
		public static int UPvr_AppEntitlementCheckExtra(string appid)
		{
			return default(int);
		}

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0x14E2B14", Offset = "0x14E2B14", VA = "0x14E2B14")]
		public static int UPvr_KeyEntitlementCheckExtra(string publicKey)
		{
			return default(int);
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0x14E2E6C", Offset = "0x14E2E6C", VA = "0x14E2E6C")]
		public static int UPvr_GetHmdAudioStatus()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20003CA")]
	public enum DeviceCommand
	{
		[Token(Token = "0x4001C56")]
		SET_PICO_NEO_HMD_BRIGHTNESS = 12,
		[Token(Token = "0x4001C57")]
		SET_PICO_NEO_HMD_SLEEPDELAY
	}
	[Token(Token = "0x20003CB")]
	public enum BrightnessLevel
	{
		[Token(Token = "0x4001C59")]
		VR_BRIGHTNESS_LEVEL_MIN = 1,
		[Token(Token = "0x4001C5A")]
		VR_BRIGHTNESS_LEVEL_MAX = 100,
		[Token(Token = "0x4001C5B")]
		VR_BRIGHTNESS_LEVEL_DOWN = 1000,
		[Token(Token = "0x4001C5C")]
		VR_BRIGHTNESS_LEVEL_UP = 1001,
		[Token(Token = "0x4001C5D")]
		VR_BRIGHTNESS_LEVEL_SCREEN_OFF = -100
	}
	[Token(Token = "0x20003CC")]
	public struct VolumePowerBrightness
	{
		[Token(Token = "0x4001C5E")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AndroidJavaObject activity;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AndroidJavaClass javaSysActivityClass;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static AndroidJavaClass batteryjavaVrActivityClass;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaClass volumejavaVrActivityClass;

		[PreserveSig]
		[Token(Token = "0x6001D77")]
		[Address(RVA = "0x14EEEF8", Offset = "0x14EEEF8", VA = "0x14EEEF8")]
		public static extern void Pvr_SetInitActivity(IntPtr activity, IntPtr vrActivityClass);

		[PreserveSig]
		[Token(Token = "0x6001D78")]
		[Address(RVA = "0x14EEFA0", Offset = "0x14EEFA0", VA = "0x14EEFA0")]
		private static extern bool Pvr_IsHmdExist();

		[PreserveSig]
		[Token(Token = "0x6001D79")]
		[Address(RVA = "0x14EF040", Offset = "0x14EF040", VA = "0x14EF040")]
		private static extern int Pvr_GetHmdScreenBrightness();

		[PreserveSig]
		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0x14EF0D8", Offset = "0x14EF0D8", VA = "0x14EF0D8")]
		private static extern bool Pvr_SetHmdScreenBrightness(int brightness);

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0x14EF180", Offset = "0x14EF180", VA = "0x14EF180")]
		public static bool UPvr_IsHmdExist()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0x14EF184", Offset = "0x14EF184", VA = "0x14EF184")]
		public static int UPvr_GetHmdScreenBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0x14EF188", Offset = "0x14EF188", VA = "0x14EF188")]
		public static bool UPvr_SetHmdScreenBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0x14EF18C", Offset = "0x14EF18C", VA = "0x14EF18C")]
		public static bool UPvr_SetCommonBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0x14EF46C", Offset = "0x14EF46C", VA = "0x14EF46C")]
		public static int UPvr_GetCommonBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0x14EF6E8", Offset = "0x14EF6E8", VA = "0x14EF6E8")]
		public static int[] UPvr_GetScreenBrightnessLevel()
		{
			return null;
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0x14EF938", Offset = "0x14EF938", VA = "0x14EF938")]
		public static void UPvr_SetScreenBrightnessLevel(int vrBrightness, int level)
		{
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0x14EFBA8", Offset = "0x14EFBA8", VA = "0x14EFBA8")]
		public static bool UPvr_SetDevicePropForUser(DeviceCommand deviceid, string number)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0x14EFD4C", Offset = "0x14EFD4C", VA = "0x14EFD4C")]
		public static string UPvr_GetDevicePropForUser(DeviceCommand deviceid)
		{
			return null;
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0x14EFEB0", Offset = "0x14EFEB0", VA = "0x14EFEB0")]
		public static bool UPvr_InitBatteryClass()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0x14F0120", Offset = "0x14F0120", VA = "0x14F0120")]
		public static bool UPvr_InitBatteryVolClass()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0x14F0474", Offset = "0x14F0474", VA = "0x14F0474")]
		public static bool UPvr_StartBatteryReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0x14F06FC", Offset = "0x14F06FC", VA = "0x14F06FC")]
		public static bool UPvr_StopBatteryReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0x14EF1BC", Offset = "0x14EF1BC", VA = "0x14EF1BC")]
		public static bool UPvr_SetBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D89")]
		[Address(RVA = "0x14EF490", Offset = "0x14EF490", VA = "0x14EF490")]
		public static int UPvr_GetCurrentBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0x14EF6EC", Offset = "0x14EF6EC", VA = "0x14EF6EC")]
		public static int[] Pvr_GetScreenBrightnessLevel()
		{
			return null;
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0x14EF93C", Offset = "0x14EF93C", VA = "0x14EF93C")]
		public static void Pvr_SetScreenBrightnessLevel(int vrBrightness, int level)
		{
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0x14F0934", Offset = "0x14F0934", VA = "0x14F0934")]
		public static bool UPvr_StartAudioReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0x14F0BBC", Offset = "0x14F0BBC", VA = "0x14F0BBC")]
		public static bool UPvr_StopAudioReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0x14F0DF4", Offset = "0x14F0DF4", VA = "0x14F0DF4")]
		public static int UPvr_GetMaxVolumeNumber()
		{
			return default(int);
		}

		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0x14F102C", Offset = "0x14F102C", VA = "0x14F102C")]
		public static int UPvr_GetCurrentVolumeNumber()
		{
			return default(int);
		}

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0x14F1264", Offset = "0x14F1264", VA = "0x14F1264")]
		public static bool UPvr_VolumeUp()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0x14F147C", Offset = "0x14F147C", VA = "0x14F147C")]
		public static bool UPvr_VolumeDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0x14F1694", Offset = "0x14F1694", VA = "0x14F1694")]
		public static bool UPvr_SetVolumeNum(int volume)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D93")]
		[Address(RVA = "0x14F18A8", Offset = "0x14F18A8", VA = "0x14F18A8")]
		public static bool UPvr_SetAudio(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D94")]
		[Address(RVA = "0x14F18B0", Offset = "0x14F18B0", VA = "0x14F18B0")]
		public static bool UPvr_SetBattery(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D95")]
		[Address(RVA = "0x14EFD50", Offset = "0x14EFD50", VA = "0x14EFD50")]
		private static string getDevicePropForUser(DeviceCommand deviceid)
		{
			return null;
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0x14EFBAC", Offset = "0x14EFBAC", VA = "0x14EFBAC")]
		private static bool setDevicePropForUser(DeviceCommand deviceid, string number)
		{
			return default(bool);
		}
	}
}
namespace Pvr_UnitySDKAPI.Achievement
{
	[Token(Token = "0x20003CD")]
	public sealed class AchievementCore
	{
		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool IsPlatformInitialized;

		[Token(Token = "0x4001C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool LogMessages;

		[Token(Token = "0x6001D97")]
		[Address(RVA = "0xD23314", Offset = "0xD23314", VA = "0xD23314")]
		public static bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0xD2338C", Offset = "0xD2338C", VA = "0xD2338C")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001D99")]
		[Address(RVA = "0xD23390", Offset = "0xD23390", VA = "0xD23390")]
		public static void RegisterNetwork()
		{
		}

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0xD23580", Offset = "0xD23580", VA = "0xD23580")]
		public static void UnRegisterNetwork()
		{
		}

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0xD2373C", Offset = "0xD2373C", VA = "0xD2373C")]
		public AchievementCore()
		{
		}
	}
	[Token(Token = "0x20003CE")]
	public static class Achievements
	{
		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0xD237B0", Offset = "0xD237B0", VA = "0xD237B0")]
		public static Pvr_Request<Pvr_AchievementUpdate> Init()
		{
			return null;
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0xD23F54", Offset = "0xD23F54", VA = "0xD23F54")]
		public static Pvr_Request<Pvr_AchievementUpdate> AddCount(string name, long count)
		{
			return null;
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0xD242B8", Offset = "0xD242B8", VA = "0xD242B8")]
		public static Pvr_Request<Pvr_AchievementUpdate> AddFields(string name, string fields)
		{
			return null;
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0xD245E8", Offset = "0xD245E8", VA = "0xD245E8")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetAllDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0xD24924", Offset = "0xD24924", VA = "0xD24924")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetAllProgress()
		{
			return null;
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0xD24BAC", Offset = "0xD24BAC", VA = "0xD24BAC")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetDefinitionsByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0xD24EE8", Offset = "0xD24EE8", VA = "0xD24EE8")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetProgressByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0xD251C4", Offset = "0xD251C4", VA = "0xD251C4")]
		public static Pvr_Request<Pvr_AchievementUpdate> Unlock(string name)
		{
			return null;
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0xD254A0", Offset = "0xD254A0", VA = "0xD254A0")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetNextAchievementDefinitionListPage(Pvr_AchievementDefinitionList list)
		{
			return null;
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0xD25954", Offset = "0xD25954", VA = "0xD25954")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetNextAchievementProgressListPage(Pvr_AchievementProgressList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20003CF")]
	public enum AchievementType
	{
		[Token(Token = "0x4001C66")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A25B8", Offset = "0x3A25B8")]
		Unknown,
		[Token(Token = "0x4001C67")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A25EC", Offset = "0x3A25EC")]
		Simple,
		[Token(Token = "0x4001C68")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A2620", Offset = "0x3A2620")]
		Bitfield,
		[Token(Token = "0x4001C69")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A2654", Offset = "0x3A2654")]
		Count
	}
	[Token(Token = "0x20003D0")]
	public class Pvr_AchievementAPI
	{
		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaClass achievementAPI;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static AndroidJavaClass definitionArrayHandle;

		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaClass definitionHandle;

		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static AndroidJavaClass progressArrayHandle;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass progressHandle;

		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static AndroidJavaClass updateHandle;

		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaObject errorHandle;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static AndroidJavaObject unityInterface;

		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static string openId;

		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static string accessToken;

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static string appId;

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0xD2390C", Offset = "0xD2390C", VA = "0xD2390C")]
		internal static long Init()
		{
			return default(long);
		}

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0xD23400", Offset = "0xD23400", VA = "0xD23400")]
		internal static void RegisterNetwork()
		{
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0xD235F0", Offset = "0xD235F0", VA = "0xD235F0")]
		internal static void UnRegisterNetwork()
		{
		}

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0xD26504", Offset = "0xD26504", VA = "0xD26504")]
		internal static AndroidJavaObject PopMessage()
		{
			return null;
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0xD2665C", Offset = "0xD2665C", VA = "0xD2665C")]
		internal static string pvr_Error_GetMessage(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0xD26780", Offset = "0xD26780", VA = "0xD26780")]
		internal static int pvr_Error_GetHttpCode(AndroidJavaObject popMessage)
		{
			return default(int);
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0xD268A4", Offset = "0xD268A4", VA = "0xD268A4")]
		internal static int pvr_Error_GetCode(AndroidJavaObject popMessage)
		{
			return default(int);
		}

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0xD240C8", Offset = "0xD240C8", VA = "0xD240C8")]
		internal static long pvr_Achievements_AddCount(string name, long count)
		{
			return default(long);
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0xD24424", Offset = "0xD24424", VA = "0xD24424")]
		internal static long pvr_Achievements_AddFields(string name, string fields)
		{
			return default(long);
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0xD24744", Offset = "0xD24744", VA = "0xD24744")]
		internal static long pvr_Achievements_GetAllDefinitions()
		{
			return default(long);
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0xD24A80", Offset = "0xD24A80", VA = "0xD24A80")]
		internal static long pvr_Achievements_GetAllProgress()
		{
			return default(long);
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0xD24D10", Offset = "0xD24D10", VA = "0xD24D10")]
		internal static long pvr_Achievements_GetDefinitionsByName(string[] names, int v)
		{
			return default(long);
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0xD2504C", Offset = "0xD2504C", VA = "0xD2504C")]
		internal static long pvr_Achievements_GetProgressByName(string[] names, int v)
		{
			return default(long);
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0xD25328", Offset = "0xD25328", VA = "0xD25328")]
		internal static long pvr_Achievements_Unlock(string name)
		{
			return default(long);
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0xD25694", Offset = "0xD25694", VA = "0xD25694")]
		internal static long pvr_HTTP_GetWithMessageType(string nextUrl, Pvr_Message.MessageType messageType)
		{
			return default(long);
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0xD269C8", Offset = "0xD269C8", VA = "0xD269C8")]
		internal static long pvr_Message_GetType(AndroidJavaObject popMessage)
		{
			return default(long);
		}

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0xD26BC4", Offset = "0xD26BC4", VA = "0xD26BC4")]
		internal static bool pvr_Message_IsError(AndroidJavaObject popMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0xD26CE8", Offset = "0xD26CE8", VA = "0xD26CE8")]
		internal static long pvr_Message_GetRequestID(AndroidJavaObject popMessage)
		{
			return default(long);
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0xD263E0", Offset = "0xD263E0", VA = "0xD263E0")]
		internal static string pvr_Message_GetString(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0xD26E0C", Offset = "0xD26E0C", VA = "0xD26E0C")]
		internal static bool pvr_AchievementUpdate_GetJustUnlocked(AndroidJavaObject popMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0xD26F30", Offset = "0xD26F30", VA = "0xD26F30")]
		internal static string pvr_AchievementUpdate_GetName(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0xD27054", Offset = "0xD27054", VA = "0xD27054")]
		internal static int pvr_AchievementProgressArray_GetSize(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0xD27178", Offset = "0xD27178", VA = "0xD27178")]
		internal static AndroidJavaObject pvr_AchievementProgressArray_GetElement(AndroidJavaObject msg, int index)
		{
			return null;
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0xD27310", Offset = "0xD27310", VA = "0xD27310")]
		internal static string pvr_AchievementProgressArray_GetNextUrl(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0xD27434", Offset = "0xD27434", VA = "0xD27434")]
		internal static string pvr_AchievementProgress_GetBitfield(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0xD27558", Offset = "0xD27558", VA = "0xD27558")]
		internal static long pvr_AchievementProgress_GetCount(AndroidJavaObject msg)
		{
			return default(long);
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0xD2767C", Offset = "0xD2767C", VA = "0xD2767C")]
		internal static bool pvr_AchievementProgress_GetIsUnlocked(AndroidJavaObject msg)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0xD277A0", Offset = "0xD277A0", VA = "0xD277A0")]
		internal static string pvr_AchievementProgress_GetName(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0xD278C4", Offset = "0xD278C4", VA = "0xD278C4")]
		internal static DateTime pvr_AchievementProgress_GetUnlockTime(AndroidJavaObject msg)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0xD27A38", Offset = "0xD27A38", VA = "0xD27A38")]
		internal static DateTime DateTimeFromNative(long seconds_since_the_one_true_epoch)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0xD27AD4", Offset = "0xD27AD4", VA = "0xD27AD4")]
		internal static int pvr_AchievementDefinitionArray_GetSize(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0xD27BF8", Offset = "0xD27BF8", VA = "0xD27BF8")]
		internal static AndroidJavaObject pvr_AchievementDefinitionArray_GetElement(AndroidJavaObject msg, int index)
		{
			return null;
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0xD27D90", Offset = "0xD27D90", VA = "0xD27D90")]
		internal static string pvr_AchievementDefinitionArray_GetNextUrl(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0xD27EB4", Offset = "0xD27EB4", VA = "0xD27EB4")]
		internal static AchievementType pvr_AchievementDefinition_GetType(AndroidJavaObject msg)
		{
			return default(AchievementType);
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0xD280BC", Offset = "0xD280BC", VA = "0xD280BC")]
		internal static string pvr_AchievementDefinition_GetName(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0xD281E0", Offset = "0xD281E0", VA = "0xD281E0")]
		internal static int pvr_AchievementDefinition_GetBitfieldLength(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0xD28304", Offset = "0xD28304", VA = "0xD28304")]
		internal static long pvr_AchievementDefinition_GetTarget(AndroidJavaObject msg)
		{
			return default(long);
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0xD28428", Offset = "0xD28428", VA = "0xD28428")]
		internal static string pvr_AchievementDefinition_GetTitle(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0xD2854C", Offset = "0xD2854C", VA = "0xD2854C")]
		internal static string pvr_AchievementDefinition_GetUnlockedDescription(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0xD28670", Offset = "0xD28670", VA = "0xD28670")]
		internal static string pvr_AchievementDefinition_GetLockedIcon(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0xD28794", Offset = "0xD28794", VA = "0xD28794")]
		internal static bool pvr_AchievementDefinition_GetIsSecrect(AndroidJavaObject msg)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0xD288B8", Offset = "0xD288B8", VA = "0xD288B8")]
		internal static string pvr_AchievementDefinition_GetUnlockedIcon(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0xD289DC", Offset = "0xD289DC", VA = "0xD289DC")]
		internal static string pvr_AchievementDefinition_GetDescription(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0xD28B00", Offset = "0xD28B00", VA = "0xD28B00")]
		public Pvr_AchievementAPI()
		{
		}
	}
	[Token(Token = "0x20003D1")]
	public class Pvr_AchievementDefinition
	{
		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly AchievementType Type;

		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string Name;

		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int BitfieldLength;

		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly long Target;

		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Title;

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly string Description;

		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string UnlockedDescription;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public readonly string UnlockedIcon;

		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string LockedIcon;

		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public readonly bool IsSecrect;

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0xD28E80", Offset = "0xD28E80", VA = "0xD28E80")]
		public Pvr_AchievementDefinition(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20003D2")]
	public class Pvr_AchievementDefinitionList : Pvr_DeserializableList<Pvr_AchievementDefinition>
	{
		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0xD25C8C", Offset = "0xD25C8C", VA = "0xD25C8C")]
		public Pvr_AchievementDefinitionList(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20003D3")]
	public class Pvr_AchievementProgress
	{
		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string Bitfield;

		[Token(Token = "0x4001C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly long Count;

		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly bool IsUnlocked;

		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly string Name;

		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly DateTime UnlockTime;

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0xD28F78", Offset = "0xD28F78", VA = "0xD28F78")]
		public Pvr_AchievementProgress(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20003D4")]
	public class Pvr_AchievementProgressList : Pvr_DeserializableList<Pvr_AchievementProgress>
	{
		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0xD25F58", Offset = "0xD25F58", VA = "0xD25F58")]
		public Pvr_AchievementProgressList(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20003D5")]
	public class Pvr_AchievementUpdate
	{
		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool JustUnlocked;

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string Name;

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0xD26224", Offset = "0xD26224", VA = "0xD26224")]
		public Pvr_AchievementUpdate(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20003D6")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x39ACBC", Offset = "0x39ACBC")]
	public class Pvr_DeserializableList<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<T> data;

		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string nextUrl;

		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string previousUrl;

		[Token(Token = "0x1700033F")]
		public int Count
		{
			[Token(Token = "0x6001DD9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000340")]
		private bool System.Collections.Generic.ICollection<T>.IsReadOnly
		{
			[Token(Token = "0x6001DDA")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000341")]
		public T Item
		{
			[Token(Token = "0x6001DDC")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6001DDD")]
			set
			{
			}
		}

		[Token(Token = "0x17000342")]
		public bool HasNextPage
		{
			[Token(Token = "0x6001DE8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000343")]
		public bool HasPreviousPage
		{
			[Token(Token = "0x6001DE9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000344")]
		public string NextUrl
		{
			[Token(Token = "0x6001DEA")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000345")]
		public string PreviousUrl
		{
			[Token(Token = "0x6001DEB")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DDB")]
		public int IndexOf(T obj)
		{
			return default(int);
		}

		[Token(Token = "0x6001DDE")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x6001DDF")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001DE0")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DE1")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6001DE2")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001DE3")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x6001DE4")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DE5")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x6001DE6")]
		private IEnumerator GetEnumerator1()
		{
			return null;
		}

		[Token(Token = "0x6001DE7")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001DEC")]
		public Pvr_DeserializableList()
		{
		}
	}
	[Token(Token = "0x20003D7")]
	public static class Pvr_Callback
	{
		[Token(Token = "0x20008AE")]
		private class RequestCallback
		{
			[Token(Token = "0x40029B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private Pvr_Message.Callback messageCallback;

			[Token(Token = "0x6003734")]
			[Address(RVA = "0xD297E8", Offset = "0xD297E8", VA = "0xD297E8")]
			public RequestCallback()
			{
			}

			[Token(Token = "0x6003735")]
			[Address(RVA = "0xD297F0", Offset = "0xD297F0", VA = "0xD297F0")]
			public RequestCallback(Pvr_Message.Callback callback)
			{
			}

			[Token(Token = "0x6003736")]
			[Address(RVA = "0xD29810", Offset = "0xD29810", VA = "0xD29810", Slot = "4")]
			public virtual void HandleMessage(Pvr_Message msg)
			{
			}
		}

		[Token(Token = "0x20008AF")]
		private sealed class RequestCallback<T> : RequestCallback
		{
			[Token(Token = "0x40029B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Pvr_Message<T>.Callback callback;

			[Token(Token = "0x6003737")]
			public RequestCallback(Pvr_Message<T>.Callback callback)
			{
			}

			[Token(Token = "0x6003738")]
			public override void HandleMessage(Pvr_Message msg)
			{
			}
		}

		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<long, Request> requestIDsToRequests;

		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static Dictionary<Pvr_Message.MessageType, RequestCallback> notificationCallbacks;

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0xD29044", Offset = "0xD29044", VA = "0xD29044")]
		internal static void AddRequest(Request request)
		{
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0xD29248", Offset = "0xD29248", VA = "0xD29248")]
		internal static void RunCallbacks()
		{
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0xD295AC", Offset = "0xD295AC", VA = "0xD295AC")]
		internal static void RunLimitedCallbacks(uint limit)
		{
		}

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0xD29658", Offset = "0xD29658", VA = "0xD29658")]
		internal static void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0xD29350", Offset = "0xD29350", VA = "0xD29350")]
		internal static void HandleMessage(Pvr_Message msg)
		{
		}
	}
	[Token(Token = "0x20003D8")]
	public class Pvr_CallbackRunner : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool IsPersistantBetweenSceneLoads;

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0xD29C4C", Offset = "0xD29C4C", VA = "0xD29C4C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0xD29D74", Offset = "0xD29D74", VA = "0xD29D74")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0xD29E20", Offset = "0xD29E20", VA = "0xD29E20")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0xD29E90", Offset = "0xD29E90", VA = "0xD29E90")]
		public Pvr_CallbackRunner()
		{
		}
	}
	[Token(Token = "0x20003D9")]
	public abstract class Pvr_Message<T> : Pvr_Message
	{
		[Token(Token = "0x20008B0")]
		public new delegate void Callback(Pvr_Message<T> message);

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T data;

		[Token(Token = "0x17000346")]
		public T Data
		{
			[Token(Token = "0x6001DF8")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6001DF7")]
		public Pvr_Message(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6001DF9")]
		protected abstract T GetDataFromMessage(AndroidJavaObject msg);
	}
	[Token(Token = "0x20003DA")]
	public class Pvr_Message
	{
		[Token(Token = "0x20008B1")]
		public delegate void Callback(Pvr_Message message);

		[Token(Token = "0x20008B2")]
		public enum MessageType : uint
		{
			[Token(Token = "0x40029B7")]
			Unknown = 0u,
			[Token(Token = "0x40029B8")]
			Achievements_AddCount = 65495601u,
			[Token(Token = "0x40029B9")]
			Achievements_AddFields = 346693929u,
			[Token(Token = "0x40029BA")]
			Achievements_GetAllDefinitions = 64177549u,
			[Token(Token = "0x40029BB")]
			Achievements_GetAllProgress = 1335877149u,
			[Token(Token = "0x40029BC")]
			Achievements_GetDefinitionsByName = 1653670332u,
			[Token(Token = "0x40029BD")]
			Achievements_GetNextAchievementDefinitionArrayPage = 712888917u,
			[Token(Token = "0x40029BE")]
			Achievements_GetNextAchievementProgressArrayPage = 792913703u,
			[Token(Token = "0x40029BF")]
			Achievements_GetProgressByName = 354837425u,
			[Token(Token = "0x40029C0")]
			Achievements_Unlock = 1497156573u,
			[Token(Token = "0x40029C1")]
			Achievements_WriteAchievementProgress = 121027549u,
			[Token(Token = "0x40029C2")]
			Achievements_VerifyAccessToken = 53284924u
		}

		[Token(Token = "0x20008B3")]
		internal delegate Pvr_Message ExtraMessageTypesHandler(AndroidJavaObject messageHandle, MessageType message_type);

		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private MessageType type;

		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private long requestID;

		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Error error;

		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A2688", Offset = "0x3A2688")]
		private static ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField;

		[Token(Token = "0x17000347")]
		public MessageType Type
		{
			[Token(Token = "0x6001DFB")]
			[Address(RVA = "0xD2A0C8", Offset = "0xD2A0C8", VA = "0xD2A0C8")]
			get
			{
				return default(MessageType);
			}
		}

		[Token(Token = "0x17000348")]
		public bool IsError
		{
			[Token(Token = "0x6001DFC")]
			[Address(RVA = "0xD2A0D0", Offset = "0xD2A0D0", VA = "0xD2A0D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000349")]
		public long RequestID
		{
			[Token(Token = "0x6001DFD")]
			[Address(RVA = "0xD2A0E0", Offset = "0xD2A0E0", VA = "0xD2A0E0")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x1700034A")]
		internal static ExtraMessageTypesHandler HandleExtraMessageTypes
		{
			[Token(Token = "0x6001E06")]
			[Address(RVA = "0xD2A314", Offset = "0xD2A314", VA = "0xD2A314")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACAB4", Offset = "0x3ACAB4")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6001E05")]
			[Address(RVA = "0xD2A2B8", Offset = "0xD2A2B8", VA = "0xD2A2B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACAA4", Offset = "0x3ACAA4")]
			set
			{
			}
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0xD29EA0", Offset = "0xD29EA0", VA = "0xD29EA0")]
		public Pvr_Message(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0xD2A0E8", Offset = "0xD2A0E8", VA = "0xD2A0E8", Slot = "4")]
		public virtual Error GetError()
		{
			return null;
		}

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0xD2A0F0", Offset = "0xD2A0F0", VA = "0xD2A0F0", Slot = "5")]
		public virtual Pvr_AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0xD2A0F8", Offset = "0xD2A0F8", VA = "0xD2A0F8", Slot = "6")]
		public virtual Pvr_AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0xD2A100", Offset = "0xD2A100", VA = "0xD2A100", Slot = "7")]
		public virtual Pvr_AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0xD2A108", Offset = "0xD2A108", VA = "0xD2A108", Slot = "8")]
		public virtual string GetString()
		{
			return null;
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0xD2A110", Offset = "0xD2A110", VA = "0xD2A110")]
		internal static Pvr_Message ParseMessageHandle(AndroidJavaObject messageHandle)
		{
			return null;
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0xD292DC", Offset = "0xD292DC", VA = "0xD292DC")]
		public static Pvr_Message PopMessage()
		{
			return null;
		}
	}
	[Token(Token = "0x20003DB")]
	public class MessageWithAchievementDefinitions : Pvr_Message<Pvr_AchievementDefinitionList>
	{
		[Token(Token = "0x6001E07")]
		[Address(RVA = "0xD25B78", Offset = "0xD25B78", VA = "0xD25B78")]
		public MessageWithAchievementDefinitions(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6001E08")]
		[Address(RVA = "0xD25BDC", Offset = "0xD25BDC", VA = "0xD25BDC", Slot = "5")]
		public override Pvr_AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0xD25C24", Offset = "0xD25C24", VA = "0xD25C24", Slot = "9")]
		protected override Pvr_AchievementDefinitionList GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x20003DC")]
	public class MessageWithAchievementProgressList : Pvr_Message<Pvr_AchievementProgressList>
	{
		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0xD25E44", Offset = "0xD25E44", VA = "0xD25E44")]
		public MessageWithAchievementProgressList(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0xD25EA8", Offset = "0xD25EA8", VA = "0xD25EA8", Slot = "6")]
		public override Pvr_AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0xD25EF0", Offset = "0xD25EF0", VA = "0xD25EF0", Slot = "9")]
		protected override Pvr_AchievementProgressList GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x20003DD")]
	public class MessageWithAchievementUpdate : Pvr_Message<Pvr_AchievementUpdate>
	{
		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0xD26110", Offset = "0xD26110", VA = "0xD26110")]
		public MessageWithAchievementUpdate(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0xD26174", Offset = "0xD26174", VA = "0xD26174", Slot = "7")]
		public override Pvr_AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0xD261BC", Offset = "0xD261BC", VA = "0xD261BC", Slot = "9")]
		protected override Pvr_AchievementUpdate GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x20003DE")]
	public class MessageWithString : Pvr_Message<string>
	{
		[Token(Token = "0x6001E10")]
		[Address(RVA = "0xD262BC", Offset = "0xD262BC", VA = "0xD262BC")]
		public MessageWithString(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0xD26320", Offset = "0xD26320", VA = "0xD26320", Slot = "8")]
		public override string GetString()
		{
			return null;
		}

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0xD26368", Offset = "0xD26368", VA = "0xD26368", Slot = "9")]
		protected override string GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x20003DF")]
	public class Error
	{
		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly int Code;

		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly int HttpCode;

		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Message;

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0xD25B48", Offset = "0xD25B48", VA = "0xD25B48")]
		public Error(int code, string message, int httpCode)
		{
		}
	}
	[Token(Token = "0x20003E0")]
	public sealed class Pvr_Request<T> : Request
	{
		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Pvr_Message<T>.Callback callback_;

		[Token(Token = "0x6001E14")]
		public Pvr_Request(long requestID)
		{
		}

		[Token(Token = "0x6001E15")]
		public Pvr_Request<T> OnComplete(Pvr_Message<T>.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x6001E16")]
		public override void HandleMessage(Pvr_Message msg)
		{
		}
	}
	[Token(Token = "0x20003E1")]
	public class Request
	{
		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private Pvr_Message.Callback callback_;

		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A2698", Offset = "0x3A2698")]
		private long <RequestID>k__BackingField;

		[Token(Token = "0x1700034B")]
		public long RequestID
		{
			[Token(Token = "0x6001E18")]
			[Address(RVA = "0xD2A96C", Offset = "0xD2A96C", VA = "0xD2A96C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACAC4", Offset = "0x3ACAC4")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6001E19")]
			[Address(RVA = "0xD2A974", Offset = "0xD2A974", VA = "0xD2A974")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACAD4", Offset = "0x3ACAD4")]
			set
			{
			}
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0xD2A944", Offset = "0xD2A944", VA = "0xD2A944")]
		public Request(long requestID)
		{
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0xD2A984", Offset = "0xD2A984", VA = "0xD2A984")]
		public Request OnComplete(Pvr_Message.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0xD2AA08", Offset = "0xD2AA08", VA = "0xD2AA08", Slot = "4")]
		public virtual void HandleMessage(Pvr_Message msg)
		{
		}

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0xD29D7C", Offset = "0xD29D7C", VA = "0xD29D7C")]
		public static void RunCallbacks(uint limit = 0u)
		{
		}
	}
}
namespace Photon
{
	[Token(Token = "0x20003E2")]
	public class MonoBehaviour : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private PhotonView pvCache;

		[Token(Token = "0x1700034C")]
		public PhotonView photonView
		{
			[Token(Token = "0x6001E1D")]
			[Address(RVA = "0xA70A7C", Offset = "0xA70A7C", VA = "0xA70A7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0xA70BC8", Offset = "0xA70BC8", VA = "0xA70BC8")]
		public MonoBehaviour()
		{
		}
	}
	[Token(Token = "0x20003E3")]
	public class PunBehaviour : MonoBehaviour, IPunCallbacks
	{
		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0xA7D6C0", Offset = "0xA7D6C0", VA = "0xA7D6C0", Slot = "33")]
		public virtual void OnConnectedToPhoton()
		{
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0xA7D6C4", Offset = "0xA7D6C4", VA = "0xA7D6C4", Slot = "34")]
		public virtual void OnLeftRoom()
		{
		}

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0xA7D6C8", Offset = "0xA7D6C8", VA = "0xA7D6C8", Slot = "35")]
		public virtual void OnMasterClientSwitched(PhotonPlayer newMasterClient)
		{
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0xA7D6CC", Offset = "0xA7D6CC", VA = "0xA7D6CC", Slot = "36")]
		public virtual void OnPhotonCreateRoomFailed(object[] codeAndMsg)
		{
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0xA7D6D0", Offset = "0xA7D6D0", VA = "0xA7D6D0", Slot = "37")]
		public virtual void OnPhotonJoinRoomFailed(object[] codeAndMsg)
		{
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0xA7D6D4", Offset = "0xA7D6D4", VA = "0xA7D6D4", Slot = "38")]
		public virtual void OnCreatedRoom()
		{
		}

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0xA7D6D8", Offset = "0xA7D6D8", VA = "0xA7D6D8", Slot = "39")]
		public virtual void OnJoinedLobby()
		{
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0xA7D6DC", Offset = "0xA7D6DC", VA = "0xA7D6DC", Slot = "40")]
		public virtual void OnLeftLobby()
		{
		}

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0xA7D6E0", Offset = "0xA7D6E0", VA = "0xA7D6E0", Slot = "41")]
		public virtual void OnFailedToConnectToPhoton(DisconnectCause cause)
		{
		}

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0xA7D6E4", Offset = "0xA7D6E4", VA = "0xA7D6E4", Slot = "42")]
		public virtual void OnDisconnectedFromPhoton()
		{
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0xA7D6E8", Offset = "0xA7D6E8", VA = "0xA7D6E8", Slot = "43")]
		public virtual void OnConnectionFail(DisconnectCause cause)
		{
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0xA7D6EC", Offset = "0xA7D6EC", VA = "0xA7D6EC", Slot = "44")]
		public virtual void OnPhotonInstantiate(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0xA7D6F0", Offset = "0xA7D6F0", VA = "0xA7D6F0", Slot = "45")]
		public virtual void OnReceivedRoomListUpdate()
		{
		}

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0xA7D6F4", Offset = "0xA7D6F4", VA = "0xA7D6F4", Slot = "46")]
		public virtual void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0xA7D6F8", Offset = "0xA7D6F8", VA = "0xA7D6F8", Slot = "47")]
		public virtual void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
		{
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0xA7D6FC", Offset = "0xA7D6FC", VA = "0xA7D6FC", Slot = "48")]
		public virtual void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer)
		{
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0xA7D700", Offset = "0xA7D700", VA = "0xA7D700", Slot = "49")]
		public virtual void OnPhotonRandomJoinFailed(object[] codeAndMsg)
		{
		}

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0xA7D704", Offset = "0xA7D704", VA = "0xA7D704", Slot = "50")]
		public virtual void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0xA7D708", Offset = "0xA7D708", VA = "0xA7D708", Slot = "51")]
		public virtual void OnPhotonMaxCccuReached()
		{
		}

		[Token(Token = "0x6001E32")]
		[Address(RVA = "0xA7D70C", Offset = "0xA7D70C", VA = "0xA7D70C", Slot = "52")]
		public virtual void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0xA7D710", Offset = "0xA7D710", VA = "0xA7D710", Slot = "53")]
		public virtual void OnPhotonPlayerPropertiesChanged(object[] playerAndUpdatedProps)
		{
		}

		[Token(Token = "0x6001E34")]
		[Address(RVA = "0xA7D714", Offset = "0xA7D714", VA = "0xA7D714", Slot = "54")]
		public virtual void OnUpdatedFriendList()
		{
		}

		[Token(Token = "0x6001E35")]
		[Address(RVA = "0xA7D718", Offset = "0xA7D718", VA = "0xA7D718", Slot = "55")]
		public virtual void OnCustomAuthenticationFailed(string debugMessage)
		{
		}

		[Token(Token = "0x6001E36")]
		[Address(RVA = "0xA7D71C", Offset = "0xA7D71C", VA = "0xA7D71C", Slot = "56")]
		public virtual void OnCustomAuthenticationResponse(Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x6001E37")]
		[Address(RVA = "0xA7D720", Offset = "0xA7D720", VA = "0xA7D720", Slot = "57")]
		public virtual void OnWebRpcResponse(OperationResponse response)
		{
		}

		[Token(Token = "0x6001E38")]
		[Address(RVA = "0xA7D724", Offset = "0xA7D724", VA = "0xA7D724", Slot = "58")]
		public virtual void OnOwnershipRequest(object[] viewAndPlayer)
		{
		}

		[Token(Token = "0x6001E39")]
		[Address(RVA = "0xA7D728", Offset = "0xA7D728", VA = "0xA7D728", Slot = "59")]
		public virtual void OnLobbyStatisticsUpdate()
		{
		}

		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0xA7D72C", Offset = "0xA7D72C", VA = "0xA7D72C", Slot = "60")]
		public virtual void OnPhotonPlayerActivityChanged(PhotonPlayer otherPlayer)
		{
		}

		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0xA7D730", Offset = "0xA7D730", VA = "0xA7D730", Slot = "61")]
		public virtual void OnOwnershipTransfered(object[] viewAndPlayers)
		{
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0xA7D734", Offset = "0xA7D734", VA = "0xA7D734")]
		public PunBehaviour()
		{
		}
	}
}
namespace Photon.Chat
{
	[Token(Token = "0x20003E4")]
	public class ChannelCreationOptions
	{
		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ChannelCreationOptions Default;

		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A26A8", Offset = "0x3A26A8")]
		private bool <PublishSubscribers>k__BackingField;

		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A26B8", Offset = "0x3A26B8")]
		private int <MaxSubscribers>k__BackingField;

		[Token(Token = "0x1700034D")]
		public bool PublishSubscribers
		{
			[Token(Token = "0x6001E3D")]
			[Address(RVA = "0xA759AC", Offset = "0xA759AC", VA = "0xA759AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACAE4", Offset = "0x3ACAE4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E3E")]
			[Address(RVA = "0xA759B4", Offset = "0xA759B4", VA = "0xA759B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACAF4", Offset = "0x3ACAF4")]
			set
			{
			}
		}

		[Token(Token = "0x1700034E")]
		public int MaxSubscribers
		{
			[Token(Token = "0x6001E3F")]
			[Address(RVA = "0xA759BC", Offset = "0xA759BC", VA = "0xA759BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACB04", Offset = "0x3ACB04")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E40")]
			[Address(RVA = "0xA759C4", Offset = "0xA759C4", VA = "0xA759C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACB14", Offset = "0x3ACB14")]
			set
			{
			}
		}

		[Token(Token = "0x6001E41")]
		[Address(RVA = "0xA759CC", Offset = "0xA759CC", VA = "0xA759CC")]
		public ChannelCreationOptions()
		{
		}
	}
	[Token(Token = "0x20003E5")]
	public class ChannelWellKnownProperties
	{
		[Token(Token = "0x4001C9B")]
		public const byte MaxSubscribers = byte.MaxValue;

		[Token(Token = "0x4001C9C")]
		public const byte PublishSubscribers = 254;

		[Token(Token = "0x6001E43")]
		[Address(RVA = "0xA75A40", Offset = "0xA75A40", VA = "0xA75A40")]
		public ChannelWellKnownProperties()
		{
		}
	}
	[Token(Token = "0x20003E6")]
	public class ChatChannel
	{
		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string Name;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly List<string> Senders;

		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly List<object> Messages;

		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int MessageLimit;

		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A26C8", Offset = "0x3A26C8")]
		private bool <IsPrivate>k__BackingField;

		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A26D8", Offset = "0x3A26D8")]
		private int <LastMsgId>k__BackingField;

		[Token(Token = "0x4001CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<object, object> properties;

		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A26E8", Offset = "0x3A26E8")]
		private bool <PublishSubscribers>k__BackingField;

		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A26F8", Offset = "0x3A26F8")]
		private int <MaxSubscribers>k__BackingField;

		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public readonly HashSet<string> Subscribers;

		[Token(Token = "0x1700034F")]
		public bool IsPrivate
		{
			[Token(Token = "0x6001E44")]
			[Address(RVA = "0xA75A48", Offset = "0xA75A48", VA = "0xA75A48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACB24", Offset = "0x3ACB24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E45")]
			[Address(RVA = "0xA75A50", Offset = "0xA75A50", VA = "0xA75A50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACB34", Offset = "0x3ACB34")]
			protected internal set
			{
			}
		}

		[Token(Token = "0x17000350")]
		public int MessageCount
		{
			[Token(Token = "0x6001E46")]
			[Address(RVA = "0xA75A58", Offset = "0xA75A58", VA = "0xA75A58")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000351")]
		public int LastMsgId
		{
			[Token(Token = "0x6001E47")]
			[Address(RVA = "0xA75AB0", Offset = "0xA75AB0", VA = "0xA75AB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACB44", Offset = "0x3ACB44")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E48")]
			[Address(RVA = "0xA75AB8", Offset = "0xA75AB8", VA = "0xA75AB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACB54", Offset = "0x3ACB54")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000352")]
		public bool PublishSubscribers
		{
			[Token(Token = "0x6001E49")]
			[Address(RVA = "0xA75AC0", Offset = "0xA75AC0", VA = "0xA75AC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACB64", Offset = "0x3ACB64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E4A")]
			[Address(RVA = "0xA75AC8", Offset = "0xA75AC8", VA = "0xA75AC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACB74", Offset = "0x3ACB74")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000353")]
		public int MaxSubscribers
		{
			[Token(Token = "0x6001E4B")]
			[Address(RVA = "0xA75AD0", Offset = "0xA75AD0", VA = "0xA75AD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACB84", Offset = "0x3ACB84")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E4C")]
			[Address(RVA = "0xA75AD8", Offset = "0xA75AD8", VA = "0xA75AD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACB94", Offset = "0x3ACB94")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001E4D")]
		[Address(RVA = "0xA75AE0", Offset = "0xA75AE0", VA = "0xA75AE0")]
		public ChatChannel(string name)
		{
		}

		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0xA75BD4", Offset = "0xA75BD4", VA = "0xA75BD4")]
		public void Add(string sender, object message, int msgId)
		{
		}

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0xA75D78", Offset = "0xA75D78", VA = "0xA75D78")]
		public void Add(string[] senders, object[] messages, int lastMsgId)
		{
		}

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0xA75C88", Offset = "0xA75C88", VA = "0xA75C88")]
		public void TruncateMessages()
		{
		}

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0xA75E2C", Offset = "0xA75E2C", VA = "0xA75E2C")]
		public void ClearMessages()
		{
		}

		[Token(Token = "0x6001E52")]
		[Address(RVA = "0xA75EC0", Offset = "0xA75EC0", VA = "0xA75EC0")]
		public string ToStringMessages()
		{
			return null;
		}

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0xA7600C", Offset = "0xA7600C", VA = "0xA7600C")]
		internal void ReadProperties(Dictionary<object, object> newProperties)
		{
		}

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0xA763D8", Offset = "0xA763D8", VA = "0xA763D8")]
		internal void AddSubscribers(string[] users)
		{
		}

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0xA76498", Offset = "0xA76498", VA = "0xA76498")]
		internal void ClearProperties()
		{
		}
	}
	[Token(Token = "0x20003E7")]
	public class ChatClient : IPhotonPeerListener
	{
		[Token(Token = "0x4001CA7")]
		private const int FriendRequestListMax = 1024;

		[Token(Token = "0x4001CA8")]
		public const int DefaultMaxSubscribers = 100;

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A2708", Offset = "0x3A2708")]
		private string <NameServerAddress>k__BackingField;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A2718", Offset = "0x3A2718")]
		private string <FrontendAddress>k__BackingField;

		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string chatRegion;

		[Token(Token = "0x4001CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A2728", Offset = "0x3A2728")]
		private ChatState <State>k__BackingField;

		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A2738", Offset = "0x3A2738")]
		private ChatDisconnectCause <DisconnectedCause>k__BackingField;

		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A2748", Offset = "0x3A2748")]
		private string <AppVersion>k__BackingField;

		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A2758", Offset = "0x3A2758")]
		private string <AppId>k__BackingField;

		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A2768", Offset = "0x3A2768")]
		private AuthenticationValues <AuthValues>k__BackingField;

		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int MessageLimit;

		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public readonly Dictionary<string, ChatChannel> PublicChannels;

		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly Dictionary<string, ChatChannel> PrivateChannels;

		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private readonly HashSet<string> PublicChannelsUnsubscribing;

		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly IChatClientListener listener;

		[Token(Token = "0x4001CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public ChatPeer chatPeer;

		[Token(Token = "0x4001CB7")]
		private const string ChatAppName = "chat";

		[Token(Token = "0x4001CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool didAuthenticate;

		[Token(Token = "0x4001CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int? statusToSetWhenConnected;

		[Token(Token = "0x4001CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private object messageToSetWhenConnected;

		[Token(Token = "0x4001CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int msDeltaForServiceCalls;

		[Token(Token = "0x4001CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int msTimestampOfLastServiceCall;

		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A2778", Offset = "0x3A2778")]
		private bool <UseBackgroundWorkerForSending>k__BackingField;

		[Token(Token = "0x17000354")]
		public string NameServerAddress
		{
			[Token(Token = "0x6001E56")]
			[Address(RVA = "0xA76530", Offset = "0xA76530", VA = "0xA76530")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACBA4", Offset = "0x3ACBA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E57")]
			[Address(RVA = "0xA76538", Offset = "0xA76538", VA = "0xA76538")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACBB4", Offset = "0x3ACBB4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000355")]
		public string FrontendAddress
		{
			[Token(Token = "0x6001E58")]
			[Address(RVA = "0xA76540", Offset = "0xA76540", VA = "0xA76540")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACBC4", Offset = "0x3ACBC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E59")]
			[Address(RVA = "0xA76548", Offset = "0xA76548", VA = "0xA76548")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACBD4", Offset = "0x3ACBD4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000356")]
		public string ChatRegion
		{
			[Token(Token = "0x6001E5A")]
			[Address(RVA = "0xA76550", Offset = "0xA76550", VA = "0xA76550")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E5B")]
			[Address(RVA = "0xA76558", Offset = "0xA76558", VA = "0xA76558")]
			set
			{
			}
		}

		[Token(Token = "0x17000357")]
		public ChatState State
		{
			[Token(Token = "0x6001E5C")]
			[Address(RVA = "0xA76560", Offset = "0xA76560", VA = "0xA76560")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACBE4", Offset = "0x3ACBE4")]
			get
			{
				return default(ChatState);
			}
			[Token(Token = "0x6001E5D")]
			[Address(RVA = "0xA76568", Offset = "0xA76568", VA = "0xA76568")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACBF4", Offset = "0x3ACBF4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000358")]
		public ChatDisconnectCause DisconnectedCause
		{
			[Token(Token = "0x6001E5E")]
			[Address(RVA = "0xA76570", Offset = "0xA76570", VA = "0xA76570")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACC04", Offset = "0x3ACC04")]
			get
			{
				return default(ChatDisconnectCause);
			}
			[Token(Token = "0x6001E5F")]
			[Address(RVA = "0xA76578", Offset = "0xA76578", VA = "0xA76578")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACC14", Offset = "0x3ACC14")]
			private set
			{
			}
		}

		[Token(Token = "0x17000359")]
		public bool CanChat
		{
			[Token(Token = "0x6001E60")]
			[Address(RVA = "0xA76580", Offset = "0xA76580", VA = "0xA76580")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700035A")]
		private bool HasPeer
		{
			[Token(Token = "0x6001E62")]
			[Address(RVA = "0xA765A4", Offset = "0xA765A4", VA = "0xA765A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700035B")]
		public string AppVersion
		{
			[Token(Token = "0x6001E63")]
			[Address(RVA = "0xA76680", Offset = "0xA76680", VA = "0xA76680")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACC24", Offset = "0x3ACC24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E64")]
			[Address(RVA = "0xA76688", Offset = "0xA76688", VA = "0xA76688")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACC34", Offset = "0x3ACC34")]
			private set
			{
			}
		}

		[Token(Token = "0x1700035C")]
		public string AppId
		{
			[Token(Token = "0x6001E65")]
			[Address(RVA = "0xA76690", Offset = "0xA76690", VA = "0xA76690")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACC44", Offset = "0x3ACC44")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E66")]
			[Address(RVA = "0xA76698", Offset = "0xA76698", VA = "0xA76698")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACC54", Offset = "0x3ACC54")]
			private set
			{
			}
		}

		[Token(Token = "0x1700035D")]
		public AuthenticationValues AuthValues
		{
			[Token(Token = "0x6001E67")]
			[Address(RVA = "0xA766A0", Offset = "0xA766A0", VA = "0xA766A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACC64", Offset = "0x3ACC64")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E68")]
			[Address(RVA = "0xA766A8", Offset = "0xA766A8", VA = "0xA766A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACC74", Offset = "0x3ACC74")]
			set
			{
			}
		}

		[Token(Token = "0x1700035E")]
		public string UserId
		{
			[Token(Token = "0x6001E69")]
			[Address(RVA = "0xA766B0", Offset = "0xA766B0", VA = "0xA766B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E6A")]
			[Address(RVA = "0xA766C4", Offset = "0xA766C4", VA = "0xA766C4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700035F")]
		public bool UseBackgroundWorkerForSending
		{
			[Token(Token = "0x6001E6B")]
			[Address(RVA = "0xA76758", Offset = "0xA76758", VA = "0xA76758")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACC84", Offset = "0x3ACC84")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E6C")]
			[Address(RVA = "0xA76760", Offset = "0xA76760", VA = "0xA76760")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACC94", Offset = "0x3ACC94")]
			set
			{
			}
		}

		[Token(Token = "0x17000360")]
		public ConnectionProtocol TransportProtocol
		{
			[Token(Token = "0x6001E6D")]
			[Address(RVA = "0xA76768", Offset = "0xA76768", VA = "0xA76768")]
			get
			{
				return default(ConnectionProtocol);
			}
			[Token(Token = "0x6001E6E")]
			[Address(RVA = "0xA76788", Offset = "0xA76788", VA = "0xA76788")]
			set
			{
			}
		}

		[Token(Token = "0x17000361")]
		public Dictionary<ConnectionProtocol, Type> SocketImplementationConfig
		{
			[Token(Token = "0x6001E6F")]
			[Address(RVA = "0xA76938", Offset = "0xA76938", VA = "0xA76938")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000362")]
		public DebugLevel DebugOut
		{
			[Token(Token = "0x6001E8C")]
			[Address(RVA = "0xA777A0", Offset = "0xA777A0", VA = "0xA777A0")]
			get
			{
				return default(DebugLevel);
			}
			[Token(Token = "0x6001E8B")]
			[Address(RVA = "0xA7919C", Offset = "0xA7919C", VA = "0xA7919C")]
			set
			{
			}
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0xA765B4", Offset = "0xA765B4", VA = "0xA765B4")]
		public bool CanChatInChannel(string channelName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0xA76958", Offset = "0xA76958", VA = "0xA76958")]
		public ChatClient(IChatClientListener listener, ConnectionProtocol protocol = ConnectionProtocol.Udp)
		{
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0xA76B24", Offset = "0xA76B24", VA = "0xA76B24")]
		public bool Connect(string appId, string appVersion, AuthenticationValues authValues)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0xA76E6C", Offset = "0xA76E6C", VA = "0xA76E6C")]
		public bool ConnectAndSetStatus(string appId, string appVersion, AuthenticationValues authValues, int status = 2, [Optional] object message)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0xA76F18", Offset = "0xA76F18", VA = "0xA76F18")]
		public void Service()
		{
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0xA76FAC", Offset = "0xA76FAC", VA = "0xA76FAC")]
		private bool SendOutgoingInBackground()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0xA76FEC", Offset = "0xA76FEC", VA = "0xA76FEC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3ACCA4", Offset = "0x3ACCA4")]
		public void SendAcksOnly()
		{
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0xA77018", Offset = "0xA77018", VA = "0xA77018")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0xA7706C", Offset = "0xA7706C", VA = "0xA7706C")]
		public void StopThread()
		{
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0xA77088", Offset = "0xA77088", VA = "0xA77088")]
		public bool Subscribe(string[] channels)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0xA77284", Offset = "0xA77284", VA = "0xA77284")]
		public bool Subscribe(string[] channels, int[] lastMsgIds)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0xA77090", Offset = "0xA77090", VA = "0xA77090")]
		public bool Subscribe(string[] channels, int messagesFromHistory)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0xA77930", Offset = "0xA77930", VA = "0xA77930")]
		public bool Unsubscribe(string[] channels)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0xA77B84", Offset = "0xA77B84", VA = "0xA77B84")]
		public bool PublishMessage(string channelName, object message, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0xA77F08", Offset = "0xA77F08", VA = "0xA77F08")]
		internal bool PublishMessageUnreliable(string channelName, object message, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0xA77BA4", Offset = "0xA77BA4", VA = "0xA77BA4")]
		private bool publishMessage(string channelName, object message, bool reliable, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0xA77F28", Offset = "0xA77F28", VA = "0xA77F28")]
		public bool SendPrivateMessage(string target, object message, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0xA77F50", Offset = "0xA77F50", VA = "0xA77F50")]
		public bool SendPrivateMessage(string target, object message, bool encrypt, bool forwardAsWebhook)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0xA782E4", Offset = "0xA782E4", VA = "0xA782E4")]
		internal bool SendPrivateMessageUnreliable(string target, object message, bool encrypt, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0xA77F78", Offset = "0xA77F78", VA = "0xA77F78")]
		private bool sendPrivateMessage(string target, object message, bool encrypt, bool reliable, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0xA7830C", Offset = "0xA7830C", VA = "0xA7830C")]
		private bool SetOnlineStatus(int status, object message, bool skipMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0xA785AC", Offset = "0xA785AC", VA = "0xA785AC")]
		public bool SetOnlineStatus(int status)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0xA785CC", Offset = "0xA785CC", VA = "0xA785CC")]
		public bool SetOnlineStatus(int status, object message)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0xA785E8", Offset = "0xA785E8", VA = "0xA785E8")]
		public bool AddFriends(string[] friends)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0xA78AEC", Offset = "0xA78AEC", VA = "0xA78AEC")]
		public bool RemoveFriends(string[] friends)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0xA78FF0", Offset = "0xA78FF0", VA = "0xA78FF0")]
		public string GetPrivateChannelNameByUser(string userName)
		{
			return null;
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0xA79064", Offset = "0xA79064", VA = "0xA79064")]
		public bool TryGetChannel(string channelName, bool isPrivate, out ChatChannel channel)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0xA790EC", Offset = "0xA790EC", VA = "0xA790EC")]
		public bool TryGetChannel(string channelName, out ChatChannel channel)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0xA791C0", Offset = "0xA791C0", VA = "0xA791C0", Slot = "4")]
		private void ExitGames.Client.Photon.IPhotonPeerListener.DebugReturn(DebugLevel level, string message)
		{
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0xA7929C", Offset = "0xA7929C", VA = "0xA7929C", Slot = "7")]
		private void ExitGames.Client.Photon.IPhotonPeerListener.OnEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0xA7B0CC", Offset = "0xA7B0CC", VA = "0xA7B0CC", Slot = "5")]
		private void ExitGames.Client.Photon.IPhotonPeerListener.OnOperationResponse(OperationResponse operationResponse)
		{
		}

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0xA7BBA4", Offset = "0xA7BBA4", VA = "0xA7BBA4", Slot = "6")]
		private void ExitGames.Client.Photon.IPhotonPeerListener.OnStatusChanged(StatusCode statusCode)
		{
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0xA777C0", Offset = "0xA777C0", VA = "0xA777C0")]
		private bool SendChannelOperation(string[] channels, byte operation, int historyLength)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0xA79744", Offset = "0xA79744", VA = "0xA79744")]
		private void HandlePrivateMessageEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0xA7936C", Offset = "0xA7936C", VA = "0xA7936C")]
		private void HandleChatMessagesEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0xA79D10", Offset = "0xA79D10", VA = "0xA79D10")]
		private void HandleSubscribeEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0xA7A450", Offset = "0xA7A450", VA = "0xA7A450")]
		private void HandleUnsubscribeEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0xA7B31C", Offset = "0xA7B31C", VA = "0xA7B31C")]
		private void HandleAuthResponse(OperationResponse operationResponse)
		{
		}

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0xA79AD8", Offset = "0xA79AD8", VA = "0xA79AD8")]
		private void HandleStatusUpdate(EventData eventData)
		{
		}

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0xA7C6F8", Offset = "0xA7C6F8", VA = "0xA7C6F8")]
		private void ConnectToFrontEnd()
		{
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0xA7C458", Offset = "0xA7C458", VA = "0xA7C458")]
		private bool AuthenticateOnFrontEnd()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0xA7AC3C", Offset = "0xA7AC3C", VA = "0xA7AC3C")]
		private void HandleUserUnsubscribedEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0xA7A628", Offset = "0xA7A628", VA = "0xA7A628")]
		private void HandleUserSubscribedEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0xA7C84C", Offset = "0xA7C84C", VA = "0xA7C84C")]
		public bool Subscribe(string channel, int lastMsgId = 0, int messagesFromHistory = -1, [Optional] ChannelCreationOptions creationOptions)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003E8")]
	public enum ChatDisconnectCause
	{
		[Token(Token = "0x4001CBF")]
		None,
		[Token(Token = "0x4001CC0")]
		DisconnectByServerUserLimit,
		[Token(Token = "0x4001CC1")]
		ExceptionOnConnect,
		[Token(Token = "0x4001CC2")]
		DisconnectByServer,
		[Token(Token = "0x4001CC3")]
		TimeoutDisconnect,
		[Token(Token = "0x4001CC4")]
		Exception,
		[Token(Token = "0x4001CC5")]
		InvalidAuthentication,
		[Token(Token = "0x4001CC6")]
		MaxCcuReached,
		[Token(Token = "0x4001CC7")]
		InvalidRegion,
		[Token(Token = "0x4001CC8")]
		OperationNotAllowedInCurrentState,
		[Token(Token = "0x4001CC9")]
		CustomAuthenticationFailed
	}
	[Token(Token = "0x20003E9")]
	public class ChatEventCode
	{
		[Token(Token = "0x4001CCA")]
		public const byte ChatMessages = 0;

		[Token(Token = "0x4001CCB")]
		public const byte Users = 1;

		[Token(Token = "0x4001CCC")]
		public const byte PrivateMessage = 2;

		[Token(Token = "0x4001CCD")]
		public const byte FriendsList = 3;

		[Token(Token = "0x4001CCE")]
		public const byte StatusUpdate = 4;

		[Token(Token = "0x4001CCF")]
		public const byte Subscribe = 5;

		[Token(Token = "0x4001CD0")]
		public const byte Unsubscribe = 6;

		[Token(Token = "0x4001CD1")]
		public const byte UserSubscribed = 8;

		[Token(Token = "0x4001CD2")]
		public const byte UserUnsubscribed = 9;

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0xA7D0F4", Offset = "0xA7D0F4", VA = "0xA7D0F4")]
		public ChatEventCode()
		{
		}
	}
	[Token(Token = "0x20003EA")]
	public class ChatOperationCode
	{
		[Token(Token = "0x4001CD3")]
		public const byte Authenticate = 230;

		[Token(Token = "0x4001CD4")]
		public const byte Subscribe = 0;

		[Token(Token = "0x4001CD5")]
		public const byte Unsubscribe = 1;

		[Token(Token = "0x4001CD6")]
		public const byte Publish = 2;

		[Token(Token = "0x4001CD7")]
		public const byte SendPrivate = 3;

		[Token(Token = "0x4001CD8")]
		public const byte ChannelHistory = 4;

		[Token(Token = "0x4001CD9")]
		public const byte UpdateStatus = 5;

		[Token(Token = "0x4001CDA")]
		public const byte AddFriends = 6;

		[Token(Token = "0x4001CDB")]
		public const byte RemoveFriends = 7;

		[Token(Token = "0x6001E9E")]
		[Address(RVA = "0xA7D0FC", Offset = "0xA7D0FC", VA = "0xA7D0FC")]
		public ChatOperationCode()
		{
		}
	}
	[Token(Token = "0x20003EB")]
	public class ChatParameterCode
	{
		[Token(Token = "0x4001CDC")]
		public const byte Channels = 0;

		[Token(Token = "0x4001CDD")]
		public const byte Channel = 1;

		[Token(Token = "0x4001CDE")]
		public const byte Messages = 2;

		[Token(Token = "0x4001CDF")]
		public const byte Message = 3;

		[Token(Token = "0x4001CE0")]
		public const byte Senders = 4;

		[Token(Token = "0x4001CE1")]
		public const byte Sender = 5;

		[Token(Token = "0x4001CE2")]
		public const byte ChannelUserCount = 6;

		[Token(Token = "0x4001CE3")]
		public const byte UserId = 225;

		[Token(Token = "0x4001CE4")]
		public const byte MsgId = 8;

		[Token(Token = "0x4001CE5")]
		public const byte MsgIds = 9;

		[Token(Token = "0x4001CE6")]
		public const byte Secret = 221;

		[Token(Token = "0x4001CE7")]
		public const byte SubscribeResults = 15;

		[Token(Token = "0x4001CE8")]
		public const byte Status = 10;

		[Token(Token = "0x4001CE9")]
		public const byte Friends = 11;

		[Token(Token = "0x4001CEA")]
		public const byte SkipMessage = 12;

		[Token(Token = "0x4001CEB")]
		public const byte HistoryLength = 14;

		[Token(Token = "0x4001CEC")]
		public const byte WebFlags = 21;

		[Token(Token = "0x4001CED")]
		public const byte Properties = 22;

		[Token(Token = "0x4001CEE")]
		public const byte ChannelSubscribers = 23;

		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0xA7D104", Offset = "0xA7D104", VA = "0xA7D104")]
		public ChatParameterCode()
		{
		}
	}
	[Token(Token = "0x20003EC")]
	public class ChatPeer : PhotonPeer
	{
		[Token(Token = "0x4001CEF")]
		public const string NameServerHost = "ns.exitgames.com";

		[Token(Token = "0x4001CF0")]
		public const string NameServerHttp = "http://ns.exitgamescloud.com:80/photon/n";

		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<ConnectionProtocol, int> ProtocolToNameServerPort;

		[Token(Token = "0x17000363")]
		public string NameServerAddress
		{
			[Token(Token = "0x6001EA0")]
			[Address(RVA = "0xA76D30", Offset = "0xA76D30", VA = "0xA76D30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000364")]
		internal virtual bool IsProtocolSecure
		{
			[Token(Token = "0x6001EA1")]
			[Address(RVA = "0xA7D2D4", Offset = "0xA7D2D4", VA = "0xA7D2D4", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0xA76A90", Offset = "0xA76A90", VA = "0xA76A90")]
		public ChatPeer(IPhotonPeerListener listener, ConnectionProtocol protocol)
		{
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0xA7D2F4", Offset = "0xA7D2F4", VA = "0xA7D2F4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x3ACCD8", Offset = "0x3ACCD8")]
		private void ConfigUnitySockets()
		{
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0xA7D10C", Offset = "0xA7D10C", VA = "0xA7D10C")]
		private string GetNameServerAddress()
		{
			return null;
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0xA76D34", Offset = "0xA76D34", VA = "0xA76D34")]
		public bool Connect()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0xA7C0E8", Offset = "0xA7C0E8", VA = "0xA7C0E8")]
		public bool AuthenticateOnNameServer(string appId, string appVersion, string region, AuthenticationValues authValues)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003ED")]
	public enum CustomAuthenticationType : byte
	{
		[Token(Token = "0x4001CF3")]
		Custom = 0,
		[Token(Token = "0x4001CF4")]
		Steam = 1,
		[Token(Token = "0x4001CF5")]
		Facebook = 2,
		[Token(Token = "0x4001CF6")]
		Oculus = 3,
		[Token(Token = "0x4001CF7")]
		PlayStation = 4,
		[Token(Token = "0x4001CF8")]
		Xbox = 5,
		[Token(Token = "0x4001CF9")]
		Viveport = 10,
		[Token(Token = "0x4001CFA")]
		None = byte.MaxValue
	}
	[Token(Token = "0x20003EE")]
	public class AuthenticationValues
	{
		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private CustomAuthenticationType authType;

		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A2788", Offset = "0x3A2788")]
		private string <AuthGetParameters>k__BackingField;

		[Token(Token = "0x4001CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A2798", Offset = "0x3A2798")]
		private object <AuthPostData>k__BackingField;

		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A27A8", Offset = "0x3A27A8")]
		private string <Token>k__BackingField;

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A27B8", Offset = "0x3A27B8")]
		private string <UserId>k__BackingField;

		[Token(Token = "0x17000365")]
		public CustomAuthenticationType AuthType
		{
			[Token(Token = "0x6001EA8")]
			[Address(RVA = "0xA755FC", Offset = "0xA755FC", VA = "0xA755FC")]
			get
			{
				return default(CustomAuthenticationType);
			}
			[Token(Token = "0x6001EA9")]
			[Address(RVA = "0xA75604", Offset = "0xA75604", VA = "0xA75604")]
			set
			{
			}
		}

		[Token(Token = "0x17000366")]
		public string AuthGetParameters
		{
			[Token(Token = "0x6001EAA")]
			[Address(RVA = "0xA7560C", Offset = "0xA7560C", VA = "0xA7560C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACD0C", Offset = "0x3ACD0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EAB")]
			[Address(RVA = "0xA75614", Offset = "0xA75614", VA = "0xA75614")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACD1C", Offset = "0x3ACD1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000367")]
		public object AuthPostData
		{
			[Token(Token = "0x6001EAC")]
			[Address(RVA = "0xA7561C", Offset = "0xA7561C", VA = "0xA7561C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACD2C", Offset = "0x3ACD2C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EAD")]
			[Address(RVA = "0xA75624", Offset = "0xA75624", VA = "0xA75624")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACD3C", Offset = "0x3ACD3C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000368")]
		public string Token
		{
			[Token(Token = "0x6001EAE")]
			[Address(RVA = "0xA7562C", Offset = "0xA7562C", VA = "0xA7562C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACD4C", Offset = "0x3ACD4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EAF")]
			[Address(RVA = "0xA75634", Offset = "0xA75634", VA = "0xA75634")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACD5C", Offset = "0x3ACD5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000369")]
		public string UserId
		{
			[Token(Token = "0x6001EB0")]
			[Address(RVA = "0xA7563C", Offset = "0xA7563C", VA = "0xA7563C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACD6C", Offset = "0x3ACD6C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EB1")]
			[Address(RVA = "0xA75644", Offset = "0xA75644", VA = "0xA75644")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACD7C", Offset = "0x3ACD7C")]
			set
			{
			}
		}

		[Token(Token = "0x6001EB2")]
		[Address(RVA = "0xA7564C", Offset = "0xA7564C", VA = "0xA7564C")]
		public AuthenticationValues()
		{
		}

		[Token(Token = "0x6001EB3")]
		[Address(RVA = "0xA7565C", Offset = "0xA7565C", VA = "0xA7565C")]
		public AuthenticationValues(string userId)
		{
		}

		[Token(Token = "0x6001EB4")]
		[Address(RVA = "0xA75688", Offset = "0xA75688", VA = "0xA75688", Slot = "4")]
		public virtual void SetAuthPostData(string stringData)
		{
		}

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0xA756C0", Offset = "0xA756C0", VA = "0xA756C0", Slot = "5")]
		public virtual void SetAuthPostData(byte[] byteData)
		{
		}

		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0xA756C8", Offset = "0xA756C8", VA = "0xA756C8", Slot = "6")]
		public virtual void AddAuthParameter(string key, string value)
		{
		}

		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0xA75908", Offset = "0xA75908", VA = "0xA75908", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003EF")]
	public class ParameterCode
	{
		[Token(Token = "0x4001D00")]
		public const byte ApplicationId = 224;

		[Token(Token = "0x4001D01")]
		public const byte Secret = 221;

		[Token(Token = "0x4001D02")]
		public const byte AppVersion = 220;

		[Token(Token = "0x4001D03")]
		public const byte ClientAuthenticationType = 217;

		[Token(Token = "0x4001D04")]
		public const byte ClientAuthenticationParams = 216;

		[Token(Token = "0x4001D05")]
		public const byte ClientAuthenticationData = 214;

		[Token(Token = "0x4001D06")]
		public const byte Region = 210;

		[Token(Token = "0x4001D07")]
		public const byte Address = 230;

		[Token(Token = "0x4001D08")]
		public const byte UserId = 225;

		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0xA7D6B8", Offset = "0xA7D6B8", VA = "0xA7D6B8")]
		public ParameterCode()
		{
		}
	}
	[Token(Token = "0x20003F0")]
	public class ErrorCode
	{
		[Token(Token = "0x4001D09")]
		public const int Ok = 0;

		[Token(Token = "0x4001D0A")]
		public const int OperationNotAllowedInCurrentState = -3;

		[Token(Token = "0x4001D0B")]
		public const int InvalidOperationCode = -2;

		[Token(Token = "0x4001D0C")]
		public const int InternalServerError = -1;

		[Token(Token = "0x4001D0D")]
		public const int InvalidAuthentication = 32767;

		[Token(Token = "0x4001D0E")]
		public const int GameIdAlreadyExists = 32766;

		[Token(Token = "0x4001D0F")]
		public const int GameFull = 32765;

		[Token(Token = "0x4001D10")]
		public const int GameClosed = 32764;

		[Token(Token = "0x4001D11")]
		public const int ServerFull = 32762;

		[Token(Token = "0x4001D12")]
		public const int UserBlocked = 32761;

		[Token(Token = "0x4001D13")]
		public const int NoRandomMatchFound = 32760;

		[Token(Token = "0x4001D14")]
		public const int GameDoesNotExist = 32758;

		[Token(Token = "0x4001D15")]
		public const int MaxCcuReached = 32757;

		[Token(Token = "0x4001D16")]
		public const int InvalidRegion = 32756;

		[Token(Token = "0x4001D17")]
		public const int CustomAuthenticationFailed = 32755;

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0xA7D6B0", Offset = "0xA7D6B0", VA = "0xA7D6B0")]
		public ErrorCode()
		{
		}
	}
	[Token(Token = "0x20003F1")]
	public enum ChatState
	{
		[Token(Token = "0x4001D19")]
		Uninitialized,
		[Token(Token = "0x4001D1A")]
		ConnectingToNameServer,
		[Token(Token = "0x4001D1B")]
		ConnectedToNameServer,
		[Token(Token = "0x4001D1C")]
		Authenticating,
		[Token(Token = "0x4001D1D")]
		Authenticated,
		[Token(Token = "0x4001D1E")]
		DisconnectingFromNameServer,
		[Token(Token = "0x4001D1F")]
		ConnectingToFrontEnd,
		[Token(Token = "0x4001D20")]
		ConnectedToFrontEnd,
		[Token(Token = "0x4001D21")]
		DisconnectingFromFrontEnd,
		[Token(Token = "0x4001D22")]
		QueuedComingFromFrontEnd,
		[Token(Token = "0x4001D23")]
		Disconnecting,
		[Token(Token = "0x4001D24")]
		Disconnected
	}
	[Token(Token = "0x20003F2")]
	public static class ChatUserStatus
	{
		[Token(Token = "0x4001D25")]
		public const int Offline = 0;

		[Token(Token = "0x4001D26")]
		public const int Invisible = 1;

		[Token(Token = "0x4001D27")]
		public const int Online = 2;

		[Token(Token = "0x4001D28")]
		public const int Away = 3;

		[Token(Token = "0x4001D29")]
		public const int DND = 4;

		[Token(Token = "0x4001D2A")]
		public const int LFG = 5;

		[Token(Token = "0x4001D2B")]
		public const int Playing = 6;
	}
	[Token(Token = "0x20003F3")]
	public interface IChatClientListener
	{
		[Token(Token = "0x6001EBA")]
		void DebugReturn(DebugLevel level, string message);

		[Token(Token = "0x6001EBB")]
		void OnDisconnected();

		[Token(Token = "0x6001EBC")]
		void OnConnected();

		[Token(Token = "0x6001EBD")]
		void OnChatStateChange(ChatState state);

		[Token(Token = "0x6001EBE")]
		void OnGetMessages(string channelName, string[] senders, object[] messages);

		[Token(Token = "0x6001EBF")]
		void OnPrivateMessage(string sender, object message, string channelName);

		[Token(Token = "0x6001EC0")]
		void OnSubscribed(string[] channels, bool[] results);

		[Token(Token = "0x6001EC1")]
		void OnUnsubscribed(string[] channels);

		[Token(Token = "0x6001EC2")]
		void OnStatusUpdate(string user, int status, bool gotMessage, object message);

		[Token(Token = "0x6001EC3")]
		void OnUserSubscribed(string channel, string user);

		[Token(Token = "0x6001EC4")]
		void OnUserUnsubscribed(string channel, string user);
	}
}
namespace Photon.Realtime
{
	[Token(Token = "0x20003F4")]
	public abstract class PhotonPing : IDisposable
	{
		[Token(Token = "0x4001D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string DebugString;

		[Token(Token = "0x4001D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool Successful;

		[Token(Token = "0x4001D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		protected internal bool GotResult;

		[Token(Token = "0x4001D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected internal int PingLength;

		[Token(Token = "0x4001D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected internal byte[] PingBytes;

		[Token(Token = "0x4001D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected internal byte PingId;

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0xA7D73C", Offset = "0xA7D73C", VA = "0xA7D73C", Slot = "5")]
		public virtual bool StartPing(string ip)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0xA7D7B4", Offset = "0xA7D7B4", VA = "0xA7D7B4", Slot = "6")]
		public virtual bool Done()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0xA7D82C", Offset = "0xA7D82C", VA = "0xA7D82C", Slot = "7")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0xA7D8A4", Offset = "0xA7D8A4", VA = "0xA7D8A4")]
		protected internal void Init()
		{
		}

		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0xA7D8E0", Offset = "0xA7D8E0", VA = "0xA7D8E0")]
		protected PhotonPing()
		{
		}
	}
	[Token(Token = "0x20003F5")]
	public class PingMono : PhotonPing
	{
		[Token(Token = "0x4001D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Socket sock;

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0xA7D988", Offset = "0xA7D988", VA = "0xA7D988", Slot = "5")]
		public override bool StartPing(string ip)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0xA7DC70", Offset = "0xA7DC70", VA = "0xA7DC70", Slot = "6")]
		public override bool Done()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0xA7DDF8", Offset = "0xA7DDF8", VA = "0xA7DDF8", Slot = "7")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0xA7DEDC", Offset = "0xA7DEDC", VA = "0xA7DEDC")]
		public PingMono()
		{
		}
	}
}
namespace ExitGames.UtilityScripts
{
	[Token(Token = "0x20003F6")]
	public class PlayerRoomIndexing : PunBehaviour
	{
		[Token(Token = "0x20008B4")]
		public delegate void RoomIndexingChanged();

		[Token(Token = "0x4001D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PlayerRoomIndexing instance;

		[Token(Token = "0x4001D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RoomIndexingChanged OnRoomIndexingChanged;

		[Token(Token = "0x4001D35")]
		public const string RoomPlayerIndexedProp = "PlayerIndexes";

		[Token(Token = "0x4001D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int[] _playerIds;

		[Token(Token = "0x4001D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object _indexes;

		[Token(Token = "0x4001D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Dictionary<int, int> _indexesLUT;

		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<bool> _indexesPool;

		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private PhotonPlayer _p;

		[Token(Token = "0x1700036A")]
		public int[] PlayerIds
		{
			[Token(Token = "0x6001ECE")]
			[Address(RVA = "0x7FF3EC", Offset = "0x7FF3EC", VA = "0x7FF3EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0x7FF3F4", Offset = "0x7FF3F4", VA = "0x7FF3F4")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0x7FF824", Offset = "0x7FF824", VA = "0x7FF824", Slot = "46")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0x800070", Offset = "0x800070", VA = "0x800070", Slot = "34")]
		public override void OnLeftRoom()
		{
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0x800074", Offset = "0x800074", VA = "0x800074", Slot = "47")]
		public override void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
		{
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0x800108", Offset = "0x800108", VA = "0x800108", Slot = "48")]
		public override void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer)
		{
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0x8003AC", Offset = "0x8003AC", VA = "0x8003AC", Slot = "52")]
		public override void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0x80043C", Offset = "0x80043C", VA = "0x80043C", Slot = "35")]
		public override void OnMasterClientSwitched(PhotonPlayer newMasterClient)
		{
		}

		[Token(Token = "0x6001ED6")]
		[Address(RVA = "0x8004C8", Offset = "0x8004C8", VA = "0x8004C8")]
		public int GetRoomIndex(PhotonPlayer player)
		{
			return default(int);
		}

		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0x7FF530", Offset = "0x7FF530", VA = "0x7FF530")]
		private void SanitizeIndexing(bool forceIndexing = false)
		{
		}

		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0x7FFD64", Offset = "0x7FFD64", VA = "0x7FFD64")]
		private void RefreshData()
		{
		}

		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0x7FF8E4", Offset = "0x7FF8E4", VA = "0x7FF8E4")]
		private void AssignIndex(PhotonPlayer player)
		{
		}

		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0x80019C", Offset = "0x80019C", VA = "0x80019C")]
		private void UnAssignIndex(PhotonPlayer player)
		{
		}

		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0x8007C8", Offset = "0x8007C8", VA = "0x8007C8")]
		public PlayerRoomIndexing()
		{
		}
	}
	[Token(Token = "0x20003F7")]
	public static class PlayerRoomIndexingExtensions
	{
		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0x80081C", Offset = "0x80081C", VA = "0x80081C")]
		public static int GetRoomIndex(this PhotonPlayer player)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20003F8")]
	public class ButtonInsideScrollList : UnityEngine.MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private ScrollRect scrollRect;

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0x7FF1E0", Offset = "0x7FF1E0", VA = "0x7FF1E0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EDE")]
		[Address(RVA = "0x7FF240", Offset = "0x7FF240", VA = "0x7FF240", Slot = "4")]
		private void UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0x7FF310", Offset = "0x7FF310", VA = "0x7FF310", Slot = "5")]
		private void UnityEngine.EventSystems.IPointerUpHandler.OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0x7FF3E4", Offset = "0x7FF3E4", VA = "0x7FF3E4")]
		public ButtonInsideScrollList()
		{
		}
	}
	[Token(Token = "0x20003F9")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x39AD00", Offset = "0x39AD00")]
	public class TextButtonTransition : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Text _text;

		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color NormalColor;

		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color HoverColor;

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0x80092C", Offset = "0x80092C", VA = "0x80092C")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0x80098C", Offset = "0x80098C", VA = "0x80098C", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0x8009E8", Offset = "0x8009E8", VA = "0x8009E8", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001EE4")]
		[Address(RVA = "0x800A40", Offset = "0x800A40", VA = "0x800A40")]
		public TextButtonTransition()
		{
		}
	}
	[Token(Token = "0x20003FA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x39AD70", Offset = "0x39AD70")]
	public class TextToggleIsOnTransition : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Toggle toggle;

		[Token(Token = "0x4001D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Text _text;

		[Token(Token = "0x4001D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Color NormalOnColor;

		[Token(Token = "0x4001D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color NormalOffColor;

		[Token(Token = "0x4001D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color HoverOnColor;

		[Token(Token = "0x4001D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Color HoverOffColor;

		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool isHover;

		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0x800AA0", Offset = "0x800AA0", VA = "0x800AA0")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0x800B80", Offset = "0x800B80", VA = "0x800B80")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0x800C44", Offset = "0x800C44", VA = "0x800C44")]
		public void OnValueChanged(bool isOn)
		{
		}

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0x800D08", Offset = "0x800D08", VA = "0x800D08", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0x800DB0", Offset = "0x800DB0", VA = "0x800DB0", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0x800E58", Offset = "0x800E58", VA = "0x800E58")]
		public TextToggleIsOnTransition()
		{
		}
	}
}
namespace ExitGames.Client.DemoParticle
{
	[Token(Token = "0x20003FB")]
	public class TimeKeeper
	{
		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int lastExecutionTime;

		[Token(Token = "0x4001D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool shouldExecute;

		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A27C8", Offset = "0x3A27C8")]
		private int <Interval>k__BackingField;

		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A27D8", Offset = "0x3A27D8")]
		private bool <IsEnabled>k__BackingField;

		[Token(Token = "0x1700036B")]
		public int Interval
		{
			[Token(Token = "0x6001EEB")]
			[Address(RVA = "0x7FEF04", Offset = "0x7FEF04", VA = "0x7FEF04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACD9C", Offset = "0x3ACD9C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001EEC")]
			[Address(RVA = "0x7FEF0C", Offset = "0x7FEF0C", VA = "0x7FEF0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACDAC", Offset = "0x3ACDAC")]
			set
			{
			}
		}

		[Token(Token = "0x1700036C")]
		public bool IsEnabled
		{
			[Token(Token = "0x6001EED")]
			[Address(RVA = "0x7FEF14", Offset = "0x7FEF14", VA = "0x7FEF14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACDBC", Offset = "0x3ACDBC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EEE")]
			[Address(RVA = "0x7FEF1C", Offset = "0x7FEF1C", VA = "0x7FEF1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACDCC", Offset = "0x3ACDCC")]
			set
			{
			}
		}

		[Token(Token = "0x1700036D")]
		public bool ShouldExecute
		{
			[Token(Token = "0x6001EEF")]
			[Address(RVA = "0x7FEF24", Offset = "0x7FEF24", VA = "0x7FEF24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EF0")]
			[Address(RVA = "0x7FEF7C", Offset = "0x7FEF7C", VA = "0x7FEF7C")]
			set
			{
			}
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0x7FEF84", Offset = "0x7FEF84", VA = "0x7FEF84")]
		public TimeKeeper(int interval)
		{
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0x7FEFBC", Offset = "0x7FEFBC", VA = "0x7FEFBC")]
		public void Reset()
		{
		}
	}
}
namespace ExitGames.Client.GUI
{
	[Token(Token = "0x20003FC")]
	public enum GizmoType
	{
		[Token(Token = "0x4001D4B")]
		WireSphere,
		[Token(Token = "0x4001D4C")]
		Sphere,
		[Token(Token = "0x4001D4D")]
		WireCube,
		[Token(Token = "0x4001D4E")]
		Cube
	}
	[Token(Token = "0x20003FD")]
	public class GizmoTypeDrawer
	{
		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0x7FEFE0", Offset = "0x7FEFE0", VA = "0x7FEFE0")]
		public static void Draw(Vector3 center, GizmoType type, Color color, float size)
		{
		}

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0x7FF1D8", Offset = "0x7FF1D8", VA = "0x7FF1D8")]
		public GizmoTypeDrawer()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x20003FE")]
	public enum FaceType : uint
	{
		[Token(Token = "0x4001D50")]
		TRIANGLES,
		[Token(Token = "0x4001D51")]
		QUADS
	}
	[Token(Token = "0x20003FF")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x4001D53")]
		ABSORPTION,
		[Token(Token = "0x4001D54")]
		TRANSMISSION,
		[Token(Token = "0x4001D55")]
		SCATTERING
	}
	[Token(Token = "0x2000400")]
	public struct MeshGroup
	{
		[Token(Token = "0x4001D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public UIntPtr faceCount;

		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public FaceType faceType;

		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public IntPtr material;
	}
}
namespace Oculus.Platform
{
	[Token(Token = "0x2000401")]
	public class AbuseReportOptions
	{
		[Token(Token = "0x4001D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr Handle;

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0x7C2C30", Offset = "0x7C2C30", VA = "0x7C2C30")]
		public AbuseReportOptions()
		{
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0x7C2D50", Offset = "0x7C2D50", VA = "0x7C2D50")]
		public void SetPreventPeopleChooser(bool value)
		{
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0x7C2E80", Offset = "0x7C2E80", VA = "0x7C2E80")]
		public void SetReportType(AbuseReportType value)
		{
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0x7C2FB0", Offset = "0x7C2FB0", VA = "0x7C2FB0")]
		public static explicit operator IntPtr(AbuseReportOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001EF9")]
		[Address(RVA = "0x7C3000", Offset = "0x7C3000", VA = "0x7C3000", Slot = "1")]
		~AbuseReportOptions()
		{
		}
	}
	[Token(Token = "0x2000402")]
	public enum AbuseReportType
	{
		[Token(Token = "0x4001D5C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A27E8", Offset = "0x3A27E8")]
		Unknown,
		[Token(Token = "0x4001D5D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A281C", Offset = "0x3A281C")]
		Object,
		[Token(Token = "0x4001D5E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A2850", Offset = "0x3A2850")]
		User
	}
	[Token(Token = "0x2000403")]
	public enum AchievementType
	{
		[Token(Token = "0x4001D60")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A2884", Offset = "0x3A2884")]
		Unknown,
		[Token(Token = "0x4001D61")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A28B8", Offset = "0x3A28B8")]
		Simple,
		[Token(Token = "0x4001D62")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A28EC", Offset = "0x3A28EC")]
		Bitfield,
		[Token(Token = "0x4001D63")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A2920", Offset = "0x3A2920")]
		Count
	}
	[Token(Token = "0x2000404")]
	public class AndroidPlatform
	{
		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0x7C46D8", Offset = "0x7C46D8", VA = "0x7C46D8")]
		public bool Initialize(string appId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0x7C4884", Offset = "0x7C4884", VA = "0x7C4884")]
		public Request<PlatformInitialize> AsyncInitialize(string appId)
		{
			return null;
		}

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0x7C4A7C", Offset = "0x7C4A7C", VA = "0x7C4A7C")]
		public AndroidPlatform()
		{
		}
	}
	[Token(Token = "0x2000405")]
	public class ApplicationOptions
	{
		[Token(Token = "0x4001D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr Handle;

		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0x7C50F8", Offset = "0x7C50F8", VA = "0x7C50F8")]
		public ApplicationOptions()
		{
		}

		[Token(Token = "0x6001EFE")]
		[Address(RVA = "0x7C5218", Offset = "0x7C5218", VA = "0x7C5218")]
		public void SetDeeplinkMessage(string value)
		{
		}

		[Token(Token = "0x6001EFF")]
		[Address(RVA = "0x7C4E2C", Offset = "0x7C4E2C", VA = "0x7C4E2C")]
		public static explicit operator IntPtr(ApplicationOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001F00")]
		[Address(RVA = "0x7C5360", Offset = "0x7C5360", VA = "0x7C5360", Slot = "1")]
		~ApplicationOptions()
		{
		}
	}
	[Token(Token = "0x2000406")]
	public class CAPI
	{
		[Token(Token = "0x20008B5")]
		public struct ovrKeyValuePair
		{
			[Token(Token = "0x40029C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key_;

			[Token(Token = "0x40029C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			private KeyValuePairType valueType_;

			[Token(Token = "0x40029C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string stringValue_;

			[Token(Token = "0x40029C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int intValue_;

			[Token(Token = "0x40029C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public double doubleValue_;

			[Token(Token = "0x6003749")]
			[Address(RVA = "0x46B210", Offset = "0x46B210", VA = "0x46B210")]
			public ovrKeyValuePair(string key, string value)
			{
			}

			[Token(Token = "0x600374A")]
			[Address(RVA = "0x46B230", Offset = "0x46B230", VA = "0x46B230")]
			public ovrKeyValuePair(string key, int value)
			{
			}

			[Token(Token = "0x600374B")]
			[Address(RVA = "0x46B254", Offset = "0x46B254", VA = "0x46B254")]
			public ovrKeyValuePair(string key, double value)
			{
			}
		}

		[Token(Token = "0x20008B6")]
		public struct ovrMatchmakingCriterion
		{
			[Token(Token = "0x40029C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key_;

			[Token(Token = "0x40029C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public MatchmakingCriterionImportance importance_;

			[Token(Token = "0x40029CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public IntPtr parameterArray;

			[Token(Token = "0x40029CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public uint parameterArrayCount;

			[Token(Token = "0x600374C")]
			[Address(RVA = "0x46B310", Offset = "0x46B310", VA = "0x46B310")]
			public ovrMatchmakingCriterion(string key, MatchmakingCriterionImportance importance)
			{
			}
		}

		[Token(Token = "0x20008B7")]
		public struct ovrMatchmakingCustomQueryData
		{
			[Token(Token = "0x40029CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr dataArray;

			[Token(Token = "0x40029CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public uint dataArrayCount;

			[Token(Token = "0x40029CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public IntPtr criterionArray;

			[Token(Token = "0x40029CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public uint criterionArrayCount;
		}

		[Token(Token = "0x20008B8")]
		public struct OculusInitParams
		{
			[Token(Token = "0x40029D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int sType;

			[Token(Token = "0x40029D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public string email;

			[Token(Token = "0x40029D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string password;

			[Token(Token = "0x40029D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ulong appId;

			[Token(Token = "0x40029D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string uriPrefixOverride;
		}

		[Token(Token = "0x20008B9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D824", Offset = "0x39D824")]
		public delegate void FilterCallback([In][Out] short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels);

		[Token(Token = "0x4001D65")]
		public const string DLL_NAME = "ovrplatformloader";

		[Token(Token = "0x4001D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UTF8Encoding nativeStringEncoding;

		[Token(Token = "0x4001D67")]
		public const int VoipFilterBufferSize = 480;

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0x7C70B4", Offset = "0x7C70B4", VA = "0x7C70B4")]
		public static IntPtr ArrayOfStructsToIntPtr(Array ar)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0x7C728C", Offset = "0x7C728C", VA = "0x7C728C")]
		public static ovrKeyValuePair[] DictionaryToOVRKeyValuePairs(Dictionary<string, object> dict)
		{
			return null;
		}

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0x7C7880", Offset = "0x7C7880", VA = "0x7C7880")]
		public static byte[] IntPtrToByteArray(IntPtr data, ulong size)
		{
			return null;
		}

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0x7C7964", Offset = "0x7C7964", VA = "0x7C7964")]
		public static Dictionary<string, string> DataStoreFromNative(IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0x7C7CDC", Offset = "0x7C7CDC", VA = "0x7C7CDC")]
		public static string StringFromNative(IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0x7C7E18", Offset = "0x7C7E18", VA = "0x7C7E18")]
		public static int GetNativeStringLengthNotIncludingNullTerminator(IntPtr pointer)
		{
			return default(int);
		}

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0x7C7EAC", Offset = "0x7C7EAC", VA = "0x7C7EAC")]
		public static DateTime DateTimeFromNative(ulong seconds_since_the_one_true_epoch)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0x7C7F48", Offset = "0x7C7F48", VA = "0x7C7F48")]
		public static byte[] BlobFromNative(uint size, IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x6001F09")]
		[Address(RVA = "0x7C803C", Offset = "0x7C803C", VA = "0x7C803C")]
		public static byte[] FiledataFromNative(uint size, IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0x7C80F4", Offset = "0x7C80F4", VA = "0x7C80F4")]
		public static IntPtr StringToNative(string s)
		{
			return default(IntPtr);
		}

		[PreserveSig]
		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0x7C47B8", Offset = "0x7C47B8", VA = "0x7C47B8")]
		public static extern bool ovr_UnityInitWrapper(string appId);

		[PreserveSig]
		[Token(Token = "0x6001F0C")]
		[Address(RVA = "0x7C82B8", Offset = "0x7C82B8", VA = "0x7C82B8")]
		public static extern void ovr_UnityInitGlobals(IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x6001F0D")]
		[Address(RVA = "0x7C49B0", Offset = "0x7C49B0", VA = "0x7C49B0")]
		public static extern ulong ovr_UnityInitWrapperAsynchronous(string appId);

		[PreserveSig]
		[Token(Token = "0x6001F0E")]
		[Address(RVA = "0x7C8358", Offset = "0x7C8358", VA = "0x7C8358")]
		public static extern bool ovr_UnityInitWrapperStandalone(string accessToken, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x6001F0F")]
		[Address(RVA = "0x7C8430", Offset = "0x7C8430", VA = "0x7C8430")]
		public static extern ulong ovr_Platform_InitializeStandaloneOculus(ref OculusInitParams init);

		[PreserveSig]
		[Token(Token = "0x6001F10")]
		[Address(RVA = "0x7C8548", Offset = "0x7C8548", VA = "0x7C8548")]
		public static extern ulong ovr_PlatformInitializeWithAccessToken(ulong appId, string accessToken);

		[PreserveSig]
		[Token(Token = "0x6001F11")]
		[Address(RVA = "0x7C8628", Offset = "0x7C8628", VA = "0x7C8628")]
		public static extern bool ovr_UnityInitWrapperWindows(string appId, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x6001F12")]
		[Address(RVA = "0x7C8700", Offset = "0x7C8700", VA = "0x7C8700")]
		public static extern ulong ovr_UnityInitWrapperWindowsAsynchronous(string appId, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x6001F13")]
		[Address(RVA = "0x7C87D8", Offset = "0x7C87D8", VA = "0x7C87D8")]
		public static extern bool ovr_SetDeveloperAccessToken(string accessToken);

		[Token(Token = "0x6001F14")]
		[Address(RVA = "0x7C88A4", Offset = "0x7C88A4", VA = "0x7C88A4")]
		public static string ovr_GetLoggedInUserLocale()
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001F15")]
		[Address(RVA = "0x7C8918", Offset = "0x7C8918", VA = "0x7C8918")]
		private static extern IntPtr ovr_GetLoggedInUserLocale_Native();

		[PreserveSig]
		[Token(Token = "0x6001F16")]
		[Address(RVA = "0x7C89B0", Offset = "0x7C89B0", VA = "0x7C89B0")]
		public static extern IntPtr ovr_PopMessage();

		[PreserveSig]
		[Token(Token = "0x6001F17")]
		[Address(RVA = "0x7C8A48", Offset = "0x7C8A48", VA = "0x7C8A48")]
		public static extern void ovr_FreeMessage(IntPtr message);

		[PreserveSig]
		[Token(Token = "0x6001F18")]
		[Address(RVA = "0x7C8AE8", Offset = "0x7C8AE8", VA = "0x7C8AE8")]
		public static extern uint ovr_NetworkingPeer_GetSendPolicy(IntPtr networkingPeer);

		[PreserveSig]
		[Token(Token = "0x6001F19")]
		[Address(RVA = "0x7C8B88", Offset = "0x7C8B88", VA = "0x7C8B88")]
		public static extern IntPtr ovr_Voip_CreateEncoder();

		[PreserveSig]
		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0x7C8C20", Offset = "0x7C8C20", VA = "0x7C8C20")]
		public static extern void ovr_Voip_DestroyEncoder(IntPtr encoder);

		[PreserveSig]
		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0x7C8CC0", Offset = "0x7C8CC0", VA = "0x7C8CC0")]
		public static extern IntPtr ovr_Voip_CreateDecoder();

		[PreserveSig]
		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0x7C8D58", Offset = "0x7C8D58", VA = "0x7C8D58")]
		public static extern void ovr_Voip_DestroyDecoder(IntPtr decoder);

		[PreserveSig]
		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0x7C8DF8", Offset = "0x7C8DF8", VA = "0x7C8DF8")]
		public static extern void ovr_VoipDecoder_Decode(IntPtr obj, byte[] compressedData, ulong compressedSize);

		[PreserveSig]
		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0x7C8EB8", Offset = "0x7C8EB8", VA = "0x7C8EB8")]
		public static extern IntPtr ovr_Microphone_Create();

		[PreserveSig]
		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0x7C8F50", Offset = "0x7C8F50", VA = "0x7C8F50")]
		public static extern void ovr_Microphone_Destroy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001F20")]
		[Address(RVA = "0x7C8FF0", Offset = "0x7C8FF0", VA = "0x7C8FF0")]
		public static extern void ovr_Voip_SetSystemVoipPassthrough(bool passthrough);

		[PreserveSig]
		[Token(Token = "0x6001F21")]
		[Address(RVA = "0x7C9090", Offset = "0x7C9090", VA = "0x7C9090")]
		public static extern void ovr_Voip_SetSystemVoipMicrophoneMuted(VoipMuteState muted);

		[PreserveSig]
		[Token(Token = "0x6001F22")]
		[Address(RVA = "0x7C9130", Offset = "0x7C9130", VA = "0x7C9130")]
		public static extern void ovr_UnityResetTestPlatform();

		[PreserveSig]
		[Token(Token = "0x6001F23")]
		[Address(RVA = "0x7C4410", Offset = "0x7C4410", VA = "0x7C4410")]
		public static extern ulong ovr_HTTP_GetWithMessageType(string url, int messageType);

		[PreserveSig]
		[Token(Token = "0x6001F24")]
		[Address(RVA = "0x7C91C8", Offset = "0x7C91C8", VA = "0x7C91C8")]
		public static extern void ovr_CrashApplication();

		[PreserveSig]
		[Token(Token = "0x6001F25")]
		[Address(RVA = "0x7C9260", Offset = "0x7C9260", VA = "0x7C9260")]
		public static extern void ovr_Voip_SetMicrophoneFilterCallback(FilterCallback cb);

		[PreserveSig]
		[Token(Token = "0x6001F26")]
		[Address(RVA = "0x7C9310", Offset = "0x7C9310", VA = "0x7C9310")]
		public static extern void ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer(FilterCallback cb, UIntPtr bufferSizeElements);

		[Token(Token = "0x6001F27")]
		[Address(RVA = "0x7C93C4", Offset = "0x7C93C4", VA = "0x7C93C4")]
		public static void LogNewEvent(string eventName, Dictionary<string, string> values)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001F28")]
		[Address(RVA = "0x7C9760", Offset = "0x7C9760", VA = "0x7C9760")]
		public static extern void ovr_Log_NewEvent(IntPtr eventName, IntPtr[] values, UIntPtr length);

		[PreserveSig]
		[Token(Token = "0x6001F29")]
		[Address(RVA = "0x7C4FD0", Offset = "0x7C4FD0", VA = "0x7C4FD0")]
		public static extern IntPtr ovr_ApplicationLifecycle_GetLaunchDetails();

		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0x7C9818", Offset = "0x7C9818", VA = "0x7C9818")]
		public static ulong ovr_HTTP_StartTransfer(string url, ovrKeyValuePair[] headers)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F2B")]
		[Address(RVA = "0x7C9938", Offset = "0x7C9938", VA = "0x7C9938")]
		private static extern ulong ovr_HTTP_StartTransfer_Native(IntPtr url, ovrKeyValuePair[] headers, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0x7C9AC8", Offset = "0x7C9AC8", VA = "0x7C9AC8")]
		public static extern bool ovr_HTTP_Write(ulong transferId, byte[] bytes, UIntPtr length);

		[PreserveSig]
		[Token(Token = "0x6001F2D")]
		[Address(RVA = "0x7C9B90", Offset = "0x7C9B90", VA = "0x7C9B90")]
		public static extern void ovr_HTTP_WriteEOM(ulong transferId);

		[Token(Token = "0x6001F2E")]
		[Address(RVA = "0x7C9C38", Offset = "0x7C9C38", VA = "0x7C9C38")]
		public static string ovr_Message_GetStringForJavascript(IntPtr message)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001F2F")]
		[Address(RVA = "0x7C9CB8", Offset = "0x7C9CB8", VA = "0x7C9CB8")]
		private static extern IntPtr ovr_Message_GetStringForJavascript_Native(IntPtr message);

		[PreserveSig]
		[Token(Token = "0x6001F30")]
		[Address(RVA = "0x7C9D58", Offset = "0x7C9D58", VA = "0x7C9D58")]
		public static extern void ovr_Net_Accept(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6001F31")]
		[Address(RVA = "0x7C9E00", Offset = "0x7C9E00", VA = "0x7C9E00")]
		public static extern bool ovr_Net_AcceptForCurrentRoom();

		[PreserveSig]
		[Token(Token = "0x6001F32")]
		[Address(RVA = "0x7C9EA0", Offset = "0x7C9EA0", VA = "0x7C9EA0")]
		public static extern void ovr_Net_Close(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6001F33")]
		[Address(RVA = "0x7C9F48", Offset = "0x7C9F48", VA = "0x7C9F48")]
		public static extern void ovr_Net_CloseForCurrentRoom();

		[PreserveSig]
		[Token(Token = "0x6001F34")]
		[Address(RVA = "0x7C9FE0", Offset = "0x7C9FE0", VA = "0x7C9FE0")]
		public static extern void ovr_Net_Connect(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6001F35")]
		[Address(RVA = "0x7CA088", Offset = "0x7CA088", VA = "0x7CA088")]
		public static extern bool ovr_Net_IsConnected(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6001F36")]
		[Address(RVA = "0x7CA138", Offset = "0x7CA138", VA = "0x7CA138")]
		public static extern ulong ovr_Net_Ping(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6001F37")]
		[Address(RVA = "0x7CA1E0", Offset = "0x7CA1E0", VA = "0x7CA1E0")]
		public static extern IntPtr ovr_Net_ReadPacket();

		[PreserveSig]
		[Token(Token = "0x6001F38")]
		[Address(RVA = "0x7CA278", Offset = "0x7CA278", VA = "0x7CA278")]
		public static extern bool ovr_Net_SendPacket(ulong userID, UIntPtr length, byte[] bytes, SendPolicy policy);

		[PreserveSig]
		[Token(Token = "0x6001F39")]
		[Address(RVA = "0x7CA348", Offset = "0x7CA348", VA = "0x7CA348")]
		public static extern bool ovr_Net_SendPacketToCurrentRoom(UIntPtr length, byte[] bytes, SendPolicy policy);

		[PreserveSig]
		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0x7CA408", Offset = "0x7CA408", VA = "0x7CA408")]
		public static extern int ovr_Party_PluginGetSharedMemHandle();

		[PreserveSig]
		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0x7CA4A0", Offset = "0x7CA4A0", VA = "0x7CA4A0")]
		public static extern VoipMuteState ovr_Party_PluginGetVoipMicrophoneMuted();

		[PreserveSig]
		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0x7CA538", Offset = "0x7CA538", VA = "0x7CA538")]
		public static extern bool ovr_Party_PluginGetVoipPassthrough();

		[PreserveSig]
		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0x7CA5D8", Offset = "0x7CA5D8", VA = "0x7CA5D8")]
		public static extern SystemVoipStatus ovr_Party_PluginGetVoipStatus();

		[PreserveSig]
		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0x7CA670", Offset = "0x7CA670", VA = "0x7CA670")]
		public static extern void ovr_Voip_Accept(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0x7CA718", Offset = "0x7CA718", VA = "0x7CA718")]
		public static extern VoipDtxState ovr_Voip_GetIsConnectionUsingDtx(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6001F40")]
		[Address(RVA = "0x7CA7C0", Offset = "0x7CA7C0", VA = "0x7CA7C0")]
		public static extern VoipBitrate ovr_Voip_GetLocalBitrate(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6001F41")]
		[Address(RVA = "0x7CA868", Offset = "0x7CA868", VA = "0x7CA868")]
		public static extern UIntPtr ovr_Voip_GetOutputBufferMaxSize();

		[PreserveSig]
		[Token(Token = "0x6001F42")]
		[Address(RVA = "0x7CA900", Offset = "0x7CA900", VA = "0x7CA900")]
		public static extern UIntPtr ovr_Voip_GetPCM(ulong senderID, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6001F43")]
		[Address(RVA = "0x7CA9C0", Offset = "0x7CA9C0", VA = "0x7CA9C0")]
		public static extern UIntPtr ovr_Voip_GetPCMFloat(ulong senderID, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6001F44")]
		[Address(RVA = "0x7CAA80", Offset = "0x7CAA80", VA = "0x7CAA80")]
		public static extern UIntPtr ovr_Voip_GetPCMSize(ulong senderID);

		[PreserveSig]
		[Token(Token = "0x6001F45")]
		[Address(RVA = "0x7CAB28", Offset = "0x7CAB28", VA = "0x7CAB28")]
		public static extern UIntPtr ovr_Voip_GetPCMWithTimestamp(ulong senderID, short[] outputBuffer, UIntPtr outputBufferNumElements, uint[] timestamp);

		[PreserveSig]
		[Token(Token = "0x6001F46")]
		[Address(RVA = "0x7CABF8", Offset = "0x7CABF8", VA = "0x7CABF8")]
		public static extern UIntPtr ovr_Voip_GetPCMWithTimestampFloat(ulong senderID, float[] outputBuffer, UIntPtr outputBufferNumElements, uint[] timestamp);

		[PreserveSig]
		[Token(Token = "0x6001F47")]
		[Address(RVA = "0x7CACC8", Offset = "0x7CACC8", VA = "0x7CACC8")]
		public static extern VoipBitrate ovr_Voip_GetRemoteBitrate(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6001F48")]
		[Address(RVA = "0x7CAD70", Offset = "0x7CAD70", VA = "0x7CAD70")]
		public static extern uint ovr_Voip_GetSyncTimestamp(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001F49")]
		[Address(RVA = "0x7CAE18", Offset = "0x7CAE18", VA = "0x7CAE18")]
		public static extern long ovr_Voip_GetSyncTimestampDifference(uint lhs, uint rhs);

		[PreserveSig]
		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0x7CAEC0", Offset = "0x7CAEC0", VA = "0x7CAEC0")]
		public static extern VoipMuteState ovr_Voip_GetSystemVoipMicrophoneMuted();

		[PreserveSig]
		[Token(Token = "0x6001F4B")]
		[Address(RVA = "0x7CAF58", Offset = "0x7CAF58", VA = "0x7CAF58")]
		public static extern SystemVoipStatus ovr_Voip_GetSystemVoipStatus();

		[PreserveSig]
		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0x7CAFF0", Offset = "0x7CAFF0", VA = "0x7CAFF0")]
		public static extern void ovr_Voip_SetMicrophoneMuted(VoipMuteState state);

		[PreserveSig]
		[Token(Token = "0x6001F4D")]
		[Address(RVA = "0x7CB090", Offset = "0x7CB090", VA = "0x7CB090")]
		public static extern void ovr_Voip_SetNewConnectionOptions(IntPtr voipOptions);

		[PreserveSig]
		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0x7CB130", Offset = "0x7CB130", VA = "0x7CB130")]
		public static extern void ovr_Voip_SetOutputSampleRate(VoipSampleRate rate);

		[PreserveSig]
		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0x7CB1D0", Offset = "0x7CB1D0", VA = "0x7CB1D0")]
		public static extern void ovr_Voip_Start(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001F50")]
		[Address(RVA = "0x7CB278", Offset = "0x7CB278", VA = "0x7CB278")]
		public static extern void ovr_Voip_Stop(ulong userID);

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0x7C32DC", Offset = "0x7C32DC", VA = "0x7C32DC")]
		public static ulong ovr_Achievements_AddCount(string name, ulong count)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F52")]
		[Address(RVA = "0x7CB320", Offset = "0x7CB320", VA = "0x7CB320")]
		private static extern ulong ovr_Achievements_AddCount_Native(IntPtr name, ulong count);

		[Token(Token = "0x6001F53")]
		[Address(RVA = "0x7C3528", Offset = "0x7C3528", VA = "0x7C3528")]
		public static ulong ovr_Achievements_AddFields(string name, string fields)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F54")]
		[Address(RVA = "0x7CB3D0", Offset = "0x7CB3D0", VA = "0x7CB3D0")]
		private static extern ulong ovr_Achievements_AddFields_Native(IntPtr name, IntPtr fields);

		[PreserveSig]
		[Token(Token = "0x6001F55")]
		[Address(RVA = "0x7C3770", Offset = "0x7C3770", VA = "0x7C3770")]
		public static extern ulong ovr_Achievements_GetAllDefinitions();

		[PreserveSig]
		[Token(Token = "0x6001F56")]
		[Address(RVA = "0x7C3968", Offset = "0x7C3968", VA = "0x7C3968")]
		public static extern ulong ovr_Achievements_GetAllProgress();

		[PreserveSig]
		[Token(Token = "0x6001F57")]
		[Address(RVA = "0x7C3B78", Offset = "0x7C3B78", VA = "0x7C3B78")]
		public static extern ulong ovr_Achievements_GetDefinitionsByName(string[] names, int count);

		[PreserveSig]
		[Token(Token = "0x6001F58")]
		[Address(RVA = "0x7C3E70", Offset = "0x7C3E70", VA = "0x7C3E70")]
		public static extern ulong ovr_Achievements_GetProgressByName(string[] names, int count);

		[Token(Token = "0x6001F59")]
		[Address(RVA = "0x7C4154", Offset = "0x7C4154", VA = "0x7C4154")]
		public static ulong ovr_Achievements_Unlock(string name)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0x7CB478", Offset = "0x7CB478", VA = "0x7CB478")]
		private static extern ulong ovr_Achievements_Unlock_Native(IntPtr name);

		[PreserveSig]
		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0x7CB518", Offset = "0x7CB518", VA = "0x7CB518")]
		public static extern ulong ovr_Application_ExecuteCoordinatedLaunch(ulong appID, ulong roomID);

		[PreserveSig]
		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0x7CB5D0", Offset = "0x7CB5D0", VA = "0x7CB5D0")]
		public static extern ulong ovr_Application_GetInstalledApplications();

		[PreserveSig]
		[Token(Token = "0x6001F5D")]
		[Address(RVA = "0x7C4BE0", Offset = "0x7C4BE0", VA = "0x7C4BE0")]
		public static extern ulong ovr_Application_GetVersion();

		[PreserveSig]
		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0x7C4E80", Offset = "0x7C4E80", VA = "0x7C4E80")]
		public static extern ulong ovr_Application_LaunchOtherApp(ulong appID, IntPtr deeplink_options);

		[PreserveSig]
		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0x7CB668", Offset = "0x7CB668", VA = "0x7CB668")]
		public static extern ulong ovr_ApplicationLifecycle_GetRegisteredPIDs();

		[PreserveSig]
		[Token(Token = "0x6001F60")]
		[Address(RVA = "0x7CB700", Offset = "0x7CB700", VA = "0x7CB700")]
		public static extern ulong ovr_ApplicationLifecycle_GetSessionKey();

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0x7CB798", Offset = "0x7CB798", VA = "0x7CB798")]
		public static ulong ovr_ApplicationLifecycle_RegisterSessionKey(string sessionKey)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F62")]
		[Address(RVA = "0x7CB860", Offset = "0x7CB860", VA = "0x7CB860")]
		private static extern ulong ovr_ApplicationLifecycle_RegisterSessionKey_Native(IntPtr sessionKey);

		[PreserveSig]
		[Token(Token = "0x6001F63")]
		[Address(RVA = "0x7C5638", Offset = "0x7C5638", VA = "0x7C5638")]
		public static extern ulong ovr_AssetFile_Delete(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6001F64")]
		[Address(RVA = "0x7C5850", Offset = "0x7C5850", VA = "0x7C5850")]
		public static extern ulong ovr_AssetFile_DeleteById(ulong assetFileID);

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0x7C5A5C", Offset = "0x7C5A5C", VA = "0x7C5A5C")]
		public static ulong ovr_AssetFile_DeleteByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F66")]
		[Address(RVA = "0x7CB900", Offset = "0x7CB900", VA = "0x7CB900")]
		private static extern ulong ovr_AssetFile_DeleteByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x6001F67")]
		[Address(RVA = "0x7C5C90", Offset = "0x7C5C90", VA = "0x7C5C90")]
		public static extern ulong ovr_AssetFile_Download(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6001F68")]
		[Address(RVA = "0x7C5EA8", Offset = "0x7C5EA8", VA = "0x7C5EA8")]
		public static extern ulong ovr_AssetFile_DownloadById(ulong assetFileID);

		[Token(Token = "0x6001F69")]
		[Address(RVA = "0x7C60B4", Offset = "0x7C60B4", VA = "0x7C60B4")]
		public static ulong ovr_AssetFile_DownloadByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0x7CB9A0", Offset = "0x7CB9A0", VA = "0x7CB9A0")]
		private static extern ulong ovr_AssetFile_DownloadByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x6001F6B")]
		[Address(RVA = "0x7C62E8", Offset = "0x7C62E8", VA = "0x7C62E8")]
		public static extern ulong ovr_AssetFile_DownloadCancel(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6001F6C")]
		[Address(RVA = "0x7C6500", Offset = "0x7C6500", VA = "0x7C6500")]
		public static extern ulong ovr_AssetFile_DownloadCancelById(ulong assetFileID);

		[Token(Token = "0x6001F6D")]
		[Address(RVA = "0x7C670C", Offset = "0x7C670C", VA = "0x7C670C")]
		public static ulong ovr_AssetFile_DownloadCancelByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F6E")]
		[Address(RVA = "0x7CBA40", Offset = "0x7CBA40", VA = "0x7CBA40")]
		private static extern ulong ovr_AssetFile_DownloadCancelByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x6001F6F")]
		[Address(RVA = "0x7C6930", Offset = "0x7C6930", VA = "0x7C6930")]
		public static extern ulong ovr_AssetFile_GetList();

		[PreserveSig]
		[Token(Token = "0x6001F70")]
		[Address(RVA = "0x7C6B38", Offset = "0x7C6B38", VA = "0x7C6B38")]
		public static extern ulong ovr_AssetFile_Status(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6001F71")]
		[Address(RVA = "0x7C6D50", Offset = "0x7C6D50", VA = "0x7C6D50")]
		public static extern ulong ovr_AssetFile_StatusById(ulong assetFileID);

		[Token(Token = "0x6001F72")]
		[Address(RVA = "0x7C6F5C", Offset = "0x7C6F5C", VA = "0x7C6F5C")]
		public static ulong ovr_AssetFile_StatusByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F73")]
		[Address(RVA = "0x7CBAE0", Offset = "0x7CBAE0", VA = "0x7CBAE0")]
		private static extern ulong ovr_AssetFile_StatusByName_Native(IntPtr assetFileName);

		[Token(Token = "0x6001F74")]
		[Address(RVA = "0x7CBB80", Offset = "0x7CBB80", VA = "0x7CBB80")]
		public static ulong ovr_Avatar_UpdateMetaData(string avatarMetaData, string imageFilePath)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F75")]
		[Address(RVA = "0x7CBC70", Offset = "0x7CBC70", VA = "0x7CBC70")]
		private static extern ulong ovr_Avatar_UpdateMetaData_Native(IntPtr avatarMetaData, IntPtr imageFilePath);

		[PreserveSig]
		[Token(Token = "0x6001F76")]
		[Address(RVA = "0x7CBD18", Offset = "0x7CBD18", VA = "0x7CBD18")]
		public static extern ulong ovr_Cal_FinalizeApplication(ulong groupingObject, ulong[] userIDs, int numUserIDs, ulong finalized_application_ID);

		[PreserveSig]
		[Token(Token = "0x6001F77")]
		[Address(RVA = "0x7CBDE8", Offset = "0x7CBDE8", VA = "0x7CBDE8")]
		public static extern ulong ovr_Cal_GetSuggestedApplications(ulong groupingObject, ulong[] userIDs, int numUserIDs);

		[PreserveSig]
		[Token(Token = "0x6001F78")]
		[Address(RVA = "0x7CBEA8", Offset = "0x7CBEA8", VA = "0x7CBEA8")]
		public static extern ulong ovr_Cal_ProposeApplication(ulong groupingObject, ulong[] userIDs, int numUserIDs, ulong proposed_application_ID);

		[Token(Token = "0x6001F79")]
		[Address(RVA = "0x7CBF78", Offset = "0x7CBF78", VA = "0x7CBF78")]
		public static ulong ovr_CloudStorage_Delete(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F7A")]
		[Address(RVA = "0x7CC068", Offset = "0x7CC068", VA = "0x7CC068")]
		private static extern ulong ovr_CloudStorage_Delete_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6001F7B")]
		[Address(RVA = "0x7CC110", Offset = "0x7CC110", VA = "0x7CC110")]
		public static ulong ovr_CloudStorage_Load(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F7C")]
		[Address(RVA = "0x7CC200", Offset = "0x7CC200", VA = "0x7CC200")]
		private static extern ulong ovr_CloudStorage_Load_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6001F7D")]
		[Address(RVA = "0x7CC2A8", Offset = "0x7CC2A8", VA = "0x7CC2A8")]
		public static ulong ovr_CloudStorage_LoadBucketMetadata(string bucket)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F7E")]
		[Address(RVA = "0x7CC370", Offset = "0x7CC370", VA = "0x7CC370")]
		private static extern ulong ovr_CloudStorage_LoadBucketMetadata_Native(IntPtr bucket);

		[Token(Token = "0x6001F7F")]
		[Address(RVA = "0x7CC410", Offset = "0x7CC410", VA = "0x7CC410")]
		public static ulong ovr_CloudStorage_LoadConflictMetadata(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F80")]
		[Address(RVA = "0x7CC500", Offset = "0x7CC500", VA = "0x7CC500")]
		private static extern ulong ovr_CloudStorage_LoadConflictMetadata_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6001F81")]
		[Address(RVA = "0x7CC5A8", Offset = "0x7CC5A8", VA = "0x7CC5A8")]
		public static ulong ovr_CloudStorage_LoadHandle(string handle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F82")]
		[Address(RVA = "0x7CC670", Offset = "0x7CC670", VA = "0x7CC670")]
		private static extern ulong ovr_CloudStorage_LoadHandle_Native(IntPtr handle);

		[Token(Token = "0x6001F83")]
		[Address(RVA = "0x7CC710", Offset = "0x7CC710", VA = "0x7CC710")]
		public static ulong ovr_CloudStorage_LoadMetadata(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F84")]
		[Address(RVA = "0x7CC800", Offset = "0x7CC800", VA = "0x7CC800")]
		private static extern ulong ovr_CloudStorage_LoadMetadata_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6001F85")]
		[Address(RVA = "0x7CC8A8", Offset = "0x7CC8A8", VA = "0x7CC8A8")]
		public static ulong ovr_CloudStorage_ResolveKeepLocal(string bucket, string key, string remoteHandle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F86")]
		[Address(RVA = "0x7CC9B8", Offset = "0x7CC9B8", VA = "0x7CC9B8")]
		private static extern ulong ovr_CloudStorage_ResolveKeepLocal_Native(IntPtr bucket, IntPtr key, IntPtr remoteHandle);

		[Token(Token = "0x6001F87")]
		[Address(RVA = "0x7CCA68", Offset = "0x7CCA68", VA = "0x7CCA68")]
		public static ulong ovr_CloudStorage_ResolveKeepRemote(string bucket, string key, string remoteHandle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F88")]
		[Address(RVA = "0x7CCB78", Offset = "0x7CCB78", VA = "0x7CCB78")]
		private static extern ulong ovr_CloudStorage_ResolveKeepRemote_Native(IntPtr bucket, IntPtr key, IntPtr remoteHandle);

		[Token(Token = "0x6001F89")]
		[Address(RVA = "0x7CCC28", Offset = "0x7CCC28", VA = "0x7CCC28")]
		public static ulong ovr_CloudStorage_Save(string bucket, string key, byte[] data, uint dataSize, long counter, string extraData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F8A")]
		[Address(RVA = "0x7CCD58", Offset = "0x7CCD58", VA = "0x7CCD58")]
		private static extern ulong ovr_CloudStorage_Save_Native(IntPtr bucket, IntPtr key, byte[] data, uint dataSize, long counter, IntPtr extraData);

		[PreserveSig]
		[Token(Token = "0x6001F8B")]
		[Address(RVA = "0x7CCE30", Offset = "0x7CCE30", VA = "0x7CCE30")]
		public static extern ulong ovr_CloudStorage2_GetUserDirectoryPath();

		[PreserveSig]
		[Token(Token = "0x6001F8C")]
		[Address(RVA = "0x7CCEC8", Offset = "0x7CCEC8", VA = "0x7CCEC8")]
		public static extern ulong ovr_Colocation_GetCurrentMapUuid();

		[Token(Token = "0x6001F8D")]
		[Address(RVA = "0x7CCF60", Offset = "0x7CCF60", VA = "0x7CCF60")]
		public static ulong ovr_Colocation_RequestMap(string uuid)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F8E")]
		[Address(RVA = "0x7CD028", Offset = "0x7CD028", VA = "0x7CD028")]
		private static extern ulong ovr_Colocation_RequestMap_Native(IntPtr uuid);

		[Token(Token = "0x6001F8F")]
		[Address(RVA = "0x7CD0C8", Offset = "0x7CD0C8", VA = "0x7CD0C8")]
		public static ulong ovr_Colocation_ShareMap(string uuid)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F90")]
		[Address(RVA = "0x7CD190", Offset = "0x7CD190", VA = "0x7CD190")]
		private static extern ulong ovr_Colocation_ShareMap_Native(IntPtr uuid);

		[PreserveSig]
		[Token(Token = "0x6001F91")]
		[Address(RVA = "0x7CD230", Offset = "0x7CD230", VA = "0x7CD230")]
		public static extern ulong ovr_Entitlement_GetIsViewerEntitled();

		[Token(Token = "0x6001F92")]
		[Address(RVA = "0x7CD2C8", Offset = "0x7CD2C8", VA = "0x7CD2C8")]
		public static ulong ovr_GraphAPI_Get(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F93")]
		[Address(RVA = "0x7CD390", Offset = "0x7CD390", VA = "0x7CD390")]
		private static extern ulong ovr_GraphAPI_Get_Native(IntPtr url);

		[Token(Token = "0x6001F94")]
		[Address(RVA = "0x7CD430", Offset = "0x7CD430", VA = "0x7CD430")]
		public static ulong ovr_GraphAPI_Post(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F95")]
		[Address(RVA = "0x7CD4F8", Offset = "0x7CD4F8", VA = "0x7CD4F8")]
		private static extern ulong ovr_GraphAPI_Post_Native(IntPtr url);

		[Token(Token = "0x6001F96")]
		[Address(RVA = "0x7CD598", Offset = "0x7CD598", VA = "0x7CD598")]
		public static ulong ovr_HTTP_Get(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F97")]
		[Address(RVA = "0x7CD660", Offset = "0x7CD660", VA = "0x7CD660")]
		private static extern ulong ovr_HTTP_Get_Native(IntPtr url);

		[Token(Token = "0x6001F98")]
		[Address(RVA = "0x7CD700", Offset = "0x7CD700", VA = "0x7CD700")]
		public static ulong ovr_HTTP_GetToFile(string url, string diskFile)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F99")]
		[Address(RVA = "0x7CD7F0", Offset = "0x7CD7F0", VA = "0x7CD7F0")]
		private static extern ulong ovr_HTTP_GetToFile_Native(IntPtr url, IntPtr diskFile);

		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0x7CD898", Offset = "0x7CD898", VA = "0x7CD898")]
		public static ulong ovr_HTTP_MultiPartPost(string url, string filepath_param_name, string filepath, string access_token, ovrKeyValuePair[] post_params)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F9B")]
		[Address(RVA = "0x7CDA20", Offset = "0x7CDA20", VA = "0x7CDA20")]
		private static extern ulong ovr_HTTP_MultiPartPost_Native(IntPtr url, IntPtr filepath_param_name, IntPtr filepath, IntPtr access_token, ovrKeyValuePair[] post_params, UIntPtr numItems);

		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0x7CDBDC", Offset = "0x7CDBDC", VA = "0x7CDBDC")]
		public static ulong ovr_HTTP_Post(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0x7CDCA8", Offset = "0x7CDCA8", VA = "0x7CDCA8")]
		private static extern ulong ovr_HTTP_Post_Native(IntPtr url);

		[Token(Token = "0x6001F9E")]
		[Address(RVA = "0x7CDD48", Offset = "0x7CDD48", VA = "0x7CDD48")]
		public static ulong ovr_IAP_ConsumePurchase(string sku)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F9F")]
		[Address(RVA = "0x7CDE10", Offset = "0x7CDE10", VA = "0x7CDE10")]
		private static extern ulong ovr_IAP_ConsumePurchase_Native(IntPtr sku);

		[PreserveSig]
		[Token(Token = "0x6001FA0")]
		[Address(RVA = "0x7CDEB0", Offset = "0x7CDEB0", VA = "0x7CDEB0")]
		public static extern ulong ovr_IAP_GetProductsBySKU(string[] skus, int count);

		[PreserveSig]
		[Token(Token = "0x6001FA1")]
		[Address(RVA = "0x7CE030", Offset = "0x7CE030", VA = "0x7CE030")]
		public static extern ulong ovr_IAP_GetViewerPurchases();

		[PreserveSig]
		[Token(Token = "0x6001FA2")]
		[Address(RVA = "0x7CE0C8", Offset = "0x7CE0C8", VA = "0x7CE0C8")]
		public static extern ulong ovr_IAP_GetViewerPurchasesDurableCache();

		[Token(Token = "0x6001FA3")]
		[Address(RVA = "0x7CE160", Offset = "0x7CE160", VA = "0x7CE160")]
		public static ulong ovr_IAP_LaunchCheckoutFlow(string sku)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001FA4")]
		[Address(RVA = "0x7CE228", Offset = "0x7CE228", VA = "0x7CE228")]
		private static extern ulong ovr_IAP_LaunchCheckoutFlow_Native(IntPtr sku);

		[PreserveSig]
		[Token(Token = "0x6001FA5")]
		[Address(RVA = "0x7CE2C8", Offset = "0x7CE2C8", VA = "0x7CE2C8")]
		public static extern ulong ovr_LanguagePack_GetCurrent();

		[Token(Token = "0x6001FA6")]
		[Address(RVA = "0x7CE360", Offset = "0x7CE360", VA = "0x7CE360")]
		public static ulong ovr_LanguagePack_SetCurrent(string tag)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001FA7")]
		[Address(RVA = "0x7CE428", Offset = "0x7CE428", VA = "0x7CE428")]
		private static extern ulong ovr_LanguagePack_SetCurrent_Native(IntPtr tag);

		[Token(Token = "0x6001FA8")]
		[Address(RVA = "0x7CE4C8", Offset = "0x7CE4C8", VA = "0x7CE4C8")]
		public static ulong ovr_Leaderboard_GetEntries(string leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0x7CE5B0", Offset = "0x7CE5B0", VA = "0x7CE5B0")]
		private static extern ulong ovr_Leaderboard_GetEntries_Native(IntPtr leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt);

		[Token(Token = "0x6001FAA")]
		[Address(RVA = "0x7CE668", Offset = "0x7CE668", VA = "0x7CE668")]
		public static ulong ovr_Leaderboard_GetEntriesAfterRank(string leaderboardName, int limit, ulong afterRank)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001FAB")]
		[Address(RVA = "0x7CE750", Offset = "0x7CE750", VA = "0x7CE750")]
		private static extern ulong ovr_Leaderboard_GetEntriesAfterRank_Native(IntPtr leaderboardName, int limit, ulong afterRank);

		[PreserveSig]
		[Token(Token = "0x6001FAC")]
		[Address(RVA = "0x7CE808", Offset = "0x7CE808", VA = "0x7CE808")]
		public static extern ulong ovr_Leaderboard_GetNextEntries(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001FAD")]
		[Address(RVA = "0x7CE8A8", Offset = "0x7CE8A8", VA = "0x7CE8A8")]
		public static extern ulong ovr_Leaderboard_GetPreviousEntries(IntPtr handle);

		[Token(Token = "0x6001FAE")]
		[Address(RVA = "0x7CE948", Offset = "0x7CE948", VA = "0x7CE948")]
		public static ulong ovr_Leaderboard_WriteEntry(string leaderboardName, long score, byte[] extraData, uint extraDataLength, bool forceUpdate)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001FAF")]
		[Address(RVA = "0x7CEA40", Offset = "0x7CEA40", VA = "0x7CEA40")]
		private static extern ulong ovr_Leaderboard_WriteEntry_Native(IntPtr leaderboardName, long score, byte[] extraData, uint extraDataLength, bool forceUpdate);

		[PreserveSig]
		[Token(Token = "0x6001FB0")]
		[Address(RVA = "0x7CEB10", Offset = "0x7CEB10", VA = "0x7CEB10")]
		public static extern ulong ovr_Livestreaming_GetStatus();

		[Token(Token = "0x6001FB1")]
		[Address(RVA = "0x7CEBA8", Offset = "0x7CEBA8", VA = "0x7CEBA8")]
		public static ulong ovr_Livestreaming_IsAllowedForApplication(string packageName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001FB2")]
		[Address(RVA = "0x7CEC70", Offset = "0x7CEC70", VA = "0x7CEC70")]
		private static extern ulong ovr_Livestreaming_IsAllowedForApplication_Native(IntPtr packageName);

		[PreserveSig]
		[Token(Token = "0x6001FB3")]
		[Address(RVA = "0x7CED10", Offset = "0x7CED10", VA = "0x7CED10")]
		public static extern ulong ovr_Livestreaming_PauseStream();

		[PreserveSig]
		[Token(Token = "0x6001FB4")]
		[Address(RVA = "0x7CEDA8", Offset = "0x7CEDA8", VA = "0x7CEDA8")]
		public static extern ulong ovr_Livestreaming_ResumeStream();

		[PreserveSig]
		[Token(Token = "0x6001FB5")]
		[Address(RVA = "0x7CEE40", Offset = "0x7CEE40", VA = "0x7CEE40")]
		public static extern ulong ovr_Livestreaming_StartPartyStream();

		[PreserveSig]
		[Token(Token = "0x6001FB6")]
		[Address(RVA = "0x7CEED8", Offset = "0x7CEED8", VA = "0x7CEED8")]
		public static extern ulong ovr_Livestreaming_StartStream(LivestreamingAudience audience, LivestreamingMicrophoneStatus micStatus);

		[PreserveSig]
		[Token(Token = "0x6001FB7")]
		[Address(RVA = "0x7CEF80", Offset = "0x7CEF80", VA = "0x7CEF80")]
		public static extern ulong ovr_Livestreaming_StopPartyStream();

		[PreserveSig]
		[Token(Token = "0x6001FB8")]
		[Address(RVA = "0x7CF018", Offset = "0x7CF018", VA = "0x7CF018")]
		public static extern ulong ovr_Livestreaming_StopStream();

		[PreserveSig]
		[Token(Token = "0x6001FB9")]
		[Address(RVA = "0x7CF0B0", Offset = "0x7CF0B0", VA = "0x7CF0B0")]
		public static extern ulong ovr_Livestreaming_UpdateCommentsOverlayVisibility(bool isVisible);

		[PreserveSig]
		[Token(Token = "0x6001FBA")]
		[Address(RVA = "0x7CF150", Offset = "0x7CF150", VA = "0x7CF150")]
		public static extern ulong ovr_Livestreaming_UpdateMicStatus(LivestreamingMicrophoneStatus micStatus);

		[Token(Token = "0x6001FBB")]
		[Address(RVA = "0x7CF1F0", Offset = "0x7CF1F0", VA = "0x7CF1F0")]
		public static ulong ovr_Matchmaking_Browse(string pool, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001FBC")]
		[Address(RVA = "0x7CF2C0", Offset = "0x7CF2C0", VA = "0x7CF2C0")]
		private static extern ulong ovr_Matchmaking_Browse_Native(IntPtr pool, IntPtr customQueryData);

		[Token(Token = "0x6001FBD")]
		[Address(RVA = "0x7CF368", Offset = "0x7CF368", VA = "0x7CF368")]
		public static ulong ovr_Matchmaking_Browse2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001FBE")]
		[Address(RVA = "0x7CF438", Offset = "0x7CF438", VA = "0x7CF438")]
		private static extern ulong ovr_Matchmaking_Browse2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0x7CF4E0", Offset = "0x7CF4E0", VA = "0x7CF4E0")]
		public static ulong ovr_Matchmaking_Cancel(string pool, string requestHash)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001FC0")]
		[Address(RVA = "0x7CF5D0", Offset = "0x7CF5D0", VA = "0x7CF5D0")]
		private static extern ulong ovr_Matchmaking_Cancel_Native(IntPtr pool, IntPtr requestHash);

		[PreserveSig]
		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0x7CF678", Offset = "0x7CF678", VA = "0x7CF678")]
		public static extern ulong ovr_Matchmaking_Cancel2();

		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0x7CF710", Offset = "0x7CF710", VA = "0x7CF710")]
		public static ulong ovr_Matchmaking_CreateAndEnqueueRoom(string pool, uint maxUsers, bool subscribeToUpdates, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0x7CF7F8", Offset = "0x7CF7F8", VA = "0x7CF7F8")]
		private static extern ulong ovr_Matchmaking_CreateAndEnqueueRoom_Native(IntPtr pool, uint maxUsers, bool subscribeToUpdates, IntPtr customQueryData);

		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0x7CF8B0", Offset = "0x7CF8B0", VA = "0x7CF8B0")]
		public static ulong ovr_Matchmaking_CreateAndEnqueueRoom2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001FC5")]
		[Address(RVA = "0x7CF980", Offset = "0x7CF980", VA = "0x7CF980")]
		private static extern ulong ovr_Matchmaking_CreateAndEnqueueRoom2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6001FC6")]
		[Address(RVA = "0x7CFA28", Offset = "0x7CFA28", VA = "0x7CFA28")]
		public static ulong ovr_Matchmaking_CreateRoom(string pool, uint maxUsers, bool subscribeToUpdates)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0x7CFB00", Offset = "0x7CFB00", VA = "0x7CFB00")]
		private static extern ulong ovr_Matchmaking_CreateRoom_Native(IntPtr pool, uint maxUsers, bool subscribeToUpdates);

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0x7CFBB0", Offset = "0x7CFBB0", VA = "0x7CFBB0")]
		public static ulong ovr_Matchmaking_CreateRoom2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001FC9")]
		[Address(RVA = "0x7CFC80", Offset = "0x7CFC80", VA = "0x7CFC80")]
		private static extern ulong ovr_Matchmaking_CreateRoom2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6001FCA")]
		[Address(RVA = "0x7CFD28", Offset = "0x7CFD28", VA = "0x7CFD28")]
		public static ulong ovr_Matchmaking_Enqueue(string pool, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001FCB")]
		[Address(RVA = "0x7CFDF8", Offset = "0x7CFDF8", VA = "0x7CFDF8")]
		private static extern ulong ovr_Matchmaking_Enqueue_Native(IntPtr pool, IntPtr customQueryData);

		[Token(Token = "0x6001FCC")]
		[Address(RVA = "0x7CFEA0", Offset = "0x7CFEA0", VA = "0x7CFEA0")]
		public static ulong ovr_Matchmaking_Enqueue2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001FCD")]
		[Address(RVA = "0x7CFF70", Offset = "0x7CFF70", VA = "0x7CFF70")]
		private static extern ulong ovr_Matchmaking_Enqueue2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[PreserveSig]
		[Token(Token = "0x6001FCE")]
		[Address(RVA = "0x7D0018", Offset = "0x7D0018", VA = "0x7D0018")]
		public static extern ulong ovr_Matchmaking_EnqueueRoom(ulong roomID, IntPtr customQueryData);

		[PreserveSig]
		[Token(Token = "0x6001FCF")]
		[Address(RVA = "0x7D00C8", Offset = "0x7D00C8", VA = "0x7D00C8")]
		public static extern ulong ovr_Matchmaking_EnqueueRoom2(ulong roomID, IntPtr matchmakingOptions);

		[PreserveSig]
		[Token(Token = "0x6001FD0")]
		[Address(RVA = "0x7D0178", Offset = "0x7D0178", VA = "0x7D0178")]
		public static extern ulong ovr_Matchmaking_GetAdminSnapshot();

		[Token(Token = "0x6001FD1")]
		[Address(RVA = "0x7D0210", Offset = "0x7D0210", VA = "0x7D0210")]
		public static ulong ovr_Matchmaking_GetStats(string pool, uint maxLevel, MatchmakingStatApproach approach)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001FD2")]
		[Address(RVA = "0x7D02E8", Offset = "0x7D02E8", VA = "0x7D02E8")]
		private static extern ulong ovr_Matchmaking_GetStats_Native(IntPtr pool, uint maxLevel, MatchmakingStatApproach approach);

		[PreserveSig]
		[Token(Token = "0x6001FD3")]
		[Address(RVA = "0x7D0398", Offset = "0x7D0398", VA = "0x7D0398")]
		public static extern ulong ovr_Matchmaking_JoinRoom(ulong roomID, bool subscribeToUpdates);

		[Token(Token = "0x6001FD4")]
		[Address(RVA = "0x7D0448", Offset = "0x7D0448", VA = "0x7D0448")]
		public static ulong ovr_Matchmaking_ReportResultInsecure(ulong roomID, ovrKeyValuePair[] data)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001FD5")]
		[Address(RVA = "0x7D0528", Offset = "0x7D0528", VA = "0x7D0528")]
		private static extern ulong ovr_Matchmaking_ReportResultInsecure_Native(ulong roomID, ovrKeyValuePair[] data, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x6001FD6")]
		[Address(RVA = "0x7D06C0", Offset = "0x7D06C0", VA = "0x7D06C0")]
		public static extern ulong ovr_Matchmaking_StartMatch(ulong roomID);

		[Token(Token = "0x6001FD7")]
		[Address(RVA = "0x7D0768", Offset = "0x7D0768", VA = "0x7D0768")]
		public static ulong ovr_Media_ShareToFacebook(string postTextSuggestion, string filePath, MediaContentType contentType)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001FD8")]
		[Address(RVA = "0x7D0860", Offset = "0x7D0860", VA = "0x7D0860")]
		private static extern ulong ovr_Media_ShareToFacebook_Native(IntPtr postTextSuggestion, IntPtr filePath, MediaContentType contentType);

		[PreserveSig]
		[Token(Token = "0x6001FD9")]
		[Address(RVA = "0x7D0910", Offset = "0x7D0910", VA = "0x7D0910")]
		public static extern ulong ovr_Notification_GetRoomInvites();

		[PreserveSig]
		[Token(Token = "0x6001FDA")]
		[Address(RVA = "0x7D09A8", Offset = "0x7D09A8", VA = "0x7D09A8")]
		public static extern ulong ovr_Notification_MarkAsRead(ulong notificationID);

		[PreserveSig]
		[Token(Token = "0x6001FDB")]
		[Address(RVA = "0x7D0A50", Offset = "0x7D0A50", VA = "0x7D0A50")]
		public static extern ulong ovr_Party_Create();

		[PreserveSig]
		[Token(Token = "0x6001FDC")]
		[Address(RVA = "0x7D0AE8", Offset = "0x7D0AE8", VA = "0x7D0AE8")]
		public static extern ulong ovr_Party_GatherInApplication(ulong partyID, ulong appID);

		[PreserveSig]
		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0x7D0BA0", Offset = "0x7D0BA0", VA = "0x7D0BA0")]
		public static extern ulong ovr_Party_Get(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0x7D0C48", Offset = "0x7D0C48", VA = "0x7D0C48")]
		public static extern ulong ovr_Party_GetCurrent();

		[PreserveSig]
		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0x7D0CE0", Offset = "0x7D0CE0", VA = "0x7D0CE0")]
		public static extern ulong ovr_Party_GetCurrentForUser(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0x7D0D88", Offset = "0x7D0D88", VA = "0x7D0D88")]
		public static extern ulong ovr_Party_Invite(ulong partyID, ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001FE1")]
		[Address(RVA = "0x7D0E40", Offset = "0x7D0E40", VA = "0x7D0E40")]
		public static extern ulong ovr_Party_Join(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6001FE2")]
		[Address(RVA = "0x7D0EE8", Offset = "0x7D0EE8", VA = "0x7D0EE8")]
		public static extern ulong ovr_Party_Leave(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6001FE3")]
		[Address(RVA = "0x7D0F90", Offset = "0x7D0F90", VA = "0x7D0F90")]
		public static extern ulong ovr_RichPresence_Clear();

		[PreserveSig]
		[Token(Token = "0x6001FE4")]
		[Address(RVA = "0x7D1028", Offset = "0x7D1028", VA = "0x7D1028")]
		public static extern ulong ovr_RichPresence_Set(IntPtr richPresenceOptions);

		[PreserveSig]
		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0x7D10C8", Offset = "0x7D10C8", VA = "0x7D10C8")]
		public static extern ulong ovr_Room_CreateAndJoinPrivate(RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates);

		[PreserveSig]
		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0x7D1178", Offset = "0x7D1178", VA = "0x7D1178")]
		public static extern ulong ovr_Room_CreateAndJoinPrivate2(RoomJoinPolicy joinPolicy, uint maxUsers, IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x6001FE7")]
		[Address(RVA = "0x7D1228", Offset = "0x7D1228", VA = "0x7D1228")]
		public static extern ulong ovr_Room_Get(ulong roomID);

		[PreserveSig]
		[Token(Token = "0x6001FE8")]
		[Address(RVA = "0x7D12D0", Offset = "0x7D12D0", VA = "0x7D12D0")]
		public static extern ulong ovr_Room_GetCurrent();

		[PreserveSig]
		[Token(Token = "0x6001FE9")]
		[Address(RVA = "0x7D1368", Offset = "0x7D1368", VA = "0x7D1368")]
		public static extern ulong ovr_Room_GetCurrentForUser(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0x7D1410", Offset = "0x7D1410", VA = "0x7D1410")]
		public static extern ulong ovr_Room_GetInvitableUsers();

		[PreserveSig]
		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0x7D14A8", Offset = "0x7D14A8", VA = "0x7D14A8")]
		public static extern ulong ovr_Room_GetInvitableUsers2(IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x6001FEC")]
		[Address(RVA = "0x7D1548", Offset = "0x7D1548", VA = "0x7D1548")]
		public static extern ulong ovr_Room_GetModeratedRooms();

		[PreserveSig]
		[Token(Token = "0x6001FED")]
		[Address(RVA = "0x7D15E0", Offset = "0x7D15E0", VA = "0x7D15E0")]
		public static extern ulong ovr_Room_GetSocialRooms(ulong appID);

		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0x7D1688", Offset = "0x7D1688", VA = "0x7D1688")]
		public static ulong ovr_Room_InviteUser(ulong roomID, string inviteToken)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001FEF")]
		[Address(RVA = "0x7D1768", Offset = "0x7D1768", VA = "0x7D1768")]
		private static extern ulong ovr_Room_InviteUser_Native(ulong roomID, IntPtr inviteToken);

		[PreserveSig]
		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0x7D1818", Offset = "0x7D1818", VA = "0x7D1818")]
		public static extern ulong ovr_Room_Join(ulong roomID, bool subscribeToUpdates);

		[PreserveSig]
		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0x7D18C8", Offset = "0x7D18C8", VA = "0x7D18C8")]
		public static extern ulong ovr_Room_Join2(ulong roomID, IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x6001FF2")]
		[Address(RVA = "0x7D1978", Offset = "0x7D1978", VA = "0x7D1978")]
		public static extern ulong ovr_Room_KickUser(ulong roomID, ulong userID, int kickDurationSeconds);

		[PreserveSig]
		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0x7D1A38", Offset = "0x7D1A38", VA = "0x7D1A38")]
		public static extern ulong ovr_Room_LaunchInvitableUserFlow(ulong roomID);

		[PreserveSig]
		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0x7D1AE0", Offset = "0x7D1AE0", VA = "0x7D1AE0")]
		public static extern ulong ovr_Room_Leave(ulong roomID);

		[Token(Token = "0x6001FF5")]
		[Address(RVA = "0x7D1B88", Offset = "0x7D1B88", VA = "0x7D1B88")]
		public static ulong ovr_Room_SetDescription(ulong roomID, string description)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001FF6")]
		[Address(RVA = "0x7D1C68", Offset = "0x7D1C68", VA = "0x7D1C68")]
		private static extern ulong ovr_Room_SetDescription_Native(ulong roomID, IntPtr description);

		[Token(Token = "0x6001FF7")]
		[Address(RVA = "0x7D1D18", Offset = "0x7D1D18", VA = "0x7D1D18")]
		public static ulong ovr_Room_UpdateDataStore(ulong roomID, ovrKeyValuePair[] data)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001FF8")]
		[Address(RVA = "0x7D1DF8", Offset = "0x7D1DF8", VA = "0x7D1DF8")]
		private static extern ulong ovr_Room_UpdateDataStore_Native(ulong roomID, ovrKeyValuePair[] data, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x6001FF9")]
		[Address(RVA = "0x7D1F90", Offset = "0x7D1F90", VA = "0x7D1F90")]
		public static extern ulong ovr_Room_UpdateMembershipLockStatus(ulong roomID, RoomMembershipLockStatus membershipLockStatus);

		[PreserveSig]
		[Token(Token = "0x6001FFA")]
		[Address(RVA = "0x7D2040", Offset = "0x7D2040", VA = "0x7D2040")]
		public static extern ulong ovr_Room_UpdateOwner(ulong roomID, ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001FFB")]
		[Address(RVA = "0x7D20F8", Offset = "0x7D20F8", VA = "0x7D20F8")]
		public static extern ulong ovr_Room_UpdatePrivateRoomJoinPolicy(ulong roomID, RoomJoinPolicy newJoinPolicy);

		[PreserveSig]
		[Token(Token = "0x6001FFC")]
		[Address(RVA = "0x7D21A8", Offset = "0x7D21A8", VA = "0x7D21A8")]
		public static extern ulong ovr_SystemPermissions_GetStatus(PermissionType permType);

		[PreserveSig]
		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0x7D2248", Offset = "0x7D2248", VA = "0x7D2248")]
		public static extern ulong ovr_SystemPermissions_LaunchDeeplink(PermissionType permType);

		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0x7D22E8", Offset = "0x7D22E8", VA = "0x7D22E8")]
		public static ulong ovr_User_CancelRecordingForReportFlow(string recordingUUID)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001FFF")]
		[Address(RVA = "0x7D23B0", Offset = "0x7D23B0", VA = "0x7D23B0")]
		private static extern ulong ovr_User_CancelRecordingForReportFlow_Native(IntPtr recordingUUID);

		[PreserveSig]
		[Token(Token = "0x6002000")]
		[Address(RVA = "0x7D2450", Offset = "0x7D2450", VA = "0x7D2450")]
		public static extern ulong ovr_User_Get(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6002001")]
		[Address(RVA = "0x7D24F8", Offset = "0x7D24F8", VA = "0x7D24F8")]
		public static extern ulong ovr_User_GetAccessToken();

		[PreserveSig]
		[Token(Token = "0x6002002")]
		[Address(RVA = "0x7D2590", Offset = "0x7D2590", VA = "0x7D2590")]
		public static extern ulong ovr_User_GetLinkedAccounts(IntPtr userOptions);

		[PreserveSig]
		[Token(Token = "0x6002003")]
		[Address(RVA = "0x7D2630", Offset = "0x7D2630", VA = "0x7D2630")]
		public static extern ulong ovr_User_GetLoggedInUser();

		[PreserveSig]
		[Token(Token = "0x6002004")]
		[Address(RVA = "0x7D26C8", Offset = "0x7D26C8", VA = "0x7D26C8")]
		public static extern ulong ovr_User_GetLoggedInUserFriends();

		[PreserveSig]
		[Token(Token = "0x6002005")]
		[Address(RVA = "0x7D2760", Offset = "0x7D2760", VA = "0x7D2760")]
		public static extern ulong ovr_User_GetLoggedInUserFriendsAndRooms();

		[PreserveSig]
		[Token(Token = "0x6002006")]
		[Address(RVA = "0x7D27F8", Offset = "0x7D27F8", VA = "0x7D27F8")]
		public static extern ulong ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms(IntPtr userOptions);

		[PreserveSig]
		[Token(Token = "0x6002007")]
		[Address(RVA = "0x7D2898", Offset = "0x7D2898", VA = "0x7D2898")]
		public static extern ulong ovr_User_GetOrgScopedID(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6002008")]
		[Address(RVA = "0x7D2940", Offset = "0x7D2940", VA = "0x7D2940")]
		public static extern ulong ovr_User_GetSdkAccounts();

		[PreserveSig]
		[Token(Token = "0x6002009")]
		[Address(RVA = "0x7D29D8", Offset = "0x7D29D8", VA = "0x7D29D8")]
		public static extern ulong ovr_User_GetUserProof();

		[PreserveSig]
		[Token(Token = "0x600200A")]
		[Address(RVA = "0x7D2A70", Offset = "0x7D2A70", VA = "0x7D2A70")]
		public static extern ulong ovr_User_LaunchBlockFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600200B")]
		[Address(RVA = "0x7D2B18", Offset = "0x7D2B18", VA = "0x7D2B18")]
		public static extern ulong ovr_User_LaunchFriendRequestFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600200C")]
		[Address(RVA = "0x7D2BC0", Offset = "0x7D2BC0", VA = "0x7D2BC0")]
		public static extern ulong ovr_User_LaunchProfile(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600200D")]
		[Address(RVA = "0x7D2C68", Offset = "0x7D2C68", VA = "0x7D2C68")]
		public static extern ulong ovr_User_LaunchReportFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600200E")]
		[Address(RVA = "0x7D2D10", Offset = "0x7D2D10", VA = "0x7D2D10")]
		public static extern ulong ovr_User_LaunchReportFlow2(ulong optionalUserID, IntPtr abuseReportOptions);

		[PreserveSig]
		[Token(Token = "0x600200F")]
		[Address(RVA = "0x7D2DC0", Offset = "0x7D2DC0", VA = "0x7D2DC0")]
		public static extern ulong ovr_User_LaunchUnblockFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6002010")]
		[Address(RVA = "0x7D2E68", Offset = "0x7D2E68", VA = "0x7D2E68")]
		public static extern ulong ovr_User_NewEntitledTestUser();

		[PreserveSig]
		[Token(Token = "0x6002011")]
		[Address(RVA = "0x7D2F00", Offset = "0x7D2F00", VA = "0x7D2F00")]
		public static extern ulong ovr_User_NewTestUser();

		[PreserveSig]
		[Token(Token = "0x6002012")]
		[Address(RVA = "0x7D2F98", Offset = "0x7D2F98", VA = "0x7D2F98")]
		public static extern ulong ovr_User_NewTestUserFriends();

		[PreserveSig]
		[Token(Token = "0x6002013")]
		[Address(RVA = "0x7D3030", Offset = "0x7D3030", VA = "0x7D3030")]
		public static extern ulong ovr_User_StartRecordingForReportFlow();

		[Token(Token = "0x6002014")]
		[Address(RVA = "0x7D30C8", Offset = "0x7D30C8", VA = "0x7D30C8")]
		public static ulong ovr_User_StopRecordingAndLaunchReportFlow(ulong optionalUserID, string optionalRecordingUUID)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6002015")]
		[Address(RVA = "0x7D31A8", Offset = "0x7D31A8", VA = "0x7D31A8")]
		private static extern ulong ovr_User_StopRecordingAndLaunchReportFlow_Native(ulong optionalUserID, IntPtr optionalRecordingUUID);

		[Token(Token = "0x6002016")]
		[Address(RVA = "0x7D3258", Offset = "0x7D3258", VA = "0x7D3258")]
		public static ulong ovr_User_StopRecordingAndLaunchReportFlow2(ulong optionalUserID, string optionalRecordingUUID, IntPtr abuseReportOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6002017")]
		[Address(RVA = "0x7D3348", Offset = "0x7D3348", VA = "0x7D3348")]
		private static extern ulong ovr_User_StopRecordingAndLaunchReportFlow2_Native(ulong optionalUserID, IntPtr optionalRecordingUUID, IntPtr abuseReportOptions);

		[Token(Token = "0x6002018")]
		[Address(RVA = "0x7D3400", Offset = "0x7D3400", VA = "0x7D3400")]
		public static ulong ovr_User_TestUserCreateDeviceManifest(string deviceID, ulong[] appIDs, int numAppIDs)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6002019")]
		[Address(RVA = "0x7D34D8", Offset = "0x7D34D8", VA = "0x7D34D8")]
		private static extern ulong ovr_User_TestUserCreateDeviceManifest_Native(IntPtr deviceID, ulong[] appIDs, int numAppIDs);

		[PreserveSig]
		[Token(Token = "0x600201A")]
		[Address(RVA = "0x7D3590", Offset = "0x7D3590", VA = "0x7D3590")]
		public static extern ulong ovr_Voip_SetSystemVoipSuppressed(bool suppressed);

		[Token(Token = "0x600201B")]
		[Address(RVA = "0x7D3630", Offset = "0x7D3630", VA = "0x7D3630")]
		public static string ovr_AbuseReportRecording_GetRecordingUuid(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600201C")]
		[Address(RVA = "0x7D36B0", Offset = "0x7D36B0", VA = "0x7D36B0")]
		private static extern IntPtr ovr_AbuseReportRecording_GetRecordingUuid_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600201D")]
		[Address(RVA = "0x7D3750", Offset = "0x7D3750", VA = "0x7D3750")]
		public static extern uint ovr_AchievementDefinition_GetBitfieldLength(IntPtr obj);

		[Token(Token = "0x600201E")]
		[Address(RVA = "0x7D37F0", Offset = "0x7D37F0", VA = "0x7D37F0")]
		public static string ovr_AchievementDefinition_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600201F")]
		[Address(RVA = "0x7D3870", Offset = "0x7D3870", VA = "0x7D3870")]
		private static extern IntPtr ovr_AchievementDefinition_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002020")]
		[Address(RVA = "0x7D3910", Offset = "0x7D3910", VA = "0x7D3910")]
		public static extern ulong ovr_AchievementDefinition_GetTarget(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002021")]
		[Address(RVA = "0x7D39B0", Offset = "0x7D39B0", VA = "0x7D39B0")]
		public static extern AchievementType ovr_AchievementDefinition_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002022")]
		[Address(RVA = "0x7D3A50", Offset = "0x7D3A50", VA = "0x7D3A50")]
		public static extern IntPtr ovr_AchievementDefinitionArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6002023")]
		[Address(RVA = "0x7D3AF8", Offset = "0x7D3AF8", VA = "0x7D3AF8")]
		public static string ovr_AchievementDefinitionArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002024")]
		[Address(RVA = "0x7D3B78", Offset = "0x7D3B78", VA = "0x7D3B78")]
		private static extern IntPtr ovr_AchievementDefinitionArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002025")]
		[Address(RVA = "0x7D3C18", Offset = "0x7D3C18", VA = "0x7D3C18")]
		public static extern UIntPtr ovr_AchievementDefinitionArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002026")]
		[Address(RVA = "0x7D3CB8", Offset = "0x7D3CB8", VA = "0x7D3CB8")]
		public static extern bool ovr_AchievementDefinitionArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6002027")]
		[Address(RVA = "0x7D3D60", Offset = "0x7D3D60", VA = "0x7D3D60")]
		public static string ovr_AchievementProgress_GetBitfield(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002028")]
		[Address(RVA = "0x7D3DE0", Offset = "0x7D3DE0", VA = "0x7D3DE0")]
		private static extern IntPtr ovr_AchievementProgress_GetBitfield_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002029")]
		[Address(RVA = "0x7D3E80", Offset = "0x7D3E80", VA = "0x7D3E80")]
		public static extern ulong ovr_AchievementProgress_GetCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600202A")]
		[Address(RVA = "0x7D3F20", Offset = "0x7D3F20", VA = "0x7D3F20")]
		public static extern bool ovr_AchievementProgress_GetIsUnlocked(IntPtr obj);

		[Token(Token = "0x600202B")]
		[Address(RVA = "0x7D3FC8", Offset = "0x7D3FC8", VA = "0x7D3FC8")]
		public static string ovr_AchievementProgress_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600202C")]
		[Address(RVA = "0x7D4048", Offset = "0x7D4048", VA = "0x7D4048")]
		private static extern IntPtr ovr_AchievementProgress_GetName_Native(IntPtr obj);

		[Token(Token = "0x600202D")]
		[Address(RVA = "0x7D40E8", Offset = "0x7D40E8", VA = "0x7D40E8")]
		public static DateTime ovr_AchievementProgress_GetUnlockTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x600202E")]
		[Address(RVA = "0x7D4180", Offset = "0x7D4180", VA = "0x7D4180")]
		private static extern ulong ovr_AchievementProgress_GetUnlockTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600202F")]
		[Address(RVA = "0x7D4220", Offset = "0x7D4220", VA = "0x7D4220")]
		public static extern IntPtr ovr_AchievementProgressArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6002030")]
		[Address(RVA = "0x7D42C8", Offset = "0x7D42C8", VA = "0x7D42C8")]
		public static string ovr_AchievementProgressArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002031")]
		[Address(RVA = "0x7D4348", Offset = "0x7D4348", VA = "0x7D4348")]
		private static extern IntPtr ovr_AchievementProgressArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002032")]
		[Address(RVA = "0x7D43E8", Offset = "0x7D43E8", VA = "0x7D43E8")]
		public static extern UIntPtr ovr_AchievementProgressArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002033")]
		[Address(RVA = "0x7D4488", Offset = "0x7D4488", VA = "0x7D4488")]
		public static extern bool ovr_AchievementProgressArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002034")]
		[Address(RVA = "0x7D4530", Offset = "0x7D4530", VA = "0x7D4530")]
		public static extern bool ovr_AchievementUpdate_GetJustUnlocked(IntPtr obj);

		[Token(Token = "0x6002035")]
		[Address(RVA = "0x7D45D8", Offset = "0x7D45D8", VA = "0x7D45D8")]
		public static string ovr_AchievementUpdate_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002036")]
		[Address(RVA = "0x7D4658", Offset = "0x7D4658", VA = "0x7D4658")]
		private static extern IntPtr ovr_AchievementUpdate_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002037")]
		[Address(RVA = "0x7D46F8", Offset = "0x7D46F8", VA = "0x7D46F8")]
		public static extern ulong ovr_Application_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002038")]
		[Address(RVA = "0x7D4798", Offset = "0x7D4798", VA = "0x7D4798")]
		public static extern int ovr_ApplicationVersion_GetCurrentCode(IntPtr obj);

		[Token(Token = "0x6002039")]
		[Address(RVA = "0x7D4838", Offset = "0x7D4838", VA = "0x7D4838")]
		public static string ovr_ApplicationVersion_GetCurrentName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600203A")]
		[Address(RVA = "0x7D48B8", Offset = "0x7D48B8", VA = "0x7D48B8")]
		private static extern IntPtr ovr_ApplicationVersion_GetCurrentName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600203B")]
		[Address(RVA = "0x7D4958", Offset = "0x7D4958", VA = "0x7D4958")]
		public static extern int ovr_ApplicationVersion_GetLatestCode(IntPtr obj);

		[Token(Token = "0x600203C")]
		[Address(RVA = "0x7D49F8", Offset = "0x7D49F8", VA = "0x7D49F8")]
		public static string ovr_ApplicationVersion_GetLatestName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600203D")]
		[Address(RVA = "0x7D4A78", Offset = "0x7D4A78", VA = "0x7D4A78")]
		private static extern IntPtr ovr_ApplicationVersion_GetLatestName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600203E")]
		[Address(RVA = "0x7D4B18", Offset = "0x7D4B18", VA = "0x7D4B18")]
		public static extern ulong ovr_AssetDetails_GetAssetId(IntPtr obj);

		[Token(Token = "0x600203F")]
		[Address(RVA = "0x7D4BB8", Offset = "0x7D4BB8", VA = "0x7D4BB8")]
		public static string ovr_AssetDetails_GetAssetType(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002040")]
		[Address(RVA = "0x7D4C38", Offset = "0x7D4C38", VA = "0x7D4C38")]
		private static extern IntPtr ovr_AssetDetails_GetAssetType_Native(IntPtr obj);

		[Token(Token = "0x6002041")]
		[Address(RVA = "0x7D4CD8", Offset = "0x7D4CD8", VA = "0x7D4CD8")]
		public static string ovr_AssetDetails_GetDownloadStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002042")]
		[Address(RVA = "0x7D4D58", Offset = "0x7D4D58", VA = "0x7D4D58")]
		private static extern IntPtr ovr_AssetDetails_GetDownloadStatus_Native(IntPtr obj);

		[Token(Token = "0x6002043")]
		[Address(RVA = "0x7D4DF8", Offset = "0x7D4DF8", VA = "0x7D4DF8")]
		public static string ovr_AssetDetails_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002044")]
		[Address(RVA = "0x7D4E78", Offset = "0x7D4E78", VA = "0x7D4E78")]
		private static extern IntPtr ovr_AssetDetails_GetFilepath_Native(IntPtr obj);

		[Token(Token = "0x6002045")]
		[Address(RVA = "0x7D4F18", Offset = "0x7D4F18", VA = "0x7D4F18")]
		public static string ovr_AssetDetails_GetIapStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002046")]
		[Address(RVA = "0x7D4F98", Offset = "0x7D4F98", VA = "0x7D4F98")]
		private static extern IntPtr ovr_AssetDetails_GetIapStatus_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002047")]
		[Address(RVA = "0x7D5038", Offset = "0x7D5038", VA = "0x7D5038")]
		public static extern IntPtr ovr_AssetDetails_GetLanguage(IntPtr obj);

		[Token(Token = "0x6002048")]
		[Address(RVA = "0x7D50D8", Offset = "0x7D50D8", VA = "0x7D50D8")]
		public static string ovr_AssetDetails_GetMetadata(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002049")]
		[Address(RVA = "0x7D5158", Offset = "0x7D5158", VA = "0x7D5158")]
		private static extern IntPtr ovr_AssetDetails_GetMetadata_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600204A")]
		[Address(RVA = "0x7D51F8", Offset = "0x7D51F8", VA = "0x7D51F8")]
		public static extern IntPtr ovr_AssetDetailsArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x600204B")]
		[Address(RVA = "0x7D52A0", Offset = "0x7D52A0", VA = "0x7D52A0")]
		public static extern UIntPtr ovr_AssetDetailsArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600204C")]
		[Address(RVA = "0x7D5340", Offset = "0x7D5340", VA = "0x7D5340")]
		public static extern ulong ovr_AssetFileDeleteResult_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600204D")]
		[Address(RVA = "0x7D53E0", Offset = "0x7D53E0", VA = "0x7D53E0")]
		public static extern ulong ovr_AssetFileDeleteResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x600204E")]
		[Address(RVA = "0x7D5480", Offset = "0x7D5480", VA = "0x7D5480")]
		public static string ovr_AssetFileDeleteResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600204F")]
		[Address(RVA = "0x7D5500", Offset = "0x7D5500", VA = "0x7D5500")]
		private static extern IntPtr ovr_AssetFileDeleteResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002050")]
		[Address(RVA = "0x7D55A0", Offset = "0x7D55A0", VA = "0x7D55A0")]
		public static extern bool ovr_AssetFileDeleteResult_GetSuccess(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002051")]
		[Address(RVA = "0x7D5648", Offset = "0x7D5648", VA = "0x7D5648")]
		public static extern ulong ovr_AssetFileDownloadCancelResult_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002052")]
		[Address(RVA = "0x7D56E8", Offset = "0x7D56E8", VA = "0x7D56E8")]
		public static extern ulong ovr_AssetFileDownloadCancelResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x6002053")]
		[Address(RVA = "0x7D5788", Offset = "0x7D5788", VA = "0x7D5788")]
		public static string ovr_AssetFileDownloadCancelResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002054")]
		[Address(RVA = "0x7D5808", Offset = "0x7D5808", VA = "0x7D5808")]
		private static extern IntPtr ovr_AssetFileDownloadCancelResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002055")]
		[Address(RVA = "0x7D58A8", Offset = "0x7D58A8", VA = "0x7D58A8")]
		public static extern bool ovr_AssetFileDownloadCancelResult_GetSuccess(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002056")]
		[Address(RVA = "0x7D5950", Offset = "0x7D5950", VA = "0x7D5950")]
		public static extern ulong ovr_AssetFileDownloadResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x6002057")]
		[Address(RVA = "0x7D59F0", Offset = "0x7D59F0", VA = "0x7D59F0")]
		public static string ovr_AssetFileDownloadResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002058")]
		[Address(RVA = "0x7D5A70", Offset = "0x7D5A70", VA = "0x7D5A70")]
		private static extern IntPtr ovr_AssetFileDownloadResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002059")]
		[Address(RVA = "0x7D5B10", Offset = "0x7D5B10", VA = "0x7D5B10")]
		public static extern ulong ovr_AssetFileDownloadUpdate_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600205A")]
		[Address(RVA = "0x7D5BB0", Offset = "0x7D5BB0", VA = "0x7D5BB0")]
		public static extern ulong ovr_AssetFileDownloadUpdate_GetAssetId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600205B")]
		[Address(RVA = "0x7D5C50", Offset = "0x7D5C50", VA = "0x7D5C50")]
		public static extern uint ovr_AssetFileDownloadUpdate_GetBytesTotal(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600205C")]
		[Address(RVA = "0x7D5CF0", Offset = "0x7D5CF0", VA = "0x7D5CF0")]
		public static extern int ovr_AssetFileDownloadUpdate_GetBytesTransferred(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600205D")]
		[Address(RVA = "0x7D5D90", Offset = "0x7D5D90", VA = "0x7D5D90")]
		public static extern bool ovr_AssetFileDownloadUpdate_GetCompleted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600205E")]
		[Address(RVA = "0x7D5E38", Offset = "0x7D5E38", VA = "0x7D5E38")]
		public static extern int ovr_CalApplicationFinalized_GetCountdownMS(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600205F")]
		[Address(RVA = "0x7D5ED8", Offset = "0x7D5ED8", VA = "0x7D5ED8")]
		public static extern ulong ovr_CalApplicationFinalized_GetID(IntPtr obj);

		[Token(Token = "0x6002060")]
		[Address(RVA = "0x7D5F78", Offset = "0x7D5F78", VA = "0x7D5F78")]
		public static string ovr_CalApplicationFinalized_GetLaunchDetails(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002061")]
		[Address(RVA = "0x7D5FF8", Offset = "0x7D5FF8", VA = "0x7D5FF8")]
		private static extern IntPtr ovr_CalApplicationFinalized_GetLaunchDetails_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002062")]
		[Address(RVA = "0x7D6098", Offset = "0x7D6098", VA = "0x7D6098")]
		public static extern ulong ovr_CalApplicationProposed_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002063")]
		[Address(RVA = "0x7D6138", Offset = "0x7D6138", VA = "0x7D6138")]
		public static extern ulong ovr_CalApplicationSuggestion_GetID(IntPtr obj);

		[Token(Token = "0x6002064")]
		[Address(RVA = "0x7D61D8", Offset = "0x7D61D8", VA = "0x7D61D8")]
		public static string ovr_CalApplicationSuggestion_GetSocialContext(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002065")]
		[Address(RVA = "0x7D6258", Offset = "0x7D6258", VA = "0x7D6258")]
		private static extern IntPtr ovr_CalApplicationSuggestion_GetSocialContext_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002066")]
		[Address(RVA = "0x7D62F8", Offset = "0x7D62F8", VA = "0x7D62F8")]
		public static extern IntPtr ovr_CalApplicationSuggestionArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6002067")]
		[Address(RVA = "0x7D63A0", Offset = "0x7D63A0", VA = "0x7D63A0")]
		public static extern UIntPtr ovr_CalApplicationSuggestionArray_GetSize(IntPtr obj);

		[Token(Token = "0x6002068")]
		[Address(RVA = "0x7D6440", Offset = "0x7D6440", VA = "0x7D6440")]
		public static string ovr_CloudStorage2UserDirectoryPathResponse_GetPath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002069")]
		[Address(RVA = "0x7D64C0", Offset = "0x7D64C0", VA = "0x7D64C0")]
		private static extern IntPtr ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600206A")]
		[Address(RVA = "0x7D6560", Offset = "0x7D6560", VA = "0x7D6560")]
		public static extern IntPtr ovr_CloudStorageConflictMetadata_GetLocal(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600206B")]
		[Address(RVA = "0x7D6600", Offset = "0x7D6600", VA = "0x7D6600")]
		public static extern IntPtr ovr_CloudStorageConflictMetadata_GetRemote(IntPtr obj);

		[Token(Token = "0x600206C")]
		[Address(RVA = "0x7D66A0", Offset = "0x7D66A0", VA = "0x7D66A0")]
		public static string ovr_CloudStorageData_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600206D")]
		[Address(RVA = "0x7D6720", Offset = "0x7D6720", VA = "0x7D6720")]
		private static extern IntPtr ovr_CloudStorageData_GetBucket_Native(IntPtr obj);

		[Token(Token = "0x600206E")]
		[Address(RVA = "0x7D67C0", Offset = "0x7D67C0", VA = "0x7D67C0")]
		public static byte[] ovr_CloudStorageData_GetData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600206F")]
		[Address(RVA = "0x7D68F0", Offset = "0x7D68F0", VA = "0x7D68F0")]
		private static extern IntPtr ovr_CloudStorageData_GetData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002070")]
		[Address(RVA = "0x7D6850", Offset = "0x7D6850", VA = "0x7D6850")]
		public static extern uint ovr_CloudStorageData_GetDataSize(IntPtr obj);

		[Token(Token = "0x6002071")]
		[Address(RVA = "0x7D6990", Offset = "0x7D6990", VA = "0x7D6990")]
		public static string ovr_CloudStorageData_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002072")]
		[Address(RVA = "0x7D6A10", Offset = "0x7D6A10", VA = "0x7D6A10")]
		private static extern IntPtr ovr_CloudStorageData_GetKey_Native(IntPtr obj);

		[Token(Token = "0x6002073")]
		[Address(RVA = "0x7D6AB0", Offset = "0x7D6AB0", VA = "0x7D6AB0")]
		public static string ovr_CloudStorageMetadata_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002074")]
		[Address(RVA = "0x7D6B30", Offset = "0x7D6B30", VA = "0x7D6B30")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetBucket_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002075")]
		[Address(RVA = "0x7D6BD0", Offset = "0x7D6BD0", VA = "0x7D6BD0")]
		public static extern long ovr_CloudStorageMetadata_GetCounter(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002076")]
		[Address(RVA = "0x7D6C70", Offset = "0x7D6C70", VA = "0x7D6C70")]
		public static extern uint ovr_CloudStorageMetadata_GetDataSize(IntPtr obj);

		[Token(Token = "0x6002077")]
		[Address(RVA = "0x7D6D10", Offset = "0x7D6D10", VA = "0x7D6D10")]
		public static string ovr_CloudStorageMetadata_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002078")]
		[Address(RVA = "0x7D6D90", Offset = "0x7D6D90", VA = "0x7D6D90")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetExtraData_Native(IntPtr obj);

		[Token(Token = "0x6002079")]
		[Address(RVA = "0x7D6E30", Offset = "0x7D6E30", VA = "0x7D6E30")]
		public static string ovr_CloudStorageMetadata_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600207A")]
		[Address(RVA = "0x7D6EB0", Offset = "0x7D6EB0", VA = "0x7D6EB0")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetKey_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600207B")]
		[Address(RVA = "0x7D6F50", Offset = "0x7D6F50", VA = "0x7D6F50")]
		public static extern ulong ovr_CloudStorageMetadata_GetSaveTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600207C")]
		[Address(RVA = "0x7D6FF0", Offset = "0x7D6FF0", VA = "0x7D6FF0")]
		public static extern CloudStorageDataStatus ovr_CloudStorageMetadata_GetStatus(IntPtr obj);

		[Token(Token = "0x600207D")]
		[Address(RVA = "0x7D7090", Offset = "0x7D7090", VA = "0x7D7090")]
		public static string ovr_CloudStorageMetadata_GetVersionHandle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600207E")]
		[Address(RVA = "0x7D7110", Offset = "0x7D7110", VA = "0x7D7110")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetVersionHandle_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600207F")]
		[Address(RVA = "0x7D71B0", Offset = "0x7D71B0", VA = "0x7D71B0")]
		public static extern IntPtr ovr_CloudStorageMetadataArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6002080")]
		[Address(RVA = "0x7D7258", Offset = "0x7D7258", VA = "0x7D7258")]
		public static string ovr_CloudStorageMetadataArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002081")]
		[Address(RVA = "0x7D72D8", Offset = "0x7D72D8", VA = "0x7D72D8")]
		private static extern IntPtr ovr_CloudStorageMetadataArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002082")]
		[Address(RVA = "0x7D7378", Offset = "0x7D7378", VA = "0x7D7378")]
		public static extern UIntPtr ovr_CloudStorageMetadataArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002083")]
		[Address(RVA = "0x7D7418", Offset = "0x7D7418", VA = "0x7D7418")]
		public static extern bool ovr_CloudStorageMetadataArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6002084")]
		[Address(RVA = "0x7D74C0", Offset = "0x7D74C0", VA = "0x7D74C0")]
		public static string ovr_CloudStorageUpdateResponse_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002085")]
		[Address(RVA = "0x7D7540", Offset = "0x7D7540", VA = "0x7D7540")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetBucket_Native(IntPtr obj);

		[Token(Token = "0x6002086")]
		[Address(RVA = "0x7D75E0", Offset = "0x7D75E0", VA = "0x7D75E0")]
		public static string ovr_CloudStorageUpdateResponse_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002087")]
		[Address(RVA = "0x7D7660", Offset = "0x7D7660", VA = "0x7D7660")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetKey_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002088")]
		[Address(RVA = "0x7D7700", Offset = "0x7D7700", VA = "0x7D7700")]
		public static extern CloudStorageUpdateStatus ovr_CloudStorageUpdateResponse_GetStatus(IntPtr obj);

		[Token(Token = "0x6002089")]
		[Address(RVA = "0x7D77A0", Offset = "0x7D77A0", VA = "0x7D77A0")]
		public static string ovr_CloudStorageUpdateResponse_GetVersionHandle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600208A")]
		[Address(RVA = "0x7D7820", Offset = "0x7D7820", VA = "0x7D7820")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetVersionHandle_Native(IntPtr obj);

		[Token(Token = "0x600208B")]
		[Address(RVA = "0x7D78C0", Offset = "0x7D78C0", VA = "0x7D78C0")]
		public static uint ovr_DataStore_Contains(IntPtr obj, string key)
		{
			return default(uint);
		}

		[PreserveSig]
		[Token(Token = "0x600208C")]
		[Address(RVA = "0x7D7990", Offset = "0x7D7990", VA = "0x7D7990")]
		private static extern uint ovr_DataStore_Contains_Native(IntPtr obj, IntPtr key);

		[Token(Token = "0x600208D")]
		[Address(RVA = "0x7C7B88", Offset = "0x7C7B88", VA = "0x7C7B88")]
		public static string ovr_DataStore_GetKey(IntPtr obj, int index)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600208E")]
		[Address(RVA = "0x7D7A38", Offset = "0x7D7A38", VA = "0x7D7A38")]
		private static extern IntPtr ovr_DataStore_GetKey_Native(IntPtr obj, int index);

		[PreserveSig]
		[Token(Token = "0x600208F")]
		[Address(RVA = "0x7C7AE8", Offset = "0x7C7AE8", VA = "0x7C7AE8")]
		public static extern UIntPtr ovr_DataStore_GetNumKeys(IntPtr obj);

		[Token(Token = "0x6002090")]
		[Address(RVA = "0x7C7C0C", Offset = "0x7C7C0C", VA = "0x7C7C0C")]
		public static string ovr_DataStore_GetValue(IntPtr obj, string key)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002091")]
		[Address(RVA = "0x7D7AE0", Offset = "0x7D7AE0", VA = "0x7D7AE0")]
		private static extern IntPtr ovr_DataStore_GetValue_Native(IntPtr obj, IntPtr key);

		[PreserveSig]
		[Token(Token = "0x6002092")]
		[Address(RVA = "0x7D7B88", Offset = "0x7D7B88", VA = "0x7D7B88")]
		public static extern int ovr_Error_GetCode(IntPtr obj);

		[Token(Token = "0x6002093")]
		[Address(RVA = "0x7D7C28", Offset = "0x7D7C28", VA = "0x7D7C28")]
		public static string ovr_Error_GetDisplayableMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002094")]
		[Address(RVA = "0x7D7CA8", Offset = "0x7D7CA8", VA = "0x7D7CA8")]
		private static extern IntPtr ovr_Error_GetDisplayableMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002095")]
		[Address(RVA = "0x7D7D48", Offset = "0x7D7D48", VA = "0x7D7D48")]
		public static extern int ovr_Error_GetHttpCode(IntPtr obj);

		[Token(Token = "0x6002096")]
		[Address(RVA = "0x7D7DE8", Offset = "0x7D7DE8", VA = "0x7D7DE8")]
		public static string ovr_Error_GetMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002097")]
		[Address(RVA = "0x7D7E68", Offset = "0x7D7E68", VA = "0x7D7E68")]
		private static extern IntPtr ovr_Error_GetMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002098")]
		[Address(RVA = "0x7D7F08", Offset = "0x7D7F08", VA = "0x7D7F08")]
		public static extern IntPtr ovr_HttpTransferUpdate_GetBytes(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002099")]
		[Address(RVA = "0x7D7FA8", Offset = "0x7D7FA8", VA = "0x7D7FA8")]
		public static extern ulong ovr_HttpTransferUpdate_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600209A")]
		[Address(RVA = "0x7D8048", Offset = "0x7D8048", VA = "0x7D8048")]
		public static extern UIntPtr ovr_HttpTransferUpdate_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600209B")]
		[Address(RVA = "0x7D80E8", Offset = "0x7D80E8", VA = "0x7D80E8")]
		public static extern bool ovr_HttpTransferUpdate_IsCompleted(IntPtr obj);

		[Token(Token = "0x600209C")]
		[Address(RVA = "0x7D8190", Offset = "0x7D8190", VA = "0x7D8190")]
		public static string ovr_InstalledApplication_GetApplicationId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600209D")]
		[Address(RVA = "0x7D8210", Offset = "0x7D8210", VA = "0x7D8210")]
		private static extern IntPtr ovr_InstalledApplication_GetApplicationId_Native(IntPtr obj);

		[Token(Token = "0x600209E")]
		[Address(RVA = "0x7D82B0", Offset = "0x7D82B0", VA = "0x7D82B0")]
		public static string ovr_InstalledApplication_GetPackageName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600209F")]
		[Address(RVA = "0x7D8330", Offset = "0x7D8330", VA = "0x7D8330")]
		private static extern IntPtr ovr_InstalledApplication_GetPackageName_Native(IntPtr obj);

		[Token(Token = "0x60020A0")]
		[Address(RVA = "0x7D83D0", Offset = "0x7D83D0", VA = "0x7D83D0")]
		public static string ovr_InstalledApplication_GetStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60020A1")]
		[Address(RVA = "0x7D8450", Offset = "0x7D8450", VA = "0x7D8450")]
		private static extern IntPtr ovr_InstalledApplication_GetStatus_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020A2")]
		[Address(RVA = "0x7D84F0", Offset = "0x7D84F0", VA = "0x7D84F0")]
		public static extern int ovr_InstalledApplication_GetVersionCode(IntPtr obj);

		[Token(Token = "0x60020A3")]
		[Address(RVA = "0x7D8590", Offset = "0x7D8590", VA = "0x7D8590")]
		public static string ovr_InstalledApplication_GetVersionName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60020A4")]
		[Address(RVA = "0x7D8610", Offset = "0x7D8610", VA = "0x7D8610")]
		private static extern IntPtr ovr_InstalledApplication_GetVersionName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020A5")]
		[Address(RVA = "0x7D86B0", Offset = "0x7D86B0", VA = "0x7D86B0")]
		public static extern IntPtr ovr_InstalledApplicationArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60020A6")]
		[Address(RVA = "0x7D8758", Offset = "0x7D8758", VA = "0x7D8758")]
		public static extern UIntPtr ovr_InstalledApplicationArray_GetSize(IntPtr obj);

		[Token(Token = "0x60020A7")]
		[Address(RVA = "0x7D87F8", Offset = "0x7D87F8", VA = "0x7D87F8")]
		public static string ovr_LanguagePackInfo_GetEnglishName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60020A8")]
		[Address(RVA = "0x7D8878", Offset = "0x7D8878", VA = "0x7D8878")]
		private static extern IntPtr ovr_LanguagePackInfo_GetEnglishName_Native(IntPtr obj);

		[Token(Token = "0x60020A9")]
		[Address(RVA = "0x7D8918", Offset = "0x7D8918", VA = "0x7D8918")]
		public static string ovr_LanguagePackInfo_GetNativeName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60020AA")]
		[Address(RVA = "0x7D8998", Offset = "0x7D8998", VA = "0x7D8998")]
		private static extern IntPtr ovr_LanguagePackInfo_GetNativeName_Native(IntPtr obj);

		[Token(Token = "0x60020AB")]
		[Address(RVA = "0x7D8A38", Offset = "0x7D8A38", VA = "0x7D8A38")]
		public static string ovr_LanguagePackInfo_GetTag(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60020AC")]
		[Address(RVA = "0x7D8AB8", Offset = "0x7D8AB8", VA = "0x7D8AB8")]
		private static extern IntPtr ovr_LanguagePackInfo_GetTag_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020AD")]
		[Address(RVA = "0x7D8B58", Offset = "0x7D8B58", VA = "0x7D8B58")]
		public static extern bool ovr_LaunchBlockFlowResult_GetDidBlock(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020AE")]
		[Address(RVA = "0x7D8C00", Offset = "0x7D8C00", VA = "0x7D8C00")]
		public static extern bool ovr_LaunchBlockFlowResult_GetDidCancel(IntPtr obj);

		[Token(Token = "0x60020AF")]
		[Address(RVA = "0x7D8CA8", Offset = "0x7D8CA8", VA = "0x7D8CA8")]
		public static string ovr_LaunchDetails_GetDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60020B0")]
		[Address(RVA = "0x7D8D28", Offset = "0x7D8D28", VA = "0x7D8D28")]
		private static extern IntPtr ovr_LaunchDetails_GetDeeplinkMessage_Native(IntPtr obj);

		[Token(Token = "0x60020B1")]
		[Address(RVA = "0x7D8DC8", Offset = "0x7D8DC8", VA = "0x7D8DC8")]
		public static string ovr_LaunchDetails_GetLaunchSource(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60020B2")]
		[Address(RVA = "0x7D8E48", Offset = "0x7D8E48", VA = "0x7D8E48")]
		private static extern IntPtr ovr_LaunchDetails_GetLaunchSource_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020B3")]
		[Address(RVA = "0x7D8EE8", Offset = "0x7D8EE8", VA = "0x7D8EE8")]
		public static extern LaunchType ovr_LaunchDetails_GetLaunchType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020B4")]
		[Address(RVA = "0x7D8F88", Offset = "0x7D8F88", VA = "0x7D8F88")]
		public static extern ulong ovr_LaunchDetails_GetRoomID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020B5")]
		[Address(RVA = "0x7D9028", Offset = "0x7D9028", VA = "0x7D9028")]
		public static extern IntPtr ovr_LaunchDetails_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020B6")]
		[Address(RVA = "0x7D90C8", Offset = "0x7D90C8", VA = "0x7D90C8")]
		public static extern bool ovr_LaunchFriendRequestFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020B7")]
		[Address(RVA = "0x7D9170", Offset = "0x7D9170", VA = "0x7D9170")]
		public static extern bool ovr_LaunchFriendRequestFlowResult_GetDidSendRequest(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020B8")]
		[Address(RVA = "0x7D9218", Offset = "0x7D9218", VA = "0x7D9218")]
		public static extern bool ovr_LaunchReportFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020B9")]
		[Address(RVA = "0x7D92C0", Offset = "0x7D92C0", VA = "0x7D92C0")]
		public static extern ulong ovr_LaunchReportFlowResult_GetUserReportId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020BA")]
		[Address(RVA = "0x7D9360", Offset = "0x7D9360", VA = "0x7D9360")]
		public static extern bool ovr_LaunchUnblockFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020BB")]
		[Address(RVA = "0x7D9408", Offset = "0x7D9408", VA = "0x7D9408")]
		public static extern bool ovr_LaunchUnblockFlowResult_GetDidUnblock(IntPtr obj);

		[Token(Token = "0x60020BC")]
		[Address(RVA = "0x7D94B0", Offset = "0x7D94B0", VA = "0x7D94B0")]
		public static byte[] ovr_LeaderboardEntry_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60020BD")]
		[Address(RVA = "0x7D95E0", Offset = "0x7D95E0", VA = "0x7D95E0")]
		private static extern IntPtr ovr_LeaderboardEntry_GetExtraData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020BE")]
		[Address(RVA = "0x7D9540", Offset = "0x7D9540", VA = "0x7D9540")]
		public static extern uint ovr_LeaderboardEntry_GetExtraDataLength(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020BF")]
		[Address(RVA = "0x7D9680", Offset = "0x7D9680", VA = "0x7D9680")]
		public static extern int ovr_LeaderboardEntry_GetRank(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020C0")]
		[Address(RVA = "0x7D9720", Offset = "0x7D9720", VA = "0x7D9720")]
		public static extern long ovr_LeaderboardEntry_GetScore(IntPtr obj);

		[Token(Token = "0x60020C1")]
		[Address(RVA = "0x7D97C0", Offset = "0x7D97C0", VA = "0x7D97C0")]
		public static DateTime ovr_LeaderboardEntry_GetTimestamp(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x60020C2")]
		[Address(RVA = "0x7D9858", Offset = "0x7D9858", VA = "0x7D9858")]
		private static extern ulong ovr_LeaderboardEntry_GetTimestamp_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020C3")]
		[Address(RVA = "0x7D98F8", Offset = "0x7D98F8", VA = "0x7D98F8")]
		public static extern IntPtr ovr_LeaderboardEntry_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020C4")]
		[Address(RVA = "0x7D9998", Offset = "0x7D9998", VA = "0x7D9998")]
		public static extern IntPtr ovr_LeaderboardEntryArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60020C5")]
		[Address(RVA = "0x7D9A40", Offset = "0x7D9A40", VA = "0x7D9A40")]
		public static string ovr_LeaderboardEntryArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60020C6")]
		[Address(RVA = "0x7D9AC0", Offset = "0x7D9AC0", VA = "0x7D9AC0")]
		private static extern IntPtr ovr_LeaderboardEntryArray_GetNextUrl_Native(IntPtr obj);

		[Token(Token = "0x60020C7")]
		[Address(RVA = "0x7D9B60", Offset = "0x7D9B60", VA = "0x7D9B60")]
		public static string ovr_LeaderboardEntryArray_GetPreviousUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60020C8")]
		[Address(RVA = "0x7D9BE0", Offset = "0x7D9BE0", VA = "0x7D9BE0")]
		private static extern IntPtr ovr_LeaderboardEntryArray_GetPreviousUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020C9")]
		[Address(RVA = "0x7D9C80", Offset = "0x7D9C80", VA = "0x7D9C80")]
		public static extern UIntPtr ovr_LeaderboardEntryArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020CA")]
		[Address(RVA = "0x7D9D20", Offset = "0x7D9D20", VA = "0x7D9D20")]
		public static extern ulong ovr_LeaderboardEntryArray_GetTotalCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020CB")]
		[Address(RVA = "0x7D9DC0", Offset = "0x7D9DC0", VA = "0x7D9DC0")]
		public static extern bool ovr_LeaderboardEntryArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020CC")]
		[Address(RVA = "0x7D9E68", Offset = "0x7D9E68", VA = "0x7D9E68")]
		public static extern bool ovr_LeaderboardEntryArray_HasPreviousPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020CD")]
		[Address(RVA = "0x7D9F10", Offset = "0x7D9F10", VA = "0x7D9F10")]
		public static extern bool ovr_LeaderboardUpdateStatus_GetDidUpdate(IntPtr obj);

		[Token(Token = "0x60020CE")]
		[Address(RVA = "0x7D9FB8", Offset = "0x7D9FB8", VA = "0x7D9FB8")]
		public static string ovr_LinkedAccount_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60020CF")]
		[Address(RVA = "0x7DA038", Offset = "0x7DA038", VA = "0x7DA038")]
		private static extern IntPtr ovr_LinkedAccount_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020D0")]
		[Address(RVA = "0x7DA0D8", Offset = "0x7DA0D8", VA = "0x7DA0D8")]
		public static extern ServiceProvider ovr_LinkedAccount_GetServiceProvider(IntPtr obj);

		[Token(Token = "0x60020D1")]
		[Address(RVA = "0x7DA178", Offset = "0x7DA178", VA = "0x7DA178")]
		public static string ovr_LinkedAccount_GetUserId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60020D2")]
		[Address(RVA = "0x7DA1F8", Offset = "0x7DA1F8", VA = "0x7DA1F8")]
		private static extern IntPtr ovr_LinkedAccount_GetUserId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020D3")]
		[Address(RVA = "0x7DA298", Offset = "0x7DA298", VA = "0x7DA298")]
		public static extern IntPtr ovr_LinkedAccountArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60020D4")]
		[Address(RVA = "0x7DA340", Offset = "0x7DA340", VA = "0x7DA340")]
		public static extern UIntPtr ovr_LinkedAccountArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020D5")]
		[Address(RVA = "0x7DA3E0", Offset = "0x7DA3E0", VA = "0x7DA3E0")]
		public static extern bool ovr_LivestreamingApplicationStatus_GetStreamingEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020D6")]
		[Address(RVA = "0x7DA488", Offset = "0x7DA488", VA = "0x7DA488")]
		public static extern LivestreamingStartStatus ovr_LivestreamingStartResult_GetStreamingResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020D7")]
		[Address(RVA = "0x7DA528", Offset = "0x7DA528", VA = "0x7DA528")]
		public static extern bool ovr_LivestreamingStatus_GetCommentsVisible(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020D8")]
		[Address(RVA = "0x7DA5D0", Offset = "0x7DA5D0", VA = "0x7DA5D0")]
		public static extern bool ovr_LivestreamingStatus_GetIsPaused(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020D9")]
		[Address(RVA = "0x7DA678", Offset = "0x7DA678", VA = "0x7DA678")]
		public static extern bool ovr_LivestreamingStatus_GetLivestreamingEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020DA")]
		[Address(RVA = "0x7DA720", Offset = "0x7DA720", VA = "0x7DA720")]
		public static extern int ovr_LivestreamingStatus_GetLivestreamingType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020DB")]
		[Address(RVA = "0x7DA7C0", Offset = "0x7DA7C0", VA = "0x7DA7C0")]
		public static extern bool ovr_LivestreamingStatus_GetMicEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020DC")]
		[Address(RVA = "0x7DA868", Offset = "0x7DA868", VA = "0x7DA868")]
		public static extern int ovr_LivestreamingVideoStats_GetCommentCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020DD")]
		[Address(RVA = "0x7DA908", Offset = "0x7DA908", VA = "0x7DA908")]
		public static extern int ovr_LivestreamingVideoStats_GetReactionCount(IntPtr obj);

		[Token(Token = "0x60020DE")]
		[Address(RVA = "0x7DA9A8", Offset = "0x7DA9A8", VA = "0x7DA9A8")]
		public static string ovr_LivestreamingVideoStats_GetTotalViews(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60020DF")]
		[Address(RVA = "0x7DAA28", Offset = "0x7DAA28", VA = "0x7DAA28")]
		private static extern IntPtr ovr_LivestreamingVideoStats_GetTotalViews_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020E0")]
		[Address(RVA = "0x7DAAC8", Offset = "0x7DAAC8", VA = "0x7DAAC8")]
		public static extern IntPtr ovr_MatchmakingAdminSnapshot_GetCandidates(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020E1")]
		[Address(RVA = "0x7DAB68", Offset = "0x7DAB68", VA = "0x7DAB68")]
		public static extern double ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020E2")]
		[Address(RVA = "0x7DAC08", Offset = "0x7DAC08", VA = "0x7DAC08")]
		public static extern bool ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020E3")]
		[Address(RVA = "0x7DACB0", Offset = "0x7DACB0", VA = "0x7DACB0")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020E4")]
		[Address(RVA = "0x7DAD50", Offset = "0x7DAD50", VA = "0x7DAD50")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020E5")]
		[Address(RVA = "0x7DADF0", Offset = "0x7DADF0", VA = "0x7DADF0")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore(IntPtr obj);

		[Token(Token = "0x60020E6")]
		[Address(RVA = "0x7DAE90", Offset = "0x7DAE90", VA = "0x7DAE90")]
		public static string ovr_MatchmakingAdminSnapshotCandidate_GetTraceId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60020E7")]
		[Address(RVA = "0x7DAF10", Offset = "0x7DAF10", VA = "0x7DAF10")]
		private static extern IntPtr ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020E8")]
		[Address(RVA = "0x7DAFB0", Offset = "0x7DAFB0", VA = "0x7DAFB0")]
		public static extern IntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60020E9")]
		[Address(RVA = "0x7DB058", Offset = "0x7DB058", VA = "0x7DB058")]
		public static extern UIntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020EA")]
		[Address(RVA = "0x7DB0F8", Offset = "0x7DB0F8", VA = "0x7DB0F8")]
		public static extern IntPtr ovr_MatchmakingBrowseResult_GetEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020EB")]
		[Address(RVA = "0x7DB198", Offset = "0x7DB198", VA = "0x7DB198")]
		public static extern IntPtr ovr_MatchmakingBrowseResult_GetRooms(IntPtr obj);

		[Token(Token = "0x60020EC")]
		[Address(RVA = "0x7DB238", Offset = "0x7DB238", VA = "0x7DB238")]
		public static string ovr_MatchmakingCandidate_GetEntryHash(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60020ED")]
		[Address(RVA = "0x7DB2B8", Offset = "0x7DB2B8", VA = "0x7DB2B8")]
		private static extern IntPtr ovr_MatchmakingCandidate_GetEntryHash_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020EE")]
		[Address(RVA = "0x7DB358", Offset = "0x7DB358", VA = "0x7DB358")]
		public static extern ulong ovr_MatchmakingCandidate_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020EF")]
		[Address(RVA = "0x7DB3F8", Offset = "0x7DB3F8", VA = "0x7DB3F8")]
		public static extern IntPtr ovr_MatchmakingCandidateArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60020F0")]
		[Address(RVA = "0x7DB4A0", Offset = "0x7DB4A0", VA = "0x7DB4A0")]
		public static string ovr_MatchmakingCandidateArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60020F1")]
		[Address(RVA = "0x7DB520", Offset = "0x7DB520", VA = "0x7DB520")]
		private static extern IntPtr ovr_MatchmakingCandidateArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020F2")]
		[Address(RVA = "0x7DB5C0", Offset = "0x7DB5C0", VA = "0x7DB5C0")]
		public static extern UIntPtr ovr_MatchmakingCandidateArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020F3")]
		[Address(RVA = "0x7DB660", Offset = "0x7DB660", VA = "0x7DB660")]
		public static extern bool ovr_MatchmakingCandidateArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020F4")]
		[Address(RVA = "0x7DB708", Offset = "0x7DB708", VA = "0x7DB708")]
		public static extern IntPtr ovr_MatchmakingEnqueueResult_GetAdminSnapshot(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020F5")]
		[Address(RVA = "0x7DB7A8", Offset = "0x7DB7A8", VA = "0x7DB7A8")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetAverageWait(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020F6")]
		[Address(RVA = "0x7DB848", Offset = "0x7DB848", VA = "0x7DB848")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020F7")]
		[Address(RVA = "0x7DB8E8", Offset = "0x7DB8E8", VA = "0x7DB8E8")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetMaxExpectedWait(IntPtr obj);

		[Token(Token = "0x60020F8")]
		[Address(RVA = "0x7DB988", Offset = "0x7DB988", VA = "0x7DB988")]
		public static string ovr_MatchmakingEnqueueResult_GetPool(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60020F9")]
		[Address(RVA = "0x7DBA08", Offset = "0x7DBA08", VA = "0x7DBA08")]
		private static extern IntPtr ovr_MatchmakingEnqueueResult_GetPool_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020FA")]
		[Address(RVA = "0x7DBAA8", Offset = "0x7DBAA8", VA = "0x7DBAA8")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage(IntPtr obj);

		[Token(Token = "0x60020FB")]
		[Address(RVA = "0x7DBB48", Offset = "0x7DBB48", VA = "0x7DBB48")]
		public static string ovr_MatchmakingEnqueueResult_GetRequestHash(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60020FC")]
		[Address(RVA = "0x7DBBC8", Offset = "0x7DBBC8", VA = "0x7DBBC8")]
		private static extern IntPtr ovr_MatchmakingEnqueueResult_GetRequestHash_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020FD")]
		[Address(RVA = "0x7DBC68", Offset = "0x7DBC68", VA = "0x7DBC68")]
		public static extern IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020FE")]
		[Address(RVA = "0x7DBD08", Offset = "0x7DBD08", VA = "0x7DBD08")]
		public static extern IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020FF")]
		[Address(RVA = "0x7DBDA8", Offset = "0x7DBDA8", VA = "0x7DBDA8")]
		public static extern ulong ovr_MatchmakingEnqueuedUser_GetAdditionalUserID(IntPtr obj, uint index);

		[PreserveSig]
		[Token(Token = "0x6002100")]
		[Address(RVA = "0x7DBE50", Offset = "0x7DBE50", VA = "0x7DBE50")]
		public static extern uint ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002101")]
		[Address(RVA = "0x7DBEF0", Offset = "0x7DBEF0", VA = "0x7DBEF0")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUser_GetCustomData(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002102")]
		[Address(RVA = "0x7DBF90", Offset = "0x7DBF90", VA = "0x7DBF90")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUser_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002103")]
		[Address(RVA = "0x7DC030", Offset = "0x7DC030", VA = "0x7DC030")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUserArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6002104")]
		[Address(RVA = "0x7DC0D8", Offset = "0x7DC0D8", VA = "0x7DC0D8")]
		public static extern UIntPtr ovr_MatchmakingEnqueuedUserArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002105")]
		[Address(RVA = "0x7DC178", Offset = "0x7DC178", VA = "0x7DC178")]
		public static extern ulong ovr_MatchmakingNotification_GetAddedByUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002106")]
		[Address(RVA = "0x7DC218", Offset = "0x7DC218", VA = "0x7DC218")]
		public static extern IntPtr ovr_MatchmakingNotification_GetRoom(IntPtr obj);

		[Token(Token = "0x6002107")]
		[Address(RVA = "0x7DC2B8", Offset = "0x7DC2B8", VA = "0x7DC2B8")]
		public static string ovr_MatchmakingNotification_GetTraceId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002108")]
		[Address(RVA = "0x7DC338", Offset = "0x7DC338", VA = "0x7DC338")]
		private static extern IntPtr ovr_MatchmakingNotification_GetTraceId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002109")]
		[Address(RVA = "0x7DC3D8", Offset = "0x7DC3D8", VA = "0x7DC3D8")]
		public static extern uint ovr_MatchmakingRoom_GetPingTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600210A")]
		[Address(RVA = "0x7DC478", Offset = "0x7DC478", VA = "0x7DC478")]
		public static extern IntPtr ovr_MatchmakingRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600210B")]
		[Address(RVA = "0x7DC518", Offset = "0x7DC518", VA = "0x7DC518")]
		public static extern bool ovr_MatchmakingRoom_HasPingTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600210C")]
		[Address(RVA = "0x7DC5C0", Offset = "0x7DC5C0", VA = "0x7DC5C0")]
		public static extern IntPtr ovr_MatchmakingRoomArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x600210D")]
		[Address(RVA = "0x7DC668", Offset = "0x7DC668", VA = "0x7DC668")]
		public static extern UIntPtr ovr_MatchmakingRoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600210E")]
		[Address(RVA = "0x7DC708", Offset = "0x7DC708", VA = "0x7DC708")]
		public static extern uint ovr_MatchmakingStats_GetDrawCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600210F")]
		[Address(RVA = "0x7DC7A8", Offset = "0x7DC7A8", VA = "0x7DC7A8")]
		public static extern uint ovr_MatchmakingStats_GetLossCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002110")]
		[Address(RVA = "0x7DC848", Offset = "0x7DC848", VA = "0x7DC848")]
		public static extern uint ovr_MatchmakingStats_GetSkillLevel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002111")]
		[Address(RVA = "0x7DC8E8", Offset = "0x7DC8E8", VA = "0x7DC8E8")]
		public static extern double ovr_MatchmakingStats_GetSkillMean(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002112")]
		[Address(RVA = "0x7DC988", Offset = "0x7DC988", VA = "0x7DC988")]
		public static extern double ovr_MatchmakingStats_GetSkillStandardDeviation(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002113")]
		[Address(RVA = "0x7DCA28", Offset = "0x7DCA28", VA = "0x7DCA28")]
		public static extern uint ovr_MatchmakingStats_GetWinCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002114")]
		[Address(RVA = "0x7DCAC8", Offset = "0x7DCAC8", VA = "0x7DCAC8")]
		public static extern IntPtr ovr_Message_GetAbuseReportRecording(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002115")]
		[Address(RVA = "0x7DCB68", Offset = "0x7DCB68", VA = "0x7DCB68")]
		public static extern IntPtr ovr_Message_GetAchievementDefinitionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002116")]
		[Address(RVA = "0x7DCC08", Offset = "0x7DCC08", VA = "0x7DCC08")]
		public static extern IntPtr ovr_Message_GetAchievementProgressArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002117")]
		[Address(RVA = "0x7DCCA8", Offset = "0x7DCCA8", VA = "0x7DCCA8")]
		public static extern IntPtr ovr_Message_GetAchievementUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002118")]
		[Address(RVA = "0x7DCD48", Offset = "0x7DCD48", VA = "0x7DCD48")]
		public static extern IntPtr ovr_Message_GetApplicationVersion(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002119")]
		[Address(RVA = "0x7DCDE8", Offset = "0x7DCDE8", VA = "0x7DCDE8")]
		public static extern IntPtr ovr_Message_GetAssetDetails(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600211A")]
		[Address(RVA = "0x7DCE88", Offset = "0x7DCE88", VA = "0x7DCE88")]
		public static extern IntPtr ovr_Message_GetAssetDetailsArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600211B")]
		[Address(RVA = "0x7DCF28", Offset = "0x7DCF28", VA = "0x7DCF28")]
		public static extern IntPtr ovr_Message_GetAssetFileDeleteResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600211C")]
		[Address(RVA = "0x7DCFC8", Offset = "0x7DCFC8", VA = "0x7DCFC8")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadCancelResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600211D")]
		[Address(RVA = "0x7DD068", Offset = "0x7DD068", VA = "0x7DD068")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600211E")]
		[Address(RVA = "0x7DD108", Offset = "0x7DD108", VA = "0x7DD108")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600211F")]
		[Address(RVA = "0x7DD1A8", Offset = "0x7DD1A8", VA = "0x7DD1A8")]
		public static extern IntPtr ovr_Message_GetCalApplicationFinalized(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002120")]
		[Address(RVA = "0x7DD248", Offset = "0x7DD248", VA = "0x7DD248")]
		public static extern IntPtr ovr_Message_GetCalApplicationProposed(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002121")]
		[Address(RVA = "0x7DD2E8", Offset = "0x7DD2E8", VA = "0x7DD2E8")]
		public static extern IntPtr ovr_Message_GetCalApplicationSuggestionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002122")]
		[Address(RVA = "0x7DD388", Offset = "0x7DD388", VA = "0x7DD388")]
		public static extern IntPtr ovr_Message_GetCloudStorageConflictMetadata(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002123")]
		[Address(RVA = "0x7DD428", Offset = "0x7DD428", VA = "0x7DD428")]
		public static extern IntPtr ovr_Message_GetCloudStorageData(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002124")]
		[Address(RVA = "0x7DD4C8", Offset = "0x7DD4C8", VA = "0x7DD4C8")]
		public static extern IntPtr ovr_Message_GetCloudStorageMetadata(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002125")]
		[Address(RVA = "0x7DD568", Offset = "0x7DD568", VA = "0x7DD568")]
		public static extern IntPtr ovr_Message_GetCloudStorageMetadataArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002126")]
		[Address(RVA = "0x7DD608", Offset = "0x7DD608", VA = "0x7DD608")]
		public static extern IntPtr ovr_Message_GetCloudStorageUpdateResponse(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002127")]
		[Address(RVA = "0x7DD6A8", Offset = "0x7DD6A8", VA = "0x7DD6A8")]
		public static extern IntPtr ovr_Message_GetError(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002128")]
		[Address(RVA = "0x7DD748", Offset = "0x7DD748", VA = "0x7DD748")]
		public static extern IntPtr ovr_Message_GetHttpTransferUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002129")]
		[Address(RVA = "0x7DD7E8", Offset = "0x7DD7E8", VA = "0x7DD7E8")]
		public static extern IntPtr ovr_Message_GetInstalledApplicationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600212A")]
		[Address(RVA = "0x7DD888", Offset = "0x7DD888", VA = "0x7DD888")]
		public static extern IntPtr ovr_Message_GetLaunchBlockFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600212B")]
		[Address(RVA = "0x7DD928", Offset = "0x7DD928", VA = "0x7DD928")]
		public static extern IntPtr ovr_Message_GetLaunchFriendRequestFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600212C")]
		[Address(RVA = "0x7DD9C8", Offset = "0x7DD9C8", VA = "0x7DD9C8")]
		public static extern IntPtr ovr_Message_GetLaunchReportFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600212D")]
		[Address(RVA = "0x7DDA68", Offset = "0x7DDA68", VA = "0x7DDA68")]
		public static extern IntPtr ovr_Message_GetLaunchUnblockFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600212E")]
		[Address(RVA = "0x7DDB08", Offset = "0x7DDB08", VA = "0x7DDB08")]
		public static extern IntPtr ovr_Message_GetLeaderboardEntryArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600212F")]
		[Address(RVA = "0x7DDBA8", Offset = "0x7DDBA8", VA = "0x7DDBA8")]
		public static extern IntPtr ovr_Message_GetLeaderboardUpdateStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002130")]
		[Address(RVA = "0x7DDC48", Offset = "0x7DDC48", VA = "0x7DDC48")]
		public static extern IntPtr ovr_Message_GetLinkedAccountArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002131")]
		[Address(RVA = "0x7DDCE8", Offset = "0x7DDCE8", VA = "0x7DDCE8")]
		public static extern IntPtr ovr_Message_GetLivestreamingApplicationStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002132")]
		[Address(RVA = "0x7DDD88", Offset = "0x7DDD88", VA = "0x7DDD88")]
		public static extern IntPtr ovr_Message_GetLivestreamingStartResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002133")]
		[Address(RVA = "0x7DDE28", Offset = "0x7DDE28", VA = "0x7DDE28")]
		public static extern IntPtr ovr_Message_GetLivestreamingStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002134")]
		[Address(RVA = "0x7DDEC8", Offset = "0x7DDEC8", VA = "0x7DDEC8")]
		public static extern IntPtr ovr_Message_GetLivestreamingVideoStats(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002135")]
		[Address(RVA = "0x7DDF68", Offset = "0x7DDF68", VA = "0x7DDF68")]
		public static extern IntPtr ovr_Message_GetMatchmakingAdminSnapshot(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002136")]
		[Address(RVA = "0x7DE008", Offset = "0x7DE008", VA = "0x7DE008")]
		public static extern IntPtr ovr_Message_GetMatchmakingBrowseResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002137")]
		[Address(RVA = "0x7DE0A8", Offset = "0x7DE0A8", VA = "0x7DE0A8")]
		public static extern IntPtr ovr_Message_GetMatchmakingEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002138")]
		[Address(RVA = "0x7DE148", Offset = "0x7DE148", VA = "0x7DE148")]
		public static extern IntPtr ovr_Message_GetMatchmakingEnqueueResultAndRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002139")]
		[Address(RVA = "0x7DE1E8", Offset = "0x7DE1E8", VA = "0x7DE1E8")]
		public static extern IntPtr ovr_Message_GetMatchmakingRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600213A")]
		[Address(RVA = "0x7DE288", Offset = "0x7DE288", VA = "0x7DE288")]
		public static extern IntPtr ovr_Message_GetMatchmakingStats(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600213B")]
		[Address(RVA = "0x7DE328", Offset = "0x7DE328", VA = "0x7DE328")]
		public static extern IntPtr ovr_Message_GetNativeMessage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600213C")]
		[Address(RVA = "0x7DE3C8", Offset = "0x7DE3C8", VA = "0x7DE3C8")]
		public static extern IntPtr ovr_Message_GetNetworkingPeer(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600213D")]
		[Address(RVA = "0x7DE468", Offset = "0x7DE468", VA = "0x7DE468")]
		public static extern IntPtr ovr_Message_GetOrgScopedID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600213E")]
		[Address(RVA = "0x7DE508", Offset = "0x7DE508", VA = "0x7DE508")]
		public static extern IntPtr ovr_Message_GetParty(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600213F")]
		[Address(RVA = "0x7DE5A8", Offset = "0x7DE5A8", VA = "0x7DE5A8")]
		public static extern IntPtr ovr_Message_GetPartyID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002140")]
		[Address(RVA = "0x7DE648", Offset = "0x7DE648", VA = "0x7DE648")]
		public static extern IntPtr ovr_Message_GetPartyUpdateNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002141")]
		[Address(RVA = "0x7DE6E8", Offset = "0x7DE6E8", VA = "0x7DE6E8")]
		public static extern IntPtr ovr_Message_GetPidArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002142")]
		[Address(RVA = "0x7DE788", Offset = "0x7DE788", VA = "0x7DE788")]
		public static extern IntPtr ovr_Message_GetPingResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002143")]
		[Address(RVA = "0x7DE828", Offset = "0x7DE828", VA = "0x7DE828")]
		public static extern IntPtr ovr_Message_GetPlatformInitialize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002144")]
		[Address(RVA = "0x7DE8C8", Offset = "0x7DE8C8", VA = "0x7DE8C8")]
		public static extern IntPtr ovr_Message_GetProductArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002145")]
		[Address(RVA = "0x7DE968", Offset = "0x7DE968", VA = "0x7DE968")]
		public static extern IntPtr ovr_Message_GetPurchase(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002146")]
		[Address(RVA = "0x7DEA08", Offset = "0x7DEA08", VA = "0x7DEA08")]
		public static extern IntPtr ovr_Message_GetPurchaseArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002147")]
		[Address(RVA = "0x7DEAA8", Offset = "0x7DEAA8", VA = "0x7DEAA8")]
		public static extern ulong ovr_Message_GetRequestID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002148")]
		[Address(RVA = "0x7DEB48", Offset = "0x7DEB48", VA = "0x7DEB48")]
		public static extern IntPtr ovr_Message_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002149")]
		[Address(RVA = "0x7DEBE8", Offset = "0x7DEBE8", VA = "0x7DEBE8")]
		public static extern IntPtr ovr_Message_GetRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600214A")]
		[Address(RVA = "0x7DEC88", Offset = "0x7DEC88", VA = "0x7DEC88")]
		public static extern IntPtr ovr_Message_GetRoomInviteNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600214B")]
		[Address(RVA = "0x7DED28", Offset = "0x7DED28", VA = "0x7DED28")]
		public static extern IntPtr ovr_Message_GetRoomInviteNotificationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600214C")]
		[Address(RVA = "0x7DEDC8", Offset = "0x7DEDC8", VA = "0x7DEDC8")]
		public static extern IntPtr ovr_Message_GetSdkAccountArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600214D")]
		[Address(RVA = "0x7DEE68", Offset = "0x7DEE68", VA = "0x7DEE68")]
		public static extern IntPtr ovr_Message_GetShareMediaResult(IntPtr obj);

		[Token(Token = "0x600214E")]
		[Address(RVA = "0x7DEF08", Offset = "0x7DEF08", VA = "0x7DEF08")]
		public static string ovr_Message_GetString(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600214F")]
		[Address(RVA = "0x7DEF88", Offset = "0x7DEF88", VA = "0x7DEF88")]
		private static extern IntPtr ovr_Message_GetString_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002150")]
		[Address(RVA = "0x7DF028", Offset = "0x7DF028", VA = "0x7DF028")]
		public static extern IntPtr ovr_Message_GetSystemPermission(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002151")]
		[Address(RVA = "0x7DF0C8", Offset = "0x7DF0C8", VA = "0x7DF0C8")]
		public static extern IntPtr ovr_Message_GetSystemVoipState(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002152")]
		[Address(RVA = "0x7DF168", Offset = "0x7DF168", VA = "0x7DF168")]
		public static extern Message.MessageType ovr_Message_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002153")]
		[Address(RVA = "0x7DF208", Offset = "0x7DF208", VA = "0x7DF208")]
		public static extern IntPtr ovr_Message_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002154")]
		[Address(RVA = "0x7DF2A8", Offset = "0x7DF2A8", VA = "0x7DF2A8")]
		public static extern IntPtr ovr_Message_GetUserAndRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002155")]
		[Address(RVA = "0x7DF348", Offset = "0x7DF348", VA = "0x7DF348")]
		public static extern IntPtr ovr_Message_GetUserArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002156")]
		[Address(RVA = "0x7DF3E8", Offset = "0x7DF3E8", VA = "0x7DF3E8")]
		public static extern IntPtr ovr_Message_GetUserProof(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002157")]
		[Address(RVA = "0x7DF488", Offset = "0x7DF488", VA = "0x7DF488")]
		public static extern IntPtr ovr_Message_GetUserReportID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002158")]
		[Address(RVA = "0x7DF528", Offset = "0x7DF528", VA = "0x7DF528")]
		public static extern bool ovr_Message_IsError(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002159")]
		[Address(RVA = "0x7DF5D0", Offset = "0x7DF5D0", VA = "0x7DF5D0")]
		public static extern UIntPtr ovr_Microphone_GetNumSamplesAvailable(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600215A")]
		[Address(RVA = "0x7DF670", Offset = "0x7DF670", VA = "0x7DF670")]
		public static extern UIntPtr ovr_Microphone_GetOutputBufferMaxSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600215B")]
		[Address(RVA = "0x7DF710", Offset = "0x7DF710", VA = "0x7DF710")]
		public static extern UIntPtr ovr_Microphone_GetPCM(IntPtr obj, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x600215C")]
		[Address(RVA = "0x7DF7C8", Offset = "0x7DF7C8", VA = "0x7DF7C8")]
		public static extern UIntPtr ovr_Microphone_GetPCMFloat(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x600215D")]
		[Address(RVA = "0x7DF880", Offset = "0x7DF880", VA = "0x7DF880")]
		public static extern UIntPtr ovr_Microphone_ReadData(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferSize);

		[PreserveSig]
		[Token(Token = "0x600215E")]
		[Address(RVA = "0x7DF938", Offset = "0x7DF938", VA = "0x7DF938")]
		public static extern void ovr_Microphone_SetAcceptableRecordingDelayHint(IntPtr obj, UIntPtr delayMs);

		[PreserveSig]
		[Token(Token = "0x600215F")]
		[Address(RVA = "0x7DF9E0", Offset = "0x7DF9E0", VA = "0x7DF9E0")]
		public static extern void ovr_Microphone_Start(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002160")]
		[Address(RVA = "0x7DFA80", Offset = "0x7DFA80", VA = "0x7DFA80")]
		public static extern void ovr_Microphone_Stop(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002161")]
		[Address(RVA = "0x7DFB20", Offset = "0x7DFB20", VA = "0x7DFB20")]
		public static extern ulong ovr_NetworkingPeer_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002162")]
		[Address(RVA = "0x7DFBC0", Offset = "0x7DFBC0", VA = "0x7DFBC0")]
		public static extern PeerConnectionState ovr_NetworkingPeer_GetState(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002163")]
		[Address(RVA = "0x7DFC60", Offset = "0x7DFC60", VA = "0x7DFC60")]
		public static extern ulong ovr_OrgScopedID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002164")]
		[Address(RVA = "0x7DFD00", Offset = "0x7DFD00", VA = "0x7DFD00")]
		public static extern void ovr_Packet_Free(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002165")]
		[Address(RVA = "0x7DFDA0", Offset = "0x7DFDA0", VA = "0x7DFDA0")]
		public static extern IntPtr ovr_Packet_GetBytes(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002166")]
		[Address(RVA = "0x7DFE40", Offset = "0x7DFE40", VA = "0x7DFE40")]
		public static extern SendPolicy ovr_Packet_GetSendPolicy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002167")]
		[Address(RVA = "0x7DFEE0", Offset = "0x7DFEE0", VA = "0x7DFEE0")]
		public static extern ulong ovr_Packet_GetSenderID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002168")]
		[Address(RVA = "0x7DFF80", Offset = "0x7DFF80", VA = "0x7DFF80")]
		public static extern UIntPtr ovr_Packet_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002169")]
		[Address(RVA = "0x7E0020", Offset = "0x7E0020", VA = "0x7E0020")]
		public static extern ulong ovr_Party_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600216A")]
		[Address(RVA = "0x7E00C0", Offset = "0x7E00C0", VA = "0x7E00C0")]
		public static extern IntPtr ovr_Party_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600216B")]
		[Address(RVA = "0x7E0160", Offset = "0x7E0160", VA = "0x7E0160")]
		public static extern IntPtr ovr_Party_GetLeader(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600216C")]
		[Address(RVA = "0x7E0200", Offset = "0x7E0200", VA = "0x7E0200")]
		public static extern IntPtr ovr_Party_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600216D")]
		[Address(RVA = "0x7E02A0", Offset = "0x7E02A0", VA = "0x7E02A0")]
		public static extern IntPtr ovr_Party_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600216E")]
		[Address(RVA = "0x7E0340", Offset = "0x7E0340", VA = "0x7E0340")]
		public static extern ulong ovr_PartyID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600216F")]
		[Address(RVA = "0x7E03E0", Offset = "0x7E03E0", VA = "0x7E03E0")]
		public static extern PartyUpdateAction ovr_PartyUpdateNotification_GetAction(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002170")]
		[Address(RVA = "0x7E0480", Offset = "0x7E0480", VA = "0x7E0480")]
		public static extern ulong ovr_PartyUpdateNotification_GetPartyId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002171")]
		[Address(RVA = "0x7E0520", Offset = "0x7E0520", VA = "0x7E0520")]
		public static extern ulong ovr_PartyUpdateNotification_GetSenderId(IntPtr obj);

		[Token(Token = "0x6002172")]
		[Address(RVA = "0x7E05C0", Offset = "0x7E05C0", VA = "0x7E05C0")]
		public static string ovr_PartyUpdateNotification_GetUpdateTimestamp(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002173")]
		[Address(RVA = "0x7E0640", Offset = "0x7E0640", VA = "0x7E0640")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUpdateTimestamp_Native(IntPtr obj);

		[Token(Token = "0x6002174")]
		[Address(RVA = "0x7E06E0", Offset = "0x7E06E0", VA = "0x7E06E0")]
		public static string ovr_PartyUpdateNotification_GetUserAlias(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002175")]
		[Address(RVA = "0x7E0760", Offset = "0x7E0760", VA = "0x7E0760")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUserAlias_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002176")]
		[Address(RVA = "0x7E0800", Offset = "0x7E0800", VA = "0x7E0800")]
		public static extern ulong ovr_PartyUpdateNotification_GetUserId(IntPtr obj);

		[Token(Token = "0x6002177")]
		[Address(RVA = "0x7E08A0", Offset = "0x7E08A0", VA = "0x7E08A0")]
		public static string ovr_PartyUpdateNotification_GetUserName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002178")]
		[Address(RVA = "0x7E0920", Offset = "0x7E0920", VA = "0x7E0920")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUserName_Native(IntPtr obj);

		[Token(Token = "0x6002179")]
		[Address(RVA = "0x7E09C0", Offset = "0x7E09C0", VA = "0x7E09C0")]
		public static string ovr_Pid_GetId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600217A")]
		[Address(RVA = "0x7E0A40", Offset = "0x7E0A40", VA = "0x7E0A40")]
		private static extern IntPtr ovr_Pid_GetId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600217B")]
		[Address(RVA = "0x7E0AE0", Offset = "0x7E0AE0", VA = "0x7E0AE0")]
		public static extern IntPtr ovr_PidArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x600217C")]
		[Address(RVA = "0x7E0B88", Offset = "0x7E0B88", VA = "0x7E0B88")]
		public static extern UIntPtr ovr_PidArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600217D")]
		[Address(RVA = "0x7E0C28", Offset = "0x7E0C28", VA = "0x7E0C28")]
		public static extern ulong ovr_PingResult_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600217E")]
		[Address(RVA = "0x7E0CC8", Offset = "0x7E0CC8", VA = "0x7E0CC8")]
		public static extern ulong ovr_PingResult_GetPingTimeUsec(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600217F")]
		[Address(RVA = "0x7E0D68", Offset = "0x7E0D68", VA = "0x7E0D68")]
		public static extern bool ovr_PingResult_IsTimeout(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002180")]
		[Address(RVA = "0x7E0E10", Offset = "0x7E0E10", VA = "0x7E0E10")]
		public static extern PlatformInitializeResult ovr_PlatformInitialize_GetResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002181")]
		[Address(RVA = "0x7E0EB0", Offset = "0x7E0EB0", VA = "0x7E0EB0")]
		public static extern uint ovr_Price_GetAmountInHundredths(IntPtr obj);

		[Token(Token = "0x6002182")]
		[Address(RVA = "0x7E0F50", Offset = "0x7E0F50", VA = "0x7E0F50")]
		public static string ovr_Price_GetCurrency(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002183")]
		[Address(RVA = "0x7E0FD0", Offset = "0x7E0FD0", VA = "0x7E0FD0")]
		private static extern IntPtr ovr_Price_GetCurrency_Native(IntPtr obj);

		[Token(Token = "0x6002184")]
		[Address(RVA = "0x7E1070", Offset = "0x7E1070", VA = "0x7E1070")]
		public static string ovr_Price_GetFormatted(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002185")]
		[Address(RVA = "0x7E10F0", Offset = "0x7E10F0", VA = "0x7E10F0")]
		private static extern IntPtr ovr_Price_GetFormatted_Native(IntPtr obj);

		[Token(Token = "0x6002186")]
		[Address(RVA = "0x7E1190", Offset = "0x7E1190", VA = "0x7E1190")]
		public static string ovr_Product_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002187")]
		[Address(RVA = "0x7E1210", Offset = "0x7E1210", VA = "0x7E1210")]
		private static extern IntPtr ovr_Product_GetDescription_Native(IntPtr obj);

		[Token(Token = "0x6002188")]
		[Address(RVA = "0x7E12B0", Offset = "0x7E12B0", VA = "0x7E12B0")]
		public static string ovr_Product_GetFormattedPrice(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002189")]
		[Address(RVA = "0x7E1330", Offset = "0x7E1330", VA = "0x7E1330")]
		private static extern IntPtr ovr_Product_GetFormattedPrice_Native(IntPtr obj);

		[Token(Token = "0x600218A")]
		[Address(RVA = "0x7E13D0", Offset = "0x7E13D0", VA = "0x7E13D0")]
		public static string ovr_Product_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600218B")]
		[Address(RVA = "0x7E1450", Offset = "0x7E1450", VA = "0x7E1450")]
		private static extern IntPtr ovr_Product_GetName_Native(IntPtr obj);

		[Token(Token = "0x600218C")]
		[Address(RVA = "0x7E14F0", Offset = "0x7E14F0", VA = "0x7E14F0")]
		public static string ovr_Product_GetSKU(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600218D")]
		[Address(RVA = "0x7E1570", Offset = "0x7E1570", VA = "0x7E1570")]
		private static extern IntPtr ovr_Product_GetSKU_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600218E")]
		[Address(RVA = "0x7E1610", Offset = "0x7E1610", VA = "0x7E1610")]
		public static extern IntPtr ovr_ProductArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x600218F")]
		[Address(RVA = "0x7E16B8", Offset = "0x7E16B8", VA = "0x7E16B8")]
		public static string ovr_ProductArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002190")]
		[Address(RVA = "0x7E1738", Offset = "0x7E1738", VA = "0x7E1738")]
		private static extern IntPtr ovr_ProductArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002191")]
		[Address(RVA = "0x7E17D8", Offset = "0x7E17D8", VA = "0x7E17D8")]
		public static extern UIntPtr ovr_ProductArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002192")]
		[Address(RVA = "0x7E1878", Offset = "0x7E1878", VA = "0x7E1878")]
		public static extern bool ovr_ProductArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6002193")]
		[Address(RVA = "0x7E1920", Offset = "0x7E1920", VA = "0x7E1920")]
		public static DateTime ovr_Purchase_GetExpirationTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6002194")]
		[Address(RVA = "0x7E19B8", Offset = "0x7E19B8", VA = "0x7E19B8")]
		private static extern ulong ovr_Purchase_GetExpirationTime_Native(IntPtr obj);

		[Token(Token = "0x6002195")]
		[Address(RVA = "0x7E1A58", Offset = "0x7E1A58", VA = "0x7E1A58")]
		public static DateTime ovr_Purchase_GetGrantTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6002196")]
		[Address(RVA = "0x7E1AF0", Offset = "0x7E1AF0", VA = "0x7E1AF0")]
		private static extern ulong ovr_Purchase_GetGrantTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002197")]
		[Address(RVA = "0x7E1B90", Offset = "0x7E1B90", VA = "0x7E1B90")]
		public static extern ulong ovr_Purchase_GetPurchaseID(IntPtr obj);

		[Token(Token = "0x6002198")]
		[Address(RVA = "0x7E1C30", Offset = "0x7E1C30", VA = "0x7E1C30")]
		public static string ovr_Purchase_GetSKU(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002199")]
		[Address(RVA = "0x7E1CB0", Offset = "0x7E1CB0", VA = "0x7E1CB0")]
		private static extern IntPtr ovr_Purchase_GetSKU_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600219A")]
		[Address(RVA = "0x7E1D50", Offset = "0x7E1D50", VA = "0x7E1D50")]
		public static extern IntPtr ovr_PurchaseArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x600219B")]
		[Address(RVA = "0x7E1DF8", Offset = "0x7E1DF8", VA = "0x7E1DF8")]
		public static string ovr_PurchaseArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600219C")]
		[Address(RVA = "0x7E1E78", Offset = "0x7E1E78", VA = "0x7E1E78")]
		private static extern IntPtr ovr_PurchaseArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600219D")]
		[Address(RVA = "0x7E1F18", Offset = "0x7E1F18", VA = "0x7E1F18")]
		public static extern UIntPtr ovr_PurchaseArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600219E")]
		[Address(RVA = "0x7E1FB8", Offset = "0x7E1FB8", VA = "0x7E1FB8")]
		public static extern bool ovr_PurchaseArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600219F")]
		[Address(RVA = "0x7E2060", Offset = "0x7E2060", VA = "0x7E2060")]
		public static extern ulong ovr_Room_GetApplicationID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021A0")]
		[Address(RVA = "0x7E2100", Offset = "0x7E2100", VA = "0x7E2100")]
		public static extern IntPtr ovr_Room_GetDataStore(IntPtr obj);

		[Token(Token = "0x60021A1")]
		[Address(RVA = "0x7E21A0", Offset = "0x7E21A0", VA = "0x7E21A0")]
		public static string ovr_Room_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60021A2")]
		[Address(RVA = "0x7E2220", Offset = "0x7E2220", VA = "0x7E2220")]
		private static extern IntPtr ovr_Room_GetDescription_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021A3")]
		[Address(RVA = "0x7E22C0", Offset = "0x7E22C0", VA = "0x7E22C0")]
		public static extern ulong ovr_Room_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021A4")]
		[Address(RVA = "0x7E2360", Offset = "0x7E2360", VA = "0x7E2360")]
		public static extern IntPtr ovr_Room_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021A5")]
		[Address(RVA = "0x7E2400", Offset = "0x7E2400", VA = "0x7E2400")]
		public static extern bool ovr_Room_GetIsMembershipLocked(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021A6")]
		[Address(RVA = "0x7E24A8", Offset = "0x7E24A8", VA = "0x7E24A8")]
		public static extern RoomJoinPolicy ovr_Room_GetJoinPolicy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021A7")]
		[Address(RVA = "0x7E2548", Offset = "0x7E2548", VA = "0x7E2548")]
		public static extern RoomJoinability ovr_Room_GetJoinability(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021A8")]
		[Address(RVA = "0x7E25E8", Offset = "0x7E25E8", VA = "0x7E25E8")]
		public static extern IntPtr ovr_Room_GetMatchedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021A9")]
		[Address(RVA = "0x7E2688", Offset = "0x7E2688", VA = "0x7E2688")]
		public static extern uint ovr_Room_GetMaxUsers(IntPtr obj);

		[Token(Token = "0x60021AA")]
		[Address(RVA = "0x7E2728", Offset = "0x7E2728", VA = "0x7E2728")]
		public static string ovr_Room_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60021AB")]
		[Address(RVA = "0x7E27A8", Offset = "0x7E27A8", VA = "0x7E27A8")]
		private static extern IntPtr ovr_Room_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021AC")]
		[Address(RVA = "0x7E2848", Offset = "0x7E2848", VA = "0x7E2848")]
		public static extern IntPtr ovr_Room_GetOwner(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021AD")]
		[Address(RVA = "0x7E28E8", Offset = "0x7E28E8", VA = "0x7E28E8")]
		public static extern IntPtr ovr_Room_GetTeams(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021AE")]
		[Address(RVA = "0x7E2988", Offset = "0x7E2988", VA = "0x7E2988")]
		public static extern RoomType ovr_Room_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021AF")]
		[Address(RVA = "0x7E2A28", Offset = "0x7E2A28", VA = "0x7E2A28")]
		public static extern IntPtr ovr_Room_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021B0")]
		[Address(RVA = "0x7E2AC8", Offset = "0x7E2AC8", VA = "0x7E2AC8")]
		public static extern uint ovr_Room_GetVersion(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021B1")]
		[Address(RVA = "0x7E2B68", Offset = "0x7E2B68", VA = "0x7E2B68")]
		public static extern IntPtr ovr_RoomArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60021B2")]
		[Address(RVA = "0x7E2C10", Offset = "0x7E2C10", VA = "0x7E2C10")]
		public static string ovr_RoomArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60021B3")]
		[Address(RVA = "0x7E2C90", Offset = "0x7E2C90", VA = "0x7E2C90")]
		private static extern IntPtr ovr_RoomArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021B4")]
		[Address(RVA = "0x7E2D30", Offset = "0x7E2D30", VA = "0x7E2D30")]
		public static extern UIntPtr ovr_RoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021B5")]
		[Address(RVA = "0x7E2DD0", Offset = "0x7E2DD0", VA = "0x7E2DD0")]
		public static extern bool ovr_RoomArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021B6")]
		[Address(RVA = "0x7E2E78", Offset = "0x7E2E78", VA = "0x7E2E78")]
		public static extern ulong ovr_RoomInviteNotification_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021B7")]
		[Address(RVA = "0x7E2F18", Offset = "0x7E2F18", VA = "0x7E2F18")]
		public static extern ulong ovr_RoomInviteNotification_GetRoomID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021B8")]
		[Address(RVA = "0x7E2FB8", Offset = "0x7E2FB8", VA = "0x7E2FB8")]
		public static extern ulong ovr_RoomInviteNotification_GetSenderID(IntPtr obj);

		[Token(Token = "0x60021B9")]
		[Address(RVA = "0x7E3058", Offset = "0x7E3058", VA = "0x7E3058")]
		public static DateTime ovr_RoomInviteNotification_GetSentTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x60021BA")]
		[Address(RVA = "0x7E30F0", Offset = "0x7E30F0", VA = "0x7E30F0")]
		private static extern ulong ovr_RoomInviteNotification_GetSentTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021BB")]
		[Address(RVA = "0x7E3190", Offset = "0x7E3190", VA = "0x7E3190")]
		public static extern IntPtr ovr_RoomInviteNotificationArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60021BC")]
		[Address(RVA = "0x7E3238", Offset = "0x7E3238", VA = "0x7E3238")]
		public static string ovr_RoomInviteNotificationArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60021BD")]
		[Address(RVA = "0x7E32B8", Offset = "0x7E32B8", VA = "0x7E32B8")]
		private static extern IntPtr ovr_RoomInviteNotificationArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021BE")]
		[Address(RVA = "0x7E3358", Offset = "0x7E3358", VA = "0x7E3358")]
		public static extern UIntPtr ovr_RoomInviteNotificationArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021BF")]
		[Address(RVA = "0x7E33F8", Offset = "0x7E33F8", VA = "0x7E33F8")]
		public static extern bool ovr_RoomInviteNotificationArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021C0")]
		[Address(RVA = "0x7E34A0", Offset = "0x7E34A0", VA = "0x7E34A0")]
		public static extern SdkAccountType ovr_SdkAccount_GetAccountType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021C1")]
		[Address(RVA = "0x7E3540", Offset = "0x7E3540", VA = "0x7E3540")]
		public static extern ulong ovr_SdkAccount_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021C2")]
		[Address(RVA = "0x7E35E0", Offset = "0x7E35E0", VA = "0x7E35E0")]
		public static extern IntPtr ovr_SdkAccountArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60021C3")]
		[Address(RVA = "0x7E3688", Offset = "0x7E3688", VA = "0x7E3688")]
		public static extern UIntPtr ovr_SdkAccountArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021C4")]
		[Address(RVA = "0x7E3728", Offset = "0x7E3728", VA = "0x7E3728")]
		public static extern ShareMediaStatus ovr_ShareMediaResult_GetStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021C5")]
		[Address(RVA = "0x7E37C8", Offset = "0x7E37C8", VA = "0x7E37C8")]
		public static extern bool ovr_SystemPermission_GetHasPermission(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021C6")]
		[Address(RVA = "0x7E3870", Offset = "0x7E3870", VA = "0x7E3870")]
		public static extern PermissionGrantStatus ovr_SystemPermission_GetPermissionGrantStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021C7")]
		[Address(RVA = "0x7E3910", Offset = "0x7E3910", VA = "0x7E3910")]
		public static extern VoipMuteState ovr_SystemVoipState_GetMicrophoneMuted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021C8")]
		[Address(RVA = "0x7E39B0", Offset = "0x7E39B0", VA = "0x7E39B0")]
		public static extern SystemVoipStatus ovr_SystemVoipState_GetStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021C9")]
		[Address(RVA = "0x7E3A50", Offset = "0x7E3A50", VA = "0x7E3A50")]
		public static extern IntPtr ovr_Team_GetAssignedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021CA")]
		[Address(RVA = "0x7E3AF0", Offset = "0x7E3AF0", VA = "0x7E3AF0")]
		public static extern int ovr_Team_GetMaxUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021CB")]
		[Address(RVA = "0x7E3B90", Offset = "0x7E3B90", VA = "0x7E3B90")]
		public static extern int ovr_Team_GetMinUsers(IntPtr obj);

		[Token(Token = "0x60021CC")]
		[Address(RVA = "0x7E3C30", Offset = "0x7E3C30", VA = "0x7E3C30")]
		public static string ovr_Team_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60021CD")]
		[Address(RVA = "0x7E3CB0", Offset = "0x7E3CB0", VA = "0x7E3CB0")]
		private static extern IntPtr ovr_Team_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021CE")]
		[Address(RVA = "0x7E3D50", Offset = "0x7E3D50", VA = "0x7E3D50")]
		public static extern IntPtr ovr_TeamArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60021CF")]
		[Address(RVA = "0x7E3DF8", Offset = "0x7E3DF8", VA = "0x7E3DF8")]
		public static extern UIntPtr ovr_TeamArray_GetSize(IntPtr obj);

		[Token(Token = "0x60021D0")]
		[Address(RVA = "0x7E3E98", Offset = "0x7E3E98", VA = "0x7E3E98")]
		public static string ovr_TestUser_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60021D1")]
		[Address(RVA = "0x7E3F18", Offset = "0x7E3F18", VA = "0x7E3F18")]
		private static extern IntPtr ovr_TestUser_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021D2")]
		[Address(RVA = "0x7E3FB8", Offset = "0x7E3FB8", VA = "0x7E3FB8")]
		public static extern IntPtr ovr_TestUser_GetAppAccessArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021D3")]
		[Address(RVA = "0x7E4058", Offset = "0x7E4058", VA = "0x7E4058")]
		public static extern IntPtr ovr_TestUser_GetFbAppAccessArray(IntPtr obj);

		[Token(Token = "0x60021D4")]
		[Address(RVA = "0x7E40F8", Offset = "0x7E40F8", VA = "0x7E40F8")]
		public static string ovr_TestUser_GetFriendAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60021D5")]
		[Address(RVA = "0x7E4178", Offset = "0x7E4178", VA = "0x7E4178")]
		private static extern IntPtr ovr_TestUser_GetFriendAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021D6")]
		[Address(RVA = "0x7E4218", Offset = "0x7E4218", VA = "0x7E4218")]
		public static extern IntPtr ovr_TestUser_GetFriendAppAccessArray(IntPtr obj);

		[Token(Token = "0x60021D7")]
		[Address(RVA = "0x7E42B8", Offset = "0x7E42B8", VA = "0x7E42B8")]
		public static string ovr_TestUser_GetUserAlias(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60021D8")]
		[Address(RVA = "0x7E4338", Offset = "0x7E4338", VA = "0x7E4338")]
		private static extern IntPtr ovr_TestUser_GetUserAlias_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021D9")]
		[Address(RVA = "0x7E43D8", Offset = "0x7E43D8", VA = "0x7E43D8")]
		public static extern ulong ovr_TestUser_GetUserFbid(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021DA")]
		[Address(RVA = "0x7E4478", Offset = "0x7E4478", VA = "0x7E4478")]
		public static extern ulong ovr_TestUser_GetUserId(IntPtr obj);

		[Token(Token = "0x60021DB")]
		[Address(RVA = "0x7E4518", Offset = "0x7E4518", VA = "0x7E4518")]
		public static string ovr_TestUserAppAccess_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60021DC")]
		[Address(RVA = "0x7E4598", Offset = "0x7E4598", VA = "0x7E4598")]
		private static extern IntPtr ovr_TestUserAppAccess_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021DD")]
		[Address(RVA = "0x7E4638", Offset = "0x7E4638", VA = "0x7E4638")]
		public static extern ulong ovr_TestUserAppAccess_GetAppId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021DE")]
		[Address(RVA = "0x7E46D8", Offset = "0x7E46D8", VA = "0x7E46D8")]
		public static extern ulong ovr_TestUserAppAccess_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021DF")]
		[Address(RVA = "0x7E4778", Offset = "0x7E4778", VA = "0x7E4778")]
		public static extern IntPtr ovr_TestUserAppAccessArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60021E0")]
		[Address(RVA = "0x7E4820", Offset = "0x7E4820", VA = "0x7E4820")]
		public static extern UIntPtr ovr_TestUserAppAccessArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021E1")]
		[Address(RVA = "0x7E48C0", Offset = "0x7E48C0", VA = "0x7E48C0")]
		public static extern ulong ovr_User_GetID(IntPtr obj);

		[Token(Token = "0x60021E2")]
		[Address(RVA = "0x7E4960", Offset = "0x7E4960", VA = "0x7E4960")]
		public static string ovr_User_GetImageUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60021E3")]
		[Address(RVA = "0x7E49E0", Offset = "0x7E49E0", VA = "0x7E49E0")]
		private static extern IntPtr ovr_User_GetImageUrl_Native(IntPtr obj);

		[Token(Token = "0x60021E4")]
		[Address(RVA = "0x7E4A80", Offset = "0x7E4A80", VA = "0x7E4A80")]
		public static string ovr_User_GetInviteToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60021E5")]
		[Address(RVA = "0x7E4B00", Offset = "0x7E4B00", VA = "0x7E4B00")]
		private static extern IntPtr ovr_User_GetInviteToken_Native(IntPtr obj);

		[Token(Token = "0x60021E6")]
		[Address(RVA = "0x7E4BA0", Offset = "0x7E4BA0", VA = "0x7E4BA0")]
		public static string ovr_User_GetOculusID(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60021E7")]
		[Address(RVA = "0x7E4C20", Offset = "0x7E4C20", VA = "0x7E4C20")]
		private static extern IntPtr ovr_User_GetOculusID_Native(IntPtr obj);

		[Token(Token = "0x60021E8")]
		[Address(RVA = "0x7E4CC0", Offset = "0x7E4CC0", VA = "0x7E4CC0")]
		public static string ovr_User_GetPresence(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60021E9")]
		[Address(RVA = "0x7E4D40", Offset = "0x7E4D40", VA = "0x7E4D40")]
		private static extern IntPtr ovr_User_GetPresence_Native(IntPtr obj);

		[Token(Token = "0x60021EA")]
		[Address(RVA = "0x7E4DE0", Offset = "0x7E4DE0", VA = "0x7E4DE0")]
		public static string ovr_User_GetPresenceDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60021EB")]
		[Address(RVA = "0x7E4E60", Offset = "0x7E4E60", VA = "0x7E4E60")]
		private static extern IntPtr ovr_User_GetPresenceDeeplinkMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021EC")]
		[Address(RVA = "0x7E4F00", Offset = "0x7E4F00", VA = "0x7E4F00")]
		public static extern UserPresenceStatus ovr_User_GetPresenceStatus(IntPtr obj);

		[Token(Token = "0x60021ED")]
		[Address(RVA = "0x7E4FA0", Offset = "0x7E4FA0", VA = "0x7E4FA0")]
		public static string ovr_User_GetSmallImageUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60021EE")]
		[Address(RVA = "0x7E5020", Offset = "0x7E5020", VA = "0x7E5020")]
		private static extern IntPtr ovr_User_GetSmallImageUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021EF")]
		[Address(RVA = "0x7E50C0", Offset = "0x7E50C0", VA = "0x7E50C0")]
		public static extern IntPtr ovr_UserAndRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021F0")]
		[Address(RVA = "0x7E5160", Offset = "0x7E5160", VA = "0x7E5160")]
		public static extern IntPtr ovr_UserAndRoom_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021F1")]
		[Address(RVA = "0x7E5200", Offset = "0x7E5200", VA = "0x7E5200")]
		public static extern IntPtr ovr_UserAndRoomArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60021F2")]
		[Address(RVA = "0x7E52A8", Offset = "0x7E52A8", VA = "0x7E52A8")]
		public static string ovr_UserAndRoomArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60021F3")]
		[Address(RVA = "0x7E5328", Offset = "0x7E5328", VA = "0x7E5328")]
		private static extern IntPtr ovr_UserAndRoomArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021F4")]
		[Address(RVA = "0x7E53C8", Offset = "0x7E53C8", VA = "0x7E53C8")]
		public static extern UIntPtr ovr_UserAndRoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021F5")]
		[Address(RVA = "0x7E5468", Offset = "0x7E5468", VA = "0x7E5468")]
		public static extern bool ovr_UserAndRoomArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021F6")]
		[Address(RVA = "0x7E5510", Offset = "0x7E5510", VA = "0x7E5510")]
		public static extern IntPtr ovr_UserArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60021F7")]
		[Address(RVA = "0x7E55B8", Offset = "0x7E55B8", VA = "0x7E55B8")]
		public static string ovr_UserArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60021F8")]
		[Address(RVA = "0x7E5638", Offset = "0x7E5638", VA = "0x7E5638")]
		private static extern IntPtr ovr_UserArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021F9")]
		[Address(RVA = "0x7E56D8", Offset = "0x7E56D8", VA = "0x7E56D8")]
		public static extern UIntPtr ovr_UserArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021FA")]
		[Address(RVA = "0x7E5778", Offset = "0x7E5778", VA = "0x7E5778")]
		public static extern bool ovr_UserArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x60021FB")]
		[Address(RVA = "0x7E5820", Offset = "0x7E5820", VA = "0x7E5820")]
		public static string ovr_UserProof_GetNonce(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60021FC")]
		[Address(RVA = "0x7E58A0", Offset = "0x7E58A0", VA = "0x7E58A0")]
		private static extern IntPtr ovr_UserProof_GetNonce_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021FD")]
		[Address(RVA = "0x7E5940", Offset = "0x7E5940", VA = "0x7E5940")]
		public static extern bool ovr_UserReportID_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021FE")]
		[Address(RVA = "0x7E59E8", Offset = "0x7E59E8", VA = "0x7E59E8")]
		public static extern ulong ovr_UserReportID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60021FF")]
		[Address(RVA = "0x7E5A88", Offset = "0x7E5A88", VA = "0x7E5A88")]
		public static extern void ovr_VoipDecoder_Decode(IntPtr obj, byte[] compressedData, UIntPtr compressedSize);

		[PreserveSig]
		[Token(Token = "0x6002200")]
		[Address(RVA = "0x7E5B40", Offset = "0x7E5B40", VA = "0x7E5B40")]
		public static extern UIntPtr ovr_VoipDecoder_GetDecodedPCM(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferSize);

		[PreserveSig]
		[Token(Token = "0x6002201")]
		[Address(RVA = "0x7E5BF8", Offset = "0x7E5BF8", VA = "0x7E5BF8")]
		public static extern void ovr_VoipEncoder_AddPCM(IntPtr obj, float[] inputData, uint inputSize);

		[PreserveSig]
		[Token(Token = "0x6002202")]
		[Address(RVA = "0x7E5CB0", Offset = "0x7E5CB0", VA = "0x7E5CB0")]
		public static extern UIntPtr ovr_VoipEncoder_GetCompressedData(IntPtr obj, byte[] outputBuffer, UIntPtr intputSize);

		[PreserveSig]
		[Token(Token = "0x6002203")]
		[Address(RVA = "0x7E5D68", Offset = "0x7E5D68", VA = "0x7E5D68")]
		public static extern UIntPtr ovr_VoipEncoder_GetCompressedDataSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002204")]
		[Address(RVA = "0x7C2CB8", Offset = "0x7C2CB8", VA = "0x7C2CB8")]
		public static extern IntPtr ovr_AbuseReportOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6002205")]
		[Address(RVA = "0x7C30C8", Offset = "0x7C30C8", VA = "0x7C30C8")]
		public static extern void ovr_AbuseReportOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6002206")]
		[Address(RVA = "0x7C2DD8", Offset = "0x7C2DD8", VA = "0x7C2DD8")]
		public static extern void ovr_AbuseReportOptions_SetPreventPeopleChooser(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6002207")]
		[Address(RVA = "0x7C2F08", Offset = "0x7C2F08", VA = "0x7C2F08")]
		public static extern void ovr_AbuseReportOptions_SetReportType(IntPtr handle, AbuseReportType value);

		[PreserveSig]
		[Token(Token = "0x6002208")]
		[Address(RVA = "0x7C5180", Offset = "0x7C5180", VA = "0x7C5180")]
		public static extern IntPtr ovr_ApplicationOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6002209")]
		[Address(RVA = "0x7C5428", Offset = "0x7C5428", VA = "0x7C5428")]
		public static extern void ovr_ApplicationOptions_Destroy(IntPtr handle);

		[Token(Token = "0x600220A")]
		[Address(RVA = "0x7C529C", Offset = "0x7C529C", VA = "0x7C529C")]
		public static void ovr_ApplicationOptions_SetDeeplinkMessage(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600220B")]
		[Address(RVA = "0x7E5E08", Offset = "0x7E5E08", VA = "0x7E5E08")]
		private static extern void ovr_ApplicationOptions_SetDeeplinkMessage_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x600220C")]
		[Address(RVA = "0x7E5EB0", Offset = "0x7E5EB0", VA = "0x7E5EB0")]
		public static extern IntPtr ovr_MatchmakingOptions_Create();

		[PreserveSig]
		[Token(Token = "0x600220D")]
		[Address(RVA = "0x7E5F48", Offset = "0x7E5F48", VA = "0x7E5F48")]
		public static extern void ovr_MatchmakingOptions_Destroy(IntPtr handle);

		[Token(Token = "0x600220E")]
		[Address(RVA = "0x7E5FE8", Offset = "0x7E5FE8", VA = "0x7E5FE8")]
		public static void ovr_MatchmakingOptions_SetCreateRoomDataStoreString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600220F")]
		[Address(RVA = "0x7E60D0", Offset = "0x7E60D0", VA = "0x7E60D0")]
		private static extern void ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6002210")]
		[Address(RVA = "0x7E6180", Offset = "0x7E6180", VA = "0x7E6180")]
		public static extern void ovr_MatchmakingOptions_ClearCreateRoomDataStore(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6002211")]
		[Address(RVA = "0x7E6220", Offset = "0x7E6220", VA = "0x7E6220")]
		public static extern void ovr_MatchmakingOptions_SetCreateRoomJoinPolicy(IntPtr handle, RoomJoinPolicy value);

		[PreserveSig]
		[Token(Token = "0x6002212")]
		[Address(RVA = "0x7E62C8", Offset = "0x7E62C8", VA = "0x7E62C8")]
		public static extern void ovr_MatchmakingOptions_SetCreateRoomMaxUsers(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6002213")]
		[Address(RVA = "0x7E6370", Offset = "0x7E6370", VA = "0x7E6370")]
		public static extern void ovr_MatchmakingOptions_AddEnqueueAdditionalUser(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x6002214")]
		[Address(RVA = "0x7E6420", Offset = "0x7E6420", VA = "0x7E6420")]
		public static extern void ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers(IntPtr handle);

		[Token(Token = "0x6002215")]
		[Address(RVA = "0x7E64C0", Offset = "0x7E64C0", VA = "0x7E64C0")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt(IntPtr handle, string key, int value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6002216")]
		[Address(RVA = "0x7E6590", Offset = "0x7E6590", VA = "0x7E6590")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native(IntPtr handle, IntPtr key, int value);

		[Token(Token = "0x6002217")]
		[Address(RVA = "0x7E6640", Offset = "0x7E6640", VA = "0x7E6640")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble(IntPtr handle, string key, double value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6002218")]
		[Address(RVA = "0x7E6720", Offset = "0x7E6720", VA = "0x7E6720")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native(IntPtr handle, IntPtr key, double value);

		[Token(Token = "0x6002219")]
		[Address(RVA = "0x7E67D8", Offset = "0x7E67D8", VA = "0x7E67D8")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600221A")]
		[Address(RVA = "0x7E68C0", Offset = "0x7E68C0", VA = "0x7E68C0")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x600221B")]
		[Address(RVA = "0x7E6970", Offset = "0x7E6970", VA = "0x7E6970")]
		public static extern void ovr_MatchmakingOptions_ClearEnqueueDataSettings(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x600221C")]
		[Address(RVA = "0x7E6A10", Offset = "0x7E6A10", VA = "0x7E6A10")]
		public static extern void ovr_MatchmakingOptions_SetEnqueueIsDebug(IntPtr handle, bool value);

		[Token(Token = "0x600221D")]
		[Address(RVA = "0x7E6AB8", Offset = "0x7E6AB8", VA = "0x7E6AB8")]
		public static void ovr_MatchmakingOptions_SetEnqueueQueryKey(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600221E")]
		[Address(RVA = "0x7E6B80", Offset = "0x7E6B80", VA = "0x7E6B80")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueQueryKey_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x600221F")]
		[Address(RVA = "0x7E6C28", Offset = "0x7E6C28", VA = "0x7E6C28")]
		public static extern IntPtr ovr_RichPresenceOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6002220")]
		[Address(RVA = "0x7E6CC0", Offset = "0x7E6CC0", VA = "0x7E6CC0")]
		public static extern void ovr_RichPresenceOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6002221")]
		[Address(RVA = "0x7E6D60", Offset = "0x7E6D60", VA = "0x7E6D60")]
		public static void ovr_RichPresenceOptions_SetApiName(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6002222")]
		[Address(RVA = "0x7E6E28", Offset = "0x7E6E28", VA = "0x7E6E28")]
		private static extern void ovr_RichPresenceOptions_SetApiName_Native(IntPtr handle, IntPtr value);

		[Token(Token = "0x6002223")]
		[Address(RVA = "0x7E6ED0", Offset = "0x7E6ED0", VA = "0x7E6ED0")]
		public static void ovr_RichPresenceOptions_SetArgsString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6002224")]
		[Address(RVA = "0x7E6FB8", Offset = "0x7E6FB8", VA = "0x7E6FB8")]
		private static extern void ovr_RichPresenceOptions_SetArgsString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6002225")]
		[Address(RVA = "0x7E7068", Offset = "0x7E7068", VA = "0x7E7068")]
		public static extern void ovr_RichPresenceOptions_ClearArgs(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6002226")]
		[Address(RVA = "0x7E7108", Offset = "0x7E7108", VA = "0x7E7108")]
		public static extern void ovr_RichPresenceOptions_SetCurrentCapacity(IntPtr handle, uint value);

		[Token(Token = "0x6002227")]
		[Address(RVA = "0x7E71B0", Offset = "0x7E71B0", VA = "0x7E71B0")]
		public static void ovr_RichPresenceOptions_SetDeeplinkMessageOverride(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6002228")]
		[Address(RVA = "0x7E7278", Offset = "0x7E7278", VA = "0x7E7278")]
		private static extern void ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6002229")]
		[Address(RVA = "0x7E7320", Offset = "0x7E7320", VA = "0x7E7320")]
		public static extern void ovr_RichPresenceOptions_SetEndTime(IntPtr handle, DateTime value);

		[PreserveSig]
		[Token(Token = "0x600222A")]
		[Address(RVA = "0x7E7348", Offset = "0x7E7348", VA = "0x7E7348")]
		public static extern void ovr_RichPresenceOptions_SetExtraContext(IntPtr handle, RichPresenceExtraContext value);

		[PreserveSig]
		[Token(Token = "0x600222B")]
		[Address(RVA = "0x7E73F0", Offset = "0x7E73F0", VA = "0x7E73F0")]
		public static extern void ovr_RichPresenceOptions_SetIsIdle(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x600222C")]
		[Address(RVA = "0x7E7498", Offset = "0x7E7498", VA = "0x7E7498")]
		public static extern void ovr_RichPresenceOptions_SetIsJoinable(IntPtr handle, bool value);

		[Token(Token = "0x600222D")]
		[Address(RVA = "0x7E7540", Offset = "0x7E7540", VA = "0x7E7540")]
		public static void ovr_RichPresenceOptions_SetJoinableId(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600222E")]
		[Address(RVA = "0x7E7608", Offset = "0x7E7608", VA = "0x7E7608")]
		private static extern void ovr_RichPresenceOptions_SetJoinableId_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x600222F")]
		[Address(RVA = "0x7E76B0", Offset = "0x7E76B0", VA = "0x7E76B0")]
		public static extern void ovr_RichPresenceOptions_SetMaxCapacity(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6002230")]
		[Address(RVA = "0x7E7758", Offset = "0x7E7758", VA = "0x7E7758")]
		public static extern void ovr_RichPresenceOptions_SetStartTime(IntPtr handle, DateTime value);

		[PreserveSig]
		[Token(Token = "0x6002231")]
		[Address(RVA = "0x7E7780", Offset = "0x7E7780", VA = "0x7E7780")]
		public static extern IntPtr ovr_RoomOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6002232")]
		[Address(RVA = "0x7E7818", Offset = "0x7E7818", VA = "0x7E7818")]
		public static extern void ovr_RoomOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6002233")]
		[Address(RVA = "0x7E78B8", Offset = "0x7E78B8", VA = "0x7E78B8")]
		public static void ovr_RoomOptions_SetDataStoreString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6002234")]
		[Address(RVA = "0x7E79A0", Offset = "0x7E79A0", VA = "0x7E79A0")]
		private static extern void ovr_RoomOptions_SetDataStoreString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6002235")]
		[Address(RVA = "0x7E7A50", Offset = "0x7E7A50", VA = "0x7E7A50")]
		public static extern void ovr_RoomOptions_ClearDataStore(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6002236")]
		[Address(RVA = "0x7E7AF0", Offset = "0x7E7AF0", VA = "0x7E7AF0")]
		public static extern void ovr_RoomOptions_SetExcludeRecentlyMet(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6002237")]
		[Address(RVA = "0x7E7B98", Offset = "0x7E7B98", VA = "0x7E7B98")]
		public static extern void ovr_RoomOptions_SetMaxUserResults(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6002238")]
		[Address(RVA = "0x7E7C40", Offset = "0x7E7C40", VA = "0x7E7C40")]
		public static extern void ovr_RoomOptions_SetOrdering(IntPtr handle, UserOrdering value);

		[PreserveSig]
		[Token(Token = "0x6002239")]
		[Address(RVA = "0x7E7CE8", Offset = "0x7E7CE8", VA = "0x7E7CE8")]
		public static extern void ovr_RoomOptions_SetRecentlyMetTimeWindow(IntPtr handle, TimeWindow value);

		[PreserveSig]
		[Token(Token = "0x600223A")]
		[Address(RVA = "0x7E7D90", Offset = "0x7E7D90", VA = "0x7E7D90")]
		public static extern void ovr_RoomOptions_SetRoomId(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x600223B")]
		[Address(RVA = "0x7E7E40", Offset = "0x7E7E40", VA = "0x7E7E40")]
		public static extern void ovr_RoomOptions_SetTurnOffUpdates(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x600223C")]
		[Address(RVA = "0x7E7EE8", Offset = "0x7E7EE8", VA = "0x7E7EE8")]
		public static extern IntPtr ovr_UserOptions_Create();

		[PreserveSig]
		[Token(Token = "0x600223D")]
		[Address(RVA = "0x7E7F80", Offset = "0x7E7F80", VA = "0x7E7F80")]
		public static extern void ovr_UserOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x600223E")]
		[Address(RVA = "0x7E8020", Offset = "0x7E8020", VA = "0x7E8020")]
		public static extern void ovr_UserOptions_SetMaxUsers(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x600223F")]
		[Address(RVA = "0x7E80C8", Offset = "0x7E80C8", VA = "0x7E80C8")]
		public static extern void ovr_UserOptions_AddServiceProvider(IntPtr handle, ServiceProvider value);

		[PreserveSig]
		[Token(Token = "0x6002240")]
		[Address(RVA = "0x7E8170", Offset = "0x7E8170", VA = "0x7E8170")]
		public static extern void ovr_UserOptions_ClearServiceProviders(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6002241")]
		[Address(RVA = "0x7E8210", Offset = "0x7E8210", VA = "0x7E8210")]
		public static extern void ovr_UserOptions_SetTimeWindow(IntPtr handle, TimeWindow value);

		[PreserveSig]
		[Token(Token = "0x6002242")]
		[Address(RVA = "0x7E82B8", Offset = "0x7E82B8", VA = "0x7E82B8")]
		public static extern IntPtr ovr_VoipOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6002243")]
		[Address(RVA = "0x7E8350", Offset = "0x7E8350", VA = "0x7E8350")]
		public static extern void ovr_VoipOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6002244")]
		[Address(RVA = "0x7E83F0", Offset = "0x7E83F0", VA = "0x7E83F0")]
		public static extern void ovr_VoipOptions_SetBitrateForNewConnections(IntPtr handle, VoipBitrate value);

		[PreserveSig]
		[Token(Token = "0x6002245")]
		[Address(RVA = "0x7E8498", Offset = "0x7E8498", VA = "0x7E8498")]
		public static extern void ovr_VoipOptions_SetCreateNewConnectionUseDtx(IntPtr handle, VoipDtxState value);

		[Token(Token = "0x6002246")]
		[Address(RVA = "0x7E8540", Offset = "0x7E8540", VA = "0x7E8540")]
		public CAPI()
		{
		}
	}
	[Token(Token = "0x2000407")]
	public static class Callback
	{
		[Token(Token = "0x20008BA")]
		private class RequestCallback
		{
			[Token(Token = "0x40029D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private Message.Callback messageCallback;

			[Token(Token = "0x6003751")]
			[Address(RVA = "0xD7F834", Offset = "0xD7F834", VA = "0xD7F834")]
			public RequestCallback()
			{
			}

			[Token(Token = "0x6003752")]
			[Address(RVA = "0xD7EED8", Offset = "0xD7EED8", VA = "0xD7EED8")]
			public RequestCallback(Message.Callback callback)
			{
			}

			[Token(Token = "0x6003753")]
			[Address(RVA = "0xD7F83C", Offset = "0xD7F83C", VA = "0xD7F83C", Slot = "4")]
			public virtual void HandleMessage(Message msg)
			{
			}
		}

		[Token(Token = "0x20008BB")]
		private sealed class RequestCallback<T> : RequestCallback
		{
			[Token(Token = "0x40029D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Message<T>.Callback callback;

			[Token(Token = "0x6003754")]
			public RequestCallback(Message<T>.Callback callback)
			{
			}

			[Token(Token = "0x6003755")]
			public override void HandleMessage(Message msg)
			{
			}
		}

		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<ulong, RequestCallback> requestIDsToCallbacks;

		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static Dictionary<Message.MessageType, RequestCallback> notificationCallbacks;

		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool hasRegisteredRoomInviteNotificationHandler;

		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static List<Message> pendingRoomInviteNotifications;

		[Token(Token = "0x6002248")]
		internal static void SetNotificationCallback<T>(Message.MessageType type, Message<T>.Callback callback)
		{
		}

		[Token(Token = "0x6002249")]
		[Address(RVA = "0xD7EDB0", Offset = "0xD7EDB0", VA = "0xD7EDB0")]
		internal static void SetNotificationCallback(Message.MessageType type, Message.Callback callback)
		{
		}

		[Token(Token = "0x600224A")]
		internal static void OnComplete<T>(Request<T> request, Message<T>.Callback callback)
		{
		}

		[Token(Token = "0x600224B")]
		[Address(RVA = "0xD7EEF8", Offset = "0xD7EEF8", VA = "0xD7EEF8")]
		internal static void OnComplete(Request request, Message.Callback callback)
		{
		}

		[Token(Token = "0x600224C")]
		[Address(RVA = "0xD7EFEC", Offset = "0xD7EFEC", VA = "0xD7EFEC")]
		internal static void RunCallbacks()
		{
		}

		[Token(Token = "0x600224D")]
		[Address(RVA = "0xD7F3E8", Offset = "0xD7F3E8", VA = "0xD7F3E8")]
		internal static void RunLimitedCallbacks(uint limit)
		{
		}

		[Token(Token = "0x600224E")]
		[Address(RVA = "0xD7F494", Offset = "0xD7F494", VA = "0xD7F494")]
		internal static void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600224F")]
		[Address(RVA = "0xD7F560", Offset = "0xD7F560", VA = "0xD7F560")]
		private static void FlushRoomInviteNotificationQueue()
		{
		}

		[Token(Token = "0x6002250")]
		[Address(RVA = "0xD7F1AC", Offset = "0xD7F1AC", VA = "0xD7F1AC")]
		private static void HandleMessage(Message msg)
		{
		}
	}
	[Token(Token = "0x2000408")]
	public class CallbackRunner : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool IsPersistantBetweenSceneLoads;

		[PreserveSig]
		[Token(Token = "0x6002252")]
		[Address(RVA = "0xD7FC78", Offset = "0xD7FC78", VA = "0xD7FC78")]
		private static extern void ovr_UnityResetTestPlatform();

		[Token(Token = "0x6002253")]
		[Address(RVA = "0xD7FD10", Offset = "0xD7FD10", VA = "0xD7FD10")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002254")]
		[Address(RVA = "0xD7FE38", Offset = "0xD7FE38", VA = "0xD7FE38")]
		private void Update()
		{
		}

		[Token(Token = "0x6002255")]
		[Address(RVA = "0xD7FEE4", Offset = "0xD7FEE4", VA = "0xD7FEE4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002256")]
		[Address(RVA = "0xD7FEE8", Offset = "0xD7FEE8", VA = "0xD7FEE8")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6002257")]
		[Address(RVA = "0xD7FF58", Offset = "0xD7FF58", VA = "0xD7FF58")]
		public CallbackRunner()
		{
		}
	}
	[Token(Token = "0x2000409")]
	public enum CloudStorageDataStatus
	{
		[Token(Token = "0x4001D6E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A2954", Offset = "0x3A2954")]
		Unknown,
		[Token(Token = "0x4001D6F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A2988", Offset = "0x3A2988")]
		InSync,
		[Token(Token = "0x4001D70")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A29BC", Offset = "0x3A29BC")]
		NeedsDownload,
		[Token(Token = "0x4001D71")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A29F0", Offset = "0x3A29F0")]
		RemoteDownloading,
		[Token(Token = "0x4001D72")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A2A24", Offset = "0x3A2A24")]
		NeedsUpload,
		[Token(Token = "0x4001D73")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A2A58", Offset = "0x3A2A58")]
		LocalUploading,
		[Token(Token = "0x4001D74")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A2A8C", Offset = "0x3A2A8C")]
		InConflict
	}
	[Token(Token = "0x200040A")]
	public enum CloudStorageUpdateStatus
	{
		[Token(Token = "0x4001D76")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A2AC0", Offset = "0x3A2AC0")]
		Unknown,
		[Token(Token = "0x4001D77")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A2AF4", Offset = "0x3A2AF4")]
		Ok,
		[Token(Token = "0x4001D78")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A2B28", Offset = "0x3A2B28")]
		BetterVersionStored,
		[Token(Token = "0x4001D79")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A2B5C", Offset = "0x3A2B5C")]
		ManualMergeRequired
	}
	[Token(Token = "0x200040B")]
	public interface IMicrophone
	{
		[Token(Token = "0x6002258")]
		void Start();

		[Token(Token = "0x6002259")]
		void Stop();

		[Token(Token = "0x600225A")]
		float[] Update();
	}
	[Token(Token = "0x200040C")]
	public interface IVoipPCMSource
	{
		[Token(Token = "0x600225B")]
		int GetPCM(float[] dest, int length);

		[Token(Token = "0x600225C")]
		void SetSenderID(ulong senderID);

		[Token(Token = "0x600225D")]
		void Update();

		[Token(Token = "0x600225E")]
		int PeekSizeElements();
	}
	[Token(Token = "0x200040D")]
	public enum KeyValuePairType
	{
		[Token(Token = "0x4001D7B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A2B90", Offset = "0x3A2B90")]
		String,
		[Token(Token = "0x4001D7C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A2BC4", Offset = "0x3A2BC4")]
		Int,
		[Token(Token = "0x4001D7D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A2BF8", Offset = "0x3A2BF8")]
		Double,
		[Token(Token = "0x4001D7E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A2C2C", Offset = "0x3A2C2C")]
		Unknown
	}
	[Token(Token = "0x200040E")]
	public enum LaunchType
	{
		[Token(Token = "0x4001D80")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A2C60", Offset = "0x3A2C60")]
		Unknown,
		[Token(Token = "0x4001D81")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A2C94", Offset = "0x3A2C94")]
		Normal,
		[Token(Token = "0x4001D82")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A2CC8", Offset = "0x3A2CC8")]
		Invite,
		[Token(Token = "0x4001D83")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A2CFC", Offset = "0x3A2CFC")]
		Coordinated,
		[Token(Token = "0x4001D84")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A2D30", Offset = "0x3A2D30")]
		Deeplink
	}
	[Token(Token = "0x200040F")]
	public enum LeaderboardFilterType
	{
		[Token(Token = "0x4001D86")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A2D64", Offset = "0x3A2D64")]
		None,
		[Token(Token = "0x4001D87")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A2D98", Offset = "0x3A2D98")]
		Friends,
		[Token(Token = "0x4001D88")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A2DCC", Offset = "0x3A2DCC")]
		Unknown
	}
	[Token(Token = "0x2000410")]
	public enum LeaderboardStartAt
	{
		[Token(Token = "0x4001D8A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A2E00", Offset = "0x3A2E00")]
		Top,
		[Token(Token = "0x4001D8B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A2E34", Offset = "0x3A2E34")]
		CenteredOnViewer,
		[Token(Token = "0x4001D8C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A2E68", Offset = "0x3A2E68")]
		CenteredOnViewerOrTop,
		[Token(Token = "0x4001D8D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A2E9C", Offset = "0x3A2E9C")]
		Unknown
	}
	[Token(Token = "0x2000411")]
	public enum LivestreamingAudience
	{
		[Token(Token = "0x4001D8F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A2ED0", Offset = "0x3A2ED0")]
		Unknown,
		[Token(Token = "0x4001D90")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A2F04", Offset = "0x3A2F04")]
		Public,
		[Token(Token = "0x4001D91")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A2F38", Offset = "0x3A2F38")]
		Friends,
		[Token(Token = "0x4001D92")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A2F6C", Offset = "0x3A2F6C")]
		OnlyMe
	}
	[Token(Token = "0x2000412")]
	public enum LivestreamingMicrophoneStatus
	{
		[Token(Token = "0x4001D94")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A2FA0", Offset = "0x3A2FA0")]
		Unknown,
		[Token(Token = "0x4001D95")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A2FD4", Offset = "0x3A2FD4")]
		MicrophoneOn,
		[Token(Token = "0x4001D96")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3008", Offset = "0x3A3008")]
		MicrophoneOff
	}
	[Token(Token = "0x2000413")]
	public enum LivestreamingStartStatus
	{
		[Token(Token = "0x4001D98")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A303C", Offset = "0x3A303C")]
		Success = 1,
		[Token(Token = "0x4001D99")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3070", Offset = "0x3A3070")]
		Unknown = 0,
		[Token(Token = "0x4001D9A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A30A4", Offset = "0x3A30A4")]
		NoPackageSet = -1,
		[Token(Token = "0x4001D9B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A30D8", Offset = "0x3A30D8")]
		NoFbConnect = -2,
		[Token(Token = "0x4001D9C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A310C", Offset = "0x3A310C")]
		NoSessionId = -3,
		[Token(Token = "0x4001D9D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3140", Offset = "0x3A3140")]
		MissingParameters = -4
	}
	[Token(Token = "0x2000414")]
	public enum MatchmakingCriterionImportance
	{
		[Token(Token = "0x4001D9F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3174", Offset = "0x3A3174")]
		Required,
		[Token(Token = "0x4001DA0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A31A8", Offset = "0x3A31A8")]
		High,
		[Token(Token = "0x4001DA1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A31DC", Offset = "0x3A31DC")]
		Medium,
		[Token(Token = "0x4001DA2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3210", Offset = "0x3A3210")]
		Low,
		[Token(Token = "0x4001DA3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3244", Offset = "0x3A3244")]
		Unknown
	}
	[Token(Token = "0x2000415")]
	public class MatchmakingOptions
	{
		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr Handle;

		[Token(Token = "0x600225F")]
		[Address(RVA = "0xD85860", Offset = "0xD85860", VA = "0xD85860")]
		public MatchmakingOptions()
		{
		}

		[Token(Token = "0x6002260")]
		[Address(RVA = "0xD858E8", Offset = "0xD858E8", VA = "0xD858E8")]
		public void SetCreateRoomDataStore(string key, string value)
		{
		}

		[Token(Token = "0x6002261")]
		[Address(RVA = "0xD85978", Offset = "0xD85978", VA = "0xD85978")]
		public void ClearCreateRoomDataStore()
		{
		}

		[Token(Token = "0x6002262")]
		[Address(RVA = "0xD859F8", Offset = "0xD859F8", VA = "0xD859F8")]
		public void SetCreateRoomJoinPolicy(RoomJoinPolicy value)
		{
		}

		[Token(Token = "0x6002263")]
		[Address(RVA = "0xD85A80", Offset = "0xD85A80", VA = "0xD85A80")]
		public void SetCreateRoomMaxUsers(uint value)
		{
		}

		[Token(Token = "0x6002264")]
		[Address(RVA = "0xD85B08", Offset = "0xD85B08", VA = "0xD85B08")]
		public void AddEnqueueAdditionalUser(ulong userID)
		{
		}

		[Token(Token = "0x6002265")]
		[Address(RVA = "0xD85BA4", Offset = "0xD85BA4", VA = "0xD85BA4")]
		public void ClearEnqueueAdditionalUsers()
		{
		}

		[Token(Token = "0x6002266")]
		[Address(RVA = "0xD85C24", Offset = "0xD85C24", VA = "0xD85C24")]
		public void SetEnqueueDataSettings(string key, int value)
		{
		}

		[Token(Token = "0x6002267")]
		[Address(RVA = "0xD85CB4", Offset = "0xD85CB4", VA = "0xD85CB4")]
		public void SetEnqueueDataSettings(string key, double value)
		{
		}

		[Token(Token = "0x6002268")]
		[Address(RVA = "0xD85D58", Offset = "0xD85D58", VA = "0xD85D58")]
		public void SetEnqueueDataSettings(string key, string value)
		{
		}

		[Token(Token = "0x6002269")]
		[Address(RVA = "0xD85DE8", Offset = "0xD85DE8", VA = "0xD85DE8")]
		public void ClearEnqueueDataSettings()
		{
		}

		[Token(Token = "0x600226A")]
		[Address(RVA = "0xD85E68", Offset = "0xD85E68", VA = "0xD85E68")]
		public void SetEnqueueIsDebug(bool value)
		{
		}

		[Token(Token = "0x600226B")]
		[Address(RVA = "0xD85EF0", Offset = "0xD85EF0", VA = "0xD85EF0")]
		public void SetEnqueueQueryKey(string value)
		{
		}

		[Token(Token = "0x600226C")]
		[Address(RVA = "0xD843B4", Offset = "0xD843B4", VA = "0xD843B4")]
		public static explicit operator IntPtr(MatchmakingOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600226D")]
		[Address(RVA = "0xD85F78", Offset = "0xD85F78", VA = "0xD85F78", Slot = "1")]
		~MatchmakingOptions()
		{
		}
	}
	[Token(Token = "0x2000416")]
	public enum MatchmakingStatApproach
	{
		[Token(Token = "0x4001DA6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3278", Offset = "0x3A3278")]
		Unknown,
		[Token(Token = "0x4001DA7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A32AC", Offset = "0x3A32AC")]
		Trailing,
		[Token(Token = "0x4001DA8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A32E0", Offset = "0x3A32E0")]
		Swingy
	}
	[Token(Token = "0x2000417")]
	public enum MediaContentType
	{
		[Token(Token = "0x4001DAA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3314", Offset = "0x3A3314")]
		Unknown,
		[Token(Token = "0x4001DAB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3348", Offset = "0x3A3348")]
		Photo
	}
	[Token(Token = "0x2000418")]
	public abstract class Message<T> : Message
	{
		[Token(Token = "0x20008BC")]
		public new delegate void Callback(Message<T> message);

		[Token(Token = "0x4001DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T data;

		[Token(Token = "0x1700036E")]
		public T Data
		{
			[Token(Token = "0x600226F")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x600226E")]
		public Message(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002270")]
		protected abstract T GetDataFromMessage(IntPtr c_message);
	}
	[Token(Token = "0x2000419")]
	public class Message
	{
		[Token(Token = "0x20008BD")]
		public delegate void Callback(Message message);

		[Token(Token = "0x20008BE")]
		public enum MessageType : uint
		{
			[Token(Token = "0x40029D8")]
			Unknown = 0u,
			[Token(Token = "0x40029D9")]
			Achievements_AddCount = 65495601u,
			[Token(Token = "0x40029DA")]
			Achievements_AddFields = 346693929u,
			[Token(Token = "0x40029DB")]
			Achievements_GetAllDefinitions = 64177549u,
			[Token(Token = "0x40029DC")]
			Achievements_GetAllProgress = 1335877149u,
			[Token(Token = "0x40029DD")]
			Achievements_GetDefinitionsByName = 1653670332u,
			[Token(Token = "0x40029DE")]
			Achievements_GetNextAchievementDefinitionArrayPage = 712888917u,
			[Token(Token = "0x40029DF")]
			Achievements_GetNextAchievementProgressArrayPage = 792913703u,
			[Token(Token = "0x40029E0")]
			Achievements_GetProgressByName = 354837425u,
			[Token(Token = "0x40029E1")]
			Achievements_Unlock = 1497156573u,
			[Token(Token = "0x40029E2")]
			ApplicationLifecycle_GetRegisteredPIDs = 82169698u,
			[Token(Token = "0x40029E3")]
			ApplicationLifecycle_GetSessionKey = 984570141u,
			[Token(Token = "0x40029E4")]
			ApplicationLifecycle_RegisterSessionKey = 1303818232u,
			[Token(Token = "0x40029E5")]
			Application_GetVersion = 1751583246u,
			[Token(Token = "0x40029E6")]
			Application_LaunchOtherApp = 1424151032u,
			[Token(Token = "0x40029E7")]
			AssetFile_Delete = 1834842246u,
			[Token(Token = "0x40029E8")]
			AssetFile_DeleteById = 1525206354u,
			[Token(Token = "0x40029E9")]
			AssetFile_DeleteByName = 1108001231u,
			[Token(Token = "0x40029EA")]
			AssetFile_Download = 289710021u,
			[Token(Token = "0x40029EB")]
			AssetFile_DownloadById = 755009938u,
			[Token(Token = "0x40029EC")]
			AssetFile_DownloadByName = 1664536314u,
			[Token(Token = "0x40029ED")]
			AssetFile_DownloadCancel = 134927303u,
			[Token(Token = "0x40029EE")]
			AssetFile_DownloadCancelById = 1365611796u,
			[Token(Token = "0x40029EF")]
			AssetFile_DownloadCancelByName = 1147858170u,
			[Token(Token = "0x40029F0")]
			AssetFile_GetList = 1258057588u,
			[Token(Token = "0x40029F1")]
			AssetFile_Status = 47394656u,
			[Token(Token = "0x40029F2")]
			AssetFile_StatusById = 1570069816u,
			[Token(Token = "0x40029F3")]
			AssetFile_StatusByName = 1104140880u,
			[Token(Token = "0x40029F4")]
			CloudStorage2_GetUserDirectoryPath = 1990471406u,
			[Token(Token = "0x40029F5")]
			CloudStorage_Delete = 685393261u,
			[Token(Token = "0x40029F6")]
			CloudStorage_GetNextCloudStorageMetadataArrayPage = 1544004335u,
			[Token(Token = "0x40029F7")]
			CloudStorage_Load = 1082420033u,
			[Token(Token = "0x40029F8")]
			CloudStorage_LoadBucketMetadata = 1931977997u,
			[Token(Token = "0x40029F9")]
			CloudStorage_LoadConflictMetadata = 1146770162u,
			[Token(Token = "0x40029FA")]
			CloudStorage_LoadHandle = 845863478u,
			[Token(Token = "0x40029FB")]
			CloudStorage_LoadMetadata = 65446546u,
			[Token(Token = "0x40029FC")]
			CloudStorage_ResolveKeepLocal = 811109637u,
			[Token(Token = "0x40029FD")]
			CloudStorage_ResolveKeepRemote = 1965400838u,
			[Token(Token = "0x40029FE")]
			CloudStorage_Save = 1270570030u,
			[Token(Token = "0x40029FF")]
			Entitlement_GetIsViewerEntitled = 409688241u,
			[Token(Token = "0x4002A00")]
			IAP_ConsumePurchase = 532378329u,
			[Token(Token = "0x4002A01")]
			IAP_GetNextProductArrayPage = 467225263u,
			[Token(Token = "0x4002A02")]
			IAP_GetNextPurchaseArrayPage = 1196886677u,
			[Token(Token = "0x4002A03")]
			IAP_GetProductsBySKU = 2124073717u,
			[Token(Token = "0x4002A04")]
			IAP_GetViewerPurchases = 974095385u,
			[Token(Token = "0x4002A05")]
			IAP_GetViewerPurchasesDurableCache = 1666817579u,
			[Token(Token = "0x4002A06")]
			IAP_LaunchCheckoutFlow = 1067126029u,
			[Token(Token = "0x4002A07")]
			LanguagePack_GetCurrent = 529592533u,
			[Token(Token = "0x4002A08")]
			LanguagePack_SetCurrent = 1531952096u,
			[Token(Token = "0x4002A09")]
			Leaderboard_GetEntries = 1572030284u,
			[Token(Token = "0x4002A0A")]
			Leaderboard_GetEntriesAfterRank = 406293487u,
			[Token(Token = "0x4002A0B")]
			Leaderboard_GetNextEntries = 1310751961u,
			[Token(Token = "0x4002A0C")]
			Leaderboard_GetPreviousEntries = 1224858304u,
			[Token(Token = "0x4002A0D")]
			Leaderboard_WriteEntry = 293587198u,
			[Token(Token = "0x4002A0E")]
			Livestreaming_GetStatus = 1218079125u,
			[Token(Token = "0x4002A0F")]
			Livestreaming_PauseStream = 916223619u,
			[Token(Token = "0x4002A10")]
			Livestreaming_ResumeStream = 575827343u,
			[Token(Token = "0x4002A11")]
			Matchmaking_Browse = 509948616u,
			[Token(Token = "0x4002A12")]
			Matchmaking_Browse2 = 1715641947u,
			[Token(Token = "0x4002A13")]
			Matchmaking_Cancel = 543705519u,
			[Token(Token = "0x4002A14")]
			Matchmaking_Cancel2 = 285117908u,
			[Token(Token = "0x4002A15")]
			Matchmaking_CreateAndEnqueueRoom = 1615617480u,
			[Token(Token = "0x4002A16")]
			Matchmaking_CreateAndEnqueueRoom2 = 693889755u,
			[Token(Token = "0x4002A17")]
			Matchmaking_CreateRoom = 54203178u,
			[Token(Token = "0x4002A18")]
			Matchmaking_CreateRoom2 = 1231922052u,
			[Token(Token = "0x4002A19")]
			Matchmaking_Enqueue = 1086418033u,
			[Token(Token = "0x4002A1A")]
			Matchmaking_Enqueue2 = 303174325u,
			[Token(Token = "0x4002A1B")]
			Matchmaking_EnqueueRoom = 1888108644u,
			[Token(Token = "0x4002A1C")]
			Matchmaking_EnqueueRoom2 = 1428741028u,
			[Token(Token = "0x4002A1D")]
			Matchmaking_GetAdminSnapshot = 1008820116u,
			[Token(Token = "0x4002A1E")]
			Matchmaking_GetStats = 1123849272u,
			[Token(Token = "0x4002A1F")]
			Matchmaking_JoinRoom = 1295177725u,
			[Token(Token = "0x4002A20")]
			Matchmaking_ReportResultInsecure = 439800205u,
			[Token(Token = "0x4002A21")]
			Matchmaking_StartMatch = 1154746693u,
			[Token(Token = "0x4002A22")]
			Media_ShareToFacebook = 14912239u,
			[Token(Token = "0x4002A23")]
			Notification_GetNextRoomInviteNotificationArrayPage = 102890359u,
			[Token(Token = "0x4002A24")]
			Notification_GetRoomInvites = 1871801234u,
			[Token(Token = "0x4002A25")]
			Notification_MarkAsRead = 1903319523u,
			[Token(Token = "0x4002A26")]
			Party_GetCurrent = 1200830304u,
			[Token(Token = "0x4002A27")]
			RichPresence_Clear = 1471632051u,
			[Token(Token = "0x4002A28")]
			RichPresence_Set = 1007973641u,
			[Token(Token = "0x4002A29")]
			Room_CreateAndJoinPrivate = 1977017207u,
			[Token(Token = "0x4002A2A")]
			Room_CreateAndJoinPrivate2 = 1513775683u,
			[Token(Token = "0x4002A2B")]
			Room_Get = 1704628152u,
			[Token(Token = "0x4002A2C")]
			Room_GetCurrent = 161916164u,
			[Token(Token = "0x4002A2D")]
			Room_GetCurrentForUser = 234887141u,
			[Token(Token = "0x4002A2E")]
			Room_GetInvitableUsers = 506615698u,
			[Token(Token = "0x4002A2F")]
			Room_GetInvitableUsers2 = 1330899120u,
			[Token(Token = "0x4002A30")]
			Room_GetModeratedRooms = 159645047u,
			[Token(Token = "0x4002A31")]
			Room_GetNextRoomArrayPage = 1317239238u,
			[Token(Token = "0x4002A32")]
			Room_InviteUser = 1093266451u,
			[Token(Token = "0x4002A33")]
			Room_Join = 382373641u,
			[Token(Token = "0x4002A34")]
			Room_Join2 = 1303059522u,
			[Token(Token = "0x4002A35")]
			Room_KickUser = 1233344310u,
			[Token(Token = "0x4002A36")]
			Room_LaunchInvitableUserFlow = 843047539u,
			[Token(Token = "0x4002A37")]
			Room_Leave = 1916281973u,
			[Token(Token = "0x4002A38")]
			Room_SetDescription = 809796911u,
			[Token(Token = "0x4002A39")]
			Room_UpdateDataStore = 40779816u,
			[Token(Token = "0x4002A3A")]
			Room_UpdateMembershipLockStatus = 923514796u,
			[Token(Token = "0x4002A3B")]
			Room_UpdateOwner = 850803997u,
			[Token(Token = "0x4002A3C")]
			Room_UpdatePrivateRoomJoinPolicy = 289473179u,
			[Token(Token = "0x4002A3D")]
			User_Get = 1808768583u,
			[Token(Token = "0x4002A3E")]
			User_GetAccessToken = 111696574u,
			[Token(Token = "0x4002A3F")]
			User_GetLoggedInUser = 1131361373u,
			[Token(Token = "0x4002A40")]
			User_GetLoggedInUserFriends = 1484532365u,
			[Token(Token = "0x4002A41")]
			User_GetLoggedInUserFriendsAndRooms = 1585908615u,
			[Token(Token = "0x4002A42")]
			User_GetLoggedInUserRecentlyMetUsersAndRooms = 694139440u,
			[Token(Token = "0x4002A43")]
			User_GetNextUserAndRoomArrayPage = 2143146719u,
			[Token(Token = "0x4002A44")]
			User_GetNextUserArrayPage = 645723971u,
			[Token(Token = "0x4002A45")]
			User_GetOrgScopedID = 418426907u,
			[Token(Token = "0x4002A46")]
			User_GetSdkAccounts = 1733454467u,
			[Token(Token = "0x4002A47")]
			User_GetUserProof = 578880643u,
			[Token(Token = "0x4002A48")]
			User_LaunchFriendRequestFlow = 151303576u,
			[Token(Token = "0x4002A49")]
			User_LaunchProfile = 171537047u,
			[Token(Token = "0x4002A4A")]
			Voip_SetSystemVoipSuppressed = 1161808298u,
			[Token(Token = "0x4002A4B")]
			Notification_ApplicationLifecycle_LaunchIntentChanged = 78859427u,
			[Token(Token = "0x4002A4C")]
			Notification_AssetFile_DownloadUpdate = 803015885u,
			[Token(Token = "0x4002A4D")]
			Notification_Cal_FinalizeApplication = 1963741337u,
			[Token(Token = "0x4002A4E")]
			Notification_Cal_ProposeApplication = 779375093u,
			[Token(Token = "0x4002A4F")]
			Notification_HTTP_Transfer = 2111073839u,
			[Token(Token = "0x4002A50")]
			Notification_Livestreaming_StatusChange = 575101294u,
			[Token(Token = "0x4002A51")]
			Notification_Matchmaking_MatchFound = 197393623u,
			[Token(Token = "0x4002A52")]
			Notification_Networking_ConnectionStateChange = 1577243802u,
			[Token(Token = "0x4002A53")]
			Notification_Networking_PeerConnectRequest = 1295114959u,
			[Token(Token = "0x4002A54")]
			Notification_Networking_PingResult = 1360343058u,
			[Token(Token = "0x4002A55")]
			Notification_Party_PartyUpdate = 487688882u,
			[Token(Token = "0x4002A56")]
			Notification_Room_InviteAccepted = 1829794225u,
			[Token(Token = "0x4002A57")]
			Notification_Room_InviteReceived = 1783209300u,
			[Token(Token = "0x4002A58")]
			Notification_Room_RoomUpdate = 1626094639u,
			[Token(Token = "0x4002A59")]
			Notification_Voip_ConnectRequest = 908343318u,
			[Token(Token = "0x4002A5A")]
			Notification_Voip_StateChange = 888120928u,
			[Token(Token = "0x4002A5B")]
			Notification_Voip_SystemVoipState = 1490179237u,
			[Token(Token = "0x4002A5C")]
			Platform_InitializeWithAccessToken = 896085803u,
			[Token(Token = "0x4002A5D")]
			Platform_InitializeStandaloneOculus = 1375260172u,
			[Token(Token = "0x4002A5E")]
			Platform_InitializeAndroidAsynchronous = 450037684u,
			[Token(Token = "0x4002A5F")]
			Platform_InitializeWindowsAsynchronous = 1839708815u
		}

		[Token(Token = "0x20008BF")]
		internal delegate Message ExtraMessageTypesHandler(IntPtr messageHandle, MessageType message_type);

		[Token(Token = "0x4001DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private MessageType type;

		[Token(Token = "0x4001DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong requestID;

		[Token(Token = "0x4001DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Oculus.Platform.Models.Error error;

		[Token(Token = "0x4001DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A337C", Offset = "0x3A337C")]
		private static ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField;

		[Token(Token = "0x1700036F")]
		public MessageType Type
		{
			[Token(Token = "0x6002273")]
			[Address(RVA = "0xD86470", Offset = "0xD86470", VA = "0xD86470")]
			get
			{
				return default(MessageType);
			}
		}

		[Token(Token = "0x17000370")]
		public bool IsError
		{
			[Token(Token = "0x6002274")]
			[Address(RVA = "0xD86478", Offset = "0xD86478", VA = "0xD86478")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000371")]
		public ulong RequestID
		{
			[Token(Token = "0x6002275")]
			[Address(RVA = "0xD86488", Offset = "0xD86488", VA = "0xD86488")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000372")]
		internal static ExtraMessageTypesHandler HandleExtraMessageTypes
		{
			[Token(Token = "0x60022B8")]
			[Address(RVA = "0xD895E0", Offset = "0xD895E0", VA = "0xD895E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACDEC", Offset = "0x3ACDEC")]
			private get
			{
				return null;
			}
			[Token(Token = "0x60022B7")]
			[Address(RVA = "0xD89584", Offset = "0xD89584", VA = "0xD89584")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACDDC", Offset = "0x3ACDDC")]
			set
			{
			}
		}

		[Token(Token = "0x6002271")]
		[Address(RVA = "0xD861BC", Offset = "0xD861BC", VA = "0xD861BC")]
		public Message(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002272")]
		[Address(RVA = "0xD86468", Offset = "0xD86468", VA = "0xD86468", Slot = "1")]
		~Message()
		{
		}

		[Token(Token = "0x6002276")]
		[Address(RVA = "0xD86490", Offset = "0xD86490", VA = "0xD86490", Slot = "4")]
		public virtual Oculus.Platform.Models.Error GetError()
		{
			return null;
		}

		[Token(Token = "0x6002277")]
		[Address(RVA = "0xD86498", Offset = "0xD86498", VA = "0xD86498", Slot = "5")]
		public virtual PingResult GetPingResult()
		{
			return null;
		}

		[Token(Token = "0x6002278")]
		[Address(RVA = "0xD864A0", Offset = "0xD864A0", VA = "0xD864A0", Slot = "6")]
		public virtual Oculus.Platform.Models.NetworkingPeer GetNetworkingPeer()
		{
			return null;
		}

		[Token(Token = "0x6002279")]
		[Address(RVA = "0xD864A8", Offset = "0xD864A8", VA = "0xD864A8", Slot = "7")]
		public virtual HttpTransferUpdate GetHttpTransferUpdate()
		{
			return null;
		}

		[Token(Token = "0x600227A")]
		[Address(RVA = "0xD864B0", Offset = "0xD864B0", VA = "0xD864B0", Slot = "8")]
		public virtual PlatformInitialize GetPlatformInitialize()
		{
			return null;
		}

		[Token(Token = "0x600227B")]
		[Address(RVA = "0xD864B8", Offset = "0xD864B8", VA = "0xD864B8", Slot = "9")]
		public virtual AbuseReportRecording GetAbuseReportRecording()
		{
			return null;
		}

		[Token(Token = "0x600227C")]
		[Address(RVA = "0xD864C0", Offset = "0xD864C0", VA = "0xD864C0", Slot = "10")]
		public virtual AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x600227D")]
		[Address(RVA = "0xD864C8", Offset = "0xD864C8", VA = "0xD864C8", Slot = "11")]
		public virtual AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x600227E")]
		[Address(RVA = "0xD864D0", Offset = "0xD864D0", VA = "0xD864D0", Slot = "12")]
		public virtual AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x600227F")]
		[Address(RVA = "0xD864D8", Offset = "0xD864D8", VA = "0xD864D8", Slot = "13")]
		public virtual ApplicationVersion GetApplicationVersion()
		{
			return null;
		}

		[Token(Token = "0x6002280")]
		[Address(RVA = "0xD864E0", Offset = "0xD864E0", VA = "0xD864E0", Slot = "14")]
		public virtual AssetDetails GetAssetDetails()
		{
			return null;
		}

		[Token(Token = "0x6002281")]
		[Address(RVA = "0xD864E8", Offset = "0xD864E8", VA = "0xD864E8", Slot = "15")]
		public virtual AssetDetailsList GetAssetDetailsList()
		{
			return null;
		}

		[Token(Token = "0x6002282")]
		[Address(RVA = "0xD864F0", Offset = "0xD864F0", VA = "0xD864F0", Slot = "16")]
		public virtual AssetFileDeleteResult GetAssetFileDeleteResult()
		{
			return null;
		}

		[Token(Token = "0x6002283")]
		[Address(RVA = "0xD864F8", Offset = "0xD864F8", VA = "0xD864F8", Slot = "17")]
		public virtual AssetFileDownloadCancelResult GetAssetFileDownloadCancelResult()
		{
			return null;
		}

		[Token(Token = "0x6002284")]
		[Address(RVA = "0xD86500", Offset = "0xD86500", VA = "0xD86500", Slot = "18")]
		public virtual AssetFileDownloadResult GetAssetFileDownloadResult()
		{
			return null;
		}

		[Token(Token = "0x6002285")]
		[Address(RVA = "0xD86508", Offset = "0xD86508", VA = "0xD86508", Slot = "19")]
		public virtual AssetFileDownloadUpdate GetAssetFileDownloadUpdate()
		{
			return null;
		}

		[Token(Token = "0x6002286")]
		[Address(RVA = "0xD86510", Offset = "0xD86510", VA = "0xD86510", Slot = "20")]
		public virtual CalApplicationFinalized GetCalApplicationFinalized()
		{
			return null;
		}

		[Token(Token = "0x6002287")]
		[Address(RVA = "0xD86518", Offset = "0xD86518", VA = "0xD86518", Slot = "21")]
		public virtual CalApplicationProposed GetCalApplicationProposed()
		{
			return null;
		}

		[Token(Token = "0x6002288")]
		[Address(RVA = "0xD86520", Offset = "0xD86520", VA = "0xD86520", Slot = "22")]
		public virtual CalApplicationSuggestionList GetCalApplicationSuggestionList()
		{
			return null;
		}

		[Token(Token = "0x6002289")]
		[Address(RVA = "0xD86528", Offset = "0xD86528", VA = "0xD86528", Slot = "23")]
		public virtual CloudStorageConflictMetadata GetCloudStorageConflictMetadata()
		{
			return null;
		}

		[Token(Token = "0x600228A")]
		[Address(RVA = "0xD86530", Offset = "0xD86530", VA = "0xD86530", Slot = "24")]
		public virtual CloudStorageData GetCloudStorageData()
		{
			return null;
		}

		[Token(Token = "0x600228B")]
		[Address(RVA = "0xD86538", Offset = "0xD86538", VA = "0xD86538", Slot = "25")]
		public virtual CloudStorageMetadata GetCloudStorageMetadata()
		{
			return null;
		}

		[Token(Token = "0x600228C")]
		[Address(RVA = "0xD86540", Offset = "0xD86540", VA = "0xD86540", Slot = "26")]
		public virtual CloudStorageMetadataList GetCloudStorageMetadataList()
		{
			return null;
		}

		[Token(Token = "0x600228D")]
		[Address(RVA = "0xD86548", Offset = "0xD86548", VA = "0xD86548", Slot = "27")]
		public virtual CloudStorageUpdateResponse GetCloudStorageUpdateResponse()
		{
			return null;
		}

		[Token(Token = "0x600228E")]
		[Address(RVA = "0xD86550", Offset = "0xD86550", VA = "0xD86550", Slot = "28")]
		public virtual InstalledApplicationList GetInstalledApplicationList()
		{
			return null;
		}

		[Token(Token = "0x600228F")]
		[Address(RVA = "0xD86558", Offset = "0xD86558", VA = "0xD86558", Slot = "29")]
		public virtual LaunchBlockFlowResult GetLaunchBlockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6002290")]
		[Address(RVA = "0xD86560", Offset = "0xD86560", VA = "0xD86560", Slot = "30")]
		public virtual LaunchFriendRequestFlowResult GetLaunchFriendRequestFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6002291")]
		[Address(RVA = "0xD86568", Offset = "0xD86568", VA = "0xD86568", Slot = "31")]
		public virtual LaunchReportFlowResult GetLaunchReportFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6002292")]
		[Address(RVA = "0xD86570", Offset = "0xD86570", VA = "0xD86570", Slot = "32")]
		public virtual LaunchUnblockFlowResult GetLaunchUnblockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6002293")]
		[Address(RVA = "0xD86578", Offset = "0xD86578", VA = "0xD86578", Slot = "33")]
		public virtual bool GetLeaderboardDidUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x6002294")]
		[Address(RVA = "0xD86580", Offset = "0xD86580", VA = "0xD86580", Slot = "34")]
		public virtual LeaderboardEntryList GetLeaderboardEntryList()
		{
			return null;
		}

		[Token(Token = "0x6002295")]
		[Address(RVA = "0xD86588", Offset = "0xD86588", VA = "0xD86588", Slot = "35")]
		public virtual LinkedAccountList GetLinkedAccountList()
		{
			return null;
		}

		[Token(Token = "0x6002296")]
		[Address(RVA = "0xD86590", Offset = "0xD86590", VA = "0xD86590", Slot = "36")]
		public virtual LivestreamingApplicationStatus GetLivestreamingApplicationStatus()
		{
			return null;
		}

		[Token(Token = "0x6002297")]
		[Address(RVA = "0xD86598", Offset = "0xD86598", VA = "0xD86598", Slot = "37")]
		public virtual LivestreamingStartResult GetLivestreamingStartResult()
		{
			return null;
		}

		[Token(Token = "0x6002298")]
		[Address(RVA = "0xD865A0", Offset = "0xD865A0", VA = "0xD865A0", Slot = "38")]
		public virtual LivestreamingStatus GetLivestreamingStatus()
		{
			return null;
		}

		[Token(Token = "0x6002299")]
		[Address(RVA = "0xD865A8", Offset = "0xD865A8", VA = "0xD865A8", Slot = "39")]
		public virtual LivestreamingVideoStats GetLivestreamingVideoStats()
		{
			return null;
		}

		[Token(Token = "0x600229A")]
		[Address(RVA = "0xD865B0", Offset = "0xD865B0", VA = "0xD865B0", Slot = "40")]
		public virtual MatchmakingAdminSnapshot GetMatchmakingAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x600229B")]
		[Address(RVA = "0xD865B8", Offset = "0xD865B8", VA = "0xD865B8", Slot = "41")]
		public virtual MatchmakingBrowseResult GetMatchmakingBrowseResult()
		{
			return null;
		}

		[Token(Token = "0x600229C")]
		[Address(RVA = "0xD865C0", Offset = "0xD865C0", VA = "0xD865C0", Slot = "42")]
		public virtual MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x600229D")]
		[Address(RVA = "0xD865C8", Offset = "0xD865C8", VA = "0xD865C8", Slot = "43")]
		public virtual MatchmakingEnqueueResultAndRoom GetMatchmakingEnqueueResultAndRoom()
		{
			return null;
		}

		[Token(Token = "0x600229E")]
		[Address(RVA = "0xD865D0", Offset = "0xD865D0", VA = "0xD865D0", Slot = "44")]
		public virtual MatchmakingStats GetMatchmakingStats()
		{
			return null;
		}

		[Token(Token = "0x600229F")]
		[Address(RVA = "0xD865D8", Offset = "0xD865D8", VA = "0xD865D8", Slot = "45")]
		public virtual OrgScopedID GetOrgScopedID()
		{
			return null;
		}

		[Token(Token = "0x60022A0")]
		[Address(RVA = "0xD865E0", Offset = "0xD865E0", VA = "0xD865E0", Slot = "46")]
		public virtual Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x60022A1")]
		[Address(RVA = "0xD865E8", Offset = "0xD865E8", VA = "0xD865E8", Slot = "47")]
		public virtual PartyID GetPartyID()
		{
			return null;
		}

		[Token(Token = "0x60022A2")]
		[Address(RVA = "0xD865F0", Offset = "0xD865F0", VA = "0xD865F0", Slot = "48")]
		public virtual PartyUpdateNotification GetPartyUpdateNotification()
		{
			return null;
		}

		[Token(Token = "0x60022A3")]
		[Address(RVA = "0xD865F8", Offset = "0xD865F8", VA = "0xD865F8", Slot = "49")]
		public virtual PidList GetPidList()
		{
			return null;
		}

		[Token(Token = "0x60022A4")]
		[Address(RVA = "0xD86600", Offset = "0xD86600", VA = "0xD86600", Slot = "50")]
		public virtual ProductList GetProductList()
		{
			return null;
		}

		[Token(Token = "0x60022A5")]
		[Address(RVA = "0xD86608", Offset = "0xD86608", VA = "0xD86608", Slot = "51")]
		public virtual Purchase GetPurchase()
		{
			return null;
		}

		[Token(Token = "0x60022A6")]
		[Address(RVA = "0xD86610", Offset = "0xD86610", VA = "0xD86610", Slot = "52")]
		public virtual PurchaseList GetPurchaseList()
		{
			return null;
		}

		[Token(Token = "0x60022A7")]
		[Address(RVA = "0xD86618", Offset = "0xD86618", VA = "0xD86618", Slot = "53")]
		public virtual Oculus.Platform.Models.Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x60022A8")]
		[Address(RVA = "0xD86620", Offset = "0xD86620", VA = "0xD86620", Slot = "54")]
		public virtual RoomInviteNotification GetRoomInviteNotification()
		{
			return null;
		}

		[Token(Token = "0x60022A9")]
		[Address(RVA = "0xD86628", Offset = "0xD86628", VA = "0xD86628", Slot = "55")]
		public virtual RoomInviteNotificationList GetRoomInviteNotificationList()
		{
			return null;
		}

		[Token(Token = "0x60022AA")]
		[Address(RVA = "0xD86630", Offset = "0xD86630", VA = "0xD86630", Slot = "56")]
		public virtual RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x60022AB")]
		[Address(RVA = "0xD86638", Offset = "0xD86638", VA = "0xD86638", Slot = "57")]
		public virtual SdkAccountList GetSdkAccountList()
		{
			return null;
		}

		[Token(Token = "0x60022AC")]
		[Address(RVA = "0xD86640", Offset = "0xD86640", VA = "0xD86640", Slot = "58")]
		public virtual ShareMediaResult GetShareMediaResult()
		{
			return null;
		}

		[Token(Token = "0x60022AD")]
		[Address(RVA = "0xD86648", Offset = "0xD86648", VA = "0xD86648", Slot = "59")]
		public virtual string GetString()
		{
			return null;
		}

		[Token(Token = "0x60022AE")]
		[Address(RVA = "0xD86650", Offset = "0xD86650", VA = "0xD86650", Slot = "60")]
		public virtual SystemPermission GetSystemPermission()
		{
			return null;
		}

		[Token(Token = "0x60022AF")]
		[Address(RVA = "0xD86658", Offset = "0xD86658", VA = "0xD86658", Slot = "61")]
		public virtual SystemVoipState GetSystemVoipState()
		{
			return null;
		}

		[Token(Token = "0x60022B0")]
		[Address(RVA = "0xD86660", Offset = "0xD86660", VA = "0xD86660", Slot = "62")]
		public virtual Oculus.Platform.Models.User GetUser()
		{
			return null;
		}

		[Token(Token = "0x60022B1")]
		[Address(RVA = "0xD86668", Offset = "0xD86668", VA = "0xD86668", Slot = "63")]
		public virtual UserAndRoomList GetUserAndRoomList()
		{
			return null;
		}

		[Token(Token = "0x60022B2")]
		[Address(RVA = "0xD86670", Offset = "0xD86670", VA = "0xD86670", Slot = "64")]
		public virtual UserList GetUserList()
		{
			return null;
		}

		[Token(Token = "0x60022B3")]
		[Address(RVA = "0xD86678", Offset = "0xD86678", VA = "0xD86678", Slot = "65")]
		public virtual UserProof GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x60022B4")]
		[Address(RVA = "0xD86680", Offset = "0xD86680", VA = "0xD86680", Slot = "66")]
		public virtual UserReportID GetUserReportID()
		{
			return null;
		}

		[Token(Token = "0x60022B5")]
		[Address(RVA = "0xD86688", Offset = "0xD86688", VA = "0xD86688")]
		internal static Message ParseMessageHandle(IntPtr messageHandle)
		{
			return null;
		}

		[Token(Token = "0x60022B6")]
		[Address(RVA = "0xD7F080", Offset = "0xD7F080", VA = "0xD7F080")]
		public static Message PopMessage()
		{
			return null;
		}
	}
	[Token(Token = "0x200041A")]
	public class MessageWithAbuseReportRecording : Message<AbuseReportRecording>
	{
		[Token(Token = "0x60022B9")]
		[Address(RVA = "0xD89A28", Offset = "0xD89A28", VA = "0xD89A28")]
		public MessageWithAbuseReportRecording(IntPtr c_message)
		{
		}

		[Token(Token = "0x60022BA")]
		[Address(RVA = "0xD89A8C", Offset = "0xD89A8C", VA = "0xD89A8C", Slot = "9")]
		public override AbuseReportRecording GetAbuseReportRecording()
		{
			return null;
		}

		[Token(Token = "0x60022BB")]
		[Address(RVA = "0xD89AD4", Offset = "0xD89AD4", VA = "0xD89AD4", Slot = "67")]
		protected override AbuseReportRecording GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200041B")]
	public class MessageWithAchievementDefinitions : Message<AchievementDefinitionList>
	{
		[Token(Token = "0x60022BC")]
		[Address(RVA = "0xD87A64", Offset = "0xD87A64", VA = "0xD87A64")]
		public MessageWithAchievementDefinitions(IntPtr c_message)
		{
		}

		[Token(Token = "0x60022BD")]
		[Address(RVA = "0xD89C10", Offset = "0xD89C10", VA = "0xD89C10", Slot = "10")]
		public override AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x60022BE")]
		[Address(RVA = "0xD89C58", Offset = "0xD89C58", VA = "0xD89C58", Slot = "67")]
		protected override AchievementDefinitionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200041C")]
	public class MessageWithAchievementProgressList : Message<AchievementProgressList>
	{
		[Token(Token = "0x60022BF")]
		[Address(RVA = "0xD87AC8", Offset = "0xD87AC8", VA = "0xD87AC8")]
		public MessageWithAchievementProgressList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60022C0")]
		[Address(RVA = "0xD89F44", Offset = "0xD89F44", VA = "0xD89F44", Slot = "11")]
		public override AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x60022C1")]
		[Address(RVA = "0xD89F8C", Offset = "0xD89F8C", VA = "0xD89F8C", Slot = "67")]
		protected override AchievementProgressList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200041D")]
	public class MessageWithAchievementUpdate : Message<AchievementUpdate>
	{
		[Token(Token = "0x60022C2")]
		[Address(RVA = "0xD87B2C", Offset = "0xD87B2C", VA = "0xD87B2C")]
		public MessageWithAchievementUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x60022C3")]
		[Address(RVA = "0xD8A278", Offset = "0xD8A278", VA = "0xD8A278", Slot = "12")]
		public override AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x60022C4")]
		[Address(RVA = "0xD8A2C0", Offset = "0xD8A2C0", VA = "0xD8A2C0", Slot = "67")]
		protected override AchievementUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200041E")]
	public class MessageWithApplicationVersion : Message<ApplicationVersion>
	{
		[Token(Token = "0x60022C5")]
		[Address(RVA = "0xD87B90", Offset = "0xD87B90", VA = "0xD87B90")]
		public MessageWithApplicationVersion(IntPtr c_message)
		{
		}

		[Token(Token = "0x60022C6")]
		[Address(RVA = "0xD8A40C", Offset = "0xD8A40C", VA = "0xD8A40C", Slot = "13")]
		public override ApplicationVersion GetApplicationVersion()
		{
			return null;
		}

		[Token(Token = "0x60022C7")]
		[Address(RVA = "0xD8A454", Offset = "0xD8A454", VA = "0xD8A454", Slot = "67")]
		protected override ApplicationVersion GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200041F")]
	public class MessageWithAssetDetails : Message<AssetDetails>
	{
		[Token(Token = "0x60022C8")]
		[Address(RVA = "0xD87BF4", Offset = "0xD87BF4", VA = "0xD87BF4")]
		public MessageWithAssetDetails(IntPtr c_message)
		{
		}

		[Token(Token = "0x60022C9")]
		[Address(RVA = "0xD8A5C0", Offset = "0xD8A5C0", VA = "0xD8A5C0", Slot = "14")]
		public override AssetDetails GetAssetDetails()
		{
			return null;
		}

		[Token(Token = "0x60022CA")]
		[Address(RVA = "0xD8A608", Offset = "0xD8A608", VA = "0xD8A608", Slot = "67")]
		protected override AssetDetails GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000420")]
	public class MessageWithAssetDetailsList : Message<AssetDetailsList>
	{
		[Token(Token = "0x60022CB")]
		[Address(RVA = "0xD87C58", Offset = "0xD87C58", VA = "0xD87C58")]
		public MessageWithAssetDetailsList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60022CC")]
		[Address(RVA = "0xD8A80C", Offset = "0xD8A80C", VA = "0xD8A80C", Slot = "15")]
		public override AssetDetailsList GetAssetDetailsList()
		{
			return null;
		}

		[Token(Token = "0x60022CD")]
		[Address(RVA = "0xD8A854", Offset = "0xD8A854", VA = "0xD8A854", Slot = "67")]
		protected override AssetDetailsList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000421")]
	public class MessageWithAssetFileDeleteResult : Message<AssetFileDeleteResult>
	{
		[Token(Token = "0x60022CE")]
		[Address(RVA = "0xD87CBC", Offset = "0xD87CBC", VA = "0xD87CBC")]
		public MessageWithAssetFileDeleteResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60022CF")]
		[Address(RVA = "0xD8AB04", Offset = "0xD8AB04", VA = "0xD8AB04", Slot = "16")]
		public override AssetFileDeleteResult GetAssetFileDeleteResult()
		{
			return null;
		}

		[Token(Token = "0x60022D0")]
		[Address(RVA = "0xD8AB4C", Offset = "0xD8AB4C", VA = "0xD8AB4C", Slot = "67")]
		protected override AssetFileDeleteResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000422")]
	public class MessageWithAssetFileDownloadCancelResult : Message<AssetFileDownloadCancelResult>
	{
		[Token(Token = "0x60022D1")]
		[Address(RVA = "0xD87D20", Offset = "0xD87D20", VA = "0xD87D20")]
		public MessageWithAssetFileDownloadCancelResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60022D2")]
		[Address(RVA = "0xD8ACB8", Offset = "0xD8ACB8", VA = "0xD8ACB8", Slot = "17")]
		public override AssetFileDownloadCancelResult GetAssetFileDownloadCancelResult()
		{
			return null;
		}

		[Token(Token = "0x60022D3")]
		[Address(RVA = "0xD8AD00", Offset = "0xD8AD00", VA = "0xD8AD00", Slot = "67")]
		protected override AssetFileDownloadCancelResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000423")]
	public class MessageWithAssetFileDownloadResult : Message<AssetFileDownloadResult>
	{
		[Token(Token = "0x60022D4")]
		[Address(RVA = "0xD87D84", Offset = "0xD87D84", VA = "0xD87D84")]
		public MessageWithAssetFileDownloadResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60022D5")]
		[Address(RVA = "0xD8AE6C", Offset = "0xD8AE6C", VA = "0xD8AE6C", Slot = "18")]
		public override AssetFileDownloadResult GetAssetFileDownloadResult()
		{
			return null;
		}

		[Token(Token = "0x60022D6")]
		[Address(RVA = "0xD8AEB4", Offset = "0xD8AEB4", VA = "0xD8AEB4", Slot = "67")]
		protected override AssetFileDownloadResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000424")]
	public class MessageWithAssetFileDownloadUpdate : Message<AssetFileDownloadUpdate>
	{
		[Token(Token = "0x60022D7")]
		[Address(RVA = "0xD87DE8", Offset = "0xD87DE8", VA = "0xD87DE8")]
		public MessageWithAssetFileDownloadUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x60022D8")]
		[Address(RVA = "0xD8B000", Offset = "0xD8B000", VA = "0xD8B000", Slot = "19")]
		public override AssetFileDownloadUpdate GetAssetFileDownloadUpdate()
		{
			return null;
		}

		[Token(Token = "0x60022D9")]
		[Address(RVA = "0xD8B048", Offset = "0xD8B048", VA = "0xD8B048", Slot = "67")]
		protected override AssetFileDownloadUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000425")]
	public class MessageWithCalApplicationFinalized : Message<CalApplicationFinalized>
	{
		[Token(Token = "0x60022DA")]
		[Address(RVA = "0xD87E4C", Offset = "0xD87E4C", VA = "0xD87E4C")]
		public MessageWithCalApplicationFinalized(IntPtr c_message)
		{
		}

		[Token(Token = "0x60022DB")]
		[Address(RVA = "0xD8B1C4", Offset = "0xD8B1C4", VA = "0xD8B1C4", Slot = "20")]
		public override CalApplicationFinalized GetCalApplicationFinalized()
		{
			return null;
		}

		[Token(Token = "0x60022DC")]
		[Address(RVA = "0xD8B20C", Offset = "0xD8B20C", VA = "0xD8B20C", Slot = "67")]
		protected override CalApplicationFinalized GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000426")]
	public class MessageWithCalApplicationProposed : Message<CalApplicationProposed>
	{
		[Token(Token = "0x60022DD")]
		[Address(RVA = "0xD87EB0", Offset = "0xD87EB0", VA = "0xD87EB0")]
		public MessageWithCalApplicationProposed(IntPtr c_message)
		{
		}

		[Token(Token = "0x60022DE")]
		[Address(RVA = "0xD8B368", Offset = "0xD8B368", VA = "0xD8B368", Slot = "21")]
		public override CalApplicationProposed GetCalApplicationProposed()
		{
			return null;
		}

		[Token(Token = "0x60022DF")]
		[Address(RVA = "0xD8B3B0", Offset = "0xD8B3B0", VA = "0xD8B3B0", Slot = "67")]
		protected override CalApplicationProposed GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000427")]
	public class MessageWithCalApplicationSuggestionList : Message<CalApplicationSuggestionList>
	{
		[Token(Token = "0x60022E0")]
		[Address(RVA = "0xD8B4EC", Offset = "0xD8B4EC", VA = "0xD8B4EC")]
		public MessageWithCalApplicationSuggestionList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60022E1")]
		[Address(RVA = "0xD8B550", Offset = "0xD8B550", VA = "0xD8B550", Slot = "22")]
		public override CalApplicationSuggestionList GetCalApplicationSuggestionList()
		{
			return null;
		}

		[Token(Token = "0x60022E2")]
		[Address(RVA = "0xD8B598", Offset = "0xD8B598", VA = "0xD8B598", Slot = "67")]
		protected override CalApplicationSuggestionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000428")]
	public class MessageWithCloudStorageConflictMetadata : Message<CloudStorageConflictMetadata>
	{
		[Token(Token = "0x60022E3")]
		[Address(RVA = "0xD87F14", Offset = "0xD87F14", VA = "0xD87F14")]
		public MessageWithCloudStorageConflictMetadata(IntPtr c_message)
		{
		}

		[Token(Token = "0x60022E4")]
		[Address(RVA = "0xD8B848", Offset = "0xD8B848", VA = "0xD8B848", Slot = "23")]
		public override CloudStorageConflictMetadata GetCloudStorageConflictMetadata()
		{
			return null;
		}

		[Token(Token = "0x60022E5")]
		[Address(RVA = "0xD8B890", Offset = "0xD8B890", VA = "0xD8B890", Slot = "67")]
		protected override CloudStorageConflictMetadata GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000429")]
	public class MessageWithCloudStorageData : Message<CloudStorageData>
	{
		[Token(Token = "0x60022E6")]
		[Address(RVA = "0xD87F78", Offset = "0xD87F78", VA = "0xD87F78")]
		public MessageWithCloudStorageData(IntPtr c_message)
		{
		}

		[Token(Token = "0x60022E7")]
		[Address(RVA = "0xD8BA18", Offset = "0xD8BA18", VA = "0xD8BA18", Slot = "24")]
		public override CloudStorageData GetCloudStorageData()
		{
			return null;
		}

		[Token(Token = "0x60022E8")]
		[Address(RVA = "0xD8BA60", Offset = "0xD8BA60", VA = "0xD8BA60", Slot = "67")]
		protected override CloudStorageData GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200042A")]
	public class MessageWithCloudStorageMetadataUnderLocal : Message<CloudStorageMetadata>
	{
		[Token(Token = "0x60022E9")]
		[Address(RVA = "0xD87FDC", Offset = "0xD87FDC", VA = "0xD87FDC")]
		public MessageWithCloudStorageMetadataUnderLocal(IntPtr c_message)
		{
		}

		[Token(Token = "0x60022EA")]
		[Address(RVA = "0xD8BF00", Offset = "0xD8BF00", VA = "0xD8BF00", Slot = "25")]
		public override CloudStorageMetadata GetCloudStorageMetadata()
		{
			return null;
		}

		[Token(Token = "0x60022EB")]
		[Address(RVA = "0xD8BF48", Offset = "0xD8BF48", VA = "0xD8BF48", Slot = "67")]
		protected override CloudStorageMetadata GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200042B")]
	public class MessageWithCloudStorageMetadataList : Message<CloudStorageMetadataList>
	{
		[Token(Token = "0x60022EC")]
		[Address(RVA = "0xD88040", Offset = "0xD88040", VA = "0xD88040")]
		public MessageWithCloudStorageMetadataList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60022ED")]
		[Address(RVA = "0xD8BBCC", Offset = "0xD8BBCC", VA = "0xD8BBCC", Slot = "26")]
		public override CloudStorageMetadataList GetCloudStorageMetadataList()
		{
			return null;
		}

		[Token(Token = "0x60022EE")]
		[Address(RVA = "0xD8BC14", Offset = "0xD8BC14", VA = "0xD8BC14", Slot = "67")]
		protected override CloudStorageMetadataList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200042C")]
	public class MessageWithCloudStorageUpdateResponse : Message<CloudStorageUpdateResponse>
	{
		[Token(Token = "0x60022EF")]
		[Address(RVA = "0xD880A4", Offset = "0xD880A4", VA = "0xD880A4")]
		public MessageWithCloudStorageUpdateResponse(IntPtr c_message)
		{
		}

		[Token(Token = "0x60022F0")]
		[Address(RVA = "0xD8C0F4", Offset = "0xD8C0F4", VA = "0xD8C0F4", Slot = "27")]
		public override CloudStorageUpdateResponse GetCloudStorageUpdateResponse()
		{
			return null;
		}

		[Token(Token = "0x60022F1")]
		[Address(RVA = "0xD8C13C", Offset = "0xD8C13C", VA = "0xD8C13C", Slot = "67")]
		protected override CloudStorageUpdateResponse GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200042D")]
	public class MessageWithInstalledApplicationList : Message<InstalledApplicationList>
	{
		[Token(Token = "0x60022F2")]
		[Address(RVA = "0xD8C530", Offset = "0xD8C530", VA = "0xD8C530")]
		public MessageWithInstalledApplicationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60022F3")]
		[Address(RVA = "0xD8C594", Offset = "0xD8C594", VA = "0xD8C594", Slot = "28")]
		public override InstalledApplicationList GetInstalledApplicationList()
		{
			return null;
		}

		[Token(Token = "0x60022F4")]
		[Address(RVA = "0xD8C5DC", Offset = "0xD8C5DC", VA = "0xD8C5DC", Slot = "67")]
		protected override InstalledApplicationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200042E")]
	public class MessageWithLaunchBlockFlowResult : Message<LaunchBlockFlowResult>
	{
		[Token(Token = "0x60022F5")]
		[Address(RVA = "0xD8C88C", Offset = "0xD8C88C", VA = "0xD8C88C")]
		public MessageWithLaunchBlockFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60022F6")]
		[Address(RVA = "0xD8C8F0", Offset = "0xD8C8F0", VA = "0xD8C8F0", Slot = "29")]
		public override LaunchBlockFlowResult GetLaunchBlockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x60022F7")]
		[Address(RVA = "0xD8C938", Offset = "0xD8C938", VA = "0xD8C938", Slot = "67")]
		protected override LaunchBlockFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200042F")]
	public class MessageWithLaunchFriendRequestFlowResult : Message<LaunchFriendRequestFlowResult>
	{
		[Token(Token = "0x60022F8")]
		[Address(RVA = "0xD88108", Offset = "0xD88108", VA = "0xD88108")]
		public MessageWithLaunchFriendRequestFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60022F9")]
		[Address(RVA = "0xD8CA84", Offset = "0xD8CA84", VA = "0xD8CA84", Slot = "30")]
		public override LaunchFriendRequestFlowResult GetLaunchFriendRequestFlowResult()
		{
			return null;
		}

		[Token(Token = "0x60022FA")]
		[Address(RVA = "0xD8CACC", Offset = "0xD8CACC", VA = "0xD8CACC", Slot = "67")]
		protected override LaunchFriendRequestFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000430")]
	public class MessageWithLaunchReportFlowResult : Message<LaunchReportFlowResult>
	{
		[Token(Token = "0x60022FB")]
		[Address(RVA = "0xD8CC18", Offset = "0xD8CC18", VA = "0xD8CC18")]
		public MessageWithLaunchReportFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60022FC")]
		[Address(RVA = "0xD8CC7C", Offset = "0xD8CC7C", VA = "0xD8CC7C", Slot = "31")]
		public override LaunchReportFlowResult GetLaunchReportFlowResult()
		{
			return null;
		}

		[Token(Token = "0x60022FD")]
		[Address(RVA = "0xD8CCC4", Offset = "0xD8CCC4", VA = "0xD8CCC4", Slot = "67")]
		protected override LaunchReportFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000431")]
	public class MessageWithLaunchUnblockFlowResult : Message<LaunchUnblockFlowResult>
	{
		[Token(Token = "0x60022FE")]
		[Address(RVA = "0xD8CE10", Offset = "0xD8CE10", VA = "0xD8CE10")]
		public MessageWithLaunchUnblockFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60022FF")]
		[Address(RVA = "0xD8CE74", Offset = "0xD8CE74", VA = "0xD8CE74", Slot = "32")]
		public override LaunchUnblockFlowResult GetLaunchUnblockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6002300")]
		[Address(RVA = "0xD8CEBC", Offset = "0xD8CEBC", VA = "0xD8CEBC", Slot = "67")]
		protected override LaunchUnblockFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000432")]
	public class MessageWithLeaderboardEntryList : Message<LeaderboardEntryList>
	{
		[Token(Token = "0x6002301")]
		[Address(RVA = "0xD8816C", Offset = "0xD8816C", VA = "0xD8816C")]
		public MessageWithLeaderboardEntryList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002302")]
		[Address(RVA = "0xD8D0DC", Offset = "0xD8D0DC", VA = "0xD8D0DC", Slot = "34")]
		public override LeaderboardEntryList GetLeaderboardEntryList()
		{
			return null;
		}

		[Token(Token = "0x6002303")]
		[Address(RVA = "0xD8D124", Offset = "0xD8D124", VA = "0xD8D124", Slot = "67")]
		protected override LeaderboardEntryList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000433")]
	public class MessageWithLinkedAccountList : Message<LinkedAccountList>
	{
		[Token(Token = "0x6002304")]
		[Address(RVA = "0xD8D430", Offset = "0xD8D430", VA = "0xD8D430")]
		public MessageWithLinkedAccountList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002305")]
		[Address(RVA = "0xD8D494", Offset = "0xD8D494", VA = "0xD8D494", Slot = "35")]
		public override LinkedAccountList GetLinkedAccountList()
		{
			return null;
		}

		[Token(Token = "0x6002306")]
		[Address(RVA = "0xD8D4DC", Offset = "0xD8D4DC", VA = "0xD8D4DC", Slot = "67")]
		protected override LinkedAccountList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000434")]
	public class MessageWithLivestreamingApplicationStatus : Message<LivestreamingApplicationStatus>
	{
		[Token(Token = "0x6002307")]
		[Address(RVA = "0xD8D78C", Offset = "0xD8D78C", VA = "0xD8D78C")]
		public MessageWithLivestreamingApplicationStatus(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002308")]
		[Address(RVA = "0xD8D7F0", Offset = "0xD8D7F0", VA = "0xD8D7F0", Slot = "36")]
		public override LivestreamingApplicationStatus GetLivestreamingApplicationStatus()
		{
			return null;
		}

		[Token(Token = "0x6002309")]
		[Address(RVA = "0xD8D838", Offset = "0xD8D838", VA = "0xD8D838", Slot = "67")]
		protected override LivestreamingApplicationStatus GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000435")]
	public class MessageWithLivestreamingStartResult : Message<LivestreamingStartResult>
	{
		[Token(Token = "0x600230A")]
		[Address(RVA = "0xD8D974", Offset = "0xD8D974", VA = "0xD8D974")]
		public MessageWithLivestreamingStartResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x600230B")]
		[Address(RVA = "0xD8D9D8", Offset = "0xD8D9D8", VA = "0xD8D9D8", Slot = "37")]
		public override LivestreamingStartResult GetLivestreamingStartResult()
		{
			return null;
		}

		[Token(Token = "0x600230C")]
		[Address(RVA = "0xD8DA20", Offset = "0xD8DA20", VA = "0xD8DA20", Slot = "67")]
		protected override LivestreamingStartResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000436")]
	public class MessageWithLivestreamingStatus : Message<LivestreamingStatus>
	{
		[Token(Token = "0x600230D")]
		[Address(RVA = "0xD88234", Offset = "0xD88234", VA = "0xD88234")]
		public MessageWithLivestreamingStatus(IntPtr c_message)
		{
		}

		[Token(Token = "0x600230E")]
		[Address(RVA = "0xD8DB5C", Offset = "0xD8DB5C", VA = "0xD8DB5C", Slot = "38")]
		public override LivestreamingStatus GetLivestreamingStatus()
		{
			return null;
		}

		[Token(Token = "0x600230F")]
		[Address(RVA = "0xD8DBA4", Offset = "0xD8DBA4", VA = "0xD8DBA4", Slot = "67")]
		protected override LivestreamingStatus GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000437")]
	public class MessageWithLivestreamingVideoStats : Message<LivestreamingVideoStats>
	{
		[Token(Token = "0x6002310")]
		[Address(RVA = "0xD8DD20", Offset = "0xD8DD20", VA = "0xD8DD20")]
		public MessageWithLivestreamingVideoStats(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002311")]
		[Address(RVA = "0xD8DD84", Offset = "0xD8DD84", VA = "0xD8DD84", Slot = "39")]
		public override LivestreamingVideoStats GetLivestreamingVideoStats()
		{
			return null;
		}

		[Token(Token = "0x6002312")]
		[Address(RVA = "0xD8DDCC", Offset = "0xD8DDCC", VA = "0xD8DDCC", Slot = "67")]
		protected override LivestreamingVideoStats GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000438")]
	public class MessageWithMatchmakingAdminSnapshot : Message<MatchmakingAdminSnapshot>
	{
		[Token(Token = "0x6002313")]
		[Address(RVA = "0xD88298", Offset = "0xD88298", VA = "0xD88298")]
		public MessageWithMatchmakingAdminSnapshot(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002314")]
		[Address(RVA = "0xD8DF28", Offset = "0xD8DF28", VA = "0xD8DF28", Slot = "40")]
		public override MatchmakingAdminSnapshot GetMatchmakingAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6002315")]
		[Address(RVA = "0xD8DF70", Offset = "0xD8DF70", VA = "0xD8DF70", Slot = "67")]
		protected override MatchmakingAdminSnapshot GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000439")]
	public class MessageWithMatchmakingEnqueueResult : Message<MatchmakingEnqueueResult>
	{
		[Token(Token = "0x6002316")]
		[Address(RVA = "0xD88360", Offset = "0xD88360", VA = "0xD88360")]
		public MessageWithMatchmakingEnqueueResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002317")]
		[Address(RVA = "0xD8E324", Offset = "0xD8E324", VA = "0xD8E324", Slot = "42")]
		public override MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x6002318")]
		[Address(RVA = "0xD8E36C", Offset = "0xD8E36C", VA = "0xD8E36C", Slot = "67")]
		protected override MatchmakingEnqueueResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200043A")]
	public class MessageWithMatchmakingEnqueueResultAndRoom : Message<MatchmakingEnqueueResultAndRoom>
	{
		[Token(Token = "0x6002319")]
		[Address(RVA = "0xD883C4", Offset = "0xD883C4", VA = "0xD883C4")]
		public MessageWithMatchmakingEnqueueResultAndRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x600231A")]
		[Address(RVA = "0xD8E570", Offset = "0xD8E570", VA = "0xD8E570", Slot = "43")]
		public override MatchmakingEnqueueResultAndRoom GetMatchmakingEnqueueResultAndRoom()
		{
			return null;
		}

		[Token(Token = "0x600231B")]
		[Address(RVA = "0xD8E5B8", Offset = "0xD8E5B8", VA = "0xD8E5B8", Slot = "67")]
		protected override MatchmakingEnqueueResultAndRoom GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200043B")]
	public class MessageWithMatchmakingStatsUnderMatchmakingStats : Message<MatchmakingStats>
	{
		[Token(Token = "0x600231C")]
		[Address(RVA = "0xD88428", Offset = "0xD88428", VA = "0xD88428")]
		public MessageWithMatchmakingStatsUnderMatchmakingStats(IntPtr c_message)
		{
		}

		[Token(Token = "0x600231D")]
		[Address(RVA = "0xD8EBCC", Offset = "0xD8EBCC", VA = "0xD8EBCC", Slot = "44")]
		public override MatchmakingStats GetMatchmakingStats()
		{
			return null;
		}

		[Token(Token = "0x600231E")]
		[Address(RVA = "0xD8EC14", Offset = "0xD8EC14", VA = "0xD8EC14", Slot = "67")]
		protected override MatchmakingStats GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200043C")]
	public class MessageWithOrgScopedID : Message<OrgScopedID>
	{
		[Token(Token = "0x600231F")]
		[Address(RVA = "0xD8848C", Offset = "0xD8848C", VA = "0xD8848C")]
		public MessageWithOrgScopedID(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002320")]
		[Address(RVA = "0xD8EEE8", Offset = "0xD8EEE8", VA = "0xD8EEE8", Slot = "45")]
		public override OrgScopedID GetOrgScopedID()
		{
			return null;
		}

		[Token(Token = "0x6002321")]
		[Address(RVA = "0xD8EF30", Offset = "0xD8EF30", VA = "0xD8EF30", Slot = "67")]
		protected override OrgScopedID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200043D")]
	public class MessageWithParty : Message<Party>
	{
		[Token(Token = "0x6002322")]
		[Address(RVA = "0xD8F06C", Offset = "0xD8F06C", VA = "0xD8F06C")]
		public MessageWithParty(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002323")]
		[Address(RVA = "0xD8F0D0", Offset = "0xD8F0D0", VA = "0xD8F0D0", Slot = "46")]
		public override Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x6002324")]
		[Address(RVA = "0xD8F118", Offset = "0xD8F118", VA = "0xD8F118", Slot = "67")]
		protected override Party GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200043E")]
	public class MessageWithPartyUnderCurrentParty : Message<Party>
	{
		[Token(Token = "0x6002325")]
		[Address(RVA = "0xD884F0", Offset = "0xD884F0", VA = "0xD884F0")]
		public MessageWithPartyUnderCurrentParty(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002326")]
		[Address(RVA = "0xD8F5F8", Offset = "0xD8F5F8", VA = "0xD8F5F8", Slot = "46")]
		public override Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x6002327")]
		[Address(RVA = "0xD8F640", Offset = "0xD8F640", VA = "0xD8F640", Slot = "67")]
		protected override Party GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200043F")]
	public class MessageWithPartyID : Message<PartyID>
	{
		[Token(Token = "0x6002328")]
		[Address(RVA = "0xD8F410", Offset = "0xD8F410", VA = "0xD8F410")]
		public MessageWithPartyID(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002329")]
		[Address(RVA = "0xD8F474", Offset = "0xD8F474", VA = "0xD8F474", Slot = "47")]
		public override PartyID GetPartyID()
		{
			return null;
		}

		[Token(Token = "0x600232A")]
		[Address(RVA = "0xD8F4BC", Offset = "0xD8F4BC", VA = "0xD8F4BC", Slot = "67")]
		protected override PartyID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000440")]
	public class MessageWithPartyUpdateNotification : Message<PartyUpdateNotification>
	{
		[Token(Token = "0x600232B")]
		[Address(RVA = "0xD88554", Offset = "0xD88554", VA = "0xD88554")]
		public MessageWithPartyUpdateNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x600232C")]
		[Address(RVA = "0xD8F6EC", Offset = "0xD8F6EC", VA = "0xD8F6EC", Slot = "48")]
		public override PartyUpdateNotification GetPartyUpdateNotification()
		{
			return null;
		}

		[Token(Token = "0x600232D")]
		[Address(RVA = "0xD8F734", Offset = "0xD8F734", VA = "0xD8F734", Slot = "67")]
		protected override PartyUpdateNotification GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000441")]
	public class MessageWithPidList : Message<PidList>
	{
		[Token(Token = "0x600232E")]
		[Address(RVA = "0xD885B8", Offset = "0xD885B8", VA = "0xD885B8")]
		public MessageWithPidList(IntPtr c_message)
		{
		}

		[Token(Token = "0x600232F")]
		[Address(RVA = "0xD8F8D0", Offset = "0xD8F8D0", VA = "0xD8F8D0", Slot = "49")]
		public override PidList GetPidList()
		{
			return null;
		}

		[Token(Token = "0x6002330")]
		[Address(RVA = "0xD8F918", Offset = "0xD8F918", VA = "0xD8F918", Slot = "67")]
		protected override PidList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000442")]
	public class MessageWithProductList : Message<ProductList>
	{
		[Token(Token = "0x6002331")]
		[Address(RVA = "0xD8861C", Offset = "0xD8861C", VA = "0xD8861C")]
		public MessageWithProductList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002332")]
		[Address(RVA = "0xD8FF2C", Offset = "0xD8FF2C", VA = "0xD8FF2C", Slot = "50")]
		public override ProductList GetProductList()
		{
			return null;
		}

		[Token(Token = "0x6002333")]
		[Address(RVA = "0xD8FF74", Offset = "0xD8FF74", VA = "0xD8FF74", Slot = "67")]
		protected override ProductList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000443")]
	public class MessageWithPurchase : Message<Purchase>
	{
		[Token(Token = "0x6002334")]
		[Address(RVA = "0xD88680", Offset = "0xD88680", VA = "0xD88680")]
		public MessageWithPurchase(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002335")]
		[Address(RVA = "0xD90260", Offset = "0xD90260", VA = "0xD90260", Slot = "51")]
		public override Purchase GetPurchase()
		{
			return null;
		}

		[Token(Token = "0x6002336")]
		[Address(RVA = "0xD902A8", Offset = "0xD902A8", VA = "0xD902A8", Slot = "67")]
		protected override Purchase GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000444")]
	public class MessageWithPurchaseList : Message<PurchaseList>
	{
		[Token(Token = "0x6002337")]
		[Address(RVA = "0xD886E4", Offset = "0xD886E4", VA = "0xD886E4")]
		public MessageWithPurchaseList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002338")]
		[Address(RVA = "0xD90430", Offset = "0xD90430", VA = "0xD90430", Slot = "52")]
		public override PurchaseList GetPurchaseList()
		{
			return null;
		}

		[Token(Token = "0x6002339")]
		[Address(RVA = "0xD90478", Offset = "0xD90478", VA = "0xD90478", Slot = "67")]
		protected override PurchaseList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000445")]
	public class MessageWithRoom : Message<Oculus.Platform.Models.Room>
	{
		[Token(Token = "0x600233A")]
		[Address(RVA = "0xD88748", Offset = "0xD88748", VA = "0xD88748")]
		public MessageWithRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x600233B")]
		[Address(RVA = "0xD90764", Offset = "0xD90764", VA = "0xD90764", Slot = "53")]
		public override Oculus.Platform.Models.Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x600233C")]
		[Address(RVA = "0xD907AC", Offset = "0xD907AC", VA = "0xD907AC", Slot = "67")]
		protected override Oculus.Platform.Models.Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000446")]
	public class MessageWithRoomUnderCurrentRoom : Message<Oculus.Platform.Models.Room>
	{
		[Token(Token = "0x600233D")]
		[Address(RVA = "0xD887AC", Offset = "0xD887AC", VA = "0xD887AC")]
		public MessageWithRoomUnderCurrentRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x600233E")]
		[Address(RVA = "0xD91084", Offset = "0xD91084", VA = "0xD91084", Slot = "53")]
		public override Oculus.Platform.Models.Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x600233F")]
		[Address(RVA = "0xD910CC", Offset = "0xD910CC", VA = "0xD910CC", Slot = "67")]
		protected override Oculus.Platform.Models.Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000447")]
	public class MessageWithRoomUnderViewerRoom : Message<Oculus.Platform.Models.Room>
	{
		[Token(Token = "0x6002340")]
		[Address(RVA = "0xD88810", Offset = "0xD88810", VA = "0xD88810")]
		public MessageWithRoomUnderViewerRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002341")]
		[Address(RVA = "0xD91178", Offset = "0xD91178", VA = "0xD91178", Slot = "53")]
		public override Oculus.Platform.Models.Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6002342")]
		[Address(RVA = "0xD911C0", Offset = "0xD911C0", VA = "0xD911C0", Slot = "67")]
		protected override Oculus.Platform.Models.Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000448")]
	public class MessageWithRoomList : Message<RoomList>
	{
		[Token(Token = "0x6002343")]
		[Address(RVA = "0xD88874", Offset = "0xD88874", VA = "0xD88874")]
		public MessageWithRoomList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002344")]
		[Address(RVA = "0xD90D50", Offset = "0xD90D50", VA = "0xD90D50", Slot = "56")]
		public override RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x6002345")]
		[Address(RVA = "0xD90D98", Offset = "0xD90D98", VA = "0xD90D98", Slot = "67")]
		protected override RoomList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000449")]
	public class MessageWithRoomInviteNotification : Message<RoomInviteNotification>
	{
		[Token(Token = "0x6002346")]
		[Address(RVA = "0xD888D8", Offset = "0xD888D8", VA = "0xD888D8")]
		public MessageWithRoomInviteNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002347")]
		[Address(RVA = "0xD90858", Offset = "0xD90858", VA = "0xD90858", Slot = "54")]
		public override RoomInviteNotification GetRoomInviteNotification()
		{
			return null;
		}

		[Token(Token = "0x6002348")]
		[Address(RVA = "0xD908A0", Offset = "0xD908A0", VA = "0xD908A0", Slot = "67")]
		protected override RoomInviteNotification GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200044A")]
	public class MessageWithRoomInviteNotificationList : Message<RoomInviteNotificationList>
	{
		[Token(Token = "0x6002349")]
		[Address(RVA = "0xD8893C", Offset = "0xD8893C", VA = "0xD8893C")]
		public MessageWithRoomInviteNotificationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x600234A")]
		[Address(RVA = "0xD90A1C", Offset = "0xD90A1C", VA = "0xD90A1C", Slot = "55")]
		public override RoomInviteNotificationList GetRoomInviteNotificationList()
		{
			return null;
		}

		[Token(Token = "0x600234B")]
		[Address(RVA = "0xD90A64", Offset = "0xD90A64", VA = "0xD90A64", Slot = "67")]
		protected override RoomInviteNotificationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200044B")]
	public class MessageWithSdkAccountList : Message<SdkAccountList>
	{
		[Token(Token = "0x600234C")]
		[Address(RVA = "0xD889A0", Offset = "0xD889A0", VA = "0xD889A0")]
		public MessageWithSdkAccountList(IntPtr c_message)
		{
		}

		[Token(Token = "0x600234D")]
		[Address(RVA = "0xD9126C", Offset = "0xD9126C", VA = "0xD9126C", Slot = "57")]
		public override SdkAccountList GetSdkAccountList()
		{
			return null;
		}

		[Token(Token = "0x600234E")]
		[Address(RVA = "0xD912B4", Offset = "0xD912B4", VA = "0xD912B4", Slot = "67")]
		protected override SdkAccountList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200044C")]
	public class MessageWithShareMediaResult : Message<ShareMediaResult>
	{
		[Token(Token = "0x600234F")]
		[Address(RVA = "0xD88A04", Offset = "0xD88A04", VA = "0xD88A04")]
		public MessageWithShareMediaResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002350")]
		[Address(RVA = "0xD91564", Offset = "0xD91564", VA = "0xD91564", Slot = "58")]
		public override ShareMediaResult GetShareMediaResult()
		{
			return null;
		}

		[Token(Token = "0x6002351")]
		[Address(RVA = "0xD915AC", Offset = "0xD915AC", VA = "0xD915AC", Slot = "67")]
		protected override ShareMediaResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200044D")]
	public class MessageWithString : Message<string>
	{
		[Token(Token = "0x6002352")]
		[Address(RVA = "0xD88A68", Offset = "0xD88A68", VA = "0xD88A68")]
		public MessageWithString(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002353")]
		[Address(RVA = "0xD916E8", Offset = "0xD916E8", VA = "0xD916E8", Slot = "59")]
		public override string GetString()
		{
			return null;
		}

		[Token(Token = "0x6002354")]
		[Address(RVA = "0xD91730", Offset = "0xD91730", VA = "0xD91730", Slot = "67")]
		protected override string GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200044E")]
	public class MessageWithSystemPermission : Message<SystemPermission>
	{
		[Token(Token = "0x6002355")]
		[Address(RVA = "0xD917AC", Offset = "0xD917AC", VA = "0xD917AC")]
		public MessageWithSystemPermission(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002356")]
		[Address(RVA = "0xD91810", Offset = "0xD91810", VA = "0xD91810", Slot = "60")]
		public override SystemPermission GetSystemPermission()
		{
			return null;
		}

		[Token(Token = "0x6002357")]
		[Address(RVA = "0xD91858", Offset = "0xD91858", VA = "0xD91858", Slot = "67")]
		protected override SystemPermission GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200044F")]
	public class MessageWithSystemVoipState : Message<SystemVoipState>
	{
		[Token(Token = "0x6002358")]
		[Address(RVA = "0xD88ACC", Offset = "0xD88ACC", VA = "0xD88ACC")]
		public MessageWithSystemVoipState(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002359")]
		[Address(RVA = "0xD919A4", Offset = "0xD919A4", VA = "0xD919A4", Slot = "61")]
		public override SystemVoipState GetSystemVoipState()
		{
			return null;
		}

		[Token(Token = "0x600235A")]
		[Address(RVA = "0xD919EC", Offset = "0xD919EC", VA = "0xD919EC", Slot = "67")]
		protected override SystemVoipState GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000450")]
	public class MessageWithUser : Message<Oculus.Platform.Models.User>
	{
		[Token(Token = "0x600235B")]
		[Address(RVA = "0xD88B30", Offset = "0xD88B30", VA = "0xD88B30")]
		public MessageWithUser(IntPtr c_message)
		{
		}

		[Token(Token = "0x600235C")]
		[Address(RVA = "0xD91B38", Offset = "0xD91B38", VA = "0xD91B38", Slot = "62")]
		public override Oculus.Platform.Models.User GetUser()
		{
			return null;
		}

		[Token(Token = "0x600235D")]
		[Address(RVA = "0xD91B80", Offset = "0xD91B80", VA = "0xD91B80", Slot = "67")]
		protected override Oculus.Platform.Models.User GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000451")]
	public class MessageWithUserAndRoomList : Message<UserAndRoomList>
	{
		[Token(Token = "0x600235E")]
		[Address(RVA = "0xD88B94", Offset = "0xD88B94", VA = "0xD88B94")]
		public MessageWithUserAndRoomList(IntPtr c_message)
		{
		}

		[Token(Token = "0x600235F")]
		[Address(RVA = "0xD91D2C", Offset = "0xD91D2C", VA = "0xD91D2C", Slot = "63")]
		public override UserAndRoomList GetUserAndRoomList()
		{
			return null;
		}

		[Token(Token = "0x6002360")]
		[Address(RVA = "0xD91D74", Offset = "0xD91D74", VA = "0xD91D74", Slot = "67")]
		protected override UserAndRoomList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000452")]
	public class MessageWithUserList : Message<UserList>
	{
		[Token(Token = "0x6002361")]
		[Address(RVA = "0xD88BF8", Offset = "0xD88BF8", VA = "0xD88BF8")]
		public MessageWithUserList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002362")]
		[Address(RVA = "0xD92060", Offset = "0xD92060", VA = "0xD92060", Slot = "64")]
		public override UserList GetUserList()
		{
			return null;
		}

		[Token(Token = "0x6002363")]
		[Address(RVA = "0xD920A8", Offset = "0xD920A8", VA = "0xD920A8", Slot = "67")]
		protected override UserList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000453")]
	public class MessageWithUserProof : Message<UserProof>
	{
		[Token(Token = "0x6002364")]
		[Address(RVA = "0xD88C5C", Offset = "0xD88C5C", VA = "0xD88C5C")]
		public MessageWithUserProof(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002365")]
		[Address(RVA = "0xD92394", Offset = "0xD92394", VA = "0xD92394", Slot = "65")]
		public override UserProof GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x6002366")]
		[Address(RVA = "0xD923DC", Offset = "0xD923DC", VA = "0xD923DC", Slot = "67")]
		protected override UserProof GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000454")]
	public class MessageWithUserReportID : Message<UserReportID>
	{
		[Token(Token = "0x6002367")]
		[Address(RVA = "0xD92518", Offset = "0xD92518", VA = "0xD92518")]
		public MessageWithUserReportID(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002368")]
		[Address(RVA = "0xD9257C", Offset = "0xD9257C", VA = "0xD9257C", Slot = "66")]
		public override UserReportID GetUserReportID()
		{
			return null;
		}

		[Token(Token = "0x6002369")]
		[Address(RVA = "0xD925C4", Offset = "0xD925C4", VA = "0xD925C4", Slot = "67")]
		protected override UserReportID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000455")]
	public class MessageWithNetworkingPeer : Message<Oculus.Platform.Models.NetworkingPeer>
	{
		[Token(Token = "0x600236A")]
		[Address(RVA = "0xD88CC0", Offset = "0xD88CC0", VA = "0xD88CC0")]
		public MessageWithNetworkingPeer(IntPtr c_message)
		{
		}

		[Token(Token = "0x600236B")]
		[Address(RVA = "0xD8EDA0", Offset = "0xD8EDA0", VA = "0xD8EDA0", Slot = "6")]
		public override Oculus.Platform.Models.NetworkingPeer GetNetworkingPeer()
		{
			return null;
		}

		[Token(Token = "0x600236C")]
		[Address(RVA = "0xD8EDE8", Offset = "0xD8EDE8", VA = "0xD8EDE8", Slot = "67")]
		protected override Oculus.Platform.Models.NetworkingPeer GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000456")]
	public class MessageWithPingResult : Message<PingResult>
	{
		[Token(Token = "0x600236D")]
		[Address(RVA = "0xD88D24", Offset = "0xD88D24", VA = "0xD88D24")]
		public MessageWithPingResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x600236E")]
		[Address(RVA = "0xD8FBC8", Offset = "0xD8FBC8", VA = "0xD8FBC8", Slot = "5")]
		public override PingResult GetPingResult()
		{
			return null;
		}

		[Token(Token = "0x600236F")]
		[Address(RVA = "0xD8FC10", Offset = "0xD8FC10", VA = "0xD8FC10", Slot = "67")]
		protected override PingResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000457")]
	public class MessageWithLeaderboardDidUpdate : Message<bool>
	{
		[Token(Token = "0x6002370")]
		[Address(RVA = "0xD881D0", Offset = "0xD881D0", VA = "0xD881D0")]
		public MessageWithLeaderboardDidUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002371")]
		[Address(RVA = "0xD8D008", Offset = "0xD8D008", VA = "0xD8D008", Slot = "33")]
		public override bool GetLeaderboardDidUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x6002372")]
		[Address(RVA = "0xD8D050", Offset = "0xD8D050", VA = "0xD8D050", Slot = "67")]
		protected override bool GetDataFromMessage(IntPtr c_message)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000458")]
	public class MessageWithMatchmakingNotification : Message<Oculus.Platform.Models.Room>
	{
		[Token(Token = "0x6002373")]
		[Address(RVA = "0xD88D88", Offset = "0xD88D88", VA = "0xD88D88")]
		public MessageWithMatchmakingNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002374")]
		[Address(RVA = "0xD8E74C", Offset = "0xD8E74C", VA = "0xD8E74C", Slot = "53")]
		public override Oculus.Platform.Models.Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6002375")]
		[Address(RVA = "0xD8E794", Offset = "0xD8E794", VA = "0xD8E794", Slot = "67")]
		protected override Oculus.Platform.Models.Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000459")]
	public class MessageWithMatchmakingBrowseResult : Message<MatchmakingBrowseResult>
	{
		[Token(Token = "0x6002376")]
		[Address(RVA = "0xD882FC", Offset = "0xD882FC", VA = "0xD882FC")]
		public MessageWithMatchmakingBrowseResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002377")]
		[Address(RVA = "0xD8E0E0", Offset = "0xD8E0E0", VA = "0xD8E0E0", Slot = "42")]
		public override MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x6002378")]
		[Address(RVA = "0xD8E138", Offset = "0xD8E138", VA = "0xD8E138", Slot = "56")]
		public override RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x6002379")]
		[Address(RVA = "0xD8E190", Offset = "0xD8E190", VA = "0xD8E190", Slot = "67")]
		protected override MatchmakingBrowseResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200045A")]
	public class MessageWithHttpTransferUpdate : Message<HttpTransferUpdate>
	{
		[Token(Token = "0x600237A")]
		[Address(RVA = "0xD88DEC", Offset = "0xD88DEC", VA = "0xD88DEC")]
		public MessageWithHttpTransferUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x600237B")]
		[Address(RVA = "0xD8C2A8", Offset = "0xD8C2A8", VA = "0xD8C2A8", Slot = "7")]
		public override HttpTransferUpdate GetHttpTransferUpdate()
		{
			return null;
		}

		[Token(Token = "0x600237C")]
		[Address(RVA = "0xD8C2F0", Offset = "0xD8C2F0", VA = "0xD8C2F0", Slot = "67")]
		protected override HttpTransferUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200045B")]
	public class MessageWithPlatformInitialize : Message<PlatformInitialize>
	{
		[Token(Token = "0x600237D")]
		[Address(RVA = "0xD88E50", Offset = "0xD88E50", VA = "0xD88E50")]
		public MessageWithPlatformInitialize(IntPtr c_message)
		{
		}

		[Token(Token = "0x600237E")]
		[Address(RVA = "0xD8FDA8", Offset = "0xD8FDA8", VA = "0xD8FDA8", Slot = "8")]
		public override PlatformInitialize GetPlatformInitialize()
		{
			return null;
		}

		[Token(Token = "0x600237F")]
		[Address(RVA = "0xD8FDF0", Offset = "0xD8FDF0", VA = "0xD8FDF0", Slot = "67")]
		protected override PlatformInitialize GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200045C")]
	public sealed class Packet : IDisposable
	{
		[Token(Token = "0x4001DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private readonly ulong size;

		[Token(Token = "0x4001DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IntPtr packetHandle;

		[Token(Token = "0x17000373")]
		public ulong SenderID
		{
			[Token(Token = "0x6002382")]
			[Address(RVA = "0xD94F6C", Offset = "0xD94F6C", VA = "0xD94F6C")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000374")]
		public ulong Size
		{
			[Token(Token = "0x6002383")]
			[Address(RVA = "0xD94FEC", Offset = "0xD94FEC", VA = "0xD94FEC")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000375")]
		public SendPolicy Policy
		{
			[Token(Token = "0x6002384")]
			[Address(RVA = "0xD94FF4", Offset = "0xD94FF4", VA = "0xD94FF4")]
			get
			{
				return default(SendPolicy);
			}
		}

		[Token(Token = "0x6002380")]
		[Address(RVA = "0xD93BBC", Offset = "0xD93BBC", VA = "0xD93BBC")]
		public Packet(IntPtr packetHandle)
		{
		}

		[Token(Token = "0x6002381")]
		[Address(RVA = "0xD94DE4", Offset = "0xD94DE4", VA = "0xD94DE4")]
		public ulong ReadBytes(byte[] destination)
		{
			return default(ulong);
		}

		[Token(Token = "0x6002385")]
		[Address(RVA = "0xD95074", Offset = "0xD95074", VA = "0xD95074", Slot = "1")]
		~Packet()
		{
		}

		[Token(Token = "0x6002386")]
		[Address(RVA = "0xD950D4", Offset = "0xD950D4", VA = "0xD950D4", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x200045D")]
	public enum PartyUpdateAction
	{
		[Token(Token = "0x4001DB4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A338C", Offset = "0x3A338C")]
		Unknown,
		[Token(Token = "0x4001DB5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A33C0", Offset = "0x3A33C0")]
		Join,
		[Token(Token = "0x4001DB6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A33F4", Offset = "0x3A33F4")]
		Leave,
		[Token(Token = "0x4001DB7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3428", Offset = "0x3A3428")]
		Invite,
		[Token(Token = "0x4001DB8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A345C", Offset = "0x3A345C")]
		Uninvite
	}
	[Token(Token = "0x200045E")]
	public enum PeerConnectionState
	{
		[Token(Token = "0x4001DBA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3490", Offset = "0x3A3490")]
		Unknown,
		[Token(Token = "0x4001DBB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A34C4", Offset = "0x3A34C4")]
		Connected,
		[Token(Token = "0x4001DBC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A34F8", Offset = "0x3A34F8")]
		Timeout,
		[Token(Token = "0x4001DBD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A352C", Offset = "0x3A352C")]
		Closed
	}
	[Token(Token = "0x200045F")]
	public enum PermissionGrantStatus
	{
		[Token(Token = "0x4001DBF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3560", Offset = "0x3A3560")]
		Unknown,
		[Token(Token = "0x4001DC0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3594", Offset = "0x3A3594")]
		Granted,
		[Token(Token = "0x4001DC1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A35C8", Offset = "0x3A35C8")]
		Denied,
		[Token(Token = "0x4001DC2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A35FC", Offset = "0x3A35FC")]
		Blocked
	}
	[Token(Token = "0x2000460")]
	public enum PermissionType
	{
		[Token(Token = "0x4001DC4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3630", Offset = "0x3A3630")]
		Unknown,
		[Token(Token = "0x4001DC5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3664", Offset = "0x3A3664")]
		Microphone,
		[Token(Token = "0x4001DC6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3698", Offset = "0x3A3698")]
		WriteExternalStorage
	}
	[Token(Token = "0x2000461")]
	public sealed class Core
	{
		[Token(Token = "0x4001DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool IsPlatformInitialized;

		[Token(Token = "0x4001DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool LogMessages;

		[Token(Token = "0x6002387")]
		[Address(RVA = "0xD80FE0", Offset = "0xD80FE0", VA = "0xD80FE0")]
		public static bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6002388")]
		[Address(RVA = "0xD81058", Offset = "0xD81058", VA = "0xD81058")]
		internal static void ForceInitialized()
		{
		}

		[Token(Token = "0x6002389")]
		[Address(RVA = "0xD810D4", Offset = "0xD810D4", VA = "0xD810D4")]
		private static string getAppID([Optional] string appId)
		{
			return null;
		}

		[Token(Token = "0x600238A")]
		[Address(RVA = "0xD81328", Offset = "0xD81328", VA = "0xD81328")]
		public static Request<PlatformInitialize> AsyncInitialize([Optional] string appId)
		{
			return null;
		}

		[Token(Token = "0x600238B")]
		[Address(RVA = "0xD81824", Offset = "0xD81824", VA = "0xD81824")]
		public static void Initialize([Optional] string appId)
		{
		}

		[Token(Token = "0x600238C")]
		[Address(RVA = "0xD812D8", Offset = "0xD812D8", VA = "0xD812D8")]
		private static string GetAppIDFromConfig()
		{
			return null;
		}

		[Token(Token = "0x600238D")]
		[Address(RVA = "0xD81BD4", Offset = "0xD81BD4", VA = "0xD81BD4")]
		public Core()
		{
		}
	}
	[Token(Token = "0x2000462")]
	public static class ApplicationLifecycle
	{
		[Token(Token = "0x600238F")]
		[Address(RVA = "0x7C4F30", Offset = "0x7C4F30", VA = "0x7C4F30")]
		public static LaunchDetails GetLaunchDetails()
		{
			return null;
		}

		[Token(Token = "0x6002390")]
		[Address(RVA = "0x7C5068", Offset = "0x7C5068", VA = "0x7C5068")]
		public static void SetLaunchIntentChangedNotificationCallback(Message<string>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000463")]
	public static class Rooms
	{
		[Token(Token = "0x6002391")]
		[Address(RVA = "0xD96EB8", Offset = "0xD96EB8", VA = "0xD96EB8")]
		public static Request<Oculus.Platform.Models.Room> UpdateDataStore(ulong roomID, Dictionary<string, string> data)
		{
			return null;
		}

		[Token(Token = "0x6002392")]
		[Address(RVA = "0xD971A4", Offset = "0xD971A4", VA = "0xD971A4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3ACDFC", Offset = "0x3ACDFC")]
		public static void SetRoomInviteNotificationCallback(Message<string>.Callback callback)
		{
		}

		[Token(Token = "0x6002393")]
		[Address(RVA = "0xD97238", Offset = "0xD97238", VA = "0xD97238")]
		public static Request<Oculus.Platform.Models.Room> CreateAndJoinPrivate(RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6002394")]
		[Address(RVA = "0xD973B0", Offset = "0xD973B0", VA = "0xD973B0")]
		public static Request<Oculus.Platform.Models.Room> CreateAndJoinPrivate2(RoomJoinPolicy joinPolicy, uint maxUsers, RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x6002395")]
		[Address(RVA = "0xD97568", Offset = "0xD97568", VA = "0xD97568")]
		public static Request<Oculus.Platform.Models.Room> Get(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6002396")]
		[Address(RVA = "0xD976D8", Offset = "0xD976D8", VA = "0xD976D8")]
		public static Request<Oculus.Platform.Models.Room> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x6002397")]
		[Address(RVA = "0xD97838", Offset = "0xD97838", VA = "0xD97838")]
		public static Request<Oculus.Platform.Models.Room> GetCurrentForUser(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6002398")]
		[Address(RVA = "0xD979A8", Offset = "0xD979A8", VA = "0xD979A8")]
		public static Request<UserList> GetInvitableUsers()
		{
			return null;
		}

		[Token(Token = "0x6002399")]
		[Address(RVA = "0xD97B08", Offset = "0xD97B08", VA = "0xD97B08")]
		public static Request<UserList> GetInvitableUsers2([Optional] RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x600239A")]
		[Address(RVA = "0xD97CB0", Offset = "0xD97CB0", VA = "0xD97CB0")]
		public static Request<RoomList> GetModeratedRooms()
		{
			return null;
		}

		[Token(Token = "0x600239B")]
		[Address(RVA = "0xD97E10", Offset = "0xD97E10", VA = "0xD97E10")]
		public static Request<Oculus.Platform.Models.Room> InviteUser(ulong roomID, string inviteToken)
		{
			return null;
		}

		[Token(Token = "0x600239C")]
		[Address(RVA = "0xD97F88", Offset = "0xD97F88", VA = "0xD97F88")]
		public static Request<Oculus.Platform.Models.Room> Join(ulong roomID, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x600239D")]
		[Address(RVA = "0xD98100", Offset = "0xD98100", VA = "0xD98100")]
		public static Request<Oculus.Platform.Models.Room> Join2(ulong roomID, RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x600239E")]
		[Address(RVA = "0xD982B8", Offset = "0xD982B8", VA = "0xD982B8")]
		public static Request<Oculus.Platform.Models.Room> KickUser(ulong roomID, ulong userID, int kickDurationSeconds)
		{
			return null;
		}

		[Token(Token = "0x600239F")]
		[Address(RVA = "0xD98444", Offset = "0xD98444", VA = "0xD98444")]
		public static Request LaunchInvitableUserFlow(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x60023A0")]
		[Address(RVA = "0xD98594", Offset = "0xD98594", VA = "0xD98594")]
		public static Request<Oculus.Platform.Models.Room> Leave(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x60023A1")]
		[Address(RVA = "0xD98704", Offset = "0xD98704", VA = "0xD98704")]
		public static Request<Oculus.Platform.Models.Room> SetDescription(ulong roomID, string description)
		{
			return null;
		}

		[Token(Token = "0x60023A2")]
		[Address(RVA = "0xD9887C", Offset = "0xD9887C", VA = "0xD9887C")]
		public static Request<Oculus.Platform.Models.Room> UpdateMembershipLockStatus(ulong roomID, RoomMembershipLockStatus membershipLockStatus)
		{
			return null;
		}

		[Token(Token = "0x60023A3")]
		[Address(RVA = "0xD989F4", Offset = "0xD989F4", VA = "0xD989F4")]
		public static Request UpdateOwner(ulong roomID, ulong userID)
		{
			return null;
		}

		[Token(Token = "0x60023A4")]
		[Address(RVA = "0xD98B60", Offset = "0xD98B60", VA = "0xD98B60")]
		public static Request<Oculus.Platform.Models.Room> UpdatePrivateRoomJoinPolicy(ulong roomID, RoomJoinPolicy newJoinPolicy)
		{
			return null;
		}

		[Token(Token = "0x60023A5")]
		[Address(RVA = "0xD971A8", Offset = "0xD971A8", VA = "0xD971A8")]
		public static void SetRoomInviteAcceptedNotificationCallback(Message<string>.Callback callback)
		{
		}

		[Token(Token = "0x60023A6")]
		[Address(RVA = "0xD98CD8", Offset = "0xD98CD8", VA = "0xD98CD8")]
		public static void SetRoomInviteReceivedNotificationCallback(Message<RoomInviteNotification>.Callback callback)
		{
		}

		[Token(Token = "0x60023A7")]
		[Address(RVA = "0xD98D68", Offset = "0xD98D68", VA = "0xD98D68")]
		public static void SetUpdateNotificationCallback(Message<Oculus.Platform.Models.Room>.Callback callback)
		{
		}

		[Token(Token = "0x60023A8")]
		[Address(RVA = "0xD98DF8", Offset = "0xD98DF8", VA = "0xD98DF8")]
		public static Request<RoomList> GetNextRoomListPage(RoomList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000464")]
	public static class Matchmaking
	{
		[Token(Token = "0x20008C0")]
		public class CustomQuery
		{
			[Token(Token = "0x2000922")]
			public struct Criterion
			{
				[Token(Token = "0x4002C09")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public string key;

				[Token(Token = "0x4002C0A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
				public MatchmakingCriterionImportance importance;

				[Token(Token = "0x4002C0B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public Dictionary<string, object> parameters;

				[Token(Token = "0x6003876")]
				[Address(RVA = "0x46B3BC", Offset = "0x46B3BC", VA = "0x46B3BC")]
				public Criterion(string key_, MatchmakingCriterionImportance importance_)
				{
				}
			}

			[Token(Token = "0x4002A60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Dictionary<string, object> data;

			[Token(Token = "0x4002A61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Criterion[] criteria;

			[Token(Token = "0x6003762")]
			[Address(RVA = "0xD83D6C", Offset = "0xD83D6C", VA = "0xD83D6C")]
			public IntPtr ToUnmanaged()
			{
				return default(IntPtr);
			}

			[Token(Token = "0x6003763")]
			[Address(RVA = "0xD8584C", Offset = "0xD8584C", VA = "0xD8584C")]
			public CustomQuery()
			{
			}
		}

		[Token(Token = "0x60023A9")]
		[Address(RVA = "0xD83798", Offset = "0xD83798", VA = "0xD83798")]
		public static Request ReportResultsInsecure(ulong roomID, Dictionary<string, int> data)
		{
			return null;
		}

		[Token(Token = "0x60023AA")]
		[Address(RVA = "0xD83A68", Offset = "0xD83A68", VA = "0xD83A68")]
		public static Request<MatchmakingStats> GetStats(string pool, uint maxLevel, MatchmakingStatApproach approach = MatchmakingStatApproach.Trailing)
		{
			return null;
		}

		[Token(Token = "0x60023AB")]
		[Address(RVA = "0xD83BE0", Offset = "0xD83BE0", VA = "0xD83BE0")]
		public static Request<MatchmakingBrowseResult> Browse(string pool, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x60023AC")]
		[Address(RVA = "0xD84204", Offset = "0xD84204", VA = "0xD84204")]
		public static Request<MatchmakingBrowseResult> Browse2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x60023AD")]
		[Address(RVA = "0xD84404", Offset = "0xD84404", VA = "0xD84404")]
		public static Request Cancel(string pool, string requestHash)
		{
			return null;
		}

		[Token(Token = "0x60023AE")]
		[Address(RVA = "0xD84554", Offset = "0xD84554", VA = "0xD84554")]
		public static Request Cancel()
		{
			return null;
		}

		[Token(Token = "0x60023AF")]
		[Address(RVA = "0xD84694", Offset = "0xD84694", VA = "0xD84694")]
		public static Request<MatchmakingEnqueueResultAndRoom> CreateAndEnqueueRoom(string pool, uint maxUsers, bool subscribeToUpdates = false, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x60023B0")]
		[Address(RVA = "0xD84834", Offset = "0xD84834", VA = "0xD84834")]
		public static Request<MatchmakingEnqueueResultAndRoom> CreateAndEnqueueRoom2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x60023B1")]
		[Address(RVA = "0xD849E4", Offset = "0xD849E4", VA = "0xD849E4")]
		public static Request<Oculus.Platform.Models.Room> CreateRoom(string pool, uint maxUsers, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x60023B2")]
		[Address(RVA = "0xD84B5C", Offset = "0xD84B5C", VA = "0xD84B5C")]
		public static Request<Oculus.Platform.Models.Room> CreateRoom2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x60023B3")]
		[Address(RVA = "0xD84D0C", Offset = "0xD84D0C", VA = "0xD84D0C")]
		public static Request<MatchmakingEnqueueResult> Enqueue(string pool, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x60023B4")]
		[Address(RVA = "0xD84E98", Offset = "0xD84E98", VA = "0xD84E98")]
		public static Request<MatchmakingEnqueueResult> Enqueue2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x60023B5")]
		[Address(RVA = "0xD85048", Offset = "0xD85048", VA = "0xD85048")]
		public static Request<MatchmakingEnqueueResult> EnqueueRoom(ulong roomID, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x60023B6")]
		[Address(RVA = "0xD851DC", Offset = "0xD851DC", VA = "0xD851DC")]
		public static Request<MatchmakingEnqueueResult> EnqueueRoom2(ulong roomID, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x60023B7")]
		[Address(RVA = "0xD85394", Offset = "0xD85394", VA = "0xD85394")]
		public static Request<MatchmakingAdminSnapshot> GetAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x60023B8")]
		[Address(RVA = "0xD854F4", Offset = "0xD854F4", VA = "0xD854F4")]
		public static Request<Oculus.Platform.Models.Room> JoinRoom(ulong roomID, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x60023B9")]
		[Address(RVA = "0xD8566C", Offset = "0xD8566C", VA = "0xD8566C")]
		public static Request StartMatch(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x60023BA")]
		[Address(RVA = "0xD857BC", Offset = "0xD857BC", VA = "0xD857BC")]
		public static void SetMatchFoundNotificationCallback(Message<Oculus.Platform.Models.Room>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000465")]
	public static class Net
	{
		[Token(Token = "0x60023BB")]
		[Address(RVA = "0xD93A6C", Offset = "0xD93A6C", VA = "0xD93A6C")]
		public static Packet ReadPacket()
		{
			return null;
		}

		[Token(Token = "0x60023BC")]
		[Address(RVA = "0xD93C8C", Offset = "0xD93C8C", VA = "0xD93C8C")]
		public static bool SendPacket(ulong userID, byte[] bytes, SendPolicy policy)
		{
			return default(bool);
		}

		[Token(Token = "0x60023BD")]
		[Address(RVA = "0xD93E1C", Offset = "0xD93E1C", VA = "0xD93E1C")]
		public static void Connect(ulong userID)
		{
		}

		[Token(Token = "0x60023BE")]
		[Address(RVA = "0xD93F38", Offset = "0xD93F38", VA = "0xD93F38")]
		public static void Accept(ulong userID)
		{
		}

		[Token(Token = "0x60023BF")]
		[Address(RVA = "0xD94054", Offset = "0xD94054", VA = "0xD94054")]
		public static void Close(ulong userID)
		{
		}

		[Token(Token = "0x60023C0")]
		[Address(RVA = "0xD94170", Offset = "0xD94170", VA = "0xD94170")]
		public static bool IsConnected(ulong userID)
		{
			return default(bool);
		}

		[Token(Token = "0x60023C1")]
		[Address(RVA = "0xD94290", Offset = "0xD94290", VA = "0xD94290")]
		public static bool SendPacketToCurrentRoom(byte[] bytes, SendPolicy policy)
		{
			return default(bool);
		}

		[Token(Token = "0x60023C2")]
		[Address(RVA = "0xD94400", Offset = "0xD94400", VA = "0xD94400")]
		public static bool AcceptForCurrentRoom()
		{
			return default(bool);
		}

		[Token(Token = "0x60023C3")]
		[Address(RVA = "0xD94510", Offset = "0xD94510", VA = "0xD94510")]
		public static void CloseForCurrentRoom()
		{
		}

		[Token(Token = "0x60023C4")]
		[Address(RVA = "0xD9461C", Offset = "0xD9461C", VA = "0xD9461C")]
		public static Request<PingResult> Ping(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x60023C5")]
		[Address(RVA = "0xD9478C", Offset = "0xD9478C", VA = "0xD9478C")]
		public static void SetConnectionStateChangedCallback(Message<Oculus.Platform.Models.NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x60023C6")]
		[Address(RVA = "0xD9481C", Offset = "0xD9481C", VA = "0xD9481C")]
		public static void SetPeerConnectRequestCallback(Message<Oculus.Platform.Models.NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x60023C7")]
		[Address(RVA = "0xD948AC", Offset = "0xD948AC", VA = "0xD948AC")]
		public static void SetPingResultNotificationCallback(Message<PingResult>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000466")]
	public static class Leaderboards
	{
		[Token(Token = "0x60023C8")]
		[Address(RVA = "0xD82B48", Offset = "0xD82B48", VA = "0xD82B48")]
		public static Request<LeaderboardEntryList> GetNextEntries(LeaderboardEntryList list)
		{
			return null;
		}

		[Token(Token = "0x60023C9")]
		[Address(RVA = "0xD82CC8", Offset = "0xD82CC8", VA = "0xD82CC8")]
		public static Request<LeaderboardEntryList> GetPreviousEntries(LeaderboardEntryList list)
		{
			return null;
		}

		[Token(Token = "0x60023CA")]
		[Address(RVA = "0xD82E48", Offset = "0xD82E48", VA = "0xD82E48")]
		public static Request<LeaderboardEntryList> GetEntries(string leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt)
		{
			return null;
		}

		[Token(Token = "0x60023CB")]
		[Address(RVA = "0xD82FCC", Offset = "0xD82FCC", VA = "0xD82FCC")]
		public static Request<LeaderboardEntryList> GetEntriesAfterRank(string leaderboardName, int limit, ulong afterRank)
		{
			return null;
		}

		[Token(Token = "0x60023CC")]
		[Address(RVA = "0xD83150", Offset = "0xD83150", VA = "0xD83150")]
		public static Request<bool> WriteEntry(string leaderboardName, long score, [Optional] byte[] extraData, bool forceUpdate = false)
		{
			return null;
		}
	}
	[Token(Token = "0x2000467")]
	public static class Voip
	{
		[Token(Token = "0x60023CD")]
		[Address(RVA = "0xD9AA78", Offset = "0xD9AA78", VA = "0xD9AA78")]
		public static void Start(ulong userID)
		{
		}

		[Token(Token = "0x60023CE")]
		[Address(RVA = "0xD9AB94", Offset = "0xD9AB94", VA = "0xD9AB94")]
		public static void Accept(ulong userID)
		{
		}

		[Token(Token = "0x60023CF")]
		[Address(RVA = "0xD9ACB0", Offset = "0xD9ACB0", VA = "0xD9ACB0")]
		public static void Stop(ulong userID)
		{
		}

		[Token(Token = "0x60023D0")]
		[Address(RVA = "0xD9ADCC", Offset = "0xD9ADCC", VA = "0xD9ADCC")]
		public static void SetMicrophoneFilterCallback(CAPI.FilterCallback callback)
		{
		}

		[Token(Token = "0x60023D1")]
		[Address(RVA = "0xD9AF24", Offset = "0xD9AF24", VA = "0xD9AF24")]
		public static void SetMicrophoneMuted(VoipMuteState state)
		{
		}

		[Token(Token = "0x60023D2")]
		[Address(RVA = "0xD9B038", Offset = "0xD9B038", VA = "0xD9B038")]
		public static VoipMuteState GetSystemVoipMicrophoneMuted()
		{
			return default(VoipMuteState);
		}

		[Token(Token = "0x60023D3")]
		[Address(RVA = "0xD9B148", Offset = "0xD9B148", VA = "0xD9B148")]
		public static SystemVoipStatus GetSystemVoipStatus()
		{
			return default(SystemVoipStatus);
		}

		[Token(Token = "0x60023D4")]
		[Address(RVA = "0xD9B258", Offset = "0xD9B258", VA = "0xD9B258")]
		public static VoipDtxState GetIsConnectionUsingDtx(ulong peerID)
		{
			return default(VoipDtxState);
		}

		[Token(Token = "0x60023D5")]
		[Address(RVA = "0xD9B378", Offset = "0xD9B378", VA = "0xD9B378")]
		public static VoipBitrate GetLocalBitrate(ulong peerID)
		{
			return default(VoipBitrate);
		}

		[Token(Token = "0x60023D6")]
		[Address(RVA = "0xD9B498", Offset = "0xD9B498", VA = "0xD9B498")]
		public static VoipBitrate GetRemoteBitrate(ulong peerID)
		{
			return default(VoipBitrate);
		}

		[Token(Token = "0x60023D7")]
		[Address(RVA = "0xD9B5B8", Offset = "0xD9B5B8", VA = "0xD9B5B8")]
		public static void SetNewConnectionOptions(VoipOptions voipOptions)
		{
		}

		[Token(Token = "0x60023D8")]
		[Address(RVA = "0xD9B6DC", Offset = "0xD9B6DC", VA = "0xD9B6DC")]
		public static Request<SystemVoipState> SetSystemVoipSuppressed(bool suppressed)
		{
			return null;
		}

		[Token(Token = "0x60023D9")]
		[Address(RVA = "0xD9B844", Offset = "0xD9B844", VA = "0xD9B844")]
		public static void SetVoipConnectRequestCallback(Message<Oculus.Platform.Models.NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x60023DA")]
		[Address(RVA = "0xD9B8D4", Offset = "0xD9B8D4", VA = "0xD9B8D4")]
		public static void SetVoipStateChangeCallback(Message<Oculus.Platform.Models.NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x60023DB")]
		[Address(RVA = "0xD9B964", Offset = "0xD9B964", VA = "0xD9B964")]
		public static void SetSystemVoipStateNotificationCallback(Message<SystemVoipState>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000468")]
	public static class Achievements
	{
		[Token(Token = "0x60023DC")]
		[Address(RVA = "0x7C3168", Offset = "0x7C3168", VA = "0x7C3168")]
		public static Request<AchievementUpdate> AddCount(string name, ulong count)
		{
			return null;
		}

		[Token(Token = "0x60023DD")]
		[Address(RVA = "0x7C33BC", Offset = "0x7C33BC", VA = "0x7C33BC")]
		public static Request<AchievementUpdate> AddFields(string name, string fields)
		{
			return null;
		}

		[Token(Token = "0x60023DE")]
		[Address(RVA = "0x7C3614", Offset = "0x7C3614", VA = "0x7C3614")]
		public static Request<AchievementDefinitionList> GetAllDefinitions()
		{
			return null;
		}

		[Token(Token = "0x60023DF")]
		[Address(RVA = "0x7C3808", Offset = "0x7C3808", VA = "0x7C3808")]
		public static Request<AchievementProgressList> GetAllProgress()
		{
			return null;
		}

		[Token(Token = "0x60023E0")]
		[Address(RVA = "0x7C3A00", Offset = "0x7C3A00", VA = "0x7C3A00")]
		public static Request<AchievementDefinitionList> GetDefinitionsByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x60023E1")]
		[Address(RVA = "0x7C3CF8", Offset = "0x7C3CF8", VA = "0x7C3CF8")]
		public static Request<AchievementProgressList> GetProgressByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x60023E2")]
		[Address(RVA = "0x7C3FF0", Offset = "0x7C3FF0", VA = "0x7C3FF0")]
		public static Request<AchievementUpdate> Unlock(string name)
		{
			return null;
		}

		[Token(Token = "0x60023E3")]
		[Address(RVA = "0x7C421C", Offset = "0x7C421C", VA = "0x7C421C")]
		public static Request<AchievementDefinitionList> GetNextAchievementDefinitionListPage(AchievementDefinitionList list)
		{
			return null;
		}

		[Token(Token = "0x60023E4")]
		[Address(RVA = "0x7C44E4", Offset = "0x7C44E4", VA = "0x7C44E4")]
		public static Request<AchievementProgressList> GetNextAchievementProgressListPage(AchievementProgressList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000469")]
	public static class Application
	{
		[Token(Token = "0x60023E5")]
		[Address(RVA = "0x7C4A84", Offset = "0x7C4A84", VA = "0x7C4A84")]
		public static Request<ApplicationVersion> GetVersion()
		{
			return null;
		}

		[Token(Token = "0x60023E6")]
		[Address(RVA = "0x7C4C78", Offset = "0x7C4C78", VA = "0x7C4C78")]
		public static Request<string> LaunchOtherApp(ulong appID, [Optional] ApplicationOptions deeplink_options)
		{
			return null;
		}
	}
	[Token(Token = "0x200046A")]
	public static class AssetFile
	{
		[Token(Token = "0x60023E7")]
		[Address(RVA = "0x7C54C8", Offset = "0x7C54C8", VA = "0x7C54C8")]
		public static Request<AssetFileDeleteResult> Delete(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x60023E8")]
		[Address(RVA = "0x7C56E0", Offset = "0x7C56E0", VA = "0x7C56E0")]
		public static Request<AssetFileDeleteResult> DeleteById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x60023E9")]
		[Address(RVA = "0x7C58F8", Offset = "0x7C58F8", VA = "0x7C58F8")]
		public static Request<AssetFileDeleteResult> DeleteByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x60023EA")]
		[Address(RVA = "0x7C5B24", Offset = "0x7C5B24", VA = "0x7C5B24")]
		public static Request<AssetFileDownloadResult> Download(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x60023EB")]
		[Address(RVA = "0x7C5D38", Offset = "0x7C5D38", VA = "0x7C5D38")]
		public static Request<AssetFileDownloadResult> DownloadById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x60023EC")]
		[Address(RVA = "0x7C5F50", Offset = "0x7C5F50", VA = "0x7C5F50")]
		public static Request<AssetFileDownloadResult> DownloadByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x60023ED")]
		[Address(RVA = "0x7C617C", Offset = "0x7C617C", VA = "0x7C617C")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancel(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x60023EE")]
		[Address(RVA = "0x7C6390", Offset = "0x7C6390", VA = "0x7C6390")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancelById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x60023EF")]
		[Address(RVA = "0x7C65A8", Offset = "0x7C65A8", VA = "0x7C65A8")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancelByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x60023F0")]
		[Address(RVA = "0x7C67D4", Offset = "0x7C67D4", VA = "0x7C67D4")]
		public static Request<AssetDetailsList> GetList()
		{
			return null;
		}

		[Token(Token = "0x60023F1")]
		[Address(RVA = "0x7C69C8", Offset = "0x7C69C8", VA = "0x7C69C8")]
		public static Request<AssetDetails> Status(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x60023F2")]
		[Address(RVA = "0x7C6BE0", Offset = "0x7C6BE0", VA = "0x7C6BE0")]
		public static Request<AssetDetails> StatusById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x60023F3")]
		[Address(RVA = "0x7C6DF8", Offset = "0x7C6DF8", VA = "0x7C6DF8")]
		public static Request<AssetDetails> StatusByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x60023F4")]
		[Address(RVA = "0x7C7024", Offset = "0x7C7024", VA = "0x7C7024")]
		public static void SetDownloadUpdateNotificationCallback(Message<AssetFileDownloadUpdate>.Callback callback)
		{
		}
	}
	[Token(Token = "0x200046B")]
	public static class Avatar
	{
	}
	[Token(Token = "0x200046C")]
	public static class Cal
	{
	}
	[Token(Token = "0x200046D")]
	public static class CloudStorage
	{
		[Token(Token = "0x60023F5")]
		[Address(RVA = "0xD7FF68", Offset = "0xD7FF68", VA = "0xD7FF68")]
		public static Request<CloudStorageUpdateResponse> Delete(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x60023F6")]
		[Address(RVA = "0xD800D8", Offset = "0xD800D8", VA = "0xD800D8")]
		public static Request<CloudStorageData> Load(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x60023F7")]
		[Address(RVA = "0xD80248", Offset = "0xD80248", VA = "0xD80248")]
		public static Request<CloudStorageMetadataList> LoadBucketMetadata(string bucket)
		{
			return null;
		}

		[Token(Token = "0x60023F8")]
		[Address(RVA = "0xD803B0", Offset = "0xD803B0", VA = "0xD803B0")]
		public static Request<CloudStorageConflictMetadata> LoadConflictMetadata(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x60023F9")]
		[Address(RVA = "0xD80520", Offset = "0xD80520", VA = "0xD80520")]
		public static Request<CloudStorageData> LoadHandle(string handle)
		{
			return null;
		}

		[Token(Token = "0x60023FA")]
		[Address(RVA = "0xD80688", Offset = "0xD80688", VA = "0xD80688")]
		public static Request<CloudStorageMetadata> LoadMetadata(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x60023FB")]
		[Address(RVA = "0xD807F8", Offset = "0xD807F8", VA = "0xD807F8")]
		public static Request<CloudStorageUpdateResponse> ResolveKeepLocal(string bucket, string key, string remoteHandle)
		{
			return null;
		}

		[Token(Token = "0x60023FC")]
		[Address(RVA = "0xD80970", Offset = "0xD80970", VA = "0xD80970")]
		public static Request<CloudStorageUpdateResponse> ResolveKeepRemote(string bucket, string key, string remoteHandle)
		{
			return null;
		}

		[Token(Token = "0x60023FD")]
		[Address(RVA = "0xD80AE8", Offset = "0xD80AE8", VA = "0xD80AE8")]
		public static Request<CloudStorageUpdateResponse> Save(string bucket, string key, byte[] data, long counter, string extraData)
		{
			return null;
		}

		[Token(Token = "0x60023FE")]
		[Address(RVA = "0xD80C88", Offset = "0xD80C88", VA = "0xD80C88")]
		public static Request<CloudStorageMetadataList> GetNextCloudStorageMetadataListPage(CloudStorageMetadataList list)
		{
			return null;
		}
	}
	[Token(Token = "0x200046E")]
	public static class CloudStorage2
	{
		[Token(Token = "0x60023FF")]
		[Address(RVA = "0xD80E80", Offset = "0xD80E80", VA = "0xD80E80")]
		public static Request<string> GetUserDirectoryPath()
		{
			return null;
		}
	}
	[Token(Token = "0x200046F")]
	public static class Colocation
	{
	}
	[Token(Token = "0x2000470")]
	public static class Entitlements
	{
		[Token(Token = "0x6002400")]
		[Address(RVA = "0xD81BE0", Offset = "0xD81BE0", VA = "0xD81BE0")]
		public static Request IsUserEntitledToApplication()
		{
			return null;
		}
	}
	[Token(Token = "0x2000471")]
	public static class GraphAPI
	{
	}
	[Token(Token = "0x2000472")]
	public static class HTTP
	{
	}
	[Token(Token = "0x2000473")]
	public static class IAP
	{
		[Token(Token = "0x6002401")]
		[Address(RVA = "0xD81D48", Offset = "0xD81D48", VA = "0xD81D48")]
		public static Request ConsumePurchase(string sku)
		{
			return null;
		}

		[Token(Token = "0x6002402")]
		[Address(RVA = "0xD81E90", Offset = "0xD81E90", VA = "0xD81E90")]
		public static Request<ProductList> GetProductsBySKU(string[] skus)
		{
			return null;
		}

		[Token(Token = "0x6002403")]
		[Address(RVA = "0xD82008", Offset = "0xD82008", VA = "0xD82008")]
		public static Request<PurchaseList> GetViewerPurchases()
		{
			return null;
		}

		[Token(Token = "0x6002404")]
		[Address(RVA = "0xD82168", Offset = "0xD82168", VA = "0xD82168")]
		public static Request<PurchaseList> GetViewerPurchasesDurableCache()
		{
			return null;
		}

		[Token(Token = "0x6002405")]
		[Address(RVA = "0xD822C8", Offset = "0xD822C8", VA = "0xD822C8")]
		public static Request<Purchase> LaunchCheckoutFlow(string sku)
		{
			return null;
		}

		[Token(Token = "0x6002406")]
		[Address(RVA = "0xD82490", Offset = "0xD82490", VA = "0xD82490")]
		public static Request<ProductList> GetNextProductListPage(ProductList list)
		{
			return null;
		}

		[Token(Token = "0x6002407")]
		[Address(RVA = "0xD82688", Offset = "0xD82688", VA = "0xD82688")]
		public static Request<PurchaseList> GetNextPurchaseListPage(PurchaseList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000474")]
	public static class LanguagePack
	{
		[Token(Token = "0x6002408")]
		[Address(RVA = "0xD82880", Offset = "0xD82880", VA = "0xD82880")]
		public static Request<AssetDetails> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x6002409")]
		[Address(RVA = "0xD829E0", Offset = "0xD829E0", VA = "0xD829E0")]
		public static Request<AssetFileDownloadResult> SetCurrent(string tag)
		{
			return null;
		}
	}
	[Token(Token = "0x2000475")]
	public static class Livestreaming
	{
		[Token(Token = "0x600240A")]
		[Address(RVA = "0xD832E8", Offset = "0xD832E8", VA = "0xD832E8")]
		public static Request<LivestreamingStatus> GetStatus()
		{
			return null;
		}

		[Token(Token = "0x600240B")]
		[Address(RVA = "0xD83448", Offset = "0xD83448", VA = "0xD83448")]
		public static Request<LivestreamingStatus> PauseStream()
		{
			return null;
		}

		[Token(Token = "0x600240C")]
		[Address(RVA = "0xD835A8", Offset = "0xD835A8", VA = "0xD835A8")]
		public static Request<LivestreamingStatus> ResumeStream()
		{
			return null;
		}

		[Token(Token = "0x600240D")]
		[Address(RVA = "0xD83708", Offset = "0xD83708", VA = "0xD83708")]
		public static void SetStatusUpdateNotificationCallback(Message<LivestreamingStatus>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000476")]
	public static class Media
	{
		[Token(Token = "0x600240E")]
		[Address(RVA = "0xD86044", Offset = "0xD86044", VA = "0xD86044")]
		public static Request<ShareMediaResult> ShareToFacebook(string postTextSuggestion, string filePath, MediaContentType contentType)
		{
			return null;
		}
	}
	[Token(Token = "0x2000477")]
	public static class Notifications
	{
		[Token(Token = "0x600240F")]
		[Address(RVA = "0xD9493C", Offset = "0xD9493C", VA = "0xD9493C")]
		public static Request<RoomInviteNotificationList> GetRoomInviteNotifications()
		{
			return null;
		}

		[Token(Token = "0x6002410")]
		[Address(RVA = "0xD94A9C", Offset = "0xD94A9C", VA = "0xD94A9C")]
		public static Request MarkAsRead(ulong notificationID)
		{
			return null;
		}

		[Token(Token = "0x6002411")]
		[Address(RVA = "0xD94BEC", Offset = "0xD94BEC", VA = "0xD94BEC")]
		public static Request<RoomInviteNotificationList> GetNextRoomInviteNotificationListPage(RoomInviteNotificationList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000478")]
	public static class Parties
	{
		[Token(Token = "0x6002412")]
		[Address(RVA = "0xD9518C", Offset = "0xD9518C", VA = "0xD9518C")]
		public static Request<Party> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x6002413")]
		[Address(RVA = "0xD952EC", Offset = "0xD952EC", VA = "0xD952EC")]
		public static void SetPartyUpdateNotificationCallback(Message<PartyUpdateNotification>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000479")]
	public static class RichPresence
	{
		[Token(Token = "0x6002414")]
		[Address(RVA = "0xD95DCC", Offset = "0xD95DCC", VA = "0xD95DCC")]
		public static Request Clear()
		{
			return null;
		}

		[Token(Token = "0x6002415")]
		[Address(RVA = "0xD95F0C", Offset = "0xD95F0C", VA = "0xD95F0C")]
		public static Request Set(RichPresenceOptions richPresenceOptions)
		{
			return null;
		}
	}
	[Token(Token = "0x200047A")]
	public static class Users
	{
		[Token(Token = "0x6002416")]
		[Address(RVA = "0xD99700", Offset = "0xD99700", VA = "0xD99700")]
		public static Request<Oculus.Platform.Models.User> Get(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6002417")]
		[Address(RVA = "0xD99870", Offset = "0xD99870", VA = "0xD99870")]
		public static Request<string> GetAccessToken()
		{
			return null;
		}

		[Token(Token = "0x6002418")]
		[Address(RVA = "0xD999D0", Offset = "0xD999D0", VA = "0xD999D0")]
		public static Request<Oculus.Platform.Models.User> GetLoggedInUser()
		{
			return null;
		}

		[Token(Token = "0x6002419")]
		[Address(RVA = "0xD99B30", Offset = "0xD99B30", VA = "0xD99B30")]
		public static Request<UserList> GetLoggedInUserFriends()
		{
			return null;
		}

		[Token(Token = "0x600241A")]
		[Address(RVA = "0xD99C90", Offset = "0xD99C90", VA = "0xD99C90")]
		public static Request<UserAndRoomList> GetLoggedInUserFriendsAndRooms()
		{
			return null;
		}

		[Token(Token = "0x600241B")]
		[Address(RVA = "0xD99DF0", Offset = "0xD99DF0", VA = "0xD99DF0")]
		public static Request<UserAndRoomList> GetLoggedInUserRecentlyMetUsersAndRooms([Optional] UserOptions userOptions)
		{
			return null;
		}

		[Token(Token = "0x600241C")]
		[Address(RVA = "0xD99F98", Offset = "0xD99F98", VA = "0xD99F98")]
		public static Request<OrgScopedID> GetOrgScopedID(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x600241D")]
		[Address(RVA = "0xD9A108", Offset = "0xD9A108", VA = "0xD9A108")]
		public static Request<SdkAccountList> GetSdkAccounts()
		{
			return null;
		}

		[Token(Token = "0x600241E")]
		[Address(RVA = "0xD9A268", Offset = "0xD9A268", VA = "0xD9A268")]
		public static Request<UserProof> GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x600241F")]
		[Address(RVA = "0xD9A3C8", Offset = "0xD9A3C8", VA = "0xD9A3C8")]
		public static Request<LaunchFriendRequestFlowResult> LaunchFriendRequestFlow(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6002420")]
		[Address(RVA = "0xD9A538", Offset = "0xD9A538", VA = "0xD9A538")]
		public static Request LaunchProfile(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6002421")]
		[Address(RVA = "0xD9A688", Offset = "0xD9A688", VA = "0xD9A688")]
		public static Request<UserAndRoomList> GetNextUserAndRoomListPage(UserAndRoomList list)
		{
			return null;
		}

		[Token(Token = "0x6002422")]
		[Address(RVA = "0xD9A880", Offset = "0xD9A880", VA = "0xD9A880")]
		public static Request<UserList> GetNextUserListPage(UserList list)
		{
			return null;
		}
	}
	[Token(Token = "0x200047B")]
	public enum PlatformInitializeResult
	{
		[Token(Token = "0x4001DCA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A36CC", Offset = "0x3A36CC")]
		Success = 0,
		[Token(Token = "0x4001DCB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3700", Offset = "0x3A3700")]
		Uninitialized = -1,
		[Token(Token = "0x4001DCC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3734", Offset = "0x3A3734")]
		PreLoaded = -2,
		[Token(Token = "0x4001DCD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3768", Offset = "0x3A3768")]
		FileInvalid = -3,
		[Token(Token = "0x4001DCE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A379C", Offset = "0x3A379C")]
		SignatureInvalid = -4,
		[Token(Token = "0x4001DCF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A37D0", Offset = "0x3A37D0")]
		UnableToVerify = -5,
		[Token(Token = "0x4001DD0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3804", Offset = "0x3A3804")]
		VersionMismatch = -6,
		[Token(Token = "0x4001DD1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3838", Offset = "0x3A3838")]
		Unknown = -7,
		[Token(Token = "0x4001DD2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A386C", Offset = "0x3A386C")]
		InvalidCredentials = -8,
		[Token(Token = "0x4001DD3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A38A0", Offset = "0x3A38A0")]
		NotEntitled = -9
	}
	[Token(Token = "0x200047C")]
	public static class PlatformInternal
	{
		[Token(Token = "0x20008C1")]
		public enum MessageTypeInternal : uint
		{
			[Token(Token = "0x4002A63")]
			Application_ExecuteCoordinatedLaunch = 645772532u,
			[Token(Token = "0x4002A64")]
			Application_GetInstalledApplications = 1376744524u,
			[Token(Token = "0x4002A65")]
			Avatar_UpdateMetaData = 2077219214u,
			[Token(Token = "0x4002A66")]
			Cal_FinalizeApplication = 497667029u,
			[Token(Token = "0x4002A67")]
			Cal_GetSuggestedApplications = 1450209301u,
			[Token(Token = "0x4002A68")]
			Cal_ProposeApplication = 1317270237u,
			[Token(Token = "0x4002A69")]
			Colocation_GetCurrentMapUuid = 878018226u,
			[Token(Token = "0x4002A6A")]
			Colocation_RequestMap = 840263277u,
			[Token(Token = "0x4002A6B")]
			Colocation_ShareMap = 409847005u,
			[Token(Token = "0x4002A6C")]
			GraphAPI_Get = 822018158u,
			[Token(Token = "0x4002A6D")]
			GraphAPI_Post = 1990567876u,
			[Token(Token = "0x4002A6E")]
			HTTP_Get = 1874211363u,
			[Token(Token = "0x4002A6F")]
			HTTP_GetToFile = 1317133401u,
			[Token(Token = "0x4002A70")]
			HTTP_MultiPartPost = 1480774160u,
			[Token(Token = "0x4002A71")]
			HTTP_Post = 1798743375u,
			[Token(Token = "0x4002A72")]
			Livestreaming_IsAllowedForApplication = 191729014u,
			[Token(Token = "0x4002A73")]
			Livestreaming_StartPartyStream = 2066701532u,
			[Token(Token = "0x4002A74")]
			Livestreaming_StartStream = 1343932350u,
			[Token(Token = "0x4002A75")]
			Livestreaming_StopPartyStream = 661065560u,
			[Token(Token = "0x4002A76")]
			Livestreaming_StopStream = 1155796426u,
			[Token(Token = "0x4002A77")]
			Livestreaming_UpdateCommentsOverlayVisibility = 528318516u,
			[Token(Token = "0x4002A78")]
			Livestreaming_UpdateMicStatus = 475495815u,
			[Token(Token = "0x4002A79")]
			Party_Create = 450042703u,
			[Token(Token = "0x4002A7A")]
			Party_GatherInApplication = 1921499523u,
			[Token(Token = "0x4002A7B")]
			Party_Get = 1586058173u,
			[Token(Token = "0x4002A7C")]
			Party_GetCurrentForUser = 1489764138u,
			[Token(Token = "0x4002A7D")]
			Party_Invite = 901104867u,
			[Token(Token = "0x4002A7E")]
			Party_Join = 1744993395u,
			[Token(Token = "0x4002A7F")]
			Party_Leave = 848430801u,
			[Token(Token = "0x4002A80")]
			Room_CreateOrUpdateAndJoinNamed = 2089683601u,
			[Token(Token = "0x4002A81")]
			Room_GetNamedRooms = 125660812u,
			[Token(Token = "0x4002A82")]
			Room_GetSocialRooms = 1636310390u,
			[Token(Token = "0x4002A83")]
			SystemPermissions_GetStatus = 493497353u,
			[Token(Token = "0x4002A84")]
			SystemPermissions_LaunchDeeplink = 442139697u,
			[Token(Token = "0x4002A85")]
			User_CancelRecordingForReportFlow = 65065289u,
			[Token(Token = "0x4002A86")]
			User_GetLinkedAccounts = 1469314134u,
			[Token(Token = "0x4002A87")]
			User_LaunchBlockFlow = 1876305192u,
			[Token(Token = "0x4002A88")]
			User_LaunchReportFlow = 1449304081u,
			[Token(Token = "0x4002A89")]
			User_LaunchReportFlow2 = 2139314275u,
			[Token(Token = "0x4002A8A")]
			User_LaunchUnblockFlow = 346172055u,
			[Token(Token = "0x4002A8B")]
			User_NewEntitledTestUser = 292822787u,
			[Token(Token = "0x4002A8C")]
			User_NewTestUser = 921194380u,
			[Token(Token = "0x4002A8D")]
			User_NewTestUserFriends = 517416647u,
			[Token(Token = "0x4002A8E")]
			User_StartRecordingForReportFlow = 1819161571u,
			[Token(Token = "0x4002A8F")]
			User_StopRecordingAndLaunchReportFlow = 1618513035u,
			[Token(Token = "0x4002A90")]
			User_StopRecordingAndLaunchReportFlow2 = 432190251u,
			[Token(Token = "0x4002A91")]
			User_TestUserCreateDeviceManifest = 1701884605u
		}

		[Token(Token = "0x20008C2")]
		public static class HTTP
		{
			[Token(Token = "0x6003764")]
			[Address(RVA = "0xD95658", Offset = "0xD95658", VA = "0xD95658")]
			public static void SetHttpTransferUpdateCallback(Message<HttpTransferUpdate>.Callback callback)
			{
			}
		}

		[Token(Token = "0x20008C3")]
		public static class Users
		{
			[Token(Token = "0x6003765")]
			[Address(RVA = "0xD956E8", Offset = "0xD956E8", VA = "0xD956E8")]
			public static Request<LinkedAccountList> GetLinkedAccounts(ServiceProvider[] providers)
			{
				return null;
			}
		}

		[Token(Token = "0x6002423")]
		[Address(RVA = "0xD9537C", Offset = "0xD9537C", VA = "0xD9537C")]
		public static void CrashApplication()
		{
		}

		[Token(Token = "0x6002424")]
		[Address(RVA = "0xD88EB4", Offset = "0xD88EB4", VA = "0xD88EB4")]
		internal static Message ParseMessageHandle(IntPtr messageHandle, Message.MessageType messageType)
		{
			return null;
		}

		[Token(Token = "0x6002425")]
		[Address(RVA = "0xD953F0", Offset = "0xD953F0", VA = "0xD953F0")]
		public static Request<PlatformInitialize> InitializeStandaloneAsync(ulong appID, string accessToken)
		{
			return null;
		}
	}
	[Token(Token = "0x200047D")]
	public sealed class PlatformSettings : ScriptableObject
	{
		[Token(Token = "0x4001DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private string ovrAppID;

		[Token(Token = "0x4001DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string ovrMobileAppID;

		[Token(Token = "0x4001DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private bool ovrUseStandalonePlatform;

		[Token(Token = "0x4001DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		[SerializeField]
		private bool ovrEnableARM64Support;

		[Token(Token = "0x4001DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformSettings instance;

		[Token(Token = "0x17000376")]
		public static string AppID
		{
			[Token(Token = "0x6002426")]
			[Address(RVA = "0xD81BB0", Offset = "0xD81BB0", VA = "0xD81BB0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002427")]
			[Address(RVA = "0xD95BA0", Offset = "0xD95BA0", VA = "0xD95BA0")]
			set
			{
			}
		}

		[Token(Token = "0x17000377")]
		public static string MobileAppID
		{
			[Token(Token = "0x6002428")]
			[Address(RVA = "0xD81B8C", Offset = "0xD81B8C", VA = "0xD81B8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002429")]
			[Address(RVA = "0xD95BC8", Offset = "0xD95BC8", VA = "0xD95BC8")]
			set
			{
			}
		}

		[Token(Token = "0x17000378")]
		public static bool UseStandalonePlatform
		{
			[Token(Token = "0x600242A")]
			[Address(RVA = "0xD8164C", Offset = "0xD8164C", VA = "0xD8164C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600242B")]
			[Address(RVA = "0xD95BF0", Offset = "0xD95BF0", VA = "0xD95BF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000379")]
		public static bool EnableARM64Support
		{
			[Token(Token = "0x600242C")]
			[Address(RVA = "0xD95C18", Offset = "0xD95C18", VA = "0xD95C18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600242D")]
			[Address(RVA = "0xD95C3C", Offset = "0xD95C3C", VA = "0xD95C3C")]
			set
			{
			}
		}

		[Token(Token = "0x1700037A")]
		public static PlatformSettings Instance
		{
			[Token(Token = "0x600242E")]
			[Address(RVA = "0xD95A64", Offset = "0xD95A64", VA = "0xD95A64")]
			get
			{
				return null;
			}
			[Token(Token = "0x600242F")]
			[Address(RVA = "0xD95C64", Offset = "0xD95C64", VA = "0xD95C64")]
			set
			{
			}
		}

		[Token(Token = "0x6002430")]
		[Address(RVA = "0xD95CC0", Offset = "0xD95CC0", VA = "0xD95CC0")]
		public PlatformSettings()
		{
		}
	}
	[Token(Token = "0x200047E")]
	public sealed class Request<T> : Request
	{
		[Token(Token = "0x6002431")]
		public Request(ulong requestID)
		{
		}

		[Token(Token = "0x6002432")]
		public Request<T> OnComplete(Message<T>.Callback callback)
		{
			return null;
		}
	}
	[Token(Token = "0x200047F")]
	public class Request
	{
		[Token(Token = "0x4001DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A3914", Offset = "0x3A3914")]
		private ulong <RequestID>k__BackingField;

		[Token(Token = "0x1700037B")]
		public ulong RequestID
		{
			[Token(Token = "0x6002434")]
			[Address(RVA = "0xD95D30", Offset = "0xD95D30", VA = "0xD95D30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACE30", Offset = "0x3ACE30")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6002435")]
			[Address(RVA = "0xD95D38", Offset = "0xD95D38", VA = "0xD95D38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACE40", Offset = "0x3ACE40")]
			set
			{
			}
		}

		[Token(Token = "0x6002433")]
		[Address(RVA = "0xD81D20", Offset = "0xD81D20", VA = "0xD81D20")]
		public Request(ulong requestID)
		{
		}

		[Token(Token = "0x6002436")]
		[Address(RVA = "0xD95D48", Offset = "0xD95D48", VA = "0xD95D48")]
		public Request OnComplete(Message.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x6002437")]
		[Address(RVA = "0xD7FE40", Offset = "0xD7FE40", VA = "0xD7FE40")]
		public static void RunCallbacks(uint limit = 0u)
		{
		}
	}
	[Token(Token = "0x2000480")]
	public enum RichPresenceExtraContext
	{
		[Token(Token = "0x4001DDB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3924", Offset = "0x3A3924")]
		Unknown,
		[Token(Token = "0x4001DDC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3958", Offset = "0x3A3958")]
		None,
		[Token(Token = "0x4001DDD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A398C", Offset = "0x3A398C")]
		CurrentCapacity,
		[Token(Token = "0x4001DDE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A39C0", Offset = "0x3A39C0")]
		StartedAgo,
		[Token(Token = "0x4001DDF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A39F4", Offset = "0x3A39F4")]
		EndingIn,
		[Token(Token = "0x4001DE0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3A28", Offset = "0x3A3A28")]
		LookingForAMatch
	}
	[Token(Token = "0x2000481")]
	public class RichPresenceOptions
	{
		[Token(Token = "0x4001DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr Handle;

		[Token(Token = "0x6002438")]
		[Address(RVA = "0xD960E4", Offset = "0xD960E4", VA = "0xD960E4")]
		public RichPresenceOptions()
		{
		}

		[Token(Token = "0x6002439")]
		[Address(RVA = "0xD9616C", Offset = "0xD9616C", VA = "0xD9616C")]
		public void SetApiName(string value)
		{
		}

		[Token(Token = "0x600243A")]
		[Address(RVA = "0xD961F4", Offset = "0xD961F4", VA = "0xD961F4")]
		public void SetArgs(string key, string value)
		{
		}

		[Token(Token = "0x600243B")]
		[Address(RVA = "0xD96284", Offset = "0xD96284", VA = "0xD96284")]
		public void ClearArgs()
		{
		}

		[Token(Token = "0x600243C")]
		[Address(RVA = "0xD96304", Offset = "0xD96304", VA = "0xD96304")]
		public void SetCurrentCapacity(uint value)
		{
		}

		[Token(Token = "0x600243D")]
		[Address(RVA = "0xD9638C", Offset = "0xD9638C", VA = "0xD9638C")]
		public void SetDeeplinkMessageOverride(string value)
		{
		}

		[Token(Token = "0x600243E")]
		[Address(RVA = "0xD96414", Offset = "0xD96414", VA = "0xD96414")]
		public void SetEndTime(DateTime value)
		{
		}

		[Token(Token = "0x600243F")]
		[Address(RVA = "0xD964B0", Offset = "0xD964B0", VA = "0xD964B0")]
		public void SetExtraContext(RichPresenceExtraContext value)
		{
		}

		[Token(Token = "0x6002440")]
		[Address(RVA = "0xD96538", Offset = "0xD96538", VA = "0xD96538")]
		public void SetIsIdle(bool value)
		{
		}

		[Token(Token = "0x6002441")]
		[Address(RVA = "0xD965C0", Offset = "0xD965C0", VA = "0xD965C0")]
		public void SetIsJoinable(bool value)
		{
		}

		[Token(Token = "0x6002442")]
		[Address(RVA = "0xD96648", Offset = "0xD96648", VA = "0xD96648")]
		public void SetJoinableId(string value)
		{
		}

		[Token(Token = "0x6002443")]
		[Address(RVA = "0xD966D0", Offset = "0xD966D0", VA = "0xD966D0")]
		public void SetMaxCapacity(uint value)
		{
		}

		[Token(Token = "0x6002444")]
		[Address(RVA = "0xD96758", Offset = "0xD96758", VA = "0xD96758")]
		public void SetStartTime(DateTime value)
		{
		}

		[Token(Token = "0x6002445")]
		[Address(RVA = "0xD96094", Offset = "0xD96094", VA = "0xD96094")]
		public static explicit operator IntPtr(RichPresenceOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6002446")]
		[Address(RVA = "0xD967F4", Offset = "0xD967F4", VA = "0xD967F4", Slot = "1")]
		~RichPresenceOptions()
		{
		}
	}
	[Token(Token = "0x2000482")]
	public enum RoomJoinPolicy
	{
		[Token(Token = "0x4001DE3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3A5C", Offset = "0x3A3A5C")]
		None,
		[Token(Token = "0x4001DE4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3A90", Offset = "0x3A3A90")]
		Everyone,
		[Token(Token = "0x4001DE5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3AC4", Offset = "0x3A3AC4")]
		FriendsOfMembers,
		[Token(Token = "0x4001DE6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3AF8", Offset = "0x3A3AF8")]
		FriendsOfOwner,
		[Token(Token = "0x4001DE7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3B2C", Offset = "0x3A3B2C")]
		InvitedUsers,
		[Token(Token = "0x4001DE8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3B60", Offset = "0x3A3B60")]
		Unknown
	}
	[Token(Token = "0x2000483")]
	public enum RoomJoinability
	{
		[Token(Token = "0x4001DEA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3B94", Offset = "0x3A3B94")]
		Unknown,
		[Token(Token = "0x4001DEB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3BC8", Offset = "0x3A3BC8")]
		AreIn,
		[Token(Token = "0x4001DEC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3BFC", Offset = "0x3A3BFC")]
		AreKicked,
		[Token(Token = "0x4001DED")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3C30", Offset = "0x3A3C30")]
		CanJoin,
		[Token(Token = "0x4001DEE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3C64", Offset = "0x3A3C64")]
		IsFull,
		[Token(Token = "0x4001DEF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3C98", Offset = "0x3A3C98")]
		NoViewer,
		[Token(Token = "0x4001DF0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3CCC", Offset = "0x3A3CCC")]
		PolicyPrevents
	}
	[Token(Token = "0x2000484")]
	public enum RoomMembershipLockStatus
	{
		[Token(Token = "0x4001DF2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3D00", Offset = "0x3A3D00")]
		Unknown,
		[Token(Token = "0x4001DF3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3D34", Offset = "0x3A3D34")]
		Lock,
		[Token(Token = "0x4001DF4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3D68", Offset = "0x3A3D68")]
		Unlock
	}
	[Token(Token = "0x2000485")]
	public class RoomOptions
	{
		[Token(Token = "0x4001DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr Handle;

		[Token(Token = "0x6002447")]
		[Address(RVA = "0xD968C0", Offset = "0xD968C0", VA = "0xD968C0")]
		public RoomOptions()
		{
		}

		[Token(Token = "0x6002448")]
		[Address(RVA = "0xD96948", Offset = "0xD96948", VA = "0xD96948")]
		public void SetDataStore(string key, string value)
		{
		}

		[Token(Token = "0x6002449")]
		[Address(RVA = "0xD969D8", Offset = "0xD969D8", VA = "0xD969D8")]
		public void ClearDataStore()
		{
		}

		[Token(Token = "0x600244A")]
		[Address(RVA = "0xD96A58", Offset = "0xD96A58", VA = "0xD96A58")]
		public void SetExcludeRecentlyMet(bool value)
		{
		}

		[Token(Token = "0x600244B")]
		[Address(RVA = "0xD96AE0", Offset = "0xD96AE0", VA = "0xD96AE0")]
		public void SetMaxUserResults(uint value)
		{
		}

		[Token(Token = "0x600244C")]
		[Address(RVA = "0xD96B68", Offset = "0xD96B68", VA = "0xD96B68")]
		public void SetOrdering(UserOrdering value)
		{
		}

		[Token(Token = "0x600244D")]
		[Address(RVA = "0xD96BF0", Offset = "0xD96BF0", VA = "0xD96BF0")]
		public void SetRecentlyMetTimeWindow(TimeWindow value)
		{
		}

		[Token(Token = "0x600244E")]
		[Address(RVA = "0xD96C78", Offset = "0xD96C78", VA = "0xD96C78")]
		public void SetRoomId(ulong value)
		{
		}

		[Token(Token = "0x600244F")]
		[Address(RVA = "0xD96D14", Offset = "0xD96D14", VA = "0xD96D14")]
		public void SetTurnOffUpdates(bool value)
		{
		}

		[Token(Token = "0x6002450")]
		[Address(RVA = "0xD96D9C", Offset = "0xD96D9C", VA = "0xD96D9C")]
		public static explicit operator IntPtr(RoomOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6002451")]
		[Address(RVA = "0xD96DEC", Offset = "0xD96DEC", VA = "0xD96DEC", Slot = "1")]
		~RoomOptions()
		{
		}
	}
	[Token(Token = "0x2000486")]
	public enum RoomType
	{
		[Token(Token = "0x4001DF7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3D9C", Offset = "0x3A3D9C")]
		Unknown,
		[Token(Token = "0x4001DF8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3DD0", Offset = "0x3A3DD0")]
		Matchmaking,
		[Token(Token = "0x4001DF9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3E04", Offset = "0x3A3E04")]
		Moderated,
		[Token(Token = "0x4001DFA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3E38", Offset = "0x3A3E38")]
		Private,
		[Token(Token = "0x4001DFB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3E6C", Offset = "0x3A3E6C")]
		Solo
	}
	[Token(Token = "0x2000487")]
	public enum SdkAccountType
	{
		[Token(Token = "0x4001DFD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3EA0", Offset = "0x3A3EA0")]
		Unknown,
		[Token(Token = "0x4001DFE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3ED4", Offset = "0x3A3ED4")]
		Oculus,
		[Token(Token = "0x4001DFF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3F08", Offset = "0x3A3F08")]
		FacebookGameroom
	}
	[Token(Token = "0x2000488")]
	public enum SendPolicy
	{
		[Token(Token = "0x4001E01")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3F3C", Offset = "0x3A3F3C")]
		Unreliable,
		[Token(Token = "0x4001E02")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3F70", Offset = "0x3A3F70")]
		Reliable,
		[Token(Token = "0x4001E03")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3FA4", Offset = "0x3A3FA4")]
		Unknown
	}
	[Token(Token = "0x2000489")]
	public enum ServiceProvider
	{
		[Token(Token = "0x4001E05")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A3FD8", Offset = "0x3A3FD8")]
		Unknown,
		[Token(Token = "0x4001E06")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A400C", Offset = "0x3A400C")]
		Dropbox,
		[Token(Token = "0x4001E07")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A4040", Offset = "0x3A4040")]
		Facebook,
		[Token(Token = "0x4001E08")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A4074", Offset = "0x3A4074")]
		Google,
		[Token(Token = "0x4001E09")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A40A8", Offset = "0x3A40A8")]
		Instagram,
		[Token(Token = "0x4001E0A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A40DC", Offset = "0x3A40DC")]
		RemoteMedia
	}
	[Token(Token = "0x200048A")]
	public enum ShareMediaStatus
	{
		[Token(Token = "0x4001E0C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A4110", Offset = "0x3A4110")]
		Unknown,
		[Token(Token = "0x4001E0D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A4144", Offset = "0x3A4144")]
		Shared,
		[Token(Token = "0x4001E0E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A4178", Offset = "0x3A4178")]
		Canceled
	}
	[Token(Token = "0x200048B")]
	public sealed class StandalonePlatform
	{
		[Token(Token = "0x20008C4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D838", Offset = "0x39D838")]
		public delegate void UnityLogDelegate(IntPtr tag, IntPtr msg);

		[Token(Token = "0x6002452")]
		[Address(RVA = "0xD81678", Offset = "0xD81678", VA = "0xD81678")]
		public Request<PlatformInitialize> InitializeInEditor()
		{
			return null;
		}

		[Token(Token = "0x6002453")]
		[Address(RVA = "0xD95568", Offset = "0xD95568", VA = "0xD95568")]
		public Request<PlatformInitialize> AsyncInitialize(ulong appID, string accessToken)
		{
			return null;
		}

		[Token(Token = "0x6002454")]
		[Address(RVA = "0xD81670", Offset = "0xD81670", VA = "0xD81670")]
		public StandalonePlatform()
		{
		}
	}
	[Token(Token = "0x200048C")]
	public sealed class StandalonePlatformSettings
	{
		[Token(Token = "0x1700037C")]
		public static string OculusPlatformTestUserEmail
		{
			[Token(Token = "0x6002455")]
			[Address(RVA = "0xD99388", Offset = "0xD99388", VA = "0xD99388")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002456")]
			[Address(RVA = "0xD993E0", Offset = "0xD993E0", VA = "0xD993E0")]
			set
			{
			}
		}

		[Token(Token = "0x1700037D")]
		public static string OculusPlatformTestUserPassword
		{
			[Token(Token = "0x6002457")]
			[Address(RVA = "0xD993E4", Offset = "0xD993E4", VA = "0xD993E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002458")]
			[Address(RVA = "0xD9943C", Offset = "0xD9943C", VA = "0xD9943C")]
			set
			{
			}
		}

		[Token(Token = "0x1700037E")]
		public static string OculusPlatformTestUserAccessToken
		{
			[Token(Token = "0x6002459")]
			[Address(RVA = "0xD99440", Offset = "0xD99440", VA = "0xD99440")]
			get
			{
				return null;
			}
			[Token(Token = "0x600245A")]
			[Address(RVA = "0xD99498", Offset = "0xD99498", VA = "0xD99498")]
			set
			{
			}
		}

		[Token(Token = "0x600245B")]
		[Address(RVA = "0xD9949C", Offset = "0xD9949C", VA = "0xD9949C")]
		public StandalonePlatformSettings()
		{
		}
	}
	[Token(Token = "0x200048D")]
	public enum SystemVoipStatus
	{
		[Token(Token = "0x4001E10")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A41AC", Offset = "0x3A41AC")]
		Unknown,
		[Token(Token = "0x4001E11")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A41E0", Offset = "0x3A41E0")]
		Unavailable,
		[Token(Token = "0x4001E12")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A4214", Offset = "0x3A4214")]
		Suppressed,
		[Token(Token = "0x4001E13")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A4248", Offset = "0x3A4248")]
		Active
	}
	[Token(Token = "0x200048E")]
	public enum TimeWindow
	{
		[Token(Token = "0x4001E15")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A427C", Offset = "0x3A427C")]
		Unknown,
		[Token(Token = "0x4001E16")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A42B0", Offset = "0x3A42B0")]
		OneHour,
		[Token(Token = "0x4001E17")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A42E4", Offset = "0x3A42E4")]
		OneDay,
		[Token(Token = "0x4001E18")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A4318", Offset = "0x3A4318")]
		OneWeek,
		[Token(Token = "0x4001E19")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A434C", Offset = "0x3A434C")]
		ThirtyDays,
		[Token(Token = "0x4001E1A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A4380", Offset = "0x3A4380")]
		NinetyDays
	}
	[Token(Token = "0x200048F")]
	public class UserOptions
	{
		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr Handle;

		[Token(Token = "0x600245C")]
		[Address(RVA = "0xD95904", Offset = "0xD95904", VA = "0xD95904")]
		public UserOptions()
		{
		}

		[Token(Token = "0x600245D")]
		[Address(RVA = "0xD994A4", Offset = "0xD994A4", VA = "0xD994A4")]
		public void SetMaxUsers(uint value)
		{
		}

		[Token(Token = "0x600245E")]
		[Address(RVA = "0xD9598C", Offset = "0xD9598C", VA = "0xD9598C")]
		public void AddServiceProvider(ServiceProvider value)
		{
		}

		[Token(Token = "0x600245F")]
		[Address(RVA = "0xD9952C", Offset = "0xD9952C", VA = "0xD9952C")]
		public void ClearServiceProviders()
		{
		}

		[Token(Token = "0x6002460")]
		[Address(RVA = "0xD995AC", Offset = "0xD995AC", VA = "0xD995AC")]
		public void SetTimeWindow(TimeWindow value)
		{
		}

		[Token(Token = "0x6002461")]
		[Address(RVA = "0xD95A14", Offset = "0xD95A14", VA = "0xD95A14")]
		public static explicit operator IntPtr(UserOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6002462")]
		[Address(RVA = "0xD99634", Offset = "0xD99634", VA = "0xD99634", Slot = "1")]
		~UserOptions()
		{
		}
	}
	[Token(Token = "0x2000490")]
	public enum UserOrdering
	{
		[Token(Token = "0x4001E1D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A43B4", Offset = "0x3A43B4")]
		Unknown,
		[Token(Token = "0x4001E1E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A43E8", Offset = "0x3A43E8")]
		None,
		[Token(Token = "0x4001E1F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A441C", Offset = "0x3A441C")]
		PresenceAlphabetical
	}
	[Token(Token = "0x2000491")]
	public enum UserPresenceStatus
	{
		[Token(Token = "0x4001E21")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A4450", Offset = "0x3A4450")]
		Unknown,
		[Token(Token = "0x4001E22")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A4484", Offset = "0x3A4484")]
		Online,
		[Token(Token = "0x4001E23")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A44B8", Offset = "0x3A44B8")]
		Offline
	}
	[Token(Token = "0x2000492")]
	public class VoipAudioSourceHiLevel : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20008C5")]
		public class FilterReadDelegate : UnityEngine.MonoBehaviour
		{
			[Token(Token = "0x4002A92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public VoipAudioSourceHiLevel parent;

			[Token(Token = "0x4002A93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private float[] scratchBuffer;

			[Token(Token = "0x600376A")]
			[Address(RVA = "0xD9C308", Offset = "0xD9C308", VA = "0xD9C308")]
			private void Awake()
			{
			}

			[Token(Token = "0x600376B")]
			[Address(RVA = "0xD9C3D8", Offset = "0xD9C3D8", VA = "0xD9C3D8")]
			private void OnAudioFilterRead(float[] data, int channels)
			{
			}

			[Token(Token = "0x600376C")]
			[Address(RVA = "0xD9CA34", Offset = "0xD9CA34", VA = "0xD9CA34")]
			public FilterReadDelegate()
			{
			}
		}

		[Token(Token = "0x4001E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private int initialPlaybackDelayMS;

		[Token(Token = "0x4001E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioSource audioSource;

		[Token(Token = "0x4001E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float peakAmplitude;

		[Token(Token = "0x4001E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected IVoipPCMSource pcmSource;

		[Token(Token = "0x4001E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int audioSystemPlaybackFrequency;

		[Token(Token = "0x4001E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static bool verboseLogging;

		[Token(Token = "0x1700037F")]
		public ulong senderID
		{
			[Token(Token = "0x6002463")]
			[Address(RVA = "0xD9B9F4", Offset = "0xD9B9F4", VA = "0xD9B9F4")]
			set
			{
			}
		}

		[Token(Token = "0x6002464")]
		[Address(RVA = "0xD9BADC", Offset = "0xD9BADC", VA = "0xD9BADC")]
		protected void Stop()
		{
		}

		[Token(Token = "0x6002465")]
		[Address(RVA = "0xD9BAE0", Offset = "0xD9BAE0", VA = "0xD9BAE0")]
		private VoipSampleRate SampleRateToEnum(int rate)
		{
			return default(VoipSampleRate);
		}

		[Token(Token = "0x6002466")]
		[Address(RVA = "0xD9BB14", Offset = "0xD9BB14", VA = "0xD9BB14")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6002467")]
		[Address(RVA = "0xD9BE78", Offset = "0xD9BE78", VA = "0xD9BE78")]
		private void Start()
		{
		}

		[Token(Token = "0x6002468")]
		[Address(RVA = "0xD9BEA0", Offset = "0xD9BEA0", VA = "0xD9BEA0", Slot = "4")]
		protected virtual void CreatePCMSource()
		{
		}

		[Token(Token = "0x6002469")]
		[Address(RVA = "0xD9BF08", Offset = "0xD9BF08", VA = "0xD9BF08")]
		protected static int MSToElements(int ms)
		{
			return default(int);
		}

		[Token(Token = "0x600246A")]
		[Address(RVA = "0xD9BF9C", Offset = "0xD9BF9C", VA = "0xD9BF9C")]
		private void Update()
		{
		}

		[Token(Token = "0x600246B")]
		[Address(RVA = "0xD9C2FC", Offset = "0xD9C2FC", VA = "0xD9C2FC")]
		public VoipAudioSourceHiLevel()
		{
		}
	}
	[Token(Token = "0x2000493")]
	public enum VoipBitrate
	{
		[Token(Token = "0x4001E2B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A44EC", Offset = "0x3A44EC")]
		Unknown,
		[Token(Token = "0x4001E2C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A4520", Offset = "0x3A4520")]
		B16000,
		[Token(Token = "0x4001E2D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A4554", Offset = "0x3A4554")]
		B24000,
		[Token(Token = "0x4001E2E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A4588", Offset = "0x3A4588")]
		B32000,
		[Token(Token = "0x4001E2F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A45BC", Offset = "0x3A45BC")]
		B64000,
		[Token(Token = "0x4001E30")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A45F0", Offset = "0x3A45F0")]
		B96000,
		[Token(Token = "0x4001E31")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A4624", Offset = "0x3A4624")]
		B128000
	}
	[Token(Token = "0x2000494")]
	public enum VoipDtxState
	{
		[Token(Token = "0x4001E33")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A4658", Offset = "0x3A4658")]
		Unknown,
		[Token(Token = "0x4001E34")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A468C", Offset = "0x3A468C")]
		Enabled,
		[Token(Token = "0x4001E35")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A46C0", Offset = "0x3A46C0")]
		Disabled
	}
	[Token(Token = "0x2000495")]
	public enum VoipMuteState
	{
		[Token(Token = "0x4001E37")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A46F4", Offset = "0x3A46F4")]
		Unknown,
		[Token(Token = "0x4001E38")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A4728", Offset = "0x3A4728")]
		Muted,
		[Token(Token = "0x4001E39")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A475C", Offset = "0x3A475C")]
		Unmuted
	}
	[Token(Token = "0x2000496")]
	public class VoipOptions
	{
		[Token(Token = "0x4001E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr Handle;

		[Token(Token = "0x600246D")]
		[Address(RVA = "0xA6CBA0", Offset = "0xA6CBA0", VA = "0xA6CBA0")]
		public VoipOptions()
		{
		}

		[Token(Token = "0x600246E")]
		[Address(RVA = "0xA6CC28", Offset = "0xA6CC28", VA = "0xA6CC28")]
		public void SetBitrateForNewConnections(VoipBitrate value)
		{
		}

		[Token(Token = "0x600246F")]
		[Address(RVA = "0xA6CCB0", Offset = "0xA6CCB0", VA = "0xA6CCB0")]
		public void SetCreateNewConnectionUseDtx(VoipDtxState value)
		{
		}

		[Token(Token = "0x6002470")]
		[Address(RVA = "0xA6CD38", Offset = "0xA6CD38", VA = "0xA6CD38")]
		public static explicit operator IntPtr(VoipOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6002471")]
		[Address(RVA = "0xA6CD88", Offset = "0xA6CD88", VA = "0xA6CD88", Slot = "1")]
		~VoipOptions()
		{
		}
	}
	[Token(Token = "0x2000497")]
	public class VoipPCMSourceNative : IVoipPCMSource
	{
		[Token(Token = "0x4001E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private ulong senderID;

		[Token(Token = "0x6002472")]
		[Address(RVA = "0xA6CE54", Offset = "0xA6CE54", VA = "0xA6CE54", Slot = "4")]
		public int GetPCM(float[] dest, int length)
		{
			return default(int);
		}

		[Token(Token = "0x6002473")]
		[Address(RVA = "0xA6CF3C", Offset = "0xA6CF3C", VA = "0xA6CF3C", Slot = "5")]
		public void SetSenderID(ulong senderID)
		{
		}

		[Token(Token = "0x6002474")]
		[Address(RVA = "0xA6CF4C", Offset = "0xA6CF4C", VA = "0xA6CF4C", Slot = "7")]
		public int PeekSizeElements()
		{
			return default(int);
		}

		[Token(Token = "0x6002475")]
		[Address(RVA = "0xA6D00C", Offset = "0xA6D00C", VA = "0xA6D00C", Slot = "6")]
		public void Update()
		{
		}

		[Token(Token = "0x6002476")]
		[Address(RVA = "0xA6D010", Offset = "0xA6D010", VA = "0xA6D010")]
		public VoipPCMSourceNative()
		{
		}
	}
	[Token(Token = "0x2000498")]
	public enum VoipSampleRate
	{
		[Token(Token = "0x4001E3D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A4790", Offset = "0x3A4790")]
		Unknown,
		[Token(Token = "0x4001E3E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A47C4", Offset = "0x3A47C4")]
		HZ24000,
		[Token(Token = "0x4001E3F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A47F8", Offset = "0x3A47F8")]
		HZ44100,
		[Token(Token = "0x4001E40")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x3A482C", Offset = "0x3A482C")]
		HZ48000
	}
	[Token(Token = "0x2000499")]
	public class WindowsPlatform
	{
		[Token(Token = "0x20008C6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x39D84C", Offset = "0x39D84C")]
		public delegate void UnityLogDelegate(IntPtr tag, IntPtr msg);

		[Token(Token = "0x6002477")]
		[Address(RVA = "0xA6D018", Offset = "0xA6D018", VA = "0xA6D018")]
		private void CPPLogCallback(IntPtr tag, IntPtr message)
		{
		}

		[Token(Token = "0x6002478")]
		[Address(RVA = "0xA6D104", Offset = "0xA6D104", VA = "0xA6D104")]
		private IntPtr getCallbackPointer()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6002479")]
		[Address(RVA = "0xA6D148", Offset = "0xA6D148", VA = "0xA6D148")]
		public bool Initialize(string appId)
		{
			return default(bool);
		}

		[Token(Token = "0x600247A")]
		[Address(RVA = "0xA6D264", Offset = "0xA6D264", VA = "0xA6D264")]
		public Request<PlatformInitialize> AsyncInitialize(string appId)
		{
			return null;
		}

		[Token(Token = "0x600247B")]
		[Address(RVA = "0xA6D3CC", Offset = "0xA6D3CC", VA = "0xA6D3CC")]
		public WindowsPlatform()
		{
		}
	}
}
namespace Oculus.Platform.Models
{
	[Token(Token = "0x200049A")]
	public class AbuseReportRecording
	{
		[Token(Token = "0x4001E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string RecordingUuid;

		[Token(Token = "0x600247C")]
		[Address(RVA = "0xD89B80", Offset = "0xD89B80", VA = "0xD89B80")]
		public AbuseReportRecording(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200049B")]
	public class AchievementDefinition
	{
		[Token(Token = "0x4001E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly AchievementType Type;

		[Token(Token = "0x4001E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string Name;

		[Token(Token = "0x4001E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly uint BitfieldLength;

		[Token(Token = "0x4001E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong Target;

		[Token(Token = "0x600247D")]
		[Address(RVA = "0xD92710", Offset = "0xD92710", VA = "0xD92710")]
		public AchievementDefinition(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200049C")]
	public class AchievementDefinitionList : DeserializableList<AchievementDefinition>
	{
		[Token(Token = "0x600247E")]
		[Address(RVA = "0xD89D04", Offset = "0xD89D04", VA = "0xD89D04")]
		public AchievementDefinitionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200049D")]
	public class AchievementProgress
	{
		[Token(Token = "0x4001E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string Bitfield;

		[Token(Token = "0x4001E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong Count;

		[Token(Token = "0x4001E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly bool IsUnlocked;

		[Token(Token = "0x4001E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly string Name;

		[Token(Token = "0x4001E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly DateTime UnlockTime;

		[Token(Token = "0x600247F")]
		[Address(RVA = "0xD927D0", Offset = "0xD927D0", VA = "0xD927D0")]
		public AchievementProgress(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200049E")]
	public class AchievementProgressList : DeserializableList<AchievementProgress>
	{
		[Token(Token = "0x6002480")]
		[Address(RVA = "0xD8A038", Offset = "0xD8A038", VA = "0xD8A038")]
		public AchievementProgressList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200049F")]
	public class AchievementUpdate
	{
		[Token(Token = "0x4001E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool JustUnlocked;

		[Token(Token = "0x4001E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string Name;

		[Token(Token = "0x6002481")]
		[Address(RVA = "0xD8A36C", Offset = "0xD8A36C", VA = "0xD8A36C")]
		public AchievementUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004A0")]
	public class ApplicationVersion
	{
		[Token(Token = "0x4001E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly int CurrentCode;

		[Token(Token = "0x4001E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string CurrentName;

		[Token(Token = "0x4001E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int LatestCode;

		[Token(Token = "0x4001E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly string LatestName;

		[Token(Token = "0x6002482")]
		[Address(RVA = "0xD8A500", Offset = "0xD8A500", VA = "0xD8A500")]
		public ApplicationVersion(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004A1")]
	public class AssetDetails
	{
		[Token(Token = "0x4001E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong AssetId;

		[Token(Token = "0x4001E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string AssetType;

		[Token(Token = "0x4001E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly string DownloadStatus;

		[Token(Token = "0x4001E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Filepath;

		[Token(Token = "0x4001E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly string IapStatus;

		[Token(Token = "0x4001E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly LanguagePackInfo LanguageOptional;

		[Token(Token = "0x4001E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3A4860", Offset = "0x3A4860")]
		public readonly LanguagePackInfo Language;

		[Token(Token = "0x4001E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Metadata;

		[Token(Token = "0x6002483")]
		[Address(RVA = "0xD8A6B4", Offset = "0xD8A6B4", VA = "0xD8A6B4")]
		public AssetDetails(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004A2")]
	public class AssetDetailsList : DeserializableList<AssetDetails>
	{
		[Token(Token = "0x6002484")]
		[Address(RVA = "0xD8A900", Offset = "0xD8A900", VA = "0xD8A900")]
		public AssetDetailsList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20004A3")]
	public class AssetFileDeleteResult
	{
		[Token(Token = "0x4001E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x4001E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x4001E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Filepath;

		[Token(Token = "0x4001E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly bool Success;

		[Token(Token = "0x6002485")]
		[Address(RVA = "0xD8ABF8", Offset = "0xD8ABF8", VA = "0xD8ABF8")]
		public AssetFileDeleteResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004A4")]
	public class AssetFileDownloadCancelResult
	{
		[Token(Token = "0x4001E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x4001E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x4001E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Filepath;

		[Token(Token = "0x4001E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly bool Success;

		[Token(Token = "0x6002486")]
		[Address(RVA = "0xD8ADAC", Offset = "0xD8ADAC", VA = "0xD8ADAC")]
		public AssetFileDownloadCancelResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004A5")]
	public class AssetFileDownloadResult
	{
		[Token(Token = "0x4001E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong AssetId;

		[Token(Token = "0x4001E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Filepath;

		[Token(Token = "0x6002487")]
		[Address(RVA = "0xD8AF60", Offset = "0xD8AF60", VA = "0xD8AF60")]
		public AssetFileDownloadResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004A6")]
	public class AssetFileDownloadUpdate
	{
		[Token(Token = "0x4001E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x4001E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x4001E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly uint BytesTotal;

		[Token(Token = "0x4001E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly int BytesTransferred;

		[Token(Token = "0x4001E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool Completed;

		[Token(Token = "0x6002488")]
		[Address(RVA = "0xD8B0F4", Offset = "0xD8B0F4", VA = "0xD8B0F4")]
		public AssetFileDownloadUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004A7")]
	public class CalApplicationFinalized
	{
		[Token(Token = "0x4001E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly int CountdownMS;

		[Token(Token = "0x4001E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4001E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string LaunchDetails;

		[Token(Token = "0x6002489")]
		[Address(RVA = "0xD8B2B8", Offset = "0xD8B2B8", VA = "0xD8B2B8")]
		public CalApplicationFinalized(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004A8")]
	public class CalApplicationProposed
	{
		[Token(Token = "0x4001E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ID;

		[Token(Token = "0x600248A")]
		[Address(RVA = "0xD8B45C", Offset = "0xD8B45C", VA = "0xD8B45C")]
		public CalApplicationProposed(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004A9")]
	public class CalApplicationSuggestion
	{
		[Token(Token = "0x4001E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ID;

		[Token(Token = "0x4001E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string SocialContext;

		[Token(Token = "0x600248B")]
		[Address(RVA = "0xD92960", Offset = "0xD92960", VA = "0xD92960")]
		public CalApplicationSuggestion(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004AA")]
	public class CalApplicationSuggestionList : DeserializableList<CalApplicationSuggestion>
	{
		[Token(Token = "0x600248C")]
		[Address(RVA = "0xD8B644", Offset = "0xD8B644", VA = "0xD8B644")]
		public CalApplicationSuggestionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20004AB")]
	public class CloudStorageConflictMetadata
	{
		[Token(Token = "0x4001E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly CloudStorageMetadata Local;

		[Token(Token = "0x4001E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly CloudStorageMetadata Remote;

		[Token(Token = "0x600248D")]
		[Address(RVA = "0xD8B93C", Offset = "0xD8B93C", VA = "0xD8B93C")]
		public CloudStorageConflictMetadata(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004AC")]
	public class CloudStorageData
	{
		[Token(Token = "0x4001E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string Bucket;

		[Token(Token = "0x4001E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly byte[] Data;

		[Token(Token = "0x4001E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly uint DataSize;

		[Token(Token = "0x4001E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly string Key;

		[Token(Token = "0x600248E")]
		[Address(RVA = "0xD8BB0C", Offset = "0xD8BB0C", VA = "0xD8BB0C")]
		public CloudStorageData(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004AD")]
	public class CloudStorageMetadata
	{
		[Token(Token = "0x4001E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string Bucket;

		[Token(Token = "0x4001E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly long Counter;

		[Token(Token = "0x4001E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly uint DataSize;

		[Token(Token = "0x4001E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly string ExtraData;

		[Token(Token = "0x4001E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Key;

		[Token(Token = "0x4001E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong SaveTime;

		[Token(Token = "0x4001E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly CloudStorageDataStatus Status;

		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public readonly string VersionHandle;

		[Token(Token = "0x600248F")]
		[Address(RVA = "0xD8BFF4", Offset = "0xD8BFF4", VA = "0xD8BFF4")]
		public CloudStorageMetadata(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004AE")]
	public class CloudStorageMetadataList : DeserializableList<CloudStorageMetadata>
	{
		[Token(Token = "0x6002490")]
		[Address(RVA = "0xD8BCC0", Offset = "0xD8BCC0", VA = "0xD8BCC0")]
		public CloudStorageMetadataList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20004AF")]
	public class CloudStorageUpdateResponse
	{
		[Token(Token = "0x4001E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string Bucket;

		[Token(Token = "0x4001E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string Key;

		[Token(Token = "0x4001E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly CloudStorageUpdateStatus Status;

		[Token(Token = "0x4001E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly string VersionHandle;

		[Token(Token = "0x6002491")]
		[Address(RVA = "0xD8C1E8", Offset = "0xD8C1E8", VA = "0xD8C1E8")]
		public CloudStorageUpdateResponse(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004B0")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x39ADE0", Offset = "0x39ADE0")]
	public class DeserializableList<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x4001E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<T> _Data;

		[Token(Token = "0x4001E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string _NextUrl;

		[Token(Token = "0x4001E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string _PreviousUrl;

		[Token(Token = "0x17000380")]
		public int Count
		{
			[Token(Token = "0x6002492")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000381")]
		private bool System.Collections.Generic.ICollection<T>.IsReadOnly
		{
			[Token(Token = "0x6002493")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000382")]
		public T Item
		{
			[Token(Token = "0x6002495")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6002496")]
			set
			{
			}
		}

		[Token(Token = "0x17000383")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3B2580", Offset = "0x3B2580")]
		public List<T> Data
		{
			[Token(Token = "0x60024A1")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000384")]
		public bool HasNextPage
		{
			[Token(Token = "0x60024A2")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000385")]
		public bool HasPreviousPage
		{
			[Token(Token = "0x60024A3")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000386")]
		public string NextUrl
		{
			[Token(Token = "0x60024A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000387")]
		public string PreviousUrl
		{
			[Token(Token = "0x60024A5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002494")]
		public int IndexOf(T obj)
		{
			return default(int);
		}

		[Token(Token = "0x6002497")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x6002498")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002499")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x600249A")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x600249B")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600249C")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x600249D")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x600249E")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x600249F")]
		private IEnumerator GetEnumerator1()
		{
			return null;
		}

		[Token(Token = "0x60024A0")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60024A6")]
		public DeserializableList()
		{
		}
	}
	[Token(Token = "0x20004B1")]
	public class Error
	{
		[Token(Token = "0x4001E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly int Code;

		[Token(Token = "0x4001E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly int HttpCode;

		[Token(Token = "0x4001E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Message;

		[Token(Token = "0x60024A7")]
		[Address(RVA = "0xD86438", Offset = "0xD86438", VA = "0xD86438")]
		public Error(int code, string message, int httpCode)
		{
		}
	}
	[Token(Token = "0x20004B2")]
	public class HttpTransferUpdate
	{
		[Token(Token = "0x4001E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ID;

		[Token(Token = "0x4001E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly byte[] Payload;

		[Token(Token = "0x4001E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly bool IsCompleted;

		[Token(Token = "0x60024A8")]
		[Address(RVA = "0xD8C39C", Offset = "0xD8C39C", VA = "0xD8C39C")]
		public HttpTransferUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004B3")]
	public class InstalledApplication
	{
		[Token(Token = "0x4001E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string ApplicationId;

		[Token(Token = "0x4001E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string PackageName;

		[Token(Token = "0x4001E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Status;

		[Token(Token = "0x4001E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int VersionCode;

		[Token(Token = "0x4001E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string VersionName;

		[Token(Token = "0x60024A9")]
		[Address(RVA = "0xD92A00", Offset = "0xD92A00", VA = "0xD92A00")]
		public InstalledApplication(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004B4")]
	public class InstalledApplicationList : DeserializableList<InstalledApplication>
	{
		[Token(Token = "0x60024AA")]
		[Address(RVA = "0xD8C688", Offset = "0xD8C688", VA = "0xD8C688")]
		public InstalledApplicationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20004B5")]
	public class LanguagePackInfo
	{
		[Token(Token = "0x4001E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string EnglishName;

		[Token(Token = "0x4001E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string NativeName;

		[Token(Token = "0x4001E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Tag;

		[Token(Token = "0x60024AB")]
		[Address(RVA = "0xD928B0", Offset = "0xD928B0", VA = "0xD928B0")]
		public LanguagePackInfo(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004B6")]
	public class LaunchBlockFlowResult
	{
		[Token(Token = "0x4001E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool DidBlock;

		[Token(Token = "0x4001E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public readonly bool DidCancel;

		[Token(Token = "0x60024AC")]
		[Address(RVA = "0xD8C9E4", Offset = "0xD8C9E4", VA = "0xD8C9E4")]
		public LaunchBlockFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004B7")]
	public class LaunchDetails
	{
		[Token(Token = "0x4001E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string DeeplinkMessage;

		[Token(Token = "0x4001E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string LaunchSource;

		[Token(Token = "0x4001E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly LaunchType LaunchType;

		[Token(Token = "0x4001E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong RoomID;

		[Token(Token = "0x4001E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x4001E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3A4894", Offset = "0x3A4894")]
		public readonly UserList Users;

		[Token(Token = "0x60024AD")]
		[Address(RVA = "0xD92AD0", Offset = "0xD92AD0", VA = "0xD92AD0")]
		public LaunchDetails(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004B8")]
	public class LaunchFriendRequestFlowResult
	{
		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool DidCancel;

		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public readonly bool DidSendRequest;

		[Token(Token = "0x60024AE")]
		[Address(RVA = "0xD8CB78", Offset = "0xD8CB78", VA = "0xD8CB78")]
		public LaunchFriendRequestFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004B9")]
	public class LaunchReportFlowResult
	{
		[Token(Token = "0x4001E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool DidCancel;

		[Token(Token = "0x4001E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong UserReportId;

		[Token(Token = "0x60024AF")]
		[Address(RVA = "0xD8CD70", Offset = "0xD8CD70", VA = "0xD8CD70")]
		public LaunchReportFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004BA")]
	public class LaunchUnblockFlowResult
	{
		[Token(Token = "0x4001E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool DidCancel;

		[Token(Token = "0x4001E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public readonly bool DidUnblock;

		[Token(Token = "0x60024B0")]
		[Address(RVA = "0xD8CF68", Offset = "0xD8CF68", VA = "0xD8CF68")]
		public LaunchUnblockFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004BB")]
	public class LeaderboardEntry
	{
		[Token(Token = "0x4001E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly byte[] ExtraData;

		[Token(Token = "0x4001EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly int Rank;

		[Token(Token = "0x4001EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly long Score;

		[Token(Token = "0x4001EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly DateTime Timestamp;

		[Token(Token = "0x4001EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly User User;

		[Token(Token = "0x60024B1")]
		[Address(RVA = "0xD92BE8", Offset = "0xD92BE8", VA = "0xD92BE8")]
		public LeaderboardEntry(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004BC")]
	public class LeaderboardEntryList : DeserializableList<LeaderboardEntry>
	{
		[Token(Token = "0x4001EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong TotalCount;

		[Token(Token = "0x60024B2")]
		[Address(RVA = "0xD8D1D0", Offset = "0xD8D1D0", VA = "0xD8D1D0")]
		public LeaderboardEntryList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20004BD")]
	public class LinkedAccount
	{
		[Token(Token = "0x4001EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string AccessToken;

		[Token(Token = "0x4001EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly ServiceProvider ServiceProvider;

		[Token(Token = "0x4001EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string UserId;

		[Token(Token = "0x60024B3")]
		[Address(RVA = "0xD92CEC", Offset = "0xD92CEC", VA = "0xD92CEC")]
		public LinkedAccount(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004BE")]
	public class LinkedAccountList : DeserializableList<LinkedAccount>
	{
		[Token(Token = "0x60024B4")]
		[Address(RVA = "0xD8D588", Offset = "0xD8D588", VA = "0xD8D588")]
		public LinkedAccountList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20004BF")]
	public class LivestreamingApplicationStatus
	{
		[Token(Token = "0x4001EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool StreamingEnabled;

		[Token(Token = "0x60024B5")]
		[Address(RVA = "0xD8D8E4", Offset = "0xD8D8E4", VA = "0xD8D8E4")]
		public LivestreamingApplicationStatus(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004C0")]
	public class LivestreamingStartResult
	{
		[Token(Token = "0x4001EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly LivestreamingStartStatus StreamingResult;

		[Token(Token = "0x60024B6")]
		[Address(RVA = "0xD8DACC", Offset = "0xD8DACC", VA = "0xD8DACC")]
		public LivestreamingStartResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004C1")]
	public class LivestreamingStatus
	{
		[Token(Token = "0x4001EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool CommentsVisible;

		[Token(Token = "0x4001EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public readonly bool IsPaused;

		[Token(Token = "0x4001EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		public readonly bool LivestreamingEnabled;

		[Token(Token = "0x4001EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly int LivestreamingType;

		[Token(Token = "0x4001EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool MicEnabled;

		[Token(Token = "0x60024B7")]
		[Address(RVA = "0xD8DC50", Offset = "0xD8DC50", VA = "0xD8DC50")]
		public LivestreamingStatus(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004C2")]
	public class LivestreamingVideoStats
	{
		[Token(Token = "0x4001EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly int CommentCount;

		[Token(Token = "0x4001EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly int ReactionCount;

		[Token(Token = "0x4001EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string TotalViews;

		[Token(Token = "0x60024B8")]
		[Address(RVA = "0xD8DE78", Offset = "0xD8DE78", VA = "0xD8DE78")]
		public LivestreamingVideoStats(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004C3")]
	public class MatchmakingAdminSnapshot
	{
		[Token(Token = "0x4001EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly MatchmakingAdminSnapshotCandidateList Candidates;

		[Token(Token = "0x4001EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly double MyCurrentThreshold;

		[Token(Token = "0x60024B9")]
		[Address(RVA = "0xD8E01C", Offset = "0xD8E01C", VA = "0xD8E01C")]
		public MatchmakingAdminSnapshot(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004C4")]
	public class MatchmakingAdminSnapshotCandidate
	{
		[Token(Token = "0x4001EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool CanMatch;

		[Token(Token = "0x4001EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly double MyTotalScore;

		[Token(Token = "0x4001EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly double TheirCurrentThreshold;

		[Token(Token = "0x4001EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly double TheirTotalScore;

		[Token(Token = "0x4001EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string TraceId;

		[Token(Token = "0x60024BA")]
		[Address(RVA = "0xD92FA0", Offset = "0xD92FA0", VA = "0xD92FA0")]
		public MatchmakingAdminSnapshotCandidate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004C5")]
	public class MatchmakingAdminSnapshotCandidateList : DeserializableList<MatchmakingAdminSnapshotCandidate>
	{
		[Token(Token = "0x60024BB")]
		[Address(RVA = "0xD92D9C", Offset = "0xD92D9C", VA = "0xD92D9C")]
		public MatchmakingAdminSnapshotCandidateList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20004C6")]
	public class MatchmakingBrowseResult
	{
		[Token(Token = "0x4001EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly MatchmakingEnqueueResult EnqueueResult;

		[Token(Token = "0x4001EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly RoomList Rooms;

		[Token(Token = "0x60024BC")]
		[Address(RVA = "0xD8E23C", Offset = "0xD8E23C", VA = "0xD8E23C")]
		public MatchmakingBrowseResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004C7")]
	public class MatchmakingEnqueueResult
	{
		[Token(Token = "0x4001EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly MatchmakingAdminSnapshot AdminSnapshotOptional;

		[Token(Token = "0x4001EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3A48C8", Offset = "0x3A48C8")]
		public readonly MatchmakingAdminSnapshot AdminSnapshot;

		[Token(Token = "0x4001EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly uint AverageWait;

		[Token(Token = "0x4001EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly uint MatchesInLastHourCount;

		[Token(Token = "0x4001EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly uint MaxExpectedWait;

		[Token(Token = "0x4001EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly string Pool;

		[Token(Token = "0x4001EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint RecentMatchPercentage;

		[Token(Token = "0x4001EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly string RequestHash;

		[Token(Token = "0x60024BD")]
		[Address(RVA = "0xD8E418", Offset = "0xD8E418", VA = "0xD8E418")]
		public MatchmakingEnqueueResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004C8")]
	public class MatchmakingEnqueueResultAndRoom
	{
		[Token(Token = "0x4001EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly MatchmakingEnqueueResult MatchmakingEnqueueResult;

		[Token(Token = "0x4001EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly Room Room;

		[Token(Token = "0x60024BE")]
		[Address(RVA = "0xD8E664", Offset = "0xD8E664", VA = "0xD8E664")]
		public MatchmakingEnqueueResultAndRoom(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004C9")]
	public class MatchmakingEnqueuedUser
	{
		[Token(Token = "0x4001EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly Dictionary<string, string> CustomData;

		[Token(Token = "0x4001EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly User UserOptional;

		[Token(Token = "0x4001EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3A48FC", Offset = "0x3A48FC")]
		public readonly User User;

		[Token(Token = "0x60024BF")]
		[Address(RVA = "0xD93070", Offset = "0xD93070", VA = "0xD93070")]
		public MatchmakingEnqueuedUser(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004CA")]
	public class MatchmakingEnqueuedUserList : DeserializableList<MatchmakingEnqueuedUser>
	{
		[Token(Token = "0x60024C0")]
		[Address(RVA = "0xD93160", Offset = "0xD93160", VA = "0xD93160")]
		public MatchmakingEnqueuedUserList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20004CB")]
	public class MatchmakingStats
	{
		[Token(Token = "0x4001EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly uint DrawCount;

		[Token(Token = "0x4001EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly uint LossCount;

		[Token(Token = "0x4001ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly uint SkillLevel;

		[Token(Token = "0x4001ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly double SkillMean;

		[Token(Token = "0x4001ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly double SkillStandardDeviation;

		[Token(Token = "0x4001ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly uint WinCount;

		[Token(Token = "0x60024C1")]
		[Address(RVA = "0xD8ECC0", Offset = "0xD8ECC0", VA = "0xD8ECC0")]
		public MatchmakingStats(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004CC")]
	public class NetworkingPeer
	{
		[Token(Token = "0x4001ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A4930", Offset = "0x3A4930")]
		private ulong <ID>k__BackingField;

		[Token(Token = "0x4001ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A4940", Offset = "0x3A4940")]
		private PeerConnectionState <State>k__BackingField;

		[Token(Token = "0x17000388")]
		public ulong ID
		{
			[Token(Token = "0x60024C3")]
			[Address(RVA = "0xD93364", Offset = "0xD93364", VA = "0xD93364")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACE50", Offset = "0x3ACE50")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x60024C4")]
			[Address(RVA = "0xD9336C", Offset = "0xD9336C", VA = "0xD9336C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACE60", Offset = "0x3ACE60")]
			private set
			{
			}
		}

		[Token(Token = "0x17000389")]
		public PeerConnectionState State
		{
			[Token(Token = "0x60024C5")]
			[Address(RVA = "0xD9337C", Offset = "0xD9337C", VA = "0xD9337C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACE70", Offset = "0x3ACE70")]
			get
			{
				return default(PeerConnectionState);
			}
			[Token(Token = "0x60024C6")]
			[Address(RVA = "0xD93384", Offset = "0xD93384", VA = "0xD93384")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACE80", Offset = "0x3ACE80")]
			private set
			{
			}
		}

		[Token(Token = "0x60024C2")]
		[Address(RVA = "0xD8EEB8", Offset = "0xD8EEB8", VA = "0xD8EEB8")]
		public NetworkingPeer(ulong id, PeerConnectionState state)
		{
		}
	}
	[Token(Token = "0x20004CD")]
	public class OrgScopedID
	{
		[Token(Token = "0x4001ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ID;

		[Token(Token = "0x60024C7")]
		[Address(RVA = "0xD8EFDC", Offset = "0xD8EFDC", VA = "0xD8EFDC")]
		public OrgScopedID(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004CE")]
	public class Party
	{
		[Token(Token = "0x4001ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ID;

		[Token(Token = "0x4001ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly UserList InvitedUsersOptional;

		[Token(Token = "0x4001ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3A4950", Offset = "0x3A4950")]
		public readonly UserList InvitedUsers;

		[Token(Token = "0x4001ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly User LeaderOptional;

		[Token(Token = "0x4001ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3A4984", Offset = "0x3A4984")]
		public readonly User Leader;

		[Token(Token = "0x4001ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly Room RoomOptional;

		[Token(Token = "0x4001ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3A49B8", Offset = "0x3A49B8")]
		public readonly Room Room;

		[Token(Token = "0x4001ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x4001ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3A49EC", Offset = "0x3A49EC")]
		public readonly UserList Users;

		[Token(Token = "0x60024C8")]
		[Address(RVA = "0xD8F1C4", Offset = "0xD8F1C4", VA = "0xD8F1C4")]
		public Party(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004CF")]
	public class PartyID
	{
		[Token(Token = "0x4001EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ID;

		[Token(Token = "0x60024C9")]
		[Address(RVA = "0xD8F568", Offset = "0xD8F568", VA = "0xD8F568")]
		public PartyID(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004D0")]
	public class PartyUpdateNotification
	{
		[Token(Token = "0x4001EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly PartyUpdateAction Action;

		[Token(Token = "0x4001EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong PartyId;

		[Token(Token = "0x4001EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong SenderId;

		[Token(Token = "0x4001EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string UpdateTimestamp;

		[Token(Token = "0x4001EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly string UserAlias;

		[Token(Token = "0x4001EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong UserId;

		[Token(Token = "0x4001EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string UserName;

		[Token(Token = "0x60024CA")]
		[Address(RVA = "0xD8F7E0", Offset = "0xD8F7E0", VA = "0xD8F7E0")]
		public PartyUpdateNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004D1")]
	public class Pid
	{
		[Token(Token = "0x4001EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string Id;

		[Token(Token = "0x60024CB")]
		[Address(RVA = "0xD9338C", Offset = "0xD9338C", VA = "0xD9338C")]
		public Pid(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004D2")]
	public class PidList : DeserializableList<Pid>
	{
		[Token(Token = "0x60024CC")]
		[Address(RVA = "0xD8F9C4", Offset = "0xD8F9C4", VA = "0xD8F9C4")]
		public PidList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20004D3")]
	public class PingResult
	{
		[Token(Token = "0x4001EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A4A20", Offset = "0x3A4A20")]
		private ulong <ID>k__BackingField;

		[Token(Token = "0x4001EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong? pingTimeUsec;

		[Token(Token = "0x1700038A")]
		public ulong ID
		{
			[Token(Token = "0x60024CE")]
			[Address(RVA = "0xD9341C", Offset = "0xD9341C", VA = "0xD9341C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACE90", Offset = "0x3ACE90")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x60024CF")]
			[Address(RVA = "0xD93424", Offset = "0xD93424", VA = "0xD93424")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ACEA0", Offset = "0x3ACEA0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700038B")]
		public ulong PingTimeUsec
		{
			[Token(Token = "0x60024D0")]
			[Address(RVA = "0xD93434", Offset = "0xD93434", VA = "0xD93434")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x1700038C")]
		public bool IsTimeout
		{
			[Token(Token = "0x60024D1")]
			[Address(RVA = "0xD934A8", Offset = "0xD934A8", VA = "0xD934A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60024CD")]
		[Address(RVA = "0xD8FD60", Offset = "0xD8FD60", VA = "0xD8FD60")]
		public PingResult(ulong id, ulong? pingTimeUsec)
		{
		}
	}
	[Token(Token = "0x20004D4")]
	public class PlatformInitialize
	{
		[Token(Token = "0x4001EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly PlatformInitializeResult Result;

		[Token(Token = "0x60024D2")]
		[Address(RVA = "0xD8FE9C", Offset = "0xD8FE9C", VA = "0xD8FE9C")]
		public PlatformInitialize(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004D5")]
	public class Product
	{
		[Token(Token = "0x4001EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string Description;

		[Token(Token = "0x4001EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string FormattedPrice;

		[Token(Token = "0x4001EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Name;

		[Token(Token = "0x4001EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly string Sku;

		[Token(Token = "0x60024D3")]
		[Address(RVA = "0xD934F8", Offset = "0xD934F8", VA = "0xD934F8")]
		public Product(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004D6")]
	public class ProductList : DeserializableList<Product>
	{
		[Token(Token = "0x60024D4")]
		[Address(RVA = "0xD90020", Offset = "0xD90020", VA = "0xD90020")]
		public ProductList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20004D7")]
	public class Purchase
	{
		[Token(Token = "0x4001EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly DateTime ExpirationTime;

		[Token(Token = "0x4001EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly DateTime GrantTime;

		[Token(Token = "0x4001EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong ID;

		[Token(Token = "0x4001EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Sku;

		[Token(Token = "0x60024D5")]
		[Address(RVA = "0xD90354", Offset = "0xD90354", VA = "0xD90354")]
		public Purchase(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004D8")]
	public class PurchaseList : DeserializableList<Purchase>
	{
		[Token(Token = "0x60024D6")]
		[Address(RVA = "0xD90524", Offset = "0xD90524", VA = "0xD90524")]
		public PurchaseList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20004D9")]
	public class Room
	{
		[Token(Token = "0x4001EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ApplicationID;

		[Token(Token = "0x4001EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Dictionary<string, string> DataStore;

		[Token(Token = "0x4001EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly string Description;

		[Token(Token = "0x4001EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong ID;

		[Token(Token = "0x4001EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly UserList InvitedUsersOptional;

		[Token(Token = "0x4001EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3A4A30", Offset = "0x3A4A30")]
		public readonly UserList InvitedUsers;

		[Token(Token = "0x4001EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool IsMembershipLocked;

		[Token(Token = "0x4001EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public readonly RoomJoinPolicy JoinPolicy;

		[Token(Token = "0x4001EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly RoomJoinability Joinability;

		[Token(Token = "0x4001EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public readonly MatchmakingEnqueuedUserList MatchedUsersOptional;

		[Token(Token = "0x4001EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3A4A64", Offset = "0x3A4A64")]
		public readonly MatchmakingEnqueuedUserList MatchedUsers;

		[Token(Token = "0x4001EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public readonly uint MaxUsers;

		[Token(Token = "0x4001EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string Name;

		[Token(Token = "0x4001EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public readonly User OwnerOptional;

		[Token(Token = "0x4001EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3A4A98", Offset = "0x3A4A98")]
		public readonly User Owner;

		[Token(Token = "0x4001EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public readonly TeamList TeamsOptional;

		[Token(Token = "0x4001EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3A4ACC", Offset = "0x3A4ACC")]
		public readonly TeamList Teams;

		[Token(Token = "0x4001EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public readonly RoomType Type;

		[Token(Token = "0x4001F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x4001F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3A4B00", Offset = "0x3A4B00")]
		public readonly UserList Users;

		[Token(Token = "0x4001F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public readonly uint Version;

		[Token(Token = "0x60024D7")]
		[Address(RVA = "0xD8E840", Offset = "0xD8E840", VA = "0xD8E840")]
		public Room(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004DA")]
	public class RoomList : DeserializableList<Room>
	{
		[Token(Token = "0x60024D8")]
		[Address(RVA = "0xD90E44", Offset = "0xD90E44", VA = "0xD90E44")]
		public RoomList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20004DB")]
	public class RoomInviteNotification
	{
		[Token(Token = "0x4001F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ID;

		[Token(Token = "0x4001F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong RoomID;

		[Token(Token = "0x4001F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong SenderID;

		[Token(Token = "0x4001F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly DateTime SentTime;

		[Token(Token = "0x60024D9")]
		[Address(RVA = "0xD9094C", Offset = "0xD9094C", VA = "0xD9094C")]
		public RoomInviteNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004DC")]
	public class RoomInviteNotificationList : DeserializableList<RoomInviteNotification>
	{
		[Token(Token = "0x60024DA")]
		[Address(RVA = "0xD90B10", Offset = "0xD90B10", VA = "0xD90B10")]
		public RoomInviteNotificationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20004DD")]
	public class SdkAccount
	{
		[Token(Token = "0x4001F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly SdkAccountType AccountType;

		[Token(Token = "0x4001F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong UserId;

		[Token(Token = "0x60024DB")]
		[Address(RVA = "0xD937BC", Offset = "0xD937BC", VA = "0xD937BC")]
		public SdkAccount(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004DE")]
	public class SdkAccountList : DeserializableList<SdkAccount>
	{
		[Token(Token = "0x60024DC")]
		[Address(RVA = "0xD91360", Offset = "0xD91360", VA = "0xD91360")]
		public SdkAccountList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20004DF")]
	public class ShareMediaResult
	{
		[Token(Token = "0x4001F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ShareMediaStatus Status;

		[Token(Token = "0x60024DD")]
		[Address(RVA = "0xD91658", Offset = "0xD91658", VA = "0xD91658")]
		public ShareMediaResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004E0")]
	public class SystemPermission
	{
		[Token(Token = "0x4001F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool HasPermission;

		[Token(Token = "0x4001F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly PermissionGrantStatus PermissionGrantStatus;

		[Token(Token = "0x60024DE")]
		[Address(RVA = "0xD91904", Offset = "0xD91904", VA = "0xD91904")]
		public SystemPermission(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004E1")]
	public class SystemVoipState
	{
		[Token(Token = "0x4001F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly VoipMuteState MicrophoneMuted;

		[Token(Token = "0x4001F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly SystemVoipStatus Status;

		[Token(Token = "0x60024DF")]
		[Address(RVA = "0xD91A98", Offset = "0xD91A98", VA = "0xD91A98")]
		public SystemVoipState(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004E2")]
	public class Team
	{
		[Token(Token = "0x4001F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly UserList AssignedUsers;

		[Token(Token = "0x4001F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly int MaxUsers;

		[Token(Token = "0x4001F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int MinUsers;

		[Token(Token = "0x4001F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly string Name;

		[Token(Token = "0x60024E0")]
		[Address(RVA = "0xD9385C", Offset = "0xD9385C", VA = "0xD9385C")]
		public Team(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004E3")]
	public class TeamList : DeserializableList<Team>
	{
		[Token(Token = "0x60024E1")]
		[Address(RVA = "0xD935B8", Offset = "0xD935B8", VA = "0xD935B8")]
		public TeamList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20004E4")]
	public class User
	{
		[Token(Token = "0x4001F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ID;

		[Token(Token = "0x4001F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string ImageURL;

		[Token(Token = "0x4001F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly string InviteToken;

		[Token(Token = "0x4001F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string OculusID;

		[Token(Token = "0x4001F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly string Presence;

		[Token(Token = "0x4001F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string PresenceDeeplinkMessage;

		[Token(Token = "0x4001F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly UserPresenceStatus PresenceStatus;

		[Token(Token = "0x4001F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string SmallImageUrl;

		[Token(Token = "0x60024E2")]
		[Address(RVA = "0xD91C2C", Offset = "0xD91C2C", VA = "0xD91C2C")]
		public User(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004E5")]
	public class UserList : DeserializableList<User>
	{
		[Token(Token = "0x60024E3")]
		[Address(RVA = "0xD92154", Offset = "0xD92154", VA = "0xD92154")]
		public UserList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20004E6")]
	public class UserAndRoom
	{
		[Token(Token = "0x4001F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly Room RoomOptional;

		[Token(Token = "0x4001F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3A4B34", Offset = "0x3A4B34")]
		public readonly Room Room;

		[Token(Token = "0x4001F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly User User;

		[Token(Token = "0x60024E4")]
		[Address(RVA = "0xD93940", Offset = "0xD93940", VA = "0xD93940")]
		public UserAndRoom(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004E7")]
	public class UserAndRoomList : DeserializableList<UserAndRoom>
	{
		[Token(Token = "0x60024E5")]
		[Address(RVA = "0xD91E20", Offset = "0xD91E20", VA = "0xD91E20")]
		public UserAndRoomList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20004E8")]
	public class UserProof
	{
		[Token(Token = "0x4001F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string Value;

		[Token(Token = "0x60024E6")]
		[Address(RVA = "0xD92488", Offset = "0xD92488", VA = "0xD92488")]
		public UserProof(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004E9")]
	public class UserReportID
	{
		[Token(Token = "0x4001F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool DidCancel;

		[Token(Token = "0x4001F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x60024E7")]
		[Address(RVA = "0xD92670", Offset = "0xD92670", VA = "0xD92670")]
		public UserReportID(IntPtr o)
		{
		}
	}
}
namespace NewtonVR
{
	[Token(Token = "0x20004EA")]
	public class NVRCollisionSoundController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static NVRCollisionSoundController Instance;

		[Token(Token = "0x4001F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A4B68", Offset = "0x3A4B68")]
		public int SoundPoolSize;

		[Token(Token = "0x4001F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A4B9C", Offset = "0x3A4B9C")]
		public bool PitchModulationEnabled;

		[Token(Token = "0x4001F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3A4BD0", Offset = "0x3A4BD0")]
		public float PitchModulationRange;

		[Token(Token = "0x4001F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A4BEC", Offset = "0x3A4BEC")]
		public float MinCollisionVolume;

		[Token(Token = "0x4001F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MaxCollisionVelocity;

		[Token(Token = "0x4001F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public NVRCollisionSoundProviders SoundEngine;

		[Token(Token = "0x4001F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static NVRCollisionSoundProvider Provider;

		[Token(Token = "0x60024E8")]
		[Address(RVA = "0x94241C", Offset = "0x94241C", VA = "0x94241C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024E9")]
		[Address(RVA = "0x9424B8", Offset = "0x9424B8", VA = "0x9424B8")]
		public static void Play(NVRCollisionSoundMaterials material, Vector3 position, float impactVolume)
		{
		}

		[Token(Token = "0x60024EA")]
		[Address(RVA = "0x9425BC", Offset = "0x9425BC", VA = "0x9425BC")]
		public NVRCollisionSoundController()
		{
		}
	}
	[Token(Token = "0x20004EB")]
	public enum NVRCollisionSoundProviders
	{
		[Token(Token = "0x4001F29")]
		None,
		[Token(Token = "0x4001F2A")]
		Unity,
		[Token(Token = "0x4001F2B")]
		FMOD
	}
	[Token(Token = "0x20004EC")]
	public enum NVRCollisionSoundMaterials
	{
		[Token(Token = "0x4001F2D")]
		none = 0,
		[Token(Token = "0x4001F2E")]
		_default = 1,
		[Token(Token = "0x4001F2F")]
		carpet = 2,
		[Token(Token = "0x4001F30")]
		wood = 3,
		[Token(Token = "0x4001F31")]
		metal = 4,
		[Token(Token = "0x4001F32")]
		glass = 5,
		[Token(Token = "0x4001F33")]
		plastic = 6,
		[Token(Token = "0x4001F34")]
		cardboard = 7,
		[Token(Token = "0x4001F35")]
		EndNewtonVRMaterials = 50
	}
	[Token(Token = "0x20004ED")]
	public class NVRCollisionSoundMaterialsList
	{
		[Token(Token = "0x4001F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Type typeCache;

		[Token(Token = "0x4001F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static NVRCollisionSoundMaterials[] list;

		[Token(Token = "0x1700038D")]
		public static Type TypeCache
		{
			[Token(Token = "0x60024EB")]
			[Address(RVA = "0x9425F8", Offset = "0x9425F8", VA = "0x9425F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038E")]
		public static NVRCollisionSoundMaterials[] List
		{
			[Token(Token = "0x60024EC")]
			[Address(RVA = "0x9426E8", Offset = "0x9426E8", VA = "0x9426E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024ED")]
		[Address(RVA = "0x942AD4", Offset = "0x942AD4", VA = "0x942AD4")]
		public static NVRCollisionSoundMaterials? Parse(string materialString)
		{
			return null;
		}

		[Token(Token = "0x60024EE")]
		[Address(RVA = "0x942C3C", Offset = "0x942C3C", VA = "0x942C3C")]
		public NVRCollisionSoundMaterialsList()
		{
		}
	}
	[Token(Token = "0x20004EE")]
	public class NVRCollisionSoundObject : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Collider, NVRCollisionSoundObject> SoundObjects;

		[Token(Token = "0x4001F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public NVRCollisionSoundMaterials Material;

		[Token(Token = "0x4001F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Collider[] Colliders;

		[Token(Token = "0x60024EF")]
		[Address(RVA = "0x942C44", Offset = "0x942C44", VA = "0x942C44", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60024F0")]
		[Address(RVA = "0x942D68", Offset = "0x942D68", VA = "0x942D68", Slot = "5")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60024F1")]
		[Address(RVA = "0x942E88", Offset = "0x942E88", VA = "0x942E88", Slot = "6")]
		protected virtual void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60024F2")]
		[Address(RVA = "0x9430D8", Offset = "0x9430D8", VA = "0x9430D8")]
		private float CalculateImpactVolume(Collision collision)
		{
			return default(float);
		}

		[Token(Token = "0x60024F3")]
		[Address(RVA = "0x9431AC", Offset = "0x9431AC", VA = "0x9431AC")]
		public static float CubicEaseOut(float velocity, float startingValue = 0f, float changeInValue = 1f)
		{
			return default(float);
		}

		[Token(Token = "0x60024F4")]
		[Address(RVA = "0x943254", Offset = "0x943254", VA = "0x943254")]
		public NVRCollisionSoundObject()
		{
		}
	}
	[Token(Token = "0x20004EF")]
	public abstract class NVRCollisionSoundProvider : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x60024F6")]
		public abstract void Awake();

		[Token(Token = "0x60024F7")]
		public abstract void Play(NVRCollisionSoundMaterials material, Vector3 position, float impactVolume);

		[Token(Token = "0x60024F8")]
		[Address(RVA = "0x9432E4", Offset = "0x9432E4", VA = "0x9432E4")]
		protected NVRCollisionSoundProvider()
		{
		}
	}
	[Token(Token = "0x20004F0")]
	public class NVRCollisionSoundProviderFMOD : NVRCollisionSoundProvider
	{
		[Token(Token = "0x60024F9")]
		[Address(RVA = "0x9432EC", Offset = "0x9432EC", VA = "0x9432EC", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x60024FA")]
		[Address(RVA = "0x9432F0", Offset = "0x9432F0", VA = "0x9432F0", Slot = "5")]
		public override void Play(NVRCollisionSoundMaterials material, Vector3 position, float impactVolume)
		{
		}

		[Token(Token = "0x60024FB")]
		[Address(RVA = "0x9432F4", Offset = "0x9432F4", VA = "0x9432F4")]
		public NVRCollisionSoundProviderFMOD()
		{
		}
	}
	[Token(Token = "0x20004F1")]
	public class NVRCollisionSoundProviderUnity : NVRCollisionSoundProvider
	{
		[Token(Token = "0x4001F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string AudioSourcePrefabPath;

		[Token(Token = "0x4001F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static string CollisionSoundsPath;

		[Token(Token = "0x4001F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private GameObject AudioSourcePrefab;

		[Token(Token = "0x4001F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AudioSource[] AudioPool;

		[Token(Token = "0x4001F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int CurrentPoolIndex;

		[Token(Token = "0x4001F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<NVRCollisionSoundMaterials, List<AudioClip>> Clips;

		[Token(Token = "0x60024FC")]
		[Address(RVA = "0x9432FC", Offset = "0x9432FC", VA = "0x9432FC", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x60024FD")]
		[Address(RVA = "0x9438F0", Offset = "0x9438F0", VA = "0x9438F0", Slot = "5")]
		public override void Play(NVRCollisionSoundMaterials material, Vector3 position, float impactVolume)
		{
		}

		[Token(Token = "0x60024FE")]
		[Address(RVA = "0x943C04", Offset = "0x943C04", VA = "0x943C04")]
		private AudioClip GetClip(NVRCollisionSoundMaterials material)
		{
			return null;
		}

		[Token(Token = "0x60024FF")]
		[Address(RVA = "0x943E44", Offset = "0x943E44", VA = "0x943E44")]
		public NVRCollisionSoundProviderUnity()
		{
		}
	}
	[Token(Token = "0x20004F2")]
	internal struct EnumEqualityComparer<TEnum> : IEqualityComparer<TEnum> where TEnum : struct
	{
		[Token(Token = "0x20008C7")]
		private static class BoxAvoidance
		{
			[Token(Token = "0x4002A94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly Func<TEnum, int> _wrapper;

			[Token(Token = "0x6003771")]
			public static int ToInt(TEnum enu)
			{
				return default(int);
			}

			[Token(Token = "0x6003772")]
			static BoxAvoidance()
			{
			}
		}

		[Token(Token = "0x6002501")]
		public bool Equals(TEnum firstEnum, TEnum secondEnum)
		{
			return default(bool);
		}

		[Token(Token = "0x6002502")]
		public int GetHashCode(TEnum firstEnum)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20004F3")]
	public class NVRAttachJoint : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public NVRInteractableItem AttachedItem;

		[Token(Token = "0x4001F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NVRAttachPoint AttachedPoint;

		[Token(Token = "0x4001F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float PullRange;

		[Token(Token = "0x4001F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AttachRange;

		[Token(Token = "0x4001F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float DropDistance;

		[Token(Token = "0x4001F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool MatchRotation;

		[Token(Token = "0x1700038F")]
		public bool IsAttached
		{
			[Token(Token = "0x6002503")]
			[Address(RVA = "0x93CA28", Offset = "0x93CA28", VA = "0x93CA28")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002504")]
		[Address(RVA = "0x93CAAC", Offset = "0x93CAAC", VA = "0x93CAAC", Slot = "4")]
		protected virtual void OnTriggerStay(Collider col)
		{
		}

		[Token(Token = "0x6002505")]
		[Address(RVA = "0x93CC84", Offset = "0x93CC84", VA = "0x93CC84", Slot = "5")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6002506")]
		[Address(RVA = "0x93CCB4", Offset = "0x93CCB4", VA = "0x93CCB4", Slot = "6")]
		protected virtual void FixedUpdateAttached()
		{
		}

		[Token(Token = "0x6002507")]
		[Address(RVA = "0x93CE04", Offset = "0x93CE04", VA = "0x93CE04", Slot = "7")]
		protected virtual void Attach(NVRAttachPoint point)
		{
		}

		[Token(Token = "0x6002508")]
		[Address(RVA = "0x93CE4C", Offset = "0x93CE4C", VA = "0x93CE4C", Slot = "8")]
		protected virtual void Detach()
		{
		}

		[Token(Token = "0x6002509")]
		[Address(RVA = "0x93CE90", Offset = "0x93CE90", VA = "0x93CE90")]
		public NVRAttachJoint()
		{
		}
	}
	[Token(Token = "0x20004F4")]
	public class NVRAttachPoint : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001F47")]
		private const float MaxVelocityChange = 5f;

		[Token(Token = "0x4001F48")]
		private const float MaxAngularVelocityChange = 10f;

		[Token(Token = "0x4001F49")]
		private const float VelocityMagic = 3000f;

		[Token(Token = "0x4001F4A")]
		private const float AngularVelocityMagic = 25f;

		[Token(Token = "0x4001F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[HideInInspector]
		public Rigidbody Rigidbody;

		[Token(Token = "0x4001F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public NVRInteractableItem Item;

		[Token(Token = "0x4001F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool IsAttached;

		[Token(Token = "0x600250A")]
		[Address(RVA = "0x93CEC4", Offset = "0x93CEC4", VA = "0x93CEC4", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600250B")]
		[Address(RVA = "0x93D1E8", Offset = "0x93D1E8", VA = "0x93D1E8", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600250C")]
		[Address(RVA = "0x93D05C", Offset = "0x93D05C", VA = "0x93D05C")]
		private NVRInteractableItem FindNVRItem(GameObject gameobject)
		{
			return null;
		}

		[Token(Token = "0x600250D")]
		[Address(RVA = "0x93D210", Offset = "0x93D210", VA = "0x93D210", Slot = "6")]
		public virtual void Attached(NVRAttachJoint joint)
		{
		}

		[Token(Token = "0x600250E")]
		[Address(RVA = "0x93D4D8", Offset = "0x93D4D8", VA = "0x93D4D8", Slot = "7")]
		public virtual void Detached(NVRAttachJoint joint)
		{
		}

		[Token(Token = "0x600250F")]
		[Address(RVA = "0x93D530", Offset = "0x93D530", VA = "0x93D530", Slot = "8")]
		public virtual void PullTowards(NVRAttachJoint joint)
		{
		}

		[Token(Token = "0x6002510")]
		[Address(RVA = "0x93DAAC", Offset = "0x93DAAC", VA = "0x93DAAC")]
		public NVRAttachPoint()
		{
		}
	}
	[Token(Token = "0x20004F5")]
	public class AttachPointMapper
	{
		[Token(Token = "0x4001F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Collider, NVRAttachPoint> Colliders;

		[Token(Token = "0x6002511")]
		[Address(RVA = "0x939274", Offset = "0x939274", VA = "0x939274")]
		public static void Register(Collider col, NVRAttachPoint point)
		{
		}

		[Token(Token = "0x6002512")]
		[Address(RVA = "0x939320", Offset = "0x939320", VA = "0x939320")]
		public static void Deregister(Collider col)
		{
		}

		[Token(Token = "0x6002513")]
		[Address(RVA = "0x9393C4", Offset = "0x9393C4", VA = "0x9393C4")]
		public static NVRAttachPoint GetAttachPoint(Collider col)
		{
			return null;
		}

		[Token(Token = "0x6002514")]
		[Address(RVA = "0x939480", Offset = "0x939480", VA = "0x939480")]
		public AttachPointMapper()
		{
		}
	}
	[Token(Token = "0x20004F6")]
	public class NVRButton : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Rigidbody Rigidbody;

		[Token(Token = "0x4001F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A4C50", Offset = "0x3A4C50")]
		public float DistanceToEngage;

		[Token(Token = "0x4001F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A4C84", Offset = "0x3A4C84")]
		public bool ButtonDown;

		[Token(Token = "0x4001F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A4CB8", Offset = "0x3A4CB8")]
		public bool ButtonUp;

		[Token(Token = "0x4001F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A4CEC", Offset = "0x3A4CEC")]
		public bool ButtonIsPushed;

		[Token(Token = "0x4001F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A4D20", Offset = "0x3A4D20")]
		public bool ButtonWasPushed;

		[Token(Token = "0x4001F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Transform InitialPosition;

		[Token(Token = "0x4001F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected float MinDistance;

		[Token(Token = "0x4001F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected float PositionMagic;

		[Token(Token = "0x4001F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected float CurrentDistance;

		[Token(Token = "0x4001F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 InitialLocalPosition;

		[Token(Token = "0x4001F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 ConstrainedPosition;

		[Token(Token = "0x4001F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion InitialLocalRotation;

		[Token(Token = "0x4001F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion ConstrainedRotation;

		[Token(Token = "0x6002516")]
		[Address(RVA = "0x93DAB4", Offset = "0x93DAB4", VA = "0x93DAB4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002517")]
		[Address(RVA = "0x93DE0C", Offset = "0x93DE0C", VA = "0x93DE0C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002518")]
		[Address(RVA = "0x93E0A0", Offset = "0x93E0A0", VA = "0x93E0A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6002519")]
		[Address(RVA = "0x93DFD0", Offset = "0x93DFD0", VA = "0x93DFD0")]
		private void ConstrainPosition()
		{
		}

		[Token(Token = "0x600251A")]
		[Address(RVA = "0x93E0F8", Offset = "0x93E0F8", VA = "0x93E0F8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600251B")]
		[Address(RVA = "0x93E0FC", Offset = "0x93E0FC", VA = "0x93E0FC")]
		public NVRButton()
		{
		}
	}
	[Token(Token = "0x20004F7")]
	public class NVRButtonInputs
	{
		[Token(Token = "0x4001F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool PressDownCached;

		[Token(Token = "0x4001F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		private bool PressDownExpired;

		[Token(Token = "0x4001F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		private bool PressUpCached;

		[Token(Token = "0x4001F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
		private bool PressUpExpired;

		[Token(Token = "0x4001F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool IsPressedCached;

		[Token(Token = "0x4001F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		private bool IsPressedExpired;

		[Token(Token = "0x4001F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		private bool TouchDownCached;

		[Token(Token = "0x4001F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
		private bool TouchDownExpired;

		[Token(Token = "0x4001F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool TouchUpCached;

		[Token(Token = "0x4001F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool TouchUpExpired;

		[Token(Token = "0x4001F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool IsTouchedCached;

		[Token(Token = "0x4001F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		private bool IsTouchedExpired;

		[Token(Token = "0x4001F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool NearTouchDownCached;

		[Token(Token = "0x4001F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		private bool NearTouchDownExpired;

		[Token(Token = "0x4001F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		private bool NearTouchUpCached;

		[Token(Token = "0x4001F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		private bool NearTouchUpExpired;

		[Token(Token = "0x4001F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool IsNearTouchedCached;

		[Token(Token = "0x4001F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool IsNearTouchedExpired;

		[Token(Token = "0x4001F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector2 AxisCached;

		[Token(Token = "0x4001F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool AxisExpired;

		[Token(Token = "0x4001F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float SingleAxisCached;

		[Token(Token = "0x4001F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool SingleAxisExpired;

		[Token(Token = "0x4001F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private NVRInputDevice InputDevice;

		[Token(Token = "0x4001F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private NVRButtons NVRbutton;

		[Token(Token = "0x17000390")]
		public bool PressDown
		{
			[Token(Token = "0x600251C")]
			[Address(RVA = "0x93C9B0", Offset = "0x93C9B0", VA = "0x93C9B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000391")]
		public bool PressUp
		{
			[Token(Token = "0x600251D")]
			[Address(RVA = "0x939F80", Offset = "0x939F80", VA = "0x939F80")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000392")]
		public bool IsPressed
		{
			[Token(Token = "0x600251E")]
			[Address(RVA = "0x93ADFC", Offset = "0x93ADFC", VA = "0x93ADFC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000393")]
		public bool TouchDown
		{
			[Token(Token = "0x600251F")]
			[Address(RVA = "0x93E130", Offset = "0x93E130", VA = "0x93E130")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000394")]
		public bool TouchUp
		{
			[Token(Token = "0x6002520")]
			[Address(RVA = "0x93E194", Offset = "0x93E194", VA = "0x93E194")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000395")]
		public bool IsTouched
		{
			[Token(Token = "0x6002521")]
			[Address(RVA = "0x93E1F8", Offset = "0x93E1F8", VA = "0x93E1F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000396")]
		public bool NearTouchDown
		{
			[Token(Token = "0x6002522")]
			[Address(RVA = "0x93E25C", Offset = "0x93E25C", VA = "0x93E25C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000397")]
		public bool NearTouchUp
		{
			[Token(Token = "0x6002523")]
			[Address(RVA = "0x93E2C0", Offset = "0x93E2C0", VA = "0x93E2C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000398")]
		public bool IsNearTouched
		{
			[Token(Token = "0x6002524")]
			[Address(RVA = "0x93E324", Offset = "0x93E324", VA = "0x93E324")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000399")]
		public Vector2 Axis
		{
			[Token(Token = "0x6002525")]
			[Address(RVA = "0x93E388", Offset = "0x93E388", VA = "0x93E388")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700039A")]
		public float SingleAxis
		{
			[Token(Token = "0x6002526")]
			[Address(RVA = "0x93C94C", Offset = "0x93C94C", VA = "0x93C94C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002527")]
		[Address(RVA = "0x93E404", Offset = "0x93E404", VA = "0x93E404")]
		public void FrameReset(NVRInputDevice inputDevice, NVRButtons button)
		{
		}

		[Token(Token = "0x6002528")]
		[Address(RVA = "0x93E440", Offset = "0x93E440", VA = "0x93E440")]
		public NVRButtonInputs()
		{
		}
	}
	[Token(Token = "0x20004F8")]
	public enum NVRButtons
	{
		[Token(Token = "0x4001F76")]
		System,
		[Token(Token = "0x4001F77")]
		ApplicationMenu,
		[Token(Token = "0x4001F78")]
		Grip,
		[Token(Token = "0x4001F79")]
		DPad_Left,
		[Token(Token = "0x4001F7A")]
		DPad_Up,
		[Token(Token = "0x4001F7B")]
		DPad_Right,
		[Token(Token = "0x4001F7C")]
		DPad_Down,
		[Token(Token = "0x4001F7D")]
		A,
		[Token(Token = "0x4001F7E")]
		B,
		[Token(Token = "0x4001F7F")]
		X,
		[Token(Token = "0x4001F80")]
		Y,
		[Token(Token = "0x4001F81")]
		Axis0,
		[Token(Token = "0x4001F82")]
		Axis1,
		[Token(Token = "0x4001F83")]
		Axis2,
		[Token(Token = "0x4001F84")]
		Axis3,
		[Token(Token = "0x4001F85")]
		Axis4,
		[Token(Token = "0x4001F86")]
		Touchpad,
		[Token(Token = "0x4001F87")]
		Trigger,
		[Token(Token = "0x4001F88")]
		Back,
		[Token(Token = "0x4001F89")]
		Stick
	}
	[Token(Token = "0x20004F9")]
	public class NVRButtonsHelper
	{
		[Token(Token = "0x4001F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NVRButtons[] array;

		[Token(Token = "0x1700039B")]
		public static NVRButtons[] Array
		{
			[Token(Token = "0x6002529")]
			[Address(RVA = "0x93EB80", Offset = "0x93EB80", VA = "0x93EB80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600252A")]
		[Address(RVA = "0x93ED24", Offset = "0x93ED24", VA = "0x93ED24")]
		public NVRButtonsHelper()
		{
		}
	}
	[Token(Token = "0x20004FA")]
	public struct NVRButtonsComparer : IEqualityComparer<NVRButtons>
	{
		[Token(Token = "0x600252C")]
		[Address(RVA = "0x458E34", Offset = "0x458E34", VA = "0x458E34", Slot = "4")]
		public bool Equals(NVRButtons x, NVRButtons y)
		{
			return default(bool);
		}

		[Token(Token = "0x600252D")]
		[Address(RVA = "0x458E44", Offset = "0x458E44", VA = "0x458E44", Slot = "5")]
		public int GetHashCode(NVRButtons obj)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20004FB")]
	public class NVRCanvasInput : BaseInputModule
	{
		[Token(Token = "0x4001F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool GeometryBlocksLaser;

		[Token(Token = "0x4001F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LayerMask LayersThatBlockLaser;

		[Token(Token = "0x4001F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Sprite CursorSprite;

		[Token(Token = "0x4001F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material CursorMaterial;

		[Token(Token = "0x4001F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float NormalCursorScale;

		[Token(Token = "0x4001F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool LaserEnabled;

		[Token(Token = "0x4001F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color LaserColor;

		[Token(Token = "0x4001F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float LaserStartWidth;

		[Token(Token = "0x4001F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float LaserEndWidth;

		[Token(Token = "0x4001F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool OnCanvas;

		[Token(Token = "0x4001F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool CanvasUsed;

		[Token(Token = "0x4001F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RectTransform[] Cursors;

		[Token(Token = "0x4001F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private LineRenderer[] Lasers;

		[Token(Token = "0x4001F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject[] CurrentPoint;

		[Token(Token = "0x4001F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private GameObject[] CurrentPressed;

		[Token(Token = "0x4001F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject[] CurrentDragging;

		[Token(Token = "0x4001F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private PointerEventData[] PointEvents;

		[Token(Token = "0x4001F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool Initialized;

		[Token(Token = "0x4001F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool DelayedInitialized;

		[Token(Token = "0x4001F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Camera ControllerCamera;

		[Token(Token = "0x4001F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private NVRPlayer Player;

		[Token(Token = "0x600252E")]
		[Address(RVA = "0x93ED30", Offset = "0x93ED30", VA = "0x93ED30", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600252F")]
		[Address(RVA = "0x93F778", Offset = "0x93F778", VA = "0x93F778")]
		protected void DelayedCameraInit()
		{
		}

		[Token(Token = "0x6002530")]
		[Address(RVA = "0x93F8C8", Offset = "0x93F8C8", VA = "0x93F8C8")]
		private bool GetLookPointerEventData(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6002531")]
		[Address(RVA = "0x93FD94", Offset = "0x93FD94", VA = "0x93FD94")]
		private bool UpdateCursor(int index, PointerEventData pointData)
		{
			return default(bool);
		}

		[Token(Token = "0x6002532")]
		[Address(RVA = "0x940658", Offset = "0x940658", VA = "0x940658")]
		public void ClearSelection()
		{
		}

		[Token(Token = "0x6002533")]
		[Address(RVA = "0x940710", Offset = "0x940710", VA = "0x940710")]
		private void Select(GameObject go)
		{
		}

		[Token(Token = "0x6002534")]
		[Address(RVA = "0x94080C", Offset = "0x94080C", VA = "0x94080C")]
		private bool SendUpdateEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6002535")]
		[Address(RVA = "0x9409A4", Offset = "0x9409A4", VA = "0x9409A4")]
		private void UpdateCameraPosition(int index)
		{
		}

		[Token(Token = "0x6002536")]
		[Address(RVA = "0x940AF8", Offset = "0x940AF8", VA = "0x940AF8", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6002537")]
		[Address(RVA = "0x940AFC", Offset = "0x940AFC", VA = "0x940AFC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002538")]
		[Address(RVA = "0x9421E8", Offset = "0x9421E8", VA = "0x9421E8")]
		private bool ButtonDown(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6002539")]
		[Address(RVA = "0x9422C0", Offset = "0x9422C0", VA = "0x9422C0")]
		private bool ButtonUp(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x600253A")]
		[Address(RVA = "0x942398", Offset = "0x942398", VA = "0x942398")]
		public NVRCanvasInput()
		{
		}
	}
	[Token(Token = "0x20004FC")]
	public class NVRHand : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20008C8")]
		public class NVRInteractableEvent : UnityEvent<NVRInteractable>
		{
			[Token(Token = "0x6003773")]
			[Address(RVA = "0x948D94", Offset = "0x948D94", VA = "0x948D94")]
			public NVRInteractableEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20008C9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D860", Offset = "0x39D860")]
		private sealed class <>c
		{
			[Token(Token = "0x4002A95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002A96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static Func<KeyValuePair<NVRInteractable, Dictionary<Collider, float>>, bool> <>9__47_0;

			[Token(Token = "0x4002A97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<KeyValuePair<Collider, float>, float> <>9__60_0;

			[Token(Token = "0x6003775")]
			[Address(RVA = "0x948E5C", Offset = "0x948E5C", VA = "0x948E5C")]
			public <>c()
			{
			}

			[Token(Token = "0x6003776")]
			[Address(RVA = "0x948E64", Offset = "0x948E64", VA = "0x948E64")]
			internal bool <get_IsHovering>b__47_0(KeyValuePair<NVRInteractable, Dictionary<Collider, float>> kvp)
			{
				return default(bool);
			}

			[Token(Token = "0x6003777")]
			[Address(RVA = "0x948EDC", Offset = "0x948EDC", VA = "0x948EDC")]
			internal float <UpdateHovering>b__60_0(KeyValuePair<Collider, float> colliderTime)
			{
				return default(float);
			}
		}

		[Token(Token = "0x20008CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D870", Offset = "0x39D870")]
		private sealed class <DoLongHapticPulse>d__66 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002A99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002A9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float seconds;

			[Token(Token = "0x4002A9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public NVRHand <>4__this;

			[Token(Token = "0x4002A9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public NVRButtons button;

			[Token(Token = "0x4002A9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private float <endTime>5__2;

			[Token(Token = "0x170005E0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600377B")]
				[Address(RVA = "0x948FD8", Offset = "0x948FD8", VA = "0x948FD8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005E1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600377D")]
				[Address(RVA = "0x949058", Offset = "0x949058", VA = "0x949058", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003778")]
			[Address(RVA = "0x9468E0", Offset = "0x9468E0", VA = "0x9468E0")]
			[DebuggerHidden]
			public <DoLongHapticPulse>d__66(int <>1__state)
			{
			}

			[Token(Token = "0x6003779")]
			[Address(RVA = "0x948F24", Offset = "0x948F24", VA = "0x948F24", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600377A")]
			[Address(RVA = "0x948F28", Offset = "0x948F28", VA = "0x948F28", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600377C")]
			[Address(RVA = "0x948FE0", Offset = "0x948FE0", VA = "0x948FE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public NVRButtons HoldButton;

		[Token(Token = "0x4001FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NVRButtons UseButton;

		[Token(Token = "0x4001FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[HideInInspector]
		public bool IsRight;

		[Token(Token = "0x4001FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		[HideInInspector]
		public bool IsLeft;

		[Token(Token = "0x4001FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public NVRPlayer Player;

		[Token(Token = "0x4001FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Dictionary<NVRButtons, NVRButtonInputs> Inputs;

		[Token(Token = "0x4001FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public InterationStyle CurrentInteractionStyle;

		[Token(Token = "0x4001FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Rigidbody Rigidbody;

		[Token(Token = "0x4001FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public GameObject CustomModel;

		[Token(Token = "0x4001FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public GameObject CustomPhysicalColliders;

		[Token(Token = "0x4001FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private VisibilityLevel CurrentVisibility;

		[Token(Token = "0x4001FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool VisibilityLocked;

		[Token(Token = "0x4001FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public HandState CurrentHandState;

		[Token(Token = "0x4001FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Dictionary<NVRInteractable, Dictionary<Collider, float>> CurrentlyHoveringOver;

		[Token(Token = "0x4001FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public NVRInteractable CurrentlyInteracting;

		[Token(Token = "0x4001FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public NVRInteractableEvent OnBeginInteraction;

		[Token(Token = "0x4001FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public NVRInteractableEvent OnEndInteraction;

		[Token(Token = "0x4001FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int EstimationSampleIndex;

		[Token(Token = "0x4001FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3[] LastPositions;

		[Token(Token = "0x4001FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion[] LastRotations;

		[Token(Token = "0x4001FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float[] LastDeltas;

		[Token(Token = "0x4001FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int EstimationSamples;

		[Token(Token = "0x4001FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public NVRPhysicalController PhysicalController;

		[Token(Token = "0x4001FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Collider[] GhostColliders;

		[Token(Token = "0x4001FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Renderer[] GhostRenderers;

		[Token(Token = "0x4001FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public NVRInputDevice InputDevice;

		[Token(Token = "0x4001FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject RenderModel;

		[Token(Token = "0x1700039C")]
		public bool HoldButtonDown
		{
			[Token(Token = "0x600253B")]
			[Address(RVA = "0x943ED0", Offset = "0x943ED0", VA = "0x943ED0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700039D")]
		public bool HoldButtonUp
		{
			[Token(Token = "0x600253C")]
			[Address(RVA = "0x943F5C", Offset = "0x943F5C", VA = "0x943F5C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700039E")]
		public bool HoldButtonPressed
		{
			[Token(Token = "0x600253D")]
			[Address(RVA = "0x943FE8", Offset = "0x943FE8", VA = "0x943FE8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700039F")]
		public float HoldButtonAxis
		{
			[Token(Token = "0x600253E")]
			[Address(RVA = "0x944074", Offset = "0x944074", VA = "0x944074")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003A0")]
		public bool UseButtonDown
		{
			[Token(Token = "0x600253F")]
			[Address(RVA = "0x944100", Offset = "0x944100", VA = "0x944100")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003A1")]
		public bool UseButtonUp
		{
			[Token(Token = "0x6002540")]
			[Address(RVA = "0x94418C", Offset = "0x94418C", VA = "0x94418C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003A2")]
		public bool UseButtonPressed
		{
			[Token(Token = "0x6002541")]
			[Address(RVA = "0x944218", Offset = "0x944218", VA = "0x944218")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003A3")]
		public float UseButtonAxis
		{
			[Token(Token = "0x6002542")]
			[Address(RVA = "0x9442A4", Offset = "0x9442A4", VA = "0x9442A4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003A4")]
		public float UseButtonAxisY
		{
			[Token(Token = "0x6002543")]
			[Address(RVA = "0x944330", Offset = "0x944330", VA = "0x944330")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003A5")]
		public bool IsHovering
		{
			[Token(Token = "0x6002544")]
			[Address(RVA = "0x9443CC", Offset = "0x9443CC", VA = "0x9443CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003A6")]
		public bool IsInteracting
		{
			[Token(Token = "0x6002545")]
			[Address(RVA = "0x9444E8", Offset = "0x9444E8", VA = "0x9444E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003A7")]
		public bool HasCustomModel
		{
			[Token(Token = "0x6002546")]
			[Address(RVA = "0x94456C", Offset = "0x94456C", VA = "0x94456C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003A8")]
		public bool IsCurrentlyTracked
		{
			[Token(Token = "0x6002547")]
			[Address(RVA = "0x942130", Offset = "0x942130", VA = "0x942130")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003A9")]
		public Vector3 CurrentForward
		{
			[Token(Token = "0x6002548")]
			[Address(RVA = "0x940550", Offset = "0x940550", VA = "0x940550")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170003AA")]
		public Vector3 CurrentPosition
		{
			[Token(Token = "0x6002549")]
			[Address(RVA = "0x940448", Offset = "0x940448", VA = "0x940448")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600254A")]
		[Address(RVA = "0x9445F0", Offset = "0x9445F0", VA = "0x9445F0", Slot = "4")]
		public virtual void PreInitialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x600254B")]
		[Address(RVA = "0x9450C0", Offset = "0x9450C0", VA = "0x9450C0", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600254C")]
		[Address(RVA = "0x945AB4", Offset = "0x945AB4", VA = "0x945AB4")]
		protected void UpdateHovering()
		{
		}

		[Token(Token = "0x600254D")]
		[Address(RVA = "0x945728", Offset = "0x945728", VA = "0x945728")]
		protected void UpdateButtonStates()
		{
		}

		[Token(Token = "0x600254E")]
		[Address(RVA = "0x945898", Offset = "0x945898", VA = "0x945898")]
		protected void UpdateInteractions()
		{
		}

		[Token(Token = "0x600254F")]
		[Address(RVA = "0x945DE8", Offset = "0x945DE8", VA = "0x945DE8")]
		private void UpdateVisibilityAndColliders()
		{
		}

		[Token(Token = "0x6002550")]
		[Address(RVA = "0x93A52C", Offset = "0x93A52C", VA = "0x93A52C")]
		public void TriggerHapticPulse(ushort durationMicroSec = 500, NVRButtons button = NVRButtons.Grip)
		{
		}

		[Token(Token = "0x6002551")]
		[Address(RVA = "0x946804", Offset = "0x946804", VA = "0x946804")]
		public void LongHapticPulse(float seconds, NVRButtons button = NVRButtons.Grip)
		{
		}

		[Token(Token = "0x6002552")]
		[Address(RVA = "0x946828", Offset = "0x946828", VA = "0x946828")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3ACEB0", Offset = "0x3ACEB0")]
		private IEnumerator DoLongHapticPulse(float seconds, NVRButtons button)
		{
			return null;
		}

		[Token(Token = "0x6002553")]
		[Address(RVA = "0x946900", Offset = "0x946900", VA = "0x946900")]
		public Vector3 GetVelocityEstimation()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002554")]
		[Address(RVA = "0x946B74", Offset = "0x946B74", VA = "0x946B74")]
		public Vector3 GetAngularVelocityEstimation()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002555")]
		[Address(RVA = "0x946D94", Offset = "0x946D94", VA = "0x946D94")]
		public Vector3 GetPositionDelta()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002556")]
		[Address(RVA = "0x946EC8", Offset = "0x946EC8", VA = "0x946EC8")]
		public Quaternion GetRotationDelta()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002557")]
		[Address(RVA = "0x947020", Offset = "0x947020", VA = "0x947020", Slot = "6")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6002558")]
		[Address(RVA = "0x94719C", Offset = "0x94719C", VA = "0x94719C", Slot = "7")]
		public virtual void BeginInteraction(NVRInteractable interactable)
		{
		}

		[Token(Token = "0x6002559")]
		[Address(RVA = "0x9472CC", Offset = "0x9472CC", VA = "0x9472CC", Slot = "8")]
		public virtual void EndInteraction(NVRInteractable item)
		{
		}

		[Token(Token = "0x600255A")]
		[Address(RVA = "0x946028", Offset = "0x946028", VA = "0x946028")]
		private bool PickupClosest()
		{
			return default(bool);
		}

		[Token(Token = "0x600255B")]
		[Address(RVA = "0x947464", Offset = "0x947464", VA = "0x947464", Slot = "9")]
		protected virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x600255C")]
		[Address(RVA = "0x9477D0", Offset = "0x9477D0", VA = "0x9477D0", Slot = "10")]
		protected virtual void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x600255D")]
		[Address(RVA = "0x947A08", Offset = "0x947A08", VA = "0x947A08", Slot = "11")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x600255E")]
		[Address(RVA = "0x947C2C", Offset = "0x947C2C", VA = "0x947C2C")]
		public string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x600255F")]
		[Address(RVA = "0x947CE4", Offset = "0x947CE4", VA = "0x947CE4")]
		public Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x6002560")]
		[Address(RVA = "0x947D1C", Offset = "0x947D1C", VA = "0x947D1C")]
		public void DeregisterInteractable(NVRInteractable interactable)
		{
		}

		[Token(Token = "0x6002561")]
		[Address(RVA = "0x9463C0", Offset = "0x9463C0", VA = "0x9463C0")]
		private void SetVisibility(VisibilityLevel visibility)
		{
		}

		[Token(Token = "0x6002562")]
		[Address(RVA = "0x944DF8", Offset = "0x944DF8", VA = "0x944DF8")]
		protected void InitializeRenderModel()
		{
		}

		[Token(Token = "0x6002563")]
		[Address(RVA = "0x9451B4", Offset = "0x9451B4", VA = "0x9451B4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6002564")]
		[Address(RVA = "0x948CC0", Offset = "0x948CC0", VA = "0x948CC0")]
		public void ForceGhost()
		{
		}

		[Token(Token = "0x6002565")]
		[Address(RVA = "0x948CF0", Offset = "0x948CF0", VA = "0x948CF0")]
		public NVRHand()
		{
		}
	}
	[Token(Token = "0x20004FD")]
	public enum VisibilityLevel
	{
		[Token(Token = "0x4001FBC")]
		Invisible = 0,
		[Token(Token = "0x4001FBD")]
		Ghost = 70,
		[Token(Token = "0x4001FBE")]
		Visible = 100
	}
	[Token(Token = "0x20004FE")]
	public enum HandState
	{
		[Token(Token = "0x4001FC0")]
		Uninitialized,
		[Token(Token = "0x4001FC1")]
		Idle,
		[Token(Token = "0x4001FC2")]
		GripDownNotInteracting,
		[Token(Token = "0x4001FC3")]
		GripDownInteracting,
		[Token(Token = "0x4001FC4")]
		GripToggleOnNotInteracting,
		[Token(Token = "0x4001FC5")]
		GripToggleOnInteracting,
		[Token(Token = "0x4001FC6")]
		GripToggleOff
	}
	[Token(Token = "0x20004FF")]
	public enum InterationStyle
	{
		[Token(Token = "0x4001FC8")]
		Hold,
		[Token(Token = "0x4001FC9")]
		Toggle,
		[Token(Token = "0x4001FCA")]
		ByScript
	}
	[Token(Token = "0x2000500")]
	public class NVRHead : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x6002566")]
		[Address(RVA = "0x949060", Offset = "0x949060", VA = "0x949060", Slot = "4")]
		public virtual void Initialize()
		{
		}

		[Token(Token = "0x6002567")]
		[Address(RVA = "0x949064", Offset = "0x949064", VA = "0x949064")]
		public NVRHead()
		{
		}
	}
	[Token(Token = "0x2000501")]
	public class NVRHelpers
	{
		[Token(Token = "0x4001FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Shader standardShader;

		[Token(Token = "0x170003AB")]
		private static Shader StandardShader
		{
			[Token(Token = "0x6002568")]
			[Address(RVA = "0x94906C", Offset = "0x94906C", VA = "0x94906C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002569")]
		[Address(RVA = "0x9488B8", Offset = "0x9488B8", VA = "0x9488B8")]
		public static void SetTransparent(Material material, [Optional] Color? newcolor)
		{
		}

		[Token(Token = "0x600256A")]
		[Address(RVA = "0x949138", Offset = "0x949138", VA = "0x949138")]
		public static void SetOpaque(Material material)
		{
		}

		[Token(Token = "0x600256B")]
		[Address(RVA = "0x949424", Offset = "0x949424", VA = "0x949424")]
		public static void SetProperty(object obj, string propertyName, object value, bool isPublic)
		{
		}

		[Token(Token = "0x600256C")]
		[Address(RVA = "0x9494C0", Offset = "0x9494C0", VA = "0x9494C0")]
		public static void SetField(object obj, string fieldName, object value, bool isPublic)
		{
		}

		[Token(Token = "0x600256D")]
		[Address(RVA = "0x93A900", Offset = "0x93A900", VA = "0x93A900")]
		public static void LineRendererSetColor(LineRenderer lineRenderer, Color startColor, Color endColor)
		{
		}

		[Token(Token = "0x600256E")]
		[Address(RVA = "0x93AE60", Offset = "0x93AE60", VA = "0x93AE60")]
		public static void LineRendererSetWidth(LineRenderer lineRenderer, float startWidth, float endWidth)
		{
		}

		[Token(Token = "0x600256F")]
		[Address(RVA = "0x94954C", Offset = "0x94954C", VA = "0x94954C")]
		public static Quaternion AverageQuaternion(ref Vector4 cumulative, Quaternion newRotation, Quaternion firstRotation, int addAmount)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002570")]
		[Address(RVA = "0x9497BC", Offset = "0x9497BC", VA = "0x9497BC")]
		public static Quaternion NormalizeQuaternion(float x, float y, float z, float w)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002571")]
		[Address(RVA = "0x949780", Offset = "0x949780", VA = "0x949780")]
		public static Quaternion InverseSignQuaternion(Quaternion q)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002572")]
		[Address(RVA = "0x9496A0", Offset = "0x9496A0", VA = "0x9496A0")]
		public static bool AreQuaternionsClose(Quaternion q1, Quaternion q2)
		{
			return default(bool);
		}

		[Token(Token = "0x6002573")]
		[Address(RVA = "0x94982C", Offset = "0x94982C", VA = "0x94982C")]
		public NVRHelpers()
		{
		}
	}
	[Token(Token = "0x2000502")]
	public abstract class NVRInputDevice : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private NVRHand _hand;

		[Token(Token = "0x170003AC")]
		protected NVRHand Hand
		{
			[Token(Token = "0x6002574")]
			[Address(RVA = "0x949834", Offset = "0x949834", VA = "0x949834")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002575")]
			[Address(RVA = "0x94983C", Offset = "0x94983C", VA = "0x94983C")]
			set
			{
			}
		}

		[Token(Token = "0x170003AD")]
		public abstract bool IsCurrentlyTracked
		{
			[Token(Token = "0x6002577")]
			get;
		}

		[Token(Token = "0x6002576")]
		[Address(RVA = "0x949844", Offset = "0x949844", VA = "0x949844", Slot = "4")]
		public virtual void Initialize(NVRHand hand)
		{
		}

		[Token(Token = "0x6002578")]
		public abstract Collider[] SetupDefaultPhysicalColliders(Transform ModelParent);

		[Token(Token = "0x6002579")]
		public abstract GameObject SetupDefaultRenderModel();

		[Token(Token = "0x600257A")]
		public abstract bool ReadyToInitialize();

		[Token(Token = "0x600257B")]
		public abstract Collider[] SetupDefaultColliders();

		[Token(Token = "0x600257C")]
		public abstract string GetDeviceName();

		[Token(Token = "0x600257D")]
		public abstract void TriggerHapticPulse(ushort durationMicroSec = 500, NVRButtons button = NVRButtons.Touchpad);

		[Token(Token = "0x600257E")]
		public abstract float GetAxis1D(NVRButtons button);

		[Token(Token = "0x600257F")]
		public abstract Vector2 GetAxis2D(NVRButtons button);

		[Token(Token = "0x6002580")]
		public abstract bool GetPressDown(NVRButtons button);

		[Token(Token = "0x6002581")]
		public abstract bool GetPressUp(NVRButtons button);

		[Token(Token = "0x6002582")]
		public abstract bool GetPress(NVRButtons button);

		[Token(Token = "0x6002583")]
		public abstract bool GetTouchDown(NVRButtons button);

		[Token(Token = "0x6002584")]
		public abstract bool GetTouchUp(NVRButtons button);

		[Token(Token = "0x6002585")]
		public abstract bool GetTouch(NVRButtons button);

		[Token(Token = "0x6002586")]
		public abstract bool GetNearTouchDown(NVRButtons button);

		[Token(Token = "0x6002587")]
		public abstract bool GetNearTouchUp(NVRButtons button);

		[Token(Token = "0x6002588")]
		public abstract bool GetNearTouch(NVRButtons button);

		[Token(Token = "0x6002589")]
		[Address(RVA = "0x94984C", Offset = "0x94984C", VA = "0x94984C")]
		protected NVRInputDevice()
		{
		}
	}
	[Token(Token = "0x2000503")]
	public abstract class NVRIntegration
	{
		[Token(Token = "0x4001FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected NVRPlayer Player;

		[Token(Token = "0x600258A")]
		public abstract void Initialize(NVRPlayer player);

		[Token(Token = "0x600258B")]
		public abstract Vector3 GetPlayspaceBounds();

		[Token(Token = "0x600258C")]
		public abstract bool IsHmdPresent();

		[Token(Token = "0x600258D")]
		[Address(RVA = "0x949854", Offset = "0x949854", VA = "0x949854")]
		protected NVRIntegration()
		{
		}
	}
	[Token(Token = "0x2000504")]
	public abstract class NVRInteractable : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Rigidbody Rigidbody;

		[Token(Token = "0x4001FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool CanAttach;

		[Token(Token = "0x4001FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool AllowTwoHanded;

		[Token(Token = "0x4001FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool DisableKinematicOnAttach;

		[Token(Token = "0x4001FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool EnableKinematicOnDetach;

		[Token(Token = "0x4001FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float DropDistance;

		[Token(Token = "0x4001FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float DropDistanceSquared;

		[Token(Token = "0x4001FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool EnableGravityOnDetach;

		[Token(Token = "0x4001FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<NVRHand> AttachedHands;

		[Token(Token = "0x4001FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected Collider[] Colliders;

		[Token(Token = "0x4001FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Vector3 ClosestHeldPoint;

		[Token(Token = "0x170003AE")]
		public NVRHand AttachedHand
		{
			[Token(Token = "0x600258E")]
			[Address(RVA = "0x93A498", Offset = "0x93A498", VA = "0x93A498")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AF")]
		public virtual bool IsAttached
		{
			[Token(Token = "0x600258F")]
			[Address(RVA = "0x94985C", Offset = "0x94985C", VA = "0x94985C", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002590")]
		[Address(RVA = "0x9498E8", Offset = "0x9498E8", VA = "0x9498E8", Slot = "5")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6002591")]
		[Address(RVA = "0x949A24", Offset = "0x949A24", VA = "0x949A24", Slot = "6")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6002592")]
		[Address(RVA = "0x949A34", Offset = "0x949A34", VA = "0x949A34", Slot = "7")]
		public virtual void ResetInteractable()
		{
		}

		[Token(Token = "0x6002593")]
		[Address(RVA = "0x949AC8", Offset = "0x949AC8", VA = "0x949AC8", Slot = "8")]
		public virtual void UpdateColliders()
		{
		}

		[Token(Token = "0x6002594")]
		[Address(RVA = "0x949E40", Offset = "0x949E40", VA = "0x949E40", Slot = "9")]
		protected virtual bool CheckForDrop()
		{
			return default(bool);
		}

		[Token(Token = "0x6002595")]
		[Address(RVA = "0x94A140", Offset = "0x94A140", VA = "0x94A140", Slot = "10")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6002596")]
		[Address(RVA = "0x94A144", Offset = "0x94A144", VA = "0x94A144", Slot = "11")]
		public virtual void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6002597")]
		[Address(RVA = "0x939F0C", Offset = "0x939F0C", VA = "0x939F0C", Slot = "12")]
		public virtual void InteractingUpdate(NVRHand hand)
		{
		}

		[Token(Token = "0x6002598")]
		[Address(RVA = "0x94A1E8", Offset = "0x94A1E8", VA = "0x94A1E8", Slot = "13")]
		public virtual void HoveringUpdate(NVRHand hand, float forTime)
		{
		}

		[Token(Token = "0x6002599")]
		[Address(RVA = "0x94A1EC", Offset = "0x94A1EC", VA = "0x94A1EC")]
		public void ForceDetach([Optional] NVRHand hand)
		{
		}

		[Token(Token = "0x600259A")]
		[Address(RVA = "0x94A35C", Offset = "0x94A35C", VA = "0x94A35C", Slot = "14")]
		public virtual void EndInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x600259B")]
		[Address(RVA = "0x94A474", Offset = "0x94A474", VA = "0x94A474", Slot = "15")]
		protected virtual void DroppedBecauseOfDistance(NVRHand hand)
		{
		}

		[Token(Token = "0x600259C")]
		[Address(RVA = "0x94A4AC", Offset = "0x94A4AC", VA = "0x94A4AC", Slot = "16")]
		public virtual void UseButtonUp()
		{
		}

		[Token(Token = "0x600259D")]
		[Address(RVA = "0x94A4B0", Offset = "0x94A4B0", VA = "0x94A4B0", Slot = "17")]
		public virtual void UseButtonDown()
		{
		}

		[Token(Token = "0x600259E")]
		[Address(RVA = "0x94A4B4", Offset = "0x94A4B4", VA = "0x94A4B4", Slot = "18")]
		public virtual void AddExternalVelocity(Vector3 velocity)
		{
		}

		[Token(Token = "0x600259F")]
		[Address(RVA = "0x94A508", Offset = "0x94A508", VA = "0x94A508", Slot = "19")]
		public virtual void AddExternalAngularVelocity(Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x60025A0")]
		[Address(RVA = "0x94A55C", Offset = "0x94A55C", VA = "0x94A55C", Slot = "20")]
		public virtual void AddExternalRelativeAngularVelocity(Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x60025A1")]
		[Address(RVA = "0x94A5B0", Offset = "0x94A5B0", VA = "0x94A5B0", Slot = "21")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60025A2")]
		[Address(RVA = "0x94AA1C", Offset = "0x94AA1C", VA = "0x94AA1C")]
		protected NVRInteractable()
		{
		}
	}
	[Token(Token = "0x2000505")]
	public class NVRInteractableItem : NVRInteractable
	{
		[Token(Token = "0x4001FD9")]
		protected const float MaxVelocityChange = 10f;

		[Token(Token = "0x4001FDA")]
		protected const float MaxAngularVelocityChange = 20f;

		[Token(Token = "0x4001FDB")]
		protected const float VelocityMagic = 6000f;

		[Token(Token = "0x4001FDC")]
		protected const float AngularVelocityMagic = 50f;

		[Token(Token = "0x4001FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A4DD4", Offset = "0x3A4DD4")]
		public Transform InteractionPoint;

		[Token(Token = "0x4001FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A4E08", Offset = "0x3A4E08")]
		public Vector3 OculusSDKInteractionPointRotation;

		[Token(Token = "0x4001FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public UnityEvent OnUseButtonDown;

		[Token(Token = "0x4001FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent OnUseButtonUp;

		[Token(Token = "0x4001FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public UnityEvent OnHovering;

		[Token(Token = "0x4001FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent OnBeginInteraction;

		[Token(Token = "0x4001FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public UnityEvent OnEndInteraction;

		[Token(Token = "0x4001FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Dictionary<NVRHand, Transform> PickupTransforms;

		[Token(Token = "0x4001FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected Vector3 ExternalVelocity;

		[Token(Token = "0x4001FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Vector3 ExternalAngularVelocity;

		[Token(Token = "0x4001FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected Vector3?[] VelocityHistory;

		[Token(Token = "0x4001FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Vector3?[] AngularVelocityHistory;

		[Token(Token = "0x4001FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		protected int CurrentVelocityHistoryStep;

		[Token(Token = "0x4001FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected float StartingDrag;

		[Token(Token = "0x4001FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected float StartingAngularDrag;

		[Token(Token = "0x4001FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Dictionary<Collider, PhysicMaterial> MaterialCache;

		[Token(Token = "0x60025A3")]
		[Address(RVA = "0x94AAD4", Offset = "0x94AAD4", VA = "0x94AAD4", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60025A4")]
		[Address(RVA = "0x94AB0C", Offset = "0x94AB0C", VA = "0x94AB0C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60025A5")]
		[Address(RVA = "0x94ADD0", Offset = "0x94ADD0", VA = "0x94ADD0", Slot = "22")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60025A6")]
		[Address(RVA = "0x94AE40", Offset = "0x94AE40", VA = "0x94AE40", Slot = "23")]
		protected virtual void GetTargetValues(out Vector3 targetHandPosition, out Quaternion targetHandRotation, out Vector3 targetItemPosition, out Quaternion targetItemRotation)
		{
		}

		[Token(Token = "0x60025A7")]
		[Address(RVA = "0x94B878", Offset = "0x94B878", VA = "0x94B878", Slot = "24")]
		protected virtual void UpdateVelocities()
		{
		}

		[Token(Token = "0x60025A8")]
		[Address(RVA = "0x94BE2C", Offset = "0x94BE2C", VA = "0x94BE2C", Slot = "25")]
		protected virtual void AddExternalVelocities()
		{
		}

		[Token(Token = "0x60025A9")]
		[Address(RVA = "0x94C0AC", Offset = "0x94C0AC", VA = "0x94C0AC", Slot = "18")]
		public override void AddExternalVelocity(Vector3 velocity)
		{
		}

		[Token(Token = "0x60025AA")]
		[Address(RVA = "0x94C1FC", Offset = "0x94C1FC", VA = "0x94C1FC", Slot = "19")]
		public override void AddExternalAngularVelocity(Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x60025AB")]
		[Address(RVA = "0x94C34C", Offset = "0x94C34C", VA = "0x94C34C", Slot = "11")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x60025AC")]
		[Address(RVA = "0x94C840", Offset = "0x94C840", VA = "0x94C840", Slot = "14")]
		public override void EndInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x60025AD")]
		[Address(RVA = "0x94CDA4", Offset = "0x94CDA4", VA = "0x94CDA4", Slot = "13")]
		public override void HoveringUpdate(NVRHand hand, float forTime)
		{
		}

		[Token(Token = "0x60025AE")]
		[Address(RVA = "0x94CDB8", Offset = "0x94CDB8", VA = "0x94CDB8", Slot = "7")]
		public override void ResetInteractable()
		{
		}

		[Token(Token = "0x60025AF")]
		[Address(RVA = "0x93A484", Offset = "0x93A484", VA = "0x93A484", Slot = "17")]
		public override void UseButtonDown()
		{
		}

		[Token(Token = "0x60025B0")]
		[Address(RVA = "0x94CDE8", Offset = "0x94CDE8", VA = "0x94CDE8", Slot = "16")]
		public override void UseButtonUp()
		{
		}

		[Token(Token = "0x60025B1")]
		[Address(RVA = "0x94CDFC", Offset = "0x94CDFC", VA = "0x94CDFC", Slot = "26")]
		protected virtual void ApplyVelocityHistory()
		{
		}

		[Token(Token = "0x60025B2")]
		[Address(RVA = "0x94D11C", Offset = "0x94D11C", VA = "0x94D11C", Slot = "27")]
		protected virtual void ResetVelocityHistory()
		{
		}

		[Token(Token = "0x60025B3")]
		[Address(RVA = "0x94CF34", Offset = "0x94CF34", VA = "0x94CF34")]
		protected Vector3? GetMeanVector(Vector3?[] positions)
		{
			return null;
		}

		[Token(Token = "0x60025B4")]
		[Address(RVA = "0x94C66C", Offset = "0x94C66C", VA = "0x94C66C")]
		protected void DisablePhysicalMaterials()
		{
		}

		[Token(Token = "0x60025B5")]
		[Address(RVA = "0x94CBA4", Offset = "0x94CBA4", VA = "0x94CBA4")]
		protected void EnablePhysicalMaterials()
		{
		}

		[Token(Token = "0x60025B6")]
		[Address(RVA = "0x939FE4", Offset = "0x939FE4", VA = "0x939FE4", Slot = "8")]
		public override void UpdateColliders()
		{
		}

		[Token(Token = "0x60025B7")]
		[Address(RVA = "0x93A1D0", Offset = "0x93A1D0", VA = "0x93A1D0")]
		public NVRInteractableItem()
		{
		}
	}
	[Token(Token = "0x2000506")]
	public class NVRInteractableItemAutoAttach : NVRInteractableItem
	{
		[Token(Token = "0x4001FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float PickupAfterSeconds;

		[Token(Token = "0x60025B8")]
		[Address(RVA = "0x94D1B8", Offset = "0x94D1B8", VA = "0x94D1B8", Slot = "13")]
		public override void HoveringUpdate(NVRHand hand, float forTime)
		{
		}

		[Token(Token = "0x60025B9")]
		[Address(RVA = "0x94D23C", Offset = "0x94D23C", VA = "0x94D23C")]
		public NVRInteractableItemAutoAttach()
		{
		}
	}
	[Token(Token = "0x2000507")]
	public class NVRInteractableItemClippable : NVRInteractableItem
	{
		[Token(Token = "0x60025BA")]
		[Address(RVA = "0x94D248", Offset = "0x94D248", VA = "0x94D248", Slot = "24")]
		protected override void UpdateVelocities()
		{
		}

		[Token(Token = "0x60025BB")]
		[Address(RVA = "0x94D324", Offset = "0x94D324", VA = "0x94D324", Slot = "11")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x60025BC")]
		[Address(RVA = "0x94D358", Offset = "0x94D358", VA = "0x94D358", Slot = "14")]
		public override void EndInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x60025BD")]
		[Address(RVA = "0x94D38C", Offset = "0x94D38C", VA = "0x94D38C")]
		public NVRInteractableItemClippable()
		{
		}
	}
	[Token(Token = "0x2000508")]
	public class NVRInteractableRotator : NVRInteractable
	{
		[Token(Token = "0x4001FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float CurrentAngle;

		[Token(Token = "0x4001FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Transform InitialAttachPoint;

		[Token(Token = "0x170003B0")]
		protected virtual float DeltaMagic
		{
			[Token(Token = "0x60025BE")]
			[Address(RVA = "0x94D390", Offset = "0x94D390", VA = "0x94D390", Slot = "22")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60025BF")]
		[Address(RVA = "0x94D398", Offset = "0x94D398", VA = "0x94D398", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60025C0")]
		[Address(RVA = "0x94D3D0", Offset = "0x94D3D0", VA = "0x94D3D0", Slot = "23")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60025C1")]
		[Address(RVA = "0x94D618", Offset = "0x94D618", VA = "0x94D618", Slot = "11")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x60025C2")]
		[Address(RVA = "0x94D868", Offset = "0x94D868", VA = "0x94D868", Slot = "14")]
		public override void EndInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x60025C3")]
		[Address(RVA = "0x94D954", Offset = "0x94D954", VA = "0x94D954")]
		public NVRInteractableRotator()
		{
		}
	}
	[Token(Token = "0x2000509")]
	public class NVRInteractables : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20008CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D880", Offset = "0x39D880")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4002A9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public NVRInteractable interactable;

			[Token(Token = "0x600377E")]
			[Address(RVA = "0x94DA84", Offset = "0x94DA84", VA = "0x94DA84")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x600377F")]
			[Address(RVA = "0x94DFC8", Offset = "0x94DFC8", VA = "0x94DFC8")]
			internal bool <Deregister>b__0(KeyValuePair<Collider, NVRInteractable> mapping)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20008CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D890", Offset = "0x39D890")]
		private sealed class <>c
		{
			[Token(Token = "0x4002A9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002AA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static Func<KeyValuePair<Collider, NVRInteractable>, Collider> <>9__6_1;

			[Token(Token = "0x4002AA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<KeyValuePair<Collider, NVRInteractable>, NVRInteractable> <>9__6_2;

			[Token(Token = "0x6003781")]
			[Address(RVA = "0x94DF30", Offset = "0x94DF30", VA = "0x94DF30")]
			public <>c()
			{
			}

			[Token(Token = "0x6003782")]
			[Address(RVA = "0x94DF38", Offset = "0x94DF38", VA = "0x94DF38")]
			internal Collider <Deregister>b__6_1(KeyValuePair<Collider, NVRInteractable> mapping)
			{
				return null;
			}

			[Token(Token = "0x6003783")]
			[Address(RVA = "0x94DF80", Offset = "0x94DF80", VA = "0x94DF80")]
			internal NVRInteractable <Deregister>b__6_2(KeyValuePair<Collider, NVRInteractable> mapping)
			{
				return null;
			}
		}

		[Token(Token = "0x4001FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Collider, NVRInteractable> ColliderMapping;

		[Token(Token = "0x4001FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static Dictionary<NVRInteractable, Collider[]> NVRInteractableMapping;

		[Token(Token = "0x4001FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<NVRInteractable> NVRInteractableList;

		[Token(Token = "0x4001FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static bool Initialized;

		[Token(Token = "0x60025C4")]
		[Address(RVA = "0x94D958", Offset = "0x94D958", VA = "0x94D958")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x60025C5")]
		[Address(RVA = "0x949B64", Offset = "0x949B64", VA = "0x949B64")]
		public static void Register(NVRInteractable interactable, Collider[] colliders)
		{
		}

		[Token(Token = "0x60025C6")]
		[Address(RVA = "0x94A634", Offset = "0x94A634", VA = "0x94A634")]
		public static void Deregister(NVRInteractable interactable)
		{
		}

		[Token(Token = "0x60025C7")]
		[Address(RVA = "0x94769C", Offset = "0x94769C", VA = "0x94769C")]
		public static NVRInteractable GetInteractable(Collider collider)
		{
			return null;
		}

		[Token(Token = "0x60025C8")]
		[Address(RVA = "0x94DE40", Offset = "0x94DE40", VA = "0x94DE40")]
		public static List<NVRInteractable> GetAllInteractables()
		{
			return null;
		}

		[Token(Token = "0x60025C9")]
		[Address(RVA = "0x94DEB8", Offset = "0x94DEB8", VA = "0x94DEB8")]
		public NVRInteractables()
		{
		}
	}
	[Token(Token = "0x200050A")]
	public class NVRLetterSpinner : NVRInteractableRotator
	{
		[Token(Token = "0x4001FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string LETTERLIST;

		[Token(Token = "0x4001FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float SnapDistance;

		[Token(Token = "0x4001FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float RungAngleInterval;

		[Token(Token = "0x4001FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 LastAngularVelocity;

		[Token(Token = "0x60025CB")]
		[Address(RVA = "0x94E050", Offset = "0x94E050", VA = "0x94E050", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60025CC")]
		[Address(RVA = "0x94E0F8", Offset = "0x94E0F8", VA = "0x94E0F8", Slot = "23")]
		protected override void FixedUpdate()
		{
		}

		[Token(Token = "0x60025CD")]
		[Address(RVA = "0x94E3F8", Offset = "0x94E3F8", VA = "0x94E3F8", Slot = "11")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x60025CE")]
		[Address(RVA = "0x93AF80", Offset = "0x93AF80", VA = "0x93AF80")]
		public string GetLetter()
		{
			return null;
		}

		[Token(Token = "0x60025CF")]
		[Address(RVA = "0x94E438", Offset = "0x94E438", VA = "0x94E438")]
		public NVRLetterSpinner()
		{
		}
	}
	[Token(Token = "0x200050B")]
	public class NVRLever : NVRInteractableItem
	{
		[Token(Token = "0x20008CD")]
		public enum LeverPosition
		{
			[Token(Token = "0x4002AA3")]
			Off,
			[Token(Token = "0x4002AA4")]
			Mid,
			[Token(Token = "0x4002AA5")]
			On
		}

		[Token(Token = "0x20008CE")]
		public enum RotationAxis
		{
			[Token(Token = "0x4002AA7")]
			XAxis,
			[Token(Token = "0x4002AA8")]
			YAxis,
			[Token(Token = "0x4002AA9")]
			ZAxis
		}

		[Token(Token = "0x20008CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D8A0", Offset = "0x39D8A0")]
		private sealed class <HoldPosition>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002AAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002AAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002AAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NVRLever <>4__this;

			[Token(Token = "0x4002AAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float time;

			[Token(Token = "0x170005E2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003787")]
				[Address(RVA = "0x94F290", Offset = "0x94F290", VA = "0x94F290", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005E3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003789")]
				[Address(RVA = "0x94F310", Offset = "0x94F310", VA = "0x94F310", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003784")]
			[Address(RVA = "0x94EDD4", Offset = "0x94EDD4", VA = "0x94EDD4")]
			[DebuggerHidden]
			public <HoldPosition>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6003785")]
			[Address(RVA = "0x94F17C", Offset = "0x94F17C", VA = "0x94F17C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003786")]
			[Address(RVA = "0x94F180", Offset = "0x94F180", VA = "0x94F180", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003788")]
			[Address(RVA = "0x94F298", Offset = "0x94F298", VA = "0x94F298", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float LastValue;

		[Token(Token = "0x4001FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float CurrentValue;

		[Token(Token = "0x4001FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public LeverPosition LastLeverPosition;

		[Token(Token = "0x4001FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public LeverPosition CurrentLeverPosition;

		[Token(Token = "0x4001FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public bool LeverEngaged;

		[Token(Token = "0x4001FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float EngageWaitTime;

		[Token(Token = "0x4001FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected Transform InitialAttachPoint;

		[Token(Token = "0x4001FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected HingeJoint HingeJoint;

		[Token(Token = "0x4002000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected bool UseMotor;

		[Token(Token = "0x4002001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Quaternion Max;

		[Token(Token = "0x4002002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected Quaternion Mid;

		[Token(Token = "0x4002003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected Quaternion Min;

		[Token(Token = "0x4002004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected float AngleRange;

		[Token(Token = "0x170003B1")]
		protected virtual float DeltaMagic
		{
			[Token(Token = "0x60025D1")]
			[Address(RVA = "0x94E540", Offset = "0x94E540", VA = "0x94E540", Slot = "28")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60025D2")]
		[Address(RVA = "0x94E548", Offset = "0x94E548", VA = "0x94E548", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60025D3")]
		[Address(RVA = "0x94EA68", Offset = "0x94EA68", VA = "0x94EA68", Slot = "10")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60025D4")]
		[Address(RVA = "0x94EC48", Offset = "0x94EC48", VA = "0x94EC48", Slot = "29")]
		protected virtual void Engage()
		{
		}

		[Token(Token = "0x60025D5")]
		[Address(RVA = "0x94ED30", Offset = "0x94ED30", VA = "0x94ED30")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3ACF20", Offset = "0x3ACF20")]
		private IEnumerator HoldPosition(float time)
		{
			return null;
		}

		[Token(Token = "0x60025D6")]
		[Address(RVA = "0x94EDF4", Offset = "0x94EDF4", VA = "0x94EDF4", Slot = "11")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x60025D7")]
		[Address(RVA = "0x94F064", Offset = "0x94F064", VA = "0x94F064", Slot = "14")]
		public override void EndInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x60025D8")]
		[Address(RVA = "0x94EB10", Offset = "0x94EB10", VA = "0x94EB10")]
		private float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x60025D9")]
		[Address(RVA = "0x94EC00", Offset = "0x94EC00", VA = "0x94EC00")]
		private LeverPosition GetPosition()
		{
			return default(LeverPosition);
		}

		[Token(Token = "0x60025DA")]
		[Address(RVA = "0x94F170", Offset = "0x94F170", VA = "0x94F170")]
		public NVRLever()
		{
		}
	}
	[Token(Token = "0x200050C")]
	public class NVRPhysicalController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20008D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D8B0", Offset = "0x39D8B0")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4002AAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Type componentType;

			[Token(Token = "0x600378A")]
			[Address(RVA = "0x9501C0", Offset = "0x9501C0", VA = "0x9501C0")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x600378B")]
			[Address(RVA = "0x950ED4", Offset = "0x950ED4", VA = "0x950ED4")]
			internal bool <Initialize>b__0(Type keepType)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4002005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private NVRHand Hand;

		[Token(Token = "0x4002006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool State;

		[Token(Token = "0x4002007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Rigidbody Rigidbody;

		[Token(Token = "0x4002008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public GameObject PhysicalController;

		[Token(Token = "0x4002009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Collider[] Colliders;

		[Token(Token = "0x400200A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Vector3 ClosestHeldPoint;

		[Token(Token = "0x400200B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected float AttachedRotationMagic;

		[Token(Token = "0x400200C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected float AttachedPositionMagic;

		[Token(Token = "0x400200D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Type[] KeepTypes;

		[Token(Token = "0x170003B2")]
		protected float DropDistance
		{
			[Token(Token = "0x60025DB")]
			[Address(RVA = "0x9501B8", Offset = "0x9501B8", VA = "0x9501B8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60025DC")]
		[Address(RVA = "0x94814C", Offset = "0x94814C", VA = "0x94814C")]
		public void Initialize(NVRHand trackingHand, bool initialState)
		{
		}

		[Token(Token = "0x60025DD")]
		[Address(RVA = "0x9480C0", Offset = "0x9480C0", VA = "0x9480C0")]
		public void Kill()
		{
		}

		[Token(Token = "0x60025DE")]
		[Address(RVA = "0x95071C", Offset = "0x95071C", VA = "0x95071C")]
		private bool CheckForDrop()
		{
			return default(bool);
		}

		[Token(Token = "0x60025DF")]
		[Address(RVA = "0x950850", Offset = "0x950850", VA = "0x950850")]
		private void UpdatePosition()
		{
		}

		[Token(Token = "0x60025E0")]
		[Address(RVA = "0x950C24", Offset = "0x950C24", VA = "0x950C24", Slot = "4")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60025E1")]
		[Address(RVA = "0x950C5C", Offset = "0x950C5C", VA = "0x950C5C", Slot = "5")]
		protected virtual void DroppedBecauseOfDistance()
		{
		}

		[Token(Token = "0x60025E2")]
		[Address(RVA = "0x947E40", Offset = "0x947E40", VA = "0x947E40")]
		public void On()
		{
		}

		[Token(Token = "0x60025E3")]
		[Address(RVA = "0x947E08", Offset = "0x947E08", VA = "0x947E08")]
		public void Off()
		{
		}

		[Token(Token = "0x60025E4")]
		[Address(RVA = "0x9501C8", Offset = "0x9501C8", VA = "0x9501C8")]
		protected void SetupCustomModel()
		{
		}

		[Token(Token = "0x60025E5")]
		[Address(RVA = "0x950C80", Offset = "0x950C80", VA = "0x950C80")]
		public NVRPhysicalController()
		{
		}
	}
	[Token(Token = "0x200050D")]
	public class NVRPlayer : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20008D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D8C0", Offset = "0x39D8C0")]
		private sealed class <>c
		{
			[Token(Token = "0x4002AAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002AB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static Func<NVRPlayer, bool> <>9__4_0;

			[Token(Token = "0x600378D")]
			[Address(RVA = "0x954390", Offset = "0x954390", VA = "0x954390")]
			public <>c()
			{
			}

			[Token(Token = "0x600378E")]
			[Address(RVA = "0x954398", Offset = "0x954398", VA = "0x954398")]
			internal bool <get_Instance>b__4_0(NVRPlayer player)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400200E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "DecimalConstantAttribute", RVA = "0x3A4E4C", Offset = "0x3A4E4C")]
		public static readonly decimal NewtonVRVersion;

		[Token(Token = "0x400200F")]
		public const float NewtonVRExpectedDeltaTime = 0.0111f;

		[Token(Token = "0x4002010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static List<NVRPlayer> Instances;

		[Token(Token = "0x4002011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[HideInInspector]
		public bool SteamVREnabled;

		[Token(Token = "0x4002012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		[HideInInspector]
		public bool OculusSDKEnabled;

		[Token(Token = "0x4002013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		[HideInInspector]
		public bool WindowsMREnabled;

		[Token(Token = "0x4002014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
		[HideInInspector]
		public bool PicoEnabled;

		[Token(Token = "0x4002015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InterationStyle InteractionStyle;

		[Token(Token = "0x4002016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool PhysicalHands;

		[Token(Token = "0x4002017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool MakeControllerInvisibleOnInteraction;

		[Token(Token = "0x4002018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool AutomaticallySetControllerTransparency;

		[Token(Token = "0x4002019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public bool VibrateOnHover;

		[Token(Token = "0x400201A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int VelocityHistorySteps;

		[Token(Token = "0x400201B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public UnityEvent OnInitialized;

		[Token(Token = "0x400201C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x3A4EC8", Offset = "0x3A4EC8")]
		public bool EnableEditorPlayerPreview;

		[Token(Token = "0x400201D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Mesh EditorPlayerPreview;

		[Token(Token = "0x400201E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Mesh EditorPlayspacePreview;

		[Token(Token = "0x400201F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool EditorPlayspaceOverride;

		[Token(Token = "0x4002020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2 EditorPlayspaceDefault;

		[Token(Token = "0x4002021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x3A4ED8", Offset = "0x3A4ED8")]
		[HideInInspector]
		public bool OverrideAll;

		[Token(Token = "0x4002022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public GameObject OverrideAllLeftHand;

		[Token(Token = "0x4002023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public GameObject OverrideAllLeftHandPhysicalColliders;

		[Token(Token = "0x4002024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public GameObject OverrideAllRightHand;

		[Token(Token = "0x4002025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public GameObject OverrideAllRightHandPhysicalColliders;

		[Token(Token = "0x4002026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		public bool OverrideSteamVR;

		[Token(Token = "0x4002027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public GameObject OverrideSteamVRLeftHand;

		[Token(Token = "0x4002028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public GameObject OverrideSteamVRLeftHandPhysicalColliders;

		[Token(Token = "0x4002029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public GameObject OverrideSteamVRRightHand;

		[Token(Token = "0x400202A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		public GameObject OverrideSteamVRRightHandPhysicalColliders;

		[Token(Token = "0x400202B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public bool OverrideOculus;

		[Token(Token = "0x400202C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[HideInInspector]
		public GameObject OverrideOculusLeftHand;

		[Token(Token = "0x400202D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public GameObject OverrideOculusLeftHandPhysicalColliders;

		[Token(Token = "0x400202E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[HideInInspector]
		public GameObject OverrideOculusRightHand;

		[Token(Token = "0x400202F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public GameObject OverrideOculusRightHandPhysicalColliders;

		[Token(Token = "0x4002030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x3A4FE8", Offset = "0x3A4FE8")]
		public NVRHead Head;

		[Token(Token = "0x4002031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public NVRHand LeftHand;

		[Token(Token = "0x4002032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public NVRHand RightHand;

		[Token(Token = "0x4002033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public NVRHand[] Hands;

		[Token(Token = "0x4002034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[HideInInspector]
		public NVRSDKIntegrations CurrentIntegrationType;

		[Token(Token = "0x4002035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private NVRIntegration Integration;

		[Token(Token = "0x4002036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Dictionary<Collider, NVRHand> ColliderToHandMapping;

		[Token(Token = "0x4002037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x3A5018", Offset = "0x3A5018")]
		public bool DEBUGEnableFallback2D;

		[Token(Token = "0x4002038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		public bool DEBUGDropFrames;

		[Token(Token = "0x4002039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int DEBUGSleepPerFrame;

		[Token(Token = "0x400203A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool AutoSetFixedDeltaTime;

		[Token(Token = "0x400203B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool NotifyOnVersionUpdate;

		[Token(Token = "0x170003B3")]
		public static NVRPlayer Instance
		{
			[Token(Token = "0x60025E6")]
			[Address(RVA = "0x94AC80", Offset = "0x94AC80", VA = "0x94AC80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B4")]
		public Vector3 PlayspaceSize
		{
			[Token(Token = "0x60025E7")]
			[Address(RVA = "0x953728", Offset = "0x953728", VA = "0x953728")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60025E8")]
		[Address(RVA = "0x953980", Offset = "0x953980", VA = "0x953980")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025E9")]
		[Address(RVA = "0x953D88", Offset = "0x953D88", VA = "0x953D88")]
		private void SetupIntegration(bool logOutput = true)
		{
		}

		[Token(Token = "0x60025EA")]
		[Address(RVA = "0x953F08", Offset = "0x953F08", VA = "0x953F08")]
		private NVRSDKIntegrations DetermineCurrentIntegration(bool logOutput = true)
		{
			return default(NVRSDKIntegrations);
		}

		[Token(Token = "0x60025EB")]
		[Address(RVA = "0x947F84", Offset = "0x947F84", VA = "0x947F84")]
		public void RegisterHand(NVRHand hand)
		{
		}

		[Token(Token = "0x60025EC")]
		[Address(RVA = "0x9540A8", Offset = "0x9540A8", VA = "0x9540A8")]
		public NVRHand GetHand(Collider collider)
		{
			return null;
		}

		[Token(Token = "0x60025ED")]
		[Address(RVA = "0x94DA8C", Offset = "0x94DA8C", VA = "0x94DA8C")]
		public static void DeregisterInteractable(NVRInteractable interactable)
		{
		}

		[Token(Token = "0x60025EE")]
		[Address(RVA = "0x95411C", Offset = "0x95411C", VA = "0x95411C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60025EF")]
		[Address(RVA = "0x9541C0", Offset = "0x9541C0", VA = "0x9541C0")]
		private void Update()
		{
		}

		[Token(Token = "0x60025F0")]
		[Address(RVA = "0x9541D8", Offset = "0x9541D8", VA = "0x9541D8")]
		public NVRPlayer()
		{
		}
	}
	[Token(Token = "0x200050E")]
	public enum NVRSDKIntegrations
	{
		[Token(Token = "0x400203D")]
		None,
		[Token(Token = "0x400203E")]
		FallbackNonVR,
		[Token(Token = "0x400203F")]
		SteamVR,
		[Token(Token = "0x4002040")]
		Oculus,
		[Token(Token = "0x4002041")]
		WindowsMR,
		[Token(Token = "0x4002042")]
		Pico
	}
	[Token(Token = "0x200050F")]
	public class NVRSlider : NVRInteractable
	{
		[Token(Token = "0x4002043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A5028", Offset = "0x3A5028")]
		public float CurrentValue;

		[Token(Token = "0x4002044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A505C", Offset = "0x3A505C")]
		public Transform StartPoint;

		[Token(Token = "0x4002045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A5090", Offset = "0x3A5090")]
		public Transform EndPoint;

		[Token(Token = "0x4002046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected float AttachedPositionMagic;

		[Token(Token = "0x4002047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected Transform PickupTransform;

		[Token(Token = "0x4002048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Vector3 SliderPath;

		[Token(Token = "0x60025F2")]
		[Address(RVA = "0x954474", Offset = "0x954474", VA = "0x954474", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60025F3")]
		[Address(RVA = "0x954724", Offset = "0x954724", VA = "0x954724", Slot = "22")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60025F4")]
		[Address(RVA = "0x954AEC", Offset = "0x954AEC", VA = "0x954AEC", Slot = "11")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x60025F5")]
		[Address(RVA = "0x954CB8", Offset = "0x954CB8", VA = "0x954CB8", Slot = "14")]
		public override void EndInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x60025F6")]
		[Address(RVA = "0x954A38", Offset = "0x954A38", VA = "0x954A38")]
		protected Vector3 ProjectVelocityOnPath(Vector3 velocity, Vector3 path)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60025F7")]
		[Address(RVA = "0x954DA4", Offset = "0x954DA4", VA = "0x954DA4")]
		public void SetValue(float newValue)
		{
		}

		[Token(Token = "0x60025F8")]
		[Address(RVA = "0x954ED4", Offset = "0x954ED4", VA = "0x954ED4")]
		public NVRSlider()
		{
		}
	}
	[Token(Token = "0x2000510")]
	public class NVRSwitch : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool CurrentState;

		[Token(Token = "0x400204A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		public bool LastState;

		[Token(Token = "0x400204B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		private bool FixedState;

		[Token(Token = "0x400204C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform OnButton;

		[Token(Token = "0x400204D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Renderer OnButtonRenderer;

		[Token(Token = "0x400204E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform OffButton;

		[Token(Token = "0x400204F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Renderer OffButtonRenderer;

		[Token(Token = "0x4002050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody Rigidbody;

		[Token(Token = "0x4002051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float ForceMagic;

		[Token(Token = "0x60025F9")]
		[Address(RVA = "0x9551FC", Offset = "0x9551FC", VA = "0x9551FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025FA")]
		[Address(RVA = "0x955548", Offset = "0x955548", VA = "0x955548")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60025FB")]
		[Address(RVA = "0x955854", Offset = "0x955854", VA = "0x955854")]
		private void Update()
		{
		}

		[Token(Token = "0x60025FC")]
		[Address(RVA = "0x955268", Offset = "0x955268", VA = "0x955268")]
		private void SetRotation(bool forState)
		{
		}

		[Token(Token = "0x60025FD")]
		[Address(RVA = "0x955868", Offset = "0x955868", VA = "0x955868")]
		public NVRSwitch()
		{
		}
	}
	[Token(Token = "0x2000511")]
	public class NVRTeleportController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Transform BeamStart;

		[Token(Token = "0x4002053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private NVRTeleporter teleporter;

		[Token(Token = "0x4002054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int controllerIndex;

		[Token(Token = "0x4002055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool held;

		[Token(Token = "0x4002056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3? validTeleportPosition;

		[Token(Token = "0x170003B5")]
		private NVRHand nvrHand
		{
			[Token(Token = "0x60025FE")]
			[Address(RVA = "0x95588C", Offset = "0x95588C", VA = "0x95588C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025FF")]
		[Address(RVA = "0x955978", Offset = "0x955978", VA = "0x955978")]
		private void Start()
		{
		}

		[Token(Token = "0x6002600")]
		[Address(RVA = "0x955B50", Offset = "0x955B50", VA = "0x955B50")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002601")]
		[Address(RVA = "0x956D0C", Offset = "0x956D0C", VA = "0x956D0C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002602")]
		[Address(RVA = "0x956DB8", Offset = "0x956DB8", VA = "0x956DB8")]
		public NVRTeleportController()
		{
		}
	}
	[Token(Token = "0x2000512")]
	public class NVRTeleporter : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20008D2")]
		public class TeleportPreview
		{
			[Token(Token = "0x4002AB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public LineRenderer ArcLine;

			[Token(Token = "0x4002AB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public GameObject PlaySpaceDisplay;

			[Token(Token = "0x4002AB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject InvalidPointDisplay;

			[Token(Token = "0x4002AB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public GameObject TeleportTargetDisplay;

			[Token(Token = "0x600378F")]
			[Address(RVA = "0x7AAE24", Offset = "0x7AAE24", VA = "0x7AAE24")]
			public TeleportPreview()
			{
			}
		}

		[Token(Token = "0x20008D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D8D0", Offset = "0x39D8D0")]
		private sealed class <DoTunnelTeleport>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002AB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002AB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002AB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NVRTeleporter <>4__this;

			[Token(Token = "0x4002AB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 teleportPosition;

			[Token(Token = "0x4002AB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float <easeInStartTime>5__2;

			[Token(Token = "0x4002ABA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private float <easeInEndTime>5__3;

			[Token(Token = "0x4002ABB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <moveTimeStart>5__4;

			[Token(Token = "0x4002ABC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <moveTimeEnd>5__5;

			[Token(Token = "0x4002ABD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 <initialPosition>5__6;

			[Token(Token = "0x4002ABE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 <endPosition>5__7;

			[Token(Token = "0x4002ABF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <easeOutStartTime>5__8;

			[Token(Token = "0x4002AC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <easeOutEndTime>5__9;

			[Token(Token = "0x170005E4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003793")]
				[Address(RVA = "0x7AAD9C", Offset = "0x7AAD9C", VA = "0x7AAD9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005E5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003795")]
				[Address(RVA = "0x7AAE1C", Offset = "0x7AAE1C", VA = "0x7AAE1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003790")]
			[Address(RVA = "0x7AA850", Offset = "0x7AA850", VA = "0x7AA850")]
			[DebuggerHidden]
			public <DoTunnelTeleport>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x6003791")]
			[Address(RVA = "0x7AA870", Offset = "0x7AA870", VA = "0x7AA870", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003792")]
			[Address(RVA = "0x7AA874", Offset = "0x7AA874", VA = "0x7AA874", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003794")]
			[Address(RVA = "0x7AADA4", Offset = "0x7AADA4", VA = "0x7AADA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool TunnelTeleport;

		[Token(Token = "0x4002058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float TunnelOverTime;

		[Token(Token = "0x4002059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float VignettePower;

		[Token(Token = "0x400205A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float VignetteEaseInTime;

		[Token(Token = "0x400205B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float VignetteEaseOutTime;

		[Token(Token = "0x400205C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LineRenderer ArcRendererDisplay;

		[Token(Token = "0x400205D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public GameObject PlaySpaceDisplay;

		[Token(Token = "0x400205E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject InvalidPointDisplay;

		[Token(Token = "0x400205F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public GameObject TargetDisplay;

		[Token(Token = "0x4002060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool LimitToHorizontal;

		[Token(Token = "0x4002061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float LimitSensitivity;

		[Token(Token = "0x4002062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public NVRButtons TeleportButton;

		[Token(Token = "0x4002063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public LayerMask TeleportSurfaceMask;

		[Token(Token = "0x4002064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LayerMask TeleportBlockMask;

		[Token(Token = "0x4002065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private LayerMask fullMask;

		[Token(Token = "0x4002066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float ArcStrength;

		[Token(Token = "0x4002067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float ArcMaxLength;

		[Token(Token = "0x4002068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float SampleFrequency;

		[Token(Token = "0x4002069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float curveMod;

		[Token(Token = "0x400206A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float acceleration;

		[Token(Token = "0x400206B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float arcLineDisplayOffset;

		[Token(Token = "0x400206C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float playspaceVerticalOffset;

		[Token(Token = "0x400206D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Dictionary<int, TeleportPreview> teleportPreviews;

		[Token(Token = "0x400206E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private NVRPlayer player;

		[Token(Token = "0x170003B6")]
		private int samplePoints
		{
			[Token(Token = "0x6002603")]
			[Address(RVA = "0x956DC0", Offset = "0x956DC0", VA = "0x956DC0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002604")]
		[Address(RVA = "0x956E50", Offset = "0x956E50", VA = "0x956E50")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002605")]
		[Address(RVA = "0x956EF4", Offset = "0x956EF4", VA = "0x956EF4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002606")]
		[Address(RVA = "0x9570C4", Offset = "0x9570C4", VA = "0x9570C4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6002607")]
		[Address(RVA = "0x955D24", Offset = "0x955D24", VA = "0x955D24")]
		public Vector3? UpdateArcTeleport(Transform origin, int controllerIndex)
		{
			return null;
		}

		[Token(Token = "0x6002608")]
		[Address(RVA = "0x956AA4", Offset = "0x956AA4", VA = "0x956AA4")]
		public void HideArcTeleport(int controllerIndex)
		{
		}

		[Token(Token = "0x6002609")]
		[Address(RVA = "0x957190", Offset = "0x957190", VA = "0x957190")]
		private bool CheckTeleportCurve(Vector3 startingPoint, Vector3 initialVelocity, Vector3 initialAcceleration, out List<Vector3> points, out bool hit, out RaycastHit hitInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x600260A")]
		[Address(RVA = "0x956CC0", Offset = "0x956CC0", VA = "0x956CC0")]
		public void TeleportPlayer(Vector3 teleportPosition)
		{
		}

		[Token(Token = "0x600260B")]
		[Address(RVA = "0x95770C", Offset = "0x95770C", VA = "0x95770C")]
		private void MovePosition(Vector3 newPosition)
		{
		}

		[Token(Token = "0x600260C")]
		[Address(RVA = "0x957C24", Offset = "0x957C24", VA = "0x957C24")]
		private Vector3 GetPlayerPositionFromCameraPosition(Vector3 newCameraFloor)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600260D")]
		[Address(RVA = "0x957E04", Offset = "0x957E04", VA = "0x957E04")]
		private void MovePlayer(Vector3 newPlayerPosition)
		{
		}

		[Token(Token = "0x600260E")]
		[Address(RVA = "0x957668", Offset = "0x957668", VA = "0x957668")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3ACF90", Offset = "0x3ACF90")]
		private IEnumerator DoTunnelTeleport(Vector3 teleportPosition)
		{
			return null;
		}

		[Token(Token = "0x600260F")]
		[Address(RVA = "0x9575C4", Offset = "0x9575C4", VA = "0x9575C4")]
		private Vector3 CurveDerivitive(Vector3 velocity, Vector3 acceleration, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002610")]
		[Address(RVA = "0x958200", Offset = "0x958200", VA = "0x958200")]
		private float CurveDerivitive(float velocity, float acceleration, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6002611")]
		[Address(RVA = "0x9575FC", Offset = "0x9575FC", VA = "0x9575FC")]
		private Vector3 Curve(Vector3 point, Vector3 velocity, Vector3 acceleration, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002612")]
		[Address(RVA = "0x958218", Offset = "0x958218", VA = "0x958218")]
		private float Curve(float point, float velocity, float acceleration, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6002613")]
		[Address(RVA = "0x958248", Offset = "0x958248", VA = "0x958248")]
		public NVRTeleporter()
		{
		}
	}
	[Token(Token = "0x2000513")]
	public class NVRUIIgnoreRaycast : UnityEngine.MonoBehaviour, ICanvasRaycastFilter
	{
		[Token(Token = "0x6002614")]
		[Address(RVA = "0x7AAE2C", Offset = "0x7AAE2C", VA = "0x7AAE2C", Slot = "4")]
		public bool IsRaycastLocationValid(Vector2 sp, Camera eventCamera)
		{
			return default(bool);
		}

		[Token(Token = "0x6002615")]
		[Address(RVA = "0x7AAE34", Offset = "0x7AAE34", VA = "0x7AAE34")]
		public NVRUIIgnoreRaycast()
		{
		}
	}
	[Token(Token = "0x2000514")]
	public class NVRVignette : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400206F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Shader vignetteShader;

		[Token(Token = "0x4002070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int vignetteProperty;

		[Token(Token = "0x4002071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Material material;

		[Token(Token = "0x4002072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static NVRVignette instance;

		[Token(Token = "0x6002616")]
		[Address(RVA = "0x7AAE3C", Offset = "0x7AAE3C", VA = "0x7AAE3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002617")]
		[Address(RVA = "0x7AAD64", Offset = "0x7AAD64", VA = "0x7AAD64")]
		public void SetAmount(float newFeather)
		{
		}

		[Token(Token = "0x6002618")]
		[Address(RVA = "0x7AAF4C", Offset = "0x7AAF4C", VA = "0x7AAF4C")]
		private void OnRenderImage(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x6002619")]
		[Address(RVA = "0x7AAFDC", Offset = "0x7AAFDC", VA = "0x7AAFDC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600261A")]
		[Address(RVA = "0x7AB05C", Offset = "0x7AB05C", VA = "0x7AB05C")]
		public NVRVignette()
		{
		}
	}
	[Token(Token = "0x2000515")]
	public class NVROculusInputDevice : NVRInputDevice
	{
		[Token(Token = "0x170003B7")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x600261B")]
			[Address(RVA = "0x94F438", Offset = "0x94F438", VA = "0x94F438", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600261C")]
		[Address(RVA = "0x94F4B0", Offset = "0x94F4B0", VA = "0x94F4B0", Slot = "12")]
		public override float GetAxis1D(NVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x600261D")]
		[Address(RVA = "0x94F528", Offset = "0x94F528", VA = "0x94F528", Slot = "13")]
		public override Vector2 GetAxis2D(NVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600261E")]
		[Address(RVA = "0x94F5A0", Offset = "0x94F5A0", VA = "0x94F5A0", Slot = "10")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x600261F")]
		[Address(RVA = "0x94F618", Offset = "0x94F618", VA = "0x94F618", Slot = "22")]
		public override bool GetNearTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002620")]
		[Address(RVA = "0x94F690", Offset = "0x94F690", VA = "0x94F690", Slot = "20")]
		public override bool GetNearTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002621")]
		[Address(RVA = "0x94F708", Offset = "0x94F708", VA = "0x94F708", Slot = "21")]
		public override bool GetNearTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002622")]
		[Address(RVA = "0x94F780", Offset = "0x94F780", VA = "0x94F780", Slot = "16")]
		public override bool GetPress(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002623")]
		[Address(RVA = "0x94F7F8", Offset = "0x94F7F8", VA = "0x94F7F8", Slot = "14")]
		public override bool GetPressDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002624")]
		[Address(RVA = "0x94F870", Offset = "0x94F870", VA = "0x94F870", Slot = "15")]
		public override bool GetPressUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002625")]
		[Address(RVA = "0x94F8E8", Offset = "0x94F8E8", VA = "0x94F8E8", Slot = "19")]
		public override bool GetTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002626")]
		[Address(RVA = "0x94F960", Offset = "0x94F960", VA = "0x94F960", Slot = "17")]
		public override bool GetTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002627")]
		[Address(RVA = "0x94F9D8", Offset = "0x94F9D8", VA = "0x94F9D8", Slot = "18")]
		public override bool GetTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002628")]
		[Address(RVA = "0x94FA50", Offset = "0x94FA50", VA = "0x94FA50", Slot = "8")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6002629")]
		[Address(RVA = "0x94FAC8", Offset = "0x94FAC8", VA = "0x94FAC8", Slot = "9")]
		public override Collider[] SetupDefaultColliders()
		{
			return null;
		}

		[Token(Token = "0x600262A")]
		[Address(RVA = "0x94FB40", Offset = "0x94FB40", VA = "0x94FB40", Slot = "6")]
		public override Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x600262B")]
		[Address(RVA = "0x94FBB8", Offset = "0x94FBB8", VA = "0x94FBB8", Slot = "7")]
		public override GameObject SetupDefaultRenderModel()
		{
			return null;
		}

		[Token(Token = "0x600262C")]
		[Address(RVA = "0x94FC30", Offset = "0x94FC30", VA = "0x94FC30", Slot = "11")]
		public override void TriggerHapticPulse(ushort durationMicroSec = 500, NVRButtons button = NVRButtons.Touchpad)
		{
		}

		[Token(Token = "0x600262D")]
		[Address(RVA = "0x94FCA8", Offset = "0x94FCA8", VA = "0x94FCA8")]
		public NVROculusInputDevice()
		{
		}
	}
	[Token(Token = "0x2000516")]
	public class NVROculusIntegration : NVRIntegration
	{
		[Token(Token = "0x600262E")]
		[Address(RVA = "0x94FCB0", Offset = "0x94FCB0", VA = "0x94FCB0", Slot = "4")]
		public override void Initialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x600262F")]
		[Address(RVA = "0x94FCB4", Offset = "0x94FCB4", VA = "0x94FCB4", Slot = "5")]
		public override Vector3 GetPlayspaceBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002630")]
		[Address(RVA = "0x94FD30", Offset = "0x94FD30", VA = "0x94FD30", Slot = "6")]
		public override bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6002631")]
		[Address(RVA = "0x94FD38", Offset = "0x94FD38", VA = "0x94FD38")]
		public NVROculusIntegration()
		{
		}
	}
	[Token(Token = "0x2000517")]
	public class NVRSteamVRInputDevice : NVRInputDevice
	{
		[Token(Token = "0x170003B8")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x6002632")]
			[Address(RVA = "0x954EE4", Offset = "0x954EE4", VA = "0x954EE4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002633")]
		[Address(RVA = "0x954F7C", Offset = "0x954F7C", VA = "0x954F7C", Slot = "12")]
		public override float GetAxis1D(NVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x6002634")]
		[Address(RVA = "0x954F90", Offset = "0x954F90", VA = "0x954F90", Slot = "13")]
		public override Vector2 GetAxis2D(NVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002635")]
		[Address(RVA = "0x955010", Offset = "0x955010", VA = "0x955010", Slot = "10")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x6002636")]
		[Address(RVA = "0x955064", Offset = "0x955064", VA = "0x955064", Slot = "22")]
		public override bool GetNearTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002637")]
		[Address(RVA = "0x955078", Offset = "0x955078", VA = "0x955078", Slot = "20")]
		public override bool GetNearTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002638")]
		[Address(RVA = "0x95508C", Offset = "0x95508C", VA = "0x95508C", Slot = "21")]
		public override bool GetNearTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002639")]
		[Address(RVA = "0x9550A0", Offset = "0x9550A0", VA = "0x9550A0", Slot = "16")]
		public override bool GetPress(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600263A")]
		[Address(RVA = "0x9550B4", Offset = "0x9550B4", VA = "0x9550B4", Slot = "14")]
		public override bool GetPressDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600263B")]
		[Address(RVA = "0x9550C8", Offset = "0x9550C8", VA = "0x9550C8", Slot = "15")]
		public override bool GetPressUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600263C")]
		[Address(RVA = "0x9550DC", Offset = "0x9550DC", VA = "0x9550DC", Slot = "19")]
		public override bool GetTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600263D")]
		[Address(RVA = "0x9550F0", Offset = "0x9550F0", VA = "0x9550F0", Slot = "17")]
		public override bool GetTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600263E")]
		[Address(RVA = "0x955104", Offset = "0x955104", VA = "0x955104", Slot = "18")]
		public override bool GetTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600263F")]
		[Address(RVA = "0x955118", Offset = "0x955118", VA = "0x955118", Slot = "8")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6002640")]
		[Address(RVA = "0x95512C", Offset = "0x95512C", VA = "0x95512C", Slot = "9")]
		public override Collider[] SetupDefaultColliders()
		{
			return null;
		}

		[Token(Token = "0x6002641")]
		[Address(RVA = "0x955140", Offset = "0x955140", VA = "0x955140", Slot = "6")]
		public override Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x6002642")]
		[Address(RVA = "0x955154", Offset = "0x955154", VA = "0x955154", Slot = "7")]
		public override GameObject SetupDefaultRenderModel()
		{
			return null;
		}

		[Token(Token = "0x6002643")]
		[Address(RVA = "0x955168", Offset = "0x955168", VA = "0x955168", Slot = "11")]
		public override void TriggerHapticPulse(ushort durationMicroSec = 500, NVRButtons button = NVRButtons.Touchpad)
		{
		}

		[Token(Token = "0x6002644")]
		[Address(RVA = "0x954EF8", Offset = "0x954EF8", VA = "0x954EF8")]
		private void PrintNotEnabledError()
		{
		}

		[Token(Token = "0x6002645")]
		[Address(RVA = "0x95516C", Offset = "0x95516C", VA = "0x95516C")]
		public NVRSteamVRInputDevice()
		{
		}
	}
	[Token(Token = "0x2000518")]
	public class NVRSteamVRIntegration : NVRIntegration
	{
		[Token(Token = "0x6002646")]
		[Address(RVA = "0x955174", Offset = "0x955174", VA = "0x955174", Slot = "4")]
		public override void Initialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x6002647")]
		[Address(RVA = "0x955178", Offset = "0x955178", VA = "0x955178", Slot = "5")]
		public override Vector3 GetPlayspaceBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002648")]
		[Address(RVA = "0x9551F4", Offset = "0x9551F4", VA = "0x9551F4", Slot = "6")]
		public override bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6002649")]
		[Address(RVA = "0x953978", Offset = "0x953978", VA = "0x953978")]
		public NVRSteamVRIntegration()
		{
		}
	}
	[Token(Token = "0x2000519")]
	public class NVRWindowsMRInput : NVRInputDevice
	{
		[Token(Token = "0x170003B9")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x600264A")]
			[Address(RVA = "0x7AB064", Offset = "0x7AB064", VA = "0x7AB064", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600264B")]
		[Address(RVA = "0x7AB0FC", Offset = "0x7AB0FC", VA = "0x7AB0FC", Slot = "12")]
		public override float GetAxis1D(NVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x600264C")]
		[Address(RVA = "0x7AB110", Offset = "0x7AB110", VA = "0x7AB110", Slot = "13")]
		public override Vector2 GetAxis2D(NVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600264D")]
		[Address(RVA = "0x7AB190", Offset = "0x7AB190", VA = "0x7AB190", Slot = "10")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x600264E")]
		[Address(RVA = "0x7AB1E4", Offset = "0x7AB1E4", VA = "0x7AB1E4", Slot = "22")]
		public override bool GetNearTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600264F")]
		[Address(RVA = "0x7AB1F8", Offset = "0x7AB1F8", VA = "0x7AB1F8", Slot = "20")]
		public override bool GetNearTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002650")]
		[Address(RVA = "0x7AB20C", Offset = "0x7AB20C", VA = "0x7AB20C", Slot = "21")]
		public override bool GetNearTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002651")]
		[Address(RVA = "0x7AB220", Offset = "0x7AB220", VA = "0x7AB220", Slot = "16")]
		public override bool GetPress(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002652")]
		[Address(RVA = "0x7AB234", Offset = "0x7AB234", VA = "0x7AB234", Slot = "14")]
		public override bool GetPressDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002653")]
		[Address(RVA = "0x7AB248", Offset = "0x7AB248", VA = "0x7AB248", Slot = "15")]
		public override bool GetPressUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002654")]
		[Address(RVA = "0x7AB25C", Offset = "0x7AB25C", VA = "0x7AB25C", Slot = "19")]
		public override bool GetTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002655")]
		[Address(RVA = "0x7AB270", Offset = "0x7AB270", VA = "0x7AB270", Slot = "17")]
		public override bool GetTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002656")]
		[Address(RVA = "0x7AB284", Offset = "0x7AB284", VA = "0x7AB284", Slot = "18")]
		public override bool GetTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002657")]
		[Address(RVA = "0x7AB298", Offset = "0x7AB298", VA = "0x7AB298", Slot = "8")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6002658")]
		[Address(RVA = "0x7AB2AC", Offset = "0x7AB2AC", VA = "0x7AB2AC", Slot = "9")]
		public override Collider[] SetupDefaultColliders()
		{
			return null;
		}

		[Token(Token = "0x6002659")]
		[Address(RVA = "0x7AB2C0", Offset = "0x7AB2C0", VA = "0x7AB2C0", Slot = "6")]
		public override Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x600265A")]
		[Address(RVA = "0x7AB2D4", Offset = "0x7AB2D4", VA = "0x7AB2D4", Slot = "7")]
		public override GameObject SetupDefaultRenderModel()
		{
			return null;
		}

		[Token(Token = "0x600265B")]
		[Address(RVA = "0x7AB2E8", Offset = "0x7AB2E8", VA = "0x7AB2E8", Slot = "11")]
		public override void TriggerHapticPulse(ushort durationMicroSec = 500, NVRButtons button = NVRButtons.Touchpad)
		{
		}

		[Token(Token = "0x600265C")]
		[Address(RVA = "0x7AB078", Offset = "0x7AB078", VA = "0x7AB078")]
		private void PrintNotEnabledError()
		{
		}

		[Token(Token = "0x600265D")]
		[Address(RVA = "0x7AB2EC", Offset = "0x7AB2EC", VA = "0x7AB2EC")]
		public NVRWindowsMRInput()
		{
		}
	}
	[Token(Token = "0x200051A")]
	public class NVRWindowsMRIntegration : NVRIntegration
	{
		[Token(Token = "0x20008D4")]
		public enum DisplayType
		{
			[Token(Token = "0x4002AC2")]
			Opaque,
			[Token(Token = "0x4002AC3")]
			Transparent
		}

		[Token(Token = "0x20008D5")]
		public delegate void DisplayEventHandler(DisplayType displayType);

		[Token(Token = "0x4002073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A50C4", Offset = "0x3A50C4")]
		public float NearClipPlane_OpaqueDisplay;

		[Token(Token = "0x4002074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A50F8", Offset = "0x3A50F8")]
		public CameraClearFlags CameraClearFlags_OpaqueDisplay;

		[Token(Token = "0x4002075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A512C", Offset = "0x3A512C")]
		public Color BackgroundColor_OpaqueDisplay;

		[Token(Token = "0x4002076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A5160", Offset = "0x3A5160")]
		public int OpaqueQualityLevel;

		[Token(Token = "0x4002077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A5194", Offset = "0x3A5194")]
		public float NearClipPlane_TransparentDisplay;

		[Token(Token = "0x4002078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A51C8", Offset = "0x3A51C8")]
		public CameraClearFlags CameraClearFlags_TransparentDisplay;

		[Token(Token = "0x4002079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A51FC", Offset = "0x3A51FC")]
		public Color BackgroundColor_TransparentDisplay;

		[Token(Token = "0x400207A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A5230", Offset = "0x3A5230")]
		public int HoloLensQualityLevel;

		[Token(Token = "0x400207B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 PlayspaceBounds;

		[Token(Token = "0x400207C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5264", Offset = "0x3A5264")]
		private DisplayType <CurrentDisplayType>k__BackingField;

		[Token(Token = "0x170003BA")]
		public DisplayType CurrentDisplayType
		{
			[Token(Token = "0x6002661")]
			[Address(RVA = "0x7AC16C", Offset = "0x7AC16C", VA = "0x7AC16C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AD000", Offset = "0x3AD000")]
			get
			{
				return default(DisplayType);
			}
			[Token(Token = "0x6002662")]
			[Address(RVA = "0x7AC174", Offset = "0x7AC174", VA = "0x7AC174")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AD010", Offset = "0x3AD010")]
			private set
			{
			}
		}

		[Token(Token = "0x1400003F")]
		public event DisplayEventHandler OnDisplayDetected
		{
			[Token(Token = "0x6002663")]
			[Address(RVA = "0x7AC17C", Offset = "0x7AC17C", VA = "0x7AC17C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AD020", Offset = "0x3AD020")]
			add
			{
			}
			[Token(Token = "0x6002664")]
			[Address(RVA = "0x7AC22C", Offset = "0x7AC22C", VA = "0x7AC22C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AD030", Offset = "0x3AD030")]
			remove
			{
			}
		}

		[Token(Token = "0x600265E")]
		[Address(RVA = "0x7ABB6C", Offset = "0x7ABB6C", VA = "0x7ABB6C", Slot = "4")]
		public override void Initialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x600265F")]
		[Address(RVA = "0x7AC088", Offset = "0x7AC088", VA = "0x7AC088", Slot = "5")]
		public override Vector3 GetPlayspaceBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002660")]
		[Address(RVA = "0x7AC0CC", Offset = "0x7AC0CC", VA = "0x7AC0CC", Slot = "6")]
		public override bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6002665")]
		[Address(RVA = "0x7ABC90", Offset = "0x7ABC90", VA = "0x7ABC90")]
		public void ApplySettingsForOpaqueDisplay(Camera cam)
		{
		}

		[Token(Token = "0x6002666")]
		[Address(RVA = "0x7AC2E8", Offset = "0x7AC2E8", VA = "0x7AC2E8")]
		public void ApplySettingsForTransparentDisplay(Camera cam)
		{
		}

		[Token(Token = "0x6002667")]
		[Address(RVA = "0x7AC2DC", Offset = "0x7AC2DC", VA = "0x7AC2DC")]
		private static void SetQuality(int level)
		{
		}

		[Token(Token = "0x6002668")]
		[Address(RVA = "0x7AC414", Offset = "0x7AC414", VA = "0x7AC414")]
		public NVRWindowsMRIntegration()
		{
		}
	}
	[Token(Token = "0x200051B")]
	public class NVRButtonSnow : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400207E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Rigidbody Rigidbody;

		[Token(Token = "0x400207F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A5284", Offset = "0x3A5284")]
		public float DistanceToEngage;

		[Token(Token = "0x4002080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A52B8", Offset = "0x3A52B8")]
		public bool ButtonDown;

		[Token(Token = "0x4002081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A52EC", Offset = "0x3A52EC")]
		public bool ButtonUp;

		[Token(Token = "0x4002082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A5320", Offset = "0x3A5320")]
		public bool ButtonIsPushed;

		[Token(Token = "0x4002083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A5354", Offset = "0x3A5354")]
		public bool ButtonWasPushed;

		[Token(Token = "0x4002084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Transform InitialPosition;

		[Token(Token = "0x4002085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected float MinDistance;

		[Token(Token = "0x4002086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected float PositionMagic;

		[Token(Token = "0x4002087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected float CurrentDistance;

		[Token(Token = "0x4002088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 InitialLocalPosition;

		[Token(Token = "0x4002089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 ConstrainedPosition;

		[Token(Token = "0x400208A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion InitialLocalRotation;

		[Token(Token = "0x400208B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion ConstrainedRotation;

		[Token(Token = "0x6002669")]
		[Address(RVA = "0x93E448", Offset = "0x93E448", VA = "0x93E448")]
		private void Awake()
		{
		}

		[Token(Token = "0x600266A")]
		[Address(RVA = "0x93E7A0", Offset = "0x93E7A0", VA = "0x93E7A0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600266B")]
		[Address(RVA = "0x93E884", Offset = "0x93E884", VA = "0x93E884")]
		private void Update()
		{
		}

		[Token(Token = "0x600266C")]
		[Address(RVA = "0x93EA60", Offset = "0x93EA60", VA = "0x93EA60")]
		private void ConstrainPosition()
		{
		}

		[Token(Token = "0x600266D")]
		[Address(RVA = "0x93EB30", Offset = "0x93EB30", VA = "0x93EB30")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600266E")]
		[Address(RVA = "0x93EB34", Offset = "0x93EB34", VA = "0x93EB34")]
		public NVRButtonSnow()
		{
		}
	}
	[Token(Token = "0x200051C")]
	public class NVRLeverSnow : NVRLever
	{
		[Token(Token = "0x600266F")]
		[Address(RVA = "0x94F318", Offset = "0x94F318", VA = "0x94F318", Slot = "29")]
		protected override void Engage()
		{
		}

		[Token(Token = "0x6002670")]
		[Address(RVA = "0x94F42C", Offset = "0x94F42C", VA = "0x94F42C")]
		public NVRLeverSnow()
		{
		}
	}
	[Token(Token = "0x200051D")]
	public class NVRPicoInputDevice : NVRInputDevice
	{
		[Token(Token = "0x20008D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D8E0", Offset = "0x39D8E0")]
		private sealed class <DoHapticPulse>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002AC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002AC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002AC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ushort durationMicroSec;

			[Token(Token = "0x170005E6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600379D")]
				[Address(RVA = "0x9523E4", Offset = "0x9523E4", VA = "0x9523E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005E7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600379F")]
				[Address(RVA = "0x952464", Offset = "0x952464", VA = "0x952464", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600379A")]
			[Address(RVA = "0x952008", Offset = "0x952008", VA = "0x952008")]
			[DebuggerHidden]
			public <DoHapticPulse>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x600379B")]
			[Address(RVA = "0x952314", Offset = "0x952314", VA = "0x952314", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600379C")]
			[Address(RVA = "0x952318", Offset = "0x952318", VA = "0x952318", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600379E")]
			[Address(RVA = "0x9523EC", Offset = "0x9523EC", VA = "0x9523EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400208C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int deviceIndex;

		[Token(Token = "0x400208D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool RenderModelInitialized;

		[Token(Token = "0x400208E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<NVRButtons> currentlyDownButtons;

		[Token(Token = "0x400208F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private GameObject picoControllerObject;

		[Token(Token = "0x4002090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Pvr_Controller picoControllerManager;

		[Token(Token = "0x4002091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Dictionary<NVRButtons, Pvr_KeyCode> ButtonMapping;

		[Token(Token = "0x4002092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool hasTouched;

		[Token(Token = "0x170003BB")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x600268B")]
			[Address(RVA = "0x95226C", Offset = "0x95226C", VA = "0x95226C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002671")]
		[Address(RVA = "0x950F94", Offset = "0x950F94", VA = "0x950F94")]
		private void Start()
		{
		}

		[Token(Token = "0x6002672")]
		[Address(RVA = "0x951048", Offset = "0x951048", VA = "0x951048", Slot = "4")]
		public override void Initialize(NVRHand hand)
		{
		}

		[Token(Token = "0x6002673")]
		[Address(RVA = "0x951100", Offset = "0x951100", VA = "0x951100")]
		private void DelayedControllerSetup()
		{
		}

		[Token(Token = "0x6002674")]
		[Address(RVA = "0x9513C4", Offset = "0x9513C4", VA = "0x9513C4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002675")]
		[Address(RVA = "0x9514BC", Offset = "0x9514BC", VA = "0x9514BC")]
		private void Application_onBeforeRender()
		{
		}

		[Token(Token = "0x6002676")]
		[Address(RVA = "0x9515B4", Offset = "0x9515B4", VA = "0x9515B4")]
		private void ServiceStartSuccess()
		{
		}

		[Token(Token = "0x6002677")]
		[Address(RVA = "0x951788", Offset = "0x951788", VA = "0x951788", Slot = "23")]
		protected virtual void SetupButtonMapping()
		{
		}

		[Token(Token = "0x6002678")]
		[Address(RVA = "0x9518F8", Offset = "0x9518F8", VA = "0x9518F8", Slot = "12")]
		public override float GetAxis1D(NVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x6002679")]
		[Address(RVA = "0x95191C", Offset = "0x95191C", VA = "0x95191C", Slot = "13")]
		public override Vector2 GetAxis2D(NVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600267A")]
		[Address(RVA = "0x951934", Offset = "0x951934", VA = "0x951934", Slot = "14")]
		public override bool GetPressDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600267B")]
		[Address(RVA = "0x951A1C", Offset = "0x951A1C", VA = "0x951A1C", Slot = "15")]
		public override bool GetPressUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600267C")]
		[Address(RVA = "0x951B30", Offset = "0x951B30", VA = "0x951B30", Slot = "16")]
		public override bool GetPress(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600267D")]
		[Address(RVA = "0x951BE0", Offset = "0x951BE0", VA = "0x951BE0", Slot = "17")]
		public override bool GetTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600267E")]
		[Address(RVA = "0x951CA4", Offset = "0x951CA4", VA = "0x951CA4", Slot = "18")]
		public override bool GetTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600267F")]
		[Address(RVA = "0x951DFC", Offset = "0x951DFC", VA = "0x951DFC", Slot = "19")]
		public override bool GetTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002680")]
		[Address(RVA = "0x951F3C", Offset = "0x951F3C", VA = "0x951F3C", Slot = "20")]
		public override bool GetNearTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002681")]
		[Address(RVA = "0x951F44", Offset = "0x951F44", VA = "0x951F44", Slot = "21")]
		public override bool GetNearTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002682")]
		[Address(RVA = "0x951F4C", Offset = "0x951F4C", VA = "0x951F4C", Slot = "22")]
		public override bool GetNearTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002683")]
		[Address(RVA = "0x951F54", Offset = "0x951F54", VA = "0x951F54", Slot = "11")]
		public override void TriggerHapticPulse(ushort durationMicroSec = 500, NVRButtons button = NVRButtons.Touchpad)
		{
		}

		[Token(Token = "0x6002684")]
		[Address(RVA = "0x951F88", Offset = "0x951F88", VA = "0x951F88")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AD040", Offset = "0x3AD040")]
		private IEnumerator DoHapticPulse(ushort durationMicroSec)
		{
			return null;
		}

		[Token(Token = "0x6002685")]
		[Address(RVA = "0x952028", Offset = "0x952028", VA = "0x952028", Slot = "8")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6002686")]
		[Address(RVA = "0x952030", Offset = "0x952030", VA = "0x952030")]
		public void SetDeviceIndex(int index)
		{
		}

		[Token(Token = "0x6002687")]
		[Address(RVA = "0x952038", Offset = "0x952038", VA = "0x952038", Slot = "10")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x6002688")]
		[Address(RVA = "0x952088", Offset = "0x952088", VA = "0x952088", Slot = "6")]
		public override Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x6002689")]
		[Address(RVA = "0x952090", Offset = "0x952090", VA = "0x952090", Slot = "9")]
		public override Collider[] SetupDefaultColliders()
		{
			return null;
		}

		[Token(Token = "0x600268A")]
		[Address(RVA = "0x9521E4", Offset = "0x9521E4", VA = "0x9521E4", Slot = "7")]
		public override GameObject SetupDefaultRenderModel()
		{
			return null;
		}

		[Token(Token = "0x600268C")]
		[Address(RVA = "0x952280", Offset = "0x952280", VA = "0x952280")]
		public int GetMoveGetButtons()
		{
			return default(int);
		}

		[Token(Token = "0x600268D")]
		[Address(RVA = "0x952288", Offset = "0x952288", VA = "0x952288")]
		public NVRPicoInputDevice()
		{
		}
	}
	[Token(Token = "0x200051E")]
	public class NVRPicoIntegration : NVRIntegration
	{
		[Token(Token = "0x600268E")]
		[Address(RVA = "0x95246C", Offset = "0x95246C", VA = "0x95246C", Slot = "5")]
		public override Vector3 GetPlayspaceBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600268F")]
		[Address(RVA = "0x9524E4", Offset = "0x9524E4", VA = "0x9524E4", Slot = "4")]
		public override void Initialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x6002690")]
		[Address(RVA = "0x953718", Offset = "0x953718", VA = "0x953718", Slot = "6")]
		public override bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6002691")]
		[Address(RVA = "0x953720", Offset = "0x953720", VA = "0x953720")]
		public NVRPicoIntegration()
		{
		}
	}
	[Token(Token = "0x200051F")]
	public class NVRPSVRInputDevice : NVRInputDevice
	{
		[Token(Token = "0x170003BC")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x6002692")]
			[Address(RVA = "0x94FD40", Offset = "0x94FD40", VA = "0x94FD40", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002693")]
		[Address(RVA = "0x94FDB8", Offset = "0x94FDB8", VA = "0x94FDB8", Slot = "12")]
		public override float GetAxis1D(NVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x6002694")]
		[Address(RVA = "0x94FE50", Offset = "0x94FE50", VA = "0x94FE50", Slot = "13")]
		public override Vector2 GetAxis2D(NVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002695")]
		[Address(RVA = "0x94FED0", Offset = "0x94FED0", VA = "0x94FED0", Slot = "10")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x6002696")]
		[Address(RVA = "0x94FF24", Offset = "0x94FF24", VA = "0x94FF24", Slot = "22")]
		public override bool GetNearTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002697")]
		[Address(RVA = "0x94FF38", Offset = "0x94FF38", VA = "0x94FF38", Slot = "20")]
		public override bool GetNearTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002698")]
		[Address(RVA = "0x94FF4C", Offset = "0x94FF4C", VA = "0x94FF4C", Slot = "21")]
		public override bool GetNearTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002699")]
		[Address(RVA = "0x94FF60", Offset = "0x94FF60", VA = "0x94FF60", Slot = "16")]
		public override bool GetPress(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600269A")]
		[Address(RVA = "0x94FF74", Offset = "0x94FF74", VA = "0x94FF74", Slot = "14")]
		public override bool GetPressDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600269B")]
		[Address(RVA = "0x94FF88", Offset = "0x94FF88", VA = "0x94FF88", Slot = "15")]
		public override bool GetPressUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600269C")]
		[Address(RVA = "0x94FF9C", Offset = "0x94FF9C", VA = "0x94FF9C", Slot = "19")]
		public override bool GetTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600269D")]
		[Address(RVA = "0x94FFB0", Offset = "0x94FFB0", VA = "0x94FFB0", Slot = "17")]
		public override bool GetTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600269E")]
		[Address(RVA = "0x94FFC4", Offset = "0x94FFC4", VA = "0x94FFC4", Slot = "18")]
		public override bool GetTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600269F")]
		[Address(RVA = "0x94FFD8", Offset = "0x94FFD8", VA = "0x94FFD8", Slot = "8")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x60026A0")]
		[Address(RVA = "0x94FFEC", Offset = "0x94FFEC", VA = "0x94FFEC", Slot = "9")]
		public override Collider[] SetupDefaultColliders()
		{
			return null;
		}

		[Token(Token = "0x60026A1")]
		[Address(RVA = "0x950000", Offset = "0x950000", VA = "0x950000", Slot = "6")]
		public override Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x60026A2")]
		[Address(RVA = "0x950014", Offset = "0x950014", VA = "0x950014", Slot = "7")]
		public override GameObject SetupDefaultRenderModel()
		{
			return null;
		}

		[Token(Token = "0x60026A3")]
		[Address(RVA = "0x950028", Offset = "0x950028", VA = "0x950028", Slot = "11")]
		public override void TriggerHapticPulse(ushort durationMicroSec = 500, NVRButtons button = NVRButtons.Touchpad)
		{
		}

		[Token(Token = "0x60026A4")]
		[Address(RVA = "0x94FDCC", Offset = "0x94FDCC", VA = "0x94FDCC")]
		private void PrintNotEnabledError()
		{
		}

		[Token(Token = "0x60026A5")]
		[Address(RVA = "0x95002C", Offset = "0x95002C", VA = "0x95002C")]
		public void SetDeviceIndex(int index)
		{
		}

		[Token(Token = "0x60026A6")]
		[Address(RVA = "0x950030", Offset = "0x950030", VA = "0x950030")]
		public NVRPSVRInputDevice()
		{
		}
	}
	[Token(Token = "0x2000520")]
	public class NVRPSVRIntegration : NVRIntegration
	{
		[Token(Token = "0x60026A7")]
		[Address(RVA = "0x950038", Offset = "0x950038", VA = "0x950038", Slot = "5")]
		public override Vector3 GetPlayspaceBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60026A8")]
		[Address(RVA = "0x9500B0", Offset = "0x9500B0", VA = "0x9500B0", Slot = "4")]
		public override void Initialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x60026A9")]
		[Address(RVA = "0x950138", Offset = "0x950138", VA = "0x950138", Slot = "6")]
		public override bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x60026AA")]
		[Address(RVA = "0x9500B4", Offset = "0x9500B4", VA = "0x9500B4")]
		private void PrintNotEnabledError()
		{
		}

		[Token(Token = "0x60026AB")]
		[Address(RVA = "0x9501B0", Offset = "0x9501B0", VA = "0x9501B0")]
		public NVRPSVRIntegration()
		{
		}
	}
	[Token(Token = "0x2000521")]
	public class NVRWindowsMRInputDevice : NVRInputDevice
	{
		[Token(Token = "0x170003BD")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x60026AC")]
			[Address(RVA = "0x7AB2F4", Offset = "0x7AB2F4", VA = "0x7AB2F4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60026AD")]
		[Address(RVA = "0x7AB36C", Offset = "0x7AB36C", VA = "0x7AB36C", Slot = "12")]
		public override float GetAxis1D(NVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x60026AE")]
		[Address(RVA = "0x7AB3E4", Offset = "0x7AB3E4", VA = "0x7AB3E4", Slot = "13")]
		public override Vector2 GetAxis2D(NVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60026AF")]
		[Address(RVA = "0x7AB45C", Offset = "0x7AB45C", VA = "0x7AB45C", Slot = "10")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x60026B0")]
		[Address(RVA = "0x7AB4D4", Offset = "0x7AB4D4", VA = "0x7AB4D4", Slot = "22")]
		public override bool GetNearTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60026B1")]
		[Address(RVA = "0x7AB54C", Offset = "0x7AB54C", VA = "0x7AB54C", Slot = "20")]
		public override bool GetNearTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60026B2")]
		[Address(RVA = "0x7AB5C4", Offset = "0x7AB5C4", VA = "0x7AB5C4", Slot = "21")]
		public override bool GetNearTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60026B3")]
		[Address(RVA = "0x7AB63C", Offset = "0x7AB63C", VA = "0x7AB63C", Slot = "16")]
		public override bool GetPress(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60026B4")]
		[Address(RVA = "0x7AB6B4", Offset = "0x7AB6B4", VA = "0x7AB6B4", Slot = "14")]
		public override bool GetPressDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60026B5")]
		[Address(RVA = "0x7AB72C", Offset = "0x7AB72C", VA = "0x7AB72C", Slot = "15")]
		public override bool GetPressUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60026B6")]
		[Address(RVA = "0x7AB7A4", Offset = "0x7AB7A4", VA = "0x7AB7A4", Slot = "19")]
		public override bool GetTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60026B7")]
		[Address(RVA = "0x7AB81C", Offset = "0x7AB81C", VA = "0x7AB81C", Slot = "17")]
		public override bool GetTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60026B8")]
		[Address(RVA = "0x7AB894", Offset = "0x7AB894", VA = "0x7AB894", Slot = "18")]
		public override bool GetTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60026B9")]
		[Address(RVA = "0x7AB90C", Offset = "0x7AB90C", VA = "0x7AB90C", Slot = "8")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x60026BA")]
		[Address(RVA = "0x7AB984", Offset = "0x7AB984", VA = "0x7AB984", Slot = "9")]
		public override Collider[] SetupDefaultColliders()
		{
			return null;
		}

		[Token(Token = "0x60026BB")]
		[Address(RVA = "0x7AB9FC", Offset = "0x7AB9FC", VA = "0x7AB9FC", Slot = "6")]
		public override Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x60026BC")]
		[Address(RVA = "0x7ABA74", Offset = "0x7ABA74", VA = "0x7ABA74", Slot = "7")]
		public override GameObject SetupDefaultRenderModel()
		{
			return null;
		}

		[Token(Token = "0x60026BD")]
		[Address(RVA = "0x7ABAEC", Offset = "0x7ABAEC", VA = "0x7ABAEC", Slot = "11")]
		public override void TriggerHapticPulse(ushort durationMicroSec = 500, NVRButtons button = NVRButtons.Touchpad)
		{
		}

		[Token(Token = "0x60026BE")]
		[Address(RVA = "0x7ABB64", Offset = "0x7ABB64", VA = "0x7ABB64")]
		public NVRWindowsMRInputDevice()
		{
		}
	}
}
namespace NewtonVR.Example
{
	[Token(Token = "0x2000522")]
	public class NVRExampleButtonDropSphere : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x60026BF")]
		[Address(RVA = "0x939510", Offset = "0x939510", VA = "0x939510")]
		public void DropSphere()
		{
		}

		[Token(Token = "0x60026C0")]
		[Address(RVA = "0x9396C8", Offset = "0x9396C8", VA = "0x9396C8")]
		public NVRExampleButtonDropSphere()
		{
		}
	}
	[Token(Token = "0x2000523")]
	public class NVRExampleButtonResetScene : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x60026C1")]
		[Address(RVA = "0x9396D0", Offset = "0x9396D0", VA = "0x9396D0")]
		public void ResetScene()
		{
		}

		[Token(Token = "0x60026C2")]
		[Address(RVA = "0x939704", Offset = "0x939704", VA = "0x939704")]
		public NVRExampleButtonResetScene()
		{
		}
	}
	[Token(Token = "0x2000524")]
	public class NVRExampleColorLever : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Color From;

		[Token(Token = "0x4002094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color To;

		[Token(Token = "0x4002095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Renderer Result;

		[Token(Token = "0x4002096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public NVRLever Lever;

		[Token(Token = "0x60026C3")]
		[Address(RVA = "0x93970C", Offset = "0x93970C", VA = "0x93970C")]
		private void Update()
		{
		}

		[Token(Token = "0x60026C4")]
		[Address(RVA = "0x9397C8", Offset = "0x9397C8", VA = "0x9397C8")]
		public NVRExampleColorLever()
		{
		}
	}
	[Token(Token = "0x2000525")]
	public class NVRExampleColorSlider : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Color From;

		[Token(Token = "0x4002098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color To;

		[Token(Token = "0x4002099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Renderer Result;

		[Token(Token = "0x400209A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public NVRSlider Slider;

		[Token(Token = "0x60026C5")]
		[Address(RVA = "0x9397D0", Offset = "0x9397D0", VA = "0x9397D0")]
		private void Update()
		{
		}

		[Token(Token = "0x60026C6")]
		[Address(RVA = "0x93988C", Offset = "0x93988C", VA = "0x93988C")]
		public NVRExampleColorSlider()
		{
		}
	}
	[Token(Token = "0x2000526")]
	public class NVRExampleDegreeResult : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400209B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public NVRInteractableItem Knob;

		[Token(Token = "0x400209C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TextMesh Text;

		[Token(Token = "0x60026C7")]
		[Address(RVA = "0x939894", Offset = "0x939894", VA = "0x939894")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026C8")]
		[Address(RVA = "0x9398F4", Offset = "0x9398F4", VA = "0x9398F4")]
		private void Update()
		{
		}

		[Token(Token = "0x60026C9")]
		[Address(RVA = "0x939988", Offset = "0x939988", VA = "0x939988")]
		public NVRExampleDegreeResult()
		{
		}
	}
	[Token(Token = "0x2000527")]
	public class NVRExampleEvent : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x60026CA")]
		[Address(RVA = "0x939990", Offset = "0x939990", VA = "0x939990")]
		public void Duplicate()
		{
		}

		[Token(Token = "0x60026CB")]
		[Address(RVA = "0x939AD0", Offset = "0x939AD0", VA = "0x939AD0")]
		public NVRExampleEvent()
		{
		}
	}
	[Token(Token = "0x2000528")]
	public class NVRExampleGrower : NVRInteractableItem
	{
		[Token(Token = "0x60026CC")]
		[Address(RVA = "0x939AD8", Offset = "0x939AD8", VA = "0x939AD8", Slot = "12")]
		public override void InteractingUpdate(NVRHand hand)
		{
		}

		[Token(Token = "0x60026CD")]
		[Address(RVA = "0x93A1CC", Offset = "0x93A1CC", VA = "0x93A1CC")]
		public NVRExampleGrower()
		{
		}
	}
	[Token(Token = "0x2000529")]
	public class NVRExampleGun : NVRInteractableItem
	{
		[Token(Token = "0x400209D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public GameObject BulletPrefab;

		[Token(Token = "0x400209E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform FirePoint;

		[Token(Token = "0x400209F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public Vector3 BulletForce;

		[Token(Token = "0x60026CE")]
		[Address(RVA = "0x93A294", Offset = "0x93A294", VA = "0x93A294", Slot = "17")]
		public override void UseButtonDown()
		{
		}

		[Token(Token = "0x60026CF")]
		[Address(RVA = "0x93A644", Offset = "0x93A644", VA = "0x93A644")]
		public NVRExampleGun()
		{
		}
	}
	[Token(Token = "0x200052A")]
	public class NVRExampleLaserPointer : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40020A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Color LineColor;

		[Token(Token = "0x40020A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float LineWidth;

		[Token(Token = "0x40020A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool ForceLineVisible;

		[Token(Token = "0x40020A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool OnlyVisibleOnTrigger;

		[Token(Token = "0x40020A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private LineRenderer Line;

		[Token(Token = "0x40020A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private NVRHand Hand;

		[Token(Token = "0x60026D0")]
		[Address(RVA = "0x93A6A0", Offset = "0x93A6A0", VA = "0x93A6A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026D1")]
		[Address(RVA = "0x93A9A4", Offset = "0x93A9A4", VA = "0x93A9A4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60026D2")]
		[Address(RVA = "0x93AEBC", Offset = "0x93AEBC", VA = "0x93AEBC")]
		public NVRExampleLaserPointer()
		{
		}
	}
	[Token(Token = "0x200052B")]
	public class NVRExampleLetterResult : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40020A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public NVRLetterSpinner LetterSpinner;

		[Token(Token = "0x40020A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TextMesh Text;

		[Token(Token = "0x60026D3")]
		[Address(RVA = "0x93AED8", Offset = "0x93AED8", VA = "0x93AED8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026D4")]
		[Address(RVA = "0x93AF38", Offset = "0x93AF38", VA = "0x93AF38")]
		private void Update()
		{
		}

		[Token(Token = "0x60026D5")]
		[Address(RVA = "0x93B14C", Offset = "0x93B14C", VA = "0x93B14C")]
		public NVRExampleLetterResult()
		{
		}
	}
	[Token(Token = "0x200052C")]
	public class NVRExampleLeverResultRocket : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20008D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D8F0", Offset = "0x39D8F0")]
		private sealed class <DoBlastOff>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002AC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002AC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002AC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NVRExampleLeverResultRocket <>4__this;

			[Token(Token = "0x170005E8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60037A3")]
				[Address(RVA = "0x93B484", Offset = "0x93B484", VA = "0x93B484", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005E9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60037A5")]
				[Address(RVA = "0x93B504", Offset = "0x93B504", VA = "0x93B504", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60037A0")]
			[Address(RVA = "0x93B2C0", Offset = "0x93B2C0", VA = "0x93B2C0")]
			[DebuggerHidden]
			public <DoBlastOff>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x60037A1")]
			[Address(RVA = "0x93B308", Offset = "0x93B308", VA = "0x93B308", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60037A2")]
			[Address(RVA = "0x93B30C", Offset = "0x93B30C", VA = "0x93B30C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60037A4")]
			[Address(RVA = "0x93B48C", Offset = "0x93B48C", VA = "0x93B48C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20008D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D900", Offset = "0x39D900")]
		private sealed class <DoSpawnShip>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002ACA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002ACB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002ACC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NVRExampleLeverResultRocket <>4__this;

			[Token(Token = "0x4002ACD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private Vector3 <startScale>5__2;

			[Token(Token = "0x4002ACE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Vector3 <endScale>5__3;

			[Token(Token = "0x4002ACF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <startTime>5__4;

			[Token(Token = "0x4002AD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <overTime>5__5;

			[Token(Token = "0x4002AD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <stopTime>5__6;

			[Token(Token = "0x170005EA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60037A9")]
				[Address(RVA = "0x93B980", Offset = "0x93B980", VA = "0x93B980", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005EB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60037AB")]
				[Address(RVA = "0x93BA00", Offset = "0x93BA00", VA = "0x93BA00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60037A6")]
			[Address(RVA = "0x93B2E0", Offset = "0x93B2E0", VA = "0x93B2E0")]
			[DebuggerHidden]
			public <DoSpawnShip>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60037A7")]
			[Address(RVA = "0x93B50C", Offset = "0x93B50C", VA = "0x93B50C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60037A8")]
			[Address(RVA = "0x93B510", Offset = "0x93B510", VA = "0x93B510", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60037AA")]
			[Address(RVA = "0x93B988", Offset = "0x93B988", VA = "0x93B988", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40020A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public GameObject RocketPrefab;

		[Token(Token = "0x40020A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NVRLever Control;

		[Token(Token = "0x40020AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private GameObject RocketInstance;

		[Token(Token = "0x60026D6")]
		[Address(RVA = "0x93B154", Offset = "0x93B154", VA = "0x93B154")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026D7")]
		[Address(RVA = "0x93B1F8", Offset = "0x93B1F8", VA = "0x93B1F8")]
		private void Update()
		{
		}

		[Token(Token = "0x60026D8")]
		[Address(RVA = "0x93B240", Offset = "0x93B240", VA = "0x93B240")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AD0B0", Offset = "0x3AD0B0")]
		public IEnumerator DoBlastOff()
		{
			return null;
		}

		[Token(Token = "0x60026D9")]
		[Address(RVA = "0x93B178", Offset = "0x93B178", VA = "0x93B178")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AD120", Offset = "0x3AD120")]
		private IEnumerator DoSpawnShip()
		{
			return null;
		}

		[Token(Token = "0x60026DA")]
		[Address(RVA = "0x93B300", Offset = "0x93B300", VA = "0x93B300")]
		public NVRExampleLeverResultRocket()
		{
		}
	}
	[Token(Token = "0x200052D")]
	public class NVRExampleRGBResult : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40020AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public NVRSlider SliderRed;

		[Token(Token = "0x40020AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NVRSlider SliderGreen;

		[Token(Token = "0x40020AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public NVRSlider SliderBlue;

		[Token(Token = "0x40020AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer Result;

		[Token(Token = "0x40020AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color ResultColor;

		[Token(Token = "0x60026DB")]
		[Address(RVA = "0x93BA08", Offset = "0x93BA08", VA = "0x93BA08")]
		private void Update()
		{
		}

		[Token(Token = "0x60026DC")]
		[Address(RVA = "0x93BBB0", Offset = "0x93BBB0", VA = "0x93BBB0")]
		public NVRExampleRGBResult()
		{
		}
	}
	[Token(Token = "0x200052E")]
	public class NVRExampleSpawner : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40020B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public NVRButton Button;

		[Token(Token = "0x40020B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject ToCopy;

		[Token(Token = "0x60026DD")]
		[Address(RVA = "0x93BBF4", Offset = "0x93BBF4", VA = "0x93BBF4")]
		private void Update()
		{
		}

		[Token(Token = "0x60026DE")]
		[Address(RVA = "0x93BE0C", Offset = "0x93BE0C", VA = "0x93BE0C")]
		public NVRExampleSpawner()
		{
		}
	}
	[Token(Token = "0x200052F")]
	public class NVRExampleSwitchResult : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40020B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public NVRSwitch Switch;

		[Token(Token = "0x40020B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Light SpotLight;

		[Token(Token = "0x60026DF")]
		[Address(RVA = "0x93BE14", Offset = "0x93BE14", VA = "0x93BE14")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026E0")]
		[Address(RVA = "0x93BE74", Offset = "0x93BE74", VA = "0x93BE74")]
		private void Update()
		{
		}

		[Token(Token = "0x60026E1")]
		[Address(RVA = "0x93BEBC", Offset = "0x93BEBC", VA = "0x93BEBC")]
		public NVRExampleSwitchResult()
		{
		}
	}
	[Token(Token = "0x2000530")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x39AE14", Offset = "0x39AE14")]
	public class NVRExampleTeleporter : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40020B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Color LineColor;

		[Token(Token = "0x40020B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float LineWidth;

		[Token(Token = "0x40020B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LineRenderer Line;

		[Token(Token = "0x40020B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private NVRHand Hand;

		[Token(Token = "0x40020B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private NVRPlayer Player;

		[Token(Token = "0x60026E2")]
		[Address(RVA = "0x93BEC4", Offset = "0x93BEC4", VA = "0x93BEC4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026E3")]
		[Address(RVA = "0x93C124", Offset = "0x93C124", VA = "0x93C124")]
		private void Start()
		{
		}

		[Token(Token = "0x60026E4")]
		[Address(RVA = "0x93C14C", Offset = "0x93C14C", VA = "0x93C14C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60026E5")]
		[Address(RVA = "0x93CA14", Offset = "0x93CA14", VA = "0x93CA14")]
		public NVRExampleTeleporter()
		{
		}
	}
}
namespace KTSuperVRGame
{
	[Token(Token = "0x2000531")]
	public enum SystemMessageBoxState
	{
		[Token(Token = "0x40020BA")]
		Custom,
		[Token(Token = "0x40020BB")]
		Authenticate,
		[Token(Token = "0x40020BC")]
		Disconnect,
		[Token(Token = "0x40020BD")]
		Error,
		[Token(Token = "0x40020BE")]
		Exit,
		[Token(Token = "0x40020BF")]
		Update,
		[Token(Token = "0x40020C0")]
		UpdateForce,
		[Token(Token = "0x40020C1")]
		SuperVRServiceNotFound,
		[Token(Token = "0x40020C2")]
		SuperVRServiceInvalidSubScription
	}
	[Token(Token = "0x2000532")]
	public enum MessageBoxIcon
	{
		[Token(Token = "0x40020C4")]
		Null,
		[Token(Token = "0x40020C5")]
		Disconnect,
		[Token(Token = "0x40020C6")]
		Warning,
		[Token(Token = "0x40020C7")]
		Exit,
		[Token(Token = "0x40020C8")]
		Update,
		[Token(Token = "0x40020C9")]
		SuperVRService
	}
	[Token(Token = "0x2000533")]
	public class VRMessageBox : Pvr_UICanvas
	{
		[Token(Token = "0x20008D9")]
		public delegate void CollBack();

		[Token(Token = "0x20008DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D910", Offset = "0x39D910")]
		private sealed class <AnimCoroutine>d__35 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002AD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002AD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002AD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isFadeOut;

			[Token(Token = "0x4002AD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public VRMessageBox <>4__this;

			[Token(Token = "0x4002AD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float <weight>5__2;

			[Token(Token = "0x170005EC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60037B3")]
				[Address(RVA = "0x745088", Offset = "0x745088", VA = "0x745088", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005ED")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60037B5")]
				[Address(RVA = "0x745108", Offset = "0x745108", VA = "0x745108", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60037B0")]
			[Address(RVA = "0x744048", Offset = "0x744048", VA = "0x744048")]
			[DebuggerHidden]
			public <AnimCoroutine>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x60037B1")]
			[Address(RVA = "0x744BE4", Offset = "0x744BE4", VA = "0x744BE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60037B2")]
			[Address(RVA = "0x744BE8", Offset = "0x744BE8", VA = "0x744BE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60037B4")]
			[Address(RVA = "0x745090", Offset = "0x745090", VA = "0x745090", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40020CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Image image_fade;

		[Token(Token = "0x40020CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private readonly Color in_color;

		[Token(Token = "0x40020CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private readonly Color out_color;

		[Token(Token = "0x40020CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Animation anim;

		[Token(Token = "0x40020CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CanvasGroup canvasGroup;

		[Token(Token = "0x40020CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float fadeSpeed;

		[Token(Token = "0x40020D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform camTr;

		[Token(Token = "0x40020D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Button yesButton;

		[Token(Token = "0x40020D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Button noButton;

		[Token(Token = "0x40020D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Button cancelButton;

		[Token(Token = "0x40020D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public string title;

		[Token(Token = "0x40020D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string info;

		[Token(Token = "0x40020D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public MessageBoxIcon icon;

		[Token(Token = "0x40020DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public SystemMessageBoxState state;

		[Token(Token = "0x40020DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Coroutine animCoroutine;

		[Token(Token = "0x14000040")]
		private event Action yesListener
		{
			[Token(Token = "0x60026E6")]
			[Address(RVA = "0x74292C", Offset = "0x74292C", VA = "0x74292C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AD190", Offset = "0x3AD190")]
			add
			{
			}
			[Token(Token = "0x60026E7")]
			[Address(RVA = "0x7429DC", Offset = "0x7429DC", VA = "0x7429DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AD1A0", Offset = "0x3AD1A0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000041")]
		private event Action noListener
		{
			[Token(Token = "0x60026E8")]
			[Address(RVA = "0x742A8C", Offset = "0x742A8C", VA = "0x742A8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AD1B0", Offset = "0x3AD1B0")]
			add
			{
			}
			[Token(Token = "0x60026E9")]
			[Address(RVA = "0x742B3C", Offset = "0x742B3C", VA = "0x742B3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AD1C0", Offset = "0x3AD1C0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000042")]
		private event Action cancelListener
		{
			[Token(Token = "0x60026EA")]
			[Address(RVA = "0x742BEC", Offset = "0x742BEC", VA = "0x742BEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AD1D0", Offset = "0x3AD1D0")]
			add
			{
			}
			[Token(Token = "0x60026EB")]
			[Address(RVA = "0x742C9C", Offset = "0x742C9C", VA = "0x742C9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AD1E0", Offset = "0x3AD1E0")]
			remove
			{
			}
		}

		[Token(Token = "0x60026EC")]
		[Address(RVA = "0x742D4C", Offset = "0x742D4C", VA = "0x742D4C")]
		public static VRMessageBox Create(SystemMessageBoxState state = SystemMessageBoxState.Custom)
		{
			return null;
		}

		[Token(Token = "0x60026ED")]
		[Address(RVA = "0x743370", Offset = "0x743370", VA = "0x743370")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026EE")]
		[Address(RVA = "0x742E54", Offset = "0x742E54", VA = "0x742E54")]
		private void InitializedMessageBox()
		{
		}

		[Token(Token = "0x60026EF")]
		[Address(RVA = "0x743600", Offset = "0x743600", VA = "0x743600")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60026F0")]
		[Address(RVA = "0x743780", Offset = "0x743780", VA = "0x743780", Slot = "7")]
		protected override void SetupCanvas()
		{
		}

		[Token(Token = "0x60026F1")]
		[Address(RVA = "0x743824", Offset = "0x743824", VA = "0x743824")]
		private void SetLayout(float iconY, float titleY, float infoY)
		{
		}

		[Token(Token = "0x60026F2")]
		[Address(RVA = "0x743A4C", Offset = "0x743A4C", VA = "0x743A4C")]
		private void SetText()
		{
		}

		[Token(Token = "0x60026F3")]
		[Address(RVA = "0x743B9C", Offset = "0x743B9C", VA = "0x743B9C")]
		private void SetIconImage()
		{
		}

		[Token(Token = "0x60026F4")]
		[Address(RVA = "0x743D34", Offset = "0x743D34", VA = "0x743D34")]
		private void SetButton()
		{
		}

		[Token(Token = "0x60026F5")]
		[Address(RVA = "0x743F44", Offset = "0x743F44", VA = "0x743F44")]
		public void StartAnim(bool isFadeOut)
		{
		}

		[Token(Token = "0x60026F6")]
		[Address(RVA = "0x743FB0", Offset = "0x743FB0", VA = "0x743FB0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AD1F0", Offset = "0x3AD1F0")]
		private IEnumerator AnimCoroutine(bool isFadeOut)
		{
			return null;
		}

		[Token(Token = "0x60026F7")]
		[Address(RVA = "0x744068", Offset = "0x744068", VA = "0x744068")]
		public VRMessageBox AddYesListener(Action yesListener)
		{
			return null;
		}

		[Token(Token = "0x60026F8")]
		[Address(RVA = "0x744080", Offset = "0x744080", VA = "0x744080")]
		public VRMessageBox AddNoListener(Action noListener)
		{
			return null;
		}

		[Token(Token = "0x60026F9")]
		[Address(RVA = "0x744098", Offset = "0x744098", VA = "0x744098")]
		public VRMessageBox AddCancelListener(Action cancelListener)
		{
			return null;
		}

		[Token(Token = "0x60026FA")]
		[Address(RVA = "0x7440B0", Offset = "0x7440B0", VA = "0x7440B0")]
		public VRMessageBox HideYesButton()
		{
			return null;
		}

		[Token(Token = "0x60026FB")]
		[Address(RVA = "0x744110", Offset = "0x744110", VA = "0x744110")]
		public VRMessageBox HideNoButton()
		{
			return null;
		}

		[Token(Token = "0x60026FC")]
		[Address(RVA = "0x74416C", Offset = "0x74416C", VA = "0x74416C")]
		public VRMessageBox HideCancelButton()
		{
			return null;
		}

		[Token(Token = "0x60026FD")]
		[Address(RVA = "0x7441C8", Offset = "0x7441C8", VA = "0x7441C8")]
		public VRMessageBox ShowYesButton()
		{
			return null;
		}

		[Token(Token = "0x60026FE")]
		[Address(RVA = "0x744224", Offset = "0x744224", VA = "0x744224")]
		public VRMessageBox ShowNoButton()
		{
			return null;
		}

		[Token(Token = "0x60026FF")]
		[Address(RVA = "0x744280", Offset = "0x744280", VA = "0x744280")]
		public VRMessageBox ShowCancelButton()
		{
			return null;
		}

		[Token(Token = "0x6002700")]
		[Address(RVA = "0x7442DC", Offset = "0x7442DC", VA = "0x7442DC")]
		public VRMessageBox SetTitle(string title)
		{
			return null;
		}

		[Token(Token = "0x6002701")]
		[Address(RVA = "0x7442EC", Offset = "0x7442EC", VA = "0x7442EC")]
		public VRMessageBox SetInfo(string info)
		{
			return null;
		}

		[Token(Token = "0x6002702")]
		[Address(RVA = "0x7442FC", Offset = "0x7442FC", VA = "0x7442FC")]
		public VRMessageBox SetYesButtonText(string text)
		{
			return null;
		}

		[Token(Token = "0x6002703")]
		[Address(RVA = "0x7443A4", Offset = "0x7443A4", VA = "0x7443A4")]
		public VRMessageBox SetNoButtonText(string text)
		{
			return null;
		}

		[Token(Token = "0x6002704")]
		[Address(RVA = "0x74444C", Offset = "0x74444C", VA = "0x74444C")]
		public VRMessageBox SetIcon(MessageBoxIcon icon)
		{
			return null;
		}

		[Token(Token = "0x6002705")]
		[Address(RVA = "0x74445C", Offset = "0x74445C", VA = "0x74445C")]
		public void Show()
		{
		}

		[Token(Token = "0x6002706")]
		[Address(RVA = "0x744630", Offset = "0x744630", VA = "0x744630")]
		public static bool IsAppInstalled(string bundleID)
		{
			return default(bool);
		}

		[Token(Token = "0x6002707")]
		[Address(RVA = "0x744970", Offset = "0x744970", VA = "0x744970")]
		public void ClickButton(int stateNum)
		{
		}

		[Token(Token = "0x6002708")]
		[Address(RVA = "0x744B44", Offset = "0x744B44", VA = "0x744B44")]
		public VRMessageBox()
		{
		}
	}
	[Token(Token = "0x2000534")]
	public enum SystemToastState
	{
		[Token(Token = "0x40020DD")]
		Apply,
		[Token(Token = "0x40020DE")]
		Save,
		[Token(Token = "0x40020DF")]
		Cancel,
		[Token(Token = "0x40020E0")]
		ControllerDisconnect,
		[Token(Token = "0x40020E1")]
		NetDisconnect
	}
	[Token(Token = "0x2000535")]
	public class VRToast : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20008DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D920", Offset = "0x39D920")]
		private sealed class <ShowCoroutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002AD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002AD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002AD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VRToast <>4__this;

			[Token(Token = "0x4002ADA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <weight>5__2;

			[Token(Token = "0x170005EE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60037B9")]
				[Address(RVA = "0x745EE4", Offset = "0x745EE4", VA = "0x745EE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005EF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60037BB")]
				[Address(RVA = "0x745F64", Offset = "0x745F64", VA = "0x745F64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60037B6")]
			[Address(RVA = "0x7459B0", Offset = "0x7459B0", VA = "0x7459B0")]
			[DebuggerHidden]
			public <ShowCoroutine>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60037B7")]
			[Address(RVA = "0x7459E4", Offset = "0x7459E4", VA = "0x7459E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60037B8")]
			[Address(RVA = "0x7459E8", Offset = "0x7459E8", VA = "0x7459E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60037BA")]
			[Address(RVA = "0x745EEC", Offset = "0x745EEC", VA = "0x745EEC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40020E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VRToast _instance;

		[Token(Token = "0x40020E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Animation anim;

		[Token(Token = "0x40020E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float viewTime;

		[Token(Token = "0x40020E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Text text_info;

		[Token(Token = "0x40020E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string text;

		[Token(Token = "0x40020E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Coroutine showCoroutine;

		[Token(Token = "0x170003BE")]
		public static VRToast instance
		{
			[Token(Token = "0x6002709")]
			[Address(RVA = "0x7453A0", Offset = "0x7453A0", VA = "0x7453A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600270A")]
		[Address(RVA = "0x7454D4", Offset = "0x7454D4", VA = "0x7454D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600270B")]
		[Address(RVA = "0x74574C", Offset = "0x74574C", VA = "0x74574C")]
		public void SystemShow(SystemToastState state)
		{
		}

		[Token(Token = "0x600270C")]
		[Address(RVA = "0x745940", Offset = "0x745940", VA = "0x745940")]
		public void Show()
		{
		}

		[Token(Token = "0x600270D")]
		[Address(RVA = "0x7458C0", Offset = "0x7458C0", VA = "0x7458C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AD260", Offset = "0x3AD260")]
		private IEnumerator ShowCoroutine()
		{
			return null;
		}

		[Token(Token = "0x600270E")]
		[Address(RVA = "0x7459D0", Offset = "0x7459D0", VA = "0x7459D0")]
		public VRToast()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000536")]
	public class Achievement
	{
		[Token(Token = "0x40020E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private string title;

		[Token(Token = "0x40020E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private string desc;

		[Token(Token = "0x40020EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string iconUrl;

		[Token(Token = "0x40020EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private int curStep;

		[Token(Token = "0x40020EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int curProgress;

		[Token(Token = "0x170003BF")]
		public string Title
		{
			[Token(Token = "0x600270F")]
			[Address(RVA = "0x73E56C", Offset = "0x73E56C", VA = "0x73E56C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C0")]
		public string Description
		{
			[Token(Token = "0x6002710")]
			[Address(RVA = "0x73E574", Offset = "0x73E574", VA = "0x73E574")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C1")]
		public string IconUrl
		{
			[Token(Token = "0x6002711")]
			[Address(RVA = "0x73E57C", Offset = "0x73E57C", VA = "0x73E57C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C2")]
		public int CurrentStep
		{
			[Token(Token = "0x6002712")]
			[Address(RVA = "0x73E584", Offset = "0x73E584", VA = "0x73E584")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003C3")]
		public int CurrentProgress
		{
			[Token(Token = "0x6002713")]
			[Address(RVA = "0x73E58C", Offset = "0x73E58C", VA = "0x73E58C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002714")]
		[Address(RVA = "0x73E594", Offset = "0x73E594", VA = "0x73E594", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002715")]
		[Address(RVA = "0x73E9D4", Offset = "0x73E9D4", VA = "0x73E9D4")]
		public Achievement()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000537")]
	public class Authentication
	{
		[Token(Token = "0x40020ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private User user;

		[Token(Token = "0x170003C4")]
		public User User
		{
			[Token(Token = "0x6002716")]
			[Address(RVA = "0x740974", Offset = "0x740974", VA = "0x740974")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002717")]
		[Address(RVA = "0x74097C", Offset = "0x74097C", VA = "0x74097C")]
		public Authentication()
		{
		}
	}
	[Token(Token = "0x2000538")]
	public class AndroidBridge : Bridge
	{
		[Serializable]
		[Token(Token = "0x20008DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D930", Offset = "0x39D930")]
		private sealed class <>c
		{
			[Token(Token = "0x4002ADB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002ADC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static AndroidCallback<Version>.ProcessDataFunc <>9__11_0;

			[Token(Token = "0x4002ADD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static AndroidCallback<Authentication>.ProcessDataFunc <>9__13_0;

			[Token(Token = "0x4002ADE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public static AndroidCallback<Achievement>.ProcessDataFunc <>9__14_0;

			[Token(Token = "0x4002ADF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static AndroidCallback<object>.ProcessDataFunc <>9__15_0;

			[Token(Token = "0x4002AE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public static AndroidCallback<List<User>>.ProcessDataFunc <>9__16_0;

			[Token(Token = "0x60037BD")]
			[Address(RVA = "0x7407BC", Offset = "0x7407BC", VA = "0x7407BC")]
			public <>c()
			{
			}

			[Token(Token = "0x60037BE")]
			[Address(RVA = "0x7407C4", Offset = "0x7407C4", VA = "0x7407C4")]
			internal Version <CheckVersion>b__11_0(string json)
			{
				return null;
			}

			[Token(Token = "0x60037BF")]
			[Address(RVA = "0x740820", Offset = "0x740820", VA = "0x740820")]
			internal Authentication <Authenticate>b__13_0(string json)
			{
				return null;
			}

			[Token(Token = "0x60037C0")]
			[Address(RVA = "0x74087C", Offset = "0x74087C", VA = "0x74087C")]
			internal Achievement <ReportAchievement>b__14_0(string json)
			{
				return null;
			}

			[Token(Token = "0x60037C1")]
			[Address(RVA = "0x7408D8", Offset = "0x7408D8", VA = "0x7408D8")]
			internal object <SendStatistics>b__15_0(string json)
			{
				return null;
			}

			[Token(Token = "0x60037C2")]
			[Address(RVA = "0x7408E0", Offset = "0x7408E0", VA = "0x7408E0")]
			internal List<User> <GetFriends>b__16_0(string json)
			{
				return null;
			}
		}

		[Token(Token = "0x40020EE")]
		private const string BRIDGE_CLASS_NAME = "com.kt.supervrgame.unityplugin.Bridge";

		[Token(Token = "0x40020EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private AndroidJavaObject _bridge;

		[Token(Token = "0x40020F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool isConnected;

		[Token(Token = "0x40020F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private OnBridgeCallbackListener onBridgeCallbackListener;

		[Token(Token = "0x6002718")]
		[Address(RVA = "0x73E9DC", Offset = "0x73E9DC", VA = "0x73E9DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6002719")]
		[Address(RVA = "0x73E9E0", Offset = "0x73E9E0", VA = "0x73E9E0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600271A")]
		[Address(RVA = "0x73E9F0", Offset = "0x73E9F0", VA = "0x73E9F0")]
		private AndroidJavaObject GetBridge()
		{
			return null;
		}

		[Token(Token = "0x600271B")]
		[Address(RVA = "0x73ED78", Offset = "0x73ED78", VA = "0x73ED78", Slot = "4")]
		public override void SetCallbackListener(OnBridgeCallbackListener listener)
		{
		}

		[Token(Token = "0x600271C")]
		[Address(RVA = "0x73ED80", Offset = "0x73ED80", VA = "0x73ED80", Slot = "5")]
		public override bool IsConnected()
		{
			return default(bool);
		}

		[Token(Token = "0x600271D")]
		[Address(RVA = "0x73ED88", Offset = "0x73ED88", VA = "0x73ED88", Slot = "6")]
		public override void Connect()
		{
		}

		[Token(Token = "0x600271E")]
		[Address(RVA = "0x73EEAC", Offset = "0x73EEAC", VA = "0x73EEAC", Slot = "7")]
		public override void Disconnect()
		{
		}

		[Token(Token = "0x600271F")]
		[Address(RVA = "0x73EFD0", Offset = "0x73EFD0", VA = "0x73EFD0", Slot = "8")]
		public override void CheckVersion(Action<Result<Version>> action)
		{
		}

		[Token(Token = "0x6002720")]
		[Address(RVA = "0x73F1C0", Offset = "0x73F1C0", VA = "0x73F1C0", Slot = "9")]
		public override bool IsNetworkConnected()
		{
			return default(bool);
		}

		[Token(Token = "0x6002721")]
		[Address(RVA = "0x73F2F0", Offset = "0x73F2F0", VA = "0x73F2F0", Slot = "10")]
		public override void Authenticate(Action<Result<Authentication>> action)
		{
		}

		[Token(Token = "0x6002722")]
		[Address(RVA = "0x73F4E0", Offset = "0x73F4E0", VA = "0x73F4E0", Slot = "11")]
		public override void ReportAchievement(string code, int progress, Action<Result<Achievement>> action)
		{
		}

		[Token(Token = "0x6002723")]
		[Address(RVA = "0x73F788", Offset = "0x73F788", VA = "0x73F788", Slot = "12")]
		public override void SendStatistics(string type, string value, Action<Result<object>> action)
		{
		}

		[Token(Token = "0x6002724")]
		[Address(RVA = "0x73FA10", Offset = "0x73FA10", VA = "0x73FA10", Slot = "13")]
		public override void GetFriends(Action<Result<List<User>>> action)
		{
		}

		[Token(Token = "0x6002725")]
		[Address(RVA = "0x73FC00", Offset = "0x73FC00", VA = "0x73FC00", Slot = "14")]
		public override string GetApplicationId()
		{
			return null;
		}

		[Token(Token = "0x6002726")]
		[Address(RVA = "0x73FD30", Offset = "0x73FD30", VA = "0x73FD30", Slot = "15")]
		public override long GetServerTime()
		{
			return default(long);
		}

		[Token(Token = "0x6002727")]
		[Address(RVA = "0x73FE60", Offset = "0x73FE60", VA = "0x73FE60", Slot = "16")]
		public override bool StartSuperVRGame(bool finish)
		{
			return default(bool);
		}

		[Token(Token = "0x6002728")]
		[Address(RVA = "0x73FF84", Offset = "0x73FF84", VA = "0x73FF84", Slot = "17")]
		public override void OpenWiFiSettings(bool finish)
		{
		}

		[Token(Token = "0x6002729")]
		[Address(RVA = "0x74009C", Offset = "0x74009C", VA = "0x74009C", Slot = "18")]
		public override bool LaunchApp(string packageName, bool finish)
		{
			return default(bool);
		}

		[Token(Token = "0x600272A")]
		[Address(RVA = "0x74020C", Offset = "0x74020C", VA = "0x74020C")]
		private void OnKTGamePortalServiceCallback(string message)
		{
		}

		[Token(Token = "0x600272B")]
		[Address(RVA = "0x740740", Offset = "0x740740", VA = "0x740740")]
		public AndroidBridge()
		{
		}
	}
	[Token(Token = "0x2000539")]
	public class AndroidCallback<T> : AndroidJavaProxy
	{
		[Token(Token = "0x20008DD")]
		public delegate T ProcessDataFunc(string json);

		[Token(Token = "0x20008DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D940", Offset = "0x39D940")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4002AE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Result<T> result;

			[Token(Token = "0x4002AE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AndroidCallback<T> <>4__this;

			[Token(Token = "0x60037C7")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x60037C8")]
			internal void <OnCallback>b__0()
			{
			}
		}

		[Token(Token = "0x40020F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action<Result<T>> action;

		[Token(Token = "0x40020F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ProcessDataFunc ProcessData;

		[Token(Token = "0x600272C")]
		public AndroidCallback(Action<Result<T>> action)
		{
		}

		[Token(Token = "0x600272D")]
		protected void OnCallback(int code, string errorMessage, string json)
		{
		}
	}
	[Token(Token = "0x200053A")]
	public abstract class Bridge : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20008DF")]
		public delegate void OnBridgeCallbackListener(BridgeCallback callback);

		[Token(Token = "0x600272E")]
		public abstract void SetCallbackListener(OnBridgeCallbackListener listener);

		[Token(Token = "0x600272F")]
		public abstract bool IsConnected();

		[Token(Token = "0x6002730")]
		public abstract void Connect();

		[Token(Token = "0x6002731")]
		public abstract void Disconnect();

		[Token(Token = "0x6002732")]
		public abstract void CheckVersion(Action<Result<Version>> action);

		[Token(Token = "0x6002733")]
		public abstract bool IsNetworkConnected();

		[Token(Token = "0x6002734")]
		public abstract void Authenticate(Action<Result<Authentication>> action);

		[Token(Token = "0x6002735")]
		public abstract void ReportAchievement(string code, int progress, Action<Result<Achievement>> action);

		[Token(Token = "0x6002736")]
		public abstract void SendStatistics(string type, string value, Action<Result<object>> action);

		[Token(Token = "0x6002737")]
		public abstract void GetFriends(Action<Result<List<User>>> action);

		[Token(Token = "0x6002738")]
		public abstract string GetApplicationId();

		[Token(Token = "0x6002739")]
		public abstract long GetServerTime();

		[Token(Token = "0x600273A")]
		public abstract bool StartSuperVRGame(bool finish);

		[Token(Token = "0x600273B")]
		public abstract void OpenWiFiSettings(bool finish);

		[Token(Token = "0x600273C")]
		public abstract bool LaunchApp(string packageName, bool finish);

		[Token(Token = "0x600273D")]
		[Address(RVA = "0x740748", Offset = "0x740748", VA = "0x740748")]
		protected Bridge()
		{
		}
	}
	[Token(Token = "0x200053B")]
	public class BridgeCallback
	{
		[Token(Token = "0x40020F4")]
		public const int COMMAND_CONNECT = 1;

		[Token(Token = "0x40020F5")]
		public const int COMMAND_DISCONNECT = 2;

		[Token(Token = "0x40020F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private int cmd;

		[Token(Token = "0x40020F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private string data;

		[Token(Token = "0x170003C5")]
		public int Command
		{
			[Token(Token = "0x600273E")]
			[Address(RVA = "0x7409C8", Offset = "0x7409C8", VA = "0x7409C8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003C6")]
		public string Data
		{
			[Token(Token = "0x600273F")]
			[Address(RVA = "0x7409D0", Offset = "0x7409D0", VA = "0x7409D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002740")]
		[Address(RVA = "0x7409D8", Offset = "0x7409D8", VA = "0x7409D8")]
		public BridgeCallback()
		{
		}
	}
	[Token(Token = "0x200053C")]
	public class BridgeFactory
	{
		[Token(Token = "0x6002741")]
		[Address(RVA = "0x7409E0", Offset = "0x7409E0", VA = "0x7409E0")]
		public static Bridge CreateBridge(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6002742")]
		[Address(RVA = "0x740AF0", Offset = "0x740AF0", VA = "0x740AF0")]
		public BridgeFactory()
		{
		}
	}
	[Token(Token = "0x200053D")]
	public class DummyBridge : Bridge
	{
		[Token(Token = "0x6002743")]
		[Address(RVA = "0x740C30", Offset = "0x740C30", VA = "0x740C30", Slot = "4")]
		public override void SetCallbackListener(OnBridgeCallbackListener listener)
		{
		}

		[Token(Token = "0x6002744")]
		[Address(RVA = "0x740C34", Offset = "0x740C34", VA = "0x740C34", Slot = "5")]
		public override bool IsConnected()
		{
			return default(bool);
		}

		[Token(Token = "0x6002745")]
		[Address(RVA = "0x740C3C", Offset = "0x740C3C", VA = "0x740C3C", Slot = "6")]
		public override void Connect()
		{
		}

		[Token(Token = "0x6002746")]
		[Address(RVA = "0x740C40", Offset = "0x740C40", VA = "0x740C40", Slot = "7")]
		public override void Disconnect()
		{
		}

		[Token(Token = "0x6002747")]
		[Address(RVA = "0x740C44", Offset = "0x740C44", VA = "0x740C44", Slot = "8")]
		public override void CheckVersion(Action<Result<Version>> action)
		{
		}

		[Token(Token = "0x6002748")]
		[Address(RVA = "0x740CF0", Offset = "0x740CF0", VA = "0x740CF0", Slot = "9")]
		public override bool IsNetworkConnected()
		{
			return default(bool);
		}

		[Token(Token = "0x6002749")]
		[Address(RVA = "0x740CF8", Offset = "0x740CF8", VA = "0x740CF8", Slot = "10")]
		public override void Authenticate(Action<Result<Authentication>> action)
		{
		}

		[Token(Token = "0x600274A")]
		[Address(RVA = "0x740D9C", Offset = "0x740D9C", VA = "0x740D9C", Slot = "11")]
		public override void ReportAchievement(string code, int progress, Action<Result<Achievement>> action)
		{
		}

		[Token(Token = "0x600274B")]
		[Address(RVA = "0x740E20", Offset = "0x740E20", VA = "0x740E20", Slot = "12")]
		public override void SendStatistics(string type, string value, Action<Result<object>> action)
		{
		}

		[Token(Token = "0x600274C")]
		[Address(RVA = "0x740EA4", Offset = "0x740EA4", VA = "0x740EA4", Slot = "13")]
		public override void GetFriends(Action<Result<List<User>>> action)
		{
		}

		[Token(Token = "0x600274D")]
		[Address(RVA = "0x740F48", Offset = "0x740F48", VA = "0x740F48", Slot = "14")]
		public override string GetApplicationId()
		{
			return null;
		}

		[Token(Token = "0x600274E")]
		[Address(RVA = "0x740F50", Offset = "0x740F50", VA = "0x740F50", Slot = "15")]
		public override long GetServerTime()
		{
			return default(long);
		}

		[Token(Token = "0x600274F")]
		[Address(RVA = "0x741000", Offset = "0x741000", VA = "0x741000", Slot = "16")]
		public override bool StartSuperVRGame(bool finish)
		{
			return default(bool);
		}

		[Token(Token = "0x6002750")]
		[Address(RVA = "0x741008", Offset = "0x741008", VA = "0x741008", Slot = "17")]
		public override void OpenWiFiSettings(bool finish)
		{
		}

		[Token(Token = "0x6002751")]
		[Address(RVA = "0x74100C", Offset = "0x74100C", VA = "0x74100C", Slot = "18")]
		public override bool LaunchApp(string packageName, bool finish)
		{
			return default(bool);
		}

		[Token(Token = "0x6002752")]
		[Address(RVA = "0x741014", Offset = "0x741014", VA = "0x741014")]
		public DummyBridge()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200053E")]
	public class ChatMessage
	{
		[Serializable]
		[Token(Token = "0x20008E0")]
		public class Invite
		{
			[Token(Token = "0x4002AE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[SerializeField]
			private string userId;

			[Token(Token = "0x4002AE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[SerializeField]
			private string roomName;

			[Token(Token = "0x4002AE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private string applicationId;

			[Token(Token = "0x170005F0")]
			public string UserId
			{
				[Token(Token = "0x60037CD")]
				[Address(RVA = "0x740C18", Offset = "0x740C18", VA = "0x740C18")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005F1")]
			public string RoomName
			{
				[Token(Token = "0x60037CE")]
				[Address(RVA = "0x740C20", Offset = "0x740C20", VA = "0x740C20")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005F2")]
			public string ApplicationId
			{
				[Token(Token = "0x60037CF")]
				[Address(RVA = "0x740C28", Offset = "0x740C28", VA = "0x740C28")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60037D0")]
			[Address(RVA = "0x740BE8", Offset = "0x740BE8", VA = "0x740BE8")]
			public Invite(string userId, string roomName, string applicationId)
			{
			}
		}

		[Token(Token = "0x40020F8")]
		public const int COMMAND_INVITE_USER = 1;

		[Token(Token = "0x40020F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private int cmd;

		[Token(Token = "0x40020FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private string data;

		[Token(Token = "0x170003C7")]
		public int Command
		{
			[Token(Token = "0x6002753")]
			[Address(RVA = "0x740AF8", Offset = "0x740AF8", VA = "0x740AF8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003C8")]
		public string Data
		{
			[Token(Token = "0x6002754")]
			[Address(RVA = "0x740B00", Offset = "0x740B00", VA = "0x740B00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002755")]
		[Address(RVA = "0x740B08", Offset = "0x740B08", VA = "0x740B08")]
		public ChatMessage(int command, string data)
		{
		}

		[Token(Token = "0x6002756")]
		[Address(RVA = "0x740B30", Offset = "0x740B30", VA = "0x740B30")]
		public static ChatMessage CreateInviteChatMessage(string userId, string roomName, string applicationId)
		{
			return null;
		}
	}
	[Token(Token = "0x200053F")]
	public static class Constants
	{
		[Token(Token = "0x40020FB")]
		public const int SUCCESS = 0;

		[Token(Token = "0x40020FC")]
		public const int ERROR_UNKNOWN = 1000;

		[Token(Token = "0x40020FD")]
		public const int ERROR_NOT_AUTHENTICATE = 1001;

		[Token(Token = "0x40020FE")]
		public const int ERROR_SERVICE_IS_UNAVAILABLE = 1002;

		[Token(Token = "0x40020FF")]
		public const int ERROR_NOT_INITIALIZED = 1003;

		[Token(Token = "0x4002100")]
		public const int ERROR_INVALID_ARGUMENT = 1004;

		[Token(Token = "0x4002101")]
		public const int ERROR_INVALID_SUBSCRIPTION = 1005;
	}
	[Token(Token = "0x2000540")]
	public interface IOnFriendsListener
	{
		[Token(Token = "0x6002757")]
		void OnFriendStatusUpdate(User user, int oldStatus, int newStatus);

		[Token(Token = "0x6002758")]
		void OnFriendListUpdate(List<User> listUser);
	}
	[Token(Token = "0x2000541")]
	public interface IOnInvitationReceivedListener
	{
		[Token(Token = "0x6002759")]
		void OnInvitationReceived(string fromUserId, string roomName);
	}
	[Token(Token = "0x2000542")]
	public interface IOnServerConnectedListener
	{
		[Token(Token = "0x600275A")]
		void OnServerConnected();

		[Token(Token = "0x600275B")]
		void OnServerDisconnected();
	}
	[Token(Token = "0x2000543")]
	public class KTSuperVRGameService : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20008E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D950", Offset = "0x39D950")]
		private sealed class <>c
		{
			[Token(Token = "0x4002AE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002AE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static Bridge.OnBridgeCallbackListener <>9__22_0;

			[Token(Token = "0x60037D2")]
			[Address(RVA = "0x7423F4", Offset = "0x7423F4", VA = "0x7423F4")]
			public <>c()
			{
			}

			[Token(Token = "0x60037D3")]
			[Address(RVA = "0x7423FC", Offset = "0x7423FC", VA = "0x7423FC")]
			internal void <Awake>b__22_0(BridgeCallback callback)
			{
			}
		}

		[Token(Token = "0x20008E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D960", Offset = "0x39D960")]
		private sealed class <>c__DisplayClass30_0
		{
			[Token(Token = "0x4002AE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Action<Result<Version>> action;

			[Token(Token = "0x60037D4")]
			[Address(RVA = "0x741F84", Offset = "0x741F84", VA = "0x741F84")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x60037D5")]
			[Address(RVA = "0x742400", Offset = "0x742400", VA = "0x742400")]
			internal void <CheckVersion>b__0()
			{
			}
		}

		[Token(Token = "0x20008E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D970", Offset = "0x39D970")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x4002AE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public KTSuperVRGameService <>4__this;

			[Token(Token = "0x4002AEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Action<Result<Authentication>> action;

			[Token(Token = "0x60037D6")]
			[Address(RVA = "0x7420B4", Offset = "0x7420B4", VA = "0x7420B4")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x60037D7")]
			[Address(RVA = "0x74249C", Offset = "0x74249C", VA = "0x74249C")]
			internal void <Authenticate>b__0(Result<Authentication> obj)
			{
			}
		}

		[Token(Token = "0x20008E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D980", Offset = "0x39D980")]
		private sealed class <>c__DisplayClass32_1
		{
			[Token(Token = "0x4002AEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Result<Authentication> obj;

			[Token(Token = "0x4002AEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public <>c__DisplayClass32_0 CS$<>8__locals1;

			[Token(Token = "0x60037D8")]
			[Address(RVA = "0x742640", Offset = "0x742640", VA = "0x742640")]
			public <>c__DisplayClass32_1()
			{
			}

			[Token(Token = "0x60037D9")]
			[Address(RVA = "0x742648", Offset = "0x742648", VA = "0x742648")]
			internal void <Authenticate>b__1()
			{
			}

			[Token(Token = "0x60037DA")]
			[Address(RVA = "0x7426CC", Offset = "0x7426CC", VA = "0x7426CC")]
			internal void <Authenticate>b__2()
			{
			}
		}

		[Token(Token = "0x20008E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D990", Offset = "0x39D990")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x4002AED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Action<Result<Achievement>> action;

			[Token(Token = "0x60037DB")]
			[Address(RVA = "0x7421F0", Offset = "0x7421F0", VA = "0x7421F0")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x60037DC")]
			[Address(RVA = "0x742750", Offset = "0x742750", VA = "0x742750")]
			internal void <ReportAchievement>b__0()
			{
			}
		}

		[Token(Token = "0x4002102")]
		private const string STATISTICS_TYPE_PLAY_COUNT = "play_count";

		[Token(Token = "0x4002103")]
		private const string STATISTICS_TYPE_PLAY_TIME = "play_time";

		[Token(Token = "0x4002104")]
		private const string STATISTICS_TYPE_ROOM_CREATE = "room_create";

		[Token(Token = "0x4002105")]
		private const string STATISTICS_TYPE_ROOM_JOIN = "room_join";

		[Token(Token = "0x4002106")]
		private const string STATISTICS_TYPE_CHAT_CONNECT = "chat_connect";

		[Token(Token = "0x4002107")]
		private const string STATISTICS_TYPE_INVITE_USER = "invite_user";

		[Token(Token = "0x4002108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static KTSuperVRGameService Instance;

		[Token(Token = "0x4002109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Bridge bridge;

		[Token(Token = "0x400210A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5458", Offset = "0x3A5458")]
		private string <ApplicationId>k__BackingField;

		[Token(Token = "0x400210B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5468", Offset = "0x3A5468")]
		private User <Player>k__BackingField;

		[Token(Token = "0x400210C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Action> sQueue;

		[Token(Token = "0x400210D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private List<Action> localQueue;

		[Token(Token = "0x400210E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool sQueueEmpty;

		[Token(Token = "0x400210F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float lastSentPlayTime;

		[Token(Token = "0x170003C9")]
		private string ApplicationId
		{
			[Token(Token = "0x600275C")]
			[Address(RVA = "0x74101C", Offset = "0x74101C", VA = "0x74101C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AD2D0", Offset = "0x3AD2D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600275D")]
			[Address(RVA = "0x741024", Offset = "0x741024", VA = "0x741024")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AD2E0", Offset = "0x3AD2E0")]
			set
			{
			}
		}

		[Token(Token = "0x170003CA")]
		public User Player
		{
			[Token(Token = "0x600275E")]
			[Address(RVA = "0x74102C", Offset = "0x74102C", VA = "0x74102C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AD2F0", Offset = "0x3AD2F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600275F")]
			[Address(RVA = "0x741034", Offset = "0x741034", VA = "0x741034")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AD300", Offset = "0x3AD300")]
			private set
			{
			}
		}

		[Token(Token = "0x170003CB")]
		private bool IsAuthenticated
		{
			[Token(Token = "0x6002760")]
			[Address(RVA = "0x74103C", Offset = "0x74103C", VA = "0x74103C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002761")]
		[Address(RVA = "0x741074", Offset = "0x741074", VA = "0x741074")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002762")]
		[Address(RVA = "0x7412DC", Offset = "0x7412DC", VA = "0x7412DC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002763")]
		[Address(RVA = "0x74145C", Offset = "0x74145C", VA = "0x74145C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002764")]
		[Address(RVA = "0x74165C", Offset = "0x74165C", VA = "0x74165C")]
		private void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x6002765")]
		[Address(RVA = "0x74168C", Offset = "0x74168C", VA = "0x74168C")]
		public void RunOnGameThread(Action action)
		{
		}

		[Token(Token = "0x6002766")]
		[Address(RVA = "0x741370", Offset = "0x741370", VA = "0x741370")]
		private void SendPlayTime()
		{
		}

		[Token(Token = "0x6002767")]
		[Address(RVA = "0x741788", Offset = "0x741788", VA = "0x741788")]
		private bool SendStatistics(string type, string value)
		{
			return default(bool);
		}

		[Token(Token = "0x6002768")]
		[Address(RVA = "0x741864", Offset = "0x741864", VA = "0x741864")]
		public bool OpenStore(string appId)
		{
			return default(bool);
		}

		[Token(Token = "0x6002769")]
		[Address(RVA = "0x741E70", Offset = "0x741E70", VA = "0x741E70")]
		public void CheckVersion(Action<Result<Version>> action)
		{
		}

		[Token(Token = "0x600276A")]
		[Address(RVA = "0x741F8C", Offset = "0x741F8C", VA = "0x741F8C")]
		public bool IsNetworkConnected()
		{
			return default(bool);
		}

		[Token(Token = "0x600276B")]
		[Address(RVA = "0x741FBC", Offset = "0x741FBC", VA = "0x741FBC")]
		public void Authenticate(Action<Result<Authentication>> action)
		{
		}

		[Token(Token = "0x600276C")]
		[Address(RVA = "0x7420BC", Offset = "0x7420BC", VA = "0x7420BC")]
		public void ReportAchievement(string code, int progress, Action<Result<Achievement>> action)
		{
		}

		[Token(Token = "0x600276D")]
		[Address(RVA = "0x7421F8", Offset = "0x7421F8", VA = "0x7421F8")]
		public void StartSuperVRGame(bool finish)
		{
		}

		[Token(Token = "0x600276E")]
		[Address(RVA = "0x742230", Offset = "0x742230", VA = "0x742230")]
		public void OpenWiFiSettingws(bool finish)
		{
		}

		[Token(Token = "0x600276F")]
		[Address(RVA = "0x742268", Offset = "0x742268", VA = "0x742268")]
		public void StartPicoStore(bool finish)
		{
		}

		[Token(Token = "0x6002770")]
		[Address(RVA = "0x7422E8", Offset = "0x7422E8", VA = "0x7422E8")]
		public KTSuperVRGameService()
		{
		}
	}
	[Token(Token = "0x2000544")]
	public class Result<T>
	{
		[Token(Token = "0x4002110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int code;

		[Token(Token = "0x4002111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string errorMessage;

		[Token(Token = "0x4002112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T data;

		[Token(Token = "0x170003CC")]
		public bool IsSuccess
		{
			[Token(Token = "0x6002771")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003CD")]
		public int Code
		{
			[Token(Token = "0x6002772")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003CE")]
		public string ErrorMessage
		{
			[Token(Token = "0x6002773")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CF")]
		public T Data
		{
			[Token(Token = "0x6002774")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6002775")]
		public Result(int code, string errorMessage, T data)
		{
		}

		[Token(Token = "0x6002776")]
		public static Result<T> Success(T data)
		{
			return null;
		}

		[Token(Token = "0x6002777")]
		public static Result<T> Error(int code, string messsage)
		{
			return null;
		}

		[Token(Token = "0x6002778")]
		public override string ToString()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000545")]
	public class User
	{
		[Token(Token = "0x4002113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private string uid;

		[Token(Token = "0x4002114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		protected string nickname;

		[Token(Token = "0x4002115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		protected string profileUrl;

		[NonSerialized]
		[Token(Token = "0x4002116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected int status;

		[Token(Token = "0x170003D0")]
		public string UserId
		{
			[Token(Token = "0x6002779")]
			[Address(RVA = "0x7427EC", Offset = "0x7427EC", VA = "0x7427EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D1")]
		public string NickName
		{
			[Token(Token = "0x600277A")]
			[Address(RVA = "0x7427F4", Offset = "0x7427F4", VA = "0x7427F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D2")]
		public string ProfileImageUrl
		{
			[Token(Token = "0x600277B")]
			[Address(RVA = "0x7427FC", Offset = "0x7427FC", VA = "0x7427FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D3")]
		public int Status
		{
			[Token(Token = "0x600277C")]
			[Address(RVA = "0x742804", Offset = "0x742804", VA = "0x742804")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600277D")]
		[Address(RVA = "0x74280C", Offset = "0x74280C", VA = "0x74280C")]
		public User(string userId, string nickname)
		{
		}

		[Token(Token = "0x600277E")]
		[Address(RVA = "0x742834", Offset = "0x742834", VA = "0x742834", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000546")]
	public class UserStatusMessage
	{
		[Token(Token = "0x4002117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private string appId;

		[Token(Token = "0x170003D4")]
		public string ApplicationId
		{
			[Token(Token = "0x600277F")]
			[Address(RVA = "0x742898", Offset = "0x742898", VA = "0x742898")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002780")]
		[Address(RVA = "0x7428A0", Offset = "0x7428A0", VA = "0x7428A0")]
		public UserStatusMessage(string applicationId)
		{
		}

		[Token(Token = "0x6002781")]
		[Address(RVA = "0x7428C0", Offset = "0x7428C0", VA = "0x7428C0")]
		public static UserStatusMessage CreateUserStatusMessage(string applicationId)
		{
			return null;
		}
	}
	[Token(Token = "0x2000547")]
	public class Version
	{
		[Token(Token = "0x4002118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private bool isForce;

		[Token(Token = "0x4002119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private long curVersionCode;

		[Token(Token = "0x400211A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string curVersion;

		[Token(Token = "0x400211B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private long newVersionCode;

		[Token(Token = "0x400211C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string newVersion;

		[Token(Token = "0x400211D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private string marketUrl;

		[Token(Token = "0x170003D5")]
		public bool IsForce
		{
			[Token(Token = "0x6002782")]
			[Address(RVA = "0x745F6C", Offset = "0x745F6C", VA = "0x745F6C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003D6")]
		public long CurrentVersionCode
		{
			[Token(Token = "0x6002783")]
			[Address(RVA = "0x745F74", Offset = "0x745F74", VA = "0x745F74")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x170003D7")]
		public string CurrentVersion
		{
			[Token(Token = "0x6002784")]
			[Address(RVA = "0x745F7C", Offset = "0x745F7C", VA = "0x745F7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D8")]
		public long NewVersionCode
		{
			[Token(Token = "0x6002785")]
			[Address(RVA = "0x745F84", Offset = "0x745F84", VA = "0x745F84")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x170003D9")]
		public string NewVersion
		{
			[Token(Token = "0x6002786")]
			[Address(RVA = "0x745F8C", Offset = "0x745F8C", VA = "0x745F8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DA")]
		public string MarketUrl
		{
			[Token(Token = "0x6002787")]
			[Address(RVA = "0x745F94", Offset = "0x745F94", VA = "0x745F94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002788")]
		[Address(RVA = "0x745F9C", Offset = "0x745F9C", VA = "0x745F9C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002789")]
		[Address(RVA = "0x740CE8", Offset = "0x740CE8", VA = "0x740CE8")]
		public Version()
		{
		}
	}
}
namespace I2.Loc
{
	[Token(Token = "0x2000548")]
	public static class PersistentStorage
	{
		[Token(Token = "0x20008E6")]
		public enum eFileType
		{
			[Token(Token = "0x4002AEF")]
			Raw,
			[Token(Token = "0x4002AF0")]
			Persistent,
			[Token(Token = "0x4002AF1")]
			Temporal,
			[Token(Token = "0x4002AF2")]
			Streaming
		}

		[Token(Token = "0x400211E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static I2CustomPersistentStorage mStorage;

		[Token(Token = "0x600278A")]
		[Address(RVA = "0x852314", Offset = "0x852314", VA = "0x852314")]
		public static void SetSetting_String(string key, string value)
		{
		}

		[Token(Token = "0x600278B")]
		[Address(RVA = "0x8523D8", Offset = "0x8523D8", VA = "0x8523D8")]
		public static string GetSetting_String(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x600278C")]
		[Address(RVA = "0x85249C", Offset = "0x85249C", VA = "0x85249C")]
		public static void DeleteSetting(string key)
		{
		}

		[Token(Token = "0x600278D")]
		[Address(RVA = "0x852558", Offset = "0x852558", VA = "0x852558")]
		public static bool HasSetting(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x600278E")]
		[Address(RVA = "0x852614", Offset = "0x852614", VA = "0x852614")]
		public static void ForceSaveSettings()
		{
		}

		[Token(Token = "0x600278F")]
		[Address(RVA = "0x8526C8", Offset = "0x8526C8", VA = "0x8526C8")]
		public static bool CanAccessFiles()
		{
			return default(bool);
		}

		[Token(Token = "0x6002790")]
		[Address(RVA = "0x85277C", Offset = "0x85277C", VA = "0x85277C")]
		public static bool SaveFile(eFileType fileType, string fileName, string data, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002791")]
		[Address(RVA = "0x85285C", Offset = "0x85285C", VA = "0x85285C")]
		public static string LoadFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return null;
		}

		[Token(Token = "0x6002792")]
		[Address(RVA = "0x852934", Offset = "0x852934", VA = "0x852934")]
		public static bool DeleteFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002793")]
		[Address(RVA = "0x852A0C", Offset = "0x852A0C", VA = "0x852A0C")]
		public static bool HasFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000549")]
	public abstract class I2BasePersistentStorage
	{
		[Token(Token = "0x6002794")]
		[Address(RVA = "0x1109C68", Offset = "0x1109C68", VA = "0x1109C68", Slot = "4")]
		public virtual void SetSetting_String(string key, string value)
		{
		}

		[Token(Token = "0x6002795")]
		[Address(RVA = "0x1109F54", Offset = "0x1109F54", VA = "0x1109F54", Slot = "5")]
		public virtual string GetSetting_String(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6002796")]
		[Address(RVA = "0x110A1D0", Offset = "0x110A1D0", VA = "0x110A1D0", Slot = "6")]
		public virtual void DeleteSetting(string key)
		{
		}

		[Token(Token = "0x6002797")]
		[Address(RVA = "0x110A418", Offset = "0x110A418", VA = "0x110A418", Slot = "7")]
		public virtual void ForceSaveSettings()
		{
		}

		[Token(Token = "0x6002798")]
		[Address(RVA = "0x110A420", Offset = "0x110A420", VA = "0x110A420", Slot = "8")]
		public virtual bool HasSetting(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6002799")]
		[Address(RVA = "0x110A42C", Offset = "0x110A42C", VA = "0x110A42C", Slot = "9")]
		public virtual bool CanAccessFiles()
		{
			return default(bool);
		}

		[Token(Token = "0x600279A")]
		[Address(RVA = "0x110A434", Offset = "0x110A434", VA = "0x110A434")]
		private string UpdateFilename(PersistentStorage.eFileType fileType, string fileName)
		{
			return null;
		}

		[Token(Token = "0x600279B")]
		[Address(RVA = "0x110A4D8", Offset = "0x110A4D8", VA = "0x110A4D8", Slot = "10")]
		public virtual bool SaveFile(PersistentStorage.eFileType fileType, string fileName, string data, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600279C")]
		[Address(RVA = "0x110A7C8", Offset = "0x110A7C8", VA = "0x110A7C8", Slot = "11")]
		public virtual string LoadFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return null;
		}

		[Token(Token = "0x600279D")]
		[Address(RVA = "0x110AAB0", Offset = "0x110AAB0", VA = "0x110AAB0", Slot = "12")]
		public virtual bool DeleteFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600279E")]
		[Address(RVA = "0x110AD88", Offset = "0x110AD88", VA = "0x110AD88", Slot = "13")]
		public virtual bool HasFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600279F")]
		[Address(RVA = "0x110B05C", Offset = "0x110B05C", VA = "0x110B05C")]
		protected I2BasePersistentStorage()
		{
		}
	}
	[Token(Token = "0x200054A")]
	public class I2CustomPersistentStorage : I2BasePersistentStorage
	{
		[Token(Token = "0x60027A0")]
		[Address(RVA = "0x110B064", Offset = "0x110B064", VA = "0x110B064")]
		public I2CustomPersistentStorage()
		{
		}
	}
	[Token(Token = "0x200054B")]
	public class BaseSpecializationManager
	{
		[Token(Token = "0x400211F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string[] mSpecializations;

		[Token(Token = "0x4002120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Dictionary<string, string> mSpecializationsFallbacks;

		[Token(Token = "0x60027A1")]
		[Address(RVA = "0x6AF738", Offset = "0x6AF738", VA = "0x6AF738", Slot = "4")]
		public virtual void InitializeSpecializations()
		{
		}

		[Token(Token = "0x60027A2")]
		[Address(RVA = "0x6AFD9C", Offset = "0x6AFD9C", VA = "0x6AFD9C", Slot = "5")]
		public virtual string GetCurrentSpecialization()
		{
			return null;
		}

		[Token(Token = "0x60027A3")]
		[Address(RVA = "0x6AFE10", Offset = "0x6AFE10", VA = "0x6AFE10", Slot = "6")]
		public virtual string GetFallbackSpecialization(string specialization)
		{
			return null;
		}

		[Token(Token = "0x60027A4")]
		[Address(RVA = "0x6AFED4", Offset = "0x6AFED4", VA = "0x6AFED4")]
		public BaseSpecializationManager()
		{
		}
	}
	[Token(Token = "0x200054C")]
	public class SpecializationManager : BaseSpecializationManager
	{
		[Token(Token = "0x4002121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SpecializationManager Singleton;

		[Token(Token = "0x60027A5")]
		[Address(RVA = "0x85DE00", Offset = "0x85DE00", VA = "0x85DE00")]
		private SpecializationManager()
		{
		}

		[Token(Token = "0x60027A6")]
		[Address(RVA = "0x85DE2C", Offset = "0x85DE2C", VA = "0x85DE2C")]
		public static string GetSpecializedText(string text, [Optional] string specialization)
		{
			return null;
		}

		[Token(Token = "0x60027A7")]
		[Address(RVA = "0x85E0C4", Offset = "0x85E0C4", VA = "0x85E0C4")]
		public static string SetSpecializedText(string text, string newText, string specialization)
		{
			return null;
		}

		[Token(Token = "0x60027A8")]
		[Address(RVA = "0x85E418", Offset = "0x85E418", VA = "0x85E418")]
		public static string SetSpecializedText(Dictionary<string, string> specializations)
		{
			return null;
		}

		[Token(Token = "0x60027A9")]
		[Address(RVA = "0x85E1F0", Offset = "0x85E1F0", VA = "0x85E1F0")]
		public static Dictionary<string, string> GetSpecializations(string text, [Optional] Dictionary<string, string> buffer)
		{
			return null;
		}

		[Token(Token = "0x60027AA")]
		[Address(RVA = "0x85E7D8", Offset = "0x85E7D8", VA = "0x85E7D8")]
		public static void AppendSpecializations(string text, [Optional] List<string> list)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200054D")]
	public class EventCallback
	{
		[Token(Token = "0x4002122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UnityEngine.MonoBehaviour Target;

		[Token(Token = "0x4002123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string MethodName;

		[Token(Token = "0x60027AC")]
		[Address(RVA = "0x6B0354", Offset = "0x6B0354", VA = "0x6B0354")]
		public void Execute([Optional] UnityEngine.Object Sender)
		{
		}

		[Token(Token = "0x60027AD")]
		[Address(RVA = "0x6B03D8", Offset = "0x6B03D8", VA = "0x6B03D8")]
		public bool HasCallback()
		{
			return default(bool);
		}

		[Token(Token = "0x60027AE")]
		[Address(RVA = "0x6B047C", Offset = "0x6B047C", VA = "0x6B047C")]
		public EventCallback()
		{
		}
	}
	[Token(Token = "0x200054E")]
	public enum ePluralType
	{
		[Token(Token = "0x4002125")]
		Zero,
		[Token(Token = "0x4002126")]
		One,
		[Token(Token = "0x4002127")]
		Two,
		[Token(Token = "0x4002128")]
		Few,
		[Token(Token = "0x4002129")]
		Many,
		[Token(Token = "0x400212A")]
		Plural
	}
	[Token(Token = "0x200054F")]
	public static class GoogleLanguages
	{
		[Token(Token = "0x20008E7")]
		public struct LanguageCodeDef
		{
			[Token(Token = "0x4002AF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Code;

			[Token(Token = "0x4002AF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public string GoogleCode;

			[Token(Token = "0x4002AF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool HasJoinedWords;

			[Token(Token = "0x4002AF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int PluralRule;
		}

		[Token(Token = "0x400212B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<string, LanguageCodeDef> mLanguageDef;

		[Token(Token = "0x60027AF")]
		[Address(RVA = "0x6B04E8", Offset = "0x6B04E8", VA = "0x6B04E8")]
		public static string GetLanguageCode(string Filter, bool ShowWarnings = false)
		{
			return null;
		}

		[Token(Token = "0x60027B0")]
		[Address(RVA = "0x6B0974", Offset = "0x6B0974", VA = "0x6B0974")]
		public static List<string> GetLanguagesForDropdown(string Filter, string CodesToExclude)
		{
			return null;
		}

		[Token(Token = "0x60027B1")]
		[Address(RVA = "0x6B079C", Offset = "0x6B079C", VA = "0x6B079C")]
		private static bool LanguageMatchesFilter(string Language, string[] Filters)
		{
			return default(bool);
		}

		[Token(Token = "0x60027B2")]
		[Address(RVA = "0x6B0EC0", Offset = "0x6B0EC0", VA = "0x6B0EC0")]
		public static string GetFormatedLanguageName(string Language)
		{
			return null;
		}

		[Token(Token = "0x60027B3")]
		[Address(RVA = "0x6B102C", Offset = "0x6B102C", VA = "0x6B102C")]
		public static string GetCodedLanguage(string Language, string code)
		{
			return null;
		}

		[Token(Token = "0x60027B4")]
		[Address(RVA = "0x6B1110", Offset = "0x6B1110", VA = "0x6B1110")]
		public static void UnPackCodeFromLanguageName(string CodedLanguage, out string Language, out string code)
		{
		}

		[Token(Token = "0x60027B5")]
		[Address(RVA = "0x6B12C8", Offset = "0x6B12C8", VA = "0x6B12C8")]
		public static string GetGoogleLanguageCode(string InternationalCode)
		{
			return null;
		}

		[Token(Token = "0x60027B6")]
		[Address(RVA = "0x6B1490", Offset = "0x6B1490", VA = "0x6B1490")]
		public static string GetLanguageName(string code, bool useParenthesesForRegion = false, bool allowDiscardRegion = true)
		{
			return null;
		}

		[Token(Token = "0x60027B7")]
		[Address(RVA = "0x6B17B0", Offset = "0x6B17B0", VA = "0x6B17B0")]
		public static List<string> GetAllInternationalCodes()
		{
			return null;
		}

		[Token(Token = "0x60027B8")]
		[Address(RVA = "0x6B1998", Offset = "0x6B1998", VA = "0x6B1998")]
		public static bool LanguageCode_HasJoinedWord(string languageCode)
		{
			return default(bool);
		}

		[Token(Token = "0x60027B9")]
		[Address(RVA = "0x6B1B4C", Offset = "0x6B1B4C", VA = "0x6B1B4C")]
		private static int GetPluralRule(string langCode)
		{
			return default(int);
		}

		[Token(Token = "0x60027BA")]
		[Address(RVA = "0x6B1D1C", Offset = "0x6B1D1C", VA = "0x6B1D1C")]
		public static bool LanguageHasPluralType(string langCode, string pluralType)
		{
			return default(bool);
		}

		[Token(Token = "0x60027BB")]
		[Address(RVA = "0x6B1F14", Offset = "0x6B1F14", VA = "0x6B1F14")]
		public static ePluralType GetPluralType(string langCode, int n)
		{
			return default(ePluralType);
		}

		[Token(Token = "0x60027BC")]
		[Address(RVA = "0x6B26AC", Offset = "0x6B26AC", VA = "0x6B26AC")]
		public static int GetPluralTestNumber(string langCode, ePluralType pluralType)
		{
			return default(int);
		}

		[Token(Token = "0x60027BD")]
		[Address(RVA = "0x6B268C", Offset = "0x6B268C", VA = "0x6B268C")]
		private static bool inRange(int amount, int min, int max)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000550")]
	public static class GoogleTranslation
	{
		[Token(Token = "0x20008E8")]
		public delegate void fnOnTranslated(string Translation, string Error);

		[Token(Token = "0x20008E9")]
		public delegate void fnOnTranslationReady(Dictionary<string, TranslationQuery> dict, string error);

		[Token(Token = "0x20008EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D9A0", Offset = "0x39D9A0")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4002AF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public fnOnTranslated OnTranslationReady;

			[Token(Token = "0x4002AF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public string text;

			[Token(Token = "0x4002AF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dictionary<string, TranslationQuery> queries;

			[Token(Token = "0x4002AFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public string LanguageCodeTo;

			[Token(Token = "0x60037E5")]
			[Address(RVA = "0x1105180", Offset = "0x1105180", VA = "0x1105180")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x60037E6")]
			[Address(RVA = "0x1108BB8", Offset = "0x1108BB8", VA = "0x1108BB8")]
			internal void <Translate>b__0(Dictionary<string, TranslationQuery> results, string error)
			{
			}
		}

		[Token(Token = "0x20008EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D9B0", Offset = "0x39D9B0")]
		private sealed class <WaitForTranslations>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002AFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002AFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x170005F3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60037EA")]
				[Address(RVA = "0x1108EB4", Offset = "0x1108EB4", VA = "0x1108EB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005F4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60037EC")]
				[Address(RVA = "0x1108F34", Offset = "0x1108F34", VA = "0x1108F34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60037E7")]
			[Address(RVA = "0x110682C", Offset = "0x110682C", VA = "0x110682C")]
			[DebuggerHidden]
			public <WaitForTranslations>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60037E8")]
			[Address(RVA = "0x1108CD0", Offset = "0x1108CD0", VA = "0x1108CD0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60037E9")]
			[Address(RVA = "0x1108CD4", Offset = "0x1108CD4", VA = "0x1108CD4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60037EB")]
			[Address(RVA = "0x1108EBC", Offset = "0x1108EBC", VA = "0x1108EBC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400212C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<UnityWebRequest> mCurrentTranslations;

		[Token(Token = "0x400212D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static List<TranslationJob> mTranslationJobs;

		[Token(Token = "0x60027BF")]
		[Address(RVA = "0x1104BF0", Offset = "0x1104BF0", VA = "0x1104BF0")]
		public static bool CanTranslate()
		{
			return default(bool);
		}

		[Token(Token = "0x60027C0")]
		[Address(RVA = "0x1104EF0", Offset = "0x1104EF0", VA = "0x1104EF0")]
		public static void Translate(string text, string LanguageCodeFrom, string LanguageCodeTo, fnOnTranslated OnTranslationReady)
		{
		}

		[Token(Token = "0x60027C1")]
		[Address(RVA = "0x11059D4", Offset = "0x11059D4", VA = "0x11059D4")]
		public static string ForceTranslate(string text, string LanguageCodeFrom, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x60027C2")]
		[Address(RVA = "0x1105930", Offset = "0x1105930", VA = "0x1105930")]
		public static void Translate(Dictionary<string, TranslationQuery> requests, fnOnTranslationReady OnTranslationReady, bool usePOST = true)
		{
		}

		[Token(Token = "0x60027C3")]
		[Address(RVA = "0x11060D4", Offset = "0x11060D4", VA = "0x11060D4")]
		public static bool ForceTranslate(Dictionary<string, TranslationQuery> requests, bool usePOST = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60027C4")]
		[Address(RVA = "0x1106170", Offset = "0x1106170", VA = "0x1106170")]
		public static List<string> ConvertTranslationRequest(Dictionary<string, TranslationQuery> requests, bool encodeGET)
		{
			return null;
		}

		[Token(Token = "0x60027C5")]
		[Address(RVA = "0x1105FDC", Offset = "0x1105FDC", VA = "0x1105FDC")]
		private static void AddTranslationJob(TranslationJob job)
		{
		}

		[Token(Token = "0x60027C6")]
		[Address(RVA = "0x11067C0", Offset = "0x11067C0", VA = "0x11067C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AD310", Offset = "0x3AD310")]
		private static IEnumerator WaitForTranslations()
		{
			return null;
		}

		[Token(Token = "0x60027C7")]
		[Address(RVA = "0x110684C", Offset = "0x110684C", VA = "0x110684C")]
		public static string ParseTranslationResult(string html, Dictionary<string, TranslationQuery> requests)
		{
			return null;
		}

		[Token(Token = "0x60027C8")]
		[Address(RVA = "0x1107084", Offset = "0x1107084", VA = "0x1107084")]
		public static bool IsTranslating()
		{
			return default(bool);
		}

		[Token(Token = "0x60027C9")]
		[Address(RVA = "0x1107160", Offset = "0x1107160", VA = "0x1107160")]
		public static void CancelCurrentGoogleTranslations()
		{
		}

		[Token(Token = "0x60027CA")]
		[Address(RVA = "0x11056F8", Offset = "0x11056F8", VA = "0x11056F8")]
		public static void CreateQueries(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x60027CB")]
		[Address(RVA = "0x1107344", Offset = "0x1107344", VA = "0x1107344")]
		private static void CreateQueries_Plurals(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x60027CC")]
		[Address(RVA = "0x1105B38", Offset = "0x1105B38", VA = "0x1105B38")]
		public static void AddQuery(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x60027CD")]
		[Address(RVA = "0x1107F90", Offset = "0x1107F90", VA = "0x1107F90")]
		private static string GetTranslation(string text, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
			return null;
		}

		[Token(Token = "0x60027CE")]
		[Address(RVA = "0x1106DF4", Offset = "0x1106DF4", VA = "0x1106DF4")]
		private static TranslationQuery FindQueryFromOrigText(string origText, Dictionary<string, TranslationQuery> dict)
		{
			return default(TranslationQuery);
		}

		[Token(Token = "0x60027CF")]
		[Address(RVA = "0x110768C", Offset = "0x110768C", VA = "0x110768C")]
		public static bool HasParameters(string text)
		{
			return default(bool);
		}

		[Token(Token = "0x60027D0")]
		[Address(RVA = "0x11078C8", Offset = "0x11078C8", VA = "0x11078C8")]
		public static string GetPluralParameter(string text, bool forceTag)
		{
			return null;
		}

		[Token(Token = "0x60027D1")]
		[Address(RVA = "0x1107744", Offset = "0x1107744", VA = "0x1107744")]
		public static string GetPluralText(string text, string pluralType)
		{
			return null;
		}

		[Token(Token = "0x60027D2")]
		[Address(RVA = "0x11080AC", Offset = "0x11080AC", VA = "0x11080AC")]
		private static int FindClosingTag(string tag, MatchCollection matches, int startIndex)
		{
			return default(int);
		}

		[Token(Token = "0x60027D3")]
		[Address(RVA = "0x1106FD0", Offset = "0x1106FD0", VA = "0x1106FD0")]
		private static string GetGoogleNoTranslateTag(int tagNumber)
		{
			return null;
		}

		[Token(Token = "0x60027D4")]
		[Address(RVA = "0x11079E4", Offset = "0x11079E4", VA = "0x11079E4")]
		private static void ParseNonTranslatableElements(ref TranslationQuery query)
		{
		}

		[Token(Token = "0x60027D5")]
		[Address(RVA = "0x1105E88", Offset = "0x1105E88", VA = "0x1105E88")]
		public static string GetQueryResult(string text, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
			return null;
		}

		[Token(Token = "0x60027D6")]
		[Address(RVA = "0x11082A4", Offset = "0x11082A4", VA = "0x11082A4")]
		public static string RebuildTranslation(string text, Dictionary<string, TranslationQuery> dict, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x60027D7")]
		[Address(RVA = "0x1108550", Offset = "0x1108550", VA = "0x1108550")]
		private static string RebuildTranslation_Plural(string text, Dictionary<string, TranslationQuery> dict, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x60027D8")]
		[Address(RVA = "0x11089B8", Offset = "0x11089B8", VA = "0x11089B8")]
		public static string UppercaseFirst(string s)
		{
			return null;
		}

		[Token(Token = "0x60027D9")]
		[Address(RVA = "0x11066D4", Offset = "0x11066D4", VA = "0x11066D4")]
		public static string TitleCase(string s)
		{
			return null;
		}
	}
	[Token(Token = "0x2000551")]
	public struct TranslationQuery
	{
		[Token(Token = "0x400212E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string OrigText;

		[Token(Token = "0x400212F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public string Text;

		[Token(Token = "0x4002130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string LanguageCode;

		[Token(Token = "0x4002131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string[] TargetLanguagesCode;

		[Token(Token = "0x4002132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] Results;

		[Token(Token = "0x4002133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public string[] Tags;
	}
	[Token(Token = "0x2000552")]
	public class TranslationJob : IDisposable
	{
		[Token(Token = "0x20008EC")]
		public enum eJobState
		{
			[Token(Token = "0x4002AFE")]
			Running,
			[Token(Token = "0x4002AFF")]
			Succeeded,
			[Token(Token = "0x4002B00")]
			Failed
		}

		[Token(Token = "0x4002134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public eJobState mJobState;

		[Token(Token = "0x60027DB")]
		[Address(RVA = "0x85FB8C", Offset = "0x85FB8C", VA = "0x85FB8C", Slot = "5")]
		public virtual eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x60027DC")]
		[Address(RVA = "0x85FB94", Offset = "0x85FB94", VA = "0x85FB94", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60027DD")]
		[Address(RVA = "0x85FB98", Offset = "0x85FB98", VA = "0x85FB98")]
		public TranslationJob()
		{
		}
	}
	[Token(Token = "0x2000553")]
	public class TranslationJob_WWW : TranslationJob
	{
		[Token(Token = "0x4002135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public UnityWebRequest www;

		[Token(Token = "0x60027DE")]
		[Address(RVA = "0x8617D8", Offset = "0x8617D8", VA = "0x8617D8", Slot = "6")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x60027DF")]
		[Address(RVA = "0x85FC54", Offset = "0x85FC54", VA = "0x85FC54")]
		public TranslationJob_WWW()
		{
		}
	}
	[Token(Token = "0x2000554")]
	public class TranslationJob_GET : TranslationJob_WWW
	{
		[Token(Token = "0x4002136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x4002137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x4002138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<string> mQueries;

		[Token(Token = "0x4002139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public string mErrorMessage;

		[Token(Token = "0x60027E0")]
		[Address(RVA = "0x85FBA0", Offset = "0x85FBA0", VA = "0x85FBA0")]
		public TranslationJob_GET(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x60027E1")]
		[Address(RVA = "0x85FC5C", Offset = "0x85FC5C", VA = "0x85FC5C")]
		private void ExecuteNextQuery()
		{
		}

		[Token(Token = "0x60027E2")]
		[Address(RVA = "0x85FDB8", Offset = "0x85FDB8", VA = "0x85FDB8", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x60027E3")]
		[Address(RVA = "0x85FE88", Offset = "0x85FE88", VA = "0x85FE88")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}
	}
	[Token(Token = "0x2000555")]
	public class TranslationJob_Main : TranslationJob
	{
		[Token(Token = "0x400213A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private TranslationJob_WEB mWeb;

		[Token(Token = "0x400213B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TranslationJob_POST mPost;

		[Token(Token = "0x400213C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private TranslationJob_GET mGet;

		[Token(Token = "0x400213D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x400213E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x400213F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string mErrorMessage;

		[Token(Token = "0x60027E4")]
		[Address(RVA = "0x85FFC0", Offset = "0x85FFC0", VA = "0x85FFC0")]
		public TranslationJob_Main(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x60027E5")]
		[Address(RVA = "0x8601E4", Offset = "0x8601E4", VA = "0x8601E4", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x60027E6")]
		[Address(RVA = "0x8603F4", Offset = "0x8603F4", VA = "0x8603F4", Slot = "6")]
		public override void Dispose()
		{
		}
	}
	[Token(Token = "0x2000556")]
	public class TranslationJob_POST : TranslationJob_WWW
	{
		[Token(Token = "0x4002140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x4002141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x60027E7")]
		[Address(RVA = "0x860048", Offset = "0x860048", VA = "0x860048")]
		public TranslationJob_POST(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x60027E8")]
		[Address(RVA = "0x860448", Offset = "0x860448", VA = "0x860448", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x60027E9")]
		[Address(RVA = "0x860504", Offset = "0x860504", VA = "0x860504")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}
	}
	[Token(Token = "0x2000557")]
	public class TranslationJob_WEB : TranslationJob_WWW
	{
		[Serializable]
		[Token(Token = "0x20008ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D9C0", Offset = "0x39D9C0")]
		private sealed class <>c
		{
			[Token(Token = "0x4002B01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002B02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static Comparison<KeyValuePair<string, string>> <>9__8_0;

			[Token(Token = "0x4002B03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static MatchEvaluator <>9__12_0;

			[Token(Token = "0x4002B04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public static MatchEvaluator <>9__12_1;

			[Token(Token = "0x60037EE")]
			[Address(RVA = "0x8615A0", Offset = "0x8615A0", VA = "0x8615A0")]
			public <>c()
			{
			}

			[Token(Token = "0x60037EF")]
			[Address(RVA = "0x8615A8", Offset = "0x8615A8", VA = "0x8615A8")]
			internal int <FindAllQueries>b__8_0(KeyValuePair<string, string> a, KeyValuePair<string, string> b)
			{
				return default(int);
			}

			[Token(Token = "0x60037F0")]
			[Address(RVA = "0x86160C", Offset = "0x86160C", VA = "0x86160C")]
			internal string <ParseTranslationResult>b__12_0(Match match)
			{
				return null;
			}

			[Token(Token = "0x60037F1")]
			[Address(RVA = "0x8616F4", Offset = "0x8616F4", VA = "0x8616F4")]
			internal string <ParseTranslationResult>b__12_1(Match match)
			{
				return null;
			}
		}

		[Token(Token = "0x4002142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x4002143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x4002144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string mErrorMessage;

		[Token(Token = "0x4002145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private string mCurrentBatch_ToLanguageCode;

		[Token(Token = "0x4002146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string mCurrentBatch_FromLanguageCode;

		[Token(Token = "0x4002147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private List<string> mCurrentBatch_Text;

		[Token(Token = "0x4002148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<KeyValuePair<string, string>> mQueries;

		[Token(Token = "0x60027EA")]
		[Address(RVA = "0x860620", Offset = "0x860620", VA = "0x860620")]
		public TranslationJob_WEB(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x60027EB")]
		[Address(RVA = "0x860658", Offset = "0x860658", VA = "0x860658")]
		private void FindAllQueries()
		{
		}

		[Token(Token = "0x60027EC")]
		[Address(RVA = "0x860988", Offset = "0x860988", VA = "0x860988")]
		private void ExecuteNextBatch()
		{
		}

		[Token(Token = "0x60027ED")]
		[Address(RVA = "0x860D70", Offset = "0x860D70", VA = "0x860D70", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x60027EE")]
		[Address(RVA = "0x860E40", Offset = "0x860E40", VA = "0x860E40")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}

		[Token(Token = "0x60027EF")]
		[Address(RVA = "0x860F88", Offset = "0x860F88", VA = "0x860F88")]
		private string ParseTranslationResult(string html, string OriginalText)
		{
			return null;
		}
	}
	[Token(Token = "0x2000558")]
	public enum eLanguageDataFlags
	{
		[Token(Token = "0x400214A")]
		DISABLED = 1,
		[Token(Token = "0x400214B")]
		KEEP_LOADED = 2,
		[Token(Token = "0x400214C")]
		NOT_LOADED = 4
	}
	[Serializable]
	[Token(Token = "0x2000559")]
	public class LanguageData
	{
		[Token(Token = "0x400214D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Name;

		[Token(Token = "0x400214E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string Code;

		[Token(Token = "0x400214F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte Flags;

		[NonSerialized]
		[Token(Token = "0x4002150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool Compressed;

		[Token(Token = "0x60027F0")]
		[Address(RVA = "0x110C23C", Offset = "0x110C23C", VA = "0x110C23C")]
		public bool IsEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x60027F1")]
		[Address(RVA = "0x110C24C", Offset = "0x110C24C", VA = "0x110C24C")]
		public void SetEnabled(bool bEnabled)
		{
		}

		[Token(Token = "0x60027F2")]
		[Address(RVA = "0x110C264", Offset = "0x110C264", VA = "0x110C264")]
		public bool IsLoaded()
		{
			return default(bool);
		}

		[Token(Token = "0x60027F3")]
		[Address(RVA = "0x110C278", Offset = "0x110C278", VA = "0x110C278")]
		public bool CanBeUnloaded()
		{
			return default(bool);
		}

		[Token(Token = "0x60027F4")]
		[Address(RVA = "0x110C28C", Offset = "0x110C28C", VA = "0x110C28C")]
		public void SetLoaded(bool loaded)
		{
		}

		[Token(Token = "0x60027F5")]
		[Address(RVA = "0x110C2A4", Offset = "0x110C2A4", VA = "0x110C2A4")]
		public void SetCanBeUnLoaded(bool allowUnloading)
		{
		}

		[Token(Token = "0x60027F6")]
		[Address(RVA = "0x110C2BC", Offset = "0x110C2BC", VA = "0x110C2BC")]
		public LanguageData()
		{
		}
	}
	[Token(Token = "0x200055A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x39AE84", Offset = "0x39AE84")]
	[ExecuteInEditMode]
	public class LanguageSource : UnityEngine.MonoBehaviour, ISerializationCallbackReceiver, ILanguageSource
	{
		[Token(Token = "0x20008EE")]
		public delegate void fnOnSourceUpdated(LanguageSourceData source, bool ReceivedNewData, string errorMsg);

		[Token(Token = "0x4002151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public LanguageSourceData mSource;

		[Token(Token = "0x4002152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int version;

		[Token(Token = "0x4002153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool NeverDestroy;

		[Token(Token = "0x4002154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool UserAgreesToHaveItOnTheScene;

		[Token(Token = "0x4002155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool UserAgreesToHaveItInsideThePluginsFolder;

		[Token(Token = "0x4002156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public bool GoogleLiveSyncIsUptoDate;

		[Token(Token = "0x4002157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<UnityEngine.Object> Assets;

		[Token(Token = "0x4002158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public string Google_WebServiceURL;

		[Token(Token = "0x4002159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Google_SpreadsheetKey;

		[Token(Token = "0x400215A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public string Google_SpreadsheetName;

		[Token(Token = "0x400215B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Google_LastUpdatedVersion;

		[Token(Token = "0x400215C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LanguageSourceData.eGoogleUpdateFrequency GoogleUpdateFrequency;

		[Token(Token = "0x400215D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float GoogleUpdateDelay;

		[Token(Token = "0x400215F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<LanguageData> mLanguages;

		[Token(Token = "0x4002160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool IgnoreDeviceLanguage;

		[Token(Token = "0x4002161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LanguageSourceData.eAllowUnloadLanguages _AllowUnloadingLanguages;

		[Token(Token = "0x4002162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public List<TermData> mTerms;

		[Token(Token = "0x4002163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool CaseInsensitiveTerms;

		[Token(Token = "0x4002164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public LanguageSourceData.MissingTranslationAction OnMissingTranslation;

		[Token(Token = "0x4002165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string mTerm_AppName;

		[Token(Token = "0x170003DB")]
		public LanguageSourceData SourceData
		{
			[Token(Token = "0x60027F7")]
			[Address(RVA = "0x110C2C4", Offset = "0x110C2C4", VA = "0x110C2C4", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x60027F8")]
			[Address(RVA = "0x110C2CC", Offset = "0x110C2CC", VA = "0x110C2CC", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x14000043")]
		public event fnOnSourceUpdated Event_OnSourceUpdateFromGoogle
		{
			[Token(Token = "0x60027F9")]
			[Address(RVA = "0x110C2D4", Offset = "0x110C2D4", VA = "0x110C2D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AD380", Offset = "0x3AD380")]
			add
			{
			}
			[Token(Token = "0x60027FA")]
			[Address(RVA = "0x110C384", Offset = "0x110C384", VA = "0x110C384")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AD390", Offset = "0x3AD390")]
			remove
			{
			}
		}

		[Token(Token = "0x60027FB")]
		[Address(RVA = "0x110C434", Offset = "0x110C434", VA = "0x110C434")]
		private void Awake()
		{
		}

		[Token(Token = "0x60027FC")]
		[Address(RVA = "0x110C504", Offset = "0x110C504", VA = "0x110C504")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60027FD")]
		[Address(RVA = "0x110C5A8", Offset = "0x110C5A8", VA = "0x110C5A8")]
		public string GetSourceName()
		{
			return null;
		}

		[Token(Token = "0x60027FE")]
		[Address(RVA = "0x110C6CC", Offset = "0x110C6CC", VA = "0x110C6CC", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60027FF")]
		[Address(RVA = "0x110C6D8", Offset = "0x110C6D8", VA = "0x110C6D8", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6002800")]
		[Address(RVA = "0x110CE40", Offset = "0x110CE40", VA = "0x110CE40")]
		public LanguageSource()
		{
		}
	}
	[Token(Token = "0x200055B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x39AECC", Offset = "0x39AECC")]
	public class LanguageSourceAsset : ScriptableObject, ILanguageSource
	{
		[Token(Token = "0x4002166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public LanguageSourceData mSource;

		[Token(Token = "0x170003DC")]
		public LanguageSourceData SourceData
		{
			[Token(Token = "0x6002801")]
			[Address(RVA = "0x110D54C", Offset = "0x110D54C", VA = "0x110D54C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002802")]
			[Address(RVA = "0x110D554", Offset = "0x110D554", VA = "0x110D554", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6002803")]
		[Address(RVA = "0x110D55C", Offset = "0x110D55C", VA = "0x110D55C")]
		public LanguageSourceAsset()
		{
		}
	}
	[Token(Token = "0x200055C")]
	public interface ILanguageSource
	{
		[Token(Token = "0x170003DD")]
		LanguageSourceData SourceData
		{
			[Token(Token = "0x6002804")]
			get;
			[Token(Token = "0x6002805")]
			set;
		}
	}
	[Serializable]
	[Token(Token = "0x200055D")]
	[ExecuteInEditMode]
	public class LanguageSourceData
	{
		[Token(Token = "0x20008EF")]
		public enum MissingTranslationAction
		{
			[Token(Token = "0x4002B06")]
			Empty,
			[Token(Token = "0x4002B07")]
			Fallback,
			[Token(Token = "0x4002B08")]
			ShowWarning,
			[Token(Token = "0x4002B09")]
			ShowTerm
		}

		[Token(Token = "0x20008F0")]
		public enum eAllowUnloadLanguages
		{
			[Token(Token = "0x4002B0B")]
			Never,
			[Token(Token = "0x4002B0C")]
			OnlyInDevice,
			[Token(Token = "0x4002B0D")]
			EditorAndDevice
		}

		[Token(Token = "0x20008F1")]
		public enum eGoogleUpdateFrequency
		{
			[Token(Token = "0x4002B0F")]
			Always,
			[Token(Token = "0x4002B10")]
			Never,
			[Token(Token = "0x4002B11")]
			Daily,
			[Token(Token = "0x4002B12")]
			Weekly,
			[Token(Token = "0x4002B13")]
			Monthly,
			[Token(Token = "0x4002B14")]
			OnlyOnce,
			[Token(Token = "0x4002B15")]
			EveryOtherDay
		}

		[Token(Token = "0x20008F2")]
		public enum eGoogleUpdateSynchronization
		{
			[Token(Token = "0x4002B17")]
			Manual,
			[Token(Token = "0x4002B18")]
			OnSceneLoaded,
			[Token(Token = "0x4002B19")]
			AsSoonAsDownloaded
		}

		[Serializable]
		[Token(Token = "0x20008F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D9D0", Offset = "0x39D9D0")]
		private sealed class <>c
		{
			[Token(Token = "0x4002B1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002B1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static Predicate<UnityEngine.Object> <>9__39_0;

			[Token(Token = "0x4002B1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<UnityEngine.Object, string> <>9__39_1;

			[Token(Token = "0x4002B1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public static Func<IGrouping<string, UnityEngine.Object>, string> <>9__39_2;

			[Token(Token = "0x4002B1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<IGrouping<string, UnityEngine.Object>, UnityEngine.Object> <>9__39_3;

			[Token(Token = "0x4002B1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public static Comparison<TermData> <>9__43_0;

			[Token(Token = "0x4002B20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Comparison<TermData> <>9__47_0;

			[Token(Token = "0x60037F7")]
			[Address(RVA = "0x1116C58", Offset = "0x1116C58", VA = "0x1116C58")]
			public <>c()
			{
			}

			[Token(Token = "0x60037F8")]
			[Address(RVA = "0x1116C60", Offset = "0x1116C60", VA = "0x1116C60")]
			internal bool <UpdateAssetDictionary>b__39_0(UnityEngine.Object x)
			{
				return default(bool);
			}

			[Token(Token = "0x60037F9")]
			[Address(RVA = "0x1116CE0", Offset = "0x1116CE0", VA = "0x1116CE0")]
			internal string <UpdateAssetDictionary>b__39_1(UnityEngine.Object o)
			{
				return null;
			}

			[Token(Token = "0x60037FA")]
			[Address(RVA = "0x1116D08", Offset = "0x1116D08", VA = "0x1116D08")]
			internal string <UpdateAssetDictionary>b__39_2(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}

			[Token(Token = "0x60037FB")]
			[Address(RVA = "0x1116DD0", Offset = "0x1116DD0", VA = "0x1116DD0")]
			internal UnityEngine.Object <UpdateAssetDictionary>b__39_3(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}

			[Token(Token = "0x60037FC")]
			[Address(RVA = "0x1116E2C", Offset = "0x1116E2C", VA = "0x1116E2C")]
			internal int <Export_I2CSV>b__43_0(TermData a, TermData b)
			{
				return default(int);
			}

			[Token(Token = "0x60037FD")]
			[Address(RVA = "0x1116E6C", Offset = "0x1116E6C", VA = "0x1116E6C")]
			internal int <Export_CSV>b__47_0(TermData a, TermData b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x20008F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D9E0", Offset = "0x39D9E0")]
		private sealed class <Import_Google_Coroutine>d__65 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002B22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002B23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LanguageSourceData <>4__this;

			[Token(Token = "0x4002B24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool JustCheck;

			[Token(Token = "0x4002B25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x170005F5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003801")]
				[Address(RVA = "0x111722C", Offset = "0x111722C", VA = "0x111722C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005F6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003803")]
				[Address(RVA = "0x11172AC", Offset = "0x11172AC", VA = "0x11172AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60037FE")]
			[Address(RVA = "0x1114328", Offset = "0x1114328", VA = "0x1114328")]
			[DebuggerHidden]
			public <Import_Google_Coroutine>d__65(int <>1__state)
			{
			}

			[Token(Token = "0x60037FF")]
			[Address(RVA = "0x1116EAC", Offset = "0x1116EAC", VA = "0x1116EAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003800")]
			[Address(RVA = "0x1116EB0", Offset = "0x1116EB0", VA = "0x1116EB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003802")]
			[Address(RVA = "0x1117234", Offset = "0x1117234", VA = "0x1117234", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[NonSerialized]
		[Token(Token = "0x4002167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ILanguageSource owner;

		[Token(Token = "0x4002168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool UserAgreesToHaveItOnTheScene;

		[Token(Token = "0x4002169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		public bool UserAgreesToHaveItInsideThePluginsFolder;

		[Token(Token = "0x400216A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		public bool GoogleLiveSyncIsUptoDate;

		[NonSerialized]
		[Token(Token = "0x400216B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
		public bool mIsGlobalSource;

		[Token(Token = "0x400216C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<TermData> mTerms;

		[Token(Token = "0x400216D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool CaseInsensitiveTerms;

		[NonSerialized]
		[Token(Token = "0x400216E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<string, TermData> mDictionary;

		[Token(Token = "0x400216F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public MissingTranslationAction OnMissingTranslation;

		[Token(Token = "0x4002170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string mTerm_AppName;

		[Token(Token = "0x4002171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public List<LanguageData> mLanguages;

		[Token(Token = "0x4002172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool IgnoreDeviceLanguage;

		[Token(Token = "0x4002173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public eAllowUnloadLanguages _AllowUnloadingLanguages;

		[Token(Token = "0x4002174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Google_WebServiceURL;

		[Token(Token = "0x4002175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public string Google_SpreadsheetKey;

		[Token(Token = "0x4002176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string Google_SpreadsheetName;

		[Token(Token = "0x4002177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public string Google_LastUpdatedVersion;

		[Token(Token = "0x4002178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public eGoogleUpdateFrequency GoogleUpdateFrequency;

		[Token(Token = "0x4002179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public eGoogleUpdateFrequency GoogleInEditorCheckFrequency;

		[Token(Token = "0x400217A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public eGoogleUpdateSynchronization GoogleUpdateSynchronization;

		[Token(Token = "0x400217B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float GoogleUpdateDelay;

		[Token(Token = "0x400217D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public List<UnityEngine.Object> Assets;

		[NonSerialized]
		[Token(Token = "0x400217E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Dictionary<string, UnityEngine.Object> mAssetDictionary;

		[Token(Token = "0x400217F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private string mDelayedGoogleData;

		[Token(Token = "0x4002180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string EmptyCategory;

		[Token(Token = "0x4002181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static char[] CategorySeparators;

		[Token(Token = "0x170003DE")]
		public UnityEngine.Object ownerObject
		{
			[Token(Token = "0x6002806")]
			[Address(RVA = "0x110D5CC", Offset = "0x110D5CC", VA = "0x110D5CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000044")]
		public event LanguageSource.fnOnSourceUpdated Event_OnSourceUpdateFromGoogle
		{
			[Token(Token = "0x6002807")]
			[Address(RVA = "0x110CD90", Offset = "0x110CD90", VA = "0x110CD90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AD3A0", Offset = "0x3AD3A0")]
			add
			{
			}
			[Token(Token = "0x6002808")]
			[Address(RVA = "0x110D65C", Offset = "0x110D65C", VA = "0x110D65C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AD3B0", Offset = "0x3AD3B0")]
			remove
			{
			}
		}

		[Token(Token = "0x6002809")]
		[Address(RVA = "0x110C470", Offset = "0x110C470", VA = "0x110C470")]
		public void Awake()
		{
		}

		[Token(Token = "0x600280A")]
		[Address(RVA = "0x110C530", Offset = "0x110C530", VA = "0x110C530")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x600280B")]
		[Address(RVA = "0x110E280", Offset = "0x110E280", VA = "0x110E280")]
		public bool IsEqualTo(LanguageSourceData Source)
		{
			return default(bool);
		}

		[Token(Token = "0x600280C")]
		[Address(RVA = "0x110E920", Offset = "0x110E920", VA = "0x110E920")]
		internal bool ManagerHasASimilarSource()
		{
			return default(bool);
		}

		[Token(Token = "0x600280D")]
		[Address(RVA = "0x110EA48", Offset = "0x110EA48", VA = "0x110EA48")]
		public void ClearAllData()
		{
		}

		[Token(Token = "0x600280E")]
		[Address(RVA = "0x110EB2C", Offset = "0x110EB2C", VA = "0x110EB2C")]
		public bool IsGlobalSource()
		{
			return default(bool);
		}

		[Token(Token = "0x600280F")]
		[Address(RVA = "0x110EB34", Offset = "0x110EB34", VA = "0x110EB34")]
		public void Editor_SetDirty()
		{
		}

		[Token(Token = "0x6002810")]
		[Address(RVA = "0x110DD30", Offset = "0x110DD30", VA = "0x110DD30")]
		public void UpdateAssetDictionary()
		{
		}

		[Token(Token = "0x6002811")]
		[Address(RVA = "0x110EB38", Offset = "0x110EB38", VA = "0x110EB38")]
		public UnityEngine.Object FindAsset(string Name)
		{
			return null;
		}

		[Token(Token = "0x6002812")]
		[Address(RVA = "0x110EC24", Offset = "0x110EC24", VA = "0x110EC24")]
		public bool HasAsset(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002813")]
		[Address(RVA = "0x110EC98", Offset = "0x110EC98", VA = "0x110EC98")]
		public void AddAsset(UnityEngine.Object Obj)
		{
		}

		[Token(Token = "0x6002814")]
		[Address(RVA = "0x110ED4C", Offset = "0x110ED4C", VA = "0x110ED4C")]
		public string Export_I2CSV(string Category, char Separator = ',', bool specializationsAsRows = true)
		{
			return null;
		}

		[Token(Token = "0x6002815")]
		[Address(RVA = "0x110F4E4", Offset = "0x110F4E4", VA = "0x110F4E4")]
		private static void AppendI2Term(StringBuilder Builder, int nLanguages, string Term, TermData termData, char Separator, string forceSpecialization)
		{
		}

		[Token(Token = "0x6002816")]
		[Address(RVA = "0x110F864", Offset = "0x110F864", VA = "0x110F864")]
		private static void AppendI2Text(StringBuilder Builder, string text)
		{
		}

		[Token(Token = "0x6002817")]
		[Address(RVA = "0x110F95C", Offset = "0x110F95C", VA = "0x110F95C")]
		private string Export_Language_to_Cache(int langIndex, bool fillTermWithFallback)
		{
			return null;
		}

		[Token(Token = "0x6002818")]
		[Address(RVA = "0x1110008", Offset = "0x1110008", VA = "0x1110008")]
		public string Export_CSV(string Category, char Separator = ',', bool specializationsAsRows = true)
		{
			return null;
		}

		[Token(Token = "0x6002819")]
		[Address(RVA = "0x1110A40", Offset = "0x1110A40", VA = "0x1110A40")]
		private static void AppendTerm(StringBuilder Builder, int nLanguages, string Term, TermData termData, string specialization, char Separator)
		{
		}

		[Token(Token = "0x600281A")]
		[Address(RVA = "0x11108AC", Offset = "0x11108AC", VA = "0x11108AC")]
		private static void AppendString(StringBuilder Builder, string Text, char Separator)
		{
		}

		[Token(Token = "0x600281B")]
		[Address(RVA = "0x1110D8C", Offset = "0x1110D8C", VA = "0x1110D8C")]
		private static void AppendTranslation(StringBuilder Builder, string Text, char Separator, string tags)
		{
		}

		[Token(Token = "0x600281C")]
		[Address(RVA = "0x1110F54", Offset = "0x1110F54", VA = "0x1110F54")]
		public UnityWebRequest Export_Google_CreateWWWcall(eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x600281D")]
		[Address(RVA = "0x111118C", Offset = "0x111118C", VA = "0x111118C")]
		private string Export_Google_CreateData()
		{
			return null;
		}

		[Token(Token = "0x600281E")]
		[Address(RVA = "0x11115D8", Offset = "0x11115D8", VA = "0x11115D8")]
		public string Import_CSV(string Category, string CSVstring, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace, char Separator = ',')
		{
			return null;
		}

		[Token(Token = "0x600281F")]
		[Address(RVA = "0x11124A0", Offset = "0x11124A0", VA = "0x11124A0")]
		public string Import_I2CSV(string Category, string I2CSVstring, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x6002820")]
		[Address(RVA = "0x111170C", Offset = "0x111170C", VA = "0x111170C")]
		public string Import_CSV(string Category, List<string[]> CSV, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x6002821")]
		[Address(RVA = "0x1112700", Offset = "0x1112700", VA = "0x1112700")]
		private bool ArrayContains(string MainText, params string[] texts)
		{
			return default(bool);
		}

		[Token(Token = "0x6002822")]
		[Address(RVA = "0x1112BE8", Offset = "0x1112BE8", VA = "0x1112BE8")]
		public static eTermType GetTermType(string type)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002823")]
		[Address(RVA = "0x1112ED4", Offset = "0x1112ED4", VA = "0x1112ED4")]
		private void Import_Language_from_Cache(int langIndex, string langData, bool useFallback, bool onlyCurrentSpecialization)
		{
		}

		[Token(Token = "0x6002824")]
		[Address(RVA = "0x1113120", Offset = "0x1113120", VA = "0x1113120")]
		public static void FreeUnusedLanguages()
		{
		}

		[Token(Token = "0x6002825")]
		[Address(RVA = "0x1113344", Offset = "0x1113344", VA = "0x1113344")]
		public void Import_Google_FromCache()
		{
		}

		[Token(Token = "0x6002826")]
		[Address(RVA = "0x11137C8", Offset = "0x11137C8", VA = "0x11137C8")]
		private bool IsNewerVersion(string currentVersion, string newVersion)
		{
			return default(bool);
		}

		[Token(Token = "0x6002827")]
		[Address(RVA = "0x1113F7C", Offset = "0x1113F7C", VA = "0x1113F7C")]
		public void Import_Google(bool ForceUpdate, bool justCheck)
		{
		}

		[Token(Token = "0x6002828")]
		[Address(RVA = "0x11135A8", Offset = "0x11135A8", VA = "0x11135A8")]
		private string GetSourcePlayerPrefName()
		{
			return null;
		}

		[Token(Token = "0x6002829")]
		[Address(RVA = "0x1114290", Offset = "0x1114290", VA = "0x1114290")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AD3C0", Offset = "0x3AD3C0")]
		private IEnumerator Import_Google_Coroutine(bool JustCheck)
		{
			return null;
		}

		[Token(Token = "0x600282A")]
		[Address(RVA = "0x1114348", Offset = "0x1114348", VA = "0x1114348")]
		private void ApplyDownloadedDataOnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x600282B")]
		[Address(RVA = "0x11143E4", Offset = "0x11143E4", VA = "0x11143E4")]
		public void ApplyDownloadedDataFromGoogle()
		{
		}

		[Token(Token = "0x600282C")]
		[Address(RVA = "0x1114574", Offset = "0x1114574", VA = "0x1114574")]
		public UnityWebRequest Import_Google_CreateWWWcall(bool ForceUpdate, bool justCheck)
		{
			return null;
		}

		[Token(Token = "0x600282D")]
		[Address(RVA = "0x11146EC", Offset = "0x11146EC", VA = "0x11146EC")]
		public bool HasGoogleSpreadsheet()
		{
			return default(bool);
		}

		[Token(Token = "0x600282E")]
		[Address(RVA = "0x1113870", Offset = "0x1113870", VA = "0x1113870")]
		public string Import_Google_Result(string JsonString, eSpreadsheetUpdateMode UpdateMode, bool saveInPlayerPrefs = false)
		{
			return null;
		}

		[Token(Token = "0x600282F")]
		[Address(RVA = "0x110E480", Offset = "0x110E480", VA = "0x110E480")]
		public int GetLanguageIndex(string language, bool AllowDiscartingRegion = true, bool SkipDisabled = true)
		{
			return default(int);
		}

		[Token(Token = "0x6002830")]
		[Address(RVA = "0x11149B4", Offset = "0x11149B4", VA = "0x11149B4")]
		public LanguageData GetLanguageData(string language, bool AllowDiscartingRegion = true)
		{
			return null;
		}

		[Token(Token = "0x6002831")]
		[Address(RVA = "0x1114A60", Offset = "0x1114A60", VA = "0x1114A60")]
		public bool IsCurrentLanguage(int languageIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6002832")]
		[Address(RVA = "0x1112798", Offset = "0x1112798", VA = "0x1112798")]
		public int GetLanguageIndexFromCode(string Code, bool exactMatch = true, bool ignoreDisabled = false)
		{
			return default(int);
		}

		[Token(Token = "0x6002833")]
		[Address(RVA = "0x11147AC", Offset = "0x11147AC", VA = "0x11147AC")]
		public static int GetCommonWordInLanguageNames(string Language1, string Language2)
		{
			return default(int);
		}

		[Token(Token = "0x6002834")]
		[Address(RVA = "0x1114B28", Offset = "0x1114B28", VA = "0x1114B28")]
		public static bool AreTheSameLanguage(string Language1, string Language2)
		{
			return default(bool);
		}

		[Token(Token = "0x6002835")]
		[Address(RVA = "0x1114BCC", Offset = "0x1114BCC", VA = "0x1114BCC")]
		public static string GetLanguageWithoutRegion(string Language)
		{
			return null;
		}

		[Token(Token = "0x6002836")]
		[Address(RVA = "0x1114CA8", Offset = "0x1114CA8", VA = "0x1114CA8")]
		public void AddLanguage(string LanguageName)
		{
		}

		[Token(Token = "0x6002837")]
		[Address(RVA = "0x1114D3C", Offset = "0x1114D3C", VA = "0x1114D3C")]
		public void AddLanguage(string LanguageName, string LanguageCode)
		{
		}

		[Token(Token = "0x6002838")]
		[Address(RVA = "0x1114F0C", Offset = "0x1114F0C", VA = "0x1114F0C")]
		public void RemoveLanguage(string LanguageName)
		{
		}

		[Token(Token = "0x6002839")]
		[Address(RVA = "0x1115278", Offset = "0x1115278", VA = "0x1115278")]
		public List<string> GetLanguages(bool skipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x600283A")]
		[Address(RVA = "0x11153E0", Offset = "0x11153E0", VA = "0x11153E0")]
		public List<string> GetLanguagesCode(bool allowRegions = true, bool skipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x600283B")]
		[Address(RVA = "0x11155C4", Offset = "0x11155C4", VA = "0x11155C4")]
		public bool IsLanguageEnabled(string Language)
		{
			return default(bool);
		}

		[Token(Token = "0x600283C")]
		[Address(RVA = "0x1115684", Offset = "0x1115684", VA = "0x1115684")]
		public void EnableLanguage(string Language, bool bEnabled)
		{
		}

		[Token(Token = "0x600283D")]
		[Address(RVA = "0x1115748", Offset = "0x1115748", VA = "0x1115748")]
		public bool AllowUnloadingLanguages()
		{
			return default(bool);
		}

		[Token(Token = "0x600283E")]
		[Address(RVA = "0x1115758", Offset = "0x1115758", VA = "0x1115758")]
		private string GetSavedLanguageFileName(int languageIndex)
		{
			return null;
		}

		[Token(Token = "0x600283F")]
		[Address(RVA = "0x11159C8", Offset = "0x11159C8", VA = "0x11159C8")]
		public void LoadLanguage(int languageIndex, bool UnloadOtherLanguages, bool useFallback, bool onlyCurrentSpecialization, bool forceLoad)
		{
		}

		[Token(Token = "0x6002840")]
		[Address(RVA = "0x1115E20", Offset = "0x1115E20", VA = "0x1115E20")]
		public void LoadAllLanguages(bool forceLoad = false)
		{
		}

		[Token(Token = "0x6002841")]
		[Address(RVA = "0x1115B84", Offset = "0x1115B84", VA = "0x1115B84")]
		public void UnloadLanguage(int languageIndex)
		{
		}

		[Token(Token = "0x6002842")]
		[Address(RVA = "0x1112D98", Offset = "0x1112D98", VA = "0x1112D98")]
		public void SaveLanguages(bool unloadAll, PersistentStorage.eFileType fileLocation = PersistentStorage.eFileType.Temporal)
		{
		}

		[Token(Token = "0x6002843")]
		[Address(RVA = "0x1112CDC", Offset = "0x1112CDC", VA = "0x1112CDC")]
		public bool HasUnloadedLanguages()
		{
			return default(bool);
		}

		[Token(Token = "0x6002844")]
		[Address(RVA = "0x11113A4", Offset = "0x11113A4", VA = "0x11113A4")]
		public List<string> GetCategories(bool OnlyMainCategory = false, [Optional] List<string> Categories)
		{
			return null;
		}

		[Token(Token = "0x6002845")]
		[Address(RVA = "0x1116000", Offset = "0x1116000", VA = "0x1116000")]
		public static string GetKeyFromFullTerm(string FullTerm, bool OnlyMainCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6002846")]
		[Address(RVA = "0x1115EB8", Offset = "0x1115EB8", VA = "0x1115EB8")]
		public static string GetCategoryFromFullTerm(string FullTerm, bool OnlyMainCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6002847")]
		[Address(RVA = "0x111611C", Offset = "0x111611C", VA = "0x111611C")]
		public static void DeserializeFullTerm(string FullTerm, out string Key, out string Category, bool OnlyMainCategory = false)
		{
		}

		[Token(Token = "0x6002848")]
		[Address(RVA = "0x110D980", Offset = "0x110D980", VA = "0x110D980")]
		public void UpdateDictionary(bool force = false)
		{
		}

		[Token(Token = "0x6002849")]
		[Address(RVA = "0x11162AC", Offset = "0x11162AC", VA = "0x11162AC")]
		public string GetTranslation(string term, [Optional] string overrideLanguage, [Optional] string overrideSpecialization, bool skipDisabled = false, bool allowCategoryMistmatch = false)
		{
			return null;
		}

		[Token(Token = "0x600284A")]
		[Address(RVA = "0x1116350", Offset = "0x1116350", VA = "0x1116350")]
		public bool TryGetTranslation(string term, out string Translation, [Optional] string overrideLanguage, [Optional] string overrideSpecialization, bool skipDisabled = false, bool allowCategoryMistmatch = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600284B")]
		[Address(RVA = "0x110FC74", Offset = "0x110FC74", VA = "0x110FC74")]
		private bool TryGetFallbackTranslation(TermData termData, out string Translation, int langIndex, [Optional] string overrideSpecialization, bool skipDisabled = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600284C")]
		[Address(RVA = "0x11165B8", Offset = "0x11165B8", VA = "0x11165B8")]
		public TermData AddTerm(string term)
		{
			return null;
		}

		[Token(Token = "0x600284D")]
		[Address(RVA = "0x110E6D8", Offset = "0x110E6D8", VA = "0x110E6D8")]
		public TermData GetTermData(string term, bool allowCategoryMistmatch = false)
		{
			return null;
		}

		[Token(Token = "0x600284E")]
		[Address(RVA = "0x11167E0", Offset = "0x11167E0", VA = "0x11167E0")]
		public bool ContainsTerm(string term)
		{
			return default(bool);
		}

		[Token(Token = "0x600284F")]
		[Address(RVA = "0x11167FC", Offset = "0x11167FC", VA = "0x11167FC")]
		public List<string> GetTermsList([Optional] string Category)
		{
			return null;
		}

		[Token(Token = "0x6002850")]
		[Address(RVA = "0x11165D8", Offset = "0x11165D8", VA = "0x11165D8")]
		public TermData AddTerm(string NewTerm, eTermType termType, bool SaveSource = true)
		{
			return null;
		}

		[Token(Token = "0x6002851")]
		[Address(RVA = "0x1116A2C", Offset = "0x1116A2C", VA = "0x1116A2C")]
		public void RemoveTerm(string term)
		{
		}

		[Token(Token = "0x6002852")]
		[Address(RVA = "0x11129CC", Offset = "0x11129CC", VA = "0x11129CC")]
		public static void ValidateFullTerm(ref string Term)
		{
		}

		[Token(Token = "0x6002853")]
		[Address(RVA = "0x110CB38", Offset = "0x110CB38", VA = "0x110CB38")]
		public LanguageSourceData()
		{
		}
	}
	[Token(Token = "0x200055E")]
	public enum eSpreadsheetUpdateMode
	{
		[Token(Token = "0x4002183")]
		None,
		[Token(Token = "0x4002184")]
		Replace,
		[Token(Token = "0x4002185")]
		Merge,
		[Token(Token = "0x4002186")]
		AddNewTerms
	}
	[Token(Token = "0x200055F")]
	public class LocalizationReader
	{
		[Token(Token = "0x6002855")]
		[Address(RVA = "0x1120194", Offset = "0x1120194", VA = "0x1120194")]
		public static Dictionary<string, string> ReadTextAsset(TextAsset asset)
		{
			return null;
		}

		[Token(Token = "0x6002856")]
		[Address(RVA = "0x1120498", Offset = "0x1120498", VA = "0x1120498")]
		public static bool TextAsset_ReadLine(string line, out string key, out string value, out string category, out string comment, out string termType)
		{
			return default(bool);
		}

		[Token(Token = "0x6002857")]
		[Address(RVA = "0x1120954", Offset = "0x1120954", VA = "0x1120954")]
		public static string ReadCSVfile(string Path, Encoding encoding)
		{
			return null;
		}

		[Token(Token = "0x6002858")]
		[Address(RVA = "0x1111618", Offset = "0x1111618", VA = "0x1111618")]
		public static List<string[]> ReadCSV(string Text, char Separator = ',')
		{
			return null;
		}

		[Token(Token = "0x6002859")]
		[Address(RVA = "0x1120B38", Offset = "0x1120B38", VA = "0x1120B38")]
		private static string[] ParseCSVline(string Line, ref int iStart, char Separator)
		{
			return null;
		}

		[Token(Token = "0x600285A")]
		[Address(RVA = "0x1120D64", Offset = "0x1120D64", VA = "0x1120D64")]
		private static void AddCSVtoken(ref List<string> list, ref string Line, int iEnd, ref int iWordStart)
		{
		}

		[Token(Token = "0x600285B")]
		[Address(RVA = "0x11124DC", Offset = "0x11124DC", VA = "0x11124DC")]
		public static List<string[]> ReadI2CSV(string Text)
		{
			return null;
		}

		[Token(Token = "0x600285C")]
		[Address(RVA = "0x1120894", Offset = "0x1120894", VA = "0x1120894")]
		public static void ValidateFullTerm(ref string Term)
		{
		}

		[Token(Token = "0x600285D")]
		[Address(RVA = "0x1120EB8", Offset = "0x1120EB8", VA = "0x1120EB8")]
		public static string EncodeString(string str)
		{
			return null;
		}

		[Token(Token = "0x600285E")]
		[Address(RVA = "0x11207E8", Offset = "0x11207E8", VA = "0x11207E8")]
		public static string DecodeString(string str)
		{
			return null;
		}

		[Token(Token = "0x600285F")]
		[Address(RVA = "0x1120FC4", Offset = "0x1120FC4", VA = "0x1120FC4")]
		public LocalizationReader()
		{
		}
	}
	[Token(Token = "0x2000560")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x39AF30", Offset = "0x39AF30")]
	public class Localize : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20008F5")]
		public enum TermModification
		{
			[Token(Token = "0x4002B27")]
			DontModify,
			[Token(Token = "0x4002B28")]
			ToUpper,
			[Token(Token = "0x4002B29")]
			ToLower,
			[Token(Token = "0x4002B2A")]
			ToUpperFirst,
			[Token(Token = "0x4002B2B")]
			ToTitle
		}

		[Serializable]
		[Token(Token = "0x20008F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39D9F0", Offset = "0x39D9F0")]
		private sealed class <>c
		{
			[Token(Token = "0x4002B2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002B2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static Predicate<UnityEngine.Object> <>9__49_0;

			[Token(Token = "0x4002B2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<UnityEngine.Object, string> <>9__49_1;

			[Token(Token = "0x4002B2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public static Func<IGrouping<string, UnityEngine.Object>, string> <>9__49_2;

			[Token(Token = "0x4002B30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<IGrouping<string, UnityEngine.Object>, UnityEngine.Object> <>9__49_3;

			[Token(Token = "0x6003805")]
			[Address(RVA = "0x84C98C", Offset = "0x84C98C", VA = "0x84C98C")]
			public <>c()
			{
			}

			[Token(Token = "0x6003806")]
			[Address(RVA = "0x84C994", Offset = "0x84C994", VA = "0x84C994")]
			internal bool <UpdateAssetDictionary>b__49_0(UnityEngine.Object x)
			{
				return default(bool);
			}

			[Token(Token = "0x6003807")]
			[Address(RVA = "0x84CA14", Offset = "0x84CA14", VA = "0x84CA14")]
			internal string <UpdateAssetDictionary>b__49_1(UnityEngine.Object o)
			{
				return null;
			}

			[Token(Token = "0x6003808")]
			[Address(RVA = "0x84CA3C", Offset = "0x84CA3C", VA = "0x84CA3C")]
			internal string <UpdateAssetDictionary>b__49_2(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}

			[Token(Token = "0x6003809")]
			[Address(RVA = "0x84CB04", Offset = "0x84CB04", VA = "0x84CB04")]
			internal UnityEngine.Object <UpdateAssetDictionary>b__49_3(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}
		}

		[Token(Token = "0x4002187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string mTerm;

		[Token(Token = "0x4002188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string mTermSecondary;

		[NonSerialized]
		[Token(Token = "0x4002189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public string FinalTerm;

		[NonSerialized]
		[Token(Token = "0x400218A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string FinalSecondaryTerm;

		[Token(Token = "0x400218B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public TermModification PrimaryTermModifier;

		[Token(Token = "0x400218C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TermModification SecondaryTermModifier;

		[Token(Token = "0x400218D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public string TermPrefix;

		[Token(Token = "0x400218E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string TermSuffix;

		[Token(Token = "0x400218F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool LocalizeOnAwake;

		[Token(Token = "0x4002190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string LastLocalizedLanguage;

		[Token(Token = "0x4002191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool IgnoreRTL;

		[Token(Token = "0x4002192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int MaxCharactersInRTL;

		[Token(Token = "0x4002193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool IgnoreNumbersInRTL;

		[Token(Token = "0x4002194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool CorrectAlignmentForRTL;

		[Token(Token = "0x4002195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		public bool AddSpacesToJoinedLanguages;

		[Token(Token = "0x4002196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
		public bool AllowLocalizedParameters;

		[Token(Token = "0x4002197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<UnityEngine.Object> TranslatedObjects;

		[NonSerialized]
		[Token(Token = "0x4002198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Dictionary<string, UnityEngine.Object> mAssetDictionary;

		[Token(Token = "0x4002199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent LocalizeEvent;

		[Token(Token = "0x400219A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string MainTranslation;

		[Token(Token = "0x400219B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static string SecondaryTranslation;

		[Token(Token = "0x400219C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string CallBackTerm;

		[Token(Token = "0x400219D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static string CallBackSecondaryTerm;

		[Token(Token = "0x400219E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Localize CurrentLocalizeComponent;

		[Token(Token = "0x400219F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool AlwaysForceLocalize;

		[Token(Token = "0x40021A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public EventCallback LocalizeCallBack;

		[Token(Token = "0x40021A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool mGUI_ShowReferences;

		[Token(Token = "0x40021A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool mGUI_ShowTems;

		[Token(Token = "0x40021A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		public bool mGUI_ShowCallback;

		[Token(Token = "0x40021A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ILocalizeTarget mLocalizeTarget;

		[Token(Token = "0x40021A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public string mLocalizeTargetName;

		[Token(Token = "0x170003DF")]
		public string Term
		{
			[Token(Token = "0x6002860")]
			[Address(RVA = "0x1120FCC", Offset = "0x1120FCC", VA = "0x1120FCC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002861")]
			[Address(RVA = "0x1120FD4", Offset = "0x1120FD4", VA = "0x1120FD4")]
			set
			{
			}
		}

		[Token(Token = "0x170003E0")]
		public string SecondaryTerm
		{
			[Token(Token = "0x6002862")]
			[Address(RVA = "0x1121010", Offset = "0x1121010", VA = "0x1121010")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002863")]
			[Address(RVA = "0x1121018", Offset = "0x1121018", VA = "0x1121018")]
			set
			{
			}
		}

		[Token(Token = "0x6002864")]
		[Address(RVA = "0x1121068", Offset = "0x1121068", VA = "0x1121068")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002865")]
		[Address(RVA = "0x1121A3C", Offset = "0x1121A3C", VA = "0x1121A3C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002866")]
		[Address(RVA = "0x1121A44", Offset = "0x1121A44", VA = "0x1121A44")]
		public bool HasCallback()
		{
			return default(bool);
		}

		[Token(Token = "0x6002867")]
		[Address(RVA = "0x111DA44", Offset = "0x111DA44", VA = "0x111DA44")]
		public void OnLocalize(bool Force = false)
		{
		}

		[Token(Token = "0x6002868")]
		[Address(RVA = "0x1121428", Offset = "0x1121428", VA = "0x1121428")]
		public bool FindTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x6002869")]
		[Address(RVA = "0x1121AA8", Offset = "0x1121AA8", VA = "0x1121AA8")]
		public void GetFinalTerms(out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x600286A")]
		[Address(RVA = "0x1121C3C", Offset = "0x1121C3C", VA = "0x1121C3C")]
		public string GetMainTargetsText()
		{
			return null;
		}

		[Token(Token = "0x600286B")]
		[Address(RVA = "0x1121D40", Offset = "0x1121D40", VA = "0x1121D40")]
		public void SetFinalTerms(string Main, string Secondary, out string primaryTerm, out string secondaryTerm, bool RemoveNonASCII)
		{
		}

		[Token(Token = "0x600286C")]
		[Address(RVA = "0x1120FD8", Offset = "0x1120FD8", VA = "0x1120FD8")]
		public void SetTerm(string primary)
		{
		}

		[Token(Token = "0x600286D")]
		[Address(RVA = "0x1121024", Offset = "0x1121024", VA = "0x1121024")]
		public void SetTerm(string primary, string secondary)
		{
		}

		[Token(Token = "0x600286E")]
		internal T GetSecondaryTranslatedObj<T>(ref string mainTranslation, ref string secondaryTranslation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x600286F")]
		[Address(RVA = "0x11210A0", Offset = "0x11210A0", VA = "0x11210A0")]
		public void UpdateAssetDictionary()
		{
		}

		[Token(Token = "0x6002870")]
		internal T GetObject<T>(string Translation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6002871")]
		private T GetTranslatedObject<T>(string Translation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6002872")]
		[Address(RVA = "0x1121D74", Offset = "0x1121D74", VA = "0x1121D74")]
		private void DeserializeTranslation(string translation, out string value, out string secondary)
		{
		}

		[Token(Token = "0x6002873")]
		public T FindTranslatedObject<T>(string value) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6002874")]
		[Address(RVA = "0x1121E70", Offset = "0x1121E70", VA = "0x1121E70")]
		public bool HasTranslatedObject(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002875")]
		[Address(RVA = "0x1121F1C", Offset = "0x1121F1C", VA = "0x1121F1C")]
		public void AddTranslatedObject(UnityEngine.Object Obj)
		{
		}

		[Token(Token = "0x6002876")]
		[Address(RVA = "0x1121FD0", Offset = "0x1121FD0", VA = "0x1121FD0")]
		public void SetGlobalLanguage(string Language)
		{
		}

		[Token(Token = "0x6002877")]
		[Address(RVA = "0x1122048", Offset = "0x1122048", VA = "0x1122048")]
		public Localize()
		{
		}
	}
	[Token(Token = "0x2000561")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x39AF64", Offset = "0x39AF64")]
	public class LocalizeDropdown : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40021A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public List<string> _Terms;

		[Token(Token = "0x6002878")]
		[Address(RVA = "0x84CB60", Offset = "0x84CB60", VA = "0x84CB60")]
		public void Start()
		{
		}

		[Token(Token = "0x6002879")]
		[Address(RVA = "0x84CD48", Offset = "0x84CD48", VA = "0x84CD48")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x600287A")]
		[Address(RVA = "0x84CDFC", Offset = "0x84CDFC", VA = "0x84CDFC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600287B")]
		[Address(RVA = "0x84CC1C", Offset = "0x84CC1C", VA = "0x84CC1C")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x600287C")]
		[Address(RVA = "0x84CE68", Offset = "0x84CE68", VA = "0x84CE68")]
		private void FillValues()
		{
		}

		[Token(Token = "0x600287D")]
		[Address(RVA = "0x84D050", Offset = "0x84D050", VA = "0x84D050")]
		public void UpdateLocalization()
		{
		}

		[Token(Token = "0x600287E")]
		[Address(RVA = "0x84D4C4", Offset = "0x84D4C4", VA = "0x84D4C4")]
		public void UpdateLocalizationTMPro()
		{
		}

		[Token(Token = "0x600287F")]
		[Address(RVA = "0x84D2F8", Offset = "0x84D2F8", VA = "0x84D2F8")]
		private void FillValuesTMPro()
		{
		}

		[Token(Token = "0x6002880")]
		[Address(RVA = "0x84D760", Offset = "0x84D760", VA = "0x84D760")]
		public LocalizeDropdown()
		{
		}
	}
	[Token(Token = "0x2000562")]
	public static class LocalizationManager
	{
		[Token(Token = "0x20008F7")]
		public delegate object _GetParam(string param);

		[Token(Token = "0x20008F8")]
		public delegate void OnLocalizeCallback();

		[Token(Token = "0x20008F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DA00", Offset = "0x39DA00")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x4002B31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public List<string> Languages;

			[Token(Token = "0x4002B32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Func<string, bool> <>9__0;

			[Token(Token = "0x6003812")]
			[Address(RVA = "0x1119B24", Offset = "0x1119B24", VA = "0x1119B24")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x6003813")]
			[Address(RVA = "0x111F674", Offset = "0x111F674", VA = "0x111F674")]
			internal bool <GetAllLanguages>b__0(string x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20008FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DA10", Offset = "0x39DA10")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x4002B33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public List<string> Languages;

			[Token(Token = "0x4002B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Func<string, bool> <>9__0;

			[Token(Token = "0x6003814")]
			[Address(RVA = "0x1119D7C", Offset = "0x1119D7C", VA = "0x1119D7C")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x6003815")]
			[Address(RVA = "0x111F6EC", Offset = "0x111F6EC", VA = "0x111F6EC")]
			internal bool <GetAllLanguagesCode>b__0(string x)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20008FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DA20", Offset = "0x39DA20")]
		private sealed class <>c
		{
			[Token(Token = "0x4002B35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002B36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static _GetParam <>9__41_0;

			[Token(Token = "0x6003817")]
			[Address(RVA = "0x111F5F0", Offset = "0x111F5F0", VA = "0x111F5F0")]
			public <>c()
			{
			}

			[Token(Token = "0x6003818")]
			[Address(RVA = "0x111F5F8", Offset = "0x111F5F8", VA = "0x111F5F8")]
			internal object <ApplyLocalizationParams>b__41_0(string p)
			{
				return null;
			}
		}

		[Token(Token = "0x20008FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DA30", Offset = "0x39DA30")]
		private sealed class <>c__DisplayClass42_0
		{
			[Token(Token = "0x4002B37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject root;

			[Token(Token = "0x6003819")]
			[Address(RVA = "0x111A8A8", Offset = "0x111A8A8", VA = "0x111A8A8")]
			public <>c__DisplayClass42_0()
			{
			}

			[Token(Token = "0x600381A")]
			[Address(RVA = "0x111F764", Offset = "0x111F764", VA = "0x111F764")]
			internal object <ApplyLocalizationParams>b__0(string p)
			{
				return null;
			}
		}

		[Token(Token = "0x20008FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DA40", Offset = "0x39DA40")]
		private sealed class <>c__DisplayClass43_0
		{
			[Token(Token = "0x4002B38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Dictionary<string, object> parameters;

			[Token(Token = "0x600381B")]
			[Address(RVA = "0x111A9A0", Offset = "0x111A9A0", VA = "0x111A9A0")]
			public <>c__DisplayClass43_0()
			{
			}

			[Token(Token = "0x600381C")]
			[Address(RVA = "0x111F7E8", Offset = "0x111F7E8", VA = "0x111F7E8")]
			internal object <ApplyLocalizationParams>b__0(string p)
			{
				return null;
			}
		}

		[Token(Token = "0x20008FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DA50", Offset = "0x39DA50")]
		private sealed class <Delayed_Import_Google>d__59 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002B3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002B3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float delay;

			[Token(Token = "0x4002B3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public LanguageSourceData source;

			[Token(Token = "0x4002B3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool justCheck;

			[Token(Token = "0x170005F7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003820")]
				[Address(RVA = "0x111FB1C", Offset = "0x111FB1C", VA = "0x111FB1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005F8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003822")]
				[Address(RVA = "0x111FB9C", Offset = "0x111FB9C", VA = "0x111FB9C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600381D")]
			[Address(RVA = "0x111C1B8", Offset = "0x111C1B8", VA = "0x111C1B8")]
			[DebuggerHidden]
			public <Delayed_Import_Google>d__59(int <>1__state)
			{
			}

			[Token(Token = "0x600381E")]
			[Address(RVA = "0x111FA54", Offset = "0x111FA54", VA = "0x111FA54", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600381F")]
			[Address(RVA = "0x111FA58", Offset = "0x111FA58", VA = "0x111FA58", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003821")]
			[Address(RVA = "0x111FB24", Offset = "0x111FB24", VA = "0x111FB24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20008FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DA60", Offset = "0x39DA60")]
		private sealed class <>c__DisplayClass69_0
		{
			[Token(Token = "0x4002B3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ILocalizeTargetDescriptor desc;

			[Token(Token = "0x6003823")]
			[Address(RVA = "0x111CF70", Offset = "0x111CF70", VA = "0x111CF70")]
			public <>c__DisplayClass69_0()
			{
			}

			[Token(Token = "0x6003824")]
			[Address(RVA = "0x111F87C", Offset = "0x111F87C", VA = "0x111F87C")]
			internal bool <RegisterTarget>b__0(ILocalizeTargetDescriptor x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000900")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DA70", Offset = "0x39DA70")]
		private sealed class <Coroutine_LocalizeAll>d__84 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002B40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x170005F9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003828")]
				[Address(RVA = "0x111F9CC", Offset = "0x111F9CC", VA = "0x111F9CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600382A")]
				[Address(RVA = "0x111FA4C", Offset = "0x111FA4C", VA = "0x111FA4C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003825")]
			[Address(RVA = "0x111DA24", Offset = "0x111DA24", VA = "0x111DA24")]
			[DebuggerHidden]
			public <Coroutine_LocalizeAll>d__84(int <>1__state)
			{
			}

			[Token(Token = "0x6003826")]
			[Address(RVA = "0x111F8C0", Offset = "0x111F8C0", VA = "0x111F8C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003827")]
			[Address(RVA = "0x111F8C4", Offset = "0x111F8C4", VA = "0x111F8C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003829")]
			[Address(RVA = "0x111F9D4", Offset = "0x111F9D4", VA = "0x111F9D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40021A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string mCurrentLanguage;

		[Token(Token = "0x40021A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static string mLanguageCode;

		[Token(Token = "0x40021A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static CultureInfo mCurrentCulture;

		[Token(Token = "0x40021AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static bool mChangeCultureInfo;

		[Token(Token = "0x40021AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		public static bool IsRight2Left;

		[Token(Token = "0x40021AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		public static bool HasJoinedWords;

		[Token(Token = "0x40021AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static List<ILocalizationParamsManager> ParamManagers;

		[Token(Token = "0x40021AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static string[] LanguagesRTL;

		[Token(Token = "0x40021AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static List<LanguageSourceData> Sources;

		[Token(Token = "0x40021B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static string[] GlobalSources;

		[Token(Token = "0x40021B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static string mCurrentDeviceLanguage;

		[Token(Token = "0x40021B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static List<ILocalizeTargetDescriptor> mLocalizeTargets;

		[Token(Token = "0x40021B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private static bool mLocalizeIsScheduled;

		[Token(Token = "0x40021B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		private static bool mLocalizeIsScheduledWithForcedValue;

		[Token(Token = "0x40021B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		public static bool HighlightLocalizedTargets;

		[Token(Token = "0x170003E1")]
		public static string CurrentLanguage
		{
			[Token(Token = "0x6002885")]
			[Address(RVA = "0x11132C8", Offset = "0x11132C8", VA = "0x11132C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002886")]
			[Address(RVA = "0x1117B1C", Offset = "0x1117B1C", VA = "0x1117B1C")]
			set
			{
			}
		}

		[Token(Token = "0x170003E2")]
		public static string CurrentLanguageCode
		{
			[Token(Token = "0x6002887")]
			[Address(RVA = "0x1118720", Offset = "0x1118720", VA = "0x1118720")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002888")]
			[Address(RVA = "0x111879C", Offset = "0x111879C", VA = "0x111879C")]
			set
			{
			}
		}

		[Token(Token = "0x170003E3")]
		public static string CurrentRegion
		{
			[Token(Token = "0x6002889")]
			[Address(RVA = "0x1118B0C", Offset = "0x1118B0C", VA = "0x1118B0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600288A")]
			[Address(RVA = "0x1118CDC", Offset = "0x1118CDC", VA = "0x1118CDC")]
			set
			{
			}
		}

		[Token(Token = "0x170003E4")]
		public static string CurrentRegionCode
		{
			[Token(Token = "0x600288B")]
			[Address(RVA = "0x1118F00", Offset = "0x1118F00", VA = "0x1118F00")]
			get
			{
				return null;
			}
			[Token(Token = "0x600288C")]
			[Address(RVA = "0x1119000", Offset = "0x1119000", VA = "0x1119000")]
			set
			{
			}
		}

		[Token(Token = "0x170003E5")]
		public static CultureInfo CurrentCulture
		{
			[Token(Token = "0x600288D")]
			[Address(RVA = "0x111913C", Offset = "0x111913C", VA = "0x111913C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000045")]
		public static event OnLocalizeCallback OnLocalizeEvent
		{
			[Token(Token = "0x60028B5")]
			[Address(RVA = "0x111CF78", Offset = "0x111CF78", VA = "0x111CF78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AD4A0", Offset = "0x3AD4A0")]
			add
			{
			}
			[Token(Token = "0x60028B6")]
			[Address(RVA = "0x111D080", Offset = "0x111D080", VA = "0x111D080")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AD4B0", Offset = "0x3AD4B0")]
			remove
			{
			}
		}

		[Token(Token = "0x6002881")]
		[Address(RVA = "0x1105188", Offset = "0x1105188", VA = "0x1105188")]
		public static void InitializeIfNeeded()
		{
		}

		[Token(Token = "0x6002882")]
		[Address(RVA = "0x1117ACC", Offset = "0x1117ACC", VA = "0x1117ACC")]
		public static string GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6002883")]
		[Address(RVA = "0x11147A4", Offset = "0x11147A4", VA = "0x11147A4")]
		public static int GetRequiredWebServiceVersion()
		{
			return default(int);
		}

		[Token(Token = "0x6002884")]
		[Address(RVA = "0x1104CBC", Offset = "0x1104CBC", VA = "0x1104CBC")]
		public static string GetWebServiceURL([Optional] LanguageSourceData source)
		{
			return null;
		}

		[Token(Token = "0x600288E")]
		[Address(RVA = "0x1118504", Offset = "0x1118504", VA = "0x1118504")]
		public static void SetLanguageAndCode(string LanguageName, string LanguageCode, bool RememberLanguage = true, bool Force = false)
		{
		}

		[Token(Token = "0x600288F")]
		[Address(RVA = "0x11191B4", Offset = "0x11191B4", VA = "0x11191B4")]
		private static CultureInfo CreateCultureForCode(string code)
		{
			return null;
		}

		[Token(Token = "0x6002890")]
		[Address(RVA = "0x1119414", Offset = "0x1119414", VA = "0x1119414")]
		public static void EnableChangingCultureInfo(bool bEnable)
		{
		}

		[Token(Token = "0x6002891")]
		[Address(RVA = "0x11192D8", Offset = "0x11192D8", VA = "0x11192D8")]
		private static void SetCurrentCultureInfo()
		{
		}

		[Token(Token = "0x6002892")]
		[Address(RVA = "0x111752C", Offset = "0x111752C", VA = "0x111752C")]
		private static void SelectStartupLanguage()
		{
		}

		[Token(Token = "0x6002893")]
		[Address(RVA = "0x11195E8", Offset = "0x11195E8", VA = "0x11195E8")]
		public static bool HasLanguage(string Language, bool AllowDiscartingRegion = true, bool Initialize = true, bool SkipDisabled = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002894")]
		[Address(RVA = "0x1117C34", Offset = "0x1117C34", VA = "0x1117C34")]
		public static string GetSupportedLanguage(string Language, bool ignoreDisabled = false)
		{
			return null;
		}

		[Token(Token = "0x6002895")]
		[Address(RVA = "0x11182A8", Offset = "0x11182A8", VA = "0x11182A8")]
		public static string GetLanguageCode(string Language)
		{
			return null;
		}

		[Token(Token = "0x6002896")]
		[Address(RVA = "0x11188AC", Offset = "0x11188AC", VA = "0x11188AC")]
		public static string GetLanguageFromCode(string Code, bool exactMatch = true)
		{
			return null;
		}

		[Token(Token = "0x6002897")]
		[Address(RVA = "0x111984C", Offset = "0x111984C", VA = "0x111984C")]
		public static List<string> GetAllLanguages(bool SkipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x6002898")]
		[Address(RVA = "0x1119B2C", Offset = "0x1119B2C", VA = "0x1119B2C")]
		public static List<string> GetAllLanguagesCode(bool allowRegions = true, bool SkipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x6002899")]
		[Address(RVA = "0x1119D84", Offset = "0x1119D84", VA = "0x1119D84")]
		public static bool IsLanguageEnabled(string Language)
		{
			return default(bool);
		}

		[Token(Token = "0x600289A")]
		[Address(RVA = "0x1119EB0", Offset = "0x1119EB0", VA = "0x1119EB0")]
		private static void LoadCurrentLanguage()
		{
		}

		[Token(Token = "0x600289B")]
		[Address(RVA = "0x111A03C", Offset = "0x111A03C", VA = "0x111A03C")]
		public static void PreviewLanguage(string NewLanguage)
		{
		}

		[Token(Token = "0x600289C")]
		[Address(RVA = "0x11172B4", Offset = "0x11172B4", VA = "0x11172B4")]
		public static void AutoLoadGlobalParamManagers()
		{
		}

		[Token(Token = "0x600289D")]
		[Address(RVA = "0x111A138", Offset = "0x111A138", VA = "0x111A138")]
		public static void ApplyLocalizationParams(ref string translation, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x600289E")]
		[Address(RVA = "0x111A7B8", Offset = "0x111A7B8", VA = "0x111A7B8")]
		public static void ApplyLocalizationParams(ref string translation, GameObject root, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x600289F")]
		[Address(RVA = "0x111A8B0", Offset = "0x111A8B0", VA = "0x111A8B0")]
		public static void ApplyLocalizationParams(ref string translation, Dictionary<string, object> parameters, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x60028A0")]
		[Address(RVA = "0x111A27C", Offset = "0x111A27C", VA = "0x111A27C")]
		public static void ApplyLocalizationParams(ref string translation, _GetParam getParam, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x60028A1")]
		[Address(RVA = "0x111AF80", Offset = "0x111AF80", VA = "0x111AF80")]
		internal static string GetLocalizationParam(string ParamName, GameObject root)
		{
			return null;
		}

		[Token(Token = "0x60028A2")]
		[Address(RVA = "0x111B2AC", Offset = "0x111B2AC", VA = "0x111B2AC")]
		private static string GetPluralType(MatchCollection matches, string langCode, _GetParam getParam)
		{
			return null;
		}

		[Token(Token = "0x60028A3")]
		[Address(RVA = "0x111B518", Offset = "0x111B518", VA = "0x111B518")]
		public static string ApplyRTLfix(string line)
		{
			return null;
		}

		[Token(Token = "0x60028A4")]
		[Address(RVA = "0x111B598", Offset = "0x111B598", VA = "0x111B598")]
		public static string ApplyRTLfix(string line, int maxCharacters, bool ignoreNumbers)
		{
			return null;
		}

		[Token(Token = "0x60028A5")]
		[Address(RVA = "0x111BA8C", Offset = "0x111BA8C", VA = "0x111BA8C")]
		public static string FixRTL_IfNeeded(string text, int maxCharacters = 0, bool ignoreNumber = false)
		{
			return null;
		}

		[Token(Token = "0x60028A6")]
		[Address(RVA = "0x1119378", Offset = "0x1119378", VA = "0x1119378")]
		public static bool IsRTL(string Code)
		{
			return default(bool);
		}

		[Token(Token = "0x60028A7")]
		[Address(RVA = "0x111748C", Offset = "0x111748C", VA = "0x111748C")]
		public static bool UpdateSources()
		{
			return default(bool);
		}

		[Token(Token = "0x60028A8")]
		[Address(RVA = "0x111BB4C", Offset = "0x111BB4C", VA = "0x111BB4C")]
		private static void UnregisterDeletededSources()
		{
		}

		[Token(Token = "0x60028A9")]
		[Address(RVA = "0x111BF0C", Offset = "0x111BF0C", VA = "0x111BF0C")]
		private static void RegisterSceneSources()
		{
		}

		[Token(Token = "0x60028AA")]
		[Address(RVA = "0x111BCB0", Offset = "0x111BCB0", VA = "0x111BCB0")]
		private static void RegisterSourceInResources()
		{
		}

		[Token(Token = "0x60028AB")]
		[Address(RVA = "0x110D70C", Offset = "0x110D70C", VA = "0x110D70C")]
		internal static void AddSource(LanguageSourceData Source)
		{
		}

		[Token(Token = "0x60028AC")]
		[Address(RVA = "0x111C100", Offset = "0x111C100", VA = "0x111C100")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AD430", Offset = "0x3AD430")]
		private static IEnumerator Delayed_Import_Google(LanguageSourceData source, float delay, bool justCheck)
		{
			return null;
		}

		[Token(Token = "0x60028AD")]
		[Address(RVA = "0x110E1DC", Offset = "0x110E1DC", VA = "0x110E1DC")]
		internal static void RemoveSource(LanguageSourceData Source)
		{
		}

		[Token(Token = "0x60028AE")]
		[Address(RVA = "0x111C1D8", Offset = "0x111C1D8", VA = "0x111C1D8")]
		public static bool IsGlobalSource(string SourceName)
		{
			return default(bool);
		}

		[Token(Token = "0x60028AF")]
		[Address(RVA = "0x111C274", Offset = "0x111C274", VA = "0x111C274")]
		public static LanguageSourceData GetSourceContaining(string term, bool fallbackToFirst = true)
		{
			return null;
		}

		[Token(Token = "0x60028B0")]
		[Address(RVA = "0x111C4C8", Offset = "0x111C4C8", VA = "0x111C4C8")]
		public static UnityEngine.Object FindAsset(string value)
		{
			return null;
		}

		[Token(Token = "0x60028B1")]
		[Address(RVA = "0x111C628", Offset = "0x111C628", VA = "0x111C628")]
		public static void ApplyDownloadedDataFromGoogle()
		{
		}

		[Token(Token = "0x60028B2")]
		[Address(RVA = "0x11194EC", Offset = "0x11194EC", VA = "0x11194EC")]
		public static string GetCurrentDeviceLanguage(bool force = false)
		{
			return null;
		}

		[Token(Token = "0x60028B3")]
		[Address(RVA = "0x111C734", Offset = "0x111C734", VA = "0x111C734")]
		private static void DetectDeviceLanguage()
		{
		}

		[Token(Token = "0x60028B4")]
		[Address(RVA = "0x111CCC4", Offset = "0x111CCC4", VA = "0x111CCC4")]
		public static void RegisterTarget(ILocalizeTargetDescriptor desc)
		{
		}

		[Token(Token = "0x60028B7")]
		[Address(RVA = "0x111D188", Offset = "0x111D188", VA = "0x111D188")]
		public static string GetTranslation(string Term, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage)
		{
			return null;
		}

		[Token(Token = "0x60028B8")]
		[Address(RVA = "0x111D498", Offset = "0x111D498", VA = "0x111D498")]
		public static string GetTermTranslation(string Term, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage)
		{
			return null;
		}

		[Token(Token = "0x60028B9")]
		[Address(RVA = "0x111D244", Offset = "0x111D244", VA = "0x111D244")]
		public static bool TryGetTranslation(string Term, out string Translation, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage)
		{
			return default(bool);
		}

		[Token(Token = "0x60028BA")]
		public static T GetTranslatedObject<T>(string AssetName, [Optional] Localize optionalLocComp) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x60028BB")]
		public static T GetTranslatedObjectByTermName<T>(string Term, [Optional] Localize optionalLocComp) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x60028BC")]
		[Address(RVA = "0x111D548", Offset = "0x111D548", VA = "0x111D548")]
		public static string GetAppName(string languageCode)
		{
			return null;
		}

		[Token(Token = "0x60028BD")]
		[Address(RVA = "0x110E0B8", Offset = "0x110E0B8", VA = "0x110E0B8")]
		public static void LocalizeAll(bool Force = false)
		{
		}

		[Token(Token = "0x60028BE")]
		[Address(RVA = "0x111D9B8", Offset = "0x111D9B8", VA = "0x111D9B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AD4C0", Offset = "0x3AD4C0")]
		private static IEnumerator Coroutine_LocalizeAll()
		{
			return null;
		}

		[Token(Token = "0x60028BF")]
		[Address(RVA = "0x111D7F8", Offset = "0x111D7F8", VA = "0x111D7F8")]
		private static void DoLocalizeAll(bool Force = false)
		{
		}

		[Token(Token = "0x60028C0")]
		[Address(RVA = "0x111E718", Offset = "0x111E718", VA = "0x111E718")]
		public static List<string> GetCategories()
		{
			return null;
		}

		[Token(Token = "0x60028C1")]
		[Address(RVA = "0x111E860", Offset = "0x111E860", VA = "0x111E860")]
		public static List<string> GetTermsList([Optional] string Category)
		{
			return null;
		}

		[Token(Token = "0x60028C2")]
		[Address(RVA = "0x111EB30", Offset = "0x111EB30", VA = "0x111EB30")]
		public static TermData GetTermData(string term)
		{
			return null;
		}

		[Token(Token = "0x60028C3")]
		[Address(RVA = "0x111ADDC", Offset = "0x111ADDC", VA = "0x111ADDC")]
		public static TermData GetTermData(string term, out LanguageSourceData source)
		{
			return null;
		}
	}
	[Token(Token = "0x2000563")]
	public abstract class ILocalizeTarget : ScriptableObject
	{
		[Token(Token = "0x60028C5")]
		public abstract bool IsValid(Localize cmp);

		[Token(Token = "0x60028C6")]
		public abstract void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm);

		[Token(Token = "0x60028C7")]
		public abstract void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation);

		[Token(Token = "0x60028C8")]
		public abstract bool CanUseSecondaryTerm();

		[Token(Token = "0x60028C9")]
		public abstract bool AllowMainTermToBeRTL();

		[Token(Token = "0x60028CA")]
		public abstract bool AllowSecondTermToBeRTL();

		[Token(Token = "0x60028CB")]
		public abstract eTermType GetPrimaryTermType(Localize cmp);

		[Token(Token = "0x60028CC")]
		public abstract eTermType GetSecondaryTermType(Localize cmp);

		[Token(Token = "0x60028CD")]
		[Address(RVA = "0x110C22C", Offset = "0x110C22C", VA = "0x110C22C")]
		protected ILocalizeTarget()
		{
		}
	}
	[Token(Token = "0x2000564")]
	public abstract class LocalizeTarget<T> : ILocalizeTarget where T : UnityEngine.Object
	{
		[Token(Token = "0x40021B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T mTarget;

		[Token(Token = "0x60028CE")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x60028CF")]
		protected LocalizeTarget()
		{
		}
	}
	[Token(Token = "0x2000565")]
	public abstract class ILocalizeTargetDescriptor
	{
		[Token(Token = "0x40021B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Name;

		[Token(Token = "0x40021B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int Priority;

		[Token(Token = "0x60028D0")]
		public abstract bool CanLocalize(Localize cmp);

		[Token(Token = "0x60028D1")]
		public abstract ILocalizeTarget CreateTarget(Localize cmp);

		[Token(Token = "0x60028D2")]
		public abstract Type GetTargetType();

		[Token(Token = "0x60028D3")]
		[Address(RVA = "0x110C234", Offset = "0x110C234", VA = "0x110C234")]
		protected ILocalizeTargetDescriptor()
		{
		}
	}
	[Token(Token = "0x2000566")]
	public abstract class LocalizeTargetDesc<T> : ILocalizeTargetDescriptor where T : ILocalizeTarget
	{
		[Token(Token = "0x60028D4")]
		public override ILocalizeTarget CreateTarget(Localize cmp)
		{
			return null;
		}

		[Token(Token = "0x60028D5")]
		public override Type GetTargetType()
		{
			return null;
		}

		[Token(Token = "0x60028D6")]
		protected LocalizeTargetDesc()
		{
		}
	}
	[Token(Token = "0x2000567")]
	public class LocalizeTargetDesc_Type<T, G> : LocalizeTargetDesc<G> where T : UnityEngine.Object where G : LocalizeTarget<T>
	{
		[Token(Token = "0x60028D7")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x60028D8")]
		public override ILocalizeTarget CreateTarget(Localize cmp)
		{
			return null;
		}

		[Token(Token = "0x60028D9")]
		public LocalizeTargetDesc_Type()
		{
		}
	}
	[Token(Token = "0x2000568")]
	public class LocalizeTarget_TextMeshPro_Label : LocalizeTarget<TextMeshPro>
	{
		[Token(Token = "0x40021BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TextAlignmentOptions mAlignment_RTL;

		[Token(Token = "0x40021BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private TextAlignmentOptions mAlignment_LTR;

		[Token(Token = "0x40021BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x40021BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool mInitializeAlignment;

		[Token(Token = "0x60028DA")]
		[Address(RVA = "0x84D8F8", Offset = "0x84D8F8", VA = "0x84D8F8")]
		static LocalizeTarget_TextMeshPro_Label()
		{
		}

		[Token(Token = "0x60028DB")]
		[Address(RVA = "0x84D8FC", Offset = "0x84D8FC", VA = "0x84D8FC")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x3AD530", Offset = "0x3AD530")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x60028DC")]
		[Address(RVA = "0x84D9EC", Offset = "0x84D9EC", VA = "0x84D9EC", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60028DD")]
		[Address(RVA = "0x84D9F4", Offset = "0x84D9F4", VA = "0x84D9F4", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60028DE")]
		[Address(RVA = "0x84D9FC", Offset = "0x84D9FC", VA = "0x84D9FC", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x60028DF")]
		[Address(RVA = "0x84DA04", Offset = "0x84DA04", VA = "0x84DA04", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60028E0")]
		[Address(RVA = "0x84DA0C", Offset = "0x84DA0C", VA = "0x84DA0C", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60028E1")]
		[Address(RVA = "0x84DA14", Offset = "0x84DA14", VA = "0x84DA14", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x60028E2")]
		[Address(RVA = "0x84DB58", Offset = "0x84DB58", VA = "0x84DB58", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x60028E3")]
		[Address(RVA = "0x84E318", Offset = "0x84E318", VA = "0x84E318")]
		internal static TMP_FontAsset GetTMPFontFromMaterial(Localize cmp, string matName)
		{
			return null;
		}

		[Token(Token = "0x60028E4")]
		[Address(RVA = "0x84E644", Offset = "0x84E644", VA = "0x84E644")]
		internal static void InitAlignment_TMPro(bool isRTL, TextAlignmentOptions alignment, out TextAlignmentOptions alignLTR, out TextAlignmentOptions alignRTL)
		{
		}

		[Token(Token = "0x60028E5")]
		[Address(RVA = "0x84E1F0", Offset = "0x84E1F0", VA = "0x84E1F0")]
		internal static void SetFont(TMP_Text label, TMP_FontAsset newFont)
		{
		}

		[Token(Token = "0x60028E6")]
		[Address(RVA = "0x84E500", Offset = "0x84E500", VA = "0x84E500")]
		internal static void SetMaterial(TMP_Text label, Material newMat)
		{
		}

		[Token(Token = "0x60028E7")]
		[Address(RVA = "0x84E880", Offset = "0x84E880", VA = "0x84E880")]
		public LocalizeTarget_TextMeshPro_Label()
		{
		}
	}
	[Token(Token = "0x2000569")]
	public class LocalizeTarget_TextMeshPro_UGUI : LocalizeTarget<TextMeshProUGUI>
	{
		[Token(Token = "0x40021BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TextAlignmentOptions mAlignment_RTL;

		[Token(Token = "0x40021BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TextAlignmentOptions mAlignment_LTR;

		[Token(Token = "0x40021C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool mAlignmentWasRTL;

		[Token(Token = "0x40021C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool mInitializeAlignment;

		[Token(Token = "0x60028E8")]
		[Address(RVA = "0x84E8F4", Offset = "0x84E8F4", VA = "0x84E8F4")]
		static LocalizeTarget_TextMeshPro_UGUI()
		{
		}

		[Token(Token = "0x60028E9")]
		[Address(RVA = "0x84E8F8", Offset = "0x84E8F8", VA = "0x84E8F8")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x3AD544", Offset = "0x3AD544")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x60028EA")]
		[Address(RVA = "0x84E9E8", Offset = "0x84E9E8", VA = "0x84E9E8", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60028EB")]
		[Address(RVA = "0x84E9F0", Offset = "0x84E9F0", VA = "0x84E9F0", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60028EC")]
		[Address(RVA = "0x84E9F8", Offset = "0x84E9F8", VA = "0x84E9F8", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x60028ED")]
		[Address(RVA = "0x84EA00", Offset = "0x84EA00", VA = "0x84EA00", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60028EE")]
		[Address(RVA = "0x84EA08", Offset = "0x84EA08", VA = "0x84EA08", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60028EF")]
		[Address(RVA = "0x84EA10", Offset = "0x84EA10", VA = "0x84EA10", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x60028F0")]
		[Address(RVA = "0x84EB54", Offset = "0x84EB54", VA = "0x84EB54", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x60028F1")]
		[Address(RVA = "0x84F1EC", Offset = "0x84F1EC", VA = "0x84F1EC")]
		public LocalizeTarget_TextMeshPro_UGUI()
		{
		}
	}
	[Token(Token = "0x200056A")]
	public class LocalizeTarget_UnityStandard_AudioSource : LocalizeTarget<AudioSource>
	{
		[Token(Token = "0x60028F2")]
		[Address(RVA = "0x84F260", Offset = "0x84F260", VA = "0x84F260")]
		static LocalizeTarget_UnityStandard_AudioSource()
		{
		}

		[Token(Token = "0x60028F3")]
		[Address(RVA = "0x84F264", Offset = "0x84F264", VA = "0x84F264")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x3AD558", Offset = "0x3AD558")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x60028F4")]
		[Address(RVA = "0x84F354", Offset = "0x84F354", VA = "0x84F354", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60028F5")]
		[Address(RVA = "0x84F35C", Offset = "0x84F35C", VA = "0x84F35C", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60028F6")]
		[Address(RVA = "0x84F364", Offset = "0x84F364", VA = "0x84F364", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x60028F7")]
		[Address(RVA = "0x84F36C", Offset = "0x84F36C", VA = "0x84F36C", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60028F8")]
		[Address(RVA = "0x84F374", Offset = "0x84F374", VA = "0x84F374", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60028F9")]
		[Address(RVA = "0x84F37C", Offset = "0x84F37C", VA = "0x84F37C", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x60028FA")]
		[Address(RVA = "0x84F488", Offset = "0x84F488", VA = "0x84F488", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x60028FB")]
		[Address(RVA = "0x84F658", Offset = "0x84F658", VA = "0x84F658")]
		public LocalizeTarget_UnityStandard_AudioSource()
		{
		}
	}
	[Token(Token = "0x200056B")]
	public class LocalizeTargetDesc_Child : LocalizeTargetDesc<LocalizeTarget_UnityStandard_Child>
	{
		[Token(Token = "0x60028FC")]
		[Address(RVA = "0x84D7E4", Offset = "0x84D7E4", VA = "0x84D7E4", Slot = "4")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x60028FD")]
		[Address(RVA = "0x84D838", Offset = "0x84D838", VA = "0x84D838")]
		public LocalizeTargetDesc_Child()
		{
		}
	}
	[Token(Token = "0x200056C")]
	public class LocalizeTarget_UnityStandard_Child : LocalizeTarget<GameObject>
	{
		[Token(Token = "0x60028FE")]
		[Address(RVA = "0x84F6B4", Offset = "0x84F6B4", VA = "0x84F6B4")]
		static LocalizeTarget_UnityStandard_Child()
		{
		}

		[Token(Token = "0x60028FF")]
		[Address(RVA = "0x84F6B8", Offset = "0x84F6B8", VA = "0x84F6B8")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x3AD56C", Offset = "0x3AD56C")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002900")]
		[Address(RVA = "0x84F794", Offset = "0x84F794", VA = "0x84F794", Slot = "4")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6002901")]
		[Address(RVA = "0x84F7E8", Offset = "0x84F7E8", VA = "0x84F7E8", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002902")]
		[Address(RVA = "0x84F7F0", Offset = "0x84F7F0", VA = "0x84F7F0", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002903")]
		[Address(RVA = "0x84F7F8", Offset = "0x84F7F8", VA = "0x84F7F8", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002904")]
		[Address(RVA = "0x84F800", Offset = "0x84F800", VA = "0x84F800", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002905")]
		[Address(RVA = "0x84F808", Offset = "0x84F808", VA = "0x84F808", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002906")]
		[Address(RVA = "0x84F810", Offset = "0x84F810", VA = "0x84F810", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002907")]
		[Address(RVA = "0x84F84C", Offset = "0x84F84C", VA = "0x84F84C", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002908")]
		[Address(RVA = "0x84F9FC", Offset = "0x84F9FC", VA = "0x84F9FC")]
		public LocalizeTarget_UnityStandard_Child()
		{
		}
	}
	[Token(Token = "0x200056D")]
	public class LocalizeTarget_UnityStandard_MeshRenderer : LocalizeTarget<MeshRenderer>
	{
		[Token(Token = "0x6002909")]
		[Address(RVA = "0x84FA58", Offset = "0x84FA58", VA = "0x84FA58")]
		static LocalizeTarget_UnityStandard_MeshRenderer()
		{
		}

		[Token(Token = "0x600290A")]
		[Address(RVA = "0x84FA5C", Offset = "0x84FA5C", VA = "0x84FA5C")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x3AD580", Offset = "0x3AD580")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x600290B")]
		[Address(RVA = "0x84FB4C", Offset = "0x84FB4C", VA = "0x84FB4C", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600290C")]
		[Address(RVA = "0x84FB54", Offset = "0x84FB54", VA = "0x84FB54", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600290D")]
		[Address(RVA = "0x84FB5C", Offset = "0x84FB5C", VA = "0x84FB5C", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x600290E")]
		[Address(RVA = "0x84FB64", Offset = "0x84FB64", VA = "0x84FB64", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600290F")]
		[Address(RVA = "0x84FB6C", Offset = "0x84FB6C", VA = "0x84FB6C", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002910")]
		[Address(RVA = "0x84FB74", Offset = "0x84FB74", VA = "0x84FB74", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002911")]
		[Address(RVA = "0x84FDF4", Offset = "0x84FDF4", VA = "0x84FDF4", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002912")]
		[Address(RVA = "0x85003C", Offset = "0x85003C", VA = "0x85003C")]
		public LocalizeTarget_UnityStandard_MeshRenderer()
		{
		}
	}
	[Token(Token = "0x200056E")]
	public class LocalizeTargetDesc_Prefab : LocalizeTargetDesc<LocalizeTarget_UnityStandard_Prefab>
	{
		[Token(Token = "0x6002913")]
		[Address(RVA = "0x84D894", Offset = "0x84D894", VA = "0x84D894", Slot = "4")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6002914")]
		[Address(RVA = "0x84D89C", Offset = "0x84D89C", VA = "0x84D89C")]
		public LocalizeTargetDesc_Prefab()
		{
		}
	}
	[Token(Token = "0x200056F")]
	public class LocalizeTarget_UnityStandard_Prefab : LocalizeTarget<GameObject>
	{
		[Token(Token = "0x6002915")]
		[Address(RVA = "0x850098", Offset = "0x850098", VA = "0x850098")]
		static LocalizeTarget_UnityStandard_Prefab()
		{
		}

		[Token(Token = "0x6002916")]
		[Address(RVA = "0x85009C", Offset = "0x85009C", VA = "0x85009C")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x3AD594", Offset = "0x3AD594")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002917")]
		[Address(RVA = "0x850178", Offset = "0x850178", VA = "0x850178", Slot = "4")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6002918")]
		[Address(RVA = "0x850180", Offset = "0x850180", VA = "0x850180", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002919")]
		[Address(RVA = "0x850188", Offset = "0x850188", VA = "0x850188", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600291A")]
		[Address(RVA = "0x850190", Offset = "0x850190", VA = "0x850190", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x600291B")]
		[Address(RVA = "0x850198", Offset = "0x850198", VA = "0x850198", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600291C")]
		[Address(RVA = "0x8501A0", Offset = "0x8501A0", VA = "0x8501A0", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600291D")]
		[Address(RVA = "0x8501A8", Offset = "0x8501A8", VA = "0x8501A8", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x600291E")]
		[Address(RVA = "0x8501E4", Offset = "0x8501E4", VA = "0x8501E4", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x600291F")]
		[Address(RVA = "0x850498", Offset = "0x850498", VA = "0x850498")]
		private Transform InstantiateNewPrefab(Localize cmp, string mainTranslation)
		{
			return null;
		}

		[Token(Token = "0x6002920")]
		[Address(RVA = "0x8506E8", Offset = "0x8506E8", VA = "0x8506E8")]
		public LocalizeTarget_UnityStandard_Prefab()
		{
		}
	}
	[Token(Token = "0x2000570")]
	public class LocalizeTarget_UnityStandard_SpriteRenderer : LocalizeTarget<SpriteRenderer>
	{
		[Token(Token = "0x6002921")]
		[Address(RVA = "0x850744", Offset = "0x850744", VA = "0x850744")]
		static LocalizeTarget_UnityStandard_SpriteRenderer()
		{
		}

		[Token(Token = "0x6002922")]
		[Address(RVA = "0x850748", Offset = "0x850748", VA = "0x850748")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x3AD5A8", Offset = "0x3AD5A8")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002923")]
		[Address(RVA = "0x850838", Offset = "0x850838", VA = "0x850838", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002924")]
		[Address(RVA = "0x850840", Offset = "0x850840", VA = "0x850840", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002925")]
		[Address(RVA = "0x850848", Offset = "0x850848", VA = "0x850848", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002926")]
		[Address(RVA = "0x850850", Offset = "0x850850", VA = "0x850850", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002927")]
		[Address(RVA = "0x850858", Offset = "0x850858", VA = "0x850858", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002928")]
		[Address(RVA = "0x850860", Offset = "0x850860", VA = "0x850860", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002929")]
		[Address(RVA = "0x850970", Offset = "0x850970", VA = "0x850970", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x600292A")]
		[Address(RVA = "0x850A9C", Offset = "0x850A9C", VA = "0x850A9C")]
		public LocalizeTarget_UnityStandard_SpriteRenderer()
		{
		}
	}
	[Token(Token = "0x2000571")]
	public class LocalizeTarget_UnityStandard_TextMesh : LocalizeTarget<TextMesh>
	{
		[Token(Token = "0x40021C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TextAlignment mAlignment_RTL;

		[Token(Token = "0x40021C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private TextAlignment mAlignment_LTR;

		[Token(Token = "0x40021C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x40021C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool mInitializeAlignment;

		[Token(Token = "0x600292B")]
		[Address(RVA = "0x850AF8", Offset = "0x850AF8", VA = "0x850AF8")]
		static LocalizeTarget_UnityStandard_TextMesh()
		{
		}

		[Token(Token = "0x600292C")]
		[Address(RVA = "0x850AFC", Offset = "0x850AFC", VA = "0x850AFC")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x3AD5BC", Offset = "0x3AD5BC")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x600292D")]
		[Address(RVA = "0x850BEC", Offset = "0x850BEC", VA = "0x850BEC", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600292E")]
		[Address(RVA = "0x850BF4", Offset = "0x850BF4", VA = "0x850BF4", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600292F")]
		[Address(RVA = "0x850BFC", Offset = "0x850BFC", VA = "0x850BFC", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002930")]
		[Address(RVA = "0x850C04", Offset = "0x850C04", VA = "0x850C04", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002931")]
		[Address(RVA = "0x850C0C", Offset = "0x850C0C", VA = "0x850C0C", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002932")]
		[Address(RVA = "0x850C14", Offset = "0x850C14", VA = "0x850C14", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002933")]
		[Address(RVA = "0x850D80", Offset = "0x850D80", VA = "0x850D80", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002934")]
		[Address(RVA = "0x8510D4", Offset = "0x8510D4", VA = "0x8510D4")]
		public LocalizeTarget_UnityStandard_TextMesh()
		{
		}
	}
	[Token(Token = "0x2000572")]
	public class LocalizeTarget_UnityUI_Image : LocalizeTarget<Image>
	{
		[Token(Token = "0x6002935")]
		[Address(RVA = "0x851140", Offset = "0x851140", VA = "0x851140")]
		static LocalizeTarget_UnityUI_Image()
		{
		}

		[Token(Token = "0x6002936")]
		[Address(RVA = "0x851144", Offset = "0x851144", VA = "0x851144")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x3AD5D0", Offset = "0x3AD5D0")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002937")]
		[Address(RVA = "0x851234", Offset = "0x851234", VA = "0x851234", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002938")]
		[Address(RVA = "0x85123C", Offset = "0x85123C", VA = "0x85123C", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002939")]
		[Address(RVA = "0x851244", Offset = "0x851244", VA = "0x851244", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600293A")]
		[Address(RVA = "0x85124C", Offset = "0x85124C", VA = "0x85124C", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600293B")]
		[Address(RVA = "0x8512F0", Offset = "0x8512F0", VA = "0x8512F0", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600293C")]
		[Address(RVA = "0x8512F8", Offset = "0x8512F8", VA = "0x8512F8", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x600293D")]
		[Address(RVA = "0x8514EC", Offset = "0x8514EC", VA = "0x8514EC", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x600293E")]
		[Address(RVA = "0x85160C", Offset = "0x85160C", VA = "0x85160C")]
		public LocalizeTarget_UnityUI_Image()
		{
		}
	}
	[Token(Token = "0x2000573")]
	public class LocalizeTarget_UnityUI_RawImage : LocalizeTarget<RawImage>
	{
		[Token(Token = "0x600293F")]
		[Address(RVA = "0x851668", Offset = "0x851668", VA = "0x851668")]
		static LocalizeTarget_UnityUI_RawImage()
		{
		}

		[Token(Token = "0x6002940")]
		[Address(RVA = "0x85166C", Offset = "0x85166C", VA = "0x85166C")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x3AD5E4", Offset = "0x3AD5E4")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002941")]
		[Address(RVA = "0x85175C", Offset = "0x85175C", VA = "0x85175C", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002942")]
		[Address(RVA = "0x851764", Offset = "0x851764", VA = "0x851764", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002943")]
		[Address(RVA = "0x85176C", Offset = "0x85176C", VA = "0x85176C", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002944")]
		[Address(RVA = "0x851774", Offset = "0x851774", VA = "0x851774", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002945")]
		[Address(RVA = "0x85177C", Offset = "0x85177C", VA = "0x85177C", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002946")]
		[Address(RVA = "0x851784", Offset = "0x851784", VA = "0x851784", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002947")]
		[Address(RVA = "0x851898", Offset = "0x851898", VA = "0x851898", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002948")]
		[Address(RVA = "0x8519B8", Offset = "0x8519B8", VA = "0x8519B8")]
		public LocalizeTarget_UnityUI_RawImage()
		{
		}
	}
	[Token(Token = "0x2000574")]
	public class LocalizeTarget_UnityUI_Text : LocalizeTarget<Text>
	{
		[Token(Token = "0x40021C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TextAnchor mAlignment_RTL;

		[Token(Token = "0x40021C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private TextAnchor mAlignment_LTR;

		[Token(Token = "0x40021C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x40021C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool mInitializeAlignment;

		[Token(Token = "0x6002949")]
		[Address(RVA = "0x851A14", Offset = "0x851A14", VA = "0x851A14")]
		static LocalizeTarget_UnityUI_Text()
		{
		}

		[Token(Token = "0x600294A")]
		[Address(RVA = "0x851A18", Offset = "0x851A18", VA = "0x851A18")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x3AD5F8", Offset = "0x3AD5F8")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x600294B")]
		[Address(RVA = "0x851B08", Offset = "0x851B08", VA = "0x851B08", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600294C")]
		[Address(RVA = "0x851B10", Offset = "0x851B10", VA = "0x851B10", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600294D")]
		[Address(RVA = "0x851B18", Offset = "0x851B18", VA = "0x851B18", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x600294E")]
		[Address(RVA = "0x851B20", Offset = "0x851B20", VA = "0x851B20", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600294F")]
		[Address(RVA = "0x851B28", Offset = "0x851B28", VA = "0x851B28", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002950")]
		[Address(RVA = "0x851B30", Offset = "0x851B30", VA = "0x851B30", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002951")]
		[Address(RVA = "0x851CA0", Offset = "0x851CA0", VA = "0x851CA0", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002952")]
		[Address(RVA = "0x852060", Offset = "0x852060", VA = "0x852060")]
		private void InitAlignment(bool isRTL, TextAnchor alignment, out TextAnchor alignLTR, out TextAnchor alignRTL)
		{
		}

		[Token(Token = "0x6002953")]
		[Address(RVA = "0x852160", Offset = "0x852160", VA = "0x852160")]
		public LocalizeTarget_UnityUI_Text()
		{
		}
	}
	[Token(Token = "0x2000575")]
	public enum eTermType
	{
		[Token(Token = "0x40021CB")]
		Text,
		[Token(Token = "0x40021CC")]
		Font,
		[Token(Token = "0x40021CD")]
		Texture,
		[Token(Token = "0x40021CE")]
		AudioClip,
		[Token(Token = "0x40021CF")]
		GameObject,
		[Token(Token = "0x40021D0")]
		Sprite,
		[Token(Token = "0x40021D1")]
		Material,
		[Token(Token = "0x40021D2")]
		Child,
		[Token(Token = "0x40021D3")]
		Mesh,
		[Token(Token = "0x40021D4")]
		TextMeshPFont,
		[Token(Token = "0x40021D5")]
		Object
	}
	[Token(Token = "0x2000576")]
	public enum TranslationFlag : byte
	{
		[Token(Token = "0x40021D7")]
		Normal = 1,
		[Token(Token = "0x40021D8")]
		AutoTranslated
	}
	[Serializable]
	[Token(Token = "0x2000577")]
	public class TermData
	{
		[Token(Token = "0x40021D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Term;

		[Token(Token = "0x40021DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public eTermType TermType;

		[NonSerialized]
		[Token(Token = "0x40021DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Description;

		[Token(Token = "0x40021DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public string[] Languages;

		[Token(Token = "0x40021DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public byte[] Flags;

		[Token(Token = "0x40021DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private string[] Languages_Touch;

		[Token(Token = "0x6002954")]
		[Address(RVA = "0x85F084", Offset = "0x85F084", VA = "0x85F084")]
		public string GetTranslation(int idx, [Optional] string specialization, bool editMode = false)
		{
			return null;
		}

		[Token(Token = "0x6002955")]
		[Address(RVA = "0x85F1C4", Offset = "0x85F1C4", VA = "0x85F1C4")]
		public void SetTranslation(int idx, string translation, [Optional] string specialization)
		{
		}

		[Token(Token = "0x6002956")]
		[Address(RVA = "0x85F2CC", Offset = "0x85F2CC", VA = "0x85F2CC")]
		public void RemoveSpecialization(string specialization)
		{
		}

		[Token(Token = "0x6002957")]
		[Address(RVA = "0x85F318", Offset = "0x85F318", VA = "0x85F318")]
		public void RemoveSpecialization(int idx, string specialization)
		{
		}

		[Token(Token = "0x6002958")]
		[Address(RVA = "0x85F4D8", Offset = "0x85F4D8", VA = "0x85F4D8")]
		public bool IsAutoTranslated(int idx, bool IsTouch)
		{
			return default(bool);
		}

		[Token(Token = "0x6002959")]
		[Address(RVA = "0x85F51C", Offset = "0x85F51C", VA = "0x85F51C")]
		public void Validate()
		{
		}

		[Token(Token = "0x600295A")]
		[Address(RVA = "0x85F7F4", Offset = "0x85F7F4", VA = "0x85F7F4")]
		public bool IsTerm(string name, bool allowCategoryMistmatch)
		{
			return default(bool);
		}

		[Token(Token = "0x600295B")]
		[Address(RVA = "0x85F89C", Offset = "0x85F89C", VA = "0x85F89C")]
		public bool HasSpecializations()
		{
			return default(bool);
		}

		[Token(Token = "0x600295C")]
		[Address(RVA = "0x85F9B0", Offset = "0x85F9B0", VA = "0x85F9B0")]
		public List<string> GetAllSpecializations()
		{
			return null;
		}

		[Token(Token = "0x600295D")]
		[Address(RVA = "0x85FAB8", Offset = "0x85FAB8", VA = "0x85FAB8")]
		public TermData()
		{
		}
	}
	[Token(Token = "0x2000578")]
	public class TermsPopup : PropertyAttribute
	{
		[Token(Token = "0x40021DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5568", Offset = "0x3A5568")]
		private string <Filter>k__BackingField;

		[Token(Token = "0x170003E6")]
		public string Filter
		{
			[Token(Token = "0x600295F")]
			[Address(RVA = "0x85FB7C", Offset = "0x85FB7C", VA = "0x85FB7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AD60C", Offset = "0x3AD60C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002960")]
			[Address(RVA = "0x85FB84", Offset = "0x85FB84", VA = "0x85FB84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AD61C", Offset = "0x3AD61C")]
			private set
			{
			}
		}

		[Token(Token = "0x600295E")]
		[Address(RVA = "0x85FB5C", Offset = "0x85FB5C", VA = "0x85FB5C")]
		public TermsPopup(string filter = "")
		{
		}
	}
	[Token(Token = "0x2000579")]
	public class AutoChangeCultureInfo : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x6002961")]
		[Address(RVA = "0x6AF6B8", Offset = "0x6AF6B8", VA = "0x6AF6B8")]
		public void Start()
		{
		}

		[Token(Token = "0x6002962")]
		[Address(RVA = "0x6AF730", Offset = "0x6AF730", VA = "0x6AF730")]
		public AutoChangeCultureInfo()
		{
		}
	}
	[Token(Token = "0x200057A")]
	public class CoroutineManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40021E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CoroutineManager mInstance;

		[Token(Token = "0x170003E7")]
		private static CoroutineManager pInstance
		{
			[Token(Token = "0x6002963")]
			[Address(RVA = "0x6AFEDC", Offset = "0x6AFEDC", VA = "0x6AFEDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002964")]
		[Address(RVA = "0x6B0054", Offset = "0x6B0054", VA = "0x6B0054")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002965")]
		[Address(RVA = "0x6B00F0", Offset = "0x6B00F0", VA = "0x6B00F0")]
		public static Coroutine Start(IEnumerator coroutine)
		{
			return null;
		}

		[Token(Token = "0x6002966")]
		[Address(RVA = "0x6B0124", Offset = "0x6B0124", VA = "0x6B0124")]
		public CoroutineManager()
		{
		}
	}
	[Token(Token = "0x200057B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x39AF98", Offset = "0x39AF98")]
	public class CustomLocalizeCallback : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40021E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public UnityEvent _OnLocalize;

		[Token(Token = "0x6002967")]
		[Address(RVA = "0x6B012C", Offset = "0x6B012C", VA = "0x6B012C")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6002968")]
		[Address(RVA = "0x6B0204", Offset = "0x6B0204", VA = "0x6B0204")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6002969")]
		[Address(RVA = "0x6B02B8", Offset = "0x6B02B8", VA = "0x6B02B8")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x600296A")]
		[Address(RVA = "0x6B02E0", Offset = "0x6B02E0", VA = "0x6B02E0")]
		public CustomLocalizeCallback()
		{
		}
	}
	[Token(Token = "0x200057C")]
	public class HindiFixer
	{
		[Serializable]
		[Token(Token = "0x2000901")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DA80", Offset = "0x39DA80")]
		private sealed class <>c
		{
			[Token(Token = "0x4002B41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002B42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static Func<char, bool> <>9__0_0;

			[Token(Token = "0x600382C")]
			[Address(RVA = "0x1109C50", Offset = "0x1109C50", VA = "0x1109C50")]
			public <>c()
			{
			}

			[Token(Token = "0x600382D")]
			[Address(RVA = "0x1109C58", Offset = "0x1109C58", VA = "0x1109C58")]
			internal bool <Fix>b__0_0(char x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600296B")]
		[Address(RVA = "0x1109450", Offset = "0x1109450", VA = "0x1109450")]
		internal static string Fix(string text)
		{
			return null;
		}

		[Token(Token = "0x600296C")]
		[Address(RVA = "0x1109BDC", Offset = "0x1109BDC", VA = "0x1109BDC")]
		public HindiFixer()
		{
		}
	}
	[Token(Token = "0x200057D")]
	public static class I2Utils
	{
		[Serializable]
		[Token(Token = "0x2000902")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DA90", Offset = "0x39DA90")]
		private sealed class <>c
		{
			[Token(Token = "0x4002B43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002B44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static Func<char, bool> <>9__6_0;

			[Token(Token = "0x600382F")]
			[Address(RVA = "0x110C214", Offset = "0x110C214", VA = "0x110C214")]
			public <>c()
			{
			}

			[Token(Token = "0x6003830")]
			[Address(RVA = "0x110C21C", Offset = "0x110C21C", VA = "0x110C21C")]
			internal bool <SplitLine>b__6_0(char c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40021E2")]
		public const string ValidChars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_";

		[Token(Token = "0x40021E3")]
		public const string NumberChars = "0123456789";

		[Token(Token = "0x40021E4")]
		public const string ValidNameSymbols = ".-_$#@*()[]{}+:?!&',^=<>~`";

		[Token(Token = "0x600296D")]
		[Address(RVA = "0x110B06C", Offset = "0x110B06C", VA = "0x110B06C")]
		public static string ReverseText(string source)
		{
			return null;
		}

		[Token(Token = "0x600296E")]
		[Address(RVA = "0x110B15C", Offset = "0x110B15C", VA = "0x110B15C")]
		public static string RemoveNonASCII(string text, bool allowCategory = false)
		{
			return null;
		}

		[Token(Token = "0x600296F")]
		[Address(RVA = "0x110B430", Offset = "0x110B430", VA = "0x110B430")]
		public static string GetValidTermName(string text, bool allowCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6002970")]
		[Address(RVA = "0x110B4F4", Offset = "0x110B4F4", VA = "0x110B4F4")]
		public static string SplitLine(string line, int maxCharacters)
		{
			return null;
		}

		[Token(Token = "0x6002971")]
		[Address(RVA = "0x110B870", Offset = "0x110B870", VA = "0x110B870")]
		public static bool FindNextTag(string line, int iStart, out int tagStart, out int tagEnd)
		{
			return default(bool);
		}

		[Token(Token = "0x6002972")]
		[Address(RVA = "0x110B458", Offset = "0x110B458", VA = "0x110B458")]
		public static string RemoveTags(string text)
		{
			return null;
		}

		[Token(Token = "0x6002973")]
		[Address(RVA = "0x110BA1C", Offset = "0x110BA1C", VA = "0x110BA1C")]
		public static bool RemoveResourcesPath(ref string sPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6002974")]
		[Address(RVA = "0x110BD34", Offset = "0x110BD34", VA = "0x110BD34")]
		public static bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6002975")]
		[Address(RVA = "0x110BD3C", Offset = "0x110BD3C", VA = "0x110BD3C")]
		public static string GetPath(this Transform tr)
		{
			return null;
		}

		[Token(Token = "0x6002976")]
		[Address(RVA = "0x110BE40", Offset = "0x110BE40", VA = "0x110BE40")]
		public static Transform FindObject(string objectPath)
		{
			return null;
		}

		[Token(Token = "0x6002977")]
		[Address(RVA = "0x110BE60", Offset = "0x110BE60", VA = "0x110BE60")]
		public static Transform FindObject(Scene scene, string objectPath)
		{
			return null;
		}

		[Token(Token = "0x6002978")]
		[Address(RVA = "0x110C000", Offset = "0x110C000", VA = "0x110C000")]
		public static Transform FindObject(Transform root, string objectPath)
		{
			return null;
		}

		[Token(Token = "0x6002979")]
		public static H FindInParents<H>(Transform tr) where H : UnityEngine.Component
		{
			return null;
		}

		[Token(Token = "0x600297A")]
		[Address(RVA = "0x1108198", Offset = "0x1108198", VA = "0x1108198")]
		public static string GetCaptureMatch(Match match)
		{
			return null;
		}

		[Token(Token = "0x600297B")]
		[Address(RVA = "0x110C180", Offset = "0x110C180", VA = "0x110C180")]
		public static void SendWebRequest(UnityWebRequest www)
		{
		}
	}
	[Token(Token = "0x200057E")]
	public interface ILocalizationParamsManager
	{
		[Token(Token = "0x600297C")]
		string GetParameterValue(string Param);
	}
	[Token(Token = "0x200057F")]
	public class LocalizationParamsManager : UnityEngine.MonoBehaviour, ILocalizationParamsManager
	{
		[Serializable]
		[Token(Token = "0x2000903")]
		public struct ParamValue
		{
			[Token(Token = "0x4002B45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Name;

			[Token(Token = "0x4002B46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public string Value;
		}

		[Token(Token = "0x40021E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		public List<ParamValue> _Params;

		[Token(Token = "0x40021E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _IsGlobalManager;

		[Token(Token = "0x600297D")]
		[Address(RVA = "0x111FC20", Offset = "0x111FC20", VA = "0x111FC20", Slot = "4")]
		public string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x600297E")]
		[Address(RVA = "0x111FD14", Offset = "0x111FD14", VA = "0x111FD14")]
		public void SetParameterValue(string ParamName, string ParamValue, bool localize = true)
		{
		}

		[Token(Token = "0x600297F")]
		[Address(RVA = "0x111FE94", Offset = "0x111FE94", VA = "0x111FE94")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x6002980")]
		[Address(RVA = "0x111FF50", Offset = "0x111FF50", VA = "0x111FF50", Slot = "5")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6002981")]
		[Address(RVA = "0x111FF60", Offset = "0x111FF60", VA = "0x111FF60")]
		public void DoAutoRegister()
		{
		}

		[Token(Token = "0x6002982")]
		[Address(RVA = "0x112006C", Offset = "0x112006C", VA = "0x112006C")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6002983")]
		[Address(RVA = "0x1120110", Offset = "0x1120110", VA = "0x1120110")]
		public LocalizationParamsManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000580")]
	public struct LocalizedString
	{
		[Token(Token = "0x40021E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string mTerm;

		[Token(Token = "0x40021E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool mRTL_IgnoreArabicFix;

		[Token(Token = "0x40021E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int mRTL_MaxLineLength;

		[Token(Token = "0x40021EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool mRTL_ConvertNumbers;

		[Token(Token = "0x40021EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		public bool m_DontLocalizeParameters;

		[Token(Token = "0x6002984")]
		[Address(RVA = "0x8521CC", Offset = "0x8521CC", VA = "0x8521CC")]
		public static implicit operator string(LocalizedString s)
		{
			return null;
		}

		[Token(Token = "0x6002985")]
		[Address(RVA = "0x8522C4", Offset = "0x8522C4", VA = "0x8522C4")]
		public static implicit operator LocalizedString(string term)
		{
			return default(LocalizedString);
		}

		[Token(Token = "0x6002986")]
		[Address(RVA = "0x457A34", Offset = "0x457A34", VA = "0x457A34")]
		public LocalizedString(LocalizedString str)
		{
		}

		[Token(Token = "0x6002987")]
		[Address(RVA = "0x457A70", Offset = "0x457A70", VA = "0x457A70", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000581")]
	public class RTLFixer
	{
		[Token(Token = "0x6002988")]
		[Address(RVA = "0x852AE4", Offset = "0x852AE4", VA = "0x852AE4")]
		public static string Fix(string str)
		{
			return null;
		}

		[Token(Token = "0x6002989")]
		[Address(RVA = "0x852DE8", Offset = "0x852DE8", VA = "0x852DE8")]
		public static string Fix(string str, bool rtl)
		{
			return null;
		}

		[Token(Token = "0x600298A")]
		[Address(RVA = "0x852AF0", Offset = "0x852AF0", VA = "0x852AF0")]
		public static string Fix(string str, bool showTashkeel, bool useHinduNumbers)
		{
			return null;
		}

		[Token(Token = "0x600298B")]
		[Address(RVA = "0x854604", Offset = "0x854604", VA = "0x854604")]
		public RTLFixer()
		{
		}
	}
	[Token(Token = "0x2000582")]
	internal enum IsolatedArabicLetters
	{
		[Token(Token = "0x40021ED")]
		Hamza = 65152,
		[Token(Token = "0x40021EE")]
		Alef = 65165,
		[Token(Token = "0x40021EF")]
		AlefHamza = 65155,
		[Token(Token = "0x40021F0")]
		WawHamza = 65157,
		[Token(Token = "0x40021F1")]
		AlefMaksoor = 65159,
		[Token(Token = "0x40021F2")]
		AlefMaksora = 64508,
		[Token(Token = "0x40021F3")]
		HamzaNabera = 65161,
		[Token(Token = "0x40021F4")]
		Ba = 65167,
		[Token(Token = "0x40021F5")]
		Ta = 65173,
		[Token(Token = "0x40021F6")]
		Tha2 = 65177,
		[Token(Token = "0x40021F7")]
		Jeem = 65181,
		[Token(Token = "0x40021F8")]
		H7aa = 65185,
		[Token(Token = "0x40021F9")]
		Khaa2 = 65189,
		[Token(Token = "0x40021FA")]
		Dal = 65193,
		[Token(Token = "0x40021FB")]
		Thal = 65195,
		[Token(Token = "0x40021FC")]
		Ra2 = 65197,
		[Token(Token = "0x40021FD")]
		Zeen = 65199,
		[Token(Token = "0x40021FE")]
		Seen = 65201,
		[Token(Token = "0x40021FF")]
		Sheen = 65205,
		[Token(Token = "0x4002200")]
		S9a = 65209,
		[Token(Token = "0x4002201")]
		Dha = 65213,
		[Token(Token = "0x4002202")]
		T6a = 65217,
		[Token(Token = "0x4002203")]
		T6ha = 65221,
		[Token(Token = "0x4002204")]
		Ain = 65225,
		[Token(Token = "0x4002205")]
		Gain = 65229,
		[Token(Token = "0x4002206")]
		Fa = 65233,
		[Token(Token = "0x4002207")]
		Gaf = 65237,
		[Token(Token = "0x4002208")]
		Kaf = 65241,
		[Token(Token = "0x4002209")]
		Lam = 65245,
		[Token(Token = "0x400220A")]
		Meem = 65249,
		[Token(Token = "0x400220B")]
		Noon = 65253,
		[Token(Token = "0x400220C")]
		Ha = 65257,
		[Token(Token = "0x400220D")]
		Waw = 65261,
		[Token(Token = "0x400220E")]
		Ya = 65265,
		[Token(Token = "0x400220F")]
		AlefMad = 65153,
		[Token(Token = "0x4002210")]
		TaMarboota = 65171,
		[Token(Token = "0x4002211")]
		PersianPe = 64342,
		[Token(Token = "0x4002212")]
		PersianChe = 64378,
		[Token(Token = "0x4002213")]
		PersianZe = 64394,
		[Token(Token = "0x4002214")]
		PersianGaf = 64402,
		[Token(Token = "0x4002215")]
		PersianGaf2 = 64398
	}
	[Token(Token = "0x2000583")]
	internal enum GeneralArabicLetters
	{
		[Token(Token = "0x4002217")]
		Hamza = 1569,
		[Token(Token = "0x4002218")]
		Alef = 1575,
		[Token(Token = "0x4002219")]
		AlefHamza = 1571,
		[Token(Token = "0x400221A")]
		WawHamza = 1572,
		[Token(Token = "0x400221B")]
		AlefMaksoor = 1573,
		[Token(Token = "0x400221C")]
		AlefMagsora = 1609,
		[Token(Token = "0x400221D")]
		HamzaNabera = 1574,
		[Token(Token = "0x400221E")]
		Ba = 1576,
		[Token(Token = "0x400221F")]
		Ta = 1578,
		[Token(Token = "0x4002220")]
		Tha2 = 1579,
		[Token(Token = "0x4002221")]
		Jeem = 1580,
		[Token(Token = "0x4002222")]
		H7aa = 1581,
		[Token(Token = "0x4002223")]
		Khaa2 = 1582,
		[Token(Token = "0x4002224")]
		Dal = 1583,
		[Token(Token = "0x4002225")]
		Thal = 1584,
		[Token(Token = "0x4002226")]
		Ra2 = 1585,
		[Token(Token = "0x4002227")]
		Zeen = 1586,
		[Token(Token = "0x4002228")]
		Seen = 1587,
		[Token(Token = "0x4002229")]
		Sheen = 1588,
		[Token(Token = "0x400222A")]
		S9a = 1589,
		[Token(Token = "0x400222B")]
		Dha = 1590,
		[Token(Token = "0x400222C")]
		T6a = 1591,
		[Token(Token = "0x400222D")]
		T6ha = 1592,
		[Token(Token = "0x400222E")]
		Ain = 1593,
		[Token(Token = "0x400222F")]
		Gain = 1594,
		[Token(Token = "0x4002230")]
		Fa = 1601,
		[Token(Token = "0x4002231")]
		Gaf = 1602,
		[Token(Token = "0x4002232")]
		Kaf = 1603,
		[Token(Token = "0x4002233")]
		Lam = 1604,
		[Token(Token = "0x4002234")]
		Meem = 1605,
		[Token(Token = "0x4002235")]
		Noon = 1606,
		[Token(Token = "0x4002236")]
		Ha = 1607,
		[Token(Token = "0x4002237")]
		Waw = 1608,
		[Token(Token = "0x4002238")]
		Ya = 1610,
		[Token(Token = "0x4002239")]
		AlefMad = 1570,
		[Token(Token = "0x400223A")]
		TaMarboota = 1577,
		[Token(Token = "0x400223B")]
		PersianPe = 1662,
		[Token(Token = "0x400223C")]
		PersianChe = 1670,
		[Token(Token = "0x400223D")]
		PersianZe = 1688,
		[Token(Token = "0x400223E")]
		PersianGaf = 1711,
		[Token(Token = "0x400223F")]
		PersianGaf2 = 1705
	}
	[Token(Token = "0x2000584")]
	internal class ArabicMapping
	{
		[Token(Token = "0x4002240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int from;

		[Token(Token = "0x4002241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int to;

		[Token(Token = "0x600298C")]
		[Address(RVA = "0x6AE7EC", Offset = "0x6AE7EC", VA = "0x6AE7EC")]
		public ArabicMapping(int from, int to)
		{
		}
	}
	[Token(Token = "0x2000585")]
	internal class ArabicTable
	{
		[Token(Token = "0x4002242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<ArabicMapping> mapList;

		[Token(Token = "0x4002243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static ArabicTable arabicMapper;

		[Token(Token = "0x170003E8")]
		internal static ArabicTable ArabicMapper
		{
			[Token(Token = "0x600298E")]
			[Address(RVA = "0x6AF4F0", Offset = "0x6AF4F0", VA = "0x6AF4F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600298D")]
		[Address(RVA = "0x6AE814", Offset = "0x6AE814", VA = "0x6AE814")]
		private ArabicTable()
		{
		}

		[Token(Token = "0x600298F")]
		[Address(RVA = "0x6AF574", Offset = "0x6AF574", VA = "0x6AF574")]
		internal int Convert(int toBeConverted)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000586")]
	internal class TashkeelLocation
	{
		[Token(Token = "0x4002244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public char tashkeel;

		[Token(Token = "0x4002245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int position;

		[Token(Token = "0x6002990")]
		[Address(RVA = "0x854E1C", Offset = "0x854E1C", VA = "0x854E1C")]
		public TashkeelLocation(char tashkeel, int position)
		{
		}
	}
	[Token(Token = "0x2000587")]
	internal class RTLFixerTool
	{
		[Token(Token = "0x4002246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static bool showTashkeel;

		[Token(Token = "0x4002247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		internal static bool useHinduNumbers;

		[Token(Token = "0x6002991")]
		[Address(RVA = "0x85460C", Offset = "0x85460C", VA = "0x85460C")]
		internal static string RemoveTashkeel(string str, out List<TashkeelLocation> tashkeelLocation)
		{
			return null;
		}

		[Token(Token = "0x6002992")]
		[Address(RVA = "0x854E44", Offset = "0x854E44", VA = "0x854E44")]
		internal static char[] ReturnTashkeel(char[] letters, List<TashkeelLocation> tashkeelLocation)
		{
			return null;
		}

		[Token(Token = "0x6002993")]
		[Address(RVA = "0x853074", Offset = "0x853074", VA = "0x853074")]
		internal static string FixLine(string str)
		{
			return null;
		}

		[Token(Token = "0x6002994")]
		[Address(RVA = "0x8550B0", Offset = "0x8550B0", VA = "0x8550B0")]
		internal static bool IsIgnoredCharacter(char ch)
		{
			return default(bool);
		}

		[Token(Token = "0x6002995")]
		[Address(RVA = "0x855E74", Offset = "0x855E74", VA = "0x855E74")]
		internal static bool IsLeadingLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6002996")]
		[Address(RVA = "0x855ABC", Offset = "0x855ABC", VA = "0x855ABC")]
		internal static bool IsFinishingLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6002997")]
		[Address(RVA = "0x85521C", Offset = "0x85521C", VA = "0x85521C")]
		internal static bool IsMiddleLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6002998")]
		[Address(RVA = "0x8566AC", Offset = "0x8566AC", VA = "0x8566AC")]
		public RTLFixerTool()
		{
		}
	}
	[Token(Token = "0x2000588")]
	public class RegisterGlobalParameters : UnityEngine.MonoBehaviour, ILocalizationParamsManager
	{
		[Token(Token = "0x600299A")]
		[Address(RVA = "0x856720", Offset = "0x856720", VA = "0x856720", Slot = "5")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x600299B")]
		[Address(RVA = "0x856830", Offset = "0x856830", VA = "0x856830", Slot = "6")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x600299C")]
		[Address(RVA = "0x8568D4", Offset = "0x8568D4", VA = "0x8568D4", Slot = "7")]
		public virtual string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x600299D")]
		[Address(RVA = "0x8568DC", Offset = "0x8568DC", VA = "0x8568DC")]
		public RegisterGlobalParameters()
		{
		}
	}
	[Token(Token = "0x2000589")]
	public interface IResourceManager_Bundles
	{
		[Token(Token = "0x600299E")]
		UnityEngine.Object LoadFromBundle(string path, Type assetType);
	}
	[Token(Token = "0x200058A")]
	public class ResourceManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ResourceManager mInstance;

		[Token(Token = "0x4002249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public List<IResourceManager_Bundles> mBundleManagers;

		[Token(Token = "0x400224A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnityEngine.Object[] Assets;

		[Token(Token = "0x400224B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private readonly Dictionary<string, UnityEngine.Object> mResourcesCache;

		[Token(Token = "0x170003E9")]
		public static ResourceManager pInstance
		{
			[Token(Token = "0x600299F")]
			[Address(RVA = "0x8568E4", Offset = "0x8568E4", VA = "0x8568E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029A0")]
		[Address(RVA = "0x856CD8", Offset = "0x856CD8", VA = "0x856CD8")]
		public static void MyOnLevelWasLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x60029A1")]
		public T GetAsset<T>(string Name) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x60029A2")]
		[Address(RVA = "0x856DE8", Offset = "0x856DE8", VA = "0x856DE8")]
		private UnityEngine.Object FindAsset(string Name)
		{
			return null;
		}

		[Token(Token = "0x60029A3")]
		[Address(RVA = "0x856F6C", Offset = "0x856F6C", VA = "0x856F6C")]
		public bool HasAsset(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60029A4")]
		public T LoadFromResources<T>(string Path) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x60029A5")]
		public T LoadFromBundle<T>(string path) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x60029A6")]
		[Address(RVA = "0x856D68", Offset = "0x856D68", VA = "0x856D68")]
		public void CleanResourceCache()
		{
		}

		[Token(Token = "0x60029A7")]
		[Address(RVA = "0x856FF0", Offset = "0x856FF0", VA = "0x856FF0")]
		public ResourceManager()
		{
		}
	}
	[Token(Token = "0x200058B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x39AFDC", Offset = "0x39AFDC")]
	public class SetLanguage : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400224C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string _Language;

		[Token(Token = "0x60029A8")]
		[Address(RVA = "0x8571F4", Offset = "0x8571F4", VA = "0x8571F4")]
		private void OnClick()
		{
		}

		[Token(Token = "0x60029A9")]
		[Address(RVA = "0x8571F8", Offset = "0x8571F8", VA = "0x8571F8")]
		public void ApplyLanguage()
		{
		}

		[Token(Token = "0x60029AA")]
		[Address(RVA = "0x8572D0", Offset = "0x8572D0", VA = "0x8572D0")]
		public SetLanguage()
		{
		}
	}
	[Token(Token = "0x200058C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x39B010", Offset = "0x39B010")]
	public class SetLanguageDropdown : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x60029AB")]
		[Address(RVA = "0x8572D8", Offset = "0x8572D8", VA = "0x8572D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60029AC")]
		[Address(RVA = "0x857590", Offset = "0x857590", VA = "0x857590")]
		private void OnValueChanged(int index)
		{
		}

		[Token(Token = "0x60029AD")]
		[Address(RVA = "0x8576AC", Offset = "0x8576AC", VA = "0x8576AC")]
		public SetLanguageDropdown()
		{
		}
	}
	[Token(Token = "0x200058D")]
	public class StringObfucator
	{
		[Token(Token = "0x400224D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static char[] StringObfuscatorPassword;

		[Token(Token = "0x60029AE")]
		[Address(RVA = "0x85EA4C", Offset = "0x85EA4C", VA = "0x85EA4C")]
		public static string Encode(string NormalString)
		{
			return null;
		}

		[Token(Token = "0x60029AF")]
		[Address(RVA = "0x85EE28", Offset = "0x85EE28", VA = "0x85EE28")]
		public static string Decode(string ObfucatedString)
		{
			return null;
		}

		[Token(Token = "0x60029B0")]
		[Address(RVA = "0x85ED78", Offset = "0x85ED78", VA = "0x85ED78")]
		private static string ToBase64(string regularString)
		{
			return null;
		}

		[Token(Token = "0x60029B1")]
		[Address(RVA = "0x85EF2C", Offset = "0x85EF2C", VA = "0x85EF2C")]
		private static string FromBase64(string base64string)
		{
			return null;
		}

		[Token(Token = "0x60029B2")]
		[Address(RVA = "0x85EB50", Offset = "0x85EB50", VA = "0x85EB50")]
		private static string XoREncode(string NormalString)
		{
			return null;
		}

		[Token(Token = "0x60029B3")]
		[Address(RVA = "0x85EFFC", Offset = "0x85EFFC", VA = "0x85EFFC")]
		public StringObfucator()
		{
		}
	}
	[Token(Token = "0x200058E")]
	public static class ScriptLocalization
	{
		[Token(Token = "0x60029B5")]
		[Address(RVA = "0x857138", Offset = "0x857138", VA = "0x857138")]
		public static string Get(string Term)
		{
			return null;
		}

		[Token(Token = "0x60029B6")]
		[Address(RVA = "0x8571EC", Offset = "0x8571EC", VA = "0x8571EC")]
		public static string Get(string Term, bool FixForRTL)
		{
			return null;
		}

		[Token(Token = "0x60029B7")]
		[Address(RVA = "0x857144", Offset = "0x857144", VA = "0x857144")]
		public static string Get(string Term, bool FixForRTL, int maxLineLengthForRTL)
		{
			return null;
		}
	}
}
namespace I2.Loc.SimpleJSON
{
	[Token(Token = "0x200058F")]
	public enum JSONBinaryTag
	{
		[Token(Token = "0x400224F")]
		Array = 1,
		[Token(Token = "0x4002250")]
		Class,
		[Token(Token = "0x4002251")]
		Value,
		[Token(Token = "0x4002252")]
		IntValue,
		[Token(Token = "0x4002253")]
		DoubleValue,
		[Token(Token = "0x4002254")]
		BoolValue,
		[Token(Token = "0x4002255")]
		FloatValue
	}
	[Token(Token = "0x2000590")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x39B044", Offset = "0x39B044")]
	public class JSONNode
	{
		[Token(Token = "0x2000904")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DAA0", Offset = "0x39DAA0")]
		private sealed class <get_Childs>d__17 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002B48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002B49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>l__initialThreadId;

			[Token(Token = "0x170005FB")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6003834")]
				[Address(RVA = "0x85D4AC", Offset = "0x85D4AC", VA = "0x85D4AC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005FC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003836")]
				[Address(RVA = "0x85D52C", Offset = "0x85D52C", VA = "0x85D52C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003831")]
			[Address(RVA = "0x85BF54", Offset = "0x85BF54", VA = "0x85BF54")]
			[DebuggerHidden]
			public <get_Childs>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6003832")]
			[Address(RVA = "0x85D490", Offset = "0x85D490", VA = "0x85D490", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003833")]
			[Address(RVA = "0x85D494", Offset = "0x85D494", VA = "0x85D494", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003835")]
			[Address(RVA = "0x85D4B4", Offset = "0x85D4B4", VA = "0x85D4B4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6003837")]
			[Address(RVA = "0x85D534", Offset = "0x85D534", VA = "0x85D534", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6003838")]
			[Address(RVA = "0x85D5DC", Offset = "0x85D5DC", VA = "0x85D5DC", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000905")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DAB0", Offset = "0x39DAB0")]
		private sealed class <get_DeepChilds>d__19 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002B4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002B4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002B4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public JSONNode <>4__this;

			[Token(Token = "0x4002B4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private IEnumerator<JSONNode> <>7__wrap1;

			[Token(Token = "0x4002B4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private IEnumerator<JSONNode> <>7__wrap2;

			[Token(Token = "0x170005FD")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x600383E")]
				[Address(RVA = "0x85DCB4", Offset = "0x85DCB4", VA = "0x85DCB4", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005FE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003840")]
				[Address(RVA = "0x85DD34", Offset = "0x85DD34", VA = "0x85DD34", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003839")]
			[Address(RVA = "0x85C00C", Offset = "0x85C00C", VA = "0x85C00C")]
			[DebuggerHidden]
			public <get_DeepChilds>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x600383A")]
			[Address(RVA = "0x85D5E0", Offset = "0x85D5E0", VA = "0x85D5E0", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600383B")]
			[Address(RVA = "0x85D7E8", Offset = "0x85D7E8", VA = "0x85D7E8", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600383C")]
			[Address(RVA = "0x85D714", Offset = "0x85D714", VA = "0x85D714")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600383D")]
			[Address(RVA = "0x85D640", Offset = "0x85D640", VA = "0x85D640")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x600383F")]
			[Address(RVA = "0x85DCBC", Offset = "0x85DCBC", VA = "0x85DCBC", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6003841")]
			[Address(RVA = "0x85DD3C", Offset = "0x85DD3C", VA = "0x85DD3C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6003842")]
			[Address(RVA = "0x85DDFC", Offset = "0x85DDFC", VA = "0x85DDFC", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x170003EA")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x60029B9")]
			[Address(RVA = "0x85BDE0", Offset = "0x85BDE0", VA = "0x85BDE0", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x60029BA")]
			[Address(RVA = "0x85BDE8", Offset = "0x85BDE8", VA = "0x85BDE8", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170003EB")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x60029BB")]
			[Address(RVA = "0x85BDEC", Offset = "0x85BDEC", VA = "0x85BDEC", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x60029BC")]
			[Address(RVA = "0x85BDF4", Offset = "0x85BDF4", VA = "0x85BDF4", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170003EC")]
		public virtual string Value
		{
			[Token(Token = "0x60029BD")]
			[Address(RVA = "0x85BDF8", Offset = "0x85BDF8", VA = "0x85BDF8", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x60029BE")]
			[Address(RVA = "0x85BE48", Offset = "0x85BE48", VA = "0x85BE48", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x170003ED")]
		public virtual int Count
		{
			[Token(Token = "0x60029BF")]
			[Address(RVA = "0x85BE4C", Offset = "0x85BE4C", VA = "0x85BE4C", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003EE")]
		public virtual IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x60029C4")]
			[Address(RVA = "0x85BEDC", Offset = "0x85BEDC", VA = "0x85BEDC", Slot = "16")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AD63C", Offset = "0x3AD63C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EF")]
		public IEnumerable<JSONNode> DeepChilds
		{
			[Token(Token = "0x60029C5")]
			[Address(RVA = "0x85BF80", Offset = "0x85BF80", VA = "0x85BF80")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AD6AC", Offset = "0x3AD6AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F0")]
		public virtual int AsInt
		{
			[Token(Token = "0x60029C8")]
			[Address(RVA = "0x85C0D8", Offset = "0x85C0D8", VA = "0x85C0D8", Slot = "18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60029C9")]
			[Address(RVA = "0x85C11C", Offset = "0x85C11C", VA = "0x85C11C", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x170003F1")]
		public virtual float AsFloat
		{
			[Token(Token = "0x60029CA")]
			[Address(RVA = "0x85C15C", Offset = "0x85C15C", VA = "0x85C15C", Slot = "20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60029CB")]
			[Address(RVA = "0x85C1AC", Offset = "0x85C1AC", VA = "0x85C1AC", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x170003F2")]
		public virtual double AsDouble
		{
			[Token(Token = "0x60029CC")]
			[Address(RVA = "0x85C1EC", Offset = "0x85C1EC", VA = "0x85C1EC", Slot = "22")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60029CD")]
			[Address(RVA = "0x85C2AC", Offset = "0x85C2AC", VA = "0x85C2AC", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x170003F3")]
		public virtual bool AsBool
		{
			[Token(Token = "0x60029CE")]
			[Address(RVA = "0x85C2EC", Offset = "0x85C2EC", VA = "0x85C2EC", Slot = "24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60029CF")]
			[Address(RVA = "0x85C3CC", Offset = "0x85C3CC", VA = "0x85C3CC", Slot = "25")]
			set
			{
			}
		}

		[Token(Token = "0x170003F4")]
		public virtual JSONArray AsArray
		{
			[Token(Token = "0x60029D0")]
			[Address(RVA = "0x85C45C", Offset = "0x85C45C", VA = "0x85C45C", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F5")]
		public virtual JSONClass AsObject
		{
			[Token(Token = "0x60029D1")]
			[Address(RVA = "0x85C4E8", Offset = "0x85C4E8", VA = "0x85C4E8", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029B8")]
		[Address(RVA = "0x85BDDC", Offset = "0x85BDDC", VA = "0x85BDDC", Slot = "4")]
		public virtual void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x60029C0")]
		[Address(RVA = "0x85BE54", Offset = "0x85BE54", VA = "0x85BE54", Slot = "12")]
		public virtual void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x60029C1")]
		[Address(RVA = "0x85BEC4", Offset = "0x85BEC4", VA = "0x85BEC4", Slot = "13")]
		public virtual JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x60029C2")]
		[Address(RVA = "0x85BECC", Offset = "0x85BECC", VA = "0x85BECC", Slot = "14")]
		public virtual JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x60029C3")]
		[Address(RVA = "0x85BED4", Offset = "0x85BED4", VA = "0x85BED4", Slot = "15")]
		public virtual JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x60029C6")]
		[Address(RVA = "0x85C038", Offset = "0x85C038", VA = "0x85C038", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60029C7")]
		[Address(RVA = "0x85C088", Offset = "0x85C088", VA = "0x85C088", Slot = "17")]
		public virtual string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x60029D2")]
		[Address(RVA = "0x85C574", Offset = "0x85C574", VA = "0x85C574")]
		public static implicit operator JSONNode(string s)
		{
			return null;
		}

		[Token(Token = "0x60029D3")]
		[Address(RVA = "0x85C5E0", Offset = "0x85C5E0", VA = "0x85C5E0")]
		public static implicit operator string(JSONNode d)
		{
			return null;
		}

		[Token(Token = "0x60029D4")]
		[Address(RVA = "0x85A7B8", Offset = "0x85A7B8", VA = "0x85A7B8")]
		public static bool operator ==(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x60029D5")]
		[Address(RVA = "0x85C628", Offset = "0x85C628", VA = "0x85C628")]
		public static bool operator !=(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x60029D6")]
		[Address(RVA = "0x85C63C", Offset = "0x85C63C", VA = "0x85C63C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60029D7")]
		[Address(RVA = "0x85B7C4", Offset = "0x85B7C4", VA = "0x85B7C4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60029D8")]
		[Address(RVA = "0x859E5C", Offset = "0x859E5C", VA = "0x859E5C")]
		internal static string Escape(string aText)
		{
			return null;
		}

		[Token(Token = "0x60029D9")]
		[Address(RVA = "0x8576B8", Offset = "0x8576B8", VA = "0x8576B8")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}

		[Token(Token = "0x60029DA")]
		[Address(RVA = "0x85C64C", Offset = "0x85C64C", VA = "0x85C64C", Slot = "28")]
		public virtual void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x60029DB")]
		[Address(RVA = "0x85C650", Offset = "0x85C650", VA = "0x85C650")]
		public void SaveToStream(Stream aData)
		{
		}

		[Token(Token = "0x60029DC")]
		[Address(RVA = "0x85C6D4", Offset = "0x85C6D4", VA = "0x85C6D4")]
		public void SaveToCompressedStream(Stream aData)
		{
		}

		[Token(Token = "0x60029DD")]
		[Address(RVA = "0x85C760", Offset = "0x85C760", VA = "0x85C760")]
		public void SaveToCompressedFile(string aFileName)
		{
		}

		[Token(Token = "0x60029DE")]
		[Address(RVA = "0x85C7EC", Offset = "0x85C7EC", VA = "0x85C7EC")]
		public string SaveToCompressedBase64()
		{
			return null;
		}

		[Token(Token = "0x60029DF")]
		[Address(RVA = "0x85C878", Offset = "0x85C878", VA = "0x85C878")]
		public void SaveToFile(string aFileName)
		{
		}

		[Token(Token = "0x60029E0")]
		[Address(RVA = "0x85CA0C", Offset = "0x85CA0C", VA = "0x85CA0C")]
		public string SaveToBase64()
		{
			return null;
		}

		[Token(Token = "0x60029E1")]
		[Address(RVA = "0x85CBE4", Offset = "0x85CBE4", VA = "0x85CBE4")]
		public static JSONNode Deserialize(BinaryReader aReader)
		{
			return null;
		}

		[Token(Token = "0x60029E2")]
		[Address(RVA = "0x85CF94", Offset = "0x85CF94", VA = "0x85CF94")]
		public static JSONNode LoadFromCompressedFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x60029E3")]
		[Address(RVA = "0x85D020", Offset = "0x85D020", VA = "0x85D020")]
		public static JSONNode LoadFromCompressedStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x60029E4")]
		[Address(RVA = "0x85D0AC", Offset = "0x85D0AC", VA = "0x85D0AC")]
		public static JSONNode LoadFromCompressedBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x60029E5")]
		[Address(RVA = "0x85D138", Offset = "0x85D138", VA = "0x85D138")]
		public static JSONNode LoadFromStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x60029E6")]
		[Address(RVA = "0x85D280", Offset = "0x85D280", VA = "0x85D280")]
		public static JSONNode LoadFromFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x60029E7")]
		[Address(RVA = "0x85D3B0", Offset = "0x85D3B0", VA = "0x85D3B0")]
		public static JSONNode LoadFromBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x60029E8")]
		[Address(RVA = "0x858A84", Offset = "0x858A84", VA = "0x858A84")]
		public JSONNode()
		{
		}
	}
	[Token(Token = "0x2000591")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x39B078", Offset = "0x39B078")]
	public class JSONArray : JSONNode, IEnumerable
	{
		[Token(Token = "0x2000906")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DAC0", Offset = "0x39DAC0")]
		private sealed class <get_Childs>d__13 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002B51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002B52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002B53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public JSONArray <>4__this;

			[Token(Token = "0x4002B54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170005FF")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6003847")]
				[Address(RVA = "0x858EFC", Offset = "0x858EFC", VA = "0x858EFC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000600")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003849")]
				[Address(RVA = "0x858F7C", Offset = "0x858F7C", VA = "0x858F7C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003843")]
			[Address(RVA = "0x858414", Offset = "0x858414", VA = "0x858414")]
			[DebuggerHidden]
			public <get_Childs>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6003844")]
			[Address(RVA = "0x858D08", Offset = "0x858D08", VA = "0x858D08", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003845")]
			[Address(RVA = "0x858D84", Offset = "0x858D84", VA = "0x858D84", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003846")]
			[Address(RVA = "0x858D20", Offset = "0x858D20", VA = "0x858D20")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6003848")]
			[Address(RVA = "0x858F04", Offset = "0x858F04", VA = "0x858F04", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600384A")]
			[Address(RVA = "0x858F84", Offset = "0x858F84", VA = "0x858F84", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600384B")]
			[Address(RVA = "0x859044", Offset = "0x859044", VA = "0x859044", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000907")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DAD0", Offset = "0x39DAD0")]
		private sealed class <GetEnumerator>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002B56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002B57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public JSONArray <>4__this;

			[Token(Token = "0x4002B58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000601")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003850")]
				[Address(RVA = "0x858C80", Offset = "0x858C80", VA = "0x858C80", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000602")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003852")]
				[Address(RVA = "0x858D00", Offset = "0x858D00", VA = "0x858D00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600384C")]
			[Address(RVA = "0x8584C0", Offset = "0x8584C0", VA = "0x8584C0")]
			[DebuggerHidden]
			public <GetEnumerator>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x600384D")]
			[Address(RVA = "0x858A8C", Offset = "0x858A8C", VA = "0x858A8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600384E")]
			[Address(RVA = "0x858B08", Offset = "0x858B08", VA = "0x858B08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600384F")]
			[Address(RVA = "0x858AA4", Offset = "0x858AA4", VA = "0x858AA4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6003851")]
			[Address(RVA = "0x858C88", Offset = "0x858C88", VA = "0x858C88", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private List<JSONNode> m_List;

		[Token(Token = "0x170003F6")]
		public override JSONNode Item
		{
			[Token(Token = "0x60029E9")]
			[Address(RVA = "0x857EC4", Offset = "0x857EC4", VA = "0x857EC4", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x60029EA")]
			[Address(RVA = "0x857FBC", Offset = "0x857FBC", VA = "0x857FBC", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170003F7")]
		public override JSONNode Item
		{
			[Token(Token = "0x60029EB")]
			[Address(RVA = "0x85808C", Offset = "0x85808C", VA = "0x85808C", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x60029EC")]
			[Address(RVA = "0x858100", Offset = "0x858100", VA = "0x858100", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170003F8")]
		public override int Count
		{
			[Token(Token = "0x60029ED")]
			[Address(RVA = "0x858174", Offset = "0x858174", VA = "0x858174", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003F9")]
		public override IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x60029F1")]
			[Address(RVA = "0x858388", Offset = "0x858388", VA = "0x858388", Slot = "16")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AD71C", Offset = "0x3AD71C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029EE")]
		[Address(RVA = "0x8581CC", Offset = "0x8581CC", VA = "0x8581CC", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x60029EF")]
		[Address(RVA = "0x858240", Offset = "0x858240", VA = "0x858240", Slot = "14")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x60029F0")]
		[Address(RVA = "0x858310", Offset = "0x858310", VA = "0x858310", Slot = "15")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x60029F2")]
		[Address(RVA = "0x858440", Offset = "0x858440", VA = "0x858440", Slot = "29")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AD78C", Offset = "0x3AD78C")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60029F3")]
		[Address(RVA = "0x8584E0", Offset = "0x8584E0", VA = "0x8584E0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60029F4")]
		[Address(RVA = "0x8586AC", Offset = "0x8586AC", VA = "0x8586AC", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x60029F5")]
		[Address(RVA = "0x8588F0", Offset = "0x8588F0", VA = "0x8588F0", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x60029F6")]
		[Address(RVA = "0x858A00", Offset = "0x858A00", VA = "0x858A00")]
		public JSONArray()
		{
		}
	}
	[Token(Token = "0x2000592")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x39B0AC", Offset = "0x39B0AC")]
	public class JSONClass : JSONNode, IEnumerable
	{
		[Token(Token = "0x2000908")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DAE0", Offset = "0x39DAE0")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4002B59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public JSONNode aNode;

			[Token(Token = "0x6003853")]
			[Address(RVA = "0x85991C", Offset = "0x85991C", VA = "0x85991C")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6003854")]
			[Address(RVA = "0x85A764", Offset = "0x85A764", VA = "0x85A764")]
			internal bool <Remove>b__0(KeyValuePair<string, JSONNode> k)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000909")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DAF0", Offset = "0x39DAF0")]
		private sealed class <get_Childs>d__14 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002B5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002B5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002B5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public JSONClass <>4__this;

			[Token(Token = "0x4002B5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000603")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6003859")]
				[Address(RVA = "0x85AD18", Offset = "0x85AD18", VA = "0x85AD18", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000604")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600385B")]
				[Address(RVA = "0x85AD98", Offset = "0x85AD98", VA = "0x85AD98", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003855")]
			[Address(RVA = "0x8599B0", Offset = "0x8599B0", VA = "0x8599B0")]
			[DebuggerHidden]
			public <get_Childs>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6003856")]
			[Address(RVA = "0x85AB10", Offset = "0x85AB10", VA = "0x85AB10", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003857")]
			[Address(RVA = "0x85AB8C", Offset = "0x85AB8C", VA = "0x85AB8C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003858")]
			[Address(RVA = "0x85AB28", Offset = "0x85AB28", VA = "0x85AB28")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600385A")]
			[Address(RVA = "0x85AD20", Offset = "0x85AD20", VA = "0x85AD20", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600385C")]
			[Address(RVA = "0x85ADA0", Offset = "0x85ADA0", VA = "0x85ADA0", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600385D")]
			[Address(RVA = "0x85AE60", Offset = "0x85AE60", VA = "0x85AE60", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200090A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DB00", Offset = "0x39DB00")]
		private sealed class <GetEnumerator>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002B60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002B61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public JSONClass <>4__this;

			[Token(Token = "0x4002B62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000605")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003862")]
				[Address(RVA = "0x85AA88", Offset = "0x85AA88", VA = "0x85AA88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000606")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003864")]
				[Address(RVA = "0x85AB08", Offset = "0x85AB08", VA = "0x85AB08", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600385E")]
			[Address(RVA = "0x859A5C", Offset = "0x859A5C", VA = "0x859A5C")]
			[DebuggerHidden]
			public <GetEnumerator>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x600385F")]
			[Address(RVA = "0x85A85C", Offset = "0x85A85C", VA = "0x85A85C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003860")]
			[Address(RVA = "0x85A8D8", Offset = "0x85A8D8", VA = "0x85A8D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003861")]
			[Address(RVA = "0x85A874", Offset = "0x85A874", VA = "0x85A874")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6003863")]
			[Address(RVA = "0x85AA90", Offset = "0x85AA90", VA = "0x85AA90", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private Dictionary<string, JSONNode> m_Dict;

		[Token(Token = "0x170003FA")]
		public override JSONNode Item
		{
			[Token(Token = "0x60029F7")]
			[Address(RVA = "0x859048", Offset = "0x859048", VA = "0x859048", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x60029F8")]
			[Address(RVA = "0x859148", Offset = "0x859148", VA = "0x859148", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170003FB")]
		public override JSONNode Item
		{
			[Token(Token = "0x60029F9")]
			[Address(RVA = "0x859220", Offset = "0x859220", VA = "0x859220", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x60029FA")]
			[Address(RVA = "0x8592D4", Offset = "0x8592D4", VA = "0x8592D4", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170003FC")]
		public override int Count
		{
			[Token(Token = "0x60029FB")]
			[Address(RVA = "0x8593B4", Offset = "0x8593B4", VA = "0x8593B4", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003FD")]
		public override IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x6002A00")]
			[Address(RVA = "0x859924", Offset = "0x859924", VA = "0x859924", Slot = "16")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AD7FC", Offset = "0x3AD7FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029FC")]
		[Address(RVA = "0x859420", Offset = "0x859420", VA = "0x859420", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x60029FD")]
		[Address(RVA = "0x85959C", Offset = "0x85959C", VA = "0x85959C", Slot = "13")]
		public override JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x60029FE")]
		[Address(RVA = "0x85967C", Offset = "0x85967C", VA = "0x85967C", Slot = "14")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x60029FF")]
		[Address(RVA = "0x85975C", Offset = "0x85975C", VA = "0x85975C", Slot = "15")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6002A01")]
		[Address(RVA = "0x8599DC", Offset = "0x8599DC", VA = "0x8599DC", Slot = "29")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3AD86C", Offset = "0x3AD86C")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002A02")]
		[Address(RVA = "0x859A7C", Offset = "0x859A7C", VA = "0x859A7C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002A03")]
		[Address(RVA = "0x859FDC", Offset = "0x859FDC", VA = "0x859FDC", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6002A04")]
		[Address(RVA = "0x85A434", Offset = "0x85A434", VA = "0x85A434", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6002A05")]
		[Address(RVA = "0x85A650", Offset = "0x85A650", VA = "0x85A650")]
		public JSONClass()
		{
		}
	}
	[Token(Token = "0x2000593")]
	public class JSONData : JSONNode
	{
		[Token(Token = "0x4002258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private string m_Data;

		[Token(Token = "0x170003FE")]
		public override string Value
		{
			[Token(Token = "0x6002A06")]
			[Address(RVA = "0x85AE64", Offset = "0x85AE64", VA = "0x85AE64", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002A07")]
			[Address(RVA = "0x85AE6C", Offset = "0x85AE6C", VA = "0x85AE6C", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x6002A08")]
		[Address(RVA = "0x85AE74", Offset = "0x85AE74", VA = "0x85AE74")]
		public JSONData(string aData)
		{
		}

		[Token(Token = "0x6002A09")]
		[Address(RVA = "0x85AE94", Offset = "0x85AE94", VA = "0x85AE94")]
		public JSONData(float aData)
		{
		}

		[Token(Token = "0x6002A0A")]
		[Address(RVA = "0x85AEC8", Offset = "0x85AEC8", VA = "0x85AEC8")]
		public JSONData(double aData)
		{
		}

		[Token(Token = "0x6002A0B")]
		[Address(RVA = "0x85AF10", Offset = "0x85AF10", VA = "0x85AF10")]
		public JSONData(bool aData)
		{
		}

		[Token(Token = "0x6002A0C")]
		[Address(RVA = "0x85AF44", Offset = "0x85AF44", VA = "0x85AF44")]
		public JSONData(int aData)
		{
		}

		[Token(Token = "0x6002A0D")]
		[Address(RVA = "0x85AF78", Offset = "0x85AF78", VA = "0x85AF78", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002A0E")]
		[Address(RVA = "0x85AFE4", Offset = "0x85AFE4", VA = "0x85AFE4", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6002A0F")]
		[Address(RVA = "0x85B050", Offset = "0x85B050", VA = "0x85B050", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}
	}
	[Token(Token = "0x2000594")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x39B0E0", Offset = "0x39B0E0")]
	internal class JSONLazyCreator : JSONNode
	{
		[Token(Token = "0x4002259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private JSONNode m_Node;

		[Token(Token = "0x400225A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private string m_Key;

		[Token(Token = "0x170003FF")]
		public override JSONNode Item
		{
			[Token(Token = "0x6002A13")]
			[Address(RVA = "0x85B424", Offset = "0x85B424", VA = "0x85B424", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002A14")]
			[Address(RVA = "0x85B498", Offset = "0x85B498", VA = "0x85B498", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000400")]
		public override JSONNode Item
		{
			[Token(Token = "0x6002A15")]
			[Address(RVA = "0x85B52C", Offset = "0x85B52C", VA = "0x85B52C", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002A16")]
			[Address(RVA = "0x85B5A0", Offset = "0x85B5A0", VA = "0x85B5A0", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000401")]
		public override int AsInt
		{
			[Token(Token = "0x6002A1F")]
			[Address(RVA = "0x85B86C", Offset = "0x85B86C", VA = "0x85B86C", Slot = "18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002A20")]
			[Address(RVA = "0x85B8F8", Offset = "0x85B8F8", VA = "0x85B8F8", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x17000402")]
		public override float AsFloat
		{
			[Token(Token = "0x6002A21")]
			[Address(RVA = "0x85B984", Offset = "0x85B984", VA = "0x85B984", Slot = "20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A22")]
			[Address(RVA = "0x85BA10", Offset = "0x85BA10", VA = "0x85BA10", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x17000403")]
		public override double AsDouble
		{
			[Token(Token = "0x6002A23")]
			[Address(RVA = "0x85BA9C", Offset = "0x85BA9C", VA = "0x85BA9C", Slot = "22")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6002A24")]
			[Address(RVA = "0x85BB44", Offset = "0x85BB44", VA = "0x85BB44", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x17000404")]
		public override bool AsBool
		{
			[Token(Token = "0x6002A25")]
			[Address(RVA = "0x85BBE4", Offset = "0x85BBE4", VA = "0x85BBE4", Slot = "24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002A26")]
			[Address(RVA = "0x85BC70", Offset = "0x85BC70", VA = "0x85BC70", Slot = "25")]
			set
			{
			}
		}

		[Token(Token = "0x17000405")]
		public override JSONArray AsArray
		{
			[Token(Token = "0x6002A27")]
			[Address(RVA = "0x85BCFC", Offset = "0x85BCFC", VA = "0x85BCFC", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000406")]
		public override JSONClass AsObject
		{
			[Token(Token = "0x6002A28")]
			[Address(RVA = "0x85BD6C", Offset = "0x85BD6C", VA = "0x85BD6C", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A10")]
		[Address(RVA = "0x857F94", Offset = "0x857F94", VA = "0x857F94")]
		public JSONLazyCreator(JSONNode aNode)
		{
		}

		[Token(Token = "0x6002A11")]
		[Address(RVA = "0x859120", Offset = "0x859120", VA = "0x859120")]
		public JSONLazyCreator(JSONNode aNode, string aKey)
		{
		}

		[Token(Token = "0x6002A12")]
		[Address(RVA = "0x85B3A8", Offset = "0x85B3A8", VA = "0x85B3A8")]
		private void Set(JSONNode aVal)
		{
		}

		[Token(Token = "0x6002A17")]
		[Address(RVA = "0x85B63C", Offset = "0x85B63C", VA = "0x85B63C", Slot = "12")]
		public override void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6002A18")]
		[Address(RVA = "0x85B6D0", Offset = "0x85B6D0", VA = "0x85B6D0", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6002A19")]
		[Address(RVA = "0x85B76C", Offset = "0x85B76C", VA = "0x85B76C")]
		public static bool operator ==(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A1A")]
		[Address(RVA = "0x85B788", Offset = "0x85B788", VA = "0x85B788")]
		public static bool operator !=(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A1B")]
		[Address(RVA = "0x85B7A0", Offset = "0x85B7A0", VA = "0x85B7A0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A1C")]
		[Address(RVA = "0x85B7BC", Offset = "0x85B7BC", VA = "0x85B7BC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6002A1D")]
		[Address(RVA = "0x85B7CC", Offset = "0x85B7CC", VA = "0x85B7CC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002A1E")]
		[Address(RVA = "0x85B81C", Offset = "0x85B81C", VA = "0x85B81C", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}
	}
	[Token(Token = "0x2000595")]
	public static class JSON
	{
		[Token(Token = "0x6002A29")]
		[Address(RVA = "0x8576B4", Offset = "0x8576B4", VA = "0x8576B4")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}
	}
}
namespace Google2u
{
	[Serializable]
	[Token(Token = "0x2000596")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x39B114", Offset = "0x39B114")]
	public class CoopEndlessWavesRow : IGoogle2uRow
	{
		[Token(Token = "0x400225B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int _WaveIndex;

		[Token(Token = "0x400225C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public List<int> _PlayerUnitCountByType;

		[Token(Token = "0x400225D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<int> _PlayerUnitTypes;

		[Token(Token = "0x400225E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int _PlayerBlocksCount;

		[Token(Token = "0x400225F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int _PlayerBlockSpawner;

		[Token(Token = "0x4002260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public List<int> _EnemyCountByType;

		[Token(Token = "0x4002261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<int> _EnemyTypes;

		[Token(Token = "0x4002262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float _EnemyHealthModifier;

		[Token(Token = "0x17000407")]
		public int Length
		{
			[Token(Token = "0x6002A2B")]
			[Address(RVA = "0x69EAE8", Offset = "0x69EAE8", VA = "0x69EAE8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000408")]
		public string Item
		{
			[Token(Token = "0x6002A2C")]
			[Address(RVA = "0x69EAF0", Offset = "0x69EAF0", VA = "0x69EAF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A2A")]
		[Address(RVA = "0x69D730", Offset = "0x69D730", VA = "0x69D730")]
		public CoopEndlessWavesRow(string __GOOGLEFU_ID, string __WaveIndex, string __PlayerUnitCountByType, string __PlayerUnitTypes, string __PlayerBlocksCount, string __PlayerBlockSpawner, string __EnemyCountByType, string __EnemyTypes, string __EnemyHealthModifier)
		{
		}

		[Token(Token = "0x6002A2D")]
		[Address(RVA = "0x69EAF4", Offset = "0x69EAF4", VA = "0x69EAF4")]
		public string GetStringDataByIndex(int index)
		{
			return null;
		}

		[Token(Token = "0x6002A2E")]
		[Address(RVA = "0x69EBF8", Offset = "0x69EBF8", VA = "0x69EBF8", Slot = "4")]
		public string GetStringData(string colID)
		{
			return null;
		}

		[Token(Token = "0x6002A2F")]
		[Address(RVA = "0x69EE90", Offset = "0x69EE90", VA = "0x69EE90", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000597")]
	public sealed class CoopEndlessWaves : IGoogle2uDB
	{
		[Token(Token = "0x200090B")]
		public enum rowIds
		{
			[Token(Token = "0x4002B64")]
			ID1,
			[Token(Token = "0x4002B65")]
			ID2,
			[Token(Token = "0x4002B66")]
			ID3,
			[Token(Token = "0x4002B67")]
			ID4,
			[Token(Token = "0x4002B68")]
			ID5,
			[Token(Token = "0x4002B69")]
			ID6,
			[Token(Token = "0x4002B6A")]
			ID7,
			[Token(Token = "0x4002B6B")]
			ID8,
			[Token(Token = "0x4002B6C")]
			ID9,
			[Token(Token = "0x4002B6D")]
			ID10,
			[Token(Token = "0x4002B6E")]
			ID11,
			[Token(Token = "0x4002B6F")]
			ID12,
			[Token(Token = "0x4002B70")]
			ID13,
			[Token(Token = "0x4002B71")]
			ID14,
			[Token(Token = "0x4002B72")]
			ID15,
			[Token(Token = "0x4002B73")]
			ID16,
			[Token(Token = "0x4002B74")]
			ID17,
			[Token(Token = "0x4002B75")]
			ID18,
			[Token(Token = "0x4002B76")]
			ID19,
			[Token(Token = "0x4002B77")]
			ID20,
			[Token(Token = "0x4002B78")]
			ID21,
			[Token(Token = "0x4002B79")]
			ID22,
			[Token(Token = "0x4002B7A")]
			ID23,
			[Token(Token = "0x4002B7B")]
			ID24,
			[Token(Token = "0x4002B7C")]
			ID25,
			[Token(Token = "0x4002B7D")]
			ID26,
			[Token(Token = "0x4002B7E")]
			ID27,
			[Token(Token = "0x4002B7F")]
			ID28,
			[Token(Token = "0x4002B80")]
			ID29,
			[Token(Token = "0x4002B81")]
			ID30,
			[Token(Token = "0x4002B82")]
			ID31,
			[Token(Token = "0x4002B83")]
			ID32,
			[Token(Token = "0x4002B84")]
			ID33,
			[Token(Token = "0x4002B85")]
			ID34,
			[Token(Token = "0x4002B86")]
			ID35,
			[Token(Token = "0x4002B87")]
			ID36,
			[Token(Token = "0x4002B88")]
			ID37,
			[Token(Token = "0x4002B89")]
			ID38,
			[Token(Token = "0x4002B8A")]
			ID39,
			[Token(Token = "0x4002B8B")]
			ID40,
			[Token(Token = "0x4002B8C")]
			ID41,
			[Token(Token = "0x4002B8D")]
			ID42,
			[Token(Token = "0x4002B8E")]
			ID43,
			[Token(Token = "0x4002B8F")]
			ID44,
			[Token(Token = "0x4002B90")]
			ID45,
			[Token(Token = "0x4002B91")]
			ID46,
			[Token(Token = "0x4002B92")]
			ID47,
			[Token(Token = "0x4002B93")]
			ID48,
			[Token(Token = "0x4002B94")]
			ID49,
			[Token(Token = "0x4002B95")]
			ID50,
			[Token(Token = "0x4002B96")]
			ID51,
			[Token(Token = "0x4002B97")]
			ID52,
			[Token(Token = "0x4002B98")]
			ID53,
			[Token(Token = "0x4002B99")]
			ID54,
			[Token(Token = "0x4002B9A")]
			ID55,
			[Token(Token = "0x4002B9B")]
			ID56,
			[Token(Token = "0x4002B9C")]
			ID57,
			[Token(Token = "0x4002B9D")]
			ID58,
			[Token(Token = "0x4002B9E")]
			ID59,
			[Token(Token = "0x4002B9F")]
			ID60
		}

		[Token(Token = "0x200090C")]
		private class NestedCoopEndlessWaves
		{
			[Token(Token = "0x4002BA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly CoopEndlessWaves instance;

			[Token(Token = "0x6003865")]
			[Address(RVA = "0x69EA6C", Offset = "0x69EA6C", VA = "0x69EA6C")]
			static NestedCoopEndlessWaves()
			{
			}

			[Token(Token = "0x6003866")]
			[Address(RVA = "0x69EAE0", Offset = "0x69EAE0", VA = "0x69EAE0")]
			public NestedCoopEndlessWaves()
			{
			}
		}

		[Token(Token = "0x4002263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string[] rowNames;

		[Token(Token = "0x4002264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public List<CoopEndlessWavesRow> Rows;

		[Token(Token = "0x17000409")]
		public static CoopEndlessWaves Instance
		{
			[Token(Token = "0x6002A30")]
			[Address(RVA = "0x699AE8", Offset = "0x699AE8", VA = "0x699AE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A31")]
		[Address(RVA = "0x699B60", Offset = "0x699B60", VA = "0x699B60")]
		private CoopEndlessWaves()
		{
		}

		[Token(Token = "0x6002A32")]
		[Address(RVA = "0x69E29C", Offset = "0x69E29C", VA = "0x69E29C", Slot = "4")]
		public IGoogle2uRow GetGenRow(string in_RowString)
		{
			return null;
		}

		[Token(Token = "0x6002A33")]
		[Address(RVA = "0x69E4E0", Offset = "0x69E4E0", VA = "0x69E4E0")]
		public IGoogle2uRow GetGenRow(rowIds in_RowID)
		{
			return null;
		}

		[Token(Token = "0x6002A34")]
		[Address(RVA = "0x69E684", Offset = "0x69E684", VA = "0x69E684")]
		public CoopEndlessWavesRow GetRow(rowIds in_RowID)
		{
			return null;
		}

		[Token(Token = "0x6002A35")]
		[Address(RVA = "0x69E828", Offset = "0x69E828", VA = "0x69E828")]
		public CoopEndlessWavesRow GetRow(string in_RowString)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000598")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x39B148", Offset = "0x39B148")]
	public class EndlessWavesRow : IGoogle2uRow
	{
		[Token(Token = "0x4002265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int _WaveIndex;

		[Token(Token = "0x4002266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public List<int> _PlayerUnitCountByType;

		[Token(Token = "0x4002267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<int> _PlayerUnitTypes;

		[Token(Token = "0x4002268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int _PlayerBlocksCount;

		[Token(Token = "0x4002269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int _PlayerBlockSpawner;

		[Token(Token = "0x400226A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public List<int> _EnemyCountByType;

		[Token(Token = "0x400226B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<int> _EnemyTypes;

		[Token(Token = "0x400226C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float _EnemyHealthModifier;

		[Token(Token = "0x1700040A")]
		public int Length
		{
			[Token(Token = "0x6002A37")]
			[Address(RVA = "0x6A36DC", Offset = "0x6A36DC", VA = "0x6A36DC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700040B")]
		public string Item
		{
			[Token(Token = "0x6002A38")]
			[Address(RVA = "0x6A36E4", Offset = "0x6A36E4", VA = "0x6A36E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A36")]
		[Address(RVA = "0x6A2324", Offset = "0x6A2324", VA = "0x6A2324")]
		public EndlessWavesRow(string __GOOGLEFU_ID, string __WaveIndex, string __PlayerUnitCountByType, string __PlayerUnitTypes, string __PlayerBlocksCount, string __PlayerBlockSpawner, string __EnemyCountByType, string __EnemyTypes, string __EnemyHealthModifier)
		{
		}

		[Token(Token = "0x6002A39")]
		[Address(RVA = "0x6A36E8", Offset = "0x6A36E8", VA = "0x6A36E8")]
		public string GetStringDataByIndex(int index)
		{
			return null;
		}

		[Token(Token = "0x6002A3A")]
		[Address(RVA = "0x6A37EC", Offset = "0x6A37EC", VA = "0x6A37EC", Slot = "4")]
		public string GetStringData(string colID)
		{
			return null;
		}

		[Token(Token = "0x6002A3B")]
		[Address(RVA = "0x6A3A84", Offset = "0x6A3A84", VA = "0x6A3A84", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000599")]
	public sealed class EndlessWaves : IGoogle2uDB
	{
		[Token(Token = "0x200090D")]
		public enum rowIds
		{
			[Token(Token = "0x4002BA2")]
			ID1,
			[Token(Token = "0x4002BA3")]
			ID2,
			[Token(Token = "0x4002BA4")]
			ID3,
			[Token(Token = "0x4002BA5")]
			ID4,
			[Token(Token = "0x4002BA6")]
			ID5,
			[Token(Token = "0x4002BA7")]
			ID6,
			[Token(Token = "0x4002BA8")]
			ID7,
			[Token(Token = "0x4002BA9")]
			ID8,
			[Token(Token = "0x4002BAA")]
			ID9,
			[Token(Token = "0x4002BAB")]
			ID10,
			[Token(Token = "0x4002BAC")]
			ID11,
			[Token(Token = "0x4002BAD")]
			ID12,
			[Token(Token = "0x4002BAE")]
			ID13,
			[Token(Token = "0x4002BAF")]
			ID14,
			[Token(Token = "0x4002BB0")]
			ID15,
			[Token(Token = "0x4002BB1")]
			ID16,
			[Token(Token = "0x4002BB2")]
			ID17,
			[Token(Token = "0x4002BB3")]
			ID18,
			[Token(Token = "0x4002BB4")]
			ID19,
			[Token(Token = "0x4002BB5")]
			ID20,
			[Token(Token = "0x4002BB6")]
			ID21,
			[Token(Token = "0x4002BB7")]
			ID22,
			[Token(Token = "0x4002BB8")]
			ID23,
			[Token(Token = "0x4002BB9")]
			ID24,
			[Token(Token = "0x4002BBA")]
			ID25,
			[Token(Token = "0x4002BBB")]
			ID26,
			[Token(Token = "0x4002BBC")]
			ID27,
			[Token(Token = "0x4002BBD")]
			ID28,
			[Token(Token = "0x4002BBE")]
			ID29,
			[Token(Token = "0x4002BBF")]
			ID30,
			[Token(Token = "0x4002BC0")]
			ID31,
			[Token(Token = "0x4002BC1")]
			ID32,
			[Token(Token = "0x4002BC2")]
			ID33,
			[Token(Token = "0x4002BC3")]
			ID34,
			[Token(Token = "0x4002BC4")]
			ID35,
			[Token(Token = "0x4002BC5")]
			ID36,
			[Token(Token = "0x4002BC6")]
			ID37,
			[Token(Token = "0x4002BC7")]
			ID38,
			[Token(Token = "0x4002BC8")]
			ID39,
			[Token(Token = "0x4002BC9")]
			ID40,
			[Token(Token = "0x4002BCA")]
			ID41,
			[Token(Token = "0x4002BCB")]
			ID42,
			[Token(Token = "0x4002BCC")]
			ID43,
			[Token(Token = "0x4002BCD")]
			ID44,
			[Token(Token = "0x4002BCE")]
			ID45,
			[Token(Token = "0x4002BCF")]
			ID46,
			[Token(Token = "0x4002BD0")]
			ID47,
			[Token(Token = "0x4002BD1")]
			ID48,
			[Token(Token = "0x4002BD2")]
			ID49,
			[Token(Token = "0x4002BD3")]
			ID50
		}

		[Token(Token = "0x200090E")]
		private class NestedEndlessWaves
		{
			[Token(Token = "0x4002BD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly EndlessWaves instance;

			[Token(Token = "0x6003867")]
			[Address(RVA = "0x6A3660", Offset = "0x6A3660", VA = "0x6A3660")]
			static NestedEndlessWaves()
			{
			}

			[Token(Token = "0x6003868")]
			[Address(RVA = "0x6A36D4", Offset = "0x6A36D4", VA = "0x6A36D4")]
			public NestedEndlessWaves()
			{
			}
		}

		[Token(Token = "0x400226D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string[] rowNames;

		[Token(Token = "0x400226E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public List<EndlessWavesRow> Rows;

		[Token(Token = "0x1700040C")]
		public static EndlessWaves Instance
		{
			[Token(Token = "0x6002A3C")]
			[Address(RVA = "0x69F108", Offset = "0x69F108", VA = "0x69F108")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A3D")]
		[Address(RVA = "0x69F180", Offset = "0x69F180", VA = "0x69F180")]
		private EndlessWaves()
		{
		}

		[Token(Token = "0x6002A3E")]
		[Address(RVA = "0x6A2E90", Offset = "0x6A2E90", VA = "0x6A2E90", Slot = "4")]
		public IGoogle2uRow GetGenRow(string in_RowString)
		{
			return null;
		}

		[Token(Token = "0x6002A3F")]
		[Address(RVA = "0x6A30D4", Offset = "0x6A30D4", VA = "0x6A30D4")]
		public IGoogle2uRow GetGenRow(rowIds in_RowID)
		{
			return null;
		}

		[Token(Token = "0x6002A40")]
		[Address(RVA = "0x6A3278", Offset = "0x6A3278", VA = "0x6A3278")]
		public EndlessWavesRow GetRow(rowIds in_RowID)
		{
			return null;
		}

		[Token(Token = "0x6002A41")]
		[Address(RVA = "0x6A341C", Offset = "0x6A341C", VA = "0x6A341C")]
		public EndlessWavesRow GetRow(string in_RowString)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200059A")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x39B17C", Offset = "0x39B17C")]
	public class FortressWavesRow : IGoogle2uRow
	{
		[Token(Token = "0x400226F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int _WaveIndex;

		[Token(Token = "0x4002270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public List<int> _PlayerUnitCountByType;

		[Token(Token = "0x4002271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<int> _PlayerUnitTypes;

		[Token(Token = "0x4002272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int _PlayerBlocksCount;

		[Token(Token = "0x4002273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int _PlayerBlockSpawner;

		[Token(Token = "0x4002274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public List<int> _EnemyCountByType;

		[Token(Token = "0x4002275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<int> _EnemyTypes;

		[Token(Token = "0x4002276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float _EnemyHealthModifier;

		[Token(Token = "0x1700040D")]
		public int Length
		{
			[Token(Token = "0x6002A43")]
			[Address(RVA = "0x6A7428", Offset = "0x6A7428", VA = "0x6A7428")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700040E")]
		public string Item
		{
			[Token(Token = "0x6002A44")]
			[Address(RVA = "0x6A7430", Offset = "0x6A7430", VA = "0x6A7430")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A42")]
		[Address(RVA = "0x6A6070", Offset = "0x6A6070", VA = "0x6A6070")]
		public FortressWavesRow(string __GOOGLEFU_ID, string __WaveIndex, string __PlayerUnitCountByType, string __PlayerUnitTypes, string __PlayerBlocksCount, string __PlayerBlockSpawner, string __EnemyCountByType, string __EnemyTypes, string __EnemyHealthModifier)
		{
		}

		[Token(Token = "0x6002A45")]
		[Address(RVA = "0x6A7434", Offset = "0x6A7434", VA = "0x6A7434")]
		public string GetStringDataByIndex(int index)
		{
			return null;
		}

		[Token(Token = "0x6002A46")]
		[Address(RVA = "0x6A7538", Offset = "0x6A7538", VA = "0x6A7538", Slot = "4")]
		public string GetStringData(string colID)
		{
			return null;
		}

		[Token(Token = "0x6002A47")]
		[Address(RVA = "0x6A77D0", Offset = "0x6A77D0", VA = "0x6A77D0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200059B")]
	public sealed class FortressWaves : IGoogle2uDB
	{
		[Token(Token = "0x200090F")]
		public enum rowIds
		{
			[Token(Token = "0x4002BD6")]
			ID1,
			[Token(Token = "0x4002BD7")]
			ID2,
			[Token(Token = "0x4002BD8")]
			ID3,
			[Token(Token = "0x4002BD9")]
			ID4,
			[Token(Token = "0x4002BDA")]
			ID5,
			[Token(Token = "0x4002BDB")]
			ID6,
			[Token(Token = "0x4002BDC")]
			ID7,
			[Token(Token = "0x4002BDD")]
			ID8,
			[Token(Token = "0x4002BDE")]
			ID9,
			[Token(Token = "0x4002BDF")]
			ID10,
			[Token(Token = "0x4002BE0")]
			ID11,
			[Token(Token = "0x4002BE1")]
			ID12,
			[Token(Token = "0x4002BE2")]
			ID13,
			[Token(Token = "0x4002BE3")]
			ID14,
			[Token(Token = "0x4002BE4")]
			ID15,
			[Token(Token = "0x4002BE5")]
			ID16,
			[Token(Token = "0x4002BE6")]
			ID17,
			[Token(Token = "0x4002BE7")]
			ID18,
			[Token(Token = "0x4002BE8")]
			ID19,
			[Token(Token = "0x4002BE9")]
			ID20,
			[Token(Token = "0x4002BEA")]
			ID21,
			[Token(Token = "0x4002BEB")]
			ID22,
			[Token(Token = "0x4002BEC")]
			ID23,
			[Token(Token = "0x4002BED")]
			ID24,
			[Token(Token = "0x4002BEE")]
			ID25,
			[Token(Token = "0x4002BEF")]
			ID26,
			[Token(Token = "0x4002BF0")]
			ID27,
			[Token(Token = "0x4002BF1")]
			ID28,
			[Token(Token = "0x4002BF2")]
			ID29,
			[Token(Token = "0x4002BF3")]
			ID30
		}

		[Token(Token = "0x2000910")]
		private class NestedFortressWaves
		{
			[Token(Token = "0x4002BF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly FortressWaves instance;

			[Token(Token = "0x6003869")]
			[Address(RVA = "0x6A73AC", Offset = "0x6A73AC", VA = "0x6A73AC")]
			static NestedFortressWaves()
			{
			}

			[Token(Token = "0x600386A")]
			[Address(RVA = "0x6A7420", Offset = "0x6A7420", VA = "0x6A7420")]
			public NestedFortressWaves()
			{
			}
		}

		[Token(Token = "0x4002277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string[] rowNames;

		[Token(Token = "0x4002278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public List<FortressWavesRow> Rows;

		[Token(Token = "0x1700040F")]
		public static FortressWaves Instance
		{
			[Token(Token = "0x6002A48")]
			[Address(RVA = "0x6A3CFC", Offset = "0x6A3CFC", VA = "0x6A3CFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A49")]
		[Address(RVA = "0x6A3D74", Offset = "0x6A3D74", VA = "0x6A3D74")]
		private FortressWaves()
		{
		}

		[Token(Token = "0x6002A4A")]
		[Address(RVA = "0x6A6BDC", Offset = "0x6A6BDC", VA = "0x6A6BDC", Slot = "4")]
		public IGoogle2uRow GetGenRow(string in_RowString)
		{
			return null;
		}

		[Token(Token = "0x6002A4B")]
		[Address(RVA = "0x6A6E20", Offset = "0x6A6E20", VA = "0x6A6E20")]
		public IGoogle2uRow GetGenRow(rowIds in_RowID)
		{
			return null;
		}

		[Token(Token = "0x6002A4C")]
		[Address(RVA = "0x6A6FC4", Offset = "0x6A6FC4", VA = "0x6A6FC4")]
		public FortressWavesRow GetRow(rowIds in_RowID)
		{
			return null;
		}

		[Token(Token = "0x6002A4D")]
		[Address(RVA = "0x6A7168", Offset = "0x6A7168", VA = "0x6A7168")]
		public FortressWavesRow GetRow(string in_RowString)
		{
			return null;
		}
	}
}
namespace DestroyIt
{
	[Token(Token = "0x200059C")]
	public class AutoDamage : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int startAtHitPoints;

		[Token(Token = "0x400227A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float damageIntervalSeconds;

		[Token(Token = "0x400227B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int damagePerInterval;

		[Token(Token = "0x400227C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isInitialized;

		[Token(Token = "0x400227D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Destructible destructible;

		[Token(Token = "0x400227E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool autoDamageStarted;

		[Token(Token = "0x6002A4E")]
		[Address(RVA = "0x7EB6EC", Offset = "0x7EB6EC", VA = "0x7EB6EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6002A4F")]
		[Address(RVA = "0x7EB828", Offset = "0x7EB828", VA = "0x7EB828")]
		private void Update()
		{
		}

		[Token(Token = "0x6002A50")]
		[Address(RVA = "0x7EB924", Offset = "0x7EB924", VA = "0x7EB924")]
		private void ApplyDamage()
		{
		}

		[Token(Token = "0x6002A51")]
		[Address(RVA = "0x7EBB44", Offset = "0x7EBB44", VA = "0x7EBB44")]
		public AutoDamage()
		{
		}
	}
	[Token(Token = "0x200059D")]
	public class ChipAwayDebris : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400227F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float debrisMass;

		[Token(Token = "0x4002280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float debrisDrag;

		[Token(Token = "0x4002281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float debrisAngularDrag;

		[Token(Token = "0x4002282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Renderer rend;

		[Token(Token = "0x6002A52")]
		[Address(RVA = "0x7EC5C0", Offset = "0x7EC5C0", VA = "0x7EC5C0")]
		public void BreakOff(Vector3 force, Vector3 point)
		{
		}

		[Token(Token = "0x6002A53")]
		[Address(RVA = "0x7EC948", Offset = "0x7EC948", VA = "0x7EC948")]
		public void BreakOff(float blastForce, Vector3 explosionPosition, float explosionRadius, float upwardsModifier)
		{
		}

		[Token(Token = "0x6002A54")]
		[Address(RVA = "0x7EC794", Offset = "0x7EC794", VA = "0x7EC794")]
		private bool CheckCanBreakOff()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A55")]
		[Address(RVA = "0x7ECB14", Offset = "0x7ECB14", VA = "0x7ECB14")]
		public ChipAwayDebris()
		{
		}
	}
	[Token(Token = "0x200059E")]
	public class ClingPoint : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int chanceToCling;

		[Token(Token = "0x6002A56")]
		[Address(RVA = "0x7ECB30", Offset = "0x7ECB30", VA = "0x7ECB30")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6002A57")]
		[Address(RVA = "0x7ECD84", Offset = "0x7ECD84", VA = "0x7ECD84")]
		public ClingPoint()
		{
		}
	}
	[Token(Token = "0x200059F")]
	public class DelayedRigidbody : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float mass;

		[Token(Token = "0x4002285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float drag;

		[Token(Token = "0x4002286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float angularDrag;

		[Token(Token = "0x4002287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delaySeconds;

		[Token(Token = "0x4002288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool reenableColliders;

		[Token(Token = "0x6002A58")]
		[Address(RVA = "0x7ECF48", Offset = "0x7ECF48", VA = "0x7ECF48")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6002A59")]
		[Address(RVA = "0x7ECFAC", Offset = "0x7ECFAC", VA = "0x7ECFAC")]
		public void AddRigidbody()
		{
		}

		[Token(Token = "0x6002A5A")]
		[Address(RVA = "0x7ED1F0", Offset = "0x7ED1F0", VA = "0x7ED1F0")]
		public DelayedRigidbody()
		{
		}
	}
	[Token(Token = "0x20005A0")]
	public class DestroyAfter : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float seconds;

		[Token(Token = "0x400228A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float timeLeft;

		[Token(Token = "0x400228B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool isInitialized;

		[Token(Token = "0x6002A5B")]
		[Address(RVA = "0x7ED214", Offset = "0x7ED214", VA = "0x7ED214")]
		private void Start()
		{
		}

		[Token(Token = "0x6002A5C")]
		[Address(RVA = "0x7ED228", Offset = "0x7ED228", VA = "0x7ED228")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002A5D")]
		[Address(RVA = "0x7ED234", Offset = "0x7ED234", VA = "0x7ED234")]
		private void Update()
		{
		}

		[Token(Token = "0x6002A5E")]
		[Address(RVA = "0x7ED300", Offset = "0x7ED300", VA = "0x7ED300")]
		public DestroyAfter()
		{
		}
	}
	[Token(Token = "0x20005A1")]
	[DisallowMultipleComponent]
	public class Destructible : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400228C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[HideInInspector]
		public int totalHitPoints;

		[Token(Token = "0x400228D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public int currentHitPoints;

		[Token(Token = "0x400228E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[HideInInspector]
		public List<DamageLevel> damageLevels;

		[Token(Token = "0x400228F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public GameObject destroyedPrefab;

		[Token(Token = "0x4002290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public GameObject destroyedPrefabParent;

		[Token(Token = "0x4002291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public ParticleSystem fallbackParticle;

		[Token(Token = "0x4002292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public Material fallbackParticleMaterial;

		[Token(Token = "0x4002293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x3A55F8", Offset = "0x3A55F8")]
		public List<DamageEffect> damageEffects;

		[Token(Token = "0x4002294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public float velocityReduction;

		[Token(Token = "0x4002295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public float ignoreCollisionsUnder;

		[Token(Token = "0x4002296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public List<GameObject> unparentOnDestroy;

		[Token(Token = "0x4002297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public bool disableKinematicOnUparentedChildren;

		[Token(Token = "0x4002298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public List<MaterialMapping> replaceMaterials;

		[Token(Token = "0x4002299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public bool canBeDestroyed;

		[Token(Token = "0x400229A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[HideInInspector]
		public bool canBeRepaired;

		[Token(Token = "0x400229B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		[HideInInspector]
		public bool canBeObliterated;

		[Token(Token = "0x400229C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public List<string> debrisToReParentByName;

		[Token(Token = "0x400229D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public bool debrisToReParentIsKinematic;

		[Token(Token = "0x400229E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		public List<string> childrenToReParentByName;

		[Token(Token = "0x400229F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public int destructibleGroupId;

		[Token(Token = "0x40022A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public bool isDebrisChipAway;

		[Token(Token = "0x40022A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public float chipAwayDebrisMass;

		[Token(Token = "0x40022A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		public float chipAwayDebrisDrag;

		[Token(Token = "0x40022A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public float chipAwayDebrisAngularDrag;

		[Token(Token = "0x40022A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[HideInInspector]
		public bool autoPoolDestroyedPrefab;

		[Token(Token = "0x40022A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		[HideInInspector]
		public bool useFallbackParticle;

		[Token(Token = "0x40022A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Vector3 centerPointOverride;

		[Token(Token = "0x40022A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[HideInInspector]
		public bool sinkWhenDestroyed;

		[Token(Token = "0x40022A8")]
		private const float invulnerableTimer = 0.5f;

		[Token(Token = "0x40022A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private DamageLevel currentDamageLevel;

		[Token(Token = "0x40022AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool isObliterated;

		[Token(Token = "0x40022AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		private bool isInitialized;

		[Token(Token = "0x40022AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
		private bool checkForClingingDebris;

		[Token(Token = "0x40022AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7F")]
		private bool useProgressiveDamage;

		[Token(Token = "0x40022AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5780", Offset = "0x3A5780")]
		private bool <IsInvulnerable>k__BackingField;

		[Token(Token = "0x40022AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5790", Offset = "0x3A5790")]
		private Rigidbody <Rigidbody>k__BackingField;

		[Token(Token = "0x40022B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A57A0", Offset = "0x3A57A0")]
		private Rigidbody[] <PooledRigidbodies>k__BackingField;

		[Token(Token = "0x40022B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A57B0", Offset = "0x3A57B0")]
		private GameObject[] <PooledRigidbodyGos>k__BackingField;

		[Token(Token = "0x40022B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A57C0", Offset = "0x3A57C0")]
		private Quaternion <RotationFixedUpdate>k__BackingField;

		[Token(Token = "0x40022B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A57D0", Offset = "0x3A57D0")]
		private Vector3 <PositionFixedUpdate>k__BackingField;

		[Token(Token = "0x40022B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A57E0", Offset = "0x3A57E0")]
		private Vector3 <VelocityFixedUpdate>k__BackingField;

		[Token(Token = "0x40022B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A57F0", Offset = "0x3A57F0")]
		private int <LastRepairedAmount>k__BackingField;

		[Token(Token = "0x40022B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5800", Offset = "0x3A5800")]
		private int <LastDamagedAmount>k__BackingField;

		[Token(Token = "0x40022B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5810", Offset = "0x3A5810")]
		private Vector3 <MeshCenterPoint>k__BackingField;

		[Token(Token = "0x17000410")]
		private bool IsInvulnerable
		{
			[Token(Token = "0x6002A5F")]
			[Address(RVA = "0x7ED308", Offset = "0x7ED308", VA = "0x7ED308")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AD8DC", Offset = "0x3AD8DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002A60")]
			[Address(RVA = "0x7ED310", Offset = "0x7ED310", VA = "0x7ED310")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AD8EC", Offset = "0x3AD8EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000411")]
		private Rigidbody Rigidbody
		{
			[Token(Token = "0x6002A61")]
			[Address(RVA = "0x7ED318", Offset = "0x7ED318", VA = "0x7ED318")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AD8FC", Offset = "0x3AD8FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002A62")]
			[Address(RVA = "0x7ED320", Offset = "0x7ED320", VA = "0x7ED320")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AD90C", Offset = "0x3AD90C")]
			set
			{
			}
		}

		[Token(Token = "0x17000412")]
		public bool UseProgressiveDamage
		{
			[Token(Token = "0x6002A63")]
			[Address(RVA = "0x7ED328", Offset = "0x7ED328", VA = "0x7ED328")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002A64")]
			[Address(RVA = "0x7ED330", Offset = "0x7ED330", VA = "0x7ED330")]
			set
			{
			}
		}

		[Token(Token = "0x17000413")]
		public bool CheckForClingingDebris
		{
			[Token(Token = "0x6002A65")]
			[Address(RVA = "0x7ED338", Offset = "0x7ED338", VA = "0x7ED338")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002A66")]
			[Address(RVA = "0x7ED340", Offset = "0x7ED340", VA = "0x7ED340")]
			set
			{
			}
		}

		[Token(Token = "0x17000414")]
		public Rigidbody[] PooledRigidbodies
		{
			[Token(Token = "0x6002A67")]
			[Address(RVA = "0x7ED348", Offset = "0x7ED348", VA = "0x7ED348")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AD91C", Offset = "0x3AD91C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002A68")]
			[Address(RVA = "0x7ED350", Offset = "0x7ED350", VA = "0x7ED350")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AD92C", Offset = "0x3AD92C")]
			set
			{
			}
		}

		[Token(Token = "0x17000415")]
		public GameObject[] PooledRigidbodyGos
		{
			[Token(Token = "0x6002A69")]
			[Address(RVA = "0x7ED358", Offset = "0x7ED358", VA = "0x7ED358")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AD93C", Offset = "0x3AD93C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002A6A")]
			[Address(RVA = "0x7ED360", Offset = "0x7ED360", VA = "0x7ED360")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AD94C", Offset = "0x3AD94C")]
			set
			{
			}
		}

		[Token(Token = "0x17000416")]
		public float VelocityReduction
		{
			[Token(Token = "0x6002A6B")]
			[Address(RVA = "0x7ED368", Offset = "0x7ED368", VA = "0x7ED368")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000417")]
		public Quaternion RotationFixedUpdate
		{
			[Token(Token = "0x6002A6C")]
			[Address(RVA = "0x7ED3F4", Offset = "0x7ED3F4", VA = "0x7ED3F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AD95C", Offset = "0x3AD95C")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6002A6D")]
			[Address(RVA = "0x7ED404", Offset = "0x7ED404", VA = "0x7ED404")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AD96C", Offset = "0x3AD96C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000418")]
		public Vector3 PositionFixedUpdate
		{
			[Token(Token = "0x6002A6E")]
			[Address(RVA = "0x7ED414", Offset = "0x7ED414", VA = "0x7ED414")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AD97C", Offset = "0x3AD97C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002A6F")]
			[Address(RVA = "0x7ED428", Offset = "0x7ED428", VA = "0x7ED428")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AD98C", Offset = "0x3AD98C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000419")]
		public Vector3 VelocityFixedUpdate
		{
			[Token(Token = "0x6002A70")]
			[Address(RVA = "0x7ED434", Offset = "0x7ED434", VA = "0x7ED434")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AD99C", Offset = "0x3AD99C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002A71")]
			[Address(RVA = "0x7ED448", Offset = "0x7ED448", VA = "0x7ED448")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AD9AC", Offset = "0x3AD9AC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700041A")]
		public int LastRepairedAmount
		{
			[Token(Token = "0x6002A72")]
			[Address(RVA = "0x7ED454", Offset = "0x7ED454", VA = "0x7ED454")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AD9BC", Offset = "0x3AD9BC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002A73")]
			[Address(RVA = "0x7ED45C", Offset = "0x7ED45C", VA = "0x7ED45C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AD9CC", Offset = "0x3AD9CC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700041B")]
		public int LastDamagedAmount
		{
			[Token(Token = "0x6002A74")]
			[Address(RVA = "0x7ED464", Offset = "0x7ED464", VA = "0x7ED464")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AD9DC", Offset = "0x3AD9DC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002A75")]
			[Address(RVA = "0x7ED46C", Offset = "0x7ED46C", VA = "0x7ED46C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AD9EC", Offset = "0x3AD9EC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700041C")]
		public bool IsDestroyed
		{
			[Token(Token = "0x6002A76")]
			[Address(RVA = "0x7ED474", Offset = "0x7ED474", VA = "0x7ED474")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700041D")]
		public Vector3 MeshCenterPoint
		{
			[Token(Token = "0x6002A77")]
			[Address(RVA = "0x7ED4AC", Offset = "0x7ED4AC", VA = "0x7ED4AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3AD9FC", Offset = "0x3AD9FC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002A78")]
			[Address(RVA = "0x7ED4C0", Offset = "0x7ED4C0", VA = "0x7ED4C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADA0C", Offset = "0x3ADA0C")]
			private set
			{
			}
		}

		[Token(Token = "0x14000046")]
		public event Action DamagedEvent
		{
			[Token(Token = "0x6002A79")]
			[Address(RVA = "0x7ED4CC", Offset = "0x7ED4CC", VA = "0x7ED4CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADA1C", Offset = "0x3ADA1C")]
			add
			{
			}
			[Token(Token = "0x6002A7A")]
			[Address(RVA = "0x7ED57C", Offset = "0x7ED57C", VA = "0x7ED57C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADA2C", Offset = "0x3ADA2C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000047")]
		public event Action DestroyedEvent
		{
			[Token(Token = "0x6002A7B")]
			[Address(RVA = "0x7ED62C", Offset = "0x7ED62C", VA = "0x7ED62C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADA3C", Offset = "0x3ADA3C")]
			add
			{
			}
			[Token(Token = "0x6002A7C")]
			[Address(RVA = "0x7ED6DC", Offset = "0x7ED6DC", VA = "0x7ED6DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADA4C", Offset = "0x3ADA4C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000048")]
		public event Action RepairedEvent
		{
			[Token(Token = "0x6002A7D")]
			[Address(RVA = "0x7ED78C", Offset = "0x7ED78C", VA = "0x7ED78C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADA5C", Offset = "0x3ADA5C")]
			add
			{
			}
			[Token(Token = "0x6002A7E")]
			[Address(RVA = "0x7ED83C", Offset = "0x7ED83C", VA = "0x7ED83C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADA6C", Offset = "0x3ADA6C")]
			remove
			{
			}
		}

		[Token(Token = "0x6002A7F")]
		[Address(RVA = "0x7ED8EC", Offset = "0x7ED8EC", VA = "0x7ED8EC")]
		public void Start()
		{
		}

		[Token(Token = "0x6002A80")]
		[Address(RVA = "0x7EEC60", Offset = "0x7EEC60", VA = "0x7EEC60")]
		public void RemoveInvulnerability()
		{
		}

		[Token(Token = "0x6002A81")]
		[Address(RVA = "0x7EEC6C", Offset = "0x7EEC6C", VA = "0x7EEC6C")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x6002A82")]
		[Address(RVA = "0x7EE15C", Offset = "0x7EE15C", VA = "0x7EE15C")]
		private static Vector3 GetMeshCenterPoint(Destructible destructibleObj)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002A83")]
		[Address(RVA = "0x7EB9D0", Offset = "0x7EB9D0", VA = "0x7EB9D0")]
		public void ApplyDamage(int amount)
		{
		}

		[Token(Token = "0x6002A84")]
		[Address(RVA = "0x7EF2E8", Offset = "0x7EF2E8", VA = "0x7EF2E8")]
		public void ApplyDamage(Damage damage)
		{
		}

		[Token(Token = "0x6002A85")]
		[Address(RVA = "0x7EF62C", Offset = "0x7EF62C", VA = "0x7EF62C")]
		public void RepairDamage(int amount)
		{
		}

		[Token(Token = "0x6002A86")]
		[Address(RVA = "0x7EF27C", Offset = "0x7EF27C", VA = "0x7EF27C")]
		private void CheckForObliterate(int damage)
		{
		}

		[Token(Token = "0x6002A87")]
		[Address(RVA = "0x7EEEA0", Offset = "0x7EEEA0", VA = "0x7EEEA0")]
		private void SetDamageLevel()
		{
		}

		[Token(Token = "0x6002A88")]
		[Address(RVA = "0x7EE33C", Offset = "0x7EE33C", VA = "0x7EE33C")]
		private void PlayDamageEffects()
		{
		}

		[Token(Token = "0x6002A89")]
		[Address(RVA = "0x7F09E4", Offset = "0x7F09E4", VA = "0x7F09E4")]
		public void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6002A8A")]
		[Address(RVA = "0x7F1170", Offset = "0x7F1170", VA = "0x7F1170")]
		public void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6002A8B")]
		[Address(RVA = "0x7F1628", Offset = "0x7F1628", VA = "0x7F1628")]
		public void FireDestroyedEvent()
		{
		}

		[Token(Token = "0x6002A8C")]
		[Address(RVA = "0x7EF6B4", Offset = "0x7EF6B4", VA = "0x7EF6B4")]
		public void FireRepairedEvent()
		{
		}

		[Token(Token = "0x6002A8D")]
		[Address(RVA = "0x7EF268", Offset = "0x7EF268", VA = "0x7EF268")]
		public void FireDamagedEvent()
		{
		}

		[Token(Token = "0x6002A8E")]
		[Address(RVA = "0x7F163C", Offset = "0x7F163C", VA = "0x7F163C")]
		public Destructible()
		{
		}
	}
	[Token(Token = "0x20005A2")]
	public class DestructibleParent : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x6002A8F")]
		[Address(RVA = "0x7F1F78", Offset = "0x7F1F78", VA = "0x7F1F78")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6002A90")]
		[Address(RVA = "0x7F21B0", Offset = "0x7F21B0", VA = "0x7F21B0")]
		public DestructibleParent()
		{
		}
	}
	[Token(Token = "0x20005A3")]
	public class DestructionTest : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40022BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int damagePerPress;

		[Token(Token = "0x6002A91")]
		[Address(RVA = "0x7F3F40", Offset = "0x7F3F40", VA = "0x7F3F40")]
		private void Update()
		{
		}

		[Token(Token = "0x6002A92")]
		[Address(RVA = "0x7F4044", Offset = "0x7F4044", VA = "0x7F4044")]
		public DestructionTest()
		{
		}
	}
	[Token(Token = "0x20005A4")]
	public class EnableColliderAfter : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40022BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float seconds;

		[Token(Token = "0x40022BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float timeLeft;

		[Token(Token = "0x40022BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool isInitialized;

		[Token(Token = "0x6002A93")]
		[Address(RVA = "0x7F4064", Offset = "0x7F4064", VA = "0x7F4064")]
		private void Start()
		{
		}

		[Token(Token = "0x6002A94")]
		[Address(RVA = "0x7F4078", Offset = "0x7F4078", VA = "0x7F4078")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002A95")]
		[Address(RVA = "0x7F4084", Offset = "0x7F4084", VA = "0x7F4084")]
		private void Update()
		{
		}

		[Token(Token = "0x6002A96")]
		[Address(RVA = "0x7F41D4", Offset = "0x7F41D4", VA = "0x7F41D4")]
		public EnableColliderAfter()
		{
		}
	}
	[Token(Token = "0x20005A5")]
	public class EnableGravityAfter : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40022BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float seconds;

		[Token(Token = "0x40022C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float timeLeft;

		[Token(Token = "0x40022C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool isInitialized;

		[Token(Token = "0x6002A97")]
		[Address(RVA = "0x7F41DC", Offset = "0x7F41DC", VA = "0x7F41DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6002A98")]
		[Address(RVA = "0x7F41F0", Offset = "0x7F41F0", VA = "0x7F41F0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002A99")]
		[Address(RVA = "0x7F41FC", Offset = "0x7F41FC", VA = "0x7F41FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002A9A")]
		[Address(RVA = "0x7F4338", Offset = "0x7F4338", VA = "0x7F4338")]
		public EnableGravityAfter()
		{
		}
	}
	[Token(Token = "0x20005A6")]
	public class ExplodeAfter : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40022C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A5850", Offset = "0x3A5850")]
		public GameObject explosionPrefab;

		[Token(Token = "0x40022C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A5884", Offset = "0x3A5884")]
		public float seconds;

		[Token(Token = "0x40022C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float timeLeft;

		[Token(Token = "0x40022C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isInitialized;

		[Token(Token = "0x6002A9B")]
		[Address(RVA = "0x7F4340", Offset = "0x7F4340", VA = "0x7F4340")]
		private void Start()
		{
		}

		[Token(Token = "0x6002A9C")]
		[Address(RVA = "0x7F4354", Offset = "0x7F4354", VA = "0x7F4354")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002A9D")]
		[Address(RVA = "0x7F4360", Offset = "0x7F4360", VA = "0x7F4360")]
		private void Update()
		{
		}

		[Token(Token = "0x6002A9E")]
		[Address(RVA = "0x7F44D0", Offset = "0x7F44D0", VA = "0x7F44D0")]
		public ExplodeAfter()
		{
		}
	}
	[Token(Token = "0x20005A7")]
	[DisallowMultipleComponent]
	public class HitEffects : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40022C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public List<HitEffect> effects;

		[Token(Token = "0x6002A9F")]
		[Address(RVA = "0x7F4B98", Offset = "0x7F4B98", VA = "0x7F4B98")]
		public void PlayEffect(HitBy weaponType, Vector3 hitPoint, Vector3 hitNormal)
		{
		}

		[Token(Token = "0x6002AA0")]
		[Address(RVA = "0x7F4D74", Offset = "0x7F4D74", VA = "0x7F4D74")]
		public HitEffects()
		{
		}
	}
	[Token(Token = "0x20005A8")]
	public class PoolAfter : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40022C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float seconds;

		[Token(Token = "0x40022C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool reenableChildren;

		[Token(Token = "0x40022C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool removeWhenPooled;

		[Token(Token = "0x40022CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool resetToPrefab;

		[Token(Token = "0x40022CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float timeLeft;

		[Token(Token = "0x40022CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isInitialized;

		[Token(Token = "0x6002AA1")]
		[Address(RVA = "0x7F79C4", Offset = "0x7F79C4", VA = "0x7F79C4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002AA2")]
		[Address(RVA = "0x7F79D8", Offset = "0x7F79D8", VA = "0x7F79D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002AA3")]
		[Address(RVA = "0x7F79E4", Offset = "0x7F79E4", VA = "0x7F79E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002AA4")]
		[Address(RVA = "0x7F7BF4", Offset = "0x7F7BF4", VA = "0x7F7BF4")]
		public PoolAfter()
		{
		}
	}
	[Token(Token = "0x20005A9")]
	public class ReleaseObject : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40022CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public GameObject objectToRelease;

		[Token(Token = "0x40022CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 angularVelocity;

		[Token(Token = "0x40022CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 forceToAdd;

		[Token(Token = "0x40022D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 velocityLastUpdate;

		[Token(Token = "0x6002AA5")]
		[Address(RVA = "0x7F7C04", Offset = "0x7F7C04", VA = "0x7F7C04")]
		private void Start()
		{
		}

		[Token(Token = "0x6002AA6")]
		[Address(RVA = "0x7F7C94", Offset = "0x7F7C94", VA = "0x7F7C94")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002AA7")]
		[Address(RVA = "0x7F8044", Offset = "0x7F8044", VA = "0x7F8044")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6002AA8")]
		[Address(RVA = "0x7F7E34", Offset = "0x7F7E34", VA = "0x7F7E34")]
		private void Release()
		{
		}

		[Token(Token = "0x6002AA9")]
		[Address(RVA = "0x7F813C", Offset = "0x7F813C", VA = "0x7F813C")]
		public ReleaseObject()
		{
		}
	}
	[Token(Token = "0x20005AA")]
	public class SupportPoint : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40022D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int breakForce;

		[Token(Token = "0x40022D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int breakTorque;

		[Token(Token = "0x40022D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool canSupport;

		[Token(Token = "0x6002AAA")]
		[Address(RVA = "0x7F82E4", Offset = "0x7F82E4", VA = "0x7F82E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002AAB")]
		[Address(RVA = "0x7F8B3C", Offset = "0x7F8B3C", VA = "0x7F8B3C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6002AAC")]
		[Address(RVA = "0x7F8D90", Offset = "0x7F8D90", VA = "0x7F8D90")]
		public SupportPoint()
		{
		}
	}
	[Token(Token = "0x20005AB")]
	public class TagAfter : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40022D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float seconds;

		[Token(Token = "0x40022D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Tag tagWith;

		[Token(Token = "0x40022D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float timeLeft;

		[Token(Token = "0x40022D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isInitialized;

		[Token(Token = "0x6002AAD")]
		[Address(RVA = "0x7F8DAC", Offset = "0x7F8DAC", VA = "0x7F8DAC")]
		private void Start()
		{
		}

		[Token(Token = "0x6002AAE")]
		[Address(RVA = "0x7F8DC0", Offset = "0x7F8DC0", VA = "0x7F8DC0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002AAF")]
		[Address(RVA = "0x7F8DCC", Offset = "0x7F8DCC", VA = "0x7F8DCC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002AB0")]
		[Address(RVA = "0x7F8F20", Offset = "0x7F8F20", VA = "0x7F8F20")]
		public TagAfter()
		{
		}
	}
	[Token(Token = "0x20005AC")]
	[DisallowMultipleComponent]
	public class TagIt : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40022D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public List<Tag> tags;

		[Token(Token = "0x6002AB1")]
		[Address(RVA = "0x7F8F30", Offset = "0x7F8F30", VA = "0x7F8F30")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6002AB2")]
		[Address(RVA = "0x7F8FF8", Offset = "0x7F8FF8", VA = "0x7F8FF8")]
		public TagIt()
		{
		}
	}
	[Token(Token = "0x20005AD")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x39B1E0", Offset = "0x39B1E0")]
	public class WhenDamaged : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40022D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Destructible destObj;

		[Token(Token = "0x6002AB3")]
		[Address(RVA = "0x7F973C", Offset = "0x7F973C", VA = "0x7F973C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002AB4")]
		[Address(RVA = "0x7F9858", Offset = "0x7F9858", VA = "0x7F9858")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002AB5")]
		[Address(RVA = "0x7F98F0", Offset = "0x7F98F0", VA = "0x7F98F0")]
		private void OnDamaged()
		{
		}

		[Token(Token = "0x6002AB6")]
		[Address(RVA = "0x7F99E8", Offset = "0x7F99E8", VA = "0x7F99E8")]
		public WhenDamaged()
		{
		}
	}
	[Token(Token = "0x20005AE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x39B250", Offset = "0x39B250")]
	public class WhenDestroyed : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40022DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Destructible destObj;

		[Token(Token = "0x6002AB7")]
		[Address(RVA = "0x7F99F0", Offset = "0x7F99F0", VA = "0x7F99F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002AB8")]
		[Address(RVA = "0x7F9B0C", Offset = "0x7F9B0C", VA = "0x7F9B0C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002AB9")]
		[Address(RVA = "0x7F9BA4", Offset = "0x7F9BA4", VA = "0x7F9BA4")]
		private void OnDestroyed()
		{
		}

		[Token(Token = "0x6002ABA")]
		[Address(RVA = "0x7F9CD0", Offset = "0x7F9CD0", VA = "0x7F9CD0")]
		public WhenDestroyed()
		{
		}
	}
	[Token(Token = "0x20005AF")]
	public class WhenDestroyedPlaySound : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40022DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public AudioClip clip;

		[Token(Token = "0x40022DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Destructible destObj;

		[Token(Token = "0x6002ABB")]
		[Address(RVA = "0x7F9CD8", Offset = "0x7F9CD8", VA = "0x7F9CD8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002ABC")]
		[Address(RVA = "0x7F9DF4", Offset = "0x7F9DF4", VA = "0x7F9DF4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002ABD")]
		[Address(RVA = "0x7F9E8C", Offset = "0x7F9E8C", VA = "0x7F9E8C")]
		private void OnDestroyed()
		{
		}

		[Token(Token = "0x6002ABE")]
		[Address(RVA = "0x7FA024", Offset = "0x7FA024", VA = "0x7FA024")]
		public WhenDestroyedPlaySound()
		{
		}
	}
	[Token(Token = "0x20005B0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x39B2C0", Offset = "0x39B2C0")]
	public class WhenRepaired : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40022DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Destructible destObj;

		[Token(Token = "0x6002ABF")]
		[Address(RVA = "0x7FA02C", Offset = "0x7FA02C", VA = "0x7FA02C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002AC0")]
		[Address(RVA = "0x7FA148", Offset = "0x7FA148", VA = "0x7FA148")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002AC1")]
		[Address(RVA = "0x7FA1E0", Offset = "0x7FA1E0", VA = "0x7FA1E0")]
		private void OnRepaired()
		{
		}

		[Token(Token = "0x6002AC2")]
		[Address(RVA = "0x7FA2D8", Offset = "0x7FA2D8", VA = "0x7FA2D8")]
		public WhenRepaired()
		{
		}
	}
	[Token(Token = "0x20005B1")]
	public static class ArrayExtensions
	{
		[Token(Token = "0x6002AC3")]
		public static T[] RemoveAllAt<T>(this T[] array, int[] removeIndices)
		{
			return null;
		}
	}
	[Token(Token = "0x20005B2")]
	public static class DestructionExtensions
	{
		[Token(Token = "0x6002AC4")]
		[Address(RVA = "0x7F21B8", Offset = "0x7F21B8", VA = "0x7F21B8")]
		public static void Update(this List<float> models, int withinSeconds)
		{
		}

		[Token(Token = "0x6002AC5")]
		[Address(RVA = "0x7F231C", Offset = "0x7F231C", VA = "0x7F231C")]
		public static void ReleaseClingingDebris(this Destructible destroyedObj)
		{
		}

		[Token(Token = "0x6002AC6")]
		[Address(RVA = "0x7F2580", Offset = "0x7F2580", VA = "0x7F2580")]
		public static void MakeDebrisCling(this GameObject destroyedObj)
		{
		}

		[Token(Token = "0x6002AC7")]
		[Address(RVA = "0x7F0C64", Offset = "0x7F0C64", VA = "0x7F0C64")]
		public static void ProcessDestructibleCollision(this Destructible destructibleObj, Collision collision, Rigidbody collidingRigidbody)
		{
		}

		[Token(Token = "0x6002AC8")]
		[Address(RVA = "0x7EDDC8", Offset = "0x7EDDC8", VA = "0x7EDDC8")]
		public static void CalculateDamageLevels(this List<DamageLevel> damageLevels, int maxHitPoints)
		{
		}

		[Token(Token = "0x6002AC9")]
		[Address(RVA = "0x7EF6C8", Offset = "0x7EF6C8", VA = "0x7EF6C8")]
		public static DamageLevel GetDamageLevel(this List<DamageLevel> damageLevels, int hitPoints)
		{
			return null;
		}
	}
	[Token(Token = "0x20005B3")]
	public static class GameObjectExtensions
	{
		[Token(Token = "0x6002ACA")]
		public static void RemoveAll<T>(this GameObject obj) where T : UnityEngine.Component
		{
		}

		[Token(Token = "0x6002ACB")]
		public static void RemoveAllFromChildren<T>(this GameObject obj) where T : UnityEngine.Component
		{
		}

		[Token(Token = "0x6002ACC")]
		public static void RemoveAllFromChildrenImmediately<T>(this GameObject obj) where T : UnityEngine.Component
		{
		}

		[Token(Token = "0x6002ACD")]
		public static void RemoveComponent<T>(this GameObject obj) where T : UnityEngine.Component
		{
		}

		[Token(Token = "0x6002ACE")]
		[Address(RVA = "0x7F498C", Offset = "0x7F498C", VA = "0x7F498C")]
		public static void TagAllChildren(this GameObject obj, string tag)
		{
		}

		[Token(Token = "0x6002ACF")]
		public static List<T> GetComponentsInChildrenOnly<T>(this GameObject obj) where T : UnityEngine.Component
		{
			return null;
		}

		[Token(Token = "0x6002AD0")]
		public static List<T> GetComponentsInChildrenOnly<T>(this GameObject obj, bool includeInactive) where T : UnityEngine.Component
		{
			return null;
		}

		[Token(Token = "0x6002AD1")]
		public static T[] GetComponentsInImmediateChildren<T>(this GameObject obj) where T : UnityEngine.Component
		{
			return null;
		}

		[Token(Token = "0x6002AD2")]
		[Address(RVA = "0x7F4A58", Offset = "0x7F4A58", VA = "0x7F4A58")]
		public static void AddStiffJoint(this GameObject go, Rigidbody connectedBody, Vector3 anchorPosition, Vector3 axis, float breakForce, float breakTorque)
		{
		}

		[Token(Token = "0x6002AD3")]
		public static bool GetComponents<TOne, TTwo, TThree>(this IEnumerable<GameObject> inputObjs, out List<TOne> compListOne, out List<TTwo> compListTwo, out List<TThree> compListThree)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20005B4")]
	public static class ListExtensions
	{
		[Token(Token = "0x6002AD4")]
		public static void Move<T>(this IList<T> list, int indexToMove, MoveDirection direction)
		{
		}
	}
	[Token(Token = "0x20005B5")]
	public static class StringExtensions
	{
		[Token(Token = "0x6002AD5")]
		[Address(RVA = "0x7F8144", Offset = "0x7F8144", VA = "0x7F8144")]
		public static string SceneFolder(this string scenePath)
		{
			return null;
		}
	}
	[Token(Token = "0x20005B6")]
	public static class TagItExtensions
	{
		[Token(Token = "0x6002AD6")]
		[Address(RVA = "0x7EF7F0", Offset = "0x7EF7F0", VA = "0x7EF7F0")]
		public static bool HasTag(this GameObject go, params Tag[] searchTags)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AD7")]
		[Address(RVA = "0x7F6958", Offset = "0x7F6958", VA = "0x7F6958")]
		public static void AddTag(this GameObject go, Tag tag)
		{
		}

		[Token(Token = "0x6002AD8")]
		[Address(RVA = "0x7F9000", Offset = "0x7F9000", VA = "0x7F9000")]
		public static void RemoveTag(this GameObject go, Tag tag)
		{
		}

		[Token(Token = "0x6002AD9")]
		[Address(RVA = "0x7F90EC", Offset = "0x7F90EC", VA = "0x7F90EC")]
		public static GameObject GetHighestParentWithTag(this GameObject go, Tag tag)
		{
			return null;
		}
	}
	[Token(Token = "0x20005B7")]
	public static class Vector3Extensions
	{
		[Token(Token = "0x6002ADA")]
		[Address(RVA = "0x7F9344", Offset = "0x7F9344", VA = "0x7F9344")]
		public static Vector3 LerpByDistance(this Vector3 startPoint, Vector3 endPoint, float distance)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002ADB")]
		[Address(RVA = "0x7F9464", Offset = "0x7F9464", VA = "0x7F9464")]
		public static Vector3 ClosestDirection(this Vector3 vector)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20005B8")]
	public enum Tag
	{
		[Token(Token = "0x40022DF")]
		ClingingDebris = 0,
		[Token(Token = "0x40022E0")]
		ClingPoint = 7,
		[Token(Token = "0x40022E1")]
		Concrete = 1,
		[Token(Token = "0x40022E2")]
		Glass = 2,
		[Token(Token = "0x40022E3")]
		MaterialTransferred = 3,
		[Token(Token = "0x40022E4")]
		Metal = 4,
		[Token(Token = "0x40022E5")]
		Paper = 5,
		[Token(Token = "0x40022E6")]
		Wood = 6,
		[Token(Token = "0x40022E7")]
		Powered = 8,
		[Token(Token = "0x40022E8")]
		Pooled = 9,
		[Token(Token = "0x40022E9")]
		Untagged = 10,
		[Token(Token = "0x40022EA")]
		DestructibleGroup = 11,
		[Token(Token = "0x40022EB")]
		Rubber = 12,
		[Token(Token = "0x40022EC")]
		Stuffing = 13,
		[Token(Token = "0x40022ED")]
		Plastic = 14
	}
	[Token(Token = "0x20005B9")]
	[Flags]
	public enum HitBy
	{
		[Token(Token = "0x40022EF")]
		Bullet = 1,
		[Token(Token = "0x40022F0")]
		Cannonball = 2,
		[Token(Token = "0x40022F1")]
		Axe = 4
	}
	[Token(Token = "0x20005BA")]
	public enum FacingDirection
	{
		[Token(Token = "0x40022F3")]
		None,
		[Token(Token = "0x40022F4")]
		FollowedObject,
		[Token(Token = "0x40022F5")]
		FixedPosition
	}
	[Token(Token = "0x20005BB")]
	public enum WeaponType
	{
		[Token(Token = "0x40022F7")]
		Cannonball,
		[Token(Token = "0x40022F8")]
		Rocket,
		[Token(Token = "0x40022F9")]
		Gun,
		[Token(Token = "0x40022FA")]
		Nuke,
		[Token(Token = "0x40022FB")]
		Melee,
		[Token(Token = "0x40022FC")]
		RepairWrench
	}
	[Token(Token = "0x20005BC")]
	public enum MoveDirection
	{
		[Token(Token = "0x40022FE")]
		Up,
		[Token(Token = "0x40022FF")]
		Down
	}
	[Token(Token = "0x20005BD")]
	public enum DestructionType
	{
		[Token(Token = "0x4002301")]
		ParticleEffect
	}
	[Serializable]
	[Token(Token = "0x20005BE")]
	public class HitEffect
	{
		[Token(Token = "0x4002302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HitBy hitBy;

		[Token(Token = "0x4002303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public GameObject effect;

		[Token(Token = "0x6002ADC")]
		[Address(RVA = "0x7F4B90", Offset = "0x7F4B90", VA = "0x7F4B90")]
		public HitEffect()
		{
		}
	}
	[Token(Token = "0x20005BF")]
	public interface Damage
	{
		[Token(Token = "0x1700041E")]
		int DamageAmount
		{
			[Token(Token = "0x6002ADD")]
			get;
			[Token(Token = "0x6002ADE")]
			set;
		}
	}
	[Serializable]
	[Token(Token = "0x20005C0")]
	public class DamageLevel
	{
		[Token(Token = "0x4002304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int maxHitPoints;

		[Token(Token = "0x4002305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int minHitPoints;

		[Token(Token = "0x4002306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int healthPercent;

		[Token(Token = "0x4002307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool hasError;

		[Token(Token = "0x4002308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int visibleDamageLevel;

		[Token(Token = "0x6002ADF")]
		[Address(RVA = "0x7ECDB4", Offset = "0x7ECDB4", VA = "0x7ECDB4")]
		public DamageLevel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005C1")]
	public class DamageEffect
	{
		[Token(Token = "0x4002309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int TriggeredAt;

		[Token(Token = "0x400230A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 Offset;

		[Token(Token = "0x400230B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 Rotation;

		[Token(Token = "0x400230C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x3A58B8", Offset = "0x3A58B8")]
		public GameObject Prefab;

		[Token(Token = "0x400230D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject GameObject;

		[Token(Token = "0x400230E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool HasStarted;

		[Token(Token = "0x400230F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool HasTagDependency;

		[Token(Token = "0x4002310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Tag TagDependency;

		[Token(Token = "0x4002311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool UnparentOnDestroy;

		[Token(Token = "0x4002312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public bool StopEmittingOnDestroy;

		[Token(Token = "0x4002313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A58EC", Offset = "0x3A58EC")]
		private ParticleSystem[] <ParticleSystems>k__BackingField;

		[Token(Token = "0x1700041F")]
		public ParticleSystem[] ParticleSystems
		{
			[Token(Token = "0x6002AE0")]
			[Address(RVA = "0x7ECD94", Offset = "0x7ECD94", VA = "0x7ECD94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADC0C", Offset = "0x3ADC0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002AE1")]
			[Address(RVA = "0x7ECD9C", Offset = "0x7ECD9C", VA = "0x7ECD9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADC1C", Offset = "0x3ADC1C")]
			set
			{
			}
		}

		[Token(Token = "0x6002AE2")]
		[Address(RVA = "0x7ECDA4", Offset = "0x7ECDA4", VA = "0x7ECDA4")]
		public DamageEffect()
		{
		}
	}
	[Token(Token = "0x20005C2")]
	public class Debris
	{
		[Token(Token = "0x4002314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A58FC", Offset = "0x3A58FC")]
		private Rigidbody <Rigidbody>k__BackingField;

		[Token(Token = "0x4002315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A590C", Offset = "0x3A590C")]
		private GameObject <GameObject>k__BackingField;

		[Token(Token = "0x17000420")]
		public Rigidbody Rigidbody
		{
			[Token(Token = "0x6002AE3")]
			[Address(RVA = "0x7ECDC4", Offset = "0x7ECDC4", VA = "0x7ECDC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADC2C", Offset = "0x3ADC2C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002AE4")]
			[Address(RVA = "0x7ECDCC", Offset = "0x7ECDCC", VA = "0x7ECDCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADC3C", Offset = "0x3ADC3C")]
			set
			{
			}
		}

		[Token(Token = "0x17000421")]
		public GameObject GameObject
		{
			[Token(Token = "0x6002AE5")]
			[Address(RVA = "0x7ECDD4", Offset = "0x7ECDD4", VA = "0x7ECDD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADC4C", Offset = "0x3ADC4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002AE6")]
			[Address(RVA = "0x7ECDDC", Offset = "0x7ECDDC", VA = "0x7ECDDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADC5C", Offset = "0x3ADC5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000422")]
		public bool IsActive
		{
			[Token(Token = "0x6002AE7")]
			[Address(RVA = "0x7ECDE4", Offset = "0x7ECDE4", VA = "0x7ECDE4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002AE8")]
		[Address(RVA = "0x7ECE94", Offset = "0x7ECE94", VA = "0x7ECE94")]
		public void Disable()
		{
		}

		[Token(Token = "0x6002AE9")]
		[Address(RVA = "0x7ECF40", Offset = "0x7ECF40", VA = "0x7ECF40")]
		public Debris()
		{
		}
	}
	[Token(Token = "0x20005C3")]
	public class ExplosiveDamage : Damage
	{
		[Token(Token = "0x4002316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A591C", Offset = "0x3A591C")]
		private float <BlastForce>k__BackingField;

		[Token(Token = "0x4002317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A592C", Offset = "0x3A592C")]
		private Vector3 <Position>k__BackingField;

		[Token(Token = "0x4002318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A593C", Offset = "0x3A593C")]
		private float <Radius>k__BackingField;

		[Token(Token = "0x4002319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A594C", Offset = "0x3A594C")]
		private float <UpwardModifier>k__BackingField;

		[Token(Token = "0x17000423")]
		public float BlastForce
		{
			[Token(Token = "0x6002AEA")]
			[Address(RVA = "0x7F4830", Offset = "0x7F4830", VA = "0x7F4830")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADC6C", Offset = "0x3ADC6C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002AEB")]
			[Address(RVA = "0x7F4838", Offset = "0x7F4838", VA = "0x7F4838")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADC7C", Offset = "0x3ADC7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000424")]
		public Vector3 Position
		{
			[Token(Token = "0x6002AEC")]
			[Address(RVA = "0x7F4840", Offset = "0x7F4840", VA = "0x7F4840")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADC8C", Offset = "0x3ADC8C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002AED")]
			[Address(RVA = "0x7F4854", Offset = "0x7F4854", VA = "0x7F4854")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADC9C", Offset = "0x3ADC9C")]
			set
			{
			}
		}

		[Token(Token = "0x17000425")]
		public float Radius
		{
			[Token(Token = "0x6002AEE")]
			[Address(RVA = "0x7F4860", Offset = "0x7F4860", VA = "0x7F4860")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADCAC", Offset = "0x3ADCAC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002AEF")]
			[Address(RVA = "0x7F4868", Offset = "0x7F4868", VA = "0x7F4868")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADCBC", Offset = "0x3ADCBC")]
			set
			{
			}
		}

		[Token(Token = "0x17000426")]
		public float UpwardModifier
		{
			[Token(Token = "0x6002AF0")]
			[Address(RVA = "0x7F4870", Offset = "0x7F4870", VA = "0x7F4870")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADCCC", Offset = "0x3ADCCC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002AF1")]
			[Address(RVA = "0x7F4878", Offset = "0x7F4878", VA = "0x7F4878")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADCDC", Offset = "0x3ADCDC")]
			set
			{
			}
		}

		[Token(Token = "0x17000427")]
		public int DamageAmount
		{
			[Token(Token = "0x6002AF2")]
			[Address(RVA = "0x7F4880", Offset = "0x7F4880", VA = "0x7F4880", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002AF3")]
			[Address(RVA = "0x7F4908", Offset = "0x7F4908", VA = "0x7F4908", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6002AF4")]
		[Address(RVA = "0x7EF260", Offset = "0x7EF260", VA = "0x7EF260")]
		public ExplosiveDamage()
		{
		}
	}
	[Token(Token = "0x20005C4")]
	public class ImpactDamage : Damage
	{
		[Token(Token = "0x400231A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A595C", Offset = "0x3A595C")]
		private int <DamageAmount>k__BackingField;

		[Token(Token = "0x400231B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A596C", Offset = "0x3A596C")]
		private Rigidbody <ImpactObject>k__BackingField;

		[Token(Token = "0x400231C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A597C", Offset = "0x3A597C")]
		private Vector3 <ImpactObjectVelocityFrom>k__BackingField;

		[Token(Token = "0x400231D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A598C", Offset = "0x3A598C")]
		private float <AdditionalForce>k__BackingField;

		[Token(Token = "0x400231E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A599C", Offset = "0x3A599C")]
		private Vector3 <AdditionalForcePosition>k__BackingField;

		[Token(Token = "0x400231F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A59AC", Offset = "0x3A59AC")]
		private float <AdditionalForceRadius>k__BackingField;

		[Token(Token = "0x17000428")]
		public int DamageAmount
		{
			[Token(Token = "0x6002AF5")]
			[Address(RVA = "0x7F4D7C", Offset = "0x7F4D7C", VA = "0x7F4D7C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADCEC", Offset = "0x3ADCEC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002AF6")]
			[Address(RVA = "0x7F4D84", Offset = "0x7F4D84", VA = "0x7F4D84", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADCFC", Offset = "0x3ADCFC")]
			set
			{
			}
		}

		[Token(Token = "0x17000429")]
		public Rigidbody ImpactObject
		{
			[Token(Token = "0x6002AF7")]
			[Address(RVA = "0x7F4D8C", Offset = "0x7F4D8C", VA = "0x7F4D8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADD0C", Offset = "0x3ADD0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002AF8")]
			[Address(RVA = "0x7F4D94", Offset = "0x7F4D94", VA = "0x7F4D94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADD1C", Offset = "0x3ADD1C")]
			set
			{
			}
		}

		[Token(Token = "0x1700042A")]
		public Vector3 ImpactObjectVelocityFrom
		{
			[Token(Token = "0x6002AF9")]
			[Address(RVA = "0x7F4D9C", Offset = "0x7F4D9C", VA = "0x7F4D9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADD2C", Offset = "0x3ADD2C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002AFA")]
			[Address(RVA = "0x7F4DB0", Offset = "0x7F4DB0", VA = "0x7F4DB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADD3C", Offset = "0x3ADD3C")]
			set
			{
			}
		}

		[Token(Token = "0x1700042B")]
		public Vector3 ImpactObjectVelocityTo
		{
			[Token(Token = "0x6002AFB")]
			[Address(RVA = "0x7F1E34", Offset = "0x7F1E34", VA = "0x7F1E34")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700042C")]
		public float AdditionalForce
		{
			[Token(Token = "0x6002AFC")]
			[Address(RVA = "0x7F4DBC", Offset = "0x7F4DBC", VA = "0x7F4DBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADD4C", Offset = "0x3ADD4C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002AFD")]
			[Address(RVA = "0x7F4DC4", Offset = "0x7F4DC4", VA = "0x7F4DC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADD5C", Offset = "0x3ADD5C")]
			set
			{
			}
		}

		[Token(Token = "0x1700042D")]
		public Vector3 AdditionalForcePosition
		{
			[Token(Token = "0x6002AFE")]
			[Address(RVA = "0x7F4DCC", Offset = "0x7F4DCC", VA = "0x7F4DCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADD6C", Offset = "0x3ADD6C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002AFF")]
			[Address(RVA = "0x7F4DE0", Offset = "0x7F4DE0", VA = "0x7F4DE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADD7C", Offset = "0x3ADD7C")]
			set
			{
			}
		}

		[Token(Token = "0x1700042E")]
		public float AdditionalForceRadius
		{
			[Token(Token = "0x6002B00")]
			[Address(RVA = "0x7F4DEC", Offset = "0x7F4DEC", VA = "0x7F4DEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADD8C", Offset = "0x3ADD8C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B01")]
			[Address(RVA = "0x7F4DF4", Offset = "0x7F4DF4", VA = "0x7F4DF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADD9C", Offset = "0x3ADD9C")]
			set
			{
			}
		}

		[Token(Token = "0x6002B02")]
		[Address(RVA = "0x7F2E40", Offset = "0x7F2E40", VA = "0x7F2E40")]
		public ImpactDamage()
		{
		}
	}
	[Token(Token = "0x20005C5")]
	public class DirectDamage : Damage
	{
		[Token(Token = "0x4002320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A59BC", Offset = "0x3A59BC")]
		private int <DamageAmount>k__BackingField;

		[Token(Token = "0x1700042F")]
		public int DamageAmount
		{
			[Token(Token = "0x6002B03")]
			[Address(RVA = "0x7F4054", Offset = "0x7F4054", VA = "0x7F4054", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADDAC", Offset = "0x3ADDAC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002B04")]
			[Address(RVA = "0x7F405C", Offset = "0x7F405C", VA = "0x7F405C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADDBC", Offset = "0x3ADDBC")]
			set
			{
			}
		}

		[Token(Token = "0x6002B05")]
		[Address(RVA = "0x7EF2E0", Offset = "0x7EF2E0", VA = "0x7EF2E0")]
		public DirectDamage()
		{
		}
	}
	[Token(Token = "0x20005C6")]
	public class ActiveParticle
	{
		[Token(Token = "0x4002321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A59CC", Offset = "0x3A59CC")]
		private GameObject <GameObject>k__BackingField;

		[Token(Token = "0x4002322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A59DC", Offset = "0x3A59DC")]
		private float <InstantiatedTime>k__BackingField;

		[Token(Token = "0x4002323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A59EC", Offset = "0x3A59EC")]
		private int <ParentId>k__BackingField;

		[Token(Token = "0x17000430")]
		public GameObject GameObject
		{
			[Token(Token = "0x6002B06")]
			[Address(RVA = "0x7EB6B4", Offset = "0x7EB6B4", VA = "0x7EB6B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADDCC", Offset = "0x3ADDCC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002B07")]
			[Address(RVA = "0x7EB6BC", Offset = "0x7EB6BC", VA = "0x7EB6BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADDDC", Offset = "0x3ADDDC")]
			set
			{
			}
		}

		[Token(Token = "0x17000431")]
		public float InstantiatedTime
		{
			[Token(Token = "0x6002B08")]
			[Address(RVA = "0x7EB6C4", Offset = "0x7EB6C4", VA = "0x7EB6C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADDEC", Offset = "0x3ADDEC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B09")]
			[Address(RVA = "0x7EB6CC", Offset = "0x7EB6CC", VA = "0x7EB6CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADDFC", Offset = "0x3ADDFC")]
			set
			{
			}
		}

		[Token(Token = "0x17000432")]
		public int ParentId
		{
			[Token(Token = "0x6002B0A")]
			[Address(RVA = "0x7EB6D4", Offset = "0x7EB6D4", VA = "0x7EB6D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADE0C", Offset = "0x3ADE0C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002B0B")]
			[Address(RVA = "0x7EB6DC", Offset = "0x7EB6DC", VA = "0x7EB6DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADE1C", Offset = "0x3ADE1C")]
			set
			{
			}
		}

		[Token(Token = "0x6002B0C")]
		[Address(RVA = "0x7EB6E4", Offset = "0x7EB6E4", VA = "0x7EB6E4")]
		public ActiveParticle()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005C7")]
	public class DamageMaterial
	{
		[Token(Token = "0x4002324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string name;

		[Token(Token = "0x4002325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public List<Material> damageMaterials;

		[Token(Token = "0x6002B0D")]
		[Address(RVA = "0x7ECDBC", Offset = "0x7ECDBC", VA = "0x7ECDBC")]
		public DamageMaterial()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005C8")]
	public class MaterialMapping
	{
		[Token(Token = "0x4002326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Material SourceMaterial;

		[Token(Token = "0x4002327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Material ReplacementMaterial;

		[Token(Token = "0x6002B0E")]
		[Address(RVA = "0x7F4DFC", Offset = "0x7F4DFC", VA = "0x7F4DFC")]
		public MaterialMapping()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005C9")]
	public class PoolEntry
	{
		[Token(Token = "0x4002328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject Prefab;

		[Token(Token = "0x4002329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int Count;

		[Token(Token = "0x400232A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool OnlyPooled;

		[Token(Token = "0x6002B0F")]
		[Address(RVA = "0x7F7BFC", Offset = "0x7F7BFC", VA = "0x7F7BFC")]
		public PoolEntry()
		{
		}
	}
	[Token(Token = "0x20005CA")]
	public static class Check
	{
		[Token(Token = "0x6002B10")]
		[Address(RVA = "0x7EBB64", Offset = "0x7EBB64", VA = "0x7EBB64")]
		public static bool HasNonTriggerCollider(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B11")]
		[Address(RVA = "0x7EBE00", Offset = "0x7EBE00", VA = "0x7EBE00")]
		public static bool HasRenderer(GameObject go, Renderer[] renderers)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B12")]
		[Address(RVA = "0x7EC07C", Offset = "0x7EC07C", VA = "0x7EC07C")]
		public static bool HasMaterial(GameObject go, Renderer[] renderers)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B13")]
		[Address(RVA = "0x7EC244", Offset = "0x7EC244", VA = "0x7EC244")]
		public static bool IsDefaultLargeParticleAssigned()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B14")]
		[Address(RVA = "0x7EC374", Offset = "0x7EC374", VA = "0x7EC374")]
		public static bool IsDefaultSmallParticleAssigned()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B15")]
		[Address(RVA = "0x7EC4A4", Offset = "0x7EC4A4", VA = "0x7EC4A4")]
		public static bool LayerExists(string layerName, bool logMessage)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20005CB")]
	public static class DestructibleHelper
	{
		[Token(Token = "0x2000911")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DB10", Offset = "0x39DB10")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4002BF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Material currentMat;

			[Token(Token = "0x600386B")]
			[Address(RVA = "0x7F1CA4", Offset = "0x7F1CA4", VA = "0x7F1CA4")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x600386C")]
			[Address(RVA = "0x7F1EE0", Offset = "0x7F1EE0", VA = "0x7F1EE0")]
			internal bool <GetNewMaterialsForDestroyedMesh>b__0(MaterialMapping x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002B16")]
		[Address(RVA = "0x7F1690", Offset = "0x7F1690", VA = "0x7F1690")]
		public static void TransferMaterials(Destructible oldObj, GameObject newObj)
		{
		}

		[Token(Token = "0x6002B17")]
		[Address(RVA = "0x7F18DC", Offset = "0x7F18DC", VA = "0x7F18DC")]
		private static Material[] GetNewMaterialsForDestroyedMesh(Renderer destMesh, Destructible destructibleObj)
		{
			return null;
		}

		[Token(Token = "0x6002B18")]
		[Address(RVA = "0x7F1CAC", Offset = "0x7F1CAC", VA = "0x7F1CAC")]
		public static void ReapplyImpactForce(ImpactDamage info, float velocityReduction)
		{
		}

		[Token(Token = "0x6002B19")]
		[Address(RVA = "0x7EDB5C", Offset = "0x7EDB5C", VA = "0x7EDB5C")]
		public static List<DamageLevel> DefaultDamageLevels()
		{
			return null;
		}
	}
	[Token(Token = "0x20005CC")]
	public static class ExplosionHelper
	{
		[Token(Token = "0x6002B1A")]
		[Address(RVA = "0x7F44E4", Offset = "0x7F44E4", VA = "0x7F44E4")]
		public static bool IsExposedToBlast(this GameObject gameObj, ExplosiveDamage explosion)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B1B")]
		[Address(RVA = "0x7F4704", Offset = "0x7F4704", VA = "0x7F4704")]
		public static ExplosiveDamage AdjustEffect(this ExplosiveDamage explosion, float effectAmount)
		{
			return null;
		}

		[Token(Token = "0x6002B1C")]
		public static void ApplyForcesToDebris<T>(GameObject destroyedObj, float velocityReduction, T damageInfo)
		{
		}
	}
	[Token(Token = "0x20005CD")]
	public class DestructionManager : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000912")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DB20", Offset = "0x39DB20")]
		private sealed class <>c
		{
			[Token(Token = "0x4002BF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002BF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static Predicate<Debris> <>9__34_0;

			[Token(Token = "0x600386E")]
			[Address(RVA = "0x7F3F14", Offset = "0x7F3F14", VA = "0x7F3F14")]
			public <>c()
			{
			}

			[Token(Token = "0x600386F")]
			[Address(RVA = "0x7F3F1C", Offset = "0x7F3F1C", VA = "0x7F3F1C")]
			internal bool <Update>b__34_0(Debris x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400232B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A59FC", Offset = "0x3A59FC")]
		public int maxPersistentDebris;

		[Token(Token = "0x400232C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A5A30", Offset = "0x3A5A30")]
		public int destroyedPrefabLimit;

		[Token(Token = "0x400232D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A5A64", Offset = "0x3A5A64")]
		public int withinSeconds;

		[Token(Token = "0x400232E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A5A98", Offset = "0x3A5A98")]
		public ParticleSystem defaultLargeParticle;

		[Token(Token = "0x400232F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A5ACC", Offset = "0x3A5ACC")]
		public ParticleSystem defaultSmallParticle;

		[Token(Token = "0x4002330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A5B00", Offset = "0x3A5B00")]
		public float smallObjectMaxSize;

		[Token(Token = "0x4002331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A5B34", Offset = "0x3A5B34")]
		public int obliterateMultiplier;

		[Token(Token = "0x4002332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A5B68", Offset = "0x3A5B68")]
		public bool removeVisibleDebris;

		[Token(Token = "0x4002333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3A5B9C", Offset = "0x3A5B9C")]
		public float updateFrequency;

		[Token(Token = "0x4002334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public bool useCameraDistanceLimit;

		[Token(Token = "0x4002335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int cameraDistanceLimit;

		[Token(Token = "0x4002336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public int debrisLayer;

		[Token(Token = "0x4002337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float nextUpdate;

		[Token(Token = "0x4002338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Destructible> destroyedObjects;

		[Token(Token = "0x4002339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private List<Debris> debrisPieces;

		[Token(Token = "0x400233C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5C20", Offset = "0x3A5C20")]
		private List<float> <DestroyedPrefabCounter>k__BackingField;

		[Token(Token = "0x400233D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static DestructionManager _instance;

		[Token(Token = "0x17000433")]
		public List<float> DestroyedPrefabCounter
		{
			[Token(Token = "0x6002B21")]
			[Address(RVA = "0x7F3108", Offset = "0x7F3108", VA = "0x7F3108")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADE8C", Offset = "0x3ADE8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002B22")]
			[Address(RVA = "0x7F3110", Offset = "0x7F3110", VA = "0x7F3110")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADE9C", Offset = "0x3ADE9C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000434")]
		public bool IsDestroyedPrefabLimitReached
		{
			[Token(Token = "0x6002B23")]
			[Address(RVA = "0x7F3118", Offset = "0x7F3118", VA = "0x7F3118")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000435")]
		public int ActiveDebrisCount
		{
			[Token(Token = "0x6002B24")]
			[Address(RVA = "0x7F3180", Offset = "0x7F3180", VA = "0x7F3180")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000436")]
		public static DestructionManager Instance
		{
			[Token(Token = "0x6002B26")]
			[Address(RVA = "0x7EBD18", Offset = "0x7EBD18", VA = "0x7EBD18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000049")]
		public event Action DestroyedPrefabCounterChangedEvent
		{
			[Token(Token = "0x6002B1D")]
			[Address(RVA = "0x7F2E48", Offset = "0x7F2E48", VA = "0x7F2E48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADE4C", Offset = "0x3ADE4C")]
			add
			{
			}
			[Token(Token = "0x6002B1E")]
			[Address(RVA = "0x7F2EF8", Offset = "0x7F2EF8", VA = "0x7F2EF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADE5C", Offset = "0x3ADE5C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004A")]
		public event Action ActiveDebrisCounterChangedEvent
		{
			[Token(Token = "0x6002B1F")]
			[Address(RVA = "0x7F2FA8", Offset = "0x7F2FA8", VA = "0x7F2FA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADE6C", Offset = "0x3ADE6C")]
			add
			{
			}
			[Token(Token = "0x6002B20")]
			[Address(RVA = "0x7F3058", Offset = "0x7F3058", VA = "0x7F3058")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADE7C", Offset = "0x3ADE7C")]
			remove
			{
			}
		}

		[Token(Token = "0x6002B25")]
		[Address(RVA = "0x7F32B8", Offset = "0x7F32B8", VA = "0x7F32B8")]
		private DestructionManager()
		{
		}

		[Token(Token = "0x6002B27")]
		[Address(RVA = "0x7F330C", Offset = "0x7F330C", VA = "0x7F330C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002B28")]
		[Address(RVA = "0x7F3558", Offset = "0x7F3558", VA = "0x7F3558")]
		private void Update()
		{
		}

		[Token(Token = "0x6002B29")]
		public void ProcessDestruction<T>(Destructible oldObj, GameObject destroyedPrefab, T damageInfo, bool isObliterated)
		{
		}

		[Token(Token = "0x6002B2A")]
		private void DestroyWithParticleEffect<T>(Destructible oldObj, ParticleSystem customParticle, T damageInfo)
		{
		}

		[Token(Token = "0x6002B2B")]
		[Address(RVA = "0x7F3B20", Offset = "0x7F3B20", VA = "0x7F3B20")]
		private static void UnparentSpecifiedChildren(Destructible obj)
		{
		}

		[Token(Token = "0x6002B2C")]
		private void InstantiateDebris<T>(GameObject newObj, Destructible oldObj, T damageInfo)
		{
		}

		[Token(Token = "0x6002B2D")]
		[Address(RVA = "0x7F2308", Offset = "0x7F2308", VA = "0x7F2308")]
		public void FireDestroyedPrefabCounterChangedEvent()
		{
		}

		[Token(Token = "0x6002B2E")]
		[Address(RVA = "0x7F3B0C", Offset = "0x7F3B0C", VA = "0x7F3B0C")]
		public void FireActiveDebrisCounterChangedEvent()
		{
		}
	}
	[Token(Token = "0x20005CE")]
	[ExecuteInEditMode]
	public class MaterialPreloader : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400233E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public List<DamageMaterial> materials;

		[Token(Token = "0x400233F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Texture2D> detailMasks;

		[Token(Token = "0x4002340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static MaterialPreloader _instance;

		[Token(Token = "0x4002341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool isInitialized;

		[Token(Token = "0x17000437")]
		public static MaterialPreloader Instance
		{
			[Token(Token = "0x6002B30")]
			[Address(RVA = "0x7EF974", Offset = "0x7EF974", VA = "0x7EF974")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B2F")]
		[Address(RVA = "0x7F4E04", Offset = "0x7F4E04", VA = "0x7F4E04")]
		private MaterialPreloader()
		{
		}

		[Token(Token = "0x6002B31")]
		[Address(RVA = "0x7F4E0C", Offset = "0x7F4E0C", VA = "0x7F4E0C")]
		private static void CreateInstance()
		{
		}

		[Token(Token = "0x6002B32")]
		[Address(RVA = "0x7F4F70", Offset = "0x7F4F70", VA = "0x7F4F70")]
		private void Start()
		{
		}

		[Token(Token = "0x6002B33")]
		[Address(RVA = "0x7F54D4", Offset = "0x7F54D4", VA = "0x7F54D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002B34")]
		[Address(RVA = "0x7F4FA8", Offset = "0x7F4FA8", VA = "0x7F4FA8")]
		private void ReloadMaterials()
		{
		}

		[Token(Token = "0x6002B35")]
		[Address(RVA = "0x7EFA60", Offset = "0x7EFA60", VA = "0x7EFA60")]
		public Material GetDamagedMaterial(Material sourceMat, DamageLevel damageLevel)
		{
			return null;
		}

		[Token(Token = "0x6002B36")]
		[Address(RVA = "0x7F54FC", Offset = "0x7F54FC", VA = "0x7F54FC")]
		public Material GetDestroyedMaterial(Material sourceMat, Destructible destObj)
		{
			return null;
		}
	}
	[Token(Token = "0x20005CF")]
	public class ObjectPool : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public List<PoolEntry> prefabsToPool;

		[Token(Token = "0x4002343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool suppressWarnings;

		[Token(Token = "0x4002344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private GameObject[][] Pool;

		[Token(Token = "0x4002345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<int, GameObject> autoPooledObjects;

		[Token(Token = "0x4002346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private GameObject container;

		[Token(Token = "0x4002347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ObjectPool _instance;

		[Token(Token = "0x4002348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isInitialized;

		[Token(Token = "0x17000438")]
		public static ObjectPool Instance
		{
			[Token(Token = "0x6002B38")]
			[Address(RVA = "0x7EFCBC", Offset = "0x7EFCBC", VA = "0x7EFCBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B37")]
		[Address(RVA = "0x7F558C", Offset = "0x7F558C", VA = "0x7F558C")]
		private ObjectPool()
		{
		}

		[Token(Token = "0x6002B39")]
		[Address(RVA = "0x7F5594", Offset = "0x7F5594", VA = "0x7F5594")]
		private static void CreateInstance()
		{
		}

		[Token(Token = "0x6002B3A")]
		[Address(RVA = "0x7F56F8", Offset = "0x7F56F8", VA = "0x7F56F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002B3B")]
		[Address(RVA = "0x7F5A1C", Offset = "0x7F5A1C", VA = "0x7F5A1C")]
		private void AddDestructibleObjectsToPool(IEnumerable<Destructible> destObjects)
		{
		}

		[Token(Token = "0x6002B3C")]
		[Address(RVA = "0x7F6AE8", Offset = "0x7F6AE8", VA = "0x7F6AE8")]
		public GameObject SpawnFromOriginal(string prefabName)
		{
			return null;
		}

		[Token(Token = "0x6002B3D")]
		[Address(RVA = "0x7F6D14", Offset = "0x7F6D14", VA = "0x7F6D14")]
		private static GameObject InstantiateObject(GameObject prefab, Vector3 position, Quaternion rotation, Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6002B3E")]
		[Address(RVA = "0x7EFDA8", Offset = "0x7EFDA8", VA = "0x7EFDA8")]
		public GameObject Spawn(GameObject originalPrefab, Vector3 position, Quaternion rotation, Transform parent, int autoPoolID = 0)
		{
			return null;
		}

		[Token(Token = "0x6002B3F")]
		[Address(RVA = "0x7F099C", Offset = "0x7F099C", VA = "0x7F099C")]
		public GameObject Spawn(GameObject originalPrefab, Vector3 position, Quaternion rotation, int autoPoolID = 0)
		{
			return null;
		}

		[Token(Token = "0x6002B40")]
		[Address(RVA = "0x7F60D0", Offset = "0x7F60D0", VA = "0x7F60D0")]
		public void PoolObject(GameObject obj, bool reenableChildren = false)
		{
		}
	}
	[Token(Token = "0x20005D0")]
	public class ParticleManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000913")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x39DB30", Offset = "0x39DB30")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4002BF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int parentId;

			[Token(Token = "0x6003870")]
			[Address(RVA = "0x7F7988", Offset = "0x7F7988", VA = "0x7F7988")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6003871")]
			[Address(RVA = "0x7F7990", Offset = "0x7F7990", VA = "0x7F7990")]
			internal bool <PlayEffect>b__0(ActiveParticle x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4002349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int maxDestroyedParticles;

		[Token(Token = "0x400234A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int maxPerDestructible;

		[Token(Token = "0x400234B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float withinSeconds;

		[Token(Token = "0x400234C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float updateFrequency;

		[Token(Token = "0x400234D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3A5C30", Offset = "0x3A5C30")]
		private static ParticleManager <Instance>k__BackingField;

		[Token(Token = "0x400234E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float nextUpdate;

		[Token(Token = "0x400234F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ActiveParticle[] activeParticles;

		[Token(Token = "0x17000439")]
		public static ParticleManager Instance
		{
			[Token(Token = "0x6002B41")]
			[Address(RVA = "0x7F6EE8", Offset = "0x7F6EE8", VA = "0x7F6EE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADEAC", Offset = "0x3ADEAC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002B42")]
			[Address(RVA = "0x7F6F40", Offset = "0x7F6F40", VA = "0x7F6F40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADEBC", Offset = "0x3ADEBC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700043A")]
		public ActiveParticle[] ActiveParticles
		{
			[Token(Token = "0x6002B43")]
			[Address(RVA = "0x7F6F9C", Offset = "0x7F6F9C", VA = "0x7F6F9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002B44")]
			[Address(RVA = "0x7F6FA4", Offset = "0x7F6FA4", VA = "0x7F6FA4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700043B")]
		public bool IsMaxActiveParticles
		{
			[Token(Token = "0x6002B45")]
			[Address(RVA = "0x7F6FAC", Offset = "0x7F6FAC", VA = "0x7F6FAC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400004B")]
		public event Action ActiveParticlesCounterChangedEvent
		{
			[Token(Token = "0x6002B47")]
			[Address(RVA = "0x7F700C", Offset = "0x7F700C", VA = "0x7F700C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADECC", Offset = "0x3ADECC")]
			add
			{
			}
			[Token(Token = "0x6002B48")]
			[Address(RVA = "0x7F70BC", Offset = "0x7F70BC", VA = "0x7F70BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3ADEDC", Offset = "0x3ADEDC")]
			remove
			{
			}
		}

		[Token(Token = "0x6002B46")]
		[Address(RVA = "0x7F6FE0", Offset = "0x7F6FE0", VA = "0x7F6FE0")]
		private ParticleManager()
		{
		}

		[Token(Token = "0x6002B49")]
		[Address(RVA = "0x7F716C", Offset = "0x7F716C", VA = "0x7F716C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002B4A")]
		[Address(RVA = "0x7F7230", Offset = "0x7F7230", VA = "0x7F7230")]
		private void Update()
		{
		}

		[Token(Token = "0x6002B4B")]
		[Address(RVA = "0x7F743C", Offset = "0x7F743C", VA = "0x7F743C")]
		public void PlayEffect(ParticleSystem effect, Vector3 pos, Quaternion rot, int parentId)
		{
		}

		[Token(Token = "0x6002B4C")]
		[Address(RVA = "0x7F7488", Offset = "0x7F7488", VA = "0x7F7488")]
		public void PlayEffect(ParticleSystem effect, Vector3 pos, Quaternion rot, int parentId, Material mat)
		{
		}

		[Token(Token = "0x6002B4D")]
		[Address(RVA = "0x7F7428", Offset = "0x7F7428", VA = "0x7F7428")]
		public void FireActiveParticlesCounterChangedEvent()
		{
		}
	}
}
namespace Data
{
	[Serializable]
	[Token(Token = "0x20005D1")]
	public class SettingData
	{
		[Token(Token = "0x4002351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string host;

		[Token(Token = "0x4002352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int port;

		[Token(Token = "0x4002353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string local_player_color;

		[Token(Token = "0x4002354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public string local_player_name;

		[Token(Token = "0x4002355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string pvp_spawn_offset;

		[Token(Token = "0x4002356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float pvp_spawn_rotation;

		[Token(Token = "0x4002357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float game_time_start;

		[Token(Token = "0x4002358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float game_time_end;

		[Token(Token = "0x4002359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float game_end_delay;

		[Token(Token = "0x400235A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float coop_respawn_time;

		[Token(Token = "0x400235B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float enemy_spawnCount_multiplier;

		[Token(Token = "0x400235C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int headset_id;

		[Token(Token = "0x400235D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string boundary_size;

		[Token(Token = "0x400235E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int pvp_distance;

		[Token(Token = "0x400235F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string arcade_name;

		[Token(Token = "0x4002360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public string custom_player_names;

		[Token(Token = "0x4002361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int default_weapon;

		[Token(Token = "0x4002362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool isolated_mode;

		[Token(Token = "0x4002363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float isolated_trench_width;

		[Token(Token = "0x6002B4E")]
		[Address(RVA = "0x7E9470", Offset = "0x7E9470", VA = "0x7E9470")]
		public SettingData()
		{
		}
	}
}
