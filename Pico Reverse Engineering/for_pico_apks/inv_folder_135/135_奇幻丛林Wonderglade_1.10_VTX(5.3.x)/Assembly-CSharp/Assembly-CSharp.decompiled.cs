using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.Serialization.Formatters.Binary;
using System.Text;
using System.Threading;
using DarkTonic.MasterAudio;
using DigitalOpus.MB.Core;
using Il2CppDummyDll;
using LitJson;
using ParticlePlayground;
using PlaygroundSplines;
using Psyduck;
using Pvr_UnitySDKAPI;
using Pvr_UnitySDKAPI.Achievement;
using RG;
using RGCommon;
using RGEvents;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Animations;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Experimental.Rendering;
using UnityEngine.Networking;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.UI;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class FSPStaticMeshHolder : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static FSPStaticMeshHolder _instance;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, Mesh> _meshLinks;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public int receiverID;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x71BD28", Offset = "0x71BD28", VA = "0x71BD28")]
	public static FSPStaticMeshHolder Get()
	{
		return null;
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x71BD78", Offset = "0x71BD78", VA = "0x71BD78")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x71BF3C", Offset = "0x71BF3C", VA = "0x71BF3C")]
	public Mesh GetMesh(int receiverID)
	{
		return null;
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x71BDD0", Offset = "0x71BDD0", VA = "0x71BDD0")]
	private void LinkMeshes()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x71BFAC", Offset = "0x71BFAC", VA = "0x71BFAC")]
	public FSPStaticMeshHolder()
	{
	}
}
[Token(Token = "0x2000003")]
public class GlobalProjectorLightCamera : MonoBehaviour
{
	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action PreCullCallback;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action PostRenderCallback;

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x724DC4", Offset = "0x724DC4", VA = "0x724DC4")]
	private void OnPreCull()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x724DD8", Offset = "0x724DD8", VA = "0x724DD8")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x724DEC", Offset = "0x724DEC", VA = "0x724DEC")]
	public GlobalProjectorLightCamera()
	{
	}
}
[Token(Token = "0x2000004")]
public class GlobalProjectorManager : MonoBehaviour
{
	[Token(Token = "0x2000361")]
	public enum ProjectionCulling
	{
		[Token(Token = "0x400161B")]
		None,
		[Token(Token = "0x400161C")]
		ProjectorBounds,
		[Token(Token = "0x400161D")]
		ProjectionVolumeBounds
	}

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ProjectorEyeTexture _Tex;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ProjectorEyeTexture _TexLight;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material _ProjectorMaterialShadow;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material _ProjectorMaterialLight;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Matrix4x4 _ProjectorMatrix;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Matrix4x4 _ProjectorClipMatrix;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Matrix4x4 _BiasMatrix;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Matrix4x4 _ViewMatrix;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Matrix4x4 _BPV;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Matrix4x4 _BPVClip;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private Matrix4x4 _ModelMatrix;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private Matrix4x4 _FinalMatrix;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private Matrix4x4 _FinalClipMatrix;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private MaterialPropertyBlock _MBP;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private int[] _ShadowResolutions;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string GlobalProjectorLayer;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private float _BatchBreak;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static GlobalProjectorManager _Instance;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	private Vector3 _GlobalProjectionDir;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private int _GlobalShadowResolution;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
	private ProjectionCulling _GlobalShadowCullingMode;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private float _GlobalCutOffDistance;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	private bool _GlobalFlipX;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A5")]
	private bool _GlobalFlipY;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A6")]
	private bool _renderShadows;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private Camera _ProjectorCamera;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private Camera _ProjectorCameraLight;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private List<ShadowProjector> _ShadowProjectors;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private List<ShadowProjector> _LightProjectors;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private List<ShadowReceiver> _ShadowReceivers;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private List<ShadowTrigger> _ShadowTriggers;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private Texture2D _textureRead;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private bool _shouldCheckTriggers;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private Plane[] _mainCameraPlains;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	private bool _cameraPlainsCalculated;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
	private Bounds _projectorBounds;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public Shader _globalProjectorShader;

	[Token(Token = "0x17000001")]
	public static Vector3 GlobalProjectionDir
	{
		[Token(Token = "0x600000A")]
		[Address(RVA = "0x7250AC", Offset = "0x7250AC", VA = "0x7250AC")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000009")]
		[Address(RVA = "0x724DF4", Offset = "0x724DF4", VA = "0x724DF4")]
		set
		{
		}
	}

	[Token(Token = "0x17000002")]
	public static int GlobalShadowResolution
	{
		[Token(Token = "0x600000C")]
		[Address(RVA = "0x72529C", Offset = "0x72529C", VA = "0x72529C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600000B")]
		[Address(RVA = "0x72512C", Offset = "0x72512C", VA = "0x72512C")]
		set
		{
		}
	}

	[Token(Token = "0x17000003")]
	public static ProjectionCulling GlobalShadowCullingMode
	{
		[Token(Token = "0x600000E")]
		[Address(RVA = "0x725390", Offset = "0x725390", VA = "0x725390")]
		get
		{
			return default(ProjectionCulling);
		}
		[Token(Token = "0x600000D")]
		[Address(RVA = "0x725314", Offset = "0x725314", VA = "0x725314")]
		set
		{
		}
	}

	[Token(Token = "0x17000004")]
	public static float GlobalCutOffDistance
	{
		[Token(Token = "0x6000010")]
		[Address(RVA = "0x72548C", Offset = "0x72548C", VA = "0x72548C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600000F")]
		[Address(RVA = "0x725408", Offset = "0x725408", VA = "0x725408")]
		set
		{
		}
	}

	[Token(Token = "0x17000005")]
	public static bool GlobalFlipX
	{
		[Token(Token = "0x6000012")]
		[Address(RVA = "0x725644", Offset = "0x725644", VA = "0x725644")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000011")]
		[Address(RVA = "0x725504", Offset = "0x725504", VA = "0x725504")]
		set
		{
		}
	}

	[Token(Token = "0x17000006")]
	public static bool GlobalFlipY
	{
		[Token(Token = "0x6000014")]
		[Address(RVA = "0x7257D4", Offset = "0x7257D4", VA = "0x7257D4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000013")]
		[Address(RVA = "0x7256BC", Offset = "0x7256BC", VA = "0x7256BC")]
		set
		{
		}
	}

	[Token(Token = "0x17000007")]
	public bool ShadowsOn
	{
		[Token(Token = "0x6000016")]
		[Address(RVA = "0x725858", Offset = "0x725858", VA = "0x725858")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000015")]
		[Address(RVA = "0x72584C", Offset = "0x72584C", VA = "0x72584C")]
		set
		{
		}
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x725860", Offset = "0x725860", VA = "0x725860")]
	public static GlobalProjectorManager Get()
	{
		return null;
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x7259B4", Offset = "0x7259B4", VA = "0x7259B4")]
	private void Initialize()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x725F28", Offset = "0x725F28", VA = "0x725F28")]
	private void CreateLightCamera()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x726378", Offset = "0x726378", VA = "0x726378")]
	private void Awake()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x72637C", Offset = "0x72637C", VA = "0x72637C")]
	private void Start()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x726380", Offset = "0x726380", VA = "0x726380")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x7263E8", Offset = "0x7263E8", VA = "0x7263E8")]
	public static bool Exists()
	{
		return default(bool);
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x726480", Offset = "0x726480", VA = "0x726480")]
	public Texture GetShadowTexture()
	{
		return null;
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x7264B0", Offset = "0x7264B0", VA = "0x7264B0")]
	public void AddProjector(ShadowProjector projector)
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x7267C4", Offset = "0x7267C4", VA = "0x7267C4")]
	public void RemoveProjector(ShadowProjector projector)
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x72695C", Offset = "0x72695C", VA = "0x72695C")]
	public void AddReceiver(ShadowReceiver receiver)
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x726A14", Offset = "0x726A14", VA = "0x726A14")]
	private void CheckForTerrain(ShadowReceiver receiver)
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x726B70", Offset = "0x726B70", VA = "0x726B70")]
	public void AddShadowTrigger(ShadowTrigger trigger)
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x726C1C", Offset = "0x726C1C", VA = "0x726C1C")]
	public void RemoveShadowTrigger(ShadowTrigger trigger)
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x726CC8", Offset = "0x726CC8", VA = "0x726CC8")]
	public void RemoveReceiver(ShadowReceiver receiver)
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x724F4C", Offset = "0x724F4C", VA = "0x724F4C")]
	private void OnProjectionDirChange()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x725218", Offset = "0x725218", VA = "0x725218")]
	private void OnShadowResolutionChange()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x72617C", Offset = "0x72617C", VA = "0x72617C")]
	private void CreateProjectorEyeTexture()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x726188", Offset = "0x726188", VA = "0x726188")]
	private void CreateProjectorEyeTexture(bool shadow, bool light)
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x72561C", Offset = "0x72561C", VA = "0x72561C")]
	private void ForceShadowDummyRebuild()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x726D74", Offset = "0x726D74", VA = "0x726D74")]
	private void ForceShadowDummyRebuild(List<ShadowProjector> projectors)
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x726E98", Offset = "0x726E98", VA = "0x726E98")]
	private void CalculateShadowBounds(Camera targetCamera, List<ShadowProjector> projectors)
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x72756C", Offset = "0x72756C", VA = "0x72756C")]
	private void CheckMainCameraPlains()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x7275F0", Offset = "0x7275F0", VA = "0x7275F0")]
	private bool IsProjectionVolumeVisible(Plane[] planes, ShadowProjector projector)
	{
		return default(bool);
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x7278E8", Offset = "0x7278E8", VA = "0x7278E8")]
	public void SetTriggerTexPixel(Vector3 point, bool checkShadow, bool checkLight, int triggerID)
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x72790C", Offset = "0x72790C", VA = "0x72790C")]
	private void SetTriggerTexPixel(Camera camera, ProjectorEyeTexture tex, Vector3 point, int triggerID)
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x727C40", Offset = "0x727C40", VA = "0x727C40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x727D5C", Offset = "0x727D5C", VA = "0x727D5C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x727DBC", Offset = "0x727DBC", VA = "0x727DBC")]
	private void RenderProjectors(Camera targetCamera, List<ShadowProjector> projectors, Material material)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x7283A4", Offset = "0x7283A4", VA = "0x7283A4")]
	private void Render(Material material)
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x728B98", Offset = "0x728B98", VA = "0x728B98")]
	private void PreventDynamicBatchUnity5()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x728C58", Offset = "0x728C58", VA = "0x728C58")]
	private void CheckTriggers(bool shadow)
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x728858", Offset = "0x728858", VA = "0x728858")]
	private void ApplyTerrainTextureMatrix(ShadowReceiver receiver)
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x729040", Offset = "0x729040", VA = "0x729040")]
	private void OnPreCull()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x7291B8", Offset = "0x7291B8", VA = "0x7291B8")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x72930C", Offset = "0x72930C", VA = "0x72930C")]
	private void OnLightPreCull()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x729484", Offset = "0x729484", VA = "0x729484")]
	private void OnLightPostRender()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x7295D8", Offset = "0x7295D8", VA = "0x7295D8")]
	public GlobalProjectorManager()
	{
	}
}
[Serializable]
[Token(Token = "0x2000005")]
public class ProjectorEyeTexture
{
	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private RenderTexture _RenderTexture;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Texture2D _RenderTextureDummy;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera _Camera;

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x66C24C", Offset = "0x66C24C", VA = "0x66C24C")]
	public ProjectorEyeTexture(Camera camera, int size)
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x66C3D4", Offset = "0x66C3D4", VA = "0x66C3D4")]
	public void CleanUp()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x66C4A8", Offset = "0x66C4A8", VA = "0x66C4A8")]
	public Texture GetTexture()
	{
		return null;
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x66C4B0", Offset = "0x66C4B0", VA = "0x66C4B0")]
	public RenderTexture GetRenderTexture()
	{
		return null;
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x66C4B8", Offset = "0x66C4B8", VA = "0x66C4B8")]
	public void GrabScreenIfNeeded()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x66C3CC", Offset = "0x66C3CC", VA = "0x66C3CC")]
	public bool RenderTextureSupported()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000006")]
public class ProjectorShadowDummy : MonoBehaviour
{
	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 _ShadowLocalOffset;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Quaternion _RotationAngleOffset;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool _freezeXRot;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool _freezeYRot;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	public bool _freezeZRot;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Quaternion _AngleOffset;

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x66C4BC", Offset = "0x66C4BC", VA = "0x66C4BC")]
	public void OnPreRenderShadowDummy(Camera camera)
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x66CB94", Offset = "0x66CB94", VA = "0x66CB94")]
	public ProjectorShadowDummy()
	{
	}
}
[Token(Token = "0x2000007")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4A7C74", Offset = "0x4A7C74")]
public class ShadowProjector : MonoBehaviour
{
	[Token(Token = "0x2000362")]
	private static class MeshGen
	{
		[Token(Token = "0x6001A62")]
		[Address(RVA = "0x6A2944", Offset = "0x6A2944", VA = "0x6A2944")]
		public static Mesh CreatePlane(Vector3 up, Vector3 right, Rect uvRect, Color color, ShadowProjector parent)
		{
			return null;
		}
	}

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected Vector3 _GlobalProjectionDir;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	protected int _GlobalShadowResolution;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected GlobalProjectorManager.ProjectionCulling _GlobalShadowCullingMode;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private bool _EnableCutOff;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected float _GlobalCutOffDistance;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	protected bool _GlobalFlipX;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	[SerializeField]
	protected bool _GlobalFlipY;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float _ShadowSize;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private Color _ShadowColor;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float _ShadowOpacity;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material _Material;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private bool _IsLight;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private Vector3 _ShadowLocalOffset;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Quaternion _RotationAngleOffset;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private bool _FreezeXRot;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	[SerializeField]
	private bool _FreezeYRot;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	[SerializeField]
	private bool _FreezeZRot;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private Rect _UVRect;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	private bool _AutoSizeOpacity;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private float _AutoSOCutOffDistance;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[SerializeField]
	private float _AutoSORayOriginOffset;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private float _AutoSOMaxScaleMultiplier;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[SerializeField]
	private int _AutoSORaycastLayer;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private MeshRenderer _Renderer;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private MeshFilter _MeshFilter;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Mesh _ShadowDummyMesh;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private ProjectorShadowDummy _ShadowDummy;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float _initialSize;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float _initialOpacity;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool _discarded;

	[Token(Token = "0x17000008")]
	public Vector3 GlobalProjectionDir
	{
		[Token(Token = "0x6000047")]
		[Address(RVA = "0x6A174C", Offset = "0x6A174C", VA = "0x6A174C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000046")]
		[Address(RVA = "0x6A1678", Offset = "0x6A1678", VA = "0x6A1678")]
		set
		{
		}
	}

	[Token(Token = "0x17000009")]
	public int GlobalShadowResolution
	{
		[Token(Token = "0x6000049")]
		[Address(RVA = "0x6A1808", Offset = "0x6A1808", VA = "0x6A1808")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000048")]
		[Address(RVA = "0x6A1758", Offset = "0x6A1758", VA = "0x6A1758")]
		set
		{
		}
	}

	[Token(Token = "0x1700000A")]
	public GlobalProjectorManager.ProjectionCulling GlobalShadowCullingMode
	{
		[Token(Token = "0x600004B")]
		[Address(RVA = "0x6A18C0", Offset = "0x6A18C0", VA = "0x6A18C0")]
		get
		{
			return default(GlobalProjectorManager.ProjectionCulling);
		}
		[Token(Token = "0x600004A")]
		[Address(RVA = "0x6A1810", Offset = "0x6A1810", VA = "0x6A1810")]
		set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public bool EnableCutOff
	{
		[Token(Token = "0x600004D")]
		[Address(RVA = "0x6A18E8", Offset = "0x6A18E8", VA = "0x6A18E8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600004C")]
		[Address(RVA = "0x6A18C8", Offset = "0x6A18C8", VA = "0x6A18C8")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public float GlobalCutOffDistance
	{
		[Token(Token = "0x600004F")]
		[Address(RVA = "0x6A19A0", Offset = "0x6A19A0", VA = "0x6A19A0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600004E")]
		[Address(RVA = "0x6A18F0", Offset = "0x6A18F0", VA = "0x6A18F0")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public bool GlobalFlipX
	{
		[Token(Token = "0x6000051")]
		[Address(RVA = "0x6A1A60", Offset = "0x6A1A60", VA = "0x6A1A60")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000050")]
		[Address(RVA = "0x6A19A8", Offset = "0x6A19A8", VA = "0x6A19A8")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public bool GlobalFlipY
	{
		[Token(Token = "0x6000053")]
		[Address(RVA = "0x6A1B20", Offset = "0x6A1B20", VA = "0x6A1B20")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000052")]
		[Address(RVA = "0x6A1A68", Offset = "0x6A1A68", VA = "0x6A1A68")]
		set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	public float ShadowSize
	{
		[Token(Token = "0x6000055")]
		[Address(RVA = "0x6A1C54", Offset = "0x6A1C54", VA = "0x6A1C54")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000054")]
		[Address(RVA = "0x6A1B28", Offset = "0x6A1B28", VA = "0x6A1B28")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public Color ShadowColor
	{
		[Token(Token = "0x6000057")]
		[Address(RVA = "0x6A1E98", Offset = "0x6A1E98", VA = "0x6A1E98")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000056")]
		[Address(RVA = "0x6A1C5C", Offset = "0x6A1C5C", VA = "0x6A1C5C")]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public float ShadowOpacity
	{
		[Token(Token = "0x6000059")]
		[Address(RVA = "0x6A1F4C", Offset = "0x6A1F4C", VA = "0x6A1F4C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000058")]
		[Address(RVA = "0x6A1EA4", Offset = "0x6A1EA4", VA = "0x6A1EA4")]
		set
		{
		}
	}

	[Token(Token = "0x17000012")]
	public bool IsLight
	{
		[Token(Token = "0x600005B")]
		[Address(RVA = "0x6A1F60", Offset = "0x6A1F60", VA = "0x6A1F60")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600005A")]
		[Address(RVA = "0x6A1F54", Offset = "0x6A1F54", VA = "0x6A1F54")]
		set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public Vector3 ShadowLocalOffset
	{
		[Token(Token = "0x600005D")]
		[Address(RVA = "0x6A202C", Offset = "0x6A202C", VA = "0x6A202C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600005C")]
		[Address(RVA = "0x6A1F68", Offset = "0x6A1F68", VA = "0x6A1F68")]
		set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public Quaternion RotationAngleOffset
	{
		[Token(Token = "0x600005F")]
		[Address(RVA = "0x6A2108", Offset = "0x6A2108", VA = "0x6A2108")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x600005E")]
		[Address(RVA = "0x6A2038", Offset = "0x6A2038", VA = "0x6A2038")]
		set
		{
		}
	}

	[Token(Token = "0x17000015")]
	public bool FreezeXRot
	{
		[Token(Token = "0x6000061")]
		[Address(RVA = "0x6A21B8", Offset = "0x6A21B8", VA = "0x6A21B8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000060")]
		[Address(RVA = "0x6A2114", Offset = "0x6A2114", VA = "0x6A2114")]
		set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public bool FreezeYRot
	{
		[Token(Token = "0x6000063")]
		[Address(RVA = "0x6A2264", Offset = "0x6A2264", VA = "0x6A2264")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000062")]
		[Address(RVA = "0x6A21C0", Offset = "0x6A21C0", VA = "0x6A21C0")]
		set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public bool FreezeZRot
	{
		[Token(Token = "0x6000065")]
		[Address(RVA = "0x6A2310", Offset = "0x6A2310", VA = "0x6A2310")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000064")]
		[Address(RVA = "0x6A226C", Offset = "0x6A226C", VA = "0x6A226C")]
		set
		{
		}
	}

	[Token(Token = "0x17000018")]
	public Rect UVRect
	{
		[Token(Token = "0x6000067")]
		[Address(RVA = "0x6A23D4", Offset = "0x6A23D4", VA = "0x6A23D4")]
		get
		{
			return default(Rect);
		}
		[Token(Token = "0x6000066")]
		[Address(RVA = "0x6A2318", Offset = "0x6A2318", VA = "0x6A2318")]
		set
		{
		}
	}

	[Token(Token = "0x17000019")]
	public bool AutoSizeOpacity
	{
		[Token(Token = "0x6000069")]
		[Address(RVA = "0x6A23EC", Offset = "0x6A23EC", VA = "0x6A23EC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000068")]
		[Address(RVA = "0x6A23E0", Offset = "0x6A23E0", VA = "0x6A23E0")]
		set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	public float AutoSOCutOffDistance
	{
		[Token(Token = "0x600006B")]
		[Address(RVA = "0x6A23FC", Offset = "0x6A23FC", VA = "0x6A23FC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600006A")]
		[Address(RVA = "0x6A23F4", Offset = "0x6A23F4", VA = "0x6A23F4")]
		set
		{
		}
	}

	[Token(Token = "0x1700001B")]
	public float AutoSORayOriginOffset
	{
		[Token(Token = "0x600006D")]
		[Address(RVA = "0x6A240C", Offset = "0x6A240C", VA = "0x6A240C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600006C")]
		[Address(RVA = "0x6A2404", Offset = "0x6A2404", VA = "0x6A2404")]
		set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public float AutoSOMaxScaleMultiplier
	{
		[Token(Token = "0x600006F")]
		[Address(RVA = "0x6A241C", Offset = "0x6A241C", VA = "0x6A241C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600006E")]
		[Address(RVA = "0x6A2414", Offset = "0x6A2414", VA = "0x6A2414")]
		set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public int AutoSORaycastLayer
	{
		[Token(Token = "0x6000071")]
		[Address(RVA = "0x6A242C", Offset = "0x6A242C", VA = "0x6A242C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000070")]
		[Address(RVA = "0x6A2424", Offset = "0x6A2424", VA = "0x6A2424")]
		set
		{
		}
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x6A2434", Offset = "0x6A2434", VA = "0x6A2434")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x6A32F0", Offset = "0x6A32F0", VA = "0x6A32F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x6A3390", Offset = "0x6A3390", VA = "0x6A3390")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x6A3430", Offset = "0x6A3430", VA = "0x6A3430")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x6A3538", Offset = "0x6A3538", VA = "0x6A3538")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x6A35E8", Offset = "0x6A35E8", VA = "0x6A35E8")]
	public Bounds GetBounds()
	{
		return default(Bounds);
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x6A3620", Offset = "0x6A3620", VA = "0x6A3620")]
	public bool IsVisible()
	{
		return default(bool);
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x6A3650", Offset = "0x6A3650", VA = "0x6A3650")]
	public void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x6A3688", Offset = "0x6A3688", VA = "0x6A3688")]
	public void Discard(bool discard)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x6A369C", Offset = "0x6A369C", VA = "0x6A369C")]
	public bool IsDiscarded()
	{
		return default(bool);
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x6A36A4", Offset = "0x6A36A4", VA = "0x6A36A4")]
	private void Update()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x6A3830", Offset = "0x6A3830", VA = "0x6A3830")]
	public void OnPreRenderShadowProjector(Camera camera)
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x6A38E0", Offset = "0x6A38E0", VA = "0x6A38E0")]
	public Matrix4x4 ShadowDummyLocalToWorldMatrix()
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x6A3930", Offset = "0x6A3930", VA = "0x6A3930")]
	public float GetShadowWorldSize()
	{
		return default(float);
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x6A3B28", Offset = "0x6A3B28", VA = "0x6A3B28")]
	public Vector3 GetShadowPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x6A1BD0", Offset = "0x6A1BD0", VA = "0x6A1BD0")]
	private void OnShadowSizeChanged()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x6A23D0", Offset = "0x6A23D0", VA = "0x6A23D0")]
	public void OnUVRectChanged()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x6A1D38", Offset = "0x6A1D38", VA = "0x6A1D38")]
	public void OnShadowColorChanged()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x6A3B70", Offset = "0x6A3B70", VA = "0x6A3B70")]
	private void RebuildMesh()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x6A3C70", Offset = "0x6A3C70", VA = "0x6A3C70")]
	public ShadowProjector()
	{
	}
}
[Token(Token = "0x2000008")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4A7CAC", Offset = "0x4A7CAC")]
public class ShadowReceiver : MonoBehaviour
{
	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Mesh _mesh;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Mesh _meshCopy;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Terrain _terrain;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material _terrainMaterial;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _isTerrain;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool _standardTerrain;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int _id;

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x6A3D74", Offset = "0x6A3D74", VA = "0x6A3D74")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x6A4038", Offset = "0x6A4038", VA = "0x6A4038")]
	private void Start()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x6A4298", Offset = "0x6A4298", VA = "0x6A4298")]
	public Mesh GetMesh()
	{
		return null;
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x6A4328", Offset = "0x6A4328", VA = "0x6A4328")]
	public bool IsTerrain()
	{
		return default(bool);
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x6A43DC", Offset = "0x6A43DC", VA = "0x6A43DC")]
	public bool IsStandardTerrain()
	{
		return default(bool);
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x6A43E4", Offset = "0x6A43E4", VA = "0x6A43E4")]
	public Terrain GetTerrain()
	{
		return null;
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x6A43EC", Offset = "0x6A43EC", VA = "0x6A43EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x6A43F0", Offset = "0x6A43F0", VA = "0x6A43F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x6A4544", Offset = "0x6A4544", VA = "0x6A4544")]
	private void OnBecameVisible()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x6A4548", Offset = "0x6A4548", VA = "0x6A4548")]
	private void OnBecameInvisible()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x6A454C", Offset = "0x6A454C", VA = "0x6A454C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x6A416C", Offset = "0x6A416C", VA = "0x6A416C")]
	private void AddReceiver()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x6A43F4", Offset = "0x6A43F4", VA = "0x6A43F4")]
	private void RemoveReceiver()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x6A4550", Offset = "0x6A4550", VA = "0x6A4550")]
	public ShadowReceiver()
	{
	}
}
[Token(Token = "0x2000009")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4A7CE4", Offset = "0x4A7CE4")]
public class ShadowTrigger : MonoBehaviour
{
	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action OnShadowEnter;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action OnShadowStay;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action OnShadowExit;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _InShadow;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[SerializeField]
	private bool _DetectShadow;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	[SerializeField]
	private bool _DetectLight;

	[Token(Token = "0x1700001E")]
	public bool DetectShadow
	{
		[Token(Token = "0x6000095")]
		[Address(RVA = "0x6A4564", Offset = "0x6A4564", VA = "0x6A4564")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000094")]
		[Address(RVA = "0x6A4558", Offset = "0x6A4558", VA = "0x6A4558")]
		set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	public bool DetectLight
	{
		[Token(Token = "0x6000097")]
		[Address(RVA = "0x6A4578", Offset = "0x6A4578", VA = "0x6A4578")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000096")]
		[Address(RVA = "0x6A456C", Offset = "0x6A456C", VA = "0x6A456C")]
		set
		{
		}
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x6A4580", Offset = "0x6A4580", VA = "0x6A4580")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x6A4584", Offset = "0x6A4584", VA = "0x6A4584")]
	private void Start()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x6A4638", Offset = "0x6A4638", VA = "0x6A4638")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x6A463C", Offset = "0x6A463C", VA = "0x6A463C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x6A46F0", Offset = "0x6A46F0", VA = "0x6A46F0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x6A4588", Offset = "0x6A4588", VA = "0x6A4588")]
	private void AddShadowTrigger()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x6A4640", Offset = "0x6A4640", VA = "0x6A4640")]
	private void RemoveShadowTrigger()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x6A46F4", Offset = "0x6A46F4", VA = "0x6A46F4")]
	public void OnTriggerCheckDone(bool pointInShadow)
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x6A473C", Offset = "0x6A473C", VA = "0x6A473C")]
	public ShadowTrigger()
	{
	}
}
[Token(Token = "0x200000A")]
public class MB2_TestShowHide : MonoBehaviour
{
	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker mb;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] objs;

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x741CFC", Offset = "0x741CFC", VA = "0x741CFC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x741E78", Offset = "0x741E78", VA = "0x741E78")]
	public MB2_TestShowHide()
	{
	}
}
[Token(Token = "0x200000B")]
public class MB2_TestUpdate : MonoBehaviour
{
	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker meshbaker;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MB3_MultiMeshBaker multiMeshBaker;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] objsToMove;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject objWithChangingUVs;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2[] uvs;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Mesh m;

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x741E80", Offset = "0x741E80", VA = "0x741E80")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x742158", Offset = "0x742158", VA = "0x742158")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x7426E4", Offset = "0x7426E4", VA = "0x7426E4")]
	public MB2_TestUpdate()
	{
	}
}
[Token(Token = "0x200000C")]
public class MB3_TestAddingRemovingSkinnedMeshes : MonoBehaviour
{
	[Token(Token = "0x2000363")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8984", Offset = "0x4A8984")]
	private sealed class <TestScript>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MB3_TestAddingRemovingSkinnedMeshes <>4__this;

		[Token(Token = "0x17000146")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A66")]
			[Address(RVA = "0x74A03C", Offset = "0x74A03C", VA = "0x74A03C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000147")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A68")]
			[Address(RVA = "0x74A0AC", Offset = "0x74A0AC", VA = "0x74A0AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0x7492C8", Offset = "0x7492C8", VA = "0x7492C8")]
		[DebuggerHidden]
		public <TestScript>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0x7492FC", Offset = "0x7492FC", VA = "0x7492FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0x749300", Offset = "0x749300", VA = "0x749300", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0x74A044", Offset = "0x74A044", VA = "0x74A044", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker meshBaker;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] g;

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x749228", Offset = "0x749228", VA = "0x749228")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x749254", Offset = "0x749254", VA = "0x749254")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4AFB38", Offset = "0x4AFB38")]
	private IEnumerator TestScript()
	{
		return null;
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x7492F4", Offset = "0x7492F4", VA = "0x7492F4")]
	public MB3_TestAddingRemovingSkinnedMeshes()
	{
	}
}
[Token(Token = "0x200000D")]
public class MB3_TestBakeAllWithSameMaterial : MonoBehaviour
{
	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] listOfObjsToCombineGood;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] listOfObjsToCombineBad;

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x74A0B4", Offset = "0x74A0B4", VA = "0x74A0B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x74A0B8", Offset = "0x74A0B8", VA = "0x74A0B8")]
	private void testCombine()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x74A5E0", Offset = "0x74A5E0", VA = "0x74A5E0")]
	public MB3_TestBakeAllWithSameMaterial()
	{
	}
}
[Token(Token = "0x200000E")]
public class MB3_TestRenderTextureTestHarness : MonoBehaviour
{
	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D input;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool doColor;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color32 color;

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x74A5E8", Offset = "0x74A5E8", VA = "0x74A5E8")]
	public Texture2D Create3x3Tex()
	{
		return null;
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x74A750", Offset = "0x74A750", VA = "0x74A750")]
	public Texture2D Create3x3Clone()
	{
		return null;
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x74AA94", Offset = "0x74AA94", VA = "0x74AA94")]
	public static void TestRender(Texture2D input, Texture2D output)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x74B4F0", Offset = "0x74B4F0", VA = "0x74B4F0")]
	public MB3_TestRenderTextureTestHarness()
	{
	}
}
[Token(Token = "0x200000F")]
public class MB3_KMeansClustering
{
	[Token(Token = "0x2000364")]
	private class DataPoint
	{
		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 center;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject gameObject;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int Cluster;

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0x745968", Offset = "0x745968", VA = "0x745968")]
		public DataPoint(GameObject go)
		{
		}
	}

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<DataPoint> _normalizedDataToCluster;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3[] _clusters;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _numberOfClusters;

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x74565C", Offset = "0x74565C", VA = "0x74565C")]
	public MB3_KMeansClustering(List<GameObject> gos, int numClusters)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x745AB0", Offset = "0x745AB0", VA = "0x745AB0")]
	private void InitializeCentroids()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x745BDC", Offset = "0x745BDC", VA = "0x745BDC")]
	private bool UpdateDataPointMeans(bool force)
	{
		return default(bool);
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x745F1C", Offset = "0x745F1C", VA = "0x745F1C")]
	private bool AnyAreEmpty(List<DataPoint> data)
	{
		return default(bool);
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x746080", Offset = "0x746080", VA = "0x746080")]
	private bool UpdateClusterMembership()
	{
		return default(bool);
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x746280", Offset = "0x746280", VA = "0x746280")]
	private float ElucidanDistance(DataPoint dataPoint, Vector3 mean)
	{
		return default(float);
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x746334", Offset = "0x746334", VA = "0x746334")]
	private int MinIndex(float[] distances)
	{
		return default(int);
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x746414", Offset = "0x746414", VA = "0x746414")]
	public List<Renderer> GetCluster(int idx, out Vector3 mean, out float size)
	{
		return null;
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x74679C", Offset = "0x74679C", VA = "0x74679C")]
	public void Cluster()
	{
	}
}
[Token(Token = "0x2000010")]
public class MB_TextureCombinerRenderTexture
{
	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MB2_LogLevel LOG_LEVEL;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material mat;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RenderTexture _destinationTexture;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera myCamera;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _padding;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool _isNormalMap;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool _fixOutOfBoundsUVs;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	private bool _doRenderAtlas;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rect[] rs;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<MB_TexSet> textureSets;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int indexOfTexSetToRender;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ShaderTextureProperty _texPropertyName;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private MB3_TextureCombinerNonTextureProperties _resultMaterialTextureBlender;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Texture2D targTex;

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x63336C", Offset = "0x63336C", VA = "0x63336C")]
	public Texture2D DoRenderAtlas(GameObject gameObject, int width, int height, int padding, Rect[] rss, List<MB_TexSet> textureSetss, int indexOfTexSetToRenders, ShaderTextureProperty texPropertyname, MB3_TextureCombinerNonTextureProperties resultMaterialTextureBlender, bool isNormalMap, bool fixOutOfBoundsUVs, bool considerNonTextureProperties, MB3_TextureCombiner texCombiner, MB2_LogLevel LOG_LEV)
	{
		return null;
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x633A68", Offset = "0x633A68", VA = "0x633A68")]
	public void OnRenderObject()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x635F34", Offset = "0x635F34", VA = "0x635F34")]
	private Color32 ConvertNormalFormatFromUnity_ToStandard(Color32 c)
	{
		return default(Color32);
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x636068", Offset = "0x636068", VA = "0x636068")]
	private bool IsOpenGL()
	{
		return default(bool);
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x634A6C", Offset = "0x634A6C", VA = "0x634A6C")]
	private void CopyScaledAndTiledToAtlas(MB_TexSet texSet, MeshBakerMaterialTexture source, Vector2 obUVoffset, Vector2 obUVscale, Rect rec, ShaderTextureProperty texturePropertyName, MB3_TextureCombinerNonTextureProperties resultMatTexBlender)
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x635C0C", Offset = "0x635C0C", VA = "0x635C0C")]
	private void _printTexture(Texture2D t)
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x6360CC", Offset = "0x6360CC", VA = "0x6360CC")]
	public MB_TextureCombinerRenderTexture()
	{
	}
}
[Token(Token = "0x2000011")]
[ExecuteInEditMode]
public class MB3_AtlasPackerRenderTexture : MonoBehaviour
{
	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MB_TextureCombinerRenderTexture fastRenderer;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _doRenderAtlas;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int width;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int height;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int padding;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isNormalMap;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool fixOutOfBoundsUVs;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool considerNonTextureProperties;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MB3_TextureCombinerNonTextureProperties resultMaterialTextureBlender;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Rect[] rects;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D tex1;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<MB_TexSet> textureSets;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int indexOfTexSetToRender;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ShaderTextureProperty texPropertyName;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MB2_LogLevel LOG_LEVEL;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texture2D testTex;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material testMat;

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x7450E0", Offset = "0x7450E0", VA = "0x7450E0")]
	public Texture2D OnRenderAtlas(MB3_TextureCombiner combiner)
	{
		return null;
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x74521C", Offset = "0x74521C", VA = "0x74521C")]
	private void OnRenderObject()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x745260", Offset = "0x745260", VA = "0x745260")]
	public MB3_AtlasPackerRenderTexture()
	{
	}
}
[Serializable]
[Token(Token = "0x2000012")]
public class MB_AtlasesAndRects
{
	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Texture2D[] atlases;

	[NonSerialized]
	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<MB_MaterialAndUVRect> mat2rect_map;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] texPropertyNames;

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x632F80", Offset = "0x632F80", VA = "0x632F80")]
	public MB_AtlasesAndRects()
	{
	}
}
[Serializable]
[Token(Token = "0x2000013")]
public class MB_MultiMaterial
{
	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Material combinedMaterial;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool considerMeshUVs;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Material> sourceMaterials;

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x6332FC", Offset = "0x6332FC", VA = "0x6332FC")]
	public MB_MultiMaterial()
	{
	}
}
[Serializable]
[Token(Token = "0x2000014")]
public class MB_MaterialAndUVRect
{
	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Material material;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rect atlasRect;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string srcObjName;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool allPropsUseSameTiling;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x4A993C", Offset = "0x4A993C")]
	public Rect allPropsUseSameTiling_sourceMaterialTiling;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x4A9974", Offset = "0x4A9974")]
	public Rect allPropsUseSameTiling_samplingEncapsulatinRect;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Rect propsUseDifferntTiling_srcUVsamplingRect;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public MB_TextureTilingTreatment tilingTreatment;

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x632F88", Offset = "0x632F88", VA = "0x632F88")]
	public MB_MaterialAndUVRect(Material mat, Rect destRect, bool allPropsUseSameTiling, Rect sourceMaterialTiling, Rect samplingEncapsulatingRect, Rect srcUVsamplingRect, MB_TextureTilingTreatment treatment, string objName)
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x6330AC", Offset = "0x6330AC", VA = "0x6330AC", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x633114", Offset = "0x633114", VA = "0x633114", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x633250", Offset = "0x633250", VA = "0x633250")]
	public Rect GetEncapsulatingRect()
	{
		return default(Rect);
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x633290", Offset = "0x633290", VA = "0x633290")]
	public Rect GetMaterialTilingRect()
	{
		return default(Rect);
	}
}
[Token(Token = "0x2000015")]
public class MB2_TextureBakeResults : ScriptableObject
{
	[Token(Token = "0x2000365")]
	public class Material2AtlasRectangleMapper
	{
		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MB2_TextureBakeResults tbr;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int[] numTimesMatAppearsInAtlas;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MB_MaterialAndUVRect[] matsAndSrcUVRect;

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0x743C4C", Offset = "0x743C4C", VA = "0x743C4C")]
		public Material2AtlasRectangleMapper(MB2_TextureBakeResults res)
		{
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0x743FA8", Offset = "0x743FA8", VA = "0x743FA8")]
		public bool TryMapMaterialToUVRect(Material mat, Mesh m, int submeshIdx, int idxInResultMats, MB3_MeshCombinerSingle.MeshChannelsCache meshChannelCache, Dictionary<int, MB_Utility.MeshAnalysisResult[]> meshAnalysisCache, out MB_TextureTilingTreatment tilingTreatment, out Rect rectInAtlas, out Rect encapsulatingRectOut, out Rect sourceMaterialTilingOut, ref string errorMsg, MB2_LogLevel logLevel)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0x744A80", Offset = "0x744A80", VA = "0x744A80")]
		private void UpgradeToCurrentVersion(MB2_TextureBakeResults tbr)
		{
		}
	}

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int version;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MB_MaterialAndUVRect[] materialsAndUVRects;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MB_MultiMaterial[] resultMaterials;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool doMultiMaterial;

	[Token(Token = "0x17000020")]
	public static int VERSION
	{
		[Token(Token = "0x60000CA")]
		[Address(RVA = "0x7426EC", Offset = "0x7426EC", VA = "0x7426EC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x7426F4", Offset = "0x7426F4", VA = "0x7426F4")]
	public MB2_TextureBakeResults()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x742720", Offset = "0x742720", VA = "0x742720")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x7427D4", Offset = "0x7427D4", VA = "0x7427D4")]
	public static MB2_TextureBakeResults CreateForMaterialsOnRenderer(GameObject[] gos, List<Material> matsOnTargetRenderer)
	{
		return null;
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x743068", Offset = "0x743068", VA = "0x743068")]
	public bool DoAnyResultMatsUseConsiderMeshUVs()
	{
		return default(bool);
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x743114", Offset = "0x743114", VA = "0x743114")]
	public bool ContainsMaterial(Material m)
	{
		return default(bool);
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x743214", Offset = "0x743214", VA = "0x743214")]
	public string GetDescription()
	{
		return null;
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x743700", Offset = "0x743700", VA = "0x743700")]
	public static bool IsMeshAndMaterialRectEnclosedByAtlasRect(MB_TextureTilingTreatment tilingTreatment, Rect uvR, Rect sourceMaterialTiling, Rect samplingEncapsulatinRect, MB2_LogLevel logLevel)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000016")]
public class MB2_UpdateSkinnedMeshBoundsFromBones : MonoBehaviour
{
	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SkinnedMeshRenderer smr;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform[] bones;

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x744B38", Offset = "0x744B38", VA = "0x744B38")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x744C8C", Offset = "0x744C8C", VA = "0x744C8C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x744D18", Offset = "0x744D18", VA = "0x744D18")]
	public MB2_UpdateSkinnedMeshBoundsFromBones()
	{
	}
}
[Token(Token = "0x2000017")]
public class MB2_UpdateSkinnedMeshBoundsFromBounds : MonoBehaviour
{
	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> objects;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SkinnedMeshRenderer smr;

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x744D20", Offset = "0x744D20", VA = "0x744D20")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x745044", Offset = "0x745044", VA = "0x745044")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x7450D8", Offset = "0x7450D8", VA = "0x7450D8")]
	public MB2_UpdateSkinnedMeshBoundsFromBounds()
	{
	}
}
[Token(Token = "0x2000018")]
public class MB3_BatchPrefabBaker : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000366")]
	public class MB3_PrefabBakerRow
	{
		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject sourcePrefab;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject resultPrefab;

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0x745280", Offset = "0x745280", VA = "0x745280")]
		public MB3_PrefabBakerRow()
		{
		}
	}

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB2_LogLevel LOG_LEVEL;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MB3_PrefabBakerRow[] prefabRows;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string outputPrefabFolder;

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x745270", Offset = "0x745270", VA = "0x745270")]
	public MB3_BatchPrefabBaker()
	{
	}
}
[Token(Token = "0x2000019")]
public class MB3_BoneWeightCopier : MonoBehaviour
{
	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject inputGameObject;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject outputPrefab;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float radius;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SkinnedMeshRenderer seamMesh;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string outputFolder;

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x745288", Offset = "0x745288", VA = "0x745288")]
	public MB3_BoneWeightCopier()
	{
	}
}
[Token(Token = "0x200001A")]
public class MB3_DisableHiddenAnimations : MonoBehaviour
{
	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Animation> animationsToCull;

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x74529C", Offset = "0x74529C", VA = "0x74529C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x74539C", Offset = "0x74539C", VA = "0x74539C")]
	private void OnBecameVisible()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x7454C4", Offset = "0x7454C4", VA = "0x7454C4")]
	private void OnBecameInvisible()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x7455EC", Offset = "0x7455EC", VA = "0x7455EC")]
	public MB3_DisableHiddenAnimations()
	{
	}
}
[Token(Token = "0x200001B")]
public class MB3_MeshBaker : MB3_MeshBakerCommon
{
	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected MB3_MeshCombinerSingle _meshCombiner;

	[Token(Token = "0x17000021")]
	public override MB3_MeshCombiner meshCombiner
	{
		[Token(Token = "0x60000DE")]
		[Address(RVA = "0x746850", Offset = "0x746850", VA = "0x746850", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x746858", Offset = "0x746858", VA = "0x746858")]
	public void BuildSceneMeshObject()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x746890", Offset = "0x746890", VA = "0x746890", Slot = "23")]
	public virtual bool ShowHide(GameObject[] gos, GameObject[] deleteGOs)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x7468D8", Offset = "0x7468D8", VA = "0x7468D8", Slot = "24")]
	public virtual void ApplyShowHide()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x746910", Offset = "0x746910", VA = "0x746910", Slot = "13")]
	public override bool AddDeleteGameObjects(GameObject[] gos, GameObject[] deleteGOs, bool disableRendererInSource)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x7469DC", Offset = "0x7469DC", VA = "0x7469DC", Slot = "14")]
	public override bool AddDeleteGameObjectsByID(GameObject[] gos, int[] deleteGOinstanceIDs, bool disableRendererInSource)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x746AA8", Offset = "0x746AA8", VA = "0x746AA8")]
	public MB3_MeshBaker()
	{
	}
}
[Token(Token = "0x200001C")]
public abstract class MB3_MeshBakerCommon : MB3_MeshBakerRoot
{
	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> objsToMesh;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool useObjsToMeshFromTexBaker;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool clearBuffersAfterBake;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string bakeAssetsInPlaceFolderPath;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public GameObject resultPrefab;

	[Token(Token = "0x17000022")]
	public abstract MB3_MeshCombiner meshCombiner
	{
		[Token(Token = "0x60000E5")]
		get;
	}

	[Token(Token = "0x17000023")]
	public override MB2_TextureBakeResults textureBakeResults
	{
		[Token(Token = "0x60000E6")]
		[Address(RVA = "0x746B7C", Offset = "0x746B7C", VA = "0x746B7C", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000E7")]
		[Address(RVA = "0x746BB8", Offset = "0x746BB8", VA = "0x746BB8", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x746C00", Offset = "0x746C00", VA = "0x746C00", Slot = "6")]
	public override List<GameObject> GetObjectsToCombine()
	{
		return null;
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x746DFC", Offset = "0x746DFC", VA = "0x746DFC")]
	public void EnableDisableSourceObjectRenderers(bool show)
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x747150", Offset = "0x747150", VA = "0x747150", Slot = "8")]
	public virtual void ClearMesh()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x747190", Offset = "0x747190", VA = "0x747190", Slot = "9")]
	public virtual void DestroyMesh()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x7471D0", Offset = "0x7471D0", VA = "0x7471D0", Slot = "10")]
	public virtual void DestroyMeshEditor(MB2_EditorMethodsInterface editorMethods)
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x74721C", Offset = "0x74721C", VA = "0x74721C", Slot = "11")]
	public virtual int GetNumObjectsInCombined()
	{
		return default(int);
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x74725C", Offset = "0x74725C", VA = "0x74725C", Slot = "12")]
	public virtual int GetNumVerticesFor(GameObject go)
	{
		return default(int);
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x7472A8", Offset = "0x7472A8", VA = "0x7472A8")]
	public MB3_TextureBaker GetTextureBaker()
	{
		return null;
	}

	[Token(Token = "0x60000F0")]
	public abstract bool AddDeleteGameObjects(GameObject[] gos, GameObject[] deleteGOs, bool disableRendererInSource = true);

	[Token(Token = "0x60000F1")]
	public abstract bool AddDeleteGameObjectsByID(GameObject[] gos, int[] deleteGOinstanceIDs, bool disableRendererInSource = true);

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x7473E0", Offset = "0x7473E0", VA = "0x7473E0", Slot = "15")]
	public virtual void Apply([Optional] MB3_MeshCombiner.GenerateUV2Delegate uv2GenerationMethod)
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x7474B0", Offset = "0x7474B0", VA = "0x7474B0", Slot = "16")]
	public virtual void Apply(bool triangles, bool vertices, bool normals, bool tangents, bool uvs, bool uv2, bool uv3, bool uv4, bool colors, bool bones = false, bool blendShapesFlag = false, [Optional] MB3_MeshCombiner.GenerateUV2Delegate uv2GenerationMethod)
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x747618", Offset = "0x747618", VA = "0x747618", Slot = "17")]
	public virtual bool CombinedMeshContains(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x747664", Offset = "0x747664", VA = "0x747664", Slot = "18")]
	public virtual void UpdateGameObjects(GameObject[] gos, bool recalcBounds = true, bool updateVertices = true, bool updateNormals = true, bool updateTangents = true, bool updateUV = false, bool updateUV1 = false, bool updateUV2 = false, bool updateColors = false, bool updateSkinningInfo = false)
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x7477B8", Offset = "0x7477B8", VA = "0x7477B8", Slot = "19")]
	public virtual void UpdateSkinnedMeshApproximateBounds()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x747820", Offset = "0x747820", VA = "0x747820", Slot = "20")]
	public virtual void UpdateSkinnedMeshApproximateBoundsFromBones()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x747888", Offset = "0x747888", VA = "0x747888", Slot = "21")]
	public virtual void UpdateSkinnedMeshApproximateBoundsFromBounds()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x7478F0", Offset = "0x7478F0", VA = "0x7478F0", Slot = "22")]
	protected virtual bool _ValidateForUpdateSkinnedMeshBounds()
	{
		return default(bool);
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x746B0C", Offset = "0x746B0C", VA = "0x746B0C")]
	protected MB3_MeshBakerCommon()
	{
	}
}
[Token(Token = "0x200001D")]
public class MB3_MeshBakerGrouper : MonoBehaviour
{
	[Token(Token = "0x2000367")]
	public enum ClusterType
	{
		[Token(Token = "0x400162A")]
		none,
		[Token(Token = "0x400162B")]
		grid,
		[Token(Token = "0x400162C")]
		pie,
		[Token(Token = "0x400162D")]
		agglomerative
	}

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBakerGrouperCore grouper;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ClusterType clusterType;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GrouperData data;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Bounds sourceObjectBounds;

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x747AF8", Offset = "0x747AF8", VA = "0x747AF8")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x747BB0", Offset = "0x747BB0", VA = "0x747BB0")]
	public MB3_MeshBakerGrouperCore CreateGrouper(ClusterType t, GrouperData data)
	{
		return null;
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x747D58", Offset = "0x747D58", VA = "0x747D58")]
	public MB3_MeshBakerGrouper()
	{
	}
}
[Token(Token = "0x200001E")]
public abstract class MB3_MeshBakerRoot : MonoBehaviour
{
	[Token(Token = "0x2000368")]
	public class ZSortObjects
	{
		[Token(Token = "0x2000535")]
		public class Item
		{
			[Token(Token = "0x4001D23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject go;

			[Token(Token = "0x4001D24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 point;

			[Token(Token = "0x6002087")]
			[Address(RVA = "0x748D98", Offset = "0x748D98", VA = "0x748D98")]
			public Item()
			{
			}
		}

		[Token(Token = "0x2000536")]
		public class ItemComparer : IComparer<Item>
		{
			[Token(Token = "0x6002088")]
			[Address(RVA = "0x748DB0", Offset = "0x748DB0", VA = "0x748DB0", Slot = "4")]
			public int Compare(Item a, Item b)
			{
				return default(int);
			}

			[Token(Token = "0x6002089")]
			[Address(RVA = "0x748DA0", Offset = "0x748DA0", VA = "0x748DA0")]
			public ItemComparer()
			{
			}
		}

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 sortAxis;

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0x7488BC", Offset = "0x7488BC", VA = "0x7488BC")]
		public void SortByDistanceAlongAxis(List<GameObject> gos)
		{
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0x748DA8", Offset = "0x748DA8", VA = "0x748DA8")]
		public ZSortObjects()
		{
		}
	}

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool DO_INTEGRITY_CHECKS;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 sortAxis;

	[Token(Token = "0x17000024")]
	[HideInInspector]
	public abstract MB2_TextureBakeResults textureBakeResults
	{
		[Token(Token = "0x60000FE")]
		get;
		[Token(Token = "0x60000FF")]
		set;
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x747E54", Offset = "0x747E54", VA = "0x747E54", Slot = "6")]
	public virtual List<GameObject> GetObjectsToCombine()
	{
		return null;
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x747E5C", Offset = "0x747E5C", VA = "0x747E5C")]
	public static bool DoCombinedValidate(MB3_MeshBakerRoot mom, MB_ObjsToCombineTypes objToCombineType, MB2_EditorMethodsInterface editorMethods, MB2_ValidationLevel validationLevel)
	{
		return default(bool);
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x747AF0", Offset = "0x747AF0", VA = "0x747AF0")]
	protected MB3_MeshBakerRoot()
	{
	}
}
[Token(Token = "0x200001F")]
public class MB3_MultiMeshBaker : MB3_MeshBakerCommon
{
	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected MB3_MultiMeshCombiner _meshCombiner;

	[Token(Token = "0x17000025")]
	public override MB3_MeshCombiner meshCombiner
	{
		[Token(Token = "0x6000104")]
		[Address(RVA = "0x748E54", Offset = "0x748E54", VA = "0x748E54", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x748E5C", Offset = "0x748E5C", VA = "0x748E5C", Slot = "13")]
	public override bool AddDeleteGameObjects(GameObject[] gos, GameObject[] deleteGOs, bool disableRendererInSource)
	{
		return default(bool);
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x749010", Offset = "0x749010", VA = "0x749010", Slot = "14")]
	public override bool AddDeleteGameObjectsByID(GameObject[] gos, int[] deleteGOs, bool disableRendererInSource)
	{
		return default(bool);
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x7491C4", Offset = "0x7491C4", VA = "0x7491C4")]
	public MB3_MultiMeshBaker()
	{
	}
}
[Token(Token = "0x2000020")]
public class MB3_TextureBaker : MB3_MeshBakerRoot
{
	[Token(Token = "0x2000369")]
	public delegate void OnCombinedTexturesCoroutineSuccess();

	[Token(Token = "0x200036A")]
	public delegate void OnCombinedTexturesCoroutineFail();

	[Token(Token = "0x200036B")]
	public class CreateAtlasesCoroutineResult
	{
		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool success;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool isFinished;

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0x6326D0", Offset = "0x6326D0", VA = "0x6326D0")]
		public CreateAtlasesCoroutineResult()
		{
		}
	}

	[Token(Token = "0x200036C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8994", Offset = "0x4A8994")]
	private sealed class <CreateAtlasesCoroutine>d__94 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CreateAtlasesCoroutineResult coroutineResult;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MB3_TextureBaker <>4__this;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float maxTimePerFrame;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool saveAtlasesAsAssets;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ProgressUpdateDelegate progressInfo;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MB2_EditorMethodsInterface editorMethods;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MB3_TextureCombiner <combiner>5__2;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int <i>5__3;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult <coroutineResult2>5__4;

		[Token(Token = "0x17000148")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A7C")]
			[Address(RVA = "0x74DF78", Offset = "0x74DF78", VA = "0x74DF78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000149")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A7E")]
			[Address(RVA = "0x74DFE8", Offset = "0x74DFE8", VA = "0x74DFE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0x74BBF4", Offset = "0x74BBF4", VA = "0x74BBF4")]
		[DebuggerHidden]
		public <CreateAtlasesCoroutine>d__94(int <>1__state)
		{
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0x74D118", Offset = "0x74D118", VA = "0x74D118", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0x74D11C", Offset = "0x74D11C", VA = "0x74D11C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0x74DF80", Offset = "0x74DF80", VA = "0x74DF80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public MB2_LogLevel LOG_LEVEL;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected MB2_TextureBakeResults _textureBakeResults;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected int _atlasPadding;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	protected int _maxAtlasSize;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected bool _useMaxAtlasWidthOverride;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	protected int _maxAtlasWidthOverride;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected bool _useMaxAtlasHeightOverride;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	protected int _maxAtlasHeightOverride;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected bool _resizePowerOfTwoTextures;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[SerializeField]
	protected bool _fixOutOfBoundsUVs;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	protected int _maxTilingBakeSize;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	protected MB2_PackingAlgorithmEnum _packingAlgorithm;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	protected bool _meshBakerTexturePackerForcePowerOfTwo;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	protected List<ShaderTextureProperty> _customShaderProperties;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	protected List<string> _customShaderPropNames_Depricated;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	protected bool _doMultiMaterial;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	[SerializeField]
	protected bool _doMultiMaterialSplitAtlasesIfTooBig;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	[SerializeField]
	protected bool _doMultiMaterialSplitAtlasesIfOBUVs;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	protected Material _resultMaterial;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	protected bool _considerNonTextureProperties;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	[SerializeField]
	protected bool _doSuggestTreatment;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private CreateAtlasesCoroutineResult _coroutineResult;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public MB_MultiMaterial[] resultMaterials;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public List<GameObject> objsToMesh;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public OnCombinedTexturesCoroutineSuccess onBuiltAtlasesSuccess;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public OnCombinedTexturesCoroutineFail onBuiltAtlasesFail;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public MB_AtlasesAndRects[] OnCombinedTexturesCoroutineAtlasesAndRects;

	[Token(Token = "0x17000026")]
	public override MB2_TextureBakeResults textureBakeResults
	{
		[Token(Token = "0x6000108")]
		[Address(RVA = "0x74B4F8", Offset = "0x74B4F8", VA = "0x74B4F8", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000109")]
		[Address(RVA = "0x74B500", Offset = "0x74B500", VA = "0x74B500", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x17000027")]
	public virtual int atlasPadding
	{
		[Token(Token = "0x600010A")]
		[Address(RVA = "0x74B508", Offset = "0x74B508", VA = "0x74B508", Slot = "7")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600010B")]
		[Address(RVA = "0x74B510", Offset = "0x74B510", VA = "0x74B510", Slot = "8")]
		set
		{
		}
	}

	[Token(Token = "0x17000028")]
	public virtual int maxAtlasSize
	{
		[Token(Token = "0x600010C")]
		[Address(RVA = "0x74B518", Offset = "0x74B518", VA = "0x74B518", Slot = "9")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600010D")]
		[Address(RVA = "0x74B520", Offset = "0x74B520", VA = "0x74B520", Slot = "10")]
		set
		{
		}
	}

	[Token(Token = "0x17000029")]
	public virtual bool useMaxAtlasWidthOverride
	{
		[Token(Token = "0x600010E")]
		[Address(RVA = "0x74B528", Offset = "0x74B528", VA = "0x74B528", Slot = "11")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600010F")]
		[Address(RVA = "0x74B530", Offset = "0x74B530", VA = "0x74B530", Slot = "12")]
		set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public virtual int maxAtlasWidthOverride
	{
		[Token(Token = "0x6000110")]
		[Address(RVA = "0x74B53C", Offset = "0x74B53C", VA = "0x74B53C", Slot = "13")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000111")]
		[Address(RVA = "0x74B544", Offset = "0x74B544", VA = "0x74B544", Slot = "14")]
		set
		{
		}
	}

	[Token(Token = "0x1700002B")]
	public virtual bool useMaxAtlasHeightOverride
	{
		[Token(Token = "0x6000112")]
		[Address(RVA = "0x74B54C", Offset = "0x74B54C", VA = "0x74B54C", Slot = "15")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000113")]
		[Address(RVA = "0x74B554", Offset = "0x74B554", VA = "0x74B554", Slot = "16")]
		set
		{
		}
	}

	[Token(Token = "0x1700002C")]
	public virtual int maxAtlasHeightOverride
	{
		[Token(Token = "0x6000114")]
		[Address(RVA = "0x74B560", Offset = "0x74B560", VA = "0x74B560", Slot = "17")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000115")]
		[Address(RVA = "0x74B568", Offset = "0x74B568", VA = "0x74B568", Slot = "18")]
		set
		{
		}
	}

	[Token(Token = "0x1700002D")]
	public virtual bool resizePowerOfTwoTextures
	{
		[Token(Token = "0x6000116")]
		[Address(RVA = "0x74B570", Offset = "0x74B570", VA = "0x74B570", Slot = "19")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000117")]
		[Address(RVA = "0x74B578", Offset = "0x74B578", VA = "0x74B578", Slot = "20")]
		set
		{
		}
	}

	[Token(Token = "0x1700002E")]
	public virtual bool fixOutOfBoundsUVs
	{
		[Token(Token = "0x6000118")]
		[Address(RVA = "0x74B584", Offset = "0x74B584", VA = "0x74B584", Slot = "21")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000119")]
		[Address(RVA = "0x74B58C", Offset = "0x74B58C", VA = "0x74B58C", Slot = "22")]
		set
		{
		}
	}

	[Token(Token = "0x1700002F")]
	public virtual int maxTilingBakeSize
	{
		[Token(Token = "0x600011A")]
		[Address(RVA = "0x74B598", Offset = "0x74B598", VA = "0x74B598", Slot = "23")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600011B")]
		[Address(RVA = "0x74B5A0", Offset = "0x74B5A0", VA = "0x74B5A0", Slot = "24")]
		set
		{
		}
	}

	[Token(Token = "0x17000030")]
	public virtual MB2_PackingAlgorithmEnum packingAlgorithm
	{
		[Token(Token = "0x600011C")]
		[Address(RVA = "0x74B5A8", Offset = "0x74B5A8", VA = "0x74B5A8", Slot = "25")]
		get
		{
			return default(MB2_PackingAlgorithmEnum);
		}
		[Token(Token = "0x600011D")]
		[Address(RVA = "0x74B5B0", Offset = "0x74B5B0", VA = "0x74B5B0", Slot = "26")]
		set
		{
		}
	}

	[Token(Token = "0x17000031")]
	public bool meshBakerTexturePackerForcePowerOfTwo
	{
		[Token(Token = "0x600011E")]
		[Address(RVA = "0x74B5B8", Offset = "0x74B5B8", VA = "0x74B5B8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600011F")]
		[Address(RVA = "0x74B5C0", Offset = "0x74B5C0", VA = "0x74B5C0")]
		set
		{
		}
	}

	[Token(Token = "0x17000032")]
	public virtual List<ShaderTextureProperty> customShaderProperties
	{
		[Token(Token = "0x6000120")]
		[Address(RVA = "0x74B5CC", Offset = "0x74B5CC", VA = "0x74B5CC", Slot = "27")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000121")]
		[Address(RVA = "0x74B5D4", Offset = "0x74B5D4", VA = "0x74B5D4", Slot = "28")]
		set
		{
		}
	}

	[Token(Token = "0x17000033")]
	public virtual List<string> customShaderPropNames
	{
		[Token(Token = "0x6000122")]
		[Address(RVA = "0x74B5DC", Offset = "0x74B5DC", VA = "0x74B5DC", Slot = "29")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000123")]
		[Address(RVA = "0x74B5E4", Offset = "0x74B5E4", VA = "0x74B5E4", Slot = "30")]
		set
		{
		}
	}

	[Token(Token = "0x17000034")]
	public virtual bool doMultiMaterial
	{
		[Token(Token = "0x6000124")]
		[Address(RVA = "0x74B5EC", Offset = "0x74B5EC", VA = "0x74B5EC", Slot = "31")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000125")]
		[Address(RVA = "0x74B5F4", Offset = "0x74B5F4", VA = "0x74B5F4", Slot = "32")]
		set
		{
		}
	}

	[Token(Token = "0x17000035")]
	public virtual bool doMultiMaterialSplitAtlasesIfTooBig
	{
		[Token(Token = "0x6000126")]
		[Address(RVA = "0x74B600", Offset = "0x74B600", VA = "0x74B600", Slot = "33")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000127")]
		[Address(RVA = "0x74B608", Offset = "0x74B608", VA = "0x74B608", Slot = "34")]
		set
		{
		}
	}

	[Token(Token = "0x17000036")]
	public virtual bool doMultiMaterialSplitAtlasesIfOBUVs
	{
		[Token(Token = "0x6000128")]
		[Address(RVA = "0x74B614", Offset = "0x74B614", VA = "0x74B614", Slot = "35")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000129")]
		[Address(RVA = "0x74B61C", Offset = "0x74B61C", VA = "0x74B61C", Slot = "36")]
		set
		{
		}
	}

	[Token(Token = "0x17000037")]
	public virtual Material resultMaterial
	{
		[Token(Token = "0x600012A")]
		[Address(RVA = "0x74B628", Offset = "0x74B628", VA = "0x74B628", Slot = "37")]
		get
		{
			return null;
		}
		[Token(Token = "0x600012B")]
		[Address(RVA = "0x74B630", Offset = "0x74B630", VA = "0x74B630", Slot = "38")]
		set
		{
		}
	}

	[Token(Token = "0x17000038")]
	public bool considerNonTextureProperties
	{
		[Token(Token = "0x600012C")]
		[Address(RVA = "0x74B638", Offset = "0x74B638", VA = "0x74B638")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600012D")]
		[Address(RVA = "0x74B640", Offset = "0x74B640", VA = "0x74B640")]
		set
		{
		}
	}

	[Token(Token = "0x17000039")]
	public bool doSuggestTreatment
	{
		[Token(Token = "0x600012E")]
		[Address(RVA = "0x74B64C", Offset = "0x74B64C", VA = "0x74B64C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600012F")]
		[Address(RVA = "0x74B654", Offset = "0x74B654", VA = "0x74B654")]
		set
		{
		}
	}

	[Token(Token = "0x1700003A")]
	public CreateAtlasesCoroutineResult CoroutineResult
	{
		[Token(Token = "0x6000130")]
		[Address(RVA = "0x74B660", Offset = "0x74B660", VA = "0x74B660")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x74B668", Offset = "0x74B668", VA = "0x74B668", Slot = "6")]
	public override List<GameObject> GetObjectsToCombine()
	{
		return null;
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x74B6DC", Offset = "0x74B6DC", VA = "0x74B6DC")]
	public MB_AtlasesAndRects[] CreateAtlases()
	{
		return null;
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x74BAF0", Offset = "0x74BAF0", VA = "0x74BAF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4AFB9C", Offset = "0x4AFB9C")]
	public IEnumerator CreateAtlasesCoroutine(ProgressUpdateDelegate progressInfo, CreateAtlasesCoroutineResult coroutineResult, bool saveAtlasesAsAssets = false, [Optional] MB2_EditorMethodsInterface editorMethods, float maxTimePerFrame = 0.01f)
	{
		return null;
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x74B6EC", Offset = "0x74B6EC", VA = "0x74B6EC")]
	public MB_AtlasesAndRects[] CreateAtlases(ProgressUpdateDelegate progressInfo, bool saveAtlasesAsAssets = false, [Optional] MB2_EditorMethodsInterface editorMethods)
	{
		return null;
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x74BC20", Offset = "0x74BC20", VA = "0x74BC20")]
	private void unpackMat2RectMap(MB2_TextureBakeResults tbr)
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x74BED4", Offset = "0x74BED4", VA = "0x74BED4")]
	public MB3_TextureCombiner CreateAndConfigureTextureCombiner()
	{
		return null;
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x74C160", Offset = "0x74C160", VA = "0x74C160")]
	public static void ConfigureNewMaterialToMatchOld(Material newMat, Material original)
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x74C5B4", Offset = "0x74C5B4", VA = "0x74C5B4")]
	private string PrintSet(HashSet<Material> s)
	{
		return null;
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x74C738", Offset = "0x74C738", VA = "0x74C738")]
	private bool _ValidateResultMaterials()
	{
		return default(bool);
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x74D00C", Offset = "0x74D00C", VA = "0x74D00C")]
	public MB3_TextureBaker()
	{
	}
}
[Serializable]
[Token(Token = "0x2000021")]
public class PlaygroundRecorderData : ScriptableObject
{
	[Token(Token = "0x200036D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A89A4", Offset = "0x4A89A4")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlaygroundRecorderData <>4__this;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<RecordedFrame> recordedFrames;

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0x662258", Offset = "0x662258", VA = "0x662258")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0x6623E0", Offset = "0x6623E0", VA = "0x6623E0")]
		internal void <SerializeAsync>b__0()
		{
		}
	}

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public float version;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SerializedFrame[] serializedFrames;

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x661FC4", Offset = "0x661FC4", VA = "0x661FC4")]
	public void Serialize(List<RecordedFrame> recordedFrames)
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x662164", Offset = "0x662164", VA = "0x662164")]
	public void SerializeAsync(List<RecordedFrame> recordedFrames)
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x662260", Offset = "0x662260", VA = "0x662260")]
	public List<RecordedFrame> CloneAsRecordedFrames()
	{
		return null;
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x662388", Offset = "0x662388", VA = "0x662388")]
	public void Clear()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x662390", Offset = "0x662390", VA = "0x662390")]
	public static PlaygroundRecorderData New()
	{
		return null;
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x6623D8", Offset = "0x6623D8", VA = "0x6623D8")]
	public PlaygroundRecorderData()
	{
	}
}
[Token(Token = "0x2000022")]
[ExecuteInEditMode]
public class PlaygroundTrailParent : MonoBehaviour
{
	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlaygroundTrails trailsReference;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _gameObject;

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x6687E8", Offset = "0x6687E8", VA = "0x6687E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x668810", Offset = "0x668810", VA = "0x668810")]
	private void Update()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x668920", Offset = "0x668920", VA = "0x668920")]
	public PlaygroundTrailParent()
	{
	}
}
[Token(Token = "0x2000023")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4A7D3C", Offset = "0x4A7D3C")]
public class PlaygroundFlickeringPointLight : MonoBehaviour
{
	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float flickerSpeed;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float minimumLight;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maximumLight;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Light _thisLight;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _targetLightValue;

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x661210", Offset = "0x661210", VA = "0x661210")]
	private void Start()
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x6612A4", Offset = "0x6612A4", VA = "0x6612A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x661278", Offset = "0x661278", VA = "0x661278")]
	private void SetTargetLightValue()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x661414", Offset = "0x661414", VA = "0x661414")]
	public PlaygroundFlickeringPointLight()
	{
	}
}
[Token(Token = "0x2000024")]
public class PlaygroundSineOverflow : MonoBehaviour
{
	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlaygroundParticlesC particles;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float amount;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 initialOverflow;

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x662588", Offset = "0x662588", VA = "0x662588")]
	private void Start()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x6625FC", Offset = "0x6625FC", VA = "0x6625FC")]
	private void Update()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x662750", Offset = "0x662750", VA = "0x662750")]
	public PlaygroundSineOverflow()
	{
	}
}
[Token(Token = "0x2000025")]
public class PlaygroundSineRotation : MonoBehaviour
{
	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform thisTransform;

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x662764", Offset = "0x662764", VA = "0x662764")]
	private void Start()
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x66278C", Offset = "0x66278C", VA = "0x66278C")]
	private void Update()
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x662874", Offset = "0x662874", VA = "0x662874")]
	public PlaygroundSineRotation()
	{
	}
}
[Token(Token = "0x2000026")]
public class PlaygroundSwarmPositioning : MonoBehaviour
{
	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float swarmStrength;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float swarmSpeed;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform swarmTransform;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 _velocity;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform _thisTransform;

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x668538", Offset = "0x668538", VA = "0x668538")]
	private void Start()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x668560", Offset = "0x668560", VA = "0x668560")]
	private void Update()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x6687D0", Offset = "0x6687D0", VA = "0x6687D0")]
	public PlaygroundSwarmPositioning()
	{
	}
}
[Token(Token = "0x2000027")]
public class PlaygroundBrushPresetC : MonoBehaviour
{
	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string presetName;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D texture;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float scale;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public BRUSHDETAILC detail;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float distance;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float spacing;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool exceedMaxStopsPaint;

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x66119C", Offset = "0x66119C", VA = "0x66119C")]
	public PlaygroundBrushPresetC()
	{
	}
}
[Token(Token = "0x2000028")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4A7DA0", Offset = "0x4A7DA0")]
public class PlaygroundPresetCircleShotC : MonoBehaviour
{
	[Token(Token = "0x200036E")]
	public enum WhenDoneCircleShot
	{
		[Token(Token = "0x400163F")]
		Nothing,
		[Token(Token = "0x4001640")]
		Inactivate,
		[Token(Token = "0x4001641")]
		Destroy
	}

	[Token(Token = "0x200036F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A89B4", Offset = "0x4A89B4")]
	private sealed class <Shoot>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlaygroundPresetCircleShotC <>4__this;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <rotationSpeed>5__2;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timeDone>5__3;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <c>5__4;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <p>5__5;

		[Token(Token = "0x1700014A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A84")]
			[Address(RVA = "0x661C04", Offset = "0x661C04", VA = "0x661C04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A86")]
			[Address(RVA = "0x661C74", Offset = "0x661C74", VA = "0x661C74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0x661534", Offset = "0x661534", VA = "0x661534")]
		[DebuggerHidden]
		public <Shoot>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0x6615F4", Offset = "0x6615F4", VA = "0x6615F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0x6615F8", Offset = "0x6615F8", VA = "0x6615F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0x661C0C", Offset = "0x661C0C", VA = "0x661C0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int numberOfParticles;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float force;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int cycles;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 rotationNormal;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float minimumLifetime;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float maximumLifetime;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color color;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float yieldBeforeEmission;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float yieldBetweenShots;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float yieldBetweenCycles;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public WhenDoneCircleShot whenDone;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform thisTransform;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PlaygroundParticlesC particles;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isSameLifetime;

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x661434", Offset = "0x661434", VA = "0x661434")]
	private void Start()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x6614C0", Offset = "0x6614C0", VA = "0x6614C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4AFC00", Offset = "0x4AFC00")]
	private IEnumerator Shoot()
	{
		return null;
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x661560", Offset = "0x661560", VA = "0x661560")]
	public PlaygroundPresetCircleShotC()
	{
	}
}
[Token(Token = "0x2000029")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4A7E14", Offset = "0x4A7E14")]
public class PlaygroundPresetLaserC : MonoBehaviour
{
	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float laserMaxDistance;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Gradient laserColor;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int particleCount;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public LayerMask collisionLayer;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlaygroundParticlesC particles;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int previousParticleCount;

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x661C7C", Offset = "0x661C7C", VA = "0x661C7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x661CF0", Offset = "0x661CF0", VA = "0x661CF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x661F80", Offset = "0x661F80", VA = "0x661F80")]
	public PlaygroundPresetLaserC()
	{
	}
}
[Token(Token = "0x200002A")]
public class AchievementSample : MonoBehaviour
{
	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text dataOutput;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField getDefinitionsByNameInputField;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InputField getProgressByNameInputField;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InputField unLockInputField;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public InputField addCountInputField;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public InputField addFieldsInputField;

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x6B2DF0", Offset = "0x6B2DF0", VA = "0x6B2DF0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x6B2E50", Offset = "0x6B2E50", VA = "0x6B2E50")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x6B2EB0", Offset = "0x6B2EB0", VA = "0x6B2EB0")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x6B309C", Offset = "0x6B309C", VA = "0x6B309C")]
	private void Update()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x6B30A8", Offset = "0x6B30A8", VA = "0x6B30A8")]
	public void AsyncInitialize()
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x6B3130", Offset = "0x6B3130", VA = "0x6B3130")]
	public void GetDefinitionsByName()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x6B334C", Offset = "0x6B334C", VA = "0x6B334C")]
	public void GetProgressByName()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x6B3568", Offset = "0x6B3568", VA = "0x6B3568")]
	public void GetAllDefinitions()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x6B369C", Offset = "0x6B369C", VA = "0x6B369C")]
	public void GetAllProgress()
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x6B37D0", Offset = "0x6B37D0", VA = "0x6B37D0")]
	public void UnLock()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x6B3990", Offset = "0x6B3990", VA = "0x6B3990")]
	public void AddCount()
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x6B3D00", Offset = "0x6B3D00", VA = "0x6B3D00")]
	public void AddFields()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x6B2FF0", Offset = "0x6B2FF0", VA = "0x6B2FF0")]
	private void achievementInit()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x6B35F0", Offset = "0x6B35F0", VA = "0x6B35F0")]
	private void getAchievementAllDefinition()
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x6B3724", Offset = "0x6B3724", VA = "0x6B3724")]
	private void getAchievementAllProgress()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x6B3EA0", Offset = "0x6B3EA0", VA = "0x6B3EA0")]
	private void addFieldsAchievement(string achievementName, string fields)
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x6B3C18", Offset = "0x6B3C18", VA = "0x6B3C18")]
	private void addCountAchievement(string achievementName, string count)
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x6B38DC", Offset = "0x6B38DC", VA = "0x6B38DC")]
	private void unlockAchievement(string achievementName)
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x6B34B4", Offset = "0x6B34B4", VA = "0x6B34B4")]
	private void getAchievementProgress(string[] achievementNames)
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x6B3298", Offset = "0x6B3298", VA = "0x6B3298")]
	private void getAchievementDefinition(string[] achievementNames)
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x6B2F28", Offset = "0x6B2F28", VA = "0x6B2F28")]
	private void printOutputLine(string newLine)
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x6B3F5C", Offset = "0x6B3F5C", VA = "0x6B3F5C")]
	private void achievementAllDefinitionCallback(Pvr_Message<Pvr_AchievementDefinitionList> msg)
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x6B488C", Offset = "0x6B488C", VA = "0x6B488C")]
	private void achievementAllProgressCallback(Pvr_Message<Pvr_AchievementProgressList> msg)
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x6B4FA8", Offset = "0x6B4FA8", VA = "0x6B4FA8")]
	private void achievementFieldsCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x6B52C4", Offset = "0x6B52C4", VA = "0x6B52C4")]
	private void achievementCountCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x6B55E0", Offset = "0x6B55E0", VA = "0x6B55E0")]
	private void achievementUnlockCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x6B58FC", Offset = "0x6B58FC", VA = "0x6B58FC")]
	private void achievementProgressCallback(Pvr_Message<Pvr_AchievementProgressList> msg)
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x6B5EF4", Offset = "0x6B5EF4", VA = "0x6B5EF4")]
	private void achievementDefinitionCallback(Pvr_Message<Pvr_AchievementDefinitionList> msg)
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x6B6564", Offset = "0x6B6564", VA = "0x6B6564")]
	private void initAchievementCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x6B6880", Offset = "0x6B6880", VA = "0x6B6880")]
	private void LoginCallback(string LoginInfo)
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x6B6938", Offset = "0x6B6938", VA = "0x6B6938")]
	public AchievementSample()
	{
	}
}
[Token(Token = "0x200002B")]
public class Pvr_Controller : MonoBehaviour
{
	[Token(Token = "0x2000370")]
	public enum UserHandNess
	{
		[Token(Token = "0x400164A")]
		Right,
		[Token(Token = "0x400164B")]
		Left
	}

	[Token(Token = "0x2000371")]
	public enum GazeType
	{
		[Token(Token = "0x400164D")]
		Never,
		[Token(Token = "0x400164E")]
		DuringMotion,
		[Token(Token = "0x400164F")]
		Always
	}

	[Token(Token = "0x2000372")]
	public enum ControllerAxis
	{
		[Token(Token = "0x4001651")]
		Controller,
		[Token(Token = "0x4001652")]
		Wrist,
		[Token(Token = "0x4001653")]
		Elbow,
		[Token(Token = "0x4001654")]
		Shoulder
	}

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject controller0;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject controller1;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static UserHandNess handness;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ControllerAxis Axis;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GazeType Gazetype;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4A9B3C", Offset = "0x4A9B3C")]
	public float ElbowHeight;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4A9B58", Offset = "0x4A9B58")]
	public float ElbowDepth;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4A9B74", Offset = "0x4A9B74")]
	public float PointerTiltAngle;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float mouseX;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float mouseY;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float mouseZ;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] inputDirection;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9B8C", Offset = "0x4A9B8C")]
	private static Vector3 <pointerPosition>k__BackingField;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9B9C", Offset = "0x4A9B9C")]
	private static Quaternion <pointerRotation>k__BackingField;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9BAC", Offset = "0x4A9BAC")]
	private static Vector3 <elbowPosition>k__BackingField;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9BBC", Offset = "0x4A9BBC")]
	private static Quaternion <elbowRotation>k__BackingField;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9BCC", Offset = "0x4A9BCC")]
	private static Vector3 <wristPosition>k__BackingField;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9BDC", Offset = "0x4A9BDC")]
	private static Quaternion <wristRotation>k__BackingField;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9BEC", Offset = "0x4A9BEC")]
	private static Vector3 <shoulderPosition>k__BackingField;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9BFC", Offset = "0x4A9BFC")]
	private static Quaternion <shoulderRotation>k__BackingField;

	[Token(Token = "0x1700003B")]
	public static Vector3 pointerPosition
	{
		[Token(Token = "0x600018A")]
		[Address(RVA = "0x9D2B14", Offset = "0x9D2B14", VA = "0x9D2B14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFC64", Offset = "0x4AFC64")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600018B")]
		[Address(RVA = "0x9D2A30", Offset = "0x9D2A30", VA = "0x9D2A30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFC74", Offset = "0x4AFC74")]
		set
		{
		}
	}

	[Token(Token = "0x1700003C")]
	public static Quaternion pointerRotation
	{
		[Token(Token = "0x600018C")]
		[Address(RVA = "0x9D2B68", Offset = "0x9D2B68", VA = "0x9D2B68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFC84", Offset = "0x4AFC84")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x600018D")]
		[Address(RVA = "0x9D2AA0", Offset = "0x9D2AA0", VA = "0x9D2AA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFC94", Offset = "0x4AFC94")]
		set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	public static Vector3 elbowPosition
	{
		[Token(Token = "0x600018E")]
		[Address(RVA = "0x9D2E2C", Offset = "0x9D2E2C", VA = "0x9D2E2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFCA4", Offset = "0x4AFCA4")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600018F")]
		[Address(RVA = "0x9D2D48", Offset = "0x9D2D48", VA = "0x9D2D48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFCB4", Offset = "0x4AFCB4")]
		set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public static Quaternion elbowRotation
	{
		[Token(Token = "0x6000190")]
		[Address(RVA = "0x9D2E80", Offset = "0x9D2E80", VA = "0x9D2E80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFCC4", Offset = "0x4AFCC4")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000191")]
		[Address(RVA = "0x9D2DB8", Offset = "0x9D2DB8", VA = "0x9D2DB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFCD4", Offset = "0x4AFCD4")]
		set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	public static Vector3 wristPosition
	{
		[Token(Token = "0x6000192")]
		[Address(RVA = "0x9D2CA0", Offset = "0x9D2CA0", VA = "0x9D2CA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFCE4", Offset = "0x4AFCE4")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000193")]
		[Address(RVA = "0x9D2BBC", Offset = "0x9D2BBC", VA = "0x9D2BBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFCF4", Offset = "0x4AFCF4")]
		set
		{
		}
	}

	[Token(Token = "0x17000040")]
	public static Quaternion wristRotation
	{
		[Token(Token = "0x6000194")]
		[Address(RVA = "0x9D2CF4", Offset = "0x9D2CF4", VA = "0x9D2CF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFD04", Offset = "0x4AFD04")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000195")]
		[Address(RVA = "0x9D2C2C", Offset = "0x9D2C2C", VA = "0x9D2C2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFD14", Offset = "0x4AFD14")]
		set
		{
		}
	}

	[Token(Token = "0x17000041")]
	public static Vector3 shoulderPosition
	{
		[Token(Token = "0x6000196")]
		[Address(RVA = "0x9D2FB8", Offset = "0x9D2FB8", VA = "0x9D2FB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFD24", Offset = "0x4AFD24")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000197")]
		[Address(RVA = "0x9D2ED4", Offset = "0x9D2ED4", VA = "0x9D2ED4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFD34", Offset = "0x4AFD34")]
		set
		{
		}
	}

	[Token(Token = "0x17000042")]
	public static Quaternion shoulderRotation
	{
		[Token(Token = "0x6000198")]
		[Address(RVA = "0x9D300C", Offset = "0x9D300C", VA = "0x9D300C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFD44", Offset = "0x4AFD44")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000199")]
		[Address(RVA = "0x9D2F44", Offset = "0x9D2F44", VA = "0x9D2F44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFD54", Offset = "0x4AFD54")]
		set
		{
		}
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x9CFA70", Offset = "0x9CFA70", VA = "0x9CFA70")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x9D005C", Offset = "0x9D005C", VA = "0x9D005C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x9D00CC", Offset = "0x9D00CC", VA = "0x9D00CC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x9D06B8", Offset = "0x9D06B8", VA = "0x9D06B8")]
	private void MainControllerChanged(string index)
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x9D0760", Offset = "0x9D0760", VA = "0x9D0760")]
	private void HandnessChanged(string index)
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x9D0764", Offset = "0x9D0764", VA = "0x9D0764")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x9D06BC", Offset = "0x9D06BC", VA = "0x9D06BC")]
	private void RefreshHandness()
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x9D07C4", Offset = "0x9D07C4", VA = "0x9D07C4")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x9D09AC", Offset = "0x9D09AC", VA = "0x9D09AC")]
	private void ShowController()
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x9D0B78", Offset = "0x9D0B78", VA = "0x9D0B78")]
	private void CheckControllerState(string data)
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x9D0C64", Offset = "0x9D0C64", VA = "0x9D0C64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x9D0768", Offset = "0x9D0768", VA = "0x9D0768")]
	public static void ChangeHandNess()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x9D0F4C", Offset = "0x9D0F4C", VA = "0x9D0F4C")]
	private void DoUpdateControler0()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x9D0FC8", Offset = "0x9D0FC8", VA = "0x9D0FC8")]
	private void DoUpdateControler1()
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x9D104C", Offset = "0x9D104C", VA = "0x9D104C")]
	private void UpdateControlloerRay(bool update0 = true, bool update1 = true)
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x9D284C", Offset = "0x9D284C", VA = "0x9D284C")]
	private Quaternion UpdateSimulatedFrameParams()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x9D11D0", Offset = "0x9D11D0", VA = "0x9D11D0")]
	private void SetArmParaToSo(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle)
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x9D11E0", Offset = "0x9D11E0", VA = "0x9D11E0")]
	private void CalcArmModelfromSo(int hand)
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x9D18D4", Offset = "0x9D18D4", VA = "0x9D18D4")]
	public void UpdateControllerDataSO(int hand)
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x9D3060", Offset = "0x9D3060", VA = "0x9D3060")]
	public Pvr_Controller()
	{
	}
}
[Token(Token = "0x200002C")]
public class Pvr_ControllerDemo : MonoBehaviour
{
	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject HeadSetController;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject controller0;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject controller1;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject cube;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Ray ray;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject currentController;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform lastHit;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform currentHit;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Material normat;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Material gazemat;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Material clickmat;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool noClick;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject referenceObj;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float rayDefaultLength;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool isHasController;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	private bool headcontrolmode;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private RaycastHit hit;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject rayLine;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private GameObject dot;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Transform dragObj;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float disX;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float disY;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float disZ;

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x9D30C8", Offset = "0x9D30C8", VA = "0x9D30C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x9D34B0", Offset = "0x9D34B0", VA = "0x9D34B0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x9D381C", Offset = "0x9D381C", VA = "0x9D381C")]
	private void Update()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x9D5898", Offset = "0x9D5898", VA = "0x9D5898")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x9D5944", Offset = "0x9D5944", VA = "0x9D5944")]
	private void ControllerStateListener(string data)
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x9D59F0", Offset = "0x9D59F0", VA = "0x9D59F0")]
	private void CheckControllerStateForGoblin(string state)
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x9D5A90", Offset = "0x9D5A90", VA = "0x9D5A90")]
	public void SwitchControlMode()
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x9D5A94", Offset = "0x9D5A94", VA = "0x9D5A94")]
	public Pvr_ControllerDemo()
	{
	}
}
[Token(Token = "0x200002D")]
public class Pvr_ControllerEventsExamples : MonoBehaviour
{
	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x9D5AA4", Offset = "0x9D5AA4", VA = "0x9D5AA4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x9D5D00", Offset = "0x9D5D00", VA = "0x9D5D00")]
	private void UIPointerElementEnter(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x9D5DA8", Offset = "0x9D5DA8", VA = "0x9D5DA8")]
	private void UIPointerElementExit(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x9D5E50", Offset = "0x9D5E50", VA = "0x9D5E50")]
	private void UIPointerElementClick(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x9D5EF8", Offset = "0x9D5EF8", VA = "0x9D5EF8")]
	private void UIPointerElementDragStart(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x9D5FA0", Offset = "0x9D5FA0", VA = "0x9D5FA0")]
	private void UIPointerElementDragEnd(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x9D6048", Offset = "0x9D6048", VA = "0x9D6048")]
	public Pvr_ControllerEventsExamples()
	{
	}
}
[Token(Token = "0x200002E")]
public class Pvr_ControllerInit : MonoBehaviour
{
	[Token(Token = "0x2000373")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A89C4", Offset = "0x4A89C4")]
	private sealed class <RefreshController>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int id;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Pvr_ControllerInit <>4__this;

		[Token(Token = "0x1700014C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A8A")]
			[Address(RVA = "0x9D8560", Offset = "0x9D8560", VA = "0x9D8560", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A8C")]
			[Address(RVA = "0x9D85D0", Offset = "0x9D85D0", VA = "0x9D85D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0x9D7090", Offset = "0x9D7090", VA = "0x9D7090")]
		[DebuggerHidden]
		public <RefreshController>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0x9D8008", Offset = "0x9D8008", VA = "0x9D8008", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0x9D800C", Offset = "0x9D800C", VA = "0x9D800C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0x9D8568", Offset = "0x9D8568", VA = "0x9D8568", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ControllerVariety Variety;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool isCustomModel;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject goblin;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject g2;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject neo2L;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject neo2R;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject neo3L;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject neo3R;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Material standardMat;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Material unlitMat;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int controllerType;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[HideInInspector]
	public bool loadModelSuccess;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int systemOrUnity;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private JsonData curControllerData;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string modelName;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string texFormat;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string prePath;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string modelFilePath;

	[Token(Token = "0x4000149")]
	private const string goblinTexbasePath = "Controller/controller1/controller1";

	[Token(Token = "0x400014A")]
	private const string g2TexbasePath = "Controller/controller3/controller3";

	[Token(Token = "0x400014B")]
	private const string neo2TexbasePath = "Controller/controller4/controller4";

	[Token(Token = "0x400014C")]
	private const string neo3TexbasePath = "Controller/controller5/controller5";

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x9D6050", Offset = "0x9D6050", VA = "0x9D6050")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x9D61EC", Offset = "0x9D61EC", VA = "0x9D61EC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x9D62E4", Offset = "0x9D62E4", VA = "0x9D62E4")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x9D6674", Offset = "0x9D6674", VA = "0x9D6674")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x9D68A8", Offset = "0x9D68A8", VA = "0x9D68A8")]
	private void LoadResFromJson()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x9D6ADC", Offset = "0x9D6ADC", VA = "0x9D6ADC")]
	private void CheckControllerStateForGoblin(string state)
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x9D6F1C", Offset = "0x9D6F1C", VA = "0x9D6F1C")]
	private void CheckControllerStateOfAbility(string data)
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x9D62F0", Offset = "0x9D62F0", VA = "0x9D62F0")]
	private void DestroyLocalController()
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x9D6BC8", Offset = "0x9D6BC8", VA = "0x9D6BC8")]
	private void DestroySysController()
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x9D6A44", Offset = "0x9D6A44", VA = "0x9D6A44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4AFD64", Offset = "0x4AFD64")]
	private IEnumerator RefreshController(int id)
	{
		return null;
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x9D70BC", Offset = "0x9D70BC", VA = "0x9D70BC")]
	private void LoadControllerFromPrefab()
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x9D7788", Offset = "0x9D7788", VA = "0x9D7788")]
	private void LoadControllerFromSystem(int id)
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x9D73B8", Offset = "0x9D73B8", VA = "0x9D73B8")]
	private void LoadTexture(Pvr_ControllerVisual visual, string controllerName, bool fromRes)
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x9D7D00", Offset = "0x9D7D00", VA = "0x9D7D00")]
	private Texture2D LoadOneTexture(string filepath, bool fromRes)
	{
		return null;
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x9D7E20", Offset = "0x9D7E20", VA = "0x9D7E20")]
	private byte[] ReadPNG(string path)
	{
		return null;
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x9D7F94", Offset = "0x9D7F94", VA = "0x9D7F94")]
	public Pvr_ControllerInit()
	{
	}
}
[Token(Token = "0x200002F")]
public class Pvr_ControllerLink
{
	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AndroidJavaClass javaHummingbirdClass;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AndroidJavaClass javaPico2ReceiverClass;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AndroidJavaClass javaserviceClass;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AndroidJavaClass javavractivityclass;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AndroidJavaClass javaCVClass;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AndroidJavaObject activity;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string gameobjname;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool picoDevice;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string hummingBirdMac;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int hummingBirdRSSI;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool goblinserviceStarted;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool neoserviceStarted;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	public bool controller0Connected;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	public bool controller1Connected;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int mainHandID;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Pvr_Controller.UserHandNess handness;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int controllerType;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ControllerHand Controller0;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ControllerHand Controller1;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int platFormType;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int trackingmode;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int systemProp;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int enablehand6dofbyhead;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool switchHomeKey;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int iPhoneHMDModeEnabled;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float[] hbPoseData;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float[] sensorData;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int[] keyData;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int[] neo3TouchValue;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float[] fixedState;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float[] neoposeData;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int[] goblinKeyArray;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int[] neoKeyArray;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int[] neotriggerV;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float[] velocity;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float[] angularVelocity;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float[] acceData;

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x9D85D8", Offset = "0x9D85D8", VA = "0x9D85D8")]
	public Pvr_ControllerLink(string name)
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x9D89E4", Offset = "0x9D89E4", VA = "0x9D89E4")]
	private void StartHummingBirdService()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x9D9408", Offset = "0x9D9408", VA = "0x9D9408")]
	public bool IsServiceExisted()
	{
		return default(bool);
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x9D916C", Offset = "0x9D916C", VA = "0x9D916C")]
	public void SetGameObjectToJar(string name)
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x9D928C", Offset = "0x9D928C", VA = "0x9D928C")]
	public void BindService()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x9D95C0", Offset = "0x9D95C0", VA = "0x9D95C0")]
	public void UnBindService()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x9D973C", Offset = "0x9D973C", VA = "0x9D973C")]
	public void StopLark2Receiver()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x9D98D4", Offset = "0x9D98D4", VA = "0x9D98D4")]
	public void StartLark2Receiver()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x9D9A28", Offset = "0x9D9A28", VA = "0x9D9A28")]
	public void StopLark2Service()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x9D9BC0", Offset = "0x9D9BC0", VA = "0x9D9BC0")]
	public void StartLark2Service()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x9D9DA4", Offset = "0x9D9DA4", VA = "0x9D9DA4")]
	public int getHandness()
	{
		return default(int);
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x9D9F3C", Offset = "0x9D9F3C", VA = "0x9D9F3C")]
	public void setHandness(int hand)
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x9DA0A0", Offset = "0x9DA0A0", VA = "0x9DA0A0")]
	public void StartScan()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x9DA1CC", Offset = "0x9DA1CC", VA = "0x9DA1CC")]
	public void StopScan()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x9D9070", Offset = "0x9D9070", VA = "0x9D9070")]
	public int GetSysproc()
	{
		return default(int);
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x9DA2F4", Offset = "0x9DA2F4", VA = "0x9DA2F4")]
	public void ResetController(int num)
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x9DA48C", Offset = "0x9DA48C", VA = "0x9DA48C")]
	public void ConnectBLE()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x9DA5D0", Offset = "0x9DA5D0", VA = "0x9DA5D0")]
	public void DisConnectBLE()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x9DA670", Offset = "0x9DA670", VA = "0x9DA670")]
	public bool StartUpgrade()
	{
		return default(bool);
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x9DA734", Offset = "0x9DA734", VA = "0x9DA734")]
	public void setBinPath(string path, bool isasset)
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x9DA8DC", Offset = "0x9DA8DC", VA = "0x9DA8DC")]
	public string GetBLEImageType()
	{
		return null;
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x9DA9C8", Offset = "0x9DA9C8", VA = "0x9DA9C8")]
	public long GetBLEVersion()
	{
		return default(long);
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x9DAAB8", Offset = "0x9DAAB8", VA = "0x9DAAB8")]
	public string GetFileImageType()
	{
		return null;
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x9DABA4", Offset = "0x9DABA4", VA = "0x9DABA4")]
	public long GetFileVersion()
	{
		return default(long);
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x9DAC94", Offset = "0x9DAC94", VA = "0x9DAC94")]
	public int GetControllerConnectionState(int num)
	{
		return default(int);
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x9DAFEC", Offset = "0x9DAFEC", VA = "0x9DAFEC")]
	public void RebackToLauncher()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x9DB0D8", Offset = "0x9DB0D8", VA = "0x9DB0D8")]
	public void TurnUpVolume()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x9DB280", Offset = "0x9DB280", VA = "0x9DB280")]
	public void TurnDownVolume()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x9DB428", Offset = "0x9DB428", VA = "0x9DB428")]
	public float[] GetHBControllerPoseData()
	{
		return null;
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x9DB8C0", Offset = "0x9DB8C0", VA = "0x9DB8C0")]
	public float[] GetControllerSensorData()
	{
		return null;
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x9DBA24", Offset = "0x9DBA24", VA = "0x9DBA24")]
	public int[] GetControllerKeyData()
	{
		return null;
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x9DBAB0", Offset = "0x9DBAB0", VA = "0x9DBAB0")]
	public int[] GetNeo3TouchData(int hand)
	{
		return null;
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x9DC628", Offset = "0x9DC628", VA = "0x9DC628")]
	public int GetNeo3GripValue(int hand)
	{
		return default(int);
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x9DC7CC", Offset = "0x9DC7CC", VA = "0x9DC7CC")]
	public float[] GetControllerFixedSensorState(int hand)
	{
		return null;
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x9DD02C", Offset = "0x9DD02C", VA = "0x9DD02C")]
	public float[] GetCvControllerPoseData(int hand)
	{
		return null;
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x9DD8C4", Offset = "0x9DD8C4", VA = "0x9DD8C4")]
	public int[] GetHBControllerKeyData()
	{
		return null;
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x9DF6B0", Offset = "0x9DF6B0", VA = "0x9DF6B0")]
	public int GetHBKeyValue()
	{
		return default(int);
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x9DF7D8", Offset = "0x9DF7D8", VA = "0x9DF7D8")]
	public int[] GetCvControllerKeyData(int hand)
	{
		return null;
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x9E2304", Offset = "0x9E2304", VA = "0x9E2304")]
	public int GetCVTriggerValue(int hand)
	{
		return default(int);
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x9E2500", Offset = "0x9E2500", VA = "0x9E2500")]
	public void AutoConnectHbController(int scanTimeMs)
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x9E26AC", Offset = "0x9E26AC", VA = "0x9E26AC")]
	public void StartControllerThread(int headSensorState, int handSensorState)
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x9E28A4", Offset = "0x9E28A4", VA = "0x9E28A4")]
	public void StopControllerThread(int headSensorState, int handSensorState)
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x9E2A9C", Offset = "0x9E2A9C", VA = "0x9E2A9C")]
	public void SetUnityVersionToJar(string version)
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x9E2BC4", Offset = "0x9E2BC4", VA = "0x9E2BC4")]
	public Vector3 GetVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x9E30C4", Offset = "0x9E30C4", VA = "0x9E30C4")]
	public Vector3 GetAngularVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x9E3570", Offset = "0x9E3570", VA = "0x9E3570")]
	public Vector3 GetAcceleration(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x9E397C", Offset = "0x9E397C", VA = "0x9E397C")]
	public string GetConnectedDeviceMac()
	{
		return null;
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x9E3A68", Offset = "0x9E3A68", VA = "0x9E3A68")]
	public void VibrateNeo2Controller(float strength, int time, int hand)
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x9E3E14", Offset = "0x9E3E14", VA = "0x9E3E14")]
	public int GetMainControllerIndex()
	{
		return default(int);
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x9E3F14", Offset = "0x9E3F14", VA = "0x9E3F14")]
	public void SetMainController(int index)
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x9E4074", Offset = "0x9E4074", VA = "0x9E4074")]
	public void ResetHeadSensorForController()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x9E411C", Offset = "0x9E411C", VA = "0x9E411C")]
	public void GetDeviceVersion(int deviceType)
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x9E4284", Offset = "0x9E4284", VA = "0x9E4284")]
	public void GetControllerSnCode(int controllerSerialNum)
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x9E43EC", Offset = "0x9E43EC", VA = "0x9E43EC")]
	public void SetControllerUnbind(int controllerSerialNum)
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x9E4554", Offset = "0x9E4554", VA = "0x9E4554")]
	public void SetStationRestart()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x9E45FC", Offset = "0x9E45FC", VA = "0x9E45FC")]
	public void StartStationOtaUpdate()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x9E46A4", Offset = "0x9E46A4", VA = "0x9E46A4")]
	public void StartControllerOtaUpdate(int mode, int controllerSerialNum)
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x9E488C", Offset = "0x9E488C", VA = "0x9E488C")]
	public void EnterPairMode(int controllerSerialNum)
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x9E49F4", Offset = "0x9E49F4", VA = "0x9E49F4")]
	public void SetControllerShutdown(int controllerSerialNum)
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x9E4B5C", Offset = "0x9E4B5C", VA = "0x9E4B5C")]
	public int GetStationPairState()
	{
		return default(int);
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x9E4C60", Offset = "0x9E4C60", VA = "0x9E4C60")]
	public int GetStationOtaUpdateProgress()
	{
		return default(int);
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x9E4D64", Offset = "0x9E4D64", VA = "0x9E4D64")]
	public int GetControllerOtaUpdateProgress()
	{
		return default(int);
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x9E4E68", Offset = "0x9E4E68", VA = "0x9E4E68")]
	public void GetControllerVersionAndSN(int controllerSerialNum)
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x9E4FD0", Offset = "0x9E4FD0", VA = "0x9E4FD0")]
	public void GetControllerUniqueID()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x9E5078", Offset = "0x9E5078", VA = "0x9E5078")]
	public void InterruptStationPairMode()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x9E5120", Offset = "0x9E5120", VA = "0x9E5120")]
	public int GetControllerAbility(int controllerSerialNum)
	{
		return default(int);
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x9E52A4", Offset = "0x9E52A4", VA = "0x9E52A4")]
	public void SwitchHomeKey(bool state)
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x9E5358", Offset = "0x9E5358", VA = "0x9E5358")]
	public void SetBootReconnect()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x9E53F8", Offset = "0x9E53F8", VA = "0x9E53F8")]
	public int GetTemperature()
	{
		return default(int);
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x9E54F4", Offset = "0x9E54F4", VA = "0x9E54F4")]
	public int GetDeviceType()
	{
		return default(int);
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x9E55F0", Offset = "0x9E55F0", VA = "0x9E55F0")]
	public int GetControllerType()
	{
		return default(int);
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x9E5680", Offset = "0x9E5680", VA = "0x9E5680")]
	public string GetHummingBird2SN()
	{
		return null;
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x9E5764", Offset = "0x9E5764", VA = "0x9E5764")]
	public string GetControllerVersion()
	{
		return null;
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x9E5848", Offset = "0x9E5848", VA = "0x9E5848")]
	public bool IsEnbleTrigger()
	{
		return default(bool);
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x9E5930", Offset = "0x9E5930", VA = "0x9E5930")]
	public void StartCV2PairingMode(int devicetype)
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x9E5A98", Offset = "0x9E5A98", VA = "0x9E5A98")]
	public void StopCV2PairingMode(int devicetype)
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x9E5C00", Offset = "0x9E5C00", VA = "0x9E5C00")]
	public int GetControllerBindingState(int id)
	{
		return default(int);
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x9E5D7C", Offset = "0x9E5D7C", VA = "0x9E5D7C")]
	public void setIsEnbleHomeKey(bool state)
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x9E5ED4", Offset = "0x9E5ED4", VA = "0x9E5ED4")]
	public int getControllerSensorStatus(int id)
	{
		return default(int);
	}
}
[Token(Token = "0x2000030")]
public class Pvr_ControllerManager : MonoBehaviour
{
	[Token(Token = "0x2000374")]
	public delegate void PvrServiceStartSuccess();

	[Token(Token = "0x2000375")]
	public delegate void PvrControllerStateChanged(string data);

	[Token(Token = "0x2000376")]
	public delegate void ChangeMainControllerCallBack(string index);

	[Token(Token = "0x2000377")]
	public delegate void ChangeHandNessCallBack(string index);

	[Token(Token = "0x2000378")]
	public delegate void SetHbServiceBindState();

	[Token(Token = "0x2000379")]
	public delegate void ControllerThreadStartedCallback();

	[Token(Token = "0x200037A")]
	public delegate void SetControllerServiceBindState();

	[Token(Token = "0x200037B")]
	public delegate void ControllerStatusChange(string isconnect);

	[Token(Token = "0x200037C")]
	public delegate void SetControllerAbility(string data);

	[Token(Token = "0x200037D")]
	public delegate void SetControllerStateChanged(string data);

	[Token(Token = "0x200037E")]
	public delegate void SetHbControllerMac(string mac);

	[Token(Token = "0x200037F")]
	public delegate void ControllerDeviceVersionCallback(string data);

	[Token(Token = "0x2000380")]
	public delegate void ControllerSnCodeCallback(string data);

	[Token(Token = "0x2000381")]
	public delegate void ControllerUnbindCallback(string status);

	[Token(Token = "0x2000382")]
	public delegate void ControllerStationStatusCallback(string status);

	[Token(Token = "0x2000383")]
	public delegate void ControllerStationBusyCallback(string status);

	[Token(Token = "0x2000384")]
	public delegate void ControllerOtaStartCodeCallback(string data);

	[Token(Token = "0x2000385")]
	public delegate void ControllerDeviceVersionAndSNCallback(string data);

	[Token(Token = "0x2000386")]
	public delegate void ControllerUniqueIDCallback(string data);

	[Token(Token = "0x2000387")]
	public delegate void ControllerCombinedKeyUnbindCallback(string data);

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_ControllerManager instance;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Pvr_ControllerLink controllerlink;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float cTime;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool stopConnect;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text toast;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool controllerServicestate;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float disConnectTime;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool LengthAdaptiveRay;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] sensorData;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int[] keyData;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] g2SensorData;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int[] g2KeyData;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int keyOffset;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int rotControllerMode;

	[Token(Token = "0x17000043")]
	public static Pvr_ControllerManager Instance
	{
		[Token(Token = "0x6000209")]
		[Address(RVA = "0x9D25DC", Offset = "0x9D25DC", VA = "0x9D25DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000001")]
	public static event PvrServiceStartSuccess PvrServiceStartSuccessEvent
	{
		[Token(Token = "0x600020A")]
		[Address(RVA = "0x9CFB9C", Offset = "0x9CFB9C", VA = "0x9CFB9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFDC8", Offset = "0x4AFDC8")]
		add
		{
		}
		[Token(Token = "0x600020B")]
		[Address(RVA = "0x9D01F8", Offset = "0x9D01F8", VA = "0x9D01F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFDD8", Offset = "0x4AFDD8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public static event PvrControllerStateChanged PvrControllerStateChangedEvent
	{
		[Token(Token = "0x600020C")]
		[Address(RVA = "0x9E6050", Offset = "0x9E6050", VA = "0x9E6050")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFDE8", Offset = "0x4AFDE8")]
		add
		{
		}
		[Token(Token = "0x600020D")]
		[Address(RVA = "0x9E6180", Offset = "0x9E6180", VA = "0x9E6180")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFDF8", Offset = "0x4AFDF8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public static event ChangeMainControllerCallBack ChangeMainControllerCallBackEvent
	{
		[Token(Token = "0x600020E")]
		[Address(RVA = "0x9CFDFC", Offset = "0x9CFDFC", VA = "0x9CFDFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFE08", Offset = "0x4AFE08")]
		add
		{
		}
		[Token(Token = "0x600020F")]
		[Address(RVA = "0x9D0458", Offset = "0x9D0458", VA = "0x9D0458")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFE18", Offset = "0x4AFE18")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public static event ChangeHandNessCallBack ChangeHandNessCallBackEvent
	{
		[Token(Token = "0x6000210")]
		[Address(RVA = "0x9CFF2C", Offset = "0x9CFF2C", VA = "0x9CFF2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFE28", Offset = "0x4AFE28")]
		add
		{
		}
		[Token(Token = "0x6000211")]
		[Address(RVA = "0x9D0588", Offset = "0x9D0588", VA = "0x9D0588")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFE38", Offset = "0x4AFE38")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public static event SetHbServiceBindState SetHbServiceBindStateEvent
	{
		[Token(Token = "0x6000212")]
		[Address(RVA = "0x9E62B0", Offset = "0x9E62B0", VA = "0x9E62B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFE48", Offset = "0x4AFE48")]
		add
		{
		}
		[Token(Token = "0x6000213")]
		[Address(RVA = "0x9E63E0", Offset = "0x9E63E0", VA = "0x9E63E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFE58", Offset = "0x4AFE58")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public static event ControllerThreadStartedCallback ControllerThreadStartedCallbackEvent
	{
		[Token(Token = "0x6000214")]
		[Address(RVA = "0x9E6510", Offset = "0x9E6510", VA = "0x9E6510")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFE68", Offset = "0x4AFE68")]
		add
		{
		}
		[Token(Token = "0x6000215")]
		[Address(RVA = "0x9E6640", Offset = "0x9E6640", VA = "0x9E6640")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFE78", Offset = "0x4AFE78")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public static event SetControllerServiceBindState SetControllerServiceBindStateEvent
	{
		[Token(Token = "0x6000216")]
		[Address(RVA = "0x9E6770", Offset = "0x9E6770", VA = "0x9E6770")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFE88", Offset = "0x4AFE88")]
		add
		{
		}
		[Token(Token = "0x6000217")]
		[Address(RVA = "0x9E68A0", Offset = "0x9E68A0", VA = "0x9E68A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFE98", Offset = "0x4AFE98")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public static event ControllerStatusChange ControllerStatusChangeEvent
	{
		[Token(Token = "0x6000218")]
		[Address(RVA = "0x9D3380", Offset = "0x9D3380", VA = "0x9D3380")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFEA8", Offset = "0x4AFEA8")]
		add
		{
		}
		[Token(Token = "0x6000219")]
		[Address(RVA = "0x9D36EC", Offset = "0x9D36EC", VA = "0x9D36EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFEB8", Offset = "0x4AFEB8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public static event SetControllerAbility SetControllerAbilityEvent
	{
		[Token(Token = "0x600021A")]
		[Address(RVA = "0x9CFCCC", Offset = "0x9CFCCC", VA = "0x9CFCCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFEC8", Offset = "0x4AFEC8")]
		add
		{
		}
		[Token(Token = "0x600021B")]
		[Address(RVA = "0x9D0328", Offset = "0x9D0328", VA = "0x9D0328")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFED8", Offset = "0x4AFED8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public static event SetControllerStateChanged SetControllerStateChangedEvent
	{
		[Token(Token = "0x600021C")]
		[Address(RVA = "0x9D3250", Offset = "0x9D3250", VA = "0x9D3250")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFEE8", Offset = "0x4AFEE8")]
		add
		{
		}
		[Token(Token = "0x600021D")]
		[Address(RVA = "0x9D35BC", Offset = "0x9D35BC", VA = "0x9D35BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFEF8", Offset = "0x4AFEF8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public static event SetHbControllerMac SetHbControllerMacEvent
	{
		[Token(Token = "0x600021E")]
		[Address(RVA = "0x9E69D0", Offset = "0x9E69D0", VA = "0x9E69D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFF08", Offset = "0x4AFF08")]
		add
		{
		}
		[Token(Token = "0x600021F")]
		[Address(RVA = "0x9E6B00", Offset = "0x9E6B00", VA = "0x9E6B00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFF18", Offset = "0x4AFF18")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public static event ControllerDeviceVersionCallback ControllerDeviceVersionCallbackEvent
	{
		[Token(Token = "0x6000220")]
		[Address(RVA = "0x9E6C30", Offset = "0x9E6C30", VA = "0x9E6C30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFF28", Offset = "0x4AFF28")]
		add
		{
		}
		[Token(Token = "0x6000221")]
		[Address(RVA = "0x9E6D60", Offset = "0x9E6D60", VA = "0x9E6D60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFF38", Offset = "0x4AFF38")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public static event ControllerSnCodeCallback ControllerSnCodeCallbackEvent
	{
		[Token(Token = "0x6000222")]
		[Address(RVA = "0x9E6E90", Offset = "0x9E6E90", VA = "0x9E6E90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFF48", Offset = "0x4AFF48")]
		add
		{
		}
		[Token(Token = "0x6000223")]
		[Address(RVA = "0x9E6FC0", Offset = "0x9E6FC0", VA = "0x9E6FC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFF58", Offset = "0x4AFF58")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public static event ControllerUnbindCallback ControllerUnbindCallbackEvent
	{
		[Token(Token = "0x6000224")]
		[Address(RVA = "0x9E70F0", Offset = "0x9E70F0", VA = "0x9E70F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFF68", Offset = "0x4AFF68")]
		add
		{
		}
		[Token(Token = "0x6000225")]
		[Address(RVA = "0x9E7220", Offset = "0x9E7220", VA = "0x9E7220")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFF78", Offset = "0x4AFF78")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public static event ControllerStationStatusCallback ControllerStationStatusCallbackEvent
	{
		[Token(Token = "0x6000226")]
		[Address(RVA = "0x9E7350", Offset = "0x9E7350", VA = "0x9E7350")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFF88", Offset = "0x4AFF88")]
		add
		{
		}
		[Token(Token = "0x6000227")]
		[Address(RVA = "0x9E7480", Offset = "0x9E7480", VA = "0x9E7480")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFF98", Offset = "0x4AFF98")]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public static event ControllerStationBusyCallback ControllerStationBusyCallbackEvent
	{
		[Token(Token = "0x6000228")]
		[Address(RVA = "0x9E75B0", Offset = "0x9E75B0", VA = "0x9E75B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFFA8", Offset = "0x4AFFA8")]
		add
		{
		}
		[Token(Token = "0x6000229")]
		[Address(RVA = "0x9E76E0", Offset = "0x9E76E0", VA = "0x9E76E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFFB8", Offset = "0x4AFFB8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	public static event ControllerOtaStartCodeCallback ControllerOtaStartCodeCallbackEvent
	{
		[Token(Token = "0x600022A")]
		[Address(RVA = "0x9E7810", Offset = "0x9E7810", VA = "0x9E7810")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFFC8", Offset = "0x4AFFC8")]
		add
		{
		}
		[Token(Token = "0x600022B")]
		[Address(RVA = "0x9E7940", Offset = "0x9E7940", VA = "0x9E7940")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFFD8", Offset = "0x4AFFD8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public static event ControllerDeviceVersionAndSNCallback ControllerDeviceVersionAndSNCallbackEvent
	{
		[Token(Token = "0x600022C")]
		[Address(RVA = "0x9E7A70", Offset = "0x9E7A70", VA = "0x9E7A70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFFE8", Offset = "0x4AFFE8")]
		add
		{
		}
		[Token(Token = "0x600022D")]
		[Address(RVA = "0x9E7BA0", Offset = "0x9E7BA0", VA = "0x9E7BA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFFF8", Offset = "0x4AFFF8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public static event ControllerUniqueIDCallback ControllerUniqueIDCallbackEvent
	{
		[Token(Token = "0x600022E")]
		[Address(RVA = "0x9E7CD0", Offset = "0x9E7CD0", VA = "0x9E7CD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0008", Offset = "0x4B0008")]
		add
		{
		}
		[Token(Token = "0x600022F")]
		[Address(RVA = "0x9E7E00", Offset = "0x9E7E00", VA = "0x9E7E00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0018", Offset = "0x4B0018")]
		remove
		{
		}
	}

	[Token(Token = "0x14000014")]
	public static event ControllerCombinedKeyUnbindCallback ControllerCombinedKeyUnbindCallbackEvent
	{
		[Token(Token = "0x6000230")]
		[Address(RVA = "0x9E7F30", Offset = "0x9E7F30", VA = "0x9E7F30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0028", Offset = "0x4B0028")]
		add
		{
		}
		[Token(Token = "0x6000231")]
		[Address(RVA = "0x9E8060", Offset = "0x9E8060", VA = "0x9E8060")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0038", Offset = "0x4B0038")]
		remove
		{
		}
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x9E8190", Offset = "0x9E8190", VA = "0x9E8190")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x9E84A4", Offset = "0x9E84A4", VA = "0x9E84A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x9E8550", Offset = "0x9E8550", VA = "0x9E8550")]
	private void Update()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x9EAF14", Offset = "0x9EAF14", VA = "0x9EAF14")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x9EB484", Offset = "0x9EB484", VA = "0x9EB484")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x9EB568", Offset = "0x9EB568", VA = "0x9EB568")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x9EB708", Offset = "0x9EB708", VA = "0x9EB708")]
	public void StopLark2Service()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x9EB7B4", Offset = "0x9EB7B4", VA = "0x9EB7B4")]
	public Vector3 GetAngularVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x9EB89C", Offset = "0x9EB89C", VA = "0x9EB89C")]
	public Vector3 GetAcceleration(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x9E83F8", Offset = "0x9E83F8", VA = "0x9E83F8")]
	public void BindService()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x9EB984", Offset = "0x9EB984", VA = "0x9EB984")]
	public void StartScan()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x9EBA30", Offset = "0x9EBA30", VA = "0x9EBA30")]
	public void StopScan()
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x9EBADC", Offset = "0x9EBADC", VA = "0x9EBADC")]
	public void ResetController(int num)
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x9EB404", Offset = "0x9EB404", VA = "0x9EB404")]
	public static int GetControllerConnectionState(int num)
	{
		return default(int);
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x9EBB90", Offset = "0x9EBB90", VA = "0x9EBB90")]
	public void ConnectBLE()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x9EBC3C", Offset = "0x9EBC3C", VA = "0x9EBC3C")]
	public void DisConnectBLE()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x9EBCE8", Offset = "0x9EBCE8", VA = "0x9EBCE8")]
	public void SetBinPath(string path, bool isAsset)
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x9EBDB0", Offset = "0x9EBDB0", VA = "0x9EBDB0")]
	public void StartUpgrade()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x9EBE5C", Offset = "0x9EBE5C", VA = "0x9EBE5C")]
	public static string GetBLEImageType()
	{
		return null;
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x9EBED4", Offset = "0x9EBED4", VA = "0x9EBED4")]
	public static long GetBLEVersion()
	{
		return default(long);
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x9EBF4C", Offset = "0x9EBF4C", VA = "0x9EBF4C")]
	public static string GetFileImageType()
	{
		return null;
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x9EBFC4", Offset = "0x9EBFC4", VA = "0x9EBFC4")]
	public static long GetFileVersion()
	{
		return default(long);
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x9EC03C", Offset = "0x9EC03C", VA = "0x9EC03C")]
	public static void AutoConnectHbController(int scans)
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x9EC0F0", Offset = "0x9EC0F0", VA = "0x9EC0F0")]
	public static string GetConnectedDeviceMac()
	{
		return null;
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x9EC1AC", Offset = "0x9EC1AC", VA = "0x9EC1AC")]
	public void setHbControllerMac(string mac)
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x9EC39C", Offset = "0x9EC39C", VA = "0x9EC39C")]
	public int GetControllerRSSI()
	{
		return default(int);
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x9EC414", Offset = "0x9EC414", VA = "0x9EC414")]
	public void setHbServiceBindState(string state)
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x9EC720", Offset = "0x9EC720", VA = "0x9EC720")]
	public void setControllerServiceBindState(string state)
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x9ECA08", Offset = "0x9ECA08", VA = "0x9ECA08")]
	public void setHbControllerConnectState(string isconnect)
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x9ECD1C", Offset = "0x9ECD1C", VA = "0x9ECD1C")]
	public void setControllerStateChanged(string state)
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x9ED410", Offset = "0x9ED410", VA = "0x9ED410")]
	public void setControllerAbility(string data)
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x9ED514", Offset = "0x9ED514", VA = "0x9ED514")]
	public void controllerThreadStartedCallback()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x9EDA18", Offset = "0x9EDA18", VA = "0x9EDA18")]
	public void controllerDeviceVersionCallback(string data)
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x9EDB1C", Offset = "0x9EDB1C", VA = "0x9EDB1C")]
	public void controllerSnCodeCallback(string data)
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x9EDC20", Offset = "0x9EDC20", VA = "0x9EDC20")]
	public void controllerUnbindCallback(string status)
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x9EDD24", Offset = "0x9EDD24", VA = "0x9EDD24")]
	public void controllerStationStatusCallback(string status)
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x9EDE28", Offset = "0x9EDE28", VA = "0x9EDE28")]
	public void controllerStationBusyCallback(string status)
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x9EDF2C", Offset = "0x9EDF2C", VA = "0x9EDF2C")]
	public void controllerOTAStartCodeCallback(string data)
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x9EE030", Offset = "0x9EE030", VA = "0x9EE030")]
	public void controllerDeviceVersionAndSNCallback(string data)
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x9EE134", Offset = "0x9EE134", VA = "0x9EE134")]
	public void controllerUniqueIDCallback(string data)
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x9EE238", Offset = "0x9EE238", VA = "0x9EE238")]
	public void controllerCombinedKeyUnbindCallback(string controllerSerialNum)
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x9EE2F0", Offset = "0x9EE2F0", VA = "0x9EE2F0")]
	public void setupdateFailed()
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x9EE2F4", Offset = "0x9EE2F4", VA = "0x9EE2F4")]
	public void setupdateSuccess()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x9EE2F8", Offset = "0x9EE2F8", VA = "0x9EE2F8")]
	public void setupdateProgress(string progress)
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x9EE2FC", Offset = "0x9EE2FC", VA = "0x9EE2FC")]
	public void setHbAutoConnectState(string state)
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x9EE638", Offset = "0x9EE638", VA = "0x9EE638")]
	public void callbackControllerServiceState(string state)
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x9EE794", Offset = "0x9EE794", VA = "0x9EE794")]
	public void changeMainControllerCallback(string index)
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x9EE8F4", Offset = "0x9EE8F4", VA = "0x9EE8F4")]
	public void changeHandnessCallback(string index)
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x9EE450", Offset = "0x9EE450", VA = "0x9EE450")]
	private void ShowToast(int type)
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x9EEA54", Offset = "0x9EEA54", VA = "0x9EEA54")]
	private void HideToast()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x9EEB04", Offset = "0x9EEB04", VA = "0x9EEB04")]
	private void CheckControllerService()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x9ED668", Offset = "0x9ED668", VA = "0x9ED668")]
	private void GetCVControllerState()
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x9EA744", Offset = "0x9EA744", VA = "0x9EA744")]
	private void SetSystemKey()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x9EA200", Offset = "0x9EA200", VA = "0x9EA200")]
	private void TransformData(ControllerHand hand, int handId, int[] data)
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x9EEB18", Offset = "0x9EEB18", VA = "0x9EEB18")]
	private void TransSingleKey(PvrControllerKey key, int beginIndex, int[] data)
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x9EECD0", Offset = "0x9EECD0", VA = "0x9EECD0")]
	private void TransformTouchData(ControllerHand hand, int handId, int[] data)
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x9EEE00", Offset = "0x9EEE00", VA = "0x9EEE00")]
	private void TransSingleTouchValue(PvrControllerKey key, int beginIndex, int[] data)
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x9EEF40", Offset = "0x9EEF40", VA = "0x9EEF40")]
	public Pvr_ControllerManager()
	{
	}
}
[Token(Token = "0x2000031")]
public class Pvr_ControllerModuleInit : MonoBehaviour
{
	[Token(Token = "0x2000388")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A89D4", Offset = "0x4A89D4")]
	private sealed class <ShowOrHideRay>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_ControllerModuleInit <>4__this;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int id;

		[Token(Token = "0x1700014E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001AE0")]
			[Address(RVA = "0x89DA48", Offset = "0x89DA48", VA = "0x89DA48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001AE2")]
			[Address(RVA = "0x89DAB8", Offset = "0x89DAB8", VA = "0x89DAB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0x89D4F8", Offset = "0x89D4F8", VA = "0x89D4F8")]
		[DebuggerHidden]
		public <ShowOrHideRay>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0x89D954", Offset = "0x89D954", VA = "0x89D954", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0x89D958", Offset = "0x89D958", VA = "0x89D958", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0x89DA50", Offset = "0x89DA50", VA = "0x89DA50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerVariety Variety;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool IsCustomModel;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject dot;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject rayLine;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject controller;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool moduleState;

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x89CFAC", Offset = "0x89CFAC", VA = "0x89CFAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x89D19C", Offset = "0x89D19C", VA = "0x89D19C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x89D290", Offset = "0x89D290", VA = "0x89D290")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x89D304", Offset = "0x89D304", VA = "0x89D304")]
	private void ControllerStateChanged(string data)
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x89D45C", Offset = "0x89D45C", VA = "0x89D45C")]
	private void MainControllerIDChanged(string data)
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x89D294", Offset = "0x89D294", VA = "0x89D294")]
	private void RefreshRay()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x89D460", Offset = "0x89D460", VA = "0x89D460")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B0048", Offset = "0x4B0048")]
	private IEnumerator ShowOrHideRay(int id)
	{
		return null;
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x89D524", Offset = "0x89D524", VA = "0x89D524")]
	public void ForceHideOrShow(bool state)
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x89D66C", Offset = "0x89D66C", VA = "0x89D66C")]
	public void UpdateRay()
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x89D944", Offset = "0x89D944", VA = "0x89D944")]
	public Pvr_ControllerModuleInit()
	{
	}
}
[Token(Token = "0x2000032")]
public class Pvr_ControllerPower : MonoBehaviour
{
	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Sprite power1;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite power2;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite power3;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Sprite power4;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Sprite power5;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public ControllerDevice currentDevice;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Image powerImage;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int powerValue;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float power;

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x89DAC0", Offset = "0x89DAC0", VA = "0x89DAC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x89DBB8", Offset = "0x89DBB8", VA = "0x89DBB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x89DBF0", Offset = "0x89DBF0", VA = "0x89DBF0")]
	private void RefreshPower(int hand)
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x89DD60", Offset = "0x89DD60", VA = "0x89DD60")]
	public Pvr_ControllerPower()
	{
	}
}
[Token(Token = "0x2000033")]
public class Pvr_ControllerVisual : MonoBehaviour
{
	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerDevice currentDevice;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D m_idle;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D m_app;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D m_home;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D m_touchpad;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture2D m_volUp;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D m_volDn;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture2D m_trigger;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Texture2D m_a;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Texture2D m_b;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Texture2D m_x;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texture2D m_y;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Texture2D m_grip;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Renderer controllerRenderMat;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x89DD68", Offset = "0x89DD68", VA = "0x89DD68")]
	private void Awake()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x89DDC0", Offset = "0x89DDC0", VA = "0x89DDC0")]
	private void Start()
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x89DE40", Offset = "0x89DE40", VA = "0x89DE40")]
	private void Update()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x89DE78", Offset = "0x89DE78", VA = "0x89DE78")]
	private void ChangeKeyEffects(int hand)
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x89E238", Offset = "0x89E238", VA = "0x89E238")]
	public Pvr_ControllerVisual()
	{
	}
}
[Token(Token = "0x2000034")]
public class Pvr_ToolTips : MonoBehaviour
{
	[Token(Token = "0x2000389")]
	public enum TipBtn
	{
		[Token(Token = "0x400165E")]
		app,
		[Token(Token = "0x400165F")]
		touchpad,
		[Token(Token = "0x4001660")]
		home,
		[Token(Token = "0x4001661")]
		volup,
		[Token(Token = "0x4001662")]
		voldown,
		[Token(Token = "0x4001663")]
		trigger,
		[Token(Token = "0x4001664")]
		grip
	}

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ControllerDevice currentDevice;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float tipsAlpha;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Pvr_ToolTips tooltips;

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x8A3A58", Offset = "0x8A3A58", VA = "0x8A3A58")]
	public void ChangeTipsText(TipBtn tip, string key)
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x8A3C20", Offset = "0x8A3C20", VA = "0x8A3C20")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x8A3CA0", Offset = "0x8A3CA0", VA = "0x8A3CA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x8A3F40", Offset = "0x8A3F40", VA = "0x8A3F40")]
	private void LoadTextFromJson()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x8A4494", Offset = "0x8A4494", VA = "0x8A4494")]
	public static void RefreshTips()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x8A4540", Offset = "0x8A4540", VA = "0x8A4540")]
	public Pvr_ToolTips()
	{
	}
}
[Token(Token = "0x2000035")]
public class Pvr_TouchPadScroll : MonoBehaviour
{
	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ScrollRect scrollRect;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isHoving;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int mainHand;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SwipeDirection direction;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector2 currPos;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector2 tarPos;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float lerpSpeed;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform tranViewport;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float ignoreDis;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector2 lastTouchDownPos;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector2 lastTouchUpPos;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool isTouching;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool isClosed;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector2 vecOrigin;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector2 vecOriginNeo2;

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x8A4548", Offset = "0x8A4548", VA = "0x8A4548")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x8A45EC", Offset = "0x8A45EC", VA = "0x8A45EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x8A4B48", Offset = "0x8A4B48", VA = "0x8A4B48")]
	private bool IsControllerConnect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x8A477C", Offset = "0x8A477C", VA = "0x8A477C")]
	private void UpdateTargetPos()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x8A4D44", Offset = "0x8A4D44", VA = "0x8A4D44")]
	private void ComputeTouchPos()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x8A50F8", Offset = "0x8A50F8", VA = "0x8A50F8")]
	private void ComputeRockerPos()
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x8A54E0", Offset = "0x8A54E0", VA = "0x8A54E0")]
	private bool VerifyNeo2TouchValid(Vector2 nowTouchPos)
	{
		return default(bool);
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x8A48D8", Offset = "0x8A48D8", VA = "0x8A48D8")]
	private void UpdatePos()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x8A4C34", Offset = "0x8A4C34", VA = "0x8A4C34")]
	private void ResetParameter()
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x8A4618", Offset = "0x8A4618", VA = "0x8A4618")]
	private void Process()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x8A551C", Offset = "0x8A551C", VA = "0x8A551C")]
	private bool IsHovering(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x8A5748", Offset = "0x8A5748", VA = "0x8A5748")]
	private bool FindTree(Transform tran)
	{
		return default(bool);
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x8A583C", Offset = "0x8A583C", VA = "0x8A583C")]
	public Pvr_TouchPadScroll()
	{
	}
}
[Token(Token = "0x2000036")]
public class Pvr_TouchVisual : MonoBehaviour
{
	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public ControllerDevice currentDevice;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshRenderer touchRenderer;

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x8A58F8", Offset = "0x8A58F8", VA = "0x8A58F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x8A59B8", Offset = "0x8A59B8", VA = "0x8A59B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x8A59F0", Offset = "0x8A59F0", VA = "0x8A59F0")]
	private void ChangeEffects(int hand)
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x8A5B20", Offset = "0x8A5B20", VA = "0x8A5B20")]
	public Pvr_TouchVisual()
	{
	}
}
[Token(Token = "0x2000037")]
public class Pvr_ToBService : MonoBehaviour
{
	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text deviceInfoText;

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x8A352C", Offset = "0x8A352C", VA = "0x8A352C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x8A3564", Offset = "0x8A3564", VA = "0x8A3564")]
	private void Start()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x8A3574", Offset = "0x8A3574", VA = "0x8A3574")]
	private void OnDestory()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x8A3530", Offset = "0x8A3530", VA = "0x8A3530")]
	private void InitToBService()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x8A356C", Offset = "0x8A356C", VA = "0x8A356C")]
	private void BindToBService()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x8A357C", Offset = "0x8A357C", VA = "0x8A357C")]
	private void UnBindToBService()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x8A3584", Offset = "0x8A3584", VA = "0x8A3584")]
	private void BoolCallback(string value)
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x8A3634", Offset = "0x8A3634", VA = "0x8A3634")]
	private void IntCallback(string value)
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x8A36C4", Offset = "0x8A36C4", VA = "0x8A36C4")]
	private void LongCallback(string value)
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x8A3754", Offset = "0x8A3754", VA = "0x8A3754")]
	public void StateGetDeviceInfo()
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x8A37E4", Offset = "0x8A37E4", VA = "0x8A37E4")]
	public void ControlSetDeviceAction()
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x8A3864", Offset = "0x8A3864", VA = "0x8A3864")]
	private void ControlSetDeviceActionCallBack(int value)
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x8A3914", Offset = "0x8A3914", VA = "0x8A3914")]
	public void AppManager()
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x8A39A0", Offset = "0x8A39A0", VA = "0x8A39A0")]
	private void AppManagerCallBack(int value)
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x8A3A50", Offset = "0x8A3A50", VA = "0x8A3A50")]
	public Pvr_ToBService()
	{
	}
}
[Token(Token = "0x2000038")]
public class PLOG : MonoBehaviour
{
	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int logLevel;

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x64668C", Offset = "0x64668C", VA = "0x64668C")]
	public static void getConfigTraceLevel()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x6466F8", Offset = "0x6466F8", VA = "0x6466F8")]
	public static void D(string msg)
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x6467A0", Offset = "0x6467A0", VA = "0x6467A0")]
	public static void I(string msg)
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x646848", Offset = "0x646848", VA = "0x646848")]
	public static void W(string msg)
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x6468F0", Offset = "0x6468F0", VA = "0x6468F0")]
	public static void E(string msg)
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x646958", Offset = "0x646958", VA = "0x646958")]
	public PLOG()
	{
	}
}
[Token(Token = "0x2000039")]
public class CPicoSDKSettingAsset : ScriptableObject
{
	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IgnoreSDKSetting;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool DontshowBuildWaring;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool AppIDChecked;

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x6CAEF0", Offset = "0x6CAEF0", VA = "0x6CAEF0")]
	public CPicoSDKSettingAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x200003A")]
public class Pvr_UnitySDKProjectSetting : ScriptableObject
{
	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderTextureAntiAliasing rtAntiAlising;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public RenderTextureDepth rtBitDepth;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RenderTextureFormat rtFormat;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool usedefaultRenderTexture;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 customRTSize;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool usedefaultfps;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int customfps;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool usesinglepass;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool usecontentprotect;

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x7C2268", Offset = "0x7C2268", VA = "0x7C2268")]
	public static Pvr_UnitySDKProjectSetting GetProjectConfig()
	{
		return null;
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x7C22BC", Offset = "0x7C22BC", VA = "0x7C22BC")]
	public Pvr_UnitySDKProjectSetting()
	{
	}
}
[Token(Token = "0x200003B")]
public sealed class Pvr_UnitySDKPlatformSetting : ScriptableObject
{
	[Token(Token = "0x200038A")]
	public enum simulationType
	{
		[Token(Token = "0x4001666")]
		Null,
		[Token(Token = "0x4001667")]
		Invalid,
		[Token(Token = "0x4001668")]
		Valid
	}

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool entitlementchecksimulation;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool startTimeEntitlementCheck;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public string appID;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<string> deviceSN;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKPlatformSetting instance;

	[Token(Token = "0x17000044")]
	public static bool Entitlementchecksimulation
	{
		[Token(Token = "0x60002B0")]
		[Address(RVA = "0x7C1308", Offset = "0x7C1308", VA = "0x7C1308")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002B1")]
		[Address(RVA = "0x7C1334", Offset = "0x7C1334", VA = "0x7C1334")]
		set
		{
		}
	}

	[Token(Token = "0x17000045")]
	public static bool StartTimeEntitlementCheck
	{
		[Token(Token = "0x60002B2")]
		[Address(RVA = "0x7C0ABC", Offset = "0x7C0ABC", VA = "0x7C0ABC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002B3")]
		[Address(RVA = "0x7C138C", Offset = "0x7C138C", VA = "0x7C138C")]
		set
		{
		}
	}

	[Token(Token = "0x17000046")]
	public static Pvr_UnitySDKPlatformSetting Instance
	{
		[Token(Token = "0x60002B4")]
		[Address(RVA = "0x7C0AE8", Offset = "0x7C0AE8", VA = "0x7C0AE8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002B5")]
		[Address(RVA = "0x7C13E4", Offset = "0x7C13E4", VA = "0x7C13E4")]
		set
		{
		}
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x7C1438", Offset = "0x7C1438", VA = "0x7C1438")]
	public Pvr_UnitySDKPlatformSetting()
	{
	}
}
[Token(Token = "0x200003C")]
public class Pvr_UnitySDKManager : MonoBehaviour
{
	[Token(Token = "0x200038B")]
	public delegate void EntitlementCheckResult(int ReturnValue);

	[Token(Token = "0x200038C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A89E4", Offset = "0x4A89E4")]
	private sealed class <ToastManager>d__97 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int type;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool state;

		[Token(Token = "0x17000150")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001AEA")]
			[Address(RVA = "0x7C0DA8", Offset = "0x7C0DA8", VA = "0x7C0DA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000151")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001AEC")]
			[Address(RVA = "0x7C0E18", Offset = "0x7C0E18", VA = "0x7C0E18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0x7C0C18", Offset = "0x7C0C18", VA = "0x7C0C18")]
		[DebuggerHidden]
		public <ToastManager>d__97(int <>1__state)
		{
		}

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0x7C0C44", Offset = "0x7C0C44", VA = "0x7C0C44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0x7C0C48", Offset = "0x7C0C48", VA = "0x7C0C48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0x7C0DB0", Offset = "0x7C0DB0", VA = "0x7C0DB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200038D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A89F4", Offset = "0x4A89F4")]
	private sealed class <>c__DisplayClass102_0
	{
		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform trans;

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0x7BF4CC", Offset = "0x7BF4CC", VA = "0x7BF4CC")]
		public <>c__DisplayClass102_0()
		{
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0x7BF4D4", Offset = "0x7BF4D4", VA = "0x7BF4D4")]
		internal void <SetProperty>b__0()
		{
		}
	}

	[Token(Token = "0x200038E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8A04", Offset = "0x4A8A04")]
	private sealed class <G3TipsManager>d__106 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject tip;

		[Token(Token = "0x17000152")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001AF2")]
			[Address(RVA = "0x7BF650", Offset = "0x7BF650", VA = "0x7BF650", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000153")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001AF4")]
			[Address(RVA = "0x7BF6C0", Offset = "0x7BF6C0", VA = "0x7BF6C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0x7BF560", Offset = "0x7BF560", VA = "0x7BF560")]
		[DebuggerHidden]
		public <G3TipsManager>d__106(int <>1__state)
		{
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0x7BF58C", Offset = "0x7BF58C", VA = "0x7BF58C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0x7BF590", Offset = "0x7BF590", VA = "0x7BF590", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0x7BF658", Offset = "0x7BF658", VA = "0x7BF658", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200038F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8A14", Offset = "0x4A8A14")]
	private sealed class <Start>d__118 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x17000154")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001AF8")]
			[Address(RVA = "0x7C0BA0", Offset = "0x7C0BA0", VA = "0x7C0BA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000155")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001AFA")]
			[Address(RVA = "0x7C0C10", Offset = "0x7C0C10", VA = "0x7C0C10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0x7C07B0", Offset = "0x7C07B0", VA = "0x7C07B0")]
		[DebuggerHidden]
		public <Start>d__118(int <>1__state)
		{
		}

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0x7C07DC", Offset = "0x7C07DC", VA = "0x7C07DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0x7C07E0", Offset = "0x7C07E0", VA = "0x7C07E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0x7C0BA8", Offset = "0x7C0BA8", VA = "0x7C0BA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000390")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8A24", Offset = "0x4A8A24")]
	private sealed class <InitRenderThreadRoutine>d__119 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <i>5__2;

		[Token(Token = "0x17000156")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001AFE")]
			[Address(RVA = "0x7BFAB4", Offset = "0x7BFAB4", VA = "0x7BFAB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000157")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B00")]
			[Address(RVA = "0x7BFB24", Offset = "0x7BFB24", VA = "0x7BFB24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0x7BF6C8", Offset = "0x7BF6C8", VA = "0x7BF6C8")]
		[DebuggerHidden]
		public <InitRenderThreadRoutine>d__119(int <>1__state)
		{
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0x7BF6F4", Offset = "0x7BF6F4", VA = "0x7BF6F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0x7BF6F8", Offset = "0x7BF6F8", VA = "0x7BF6F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0x7BFABC", Offset = "0x7BFABC", VA = "0x7BFABC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000391")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8A34", Offset = "0x4A8A34")]
	private sealed class <OnResume>d__132 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <ability6dof>5__2;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <waitNum>5__3;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <resetNum>5__4;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <i>5__5;

		[Token(Token = "0x17000158")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B04")]
			[Address(RVA = "0x7C0738", Offset = "0x7C0738", VA = "0x7C0738", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000159")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B06")]
			[Address(RVA = "0x7C07A8", Offset = "0x7C07A8", VA = "0x7C07A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0x7BFB2C", Offset = "0x7BFB2C", VA = "0x7BFB2C")]
		[DebuggerHidden]
		public <OnResume>d__132(int <>1__state)
		{
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0x7BFB58", Offset = "0x7BFB58", VA = "0x7BFB58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0x7BFB5C", Offset = "0x7BFB5C", VA = "0x7BFB5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0x7C0740", Offset = "0x7C0740", VA = "0x7C0740", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlatForm platform;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Pvr_UnitySDKManager sdk;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public float EyesAspect;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public int posStatus;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool ismirroring;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public Vector3 resetBasePos;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public int trackingmode;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public int systemprop;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool systemFPS;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public float[] headData;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool rotfoldout;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[SerializeField]
	private bool hmdOnlyrot;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	[SerializeField]
	private bool controllerOnlyrot;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private TrackingOrigin trackingOrigin;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool ResetTrackerOnLoad;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public Vector3 leftEyeOffset;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public Vector3 rightEyeOffset;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public Rect leftEyeRect;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public Rect rightEyeRect;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[HideInInspector]
	public Matrix4x4 leftEyeView;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[HideInInspector]
	public Matrix4x4 rightEyeView;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[HideInInspector]
	public Pvr_UnitySDKEditor pvr_UnitySDKEditor;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private bool vrModeEnabled;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[HideInInspector]
	public Material Eyematerial;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[HideInInspector]
	public Material Middlematerial;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AA06C", Offset = "0x4AA06C")]
	private bool <picovrTriggered>k__BackingField;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	[HideInInspector]
	public bool newPicovrTriggered;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x132")]
	[SerializeField]
	private bool showFPS;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	[HideInInspector]
	public Vector3 neckOffset;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private bool pVRNeck;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
	[HideInInspector]
	public bool UseCustomNeckPara;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x142")]
	[HideInInspector]
	public bool onResume;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x143")]
	[HideInInspector]
	public bool isEnterVRMode;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public bool isHasController;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Pvr_UnitySDKConfigProfile pvr_UnitySDKConfig;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private GameObject calltoast;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private GameObject msgtoast;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private GameObject lowhmdBatterytoast;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private GameObject lowphoneBatterytoast;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private GameObject LowPhoneHealthtoast;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private GameObject LowcontrollerBatterytoast;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool lowControllerpowerstate;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float controllerpowershowtime;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool UseToast;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private int iPhoneHMDModeEnabled;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private GameObject G3LiteTips;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private bool monoscopic;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
	private bool mIsAndroid7;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Func<bool> eventEnterVRMode;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19A")]
	[HideInInspector]
	public bool ShowVideoSeethrough;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public int SystemDebugFFRLevel;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public int SystemFFRLevel;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public int AppCheckResult;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Action longPressHomeKeyAction;

	[Token(Token = "0x17000047")]
	public static Pvr_UnitySDKManager SDK
	{
		[Token(Token = "0x60002B7")]
		[Address(RVA = "0x991D3C", Offset = "0x991D3C", VA = "0x991D3C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000048")]
	public bool Rotfoldout
	{
		[Token(Token = "0x60002B8")]
		[Address(RVA = "0x9A7DB4", Offset = "0x9A7DB4", VA = "0x9A7DB4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002B9")]
		[Address(RVA = "0x9A7DBC", Offset = "0x9A7DBC", VA = "0x9A7DBC")]
		set
		{
		}
	}

	[Token(Token = "0x17000049")]
	public bool HmdOnlyrot
	{
		[Token(Token = "0x60002BA")]
		[Address(RVA = "0x9A7DDC", Offset = "0x9A7DDC", VA = "0x9A7DDC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002BB")]
		[Address(RVA = "0x9A7DE4", Offset = "0x9A7DE4", VA = "0x9A7DE4")]
		set
		{
		}
	}

	[Token(Token = "0x1700004A")]
	public bool ControllerOnlyrot
	{
		[Token(Token = "0x60002BC")]
		[Address(RVA = "0x9A7E04", Offset = "0x9A7E04", VA = "0x9A7E04")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002BD")]
		[Address(RVA = "0x9A7E0C", Offset = "0x9A7E0C", VA = "0x9A7E0C")]
		set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	public TrackingOrigin TrackingOrigin
	{
		[Token(Token = "0x60002BE")]
		[Address(RVA = "0x9A7E2C", Offset = "0x9A7E2C", VA = "0x9A7E2C")]
		get
		{
			return default(TrackingOrigin);
		}
		[Token(Token = "0x60002BF")]
		[Address(RVA = "0x9A7E34", Offset = "0x9A7E34", VA = "0x9A7E34")]
		set
		{
		}
	}

	[Token(Token = "0x1700004C")]
	[HideInInspector]
	public bool VRModeEnabled
	{
		[Token(Token = "0x60002C3")]
		[Address(RVA = "0x9A14C8", Offset = "0x9A14C8", VA = "0x9A14C8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002C4")]
		[Address(RVA = "0x99F5C0", Offset = "0x99F5C0", VA = "0x99F5C0")]
		set
		{
		}
	}

	[Token(Token = "0x1700004D")]
	[HideInInspector]
	public bool picovrTriggered
	{
		[Token(Token = "0x60002C5")]
		[Address(RVA = "0x9A7EEC", Offset = "0x9A7EEC", VA = "0x9A7EEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B00AC", Offset = "0x4B00AC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002C6")]
		[Address(RVA = "0x99E4D4", Offset = "0x99E4D4", VA = "0x99E4D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B00BC", Offset = "0x4B00BC")]
		set
		{
		}
	}

	[Token(Token = "0x1700004E")]
	public bool ShowFPS
	{
		[Token(Token = "0x60002C7")]
		[Address(RVA = "0x9A7EF4", Offset = "0x9A7EF4", VA = "0x9A7EF4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002C8")]
		[Address(RVA = "0x9A7EFC", Offset = "0x9A7EFC", VA = "0x9A7EFC")]
		set
		{
		}
	}

	[Token(Token = "0x1700004F")]
	public bool PVRNeck
	{
		[Token(Token = "0x60002C9")]
		[Address(RVA = "0x9A7F1C", Offset = "0x9A7F1C", VA = "0x9A7F1C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002CA")]
		[Address(RVA = "0x9A7F24", Offset = "0x9A7F24", VA = "0x9A7F24")]
		set
		{
		}
	}

	[Token(Token = "0x17000050")]
	[HideInInspector]
	public bool Monoscopic
	{
		[Token(Token = "0x60002CB")]
		[Address(RVA = "0x9A0C6C", Offset = "0x9A0C6C", VA = "0x9A0C6C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002CC")]
		[Address(RVA = "0x9A7F44", Offset = "0x9A7F44", VA = "0x9A7F44")]
		set
		{
		}
	}

	[Token(Token = "0x14000015")]
	public static event EntitlementCheckResult EntitlementCheckResultEvent
	{
		[Token(Token = "0x60002CD")]
		[Address(RVA = "0x9A7F6C", Offset = "0x9A7F6C", VA = "0x9A7F6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B00CC", Offset = "0x4B00CC")]
		add
		{
		}
		[Token(Token = "0x60002CE")]
		[Address(RVA = "0x9A809C", Offset = "0x9A809C", VA = "0x9A809C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B00DC", Offset = "0x4B00DC")]
		remove
		{
		}
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x9A7E50", Offset = "0x9A7E50", VA = "0x9A7E50")]
	public void ChangeDefaultCustomRtSize(int w, int h)
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x9A0C34", Offset = "0x9A0C34", VA = "0x9A0C34")]
	public Vector3 EyeOffset(Eye eye)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x9A7EB0", Offset = "0x9A7EB0", VA = "0x9A7EB0")]
	public Rect EyeRect(Eye eye)
	{
		return default(Rect);
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x9A81CC", Offset = "0x9A81CC", VA = "0x9A81CC")]
	private bool SDKManagerInit()
	{
		return default(bool);
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x9A8324", Offset = "0x9A8324", VA = "0x9A8324")]
	private bool SDKManagerInitCoreAbility()
	{
		return default(bool);
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x9A8460", Offset = "0x9A8460", VA = "0x9A8460")]
	public void smsReceivedCallback(string msg)
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x9A8E84", Offset = "0x9A8E84", VA = "0x9A8E84")]
	public void phoneStateCallback(string state)
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x9A92E0", Offset = "0x9A92E0", VA = "0x9A92E0")]
	public void phoneBatteryStateCallback(string state)
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x9A95BC", Offset = "0x9A95BC", VA = "0x9A95BC")]
	public void hmdLowBatteryCallback(string level)
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x9A88BC", Offset = "0x9A88BC", VA = "0x9A88BC")]
	private string TransformNumber(string number)
	{
		return null;
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x9A96FC", Offset = "0x9A96FC", VA = "0x9A96FC")]
	public void onHmdOrientationReseted()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x9A8DB0", Offset = "0x9A8DB0", VA = "0x9A8DB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B00EC", Offset = "0x4B00EC")]
	private IEnumerator ToastManager(int type, bool state, float time)
	{
		return null;
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x9A9700", Offset = "0x9A9700", VA = "0x9A9700")]
	private void CheckControllerStateForG2(string state)
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x9A98B4", Offset = "0x9A98B4", VA = "0x9A98B4")]
	public void notificationCallback(string data)
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x9AAC78", Offset = "0x9AAC78", VA = "0x9AAC78")]
	private Sprite LoadSprite(Vector2 size, string filepath)
	{
		return null;
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x9AADA4", Offset = "0x9AADA4", VA = "0x9AADA4")]
	private byte[] ReadTex(string path)
	{
		return null;
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x9A9D0C", Offset = "0x9A9D0C", VA = "0x9A9D0C")]
	private void SetProperty(int type, JsonData data, string value)
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x9AA354", Offset = "0x9AA354", VA = "0x9AA354")]
	private void SetBaseProperty(Transform trans, JsonData data, string value)
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x9AA884", Offset = "0x9AA884", VA = "0x9AA884")]
	private void SetImageProperty(Transform image, JsonData data, string value)
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x9AAF50", Offset = "0x9AAF50", VA = "0x9AAF50")]
	private void SetTextProperty(Transform text, JsonData data, string value)
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x9AABE0", Offset = "0x9AABE0", VA = "0x9AABE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B0150", Offset = "0x4B0150")]
	private IEnumerator G3TipsManager(GameObject tip, float time)
	{
		return null;
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x9AB2D8", Offset = "0x9AB2D8", VA = "0x9AB2D8")]
	private float JsonToFloat(JsonData data)
	{
		return default(float);
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x9AB354", Offset = "0x9AB354", VA = "0x9AB354")]
	private bool SDKManagerInitFPS()
	{
		return default(bool);
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x9A82B0", Offset = "0x9A82B0", VA = "0x9A82B0")]
	private bool SDKManagerInitConfigProfile()
	{
		return default(bool);
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x9AB530", Offset = "0x9AB530", VA = "0x9AB530")]
	private bool SDKManagerInitEditor()
	{
		return default(bool);
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x9AB5E0", Offset = "0x9AB5E0", VA = "0x9AB5E0")]
	private bool SDKManagerInitPara()
	{
		return default(bool);
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x9AB5E8", Offset = "0x9AB5E8", VA = "0x9AB5E8")]
	public void SDKManagerLongHomeKey()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x9AB700", Offset = "0x9AB700", VA = "0x9AB700")]
	private void setLongHomeKey()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x9AB9B8", Offset = "0x9AB9B8", VA = "0x9AB9B8")]
	public void verifyAPPCallback(string code)
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x9ABB08", Offset = "0x9ABB08", VA = "0x9ABB08")]
	public void IpdRefreshCallBack(string ipd)
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x9ABC60", Offset = "0x9ABC60", VA = "0x9ABC60")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x9ACE0C", Offset = "0x9ACE0C", VA = "0x9ACE0C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B01B4", Offset = "0x4B01B4")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x9ACE80", Offset = "0x9ACE80", VA = "0x9ACE80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B0218", Offset = "0x4B0218")]
	private IEnumerator InitRenderThreadRoutine()
	{
		return null;
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x9ACEE0", Offset = "0x9ACEE0", VA = "0x9ACEE0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x9AD1A0", Offset = "0x9AD1A0", VA = "0x9AD1A0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x9AD300", Offset = "0x9AD300", VA = "0x9AD300")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x9AD438", Offset = "0x9AD438", VA = "0x9AD438")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x9AD440", Offset = "0x9AD440", VA = "0x9AD440")]
	private void OnPause()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x9AD568", Offset = "0x9AD568", VA = "0x9AD568")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x9AD818", Offset = "0x9AD818", VA = "0x9AD818")]
	public void EnterVRMode()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x9AD4F8", Offset = "0x9AD4F8", VA = "0x9AD4F8")]
	public void LeaveVRMode()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x9AD908", Offset = "0x9AD908", VA = "0x9AD908")]
	public void SixDofForceQuit()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x9AC640", Offset = "0x9AC640", VA = "0x9AC640")]
	private void InitUI()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x9AC8DC", Offset = "0x9AC8DC", VA = "0x9AC8DC")]
	private void RefreshTextByLanguage()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x9AC29C", Offset = "0x9AC29C", VA = "0x9AC29C")]
	private void LoadIsMirroringValue()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x9AD7A4", Offset = "0x9AD7A4", VA = "0x9AD7A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B027C", Offset = "0x4B027C")]
	private IEnumerator OnResume()
	{
		return null;
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x9AD910", Offset = "0x9AD910", VA = "0x9AD910")]
	public Pvr_UnitySDKManager()
	{
	}
}
[Token(Token = "0x200003D")]
public class QuitGame : MonoBehaviour
{
	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x7CB8B8", Offset = "0x7CB8B8", VA = "0x7CB8B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x7CB8BC", Offset = "0x7CB8BC", VA = "0x7CB8BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x7CB8E8", Offset = "0x7CB8E8", VA = "0x7CB8E8")]
	public QuitGame()
	{
	}
}
[Token(Token = "0x200003E")]
public class Pvr_UnityEyeMask : MonoBehaviour
{
	[Token(Token = "0x2000392")]
	private class EyeMaskData
	{
		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Eye eyeSide;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera camera;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CommandBuffer cmdBuf;

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0x8ABD84", Offset = "0x8ABD84", VA = "0x8ABD84")]
		public EyeMaskData()
		{
		}
	}

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Shader eyeMaskShader;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material eyeMaskMaterial;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Mesh eyeMaskMeshLeft;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Mesh eyeMaskMeshRight;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Mesh eyeMaskMeshBoth;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float zDir;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Color eyeMaskColor;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<EyeMaskData> cameraDataList;

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x8AA0C4", Offset = "0x8AA0C4", VA = "0x8AA0C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x8AA180", Offset = "0x8AA180", VA = "0x8AA180")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x8AAE34", Offset = "0x8AAE34", VA = "0x8AAE34")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x8AA80C", Offset = "0x8AA80C", VA = "0x8AA80C")]
	private void CreateCommandBuffer()
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x8ABB64", Offset = "0x8ABB64", VA = "0x8ABB64")]
	private void OnCustomPreRender(Camera cam)
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x8AB288", Offset = "0x8AB288", VA = "0x8AB288")]
	private Mesh GetStencilMesh(Eye eyeSide)
	{
		return null;
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x8AB6F0", Offset = "0x8AB6F0", VA = "0x8AB6F0")]
	private Mesh GetStencilMeshBoth(Mesh leftMesh, Mesh rightMesh)
	{
		return null;
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x8AB144", Offset = "0x8AB144", VA = "0x8AB144")]
	private bool VerifyCommadBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x8AA448", Offset = "0x8AA448", VA = "0x8AA448")]
	private void PrepareCameras()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x8ABD24", Offset = "0x8ABD24", VA = "0x8ABD24")]
	private void AddCameraCommandBuffer(EyeMaskData data)
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x8AB070", Offset = "0x8AB070", VA = "0x8AB070")]
	private void RemoveCameraCommandBuffer(EyeMaskData data)
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x8AB0D0", Offset = "0x8AB0D0", VA = "0x8AB0D0")]
	private void CleanEyeMask()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x8ABD8C", Offset = "0x8ABD8C", VA = "0x8ABD8C")]
	public Pvr_UnityEyeMask()
	{
	}
}
[Token(Token = "0x200003F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4A7E88", Offset = "0x4A7E88")]
public class Pvr_UnitySDKEye : MonoBehaviour
{
	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UnitySDKEye> Instances;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Eye eyeSide;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AA11C", Offset = "0x4AA11C")]
	private Camera <eyecamera>k__BackingField;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int eyeCameraOriginCullingMask;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private CameraClearFlags eyeCameraOriginClearFlag;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color eyeCameraOriginBackgroundColor;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int lastBoundaryState;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Matrix4x4 realProj;

	[Token(Token = "0x4000222")]
	private const int bufferSize = 3;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int IDIndex;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private RenderEventType eventType;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int previousId;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool setLevel;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Material mat_Vignette;

	[Token(Token = "0x17000051")]
	public Camera eyecamera
	{
		[Token(Token = "0x600030C")]
		[Address(RVA = "0x99F67C", Offset = "0x99F67C", VA = "0x99F67C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B02E0", Offset = "0x4B02E0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600030D")]
		[Address(RVA = "0x99F684", Offset = "0x99F684", VA = "0x99F684")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B02F0", Offset = "0x4B02F0")]
		private set
		{
		}
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x99F68C", Offset = "0x99F68C", VA = "0x99F68C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x99F734", Offset = "0x99F734", VA = "0x99F734")]
	private void Start()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x99FE00", Offset = "0x99FE00", VA = "0x99FE00")]
	private void Update()
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x9A00E0", Offset = "0x9A00E0", VA = "0x9A00E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x9A01AC", Offset = "0x9A01AC", VA = "0x9A01AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x9A0278", Offset = "0x9A0278", VA = "0x9A0278")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x9A0304", Offset = "0x9A0304", VA = "0x9A0304")]
	public void MyPreRender(Camera camera)
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x9A053C", Offset = "0x9A053C", VA = "0x9A053C")]
	public void MyPreRender(ScriptableRenderContext context, Camera camera)
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x9A0600", Offset = "0x9A0600", VA = "0x9A0600")]
	public void MyPostRender(ScriptableRenderContext context, Camera camera)
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x9A03C8", Offset = "0x9A03C8", VA = "0x9A03C8")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x9A06C4", Offset = "0x9A06C4", VA = "0x9A06C4")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x9A0A50", Offset = "0x9A0A50", VA = "0x9A0A50")]
	public void EyeRender()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x99F824", Offset = "0x99F824", VA = "0x99F824")]
	private void Setup(Eye eyeSide)
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x99FAAC", Offset = "0x99FAAC", VA = "0x99FAAC")]
	private void SetupUpdate()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x996864", Offset = "0x996864", VA = "0x996864")]
	public void RefreshCameraPosition(float ipd)
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x9A0C74", Offset = "0x9A0C74", VA = "0x9A0C74")]
	private void DrawVignetteLine()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x9A0DA8", Offset = "0x9A0DA8", VA = "0x9A0DA8")]
	private void vignette()
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x9A08AC", Offset = "0x9A08AC", VA = "0x9A08AC")]
	private void SetFFRParameter()
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x9A1028", Offset = "0x9A1028", VA = "0x9A1028")]
	public Pvr_UnitySDKEye()
	{
	}
}
[Token(Token = "0x2000040")]
public class Pvr_UnitySDKEyeManager : MonoBehaviour
{
	[Token(Token = "0x2000393")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8A44", Offset = "0x4A8A44")]
	private sealed class <EndOfFrame>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKEyeManager <>4__this;

		[Token(Token = "0x1700015A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B0B")]
			[Address(RVA = "0x9A6270", Offset = "0x9A6270", VA = "0x9A6270", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B0D")]
			[Address(RVA = "0x9A62E0", Offset = "0x9A62E0", VA = "0x9A62E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0x9A3404", Offset = "0x9A3404", VA = "0x9A3404")]
		[DebuggerHidden]
		public <EndOfFrame>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0x9A4318", Offset = "0x9A4318", VA = "0x9A4318", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0x9A431C", Offset = "0x9A431C", VA = "0x9A431C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0x9A6278", Offset = "0x9A6278", VA = "0x9A6278", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000394")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8A54", Offset = "0x4A8A54")]
	private sealed class <ScreenFade>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKEyeManager <>4__this;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float startAlpha;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float endAlpha;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x1700015C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B11")]
			[Address(RVA = "0x9A6424", Offset = "0x9A6424", VA = "0x9A6424", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B13")]
			[Address(RVA = "0x9A6494", Offset = "0x9A6494", VA = "0x9A6494", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0x9A4254", Offset = "0x9A4254", VA = "0x9A4254")]
		[DebuggerHidden]
		public <ScreenFade>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0x9A62E8", Offset = "0x9A62E8", VA = "0x9A62E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0x9A62EC", Offset = "0x9A62EC", VA = "0x9A62EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0x9A642C", Offset = "0x9A642C", VA = "0x9A642C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKEyeManager instance;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Pvr_UnitySDKEye[] eyes;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Camera LeftEyeCamera;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Camera RightEyeCamera;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Camera MonoEyeCamera;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Camera BothEyeCamera;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int MonoEyeTextureID;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private readonly int WaitSplashScreenFrames;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int frameNum;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	[HideInInspector]
	private bool foveatedRendering;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[HideInInspector]
	private EFoveationLevel foveationLevel;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int eyeTextureId;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderEventType eventType;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Pvr_UnitySDKEyeOverlay compositeLayer;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int overlayLayerDepth;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int underlayLayerDepth;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isHeadLocked;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int layerFlags;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public bool EyeTracking;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public Vector3 eyePoint;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private EyeTrackingData eyePoseData;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[HideInInspector]
	public static bool supportEyeTracking;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AA20C", Offset = "0x4AA20C")]
	public bool screenFade;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AA244", Offset = "0x4AA244")]
	public float fadeTime;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AA27C", Offset = "0x4AA27C")]
	public Color fadeColor;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public int renderQueue;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private MeshRenderer fadeMeshRenderer;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private MeshFilter fadeMeshFilter;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Material fadeMaterial;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float elapsedTime;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private bool isFading;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float currentAlpha;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float nowFadeAlpha;

	[Token(Token = "0x17000052")]
	public static Pvr_UnitySDKEyeManager Instance
	{
		[Token(Token = "0x6000322")]
		[Address(RVA = "0x9966D4", Offset = "0x9966D4", VA = "0x9966D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000053")]
	public Pvr_UnitySDKEye[] Eyes
	{
		[Token(Token = "0x6000323")]
		[Address(RVA = "0x9967CC", Offset = "0x9967CC", VA = "0x9967CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000054")]
	[HideInInspector]
	public bool FoveatedRendering
	{
		[Token(Token = "0x6000324")]
		[Address(RVA = "0x9A1148", Offset = "0x9A1148", VA = "0x9A1148")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000325")]
		[Address(RVA = "0x9A1150", Offset = "0x9A1150", VA = "0x9A1150")]
		set
		{
		}
	}

	[Token(Token = "0x17000055")]
	[HideInInspector]
	public EFoveationLevel FoveationLevel
	{
		[Token(Token = "0x6000326")]
		[Address(RVA = "0x9A11B4", Offset = "0x9A11B4", VA = "0x9A11B4")]
		get
		{
			return default(EFoveationLevel);
		}
		[Token(Token = "0x6000327")]
		[Address(RVA = "0x9A11BC", Offset = "0x9A11BC", VA = "0x9A11BC")]
		set
		{
		}
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x9A11D0", Offset = "0x9A11D0", VA = "0x9A11D0")]
	private void SetCameraEnableEditor()
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x9A14D0", Offset = "0x9A14D0", VA = "0x9A14D0")]
	private void SetCamerasEnableByStereoRendering()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x9A15B8", Offset = "0x9A15B8", VA = "0x9A15B8")]
	private void SetupMonoCamera()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x9A171C", Offset = "0x9A171C", VA = "0x9A171C")]
	private void SetupUpdate()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x9A1840", Offset = "0x9A1840", VA = "0x9A1840")]
	private void MonoEyeRender()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x9A1A24", Offset = "0x9A1A24", VA = "0x9A1A24")]
	private void Awake()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x9A2474", Offset = "0x9A2474", VA = "0x9A2474")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x9A2C68", Offset = "0x9A2C68", VA = "0x9A2C68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x9A2C8C", Offset = "0x9A2C8C", VA = "0x9A2C8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x9A2FF4", Offset = "0x9A2FF4", VA = "0x9A2FF4")]
	private void OnPause()
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x9A311C", Offset = "0x9A311C", VA = "0x9A311C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x9A3124", Offset = "0x9A3124", VA = "0x9A3124")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x9A328C", Offset = "0x9A328C", VA = "0x9A328C")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x9A3390", Offset = "0x9A3390", VA = "0x9A3390")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B0300", Offset = "0x4B0300")]
	private IEnumerator EndOfFrame()
	{
		return null;
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x9A3430", Offset = "0x9A3430", VA = "0x9A3430")]
	private void CreateExternalSurface(Pvr_UnitySDKEyeOverlay overlayInstance, int layerDepth)
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x9A3A60", Offset = "0x9A3A60", VA = "0x9A3A60")]
	public bool SetEyeTrackingMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x997780", Offset = "0x997780", VA = "0x997780")]
	public Vector3 GetEyeTrackingPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x9A3DB8", Offset = "0x9A3DB8", VA = "0x9A3DB8")]
	private EyeDeviceInfo GetDeviceInfo()
	{
		return default(EyeDeviceInfo);
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x9A1E2C", Offset = "0x9A1E2C", VA = "0x9A1E2C")]
	private void CreateFadeMesh()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x9A3128", Offset = "0x9A3128", VA = "0x9A3128")]
	private void DestoryFadeMesh()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x9A246C", Offset = "0x9A246C", VA = "0x9A246C")]
	public void SetCurrentAlpha(float alpha)
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x9A2BB8", Offset = "0x9A2BB8", VA = "0x9A2BB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B0364", Offset = "0x4B0364")]
	private IEnumerator ScreenFade(float startAlpha, float endAlpha)
	{
		return null;
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x9A40B4", Offset = "0x9A40B4", VA = "0x9A40B4")]
	private void SetMaterialAlpha()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x9A2BB0", Offset = "0x9A2BB0", VA = "0x9A2BB0")]
	public bool GfxDeviceAdvanceFrameGLES()
	{
		return default(bool);
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x9A4280", Offset = "0x9A4280", VA = "0x9A4280")]
	public Pvr_UnitySDKEyeManager()
	{
	}
}
[Token(Token = "0x2000041")]
public class Pvr_UnitySDKEyeOverlay : MonoBehaviour, IComparable<Pvr_UnitySDKEyeOverlay>
{
	[Token(Token = "0x2000395")]
	public delegate void ExternalAndroidSurfaceObjectCreated();

	[Token(Token = "0x2000396")]
	public enum OverlayShape
	{
		[Token(Token = "0x400168F")]
		Quad,
		[Token(Token = "0x4001690")]
		Cylinder,
		[Token(Token = "0x4001691")]
		Equirect
	}

	[Token(Token = "0x2000397")]
	public enum OverlayType
	{
		[Token(Token = "0x4001693")]
		Overlay,
		[Token(Token = "0x4001694")]
		Underlay
	}

	[Token(Token = "0x2000398")]
	public enum OverlayTexFilterMode
	{
		[Token(Token = "0x4001696")]
		NotCare,
		[Token(Token = "0x4001697")]
		Nearest,
		[Token(Token = "0x4001698")]
		Linear,
		[Token(Token = "0x4001699")]
		Nearest_Mipmap_Nearest,
		[Token(Token = "0x400169A")]
		Linear_Mipmap_Nearest,
		[Token(Token = "0x400169B")]
		Nearest_Mipmap_Linear,
		[Token(Token = "0x400169C")]
		Linear_Mipmap_Linear
	}

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UnitySDKEyeOverlay> Instances;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int layerIndex;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public OverlayType overlayType;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OverlayShape overlayShape;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform layerTransform;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture[] layerTextures;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int[] layerTextureIds;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Matrix4x4[] MVMatrixs;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3[] ModelScales;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Quaternion[] ModelRotations;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3[] ModelTranslations;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Quaternion[] CameraRotations;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3[] CameraTranslations;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Camera[] layerEyeCamera;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool overrideColorScaleAndOffset;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Vector4 colorScale;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Vector4 colorOffset;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector4 overlayLayerColorScaleDefault;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector4 overlayLayerColorOffsetDefault;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public bool isExternalAndroidSurface;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public IntPtr externalAndroidSurfaceObject;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ExternalAndroidSurfaceObjectCreated externalAndroidSurfaceObjectCreated;

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x9A649C", Offset = "0x9A649C", VA = "0x9A649C", Slot = "4")]
	public int CompareTo(Pvr_UnitySDKEyeOverlay other)
	{
		return default(int);
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x9A64D4", Offset = "0x9A64D4", VA = "0x9A64D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x9A6AEC", Offset = "0x9A6AEC", VA = "0x9A6AEC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x9A71E4", Offset = "0x9A71E4", VA = "0x9A71E4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x9A28B8", Offset = "0x9A28B8", VA = "0x9A28B8")]
	public void RefreshCamera()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x9A68E4", Offset = "0x9A68E4", VA = "0x9A68E4")]
	private void InitializeBuffer()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x9A6AF0", Offset = "0x9A6AF0", VA = "0x9A6AF0")]
	private void UpdateCoords()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x9A7270", Offset = "0x9A7270", VA = "0x9A7270")]
	public void SetTexture(Texture texture)
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x9A7334", Offset = "0x9A7334", VA = "0x9A7334")]
	public void SetLayerColorScaleAndOffset(Vector4 scale, Vector4 offset)
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x9A61F0", Offset = "0x9A61F0", VA = "0x9A61F0")]
	public Vector4 GetLayerColorScale()
	{
		return default(Vector4);
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x9A6230", Offset = "0x9A6230", VA = "0x9A6230")]
	public Vector4 GetLayerColorOffset()
	{
		return default(Vector4);
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x9A7348", Offset = "0x9A7348", VA = "0x9A7348")]
	public Pvr_UnitySDKEyeOverlay()
	{
	}
}
[Token(Token = "0x2000042")]
public class Pvr_UnitySDKRender
{
	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKRender instance;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AndroidJavaObject activity;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static AndroidJavaClass javaVrActivityClass;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static AndroidJavaClass javaSysActivityClass;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static AndroidJavaClass javaserviceClass;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static AndroidJavaClass javaVrActivityLongReceiver;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static AndroidJavaClass javaVrActivityClientClass;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool canConnecttoActivity;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool isInitrenderThread;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string model;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 prefinger1;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 prefinger2;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int eyeTextureCount;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RenderTexture[] eyeTextures;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int[] eyeTextureIds;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int currEyeTextureIdx;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int nextEyeTextureIdx;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int lastEyeTextureIdx;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool isSwitchSDK;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int RenderviewNumber;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool isFirstStartup;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool isShellMode;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private StereoRenderingPathPico stereoRenderPath;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AA2B4", Offset = "0x4AA2B4")]
	private SDKStereoRendering <StereoRendering>k__BackingField;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float rtScaleFactor;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float eyeVFov;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float eyeHFov;

	[Token(Token = "0x17000056")]
	public static Pvr_UnitySDKRender Instance
	{
		[Token(Token = "0x600034F")]
		[Address(RVA = "0x7BF8A4", Offset = "0x7BF8A4", VA = "0x7BF8A4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000350")]
		[Address(RVA = "0x7C23D4", Offset = "0x7C23D4", VA = "0x7C23D4")]
		set
		{
		}
	}

	[Token(Token = "0x17000057")]
	public StereoRenderingPathPico StereoRenderPath
	{
		[Token(Token = "0x6000352")]
		[Address(RVA = "0x7C2DD4", Offset = "0x7C2DD4", VA = "0x7C2DD4")]
		get
		{
			return default(StereoRenderingPathPico);
		}
	}

	[Token(Token = "0x17000058")]
	public SDKStereoRendering StereoRendering
	{
		[Token(Token = "0x6000353")]
		[Address(RVA = "0x7C2DDC", Offset = "0x7C2DDC", VA = "0x7C2DDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B03C8", Offset = "0x4B03C8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000354")]
		[Address(RVA = "0x7C2DE4", Offset = "0x7C2DE4", VA = "0x7C2DE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B03D8", Offset = "0x4B03D8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000059")]
	public float RtScaleFactor
	{
		[Token(Token = "0x6000355")]
		[Address(RVA = "0x7C2DEC", Offset = "0x7C2DEC", VA = "0x7C2DEC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000356")]
		[Address(RVA = "0x7C2DF4", Offset = "0x7C2DF4", VA = "0x7C2DF4")]
		set
		{
		}
	}

	[Token(Token = "0x1700005A")]
	public float EyeVFoV
	{
		[Token(Token = "0x6000357")]
		[Address(RVA = "0x7C2F94", Offset = "0x7C2F94", VA = "0x7C2F94")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000358")]
		[Address(RVA = "0x7C2F9C", Offset = "0x7C2F9C", VA = "0x7C2F9C")]
		set
		{
		}
	}

	[Token(Token = "0x1700005B")]
	public float EyeHFoV
	{
		[Token(Token = "0x6000359")]
		[Address(RVA = "0x7C2FB0", Offset = "0x7C2FB0", VA = "0x7C2FB0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600035A")]
		[Address(RVA = "0x7C2FB8", Offset = "0x7C2FB8", VA = "0x7C2FB8")]
		set
		{
		}
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x7C22C4", Offset = "0x7C22C4", VA = "0x7C22C4")]
	public Pvr_UnitySDKRender()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x7C2440", Offset = "0x7C2440", VA = "0x7C2440")]
	public void ConnectToAndriod()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x7C2D54", Offset = "0x7C2D54", VA = "0x7C2D54")]
	public void Init()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x7C3380", Offset = "0x7C3380", VA = "0x7C3380")]
	private bool InitRenderAbility()
	{
		return default(bool);
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x7C34A8", Offset = "0x7C34A8", VA = "0x7C34A8")]
	private bool UpdateRenderParaFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x7C355C", Offset = "0x7C355C", VA = "0x7C355C")]
	private bool CreateEyeBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x7C4010", Offset = "0x7C4010", VA = "0x7C4010")]
	private void InitSinglePass()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x7C3974", Offset = "0x7C3974", VA = "0x7C3974")]
	public float GetEyeVFOV()
	{
		return default(float);
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x7C3AE0", Offset = "0x7C3AE0", VA = "0x7C3AE0")]
	public float GetEyeHFOV()
	{
		return default(float);
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x7C422C", Offset = "0x7C422C", VA = "0x7C422C")]
	private void ConfigureEyeBuffer(int eyeTextureIndex, Vector2 resolution)
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x7C2E0C", Offset = "0x7C2E0C", VA = "0x7C2E0C")]
	public bool ReCreateEyeBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x7C0AA4", Offset = "0x7C0AA4", VA = "0x7C0AA4")]
	public void ReInit()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x7BF964", Offset = "0x7BF964", VA = "0x7BF964")]
	public void IssueRenderThread()
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x7C4914", Offset = "0x7C4914", VA = "0x7C4914")]
	private void AutoAdpatForPico1s()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x7C3C4C", Offset = "0x7C3C4C", VA = "0x7C3C4C")]
	public Vector2 GetEyeBufferResolution()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x7C4BD8", Offset = "0x7C4BD8", VA = "0x7C4BD8")]
	public bool GetUsePredictedMatrix()
	{
		return default(bool);
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x7C2FCC", Offset = "0x7C2FCC", VA = "0x7C2FCC")]
	public bool GetIsShellMode()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000043")]
public class Pvr_UnitySDKSinglePass : SDKStereoRendering
{
	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Camera bothCamera;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Matrix4x4[] unity_StereoMatrixP;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Matrix4x4[] unity_StereoMatrixInvP;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Matrix4x4[] unity_StereoWorldToCamera;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Matrix4x4[] unity_StereoCameraToWorld;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Matrix4x4[] unity_StereoMatrixVP;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3[] eyesOffset;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Matrix4x4[] eyesOffsetMatrix;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CommandBuffer commandBufferBeforeForwardOpaque;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CommandBuffer commandBufferBeforeSkybox;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CommandBuffer commandBufferAfterSkybox;

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x7C85B0", Offset = "0x7C85B0", VA = "0x7C85B0", Slot = "4")]
	public override void InitEye(Camera eye)
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x7C9040", Offset = "0x7C9040", VA = "0x7C9040", Slot = "5")]
	public override void OnSDKRenderInited()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x7C91A0", Offset = "0x7C91A0", VA = "0x7C91A0", Slot = "6")]
	public override void OnSDKPreRender()
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x7C9C70", Offset = "0x7C9C70", VA = "0x7C9C70", Slot = "7")]
	public override void OnSDKPostRender()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x7C9044", Offset = "0x7C9044", VA = "0x7C9044")]
	public void OnSDKRenderInited_SinglePass()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x7C9D28", Offset = "0x7C9D28", VA = "0x7C9D28")]
	private void SetAntiAliasing()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x7C89D0", Offset = "0x7C89D0", VA = "0x7C89D0")]
	public void SetEyesPosition()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x7C8ECC", Offset = "0x7C8ECC", VA = "0x7C8ECC")]
	public void SetEyeProjection()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x7C9E30", Offset = "0x7C9E30", VA = "0x7C9E30")]
	private static Matrix4x4 GetProjection(float near, float far)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x7CA108", Offset = "0x7CA108", VA = "0x7CA108")]
	public static Matrix4x4 MakeProjection(float n, float f)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x7C9F04", Offset = "0x7C9F04", VA = "0x7C9F04")]
	public void SetStereoProjectionMatrix(Matrix4x4 left, Matrix4x4 right)
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x7C9C78", Offset = "0x7C9C78", VA = "0x7C9C78")]
	private void SwitchKeywordAndDeviceView(bool enable)
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x7CA2F0", Offset = "0x7CA2F0", VA = "0x7CA2F0")]
	public static Matrix4x4[] GetStereoWorldToCameraMat()
	{
		return null;
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x7C91A4", Offset = "0x7C91A4", VA = "0x7C91A4")]
	public void SinglePassPreRender()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x7CA62C", Offset = "0x7CA62C", VA = "0x7CA62C")]
	private void SetCommandBuffers()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x7CA574", Offset = "0x7CA574", VA = "0x7CA574")]
	private void SetRenderTextureWithDepth()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x7C486C", Offset = "0x7C486C", VA = "0x7C486C")]
	public Pvr_UnitySDKSinglePass()
	{
	}
}
[Token(Token = "0x2000044")]
public abstract class SDKStereoRendering
{
	[Token(Token = "0x600037E")]
	public abstract void InitEye(Camera eye);

	[Token(Token = "0x600037F")]
	public abstract void OnSDKRenderInited();

	[Token(Token = "0x6000380")]
	public abstract void OnSDKPreRender();

	[Token(Token = "0x6000381")]
	public abstract void OnSDKPostRender();

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x698D64", Offset = "0x698D64", VA = "0x698D64")]
	protected SDKStereoRendering()
	{
	}
}
[Token(Token = "0x2000045")]
public class HighlightAtGaze : MonoBehaviour
{
	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color HighlightColor;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float AnimationTime;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer myRenderer;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color originalColor;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color targetColor;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private EyeTrackingGazeRay gazeRay;

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x734EC0", Offset = "0x734EC0", VA = "0x734EC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x734F58", Offset = "0x734F58", VA = "0x734F58")]
	private void Update()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x735198", Offset = "0x735198", VA = "0x735198")]
	public HighlightAtGaze()
	{
	}
}
[Token(Token = "0x2000046")]
public class RayVisualizer : MonoBehaviour
{
	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LineRenderer _line;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EyeTrackingGazeRay gazeRay;

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x696C3C", Offset = "0x696C3C", VA = "0x696C3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x696CF4", Offset = "0x696CF4", VA = "0x696CF4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x696EE4", Offset = "0x696EE4", VA = "0x696EE4")]
	public RayVisualizer()
	{
	}
}
[Token(Token = "0x2000047")]
public class GetSeeThroughImage : MonoBehaviour
{
	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RawImage viewImage_left;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RawImage viewImage_right;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int width;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int height;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RenderTexture cameraTex_left;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RenderTexture cameraTex_right;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool cameraPreview;

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x723BD0", Offset = "0x723BD0", VA = "0x723BD0")]
	private void Start()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x723D1C", Offset = "0x723D1C", VA = "0x723D1C")]
	private void Update()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x723DA8", Offset = "0x723DA8", VA = "0x723DA8")]
	private void OnDestory()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x723BD4", Offset = "0x723BD4", VA = "0x723BD4")]
	private void CreateTexture()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x723D58", Offset = "0x723D58", VA = "0x723D58")]
	private void DrawTexture()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x723DC0", Offset = "0x723DC0", VA = "0x723DC0")]
	public GetSeeThroughImage()
	{
	}
}
[Token(Token = "0x2000048")]
public class OverlayExternalSurfaceDemo : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000399")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8A64", Offset = "0x4A8A64")]
	private sealed class <>c
	{
		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Pvr_UnitySDKEyeOverlay.ExternalAndroidSurfaceObjectCreated <>9__7_0;

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0x646618", Offset = "0x646618", VA = "0x646618")]
		public <>c()
		{
		}

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0x646620", Offset = "0x646620", VA = "0x646620")]
		internal void <StartPlay>b__7_0()
		{
		}
	}

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string movieName;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Pvr_UnitySDKEyeOverlay.OverlayType overlayType;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Pvr_UnitySDKEyeOverlay.OverlayShape overlayShape;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Pvr_UnitySDKEyeOverlay overlay;

	[Token(Token = "0x4000298")]
	private const string TAG = "[ExternalSurface]>>>>>>";

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x6461D0", Offset = "0x6461D0", VA = "0x6461D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x64631C", Offset = "0x64631C", VA = "0x64631C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x6463A0", Offset = "0x6463A0", VA = "0x6463A0")]
	private void StartPlay(string moviePath, string licenceUrl)
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x6465AC", Offset = "0x6465AC", VA = "0x6465AC")]
	public OverlayExternalSurfaceDemo()
	{
	}
}
[Token(Token = "0x2000049")]
public class MoveCylinder : MonoBehaviour
{
	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 startingPosition;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion startingRotation;

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x641C34", Offset = "0x641C34", VA = "0x641C34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x641CA4", Offset = "0x641CA4", VA = "0x641CA4")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x641D3C", Offset = "0x641D3C", VA = "0x641D3C")]
	public MoveCylinder()
	{
	}
}
[Token(Token = "0x200004A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4A7EEC", Offset = "0x4A7EEC")]
public class MoveSphere : MonoBehaviour
{
	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 startingPosition;

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x6421E8", Offset = "0x6421E8", VA = "0x6421E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x6423DC", Offset = "0x6423DC", VA = "0x6423DC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x642308", Offset = "0x642308", VA = "0x642308")]
	public void SetGazedAt(bool gazedAt)
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x6423E0", Offset = "0x6423E0", VA = "0x6423E0")]
	public void Reset()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x642550", Offset = "0x642550", VA = "0x642550")]
	public void TeleportRandomly()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x642678", Offset = "0x642678", VA = "0x642678")]
	public MoveSphere()
	{
	}
}
[Token(Token = "0x200004B")]
public class Resetbutton : MonoBehaviour
{
	[Token(Token = "0x600039C")]
	[Address(RVA = "0x6977B0", Offset = "0x6977B0", VA = "0x6977B0")]
	public void DemoResetTracking()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x697858", Offset = "0x697858", VA = "0x697858")]
	public Resetbutton()
	{
	}
}
[Token(Token = "0x200004C")]
public class UserEntitlementCheck : MonoBehaviour
{
	[Token(Token = "0x600039E")]
	[Address(RVA = "0x827D30", Offset = "0x827D30", VA = "0x827D30")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x827DC4", Offset = "0x827DC4", VA = "0x827DC4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x827E58", Offset = "0x827E58", VA = "0x827E58")]
	private void HandelEntitlementCheckResult(int resultCode)
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x828124", Offset = "0x828124", VA = "0x828124")]
	public UserEntitlementCheck()
	{
	}
}
[Token(Token = "0x200004D")]
public class Pvr_UnitySDKHeadTrack : MonoBehaviour
{
	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AA2C4", Offset = "0x4AA2C4")]
	public bool trackRotation;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AA2FC", Offset = "0x4AA2FC")]
	public bool trackPosition;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool updated;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool dataClock;

	[Token(Token = "0x1700005C")]
	public Ray Gaze
	{
		[Token(Token = "0x60003A2")]
		[Address(RVA = "0x9A7728", Offset = "0x9A7728", VA = "0x9A7728")]
		get
		{
			return default(Ray);
		}
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x9A7D9C", Offset = "0x9A7D9C", VA = "0x9A7D9C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x9A77E0", Offset = "0x9A77E0", VA = "0x9A77E0")]
	private void UpdateHead()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x9A7DA4", Offset = "0x9A7DA4", VA = "0x9A7DA4")]
	public Pvr_UnitySDKHeadTrack()
	{
	}
}
[Token(Token = "0x200004E")]
public class Pvr_UnitySDKPose
{
	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static readonly Matrix4x4 flipZ;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AA334", Offset = "0x4AA334")]
	private Vector3 <Position>k__BackingField;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AA344", Offset = "0x4AA344")]
	private Quaternion <Orientation>k__BackingField;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AA354", Offset = "0x4AA354")]
	private Matrix4x4 <Matrix>k__BackingField;

	[Token(Token = "0x1700005D")]
	public Matrix4x4 RightHandedMatrix
	{
		[Token(Token = "0x60003A6")]
		[Address(RVA = "0x7C1B4C", Offset = "0x7C1B4C", VA = "0x7C1B4C")]
		get
		{
			return default(Matrix4x4);
		}
	}

	[Token(Token = "0x1700005E")]
	public Vector3 Position
	{
		[Token(Token = "0x60003A7")]
		[Address(RVA = "0x7C1CDC", Offset = "0x7C1CDC", VA = "0x7C1CDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B03E8", Offset = "0x4B03E8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60003A8")]
		[Address(RVA = "0x7C1CE8", Offset = "0x7C1CE8", VA = "0x7C1CE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B03F8", Offset = "0x4B03F8")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700005F")]
	public Quaternion Orientation
	{
		[Token(Token = "0x60003A9")]
		[Address(RVA = "0x7C1CF4", Offset = "0x7C1CF4", VA = "0x7C1CF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0408", Offset = "0x4B0408")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60003AA")]
		[Address(RVA = "0x7C1D00", Offset = "0x7C1D00", VA = "0x7C1D00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0418", Offset = "0x4B0418")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000060")]
	public Matrix4x4 Matrix
	{
		[Token(Token = "0x60003AB")]
		[Address(RVA = "0x7C1CB8", Offset = "0x7C1CB8", VA = "0x7C1CB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0428", Offset = "0x4B0428")]
		get
		{
			return default(Matrix4x4);
		}
		[Token(Token = "0x60003AC")]
		[Address(RVA = "0x7C1D0C", Offset = "0x7C1D0C", VA = "0x7C1D0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0438", Offset = "0x4B0438")]
		protected set
		{
		}
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x7C1D28", Offset = "0x7C1D28", VA = "0x7C1D28")]
	public Pvr_UnitySDKPose(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x7C1EF0", Offset = "0x7C1EF0", VA = "0x7C1EF0")]
	public Pvr_UnitySDKPose(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x7C1F70", Offset = "0x7C1F70", VA = "0x7C1F70")]
	public void Set(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x7C1D84", Offset = "0x7C1D84", VA = "0x7C1D84")]
	protected void Set(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x7C20B0", Offset = "0x7C20B0", VA = "0x7C20B0")]
	private Quaternion NormalizeQuaternion(ref Quaternion q)
	{
		return default(Quaternion);
	}
}
[Token(Token = "0x200004F")]
public class Pvr_UnitySDKSensor
{
	[Token(Token = "0x200039A")]
	public delegate void Enter3DofModel();

	[Token(Token = "0x200039B")]
	public delegate void Exit3DofModel();

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKSensor instance;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool SensorStart;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool SensorInit;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Quaternion UnityQuaternion;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 UnityPosition;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Sensorindex sensorIndex;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool dofClock;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action EyeFovChanged;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Pvr_UnitySDKPose HeadPose;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float vfov;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float hfov;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float w;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float x;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float y;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float z;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float px;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float py;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float pz;

	[Token(Token = "0x17000061")]
	public static Pvr_UnitySDKSensor Instance
	{
		[Token(Token = "0x60003B3")]
		[Address(RVA = "0x7C01B0", Offset = "0x7C01B0", VA = "0x7C01B0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003B4")]
		[Address(RVA = "0x7C4CA0", Offset = "0x7C4CA0", VA = "0x7C4CA0")]
		set
		{
		}
	}

	[Token(Token = "0x14000016")]
	public static event Enter3DofModel Enter3DofModelEvent
	{
		[Token(Token = "0x60003B6")]
		[Address(RVA = "0x7C4E40", Offset = "0x7C4E40", VA = "0x7C4E40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0448", Offset = "0x4B0448")]
		add
		{
		}
		[Token(Token = "0x60003B7")]
		[Address(RVA = "0x7C4F70", Offset = "0x7C4F70", VA = "0x7C4F70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0458", Offset = "0x4B0458")]
		remove
		{
		}
	}

	[Token(Token = "0x14000017")]
	public static event Exit3DofModel Exit3DofModelEvent
	{
		[Token(Token = "0x60003B8")]
		[Address(RVA = "0x7C50A0", Offset = "0x7C50A0", VA = "0x7C50A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0468", Offset = "0x4B0468")]
		add
		{
		}
		[Token(Token = "0x60003B9")]
		[Address(RVA = "0x7C51D0", Offset = "0x7C51D0", VA = "0x7C51D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0478", Offset = "0x4B0478")]
		remove
		{
		}
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x7C4BE4", Offset = "0x7C4BE4", VA = "0x7C4BE4")]
	public Pvr_UnitySDKSensor()
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x7C4D0C", Offset = "0x7C4D0C", VA = "0x7C4D0C")]
	public void Init()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x7C56C8", Offset = "0x7C56C8", VA = "0x7C56C8")]
	public void SensorUpdate()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x7C5580", Offset = "0x7C5580", VA = "0x7C5580")]
	public bool InitUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x7C5300", Offset = "0x7C5300", VA = "0x7C5300")]
	public bool InitUnitySDK6DofSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x7C0270", Offset = "0x7C0270", VA = "0x7C0270")]
	public bool StartUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x7C68BC", Offset = "0x7C68BC", VA = "0x7C68BC")]
	public bool StopUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x7C03B8", Offset = "0x7C03B8", VA = "0x7C03B8")]
	public bool ResetUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x7C0540", Offset = "0x7C0540", VA = "0x7C0540")]
	public bool OptionalResetUnitySDKSensor(int resetRot, int resetPos)
	{
		return default(bool);
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x7C5768", Offset = "0x7C5768", VA = "0x7C5768")]
	public bool GetUnitySDKSensorState()
	{
		return default(bool);
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x7C7474", Offset = "0x7C7474", VA = "0x7C7474")]
	public bool GetUnitySDKPSensorState()
	{
		return default(bool);
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x7C7204", Offset = "0x7C7204", VA = "0x7C7204")]
	private void RefreshHeadData(float x, float y, float z, float w, float px, float py, float pz)
	{
	}
}
[Token(Token = "0x2000050")]
public class CLoadingAsset : ScriptableObject
{
	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int SplashScreenType;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Texture2D> splashImage;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D Inside_background;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool UseSplashText;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string DefaultText;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string ChineseText;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string EnglishText;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string JapaneseText;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string KoreanText;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string FontSize;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color FontColor;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string TextHeight;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool UseCarousel;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int SplashTextAlignment;

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x6CAE80", Offset = "0x6CAE80", VA = "0x6CAE80")]
	public CLoadingAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x2000051")]
public class Pvr_UnitySDKConfigProfile
{
	[Token(Token = "0x200039C")]
	public struct Lenses
	{
		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float separation;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float offset;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float distance;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int alignment;

		[Token(Token = "0x40016A3")]
		public const int AlignTop = -1;

		[Token(Token = "0x40016A4")]
		public const int AlignCenter = 0;

		[Token(Token = "0x40016A5")]
		public const int AlignBottom = 1;
	}

	[Token(Token = "0x200039D")]
	public struct MaxFOV
	{
		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float upper;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float lower;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float inner;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float outer;
	}

	[Token(Token = "0x200039E")]
	public struct Distortion
	{
		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float k1;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float k2;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float k3;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float k4;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float k5;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float k6;

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0x50FDAC", Offset = "0x50FDAC", VA = "0x50FDAC")]
		public float distort(float r)
		{
			return default(float);
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0x50FDB4", Offset = "0x50FDB4", VA = "0x50FDB4")]
		public float distort(float r, float dist)
		{
			return default(float);
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0x50FDBC", Offset = "0x50FDBC", VA = "0x50FDBC")]
		public float diatortInv(float radious)
		{
			return default(float);
		}
	}

	[Token(Token = "0x200039F")]
	public struct Device
	{
		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Lenses devLenses;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MaxFOV devMaxFov;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Distortion devDistortion;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Distortion devDistortionInv;
	}

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Device SimulateDevice;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Device device;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static readonly Pvr_UnitySDKConfigProfile Default;

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x99D6FC", Offset = "0x99D6FC", VA = "0x99D6FC")]
	public Pvr_UnitySDKConfigProfile Clone()
	{
		return null;
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x99D798", Offset = "0x99D798", VA = "0x99D798")]
	public static Pvr_UnitySDKConfigProfile GetPicoProfile()
	{
		return null;
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x99D844", Offset = "0x99D844", VA = "0x99D844")]
	public float[] GetLeftEyeVisibleTanAngles(float width, float height)
	{
		return null;
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x99DBD8", Offset = "0x99DBD8", VA = "0x99DBD8")]
	public float[] GetLeftEyeNoLensTanAngles(float width, float height)
	{
		return null;
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x99DE4C", Offset = "0x99DE4C", VA = "0x99DE4C")]
	public Rect GetLeftEyeVisibleScreenRect(float[] undistortedFrustum, float width, float height)
	{
		return default(Rect);
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x99D790", Offset = "0x99D790", VA = "0x99D790")]
	public Pvr_UnitySDKConfigProfile()
	{
	}
}
[Token(Token = "0x2000052")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4A7F50", Offset = "0x4A7F50")]
public class Pvr_UnitySDKFPS : MonoBehaviour
{
	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text fpsText;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float updateInterval;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float accum;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frames;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timeLeft;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string strFps;

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x9A7580", Offset = "0x9A7580", VA = "0x9A7580")]
	private void Update()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x9A7608", Offset = "0x9A7608", VA = "0x9A7608")]
	private void ShowFps()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x9A7718", Offset = "0x9A7718", VA = "0x9A7718")]
	public Pvr_UnitySDKFPS()
	{
	}
}
[Token(Token = "0x2000053")]
public class Pvr_GazeFuse : MonoBehaviour
{
	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject gazeGameObject;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image image;

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x89E248", Offset = "0x89E248", VA = "0x89E248")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x89E2A0", Offset = "0x89E2A0", VA = "0x89E2A0")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x89E474", Offset = "0x89E474", VA = "0x89E474")]
	private void FuseAmountChanged(float fuseAmount)
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x89E524", Offset = "0x89E524", VA = "0x89E524")]
	public Pvr_GazeFuse()
	{
	}
}
[Token(Token = "0x2000054")]
public class Pvr_GazeInputModule : PointerInputModule
{
	[Token(Token = "0x20003A0")]
	public enum Mode
	{
		[Token(Token = "0x40016B5")]
		Click,
		[Token(Token = "0x40016B6")]
		Gaze
	}

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Mode mode;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4AA384", Offset = "0x4AA384")]
	public string ClickInputName;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4AA3BC", Offset = "0x4AA3BC")]
	public float GazeTimeInSeconds;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AA3F4", Offset = "0x4AA3F4")]
	private static float <gazeFraction>k__BackingField;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AA404", Offset = "0x4AA404")]
	private static GameObject <gazeGameObject>k__BackingField;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RaycastResult CurrentRaycast;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private PointerEventData pointerEventData;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GameObject currentLookAtHandler;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float currentLookAtHandlerClickTime;

	[Token(Token = "0x17000062")]
	public static float gazeFraction
	{
		[Token(Token = "0x60003D5")]
		[Address(RVA = "0x89E424", Offset = "0x89E424", VA = "0x89E424")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0488", Offset = "0x4B0488")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003D6")]
		[Address(RVA = "0x89E52C", Offset = "0x89E52C", VA = "0x89E52C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0498", Offset = "0x4B0498")]
		private set
		{
		}
	}

	[Token(Token = "0x17000063")]
	public static GameObject gazeGameObject
	{
		[Token(Token = "0x60003D7")]
		[Address(RVA = "0x89E3D4", Offset = "0x89E3D4", VA = "0x89E3D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B04A8", Offset = "0x4B04A8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003D8")]
		[Address(RVA = "0x89E588", Offset = "0x89E588", VA = "0x89E588")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B04B8", Offset = "0x4B04B8")]
		private set
		{
		}
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x89E5DC", Offset = "0x89E5DC", VA = "0x89E5DC", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x89E600", Offset = "0x89E600", VA = "0x89E600")]
	private void HandleLook()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x89E840", Offset = "0x89E840", VA = "0x89E840")]
	private void HandleSelection()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x89ECD8", Offset = "0x89ECD8", VA = "0x89ECD8")]
	public Pvr_GazeInputModule()
	{
	}
}
[Token(Token = "0x2000055")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4A7FB4", Offset = "0x4A7FB4")]
public class Pvr_GazeInputModuleCrosshair : MonoBehaviour
{
	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool DisplayCrosshair;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AA414", Offset = "0x4AA414")]
	public Transform Crosshair;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Pvr_GazeInputModule gazeInputModule;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 CrosshairOriginalScale;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float CrosshairOriginalDistance;

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x89ED38", Offset = "0x89ED38", VA = "0x89ED38")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x89ED90", Offset = "0x89ED90", VA = "0x89ED90")]
	private void Start()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x89EE24", Offset = "0x89EE24", VA = "0x89EE24")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x89EF5C", Offset = "0x89EF5C", VA = "0x89EF5C")]
	private void SetCrossHairAtDistance(float dist)
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x89F084", Offset = "0x89F084", VA = "0x89F084")]
	public Pvr_GazeInputModuleCrosshair()
	{
	}
}
[Token(Token = "0x2000056")]
public enum RenderEventType
{
	[Token(Token = "0x40002E1")]
	InitRenderThread = 1024,
	[Token(Token = "0x40002E2")]
	Pause,
	[Token(Token = "0x40002E3")]
	Resume,
	[Token(Token = "0x40002E4")]
	LeftEyeEndFrame,
	[Token(Token = "0x40002E5")]
	RightEyeEndFrame,
	[Token(Token = "0x40002E6")]
	TimeWarp,
	[Token(Token = "0x40002E7")]
	ResetVrModeParms,
	[Token(Token = "0x40002E8")]
	ShutdownRenderThread,
	[Token(Token = "0x40002E9")]
	BeginEye,
	[Token(Token = "0x40002EA")]
	EndEye,
	[Token(Token = "0x40002EB")]
	BoundaryRenderLeft,
	[Token(Token = "0x40002EC")]
	BoundaryRenderRight,
	[Token(Token = "0x40002ED")]
	BothEyeEndFrame,
	[Token(Token = "0x40002EE")]
	CameraFrameLeft,
	[Token(Token = "0x40002EF")]
	CameraFrameRight,
	[Token(Token = "0x40002F0")]
	StartCameraFrame,
	[Token(Token = "0x40002F1")]
	StopCameraFrame
}
[Token(Token = "0x2000057")]
public static class Pvr_UnitySDKPluginEvent
{
	[Token(Token = "0x20003A1")]
	private delegate void RenderEventDelegate(int eventId);

	[Token(Token = "0x40002F2")]
	private const uint IS_DATA_FLAG = 2147483648u;

	[Token(Token = "0x40002F3")]
	private const uint DATA_POS_MASK = 1073741824u;

	[Token(Token = "0x40002F4")]
	private const int DATA_POS_SHIFT = 30;

	[Token(Token = "0x40002F5")]
	private const uint EVENT_TYPE_MASK = 1056899072u;

	[Token(Token = "0x40002F6")]
	private const int EVENT_TYPE_SHIFT = 17;

	[Token(Token = "0x40002F7")]
	private const uint PAYLOAD_MASK = 65535u;

	[Token(Token = "0x40002F8")]
	private const int PAYLOAD_SHIFT = 16;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RenderEventDelegate SetSinglePassBeforeForwardOpaqueHandle;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static IntPtr SetSinglePassBeforeForwardOpaquePtr;

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x7C14B0", Offset = "0x7C14B0", VA = "0x7C14B0")]
	public static void Issue(RenderEventType eventType)
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x7C14DC", Offset = "0x7C14DC", VA = "0x7C14DC")]
	private static int EncodeType(int eventType)
	{
		return default(int);
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x7C14E4", Offset = "0x7C14E4", VA = "0x7C14E4")]
	private static int EncodeData(int eventId, int eventData, int pos)
	{
		return default(int);
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x7C1504", Offset = "0x7C1504", VA = "0x7C1504")]
	private static int DecodeData(int eventData)
	{
		return default(int);
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x7C14A8", Offset = "0x7C14A8", VA = "0x7C14A8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x4B04C8", Offset = "0x4B04C8")]
	private static void SetSinglePassBeforeForwardOpaque(int eventId)
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x7C1518", Offset = "0x7C1518", VA = "0x7C1518")]
	public static void SetSinglePassBeforeForwardOpaque(CommandBuffer cmd)
	{
	}
}
[Token(Token = "0x2000058")]
public class Pvr_UnitySDKSightInputModule : BaseInputModule
{
	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AA44C", Offset = "0x4AA44C")]
	public GameObject cursor;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int trigger;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public float clickTime;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public Vector2 hotspot;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PointerEventData pointerData;

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x7C7660", Offset = "0x7C7660", VA = "0x7C7660", Slot = "21")]
	public override bool ShouldActivateModule()
	{
		return default(bool);
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x7C76FC", Offset = "0x7C76FC", VA = "0x7C76FC", Slot = "22")]
	public override void DeactivateModule()
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x7C7A54", Offset = "0x7C7A54", VA = "0x7C7A54", Slot = "20")]
	public override bool IsPointerOverGameObject(int pointerId)
	{
		return default(bool);
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x7C7AE4", Offset = "0x7C7AE4", VA = "0x7C7AE4", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x7C7B20", Offset = "0x7C7B20", VA = "0x7C7B20")]
	private void CastRayFromGaze()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x7C7CC8", Offset = "0x7C7CC8", VA = "0x7C7CC8")]
	private void UpdateCurrentObject()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x7C7EC4", Offset = "0x7C7EC4", VA = "0x7C7EC4")]
	private void PlaceCursor()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x7C7824", Offset = "0x7C7824", VA = "0x7C7824")]
	private void HandlePendingClick()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x7C81BC", Offset = "0x7C81BC", VA = "0x7C81BC")]
	private void HandleTrigger()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x7C855C", Offset = "0x7C855C", VA = "0x7C855C")]
	public Pvr_UnitySDKSightInputModule()
	{
	}
}
[Token(Token = "0x2000059")]
public class Pvr_ObjImporter
{
	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_ObjImporter _instance;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<int> triangles;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Vector3> vertices;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector2> uv;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector3> normals;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<PvrVector3Int> faceData;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<int> intArray;

	[Token(Token = "0x4000307")]
	private const int MIN_POW_10 = -16;

	[Token(Token = "0x4000308")]
	private const int MAX_POW_10 = 16;

	[Token(Token = "0x4000309")]
	private const int NUM_POWS_10 = 33;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly float[] pow10;

	[Token(Token = "0x17000064")]
	public static Pvr_ObjImporter Instance
	{
		[Token(Token = "0x60003F4")]
		[Address(RVA = "0x8A1E4C", Offset = "0x8A1E4C", VA = "0x8A1E4C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x8A1EF8", Offset = "0x8A1EF8", VA = "0x8A1EF8")]
	public Mesh ImportFile(string filePath)
	{
		return null;
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x8A2490", Offset = "0x8A2490", VA = "0x8A2490")]
	private void LoadMeshData(string fileName)
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x8A2CF4", Offset = "0x8A2CF4", VA = "0x8A2CF4")]
	private float GetFloat(StringBuilder sb, ref int start, ref StringBuilder sbFloat)
	{
		return default(float);
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x8A2ED4", Offset = "0x8A2ED4", VA = "0x8A2ED4")]
	private int GetInt(StringBuilder sb, ref int start, ref StringBuilder sbInt)
	{
		return default(int);
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x8A33C0", Offset = "0x8A33C0", VA = "0x8A33C0")]
	private static float[] GenerateLookupTable()
	{
		return null;
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x8A305C", Offset = "0x8A305C", VA = "0x8A305C")]
	private float ParseFloat(StringBuilder value)
	{
		return default(float);
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x8A333C", Offset = "0x8A333C", VA = "0x8A333C")]
	private int IntParseFast(StringBuilder value)
	{
		return default(int);
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x8A1EF0", Offset = "0x8A1EF0", VA = "0x8A1EF0")]
	public Pvr_ObjImporter()
	{
	}
}
[Token(Token = "0x200005A")]
public sealed class PvrVector3Int
{
	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AA4A4", Offset = "0x4AA4A4")]
	private int <x>k__BackingField;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AA4B4", Offset = "0x4AA4B4")]
	private int <y>k__BackingField;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AA4C4", Offset = "0x4AA4C4")]
	private int <z>k__BackingField;

	[Token(Token = "0x17000065")]
	public int x
	{
		[Token(Token = "0x60003FE")]
		[Address(RVA = "0x9CF9F8", Offset = "0x9CF9F8", VA = "0x9CF9F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B052C", Offset = "0x4B052C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60003FF")]
		[Address(RVA = "0x9CFA00", Offset = "0x9CFA00", VA = "0x9CFA00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B053C", Offset = "0x4B053C")]
		set
		{
		}
	}

	[Token(Token = "0x17000066")]
	public int y
	{
		[Token(Token = "0x6000400")]
		[Address(RVA = "0x9CFA08", Offset = "0x9CFA08", VA = "0x9CFA08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B054C", Offset = "0x4B054C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000401")]
		[Address(RVA = "0x9CFA10", Offset = "0x9CFA10", VA = "0x9CFA10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B055C", Offset = "0x4B055C")]
		set
		{
		}
	}

	[Token(Token = "0x17000067")]
	public int z
	{
		[Token(Token = "0x6000402")]
		[Address(RVA = "0x9CFA18", Offset = "0x9CFA18", VA = "0x9CFA18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B056C", Offset = "0x4B056C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000403")]
		[Address(RVA = "0x9CFA20", Offset = "0x9CFA20", VA = "0x9CFA20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B057C", Offset = "0x4B057C")]
		set
		{
		}
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x9CFA28", Offset = "0x9CFA28", VA = "0x9CFA28")]
	public PvrVector3Int()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x9CFA30", Offset = "0x9CFA30", VA = "0x9CFA30")]
	public PvrVector3Int(int x, int y, int z)
	{
	}
}
[Token(Token = "0x200005B")]
public class Pvr_EnumFlags : PropertyAttribute
{
	[Token(Token = "0x6000406")]
	[Address(RVA = "0x89E240", Offset = "0x89E240", VA = "0x89E240")]
	public Pvr_EnumFlags()
	{
	}
}
[Token(Token = "0x200005C")]
public enum ConfirmBtn
{
	[Token(Token = "0x400030F")]
	App = 1,
	[Token(Token = "0x4000310")]
	TouchPad = 2,
	[Token(Token = "0x4000311")]
	Trigger = 4
}
[Token(Token = "0x200005D")]
public class Pvr_InputModule : PointerInputModule
{
	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UIPointer> pointers;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Pvr_EnumFlags]
	public ConfirmBtn confirmBtn;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<RaycastResult> rayCasts;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RaycastResult rayCastResult;

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x89F0E0", Offset = "0x89F0E0", VA = "0x89F0E0", Slot = "30")]
	public virtual void Initialise()
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x89F164", Offset = "0x89F164", VA = "0x89F164")]
	public static void AddPoint(Pvr_UIPointer point)
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x89F254", Offset = "0x89F254", VA = "0x89F254")]
	public static void RemovePoint(Pvr_UIPointer point)
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x89F344", Offset = "0x89F344", VA = "0x89F344", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x89F730", Offset = "0x89F730", VA = "0x89F730", Slot = "31")]
	protected virtual List<RaycastResult> CheckRaycasts(Pvr_UIPointer pointer)
	{
		return null;
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x89F830", Offset = "0x89F830", VA = "0x89F830", Slot = "32")]
	protected virtual bool CheckTransformTree(Transform target, Transform source)
	{
		return default(bool);
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x89F930", Offset = "0x89F930", VA = "0x89F930", Slot = "33")]
	protected virtual bool NoValidCollision(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
		return default(bool);
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x89FA88", Offset = "0x89FA88", VA = "0x89FA88", Slot = "34")]
	protected virtual bool IsHovering(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x89FCEC", Offset = "0x89FCEC", VA = "0x89FCEC", Slot = "35")]
	protected virtual bool ValidElement(GameObject obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x89FDA8", Offset = "0x89FDA8", VA = "0x89FDA8", Slot = "36")]
	protected virtual void CheckPointerHoverClick(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x89FE48", Offset = "0x89FE48", VA = "0x89FE48", Slot = "37")]
	protected virtual void Hover(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x8A0D30", Offset = "0x8A0D30", VA = "0x8A0D30", Slot = "38")]
	protected virtual void Click(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x8A0DCC", Offset = "0x8A0DCC", VA = "0x8A0DCC", Slot = "39")]
	protected virtual void ClickOnUp(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x8A0EA4", Offset = "0x8A0EA4", VA = "0x8A0EA4", Slot = "40")]
	protected virtual void ClickOnDown(Pvr_UIPointer pointer, List<RaycastResult> results, bool forceClick = false)
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x8A0F9C", Offset = "0x8A0F9C", VA = "0x8A0F9C", Slot = "41")]
	protected virtual bool IsEligibleClick(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
		return default(bool);
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x8A12D0", Offset = "0x8A12D0", VA = "0x8A12D0", Slot = "42")]
	protected virtual bool AttemptClick(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x8A15F8", Offset = "0x8A15F8", VA = "0x8A15F8", Slot = "43")]
	protected virtual void Drag(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x8A1D60", Offset = "0x8A1D60", VA = "0x8A1D60")]
	public Pvr_InputModule()
	{
	}
}
[Token(Token = "0x200005E")]
public class Pvr_UICanvas : MonoBehaviour
{
	[Token(Token = "0x20003A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8A74", Offset = "0x4A8A74")]
	private sealed class <CreateDraggablePanel>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas canvas;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 canvasSize;

		[Token(Token = "0x1700015E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B2D")]
			[Address(RVA = "0x8A6948", Offset = "0x8A6948", VA = "0x8A6948", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B2F")]
			[Address(RVA = "0x8A69B8", Offset = "0x8A69B8", VA = "0x8A69B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0x8A60D4", Offset = "0x8A60D4", VA = "0x8A60D4")]
		[DebuggerHidden]
		public <CreateDraggablePanel>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0x8A6444", Offset = "0x8A6444", VA = "0x8A6444", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0x8A6448", Offset = "0x8A6448", VA = "0x8A6448", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0x8A6950", Offset = "0x8A6950", VA = "0x8A6950", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool clickOnPointerCollision;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float autoActivateWithinDistance;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected BoxCollider canvasBoxCollider;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Rigidbody canvasRigidBody;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Coroutine draggablePanelCreation;

	[Token(Token = "0x400031B")]
	protected const string CANVAS_DRAGGABLE_PANEL = "UICANVAS_DRAGGABLE_PANEL";

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x8A5B28", Offset = "0x8A5B28", VA = "0x8A5B28", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x8A5B34", Offset = "0x8A5B34", VA = "0x8A5B34", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x8A5B40", Offset = "0x8A5B40", VA = "0x8A5B40", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x8A5B4C", Offset = "0x8A5B4C", VA = "0x8A5B4C", Slot = "7")]
	protected virtual void SetupCanvas()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x8A6038", Offset = "0x8A6038", VA = "0x8A6038", Slot = "8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B058C", Offset = "0x4B058C")]
	protected virtual IEnumerator CreateDraggablePanel(Canvas canvas, Vector2 canvasSize)
	{
		return null;
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x8A6100", Offset = "0x8A6100", VA = "0x8A6100", Slot = "9")]
	protected virtual void RemoveCanvas()
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x8A643C", Offset = "0x8A643C", VA = "0x8A643C")]
	public Pvr_UICanvas()
	{
	}
}
[Token(Token = "0x200005F")]
public struct UIDraggableItemEventArgs
{
	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject target;
}
[Token(Token = "0x2000060")]
public delegate void UIDraggableItemEventHandler(object sender, UIDraggableItemEventArgs e);
[Token(Token = "0x2000061")]
public class Pvr_UIDraggableItem : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IDragHandler, IEndDragHandler
{
	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool restrictToDropZone;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool restrictToOriginalCanvas;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float moveOffset;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GameObject validDropZone;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected RectTransform dragTransform;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Vector3 startPosition;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected Quaternion startRotation;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject startDropZone;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Transform startParent;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Canvas startCanvas;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected CanvasGroup canvasGroup;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Pvr_InputModule currentInputmodule;

	[Token(Token = "0x14000018")]
	public event UIDraggableItemEventHandler DraggableItemDropped
	{
		[Token(Token = "0x6000425")]
		[Address(RVA = "0x8A69C0", Offset = "0x8A69C0", VA = "0x8A69C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B05F0", Offset = "0x4B05F0")]
		add
		{
		}
		[Token(Token = "0x6000426")]
		[Address(RVA = "0x8A6AAC", Offset = "0x8A6AAC", VA = "0x8A6AAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0600", Offset = "0x4B0600")]
		remove
		{
		}
	}

	[Token(Token = "0x14000019")]
	public event UIDraggableItemEventHandler DraggableItemReset
	{
		[Token(Token = "0x6000427")]
		[Address(RVA = "0x8A6B98", Offset = "0x8A6B98", VA = "0x8A6B98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0610", Offset = "0x4B0610")]
		add
		{
		}
		[Token(Token = "0x6000428")]
		[Address(RVA = "0x8A6C84", Offset = "0x8A6C84", VA = "0x8A6C84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0620", Offset = "0x4B0620")]
		remove
		{
		}
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x8A6D70", Offset = "0x8A6D70", VA = "0x8A6D70", Slot = "7")]
	public virtual void OnDraggableItemDropped(UIDraggableItemEventArgs e)
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x8A6D94", Offset = "0x8A6D94", VA = "0x8A6D94", Slot = "8")]
	public virtual void OnDraggableItemReset(UIDraggableItemEventArgs e)
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x8A6DB8", Offset = "0x8A6DB8", VA = "0x8A6DB8", Slot = "4")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x8A7020", Offset = "0x8A7020", VA = "0x8A7020", Slot = "5")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x8A702C", Offset = "0x8A702C", VA = "0x8A702C", Slot = "6")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x8A7514", Offset = "0x8A7514", VA = "0x8A7514", Slot = "9")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x8A7608", Offset = "0x8A7608", VA = "0x8A7608", Slot = "10")]
	protected virtual Pvr_UIPointer GetPointer()
	{
		return null;
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x8A77C0", Offset = "0x8A77C0", VA = "0x8A77C0", Slot = "11")]
	protected virtual void SetDragPosition(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x8A7B70", Offset = "0x8A7B70", VA = "0x8A7B70", Slot = "12")]
	protected virtual void ResetElement()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x8A7C80", Offset = "0x8A7C80", VA = "0x8A7C80", Slot = "13")]
	protected virtual UIDraggableItemEventArgs SetEventPayload(GameObject target)
	{
		return default(UIDraggableItemEventArgs);
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x8A7C88", Offset = "0x8A7C88", VA = "0x8A7C88")]
	public Pvr_UIDraggableItem()
	{
	}
}
[Token(Token = "0x2000062")]
public class Pvr_UIDropZone : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Pvr_UIDraggableItem droppableItem;

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x8A7C9C", Offset = "0x8A7C9C", VA = "0x8A7C9C", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x8A7DC8", Offset = "0x8A7DC8", VA = "0x8A7DC8", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x8A7E54", Offset = "0x8A7E54", VA = "0x8A7E54")]
	public Pvr_UIDropZone()
	{
	}
}
[Token(Token = "0x2000063")]
public class Pvr_UIGraphicRaycaster : GraphicRaycaster
{
	[Serializable]
	[Token(Token = "0x20003A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8A84", Offset = "0x4A8A84")]
	private sealed class <>c
	{
		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RaycastResult> <>9__7_0;

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0x8A8F58", Offset = "0x8A8F58", VA = "0x8A8F58")]
		public <>c()
		{
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0x8A8F60", Offset = "0x8A8F60", VA = "0x8A8F60")]
		internal int <Raycast>b__7_0(RaycastResult g1, RaycastResult g2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Canvas currentCanvas;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Vector2 lastKnownPosition;

	[Token(Token = "0x400032E")]
	protected const float UI_CONTROL_OFFSET = 1E-05f;

	[NonSerialized]
	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<RaycastResult> s_RaycastResults;

	[Token(Token = "0x17000068")]
	protected virtual Canvas canvas
	{
		[Token(Token = "0x600043B")]
		[Address(RVA = "0x8A8D68", Offset = "0x8A8D68", VA = "0x8A8D68", Slot = "25")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x8A7E5C", Offset = "0x8A7E5C", VA = "0x8A7E5C", Slot = "17")]
	public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x8A8070", Offset = "0x8A8070", VA = "0x8A8070", Slot = "22")]
	protected virtual void SetNearestRaycast(ref PointerEventData eventData, ref List<RaycastResult> resultAppendList, ref List<RaycastResult> raycastResults)
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x8A83C8", Offset = "0x8A83C8", VA = "0x8A83C8", Slot = "23")]
	protected virtual float GetHitDistance(Ray ray)
	{
		return default(float);
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x8A8738", Offset = "0x8A8738", VA = "0x8A8738", Slot = "24")]
	protected virtual void Raycast(Canvas canvas, Camera eventCamera, Ray ray, ref List<RaycastResult> results)
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x8A8E18", Offset = "0x8A8E18", VA = "0x8A8E18")]
	public Pvr_UIGraphicRaycaster()
	{
	}
}
[Token(Token = "0x2000064")]
public struct UIPointerEventArgs
{
	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool isActive;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public GameObject currentTarget;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject previousTarget;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RaycastResult raycastResult;
}
[Token(Token = "0x2000065")]
public delegate void UIPointerEventHandler(object sender, UIPointerEventArgs e);
[Token(Token = "0x2000066")]
public class Pvr_UIPointer : MonoBehaviour
{
	[Token(Token = "0x20003A4")]
	public enum ClickMethods
	{
		[Token(Token = "0x40016BE")]
		ClickOnButtonUp,
		[Token(Token = "0x40016BF")]
		ClickOnButtonDown
	}

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ClickMethods clickMethod;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public bool collisionClick;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[HideInInspector]
	public bool pressToDrag;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GameObject autoActivatingCanvas;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public PointerEventData pointerEventData;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public GameObject hoveringElement;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public float hoverDurationTimer;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public bool canClickOnHover;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform pointerOriginTransform;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected bool pointerClicked;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	protected bool beamEnabledState;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	protected bool lastPointerPressState;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	protected bool lastPointerClickState;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected GameObject currentTarget;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected EventSystem cachedEventSystem;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Pvr_InputModule cachedVRInputModule;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Transform originalPointerOriginTransform;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool TouchBtnValue;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool AppBtnValue;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool TriggerBtnValue;

	[Token(Token = "0x1400001A")]
	public event UIPointerEventHandler UIPointerElementEnter
	{
		[Token(Token = "0x6000442")]
		[Address(RVA = "0x8A8F70", Offset = "0x8A8F70", VA = "0x8A8F70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0630", Offset = "0x4B0630")]
		add
		{
		}
		[Token(Token = "0x6000443")]
		[Address(RVA = "0x8A905C", Offset = "0x8A905C", VA = "0x8A905C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0640", Offset = "0x4B0640")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public event UIPointerEventHandler UIPointerElementExit
	{
		[Token(Token = "0x6000444")]
		[Address(RVA = "0x8A9148", Offset = "0x8A9148", VA = "0x8A9148")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0650", Offset = "0x4B0650")]
		add
		{
		}
		[Token(Token = "0x6000445")]
		[Address(RVA = "0x8A9234", Offset = "0x8A9234", VA = "0x8A9234")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0660", Offset = "0x4B0660")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001C")]
	public event UIPointerEventHandler UIPointerElementClick
	{
		[Token(Token = "0x6000446")]
		[Address(RVA = "0x8A9320", Offset = "0x8A9320", VA = "0x8A9320")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0670", Offset = "0x4B0670")]
		add
		{
		}
		[Token(Token = "0x6000447")]
		[Address(RVA = "0x8A940C", Offset = "0x8A940C", VA = "0x8A940C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0680", Offset = "0x4B0680")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public event UIPointerEventHandler UIPointerElementDragStart
	{
		[Token(Token = "0x6000448")]
		[Address(RVA = "0x8A94F8", Offset = "0x8A94F8", VA = "0x8A94F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0690", Offset = "0x4B0690")]
		add
		{
		}
		[Token(Token = "0x6000449")]
		[Address(RVA = "0x8A95E4", Offset = "0x8A95E4", VA = "0x8A95E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B06A0", Offset = "0x4B06A0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public event UIPointerEventHandler UIPointerElementDragEnd
	{
		[Token(Token = "0x600044A")]
		[Address(RVA = "0x8A96D0", Offset = "0x8A96D0", VA = "0x8A96D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B06B0", Offset = "0x4B06B0")]
		add
		{
		}
		[Token(Token = "0x600044B")]
		[Address(RVA = "0x8A97BC", Offset = "0x8A97BC", VA = "0x8A97BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B06C0", Offset = "0x4B06C0")]
		remove
		{
		}
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x8A98A8", Offset = "0x8A98A8", VA = "0x8A98A8", Slot = "4")]
	public virtual bool PointerActive()
	{
		return default(bool);
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x8A98B0", Offset = "0x8A98B0", VA = "0x8A98B0", Slot = "5")]
	public virtual bool IsSelectionButtonPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x8A9990", Offset = "0x8A9990", VA = "0x8A9990", Slot = "6")]
	public virtual Vector3 GetOriginPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x8A9A2C", Offset = "0x8A9A2C", VA = "0x8A9A2C", Slot = "7")]
	public virtual Vector3 GetOriginForward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x8A9AC8", Offset = "0x8A9AC8", VA = "0x8A9AC8", Slot = "8")]
	public virtual bool ValidClick(bool checkLastClick, bool lastClickState = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x8A9AE4", Offset = "0x8A9AE4", VA = "0x8A9AE4", Slot = "9")]
	protected virtual void ResetHoverTimer()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x8A9AF0", Offset = "0x8A9AF0", VA = "0x8A9AF0", Slot = "10")]
	public virtual void OnUIPointerElementEnter(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x8A9BD4", Offset = "0x8A9BD4", VA = "0x8A9BD4", Slot = "11")]
	public virtual void OnUIPointerElementExit(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x8A9CA0", Offset = "0x8A9CA0", VA = "0x8A9CA0", Slot = "12")]
	public virtual void OnUIPointerElementClick(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x8A9D6C", Offset = "0x8A9D6C", VA = "0x8A9D6C", Slot = "13")]
	public virtual void OnUIPointerElementDragStart(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x8A9DB8", Offset = "0x8A9DB8", VA = "0x8A9DB8", Slot = "14")]
	public virtual void OnUIPointerElementDragEnd(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x8A9E04", Offset = "0x8A9E04", VA = "0x8A9E04", Slot = "15")]
	public virtual UIPointerEventArgs SetUIPointerEvent(RaycastResult currentRaycastResult, GameObject currentTarget, [Optional] GameObject lastTarget)
	{
		return default(UIPointerEventArgs);
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x8A9E68", Offset = "0x8A9E68", VA = "0x8A9E68", Slot = "16")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x8A9E74", Offset = "0x8A9E74", VA = "0x8A9E74", Slot = "17")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x8A9EAC", Offset = "0x8A9EAC", VA = "0x8A9EAC", Slot = "18")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x8A9F10", Offset = "0x8A9F10", VA = "0x8A9F10", Slot = "19")]
	protected virtual void ConfigureEventSystem()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x8AA0B8", Offset = "0x8AA0B8", VA = "0x8AA0B8")]
	public Pvr_UIPointer()
	{
	}
}
[Token(Token = "0x2000067")]
[ExecuteInEditMode]
public class Pvr_UnitySDKEditor : MonoBehaviour
{
	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool vrModeEnabled;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float mouseX;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float mouseY;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float mouseZ;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float neckModelScale;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool autoUntiltHead;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 neckOffset;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Matrix4x4 headView;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public Matrix4x4 leftEyeUndistortedProj;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public Matrix4x4 rightEyeUndistortedProj;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public Matrix4x4 leftEyeProj;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[HideInInspector]
	public Matrix4x4 rightEyeProj;

	[Token(Token = "0x4000359")]
	private const float TOUCH_TIME_LIMIT = 0.2f;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float touchStartTime;

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x99E084", Offset = "0x99E084", VA = "0x99E084")]
	public Matrix4x4 UndistortedProjection(Eye eye)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x99E0D0", Offset = "0x99E0D0", VA = "0x99E0D0")]
	public Matrix4x4 Projection(Eye eye)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x99E11C", Offset = "0x99E11C", VA = "0x99E11C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x99E324", Offset = "0x99E324", VA = "0x99E324")]
	private void Update()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x99E130", Offset = "0x99E130", VA = "0x99E130")]
	public void InitEyePara()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x99E288", Offset = "0x99E288", VA = "0x99E288")]
	private void InitEditorSensorPara()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x99EDB0", Offset = "0x99EDB0", VA = "0x99EDB0")]
	public static Matrix4x4 MakeProjection(float l, float t, float r, float b, float n, float f)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x99EF54", Offset = "0x99EF54", VA = "0x99EF54")]
	public bool UpdateStatesensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x99E4E0", Offset = "0x99E4E0", VA = "0x99E4E0")]
	public void ComputeEyesFromProfile()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x99F3DC", Offset = "0x99F3DC", VA = "0x99F3DC")]
	public bool ResetUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x99E3CC", Offset = "0x99E3CC", VA = "0x99E3CC")]
	private void SimulateInput()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x99ECE0", Offset = "0x99ECE0", VA = "0x99ECE0")]
	private void FovAdjust()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x99F490", Offset = "0x99F490", VA = "0x99F490")]
	private Rect RectAdjust(Rect eyeRect)
	{
		return default(Rect);
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x99EF6C", Offset = "0x99EF6C", VA = "0x99EF6C")]
	private void UpdateSimulatedSensor()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x99EB70", Offset = "0x99EB70", VA = "0x99EB70")]
	private void InitForEye(ref Material mat, ref Material mat1)
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x99F3F0", Offset = "0x99F3F0", VA = "0x99F3F0")]
	private void EnableVEmodel()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x99F5E0", Offset = "0x99F5E0", VA = "0x99F5E0")]
	public Pvr_UnitySDKEditor()
	{
	}
}
[Token(Token = "0x2000068")]
public class Pvr_VolumePowerBrightness : MonoBehaviour
{
	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool VolEnable;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool BattEnable;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text showResult;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text setVolumnum;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text setBrightnum;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string MusicPath;

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x7CAE9C", Offset = "0x7CAE9C", VA = "0x7CAE9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x7CAF74", Offset = "0x7CAF74", VA = "0x7CAF74")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x7CAFC8", Offset = "0x7CAFC8", VA = "0x7CAFC8")]
	public void GetMaxVolumeNumber()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x7CB070", Offset = "0x7CB070", VA = "0x7CB070")]
	public void GetCurrentVolumeNumber()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x7CB118", Offset = "0x7CB118", VA = "0x7CB118")]
	public void VolumeUp()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x7CB19C", Offset = "0x7CB19C", VA = "0x7CB19C")]
	public void VolumeDown()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x7CB220", Offset = "0x7CB220", VA = "0x7CB220")]
	public void SetVolumeNum()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x7CB348", Offset = "0x7CB348", VA = "0x7CB348")]
	public void SetBrightness()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x7CB470", Offset = "0x7CB470", VA = "0x7CB470")]
	public void GetCurrentBrightness()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x7CB518", Offset = "0x7CB518", VA = "0x7CB518")]
	public bool setAudio(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x7CB5AC", Offset = "0x7CB5AC", VA = "0x7CB5AC")]
	public bool setBattery(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x7CAF0C", Offset = "0x7CAF0C", VA = "0x7CAF0C")]
	private bool InitBatteryVolClass()
	{
		return default(bool);
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x7CAF14", Offset = "0x7CAF14", VA = "0x7CAF14")]
	private bool StartBatteryReceiver(string startreceivre)
	{
		return default(bool);
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x7CAFC0", Offset = "0x7CAFC0", VA = "0x7CAFC0")]
	private bool StopBatteryReceiver()
	{
		return default(bool);
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x7CAF44", Offset = "0x7CAF44", VA = "0x7CAF44")]
	private bool StartAudioReceiver(string startreceivre)
	{
		return default(bool);
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x7CAFB8", Offset = "0x7CAFB8", VA = "0x7CAFB8")]
	private bool StopAudioReceiver()
	{
		return default(bool);
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x7CB640", Offset = "0x7CB640", VA = "0x7CB640")]
	public Pvr_VolumePowerBrightness()
	{
	}
}
[Token(Token = "0x2000069")]
public enum Device
{
	[Token(Token = "0x4000362")]
	GearVR = 1,
	[Token(Token = "0x4000363")]
	Daydream = 2,
	[Token(Token = "0x4000364")]
	OculusGo = 4,
	[Token(Token = "0x4000365")]
	Polaris = 8,
	[Token(Token = "0x4000366")]
	ViveFocus = 0x10,
	[Token(Token = "0x4000367")]
	Xiaomi = 0x20,
	[Token(Token = "0x4000368")]
	SantaCruz = 0x40,
	[Token(Token = "0x4000369")]
	Rift = 0x80,
	[Token(Token = "0x400036A")]
	RiftS = 0x100,
	[Token(Token = "0x400036B")]
	XRSpace = 0x200,
	[Token(Token = "0x400036C")]
	Pico = 0x400,
	[Token(Token = "0x400036D")]
	OpenVR = 0x800
}
[Token(Token = "0x200006A")]
public static class DeviceDetection
{
	[Token(Token = "0x400036E")]
	public const string OVERRIDE_PREFS_KEY = "DEVICE_OVERRIDE";

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Device? currentDevice;

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x6E0950", Offset = "0x6E0950", VA = "0x6E0950")]
	public static Device GetDevice()
	{
		return default(Device);
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x6E0AB4", Offset = "0x6E0AB4", VA = "0x6E0AB4")]
	private static void SetCurrentDevice()
	{
	}
}
[Token(Token = "0x200006B")]
public class EntitlementCheck : MonoBehaviour
{
	[Token(Token = "0x20003A5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8A94", Offset = "0x4A8A94")]
	private sealed class <OnEntitlementfailed>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EntitlementCheck <>4__this;

		[Token(Token = "0x17000160")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B36")]
			[Address(RVA = "0x71BCB0", Offset = "0x71BCB0", VA = "0x71BCB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000161")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B38")]
			[Address(RVA = "0x71BD20", Offset = "0x71BD20", VA = "0x71BD20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0x71BB00", Offset = "0x71BB00", VA = "0x71BB00")]
		[DebuggerHidden]
		public <OnEntitlementfailed>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0x71BBD4", Offset = "0x71BBD4", VA = "0x71BBD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0x71BBD8", Offset = "0x71BBD8", VA = "0x71BBD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0x71BCB8", Offset = "0x71BCB8", VA = "0x71BCB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject entitlementText;

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x71BA8C", Offset = "0x71BA8C", VA = "0x71BA8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B06D0", Offset = "0x4B06D0")]
	private IEnumerator OnEntitlementfailed()
	{
		return null;
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x71BB2C", Offset = "0x71BB2C", VA = "0x71BB2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x71BBCC", Offset = "0x71BBCC", VA = "0x71BBCC")]
	public EntitlementCheck()
	{
	}
}
[Token(Token = "0x200006C")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x4A8028", Offset = "0x4A8028")]
public class GearVrConfig : PlatformConfig
{
	[Token(Token = "0x6000486")]
	[Address(RVA = "0x72387C", Offset = "0x72387C", VA = "0x72387C", Slot = "5")]
	public override bool ShouldPause()
	{
		return default(bool);
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x723884", Offset = "0x723884", VA = "0x723884", Slot = "14")]
	public override Type GetTrackerType()
	{
		return null;
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x723950", Offset = "0x723950", VA = "0x723950")]
	public GearVrConfig()
	{
	}
}
[Token(Token = "0x200006D")]
public class GearVRSceneModifier : SceneModifier
{
	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform mainCameraTransform;

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x7236B4", Offset = "0x7236B4", VA = "0x7236B4")]
	private void Start()
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x7236B8", Offset = "0x7236B8", VA = "0x7236B8", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x723708", Offset = "0x723708", VA = "0x723708", Slot = "6")]
	public override void OnCameraInstantiated(Camera camera)
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x7237C8", Offset = "0x7237C8", VA = "0x7237C8", Slot = "7")]
	public override Transform GetLeftEye()
	{
		return null;
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x72386C", Offset = "0x72386C", VA = "0x72386C", Slot = "8")]
	public override Transform GetRightEye()
	{
		return null;
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x723870", Offset = "0x723870", VA = "0x723870", Slot = "9")]
	public override Transform GetCenterCamera()
	{
		return null;
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x7237CC", Offset = "0x7237CC", VA = "0x7237CC")]
	private Transform GetMainCameraTransform()
	{
		return null;
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x723874", Offset = "0x723874", VA = "0x723874")]
	public GearVRSceneModifier()
	{
	}
}
[Token(Token = "0x200006E")]
public class PurchaserOVR : Purchaser
{
	[Token(Token = "0x6000491")]
	[Address(RVA = "0x9CF9A0", Offset = "0x9CF9A0", VA = "0x9CF9A0", Slot = "6")]
	public override bool IsInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x9CF9A8", Offset = "0x9CF9A8", VA = "0x9CF9A8", Slot = "7")]
	public override void BuyProduct(InventoryCatalogue.ItemID itemID)
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x9CF9AC", Offset = "0x9CF9AC", VA = "0x9CF9AC", Slot = "8")]
	public override string GetItemPrice(InventoryCatalogue.ItemID itemID)
	{
		return null;
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x9CF9F4", Offset = "0x9CF9F4", VA = "0x9CF9F4")]
	public PurchaserOVR()
	{
	}
}
[Token(Token = "0x200006F")]
public class RGOVRPlatformMenu : MonoBehaviour
{
	[Token(Token = "0x6000495")]
	[Address(RVA = "0x696B1C", Offset = "0x696B1C", VA = "0x696B1C")]
	public RGOVRPlatformMenu()
	{
	}
}
[Token(Token = "0x2000070")]
public class IAPGameObjectDeactivator : MonoBehaviour
{
	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool showInNonIAP;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool showInIAP;

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x7353AC", Offset = "0x7353AC", VA = "0x7353AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x7353F0", Offset = "0x7353F0", VA = "0x7353F0")]
	public IAPGameObjectDeactivator()
	{
	}
}
[Token(Token = "0x2000071")]
public class InitializePlatformSettings : MonoBehaviour
{
	[Token(Token = "0x6000498")]
	[Address(RVA = "0x7353F8", Offset = "0x7353F8", VA = "0x7353F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x73550C", Offset = "0x73550C", VA = "0x73550C")]
	public InitializePlatformSettings()
	{
	}
}
[Token(Token = "0x2000072")]
public interface IPlatformCameraModifier
{
	[Token(Token = "0x600049A")]
	void Apply(Camera camera);
}
[Token(Token = "0x2000073")]
public class OpenVRSceneModifier : SceneModifier
{
	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform mainCameraTransform;

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x644850", Offset = "0x644850", VA = "0x644850", Slot = "6")]
	public override void OnCameraInstantiated(Camera camera)
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x644854", Offset = "0x644854", VA = "0x644854", Slot = "7")]
	public override Transform GetLeftEye()
	{
		return null;
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x64485C", Offset = "0x64485C", VA = "0x64485C", Slot = "8")]
	public override Transform GetRightEye()
	{
		return null;
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x644864", Offset = "0x644864", VA = "0x644864", Slot = "9")]
	public override Transform GetCenterCamera()
	{
		return null;
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x64486C", Offset = "0x64486C", VA = "0x64486C")]
	public OpenVRSceneModifier()
	{
	}
}
[Token(Token = "0x2000074")]
public class OpenVRTrackedDeviceManager : MonoBehaviour
{
	[Token(Token = "0x20003A6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8AA4", Offset = "0x4A8AA4")]
	private sealed class <WaitForDeviceLoad>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OpenVRTrackedDeviceManager <>4__this;

		[Token(Token = "0x17000162")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B3C")]
			[Address(RVA = "0x645420", Offset = "0x645420", VA = "0x645420", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000163")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B3E")]
			[Address(RVA = "0x645490", Offset = "0x645490", VA = "0x645490", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0x644DE4", Offset = "0x644DE4", VA = "0x644DE4")]
		[DebuggerHidden]
		public <WaitForDeviceLoad>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0x6450FC", Offset = "0x6450FC", VA = "0x6450FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0x645100", Offset = "0x645100", VA = "0x645100", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0x645428", Offset = "0x645428", VA = "0x645428", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AA634", Offset = "0x4AA634")]
	private static OpenVRTrackedDeviceManager <Instance>k__BackingField;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OpenVRTrackedDeviceMonitor Head;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OpenVRTrackedDeviceMonitor LController;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OpenVRTrackedDeviceMonitor RController;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool devicesLoaded;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float actuationPoint;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float primTrigger;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float secondTrigger;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float primHand;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float secondHand;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool leftTriggerPressed;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool leftTriggerClicked;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private bool leftTriggerReleased;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	private bool rightTriggerPressed;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool rightTriggerClicked;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool rightTriggerReleased;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	private bool leftGripPressed;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
	private bool leftGripClicked;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool leftGripReleased;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool rightGripPressed;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	private bool rightGripClicked;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	private bool rightGripReleased;

	[Token(Token = "0x17000069")]
	public static OpenVRTrackedDeviceManager Instance
	{
		[Token(Token = "0x60004A0")]
		[Address(RVA = "0x644874", Offset = "0x644874", VA = "0x644874")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0734", Offset = "0x4B0734")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004A1")]
		[Address(RVA = "0x6448C4", Offset = "0x6448C4", VA = "0x6448C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0744", Offset = "0x4B0744")]
		private set
		{
		}
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x644918", Offset = "0x644918", VA = "0x644918")]
	public Vector3 GetLocalControllerAcceleration(Handedness hand)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x644954", Offset = "0x644954", VA = "0x644954")]
	public Quaternion GetLocalControllerRotation(Handedness hand)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x644990", Offset = "0x644990", VA = "0x644990")]
	public Vector3 GetLocalControllerAngularVelocity(Handedness hand)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x6449CC", Offset = "0x6449CC", VA = "0x6449CC")]
	public Vector3 GetLocalControllerPosition(Handedness hand)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x644A08", Offset = "0x644A08", VA = "0x644A08")]
	public float GetAxis(InputSource axis, Handedness hand)
	{
		return default(float);
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x644A3C", Offset = "0x644A3C", VA = "0x644A3C")]
	public Vector2 GetAxis2D(InputSource axis, Handedness hand)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x644A9C", Offset = "0x644A9C", VA = "0x644A9C")]
	public bool GetDown(InputSource button, Handedness hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x644C28", Offset = "0x644C28", VA = "0x644C28")]
	public bool GetUp(InputSource button, Handedness hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x644D18", Offset = "0x644D18", VA = "0x644D18")]
	public bool Get(InputSource button, Handedness hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x644B8C", Offset = "0x644B8C", VA = "0x644B8C")]
	private string GetButtonWrapper(InputSource button, Handedness hand)
	{
		return null;
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x644D70", Offset = "0x644D70", VA = "0x644D70")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B0754", Offset = "0x4B0754")]
	private IEnumerator WaitForDeviceLoad()
	{
		return null;
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x644E10", Offset = "0x644E10", VA = "0x644E10")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x644E8C", Offset = "0x644E8C", VA = "0x644E8C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x6450E8", Offset = "0x6450E8", VA = "0x6450E8")]
	public OpenVRTrackedDeviceManager()
	{
	}
}
[Token(Token = "0x2000075")]
public class OpenVRTrackedDeviceMonitor : MonoBehaviour
{
	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 angularVelocity;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 localPosition;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 acceleration;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Quaternion orientation;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string type;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 previousPos;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Quaternion previousRot;

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x645498", Offset = "0x645498", VA = "0x645498")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x6455EC", Offset = "0x6455EC", VA = "0x6455EC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x645798", Offset = "0x645798", VA = "0x645798")]
	private void debugVisuals()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x645C34", Offset = "0x645C34", VA = "0x645C34")]
	public OpenVRTrackedDeviceMonitor()
	{
	}
}
[Token(Token = "0x2000076")]
public class ControllerSpecificRotation : MonoBehaviour
{
	[Token(Token = "0x20003A7")]
	public enum PicoModel
	{
		[Token(Token = "0x40016C7")]
		unknown,
		[Token(Token = "0x40016C8")]
		Goblin,
		[Token(Token = "0x40016C9")]
		Neo,
		[Token(Token = "0x40016CA")]
		G2,
		[Token(Token = "0x40016CB")]
		Neo2,
		[Token(Token = "0x40016CC")]
		Neo3
	}

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PicoModel ControllerVersion;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 RotationOverride;

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x6D7BAC", Offset = "0x6D7BAC", VA = "0x6D7BAC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x6D7CA8", Offset = "0x6D7CA8", VA = "0x6D7CA8")]
	public ControllerSpecificRotation()
	{
	}
}
[Token(Token = "0x2000077")]
public class EnsureOnlyOneInstance : MonoBehaviour
{
	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static EnsureOnlyOneInstance Instance;

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x71B9A8", Offset = "0x71B9A8", VA = "0x71B9A8")]
	public void Awake()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x71BA84", Offset = "0x71BA84", VA = "0x71BA84")]
	public EnsureOnlyOneInstance()
	{
	}
}
[Token(Token = "0x2000078")]
public class PicoConfig : PlatformConfig
{
	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x658B20", Offset = "0x658B20", VA = "0x658B20", Slot = "14")]
	public override Type GetTrackerType()
	{
		return null;
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x658B90", Offset = "0x658B90", VA = "0x658B90")]
	public PicoConfig()
	{
	}
}
[Token(Token = "0x2000079")]
public class PicoFloorHeightFix : MonoBehaviour
{
	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Minigame.Name lastMiniGame;

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x658BC0", Offset = "0x658BC0", VA = "0x658BC0")]
	public Vector3 playAreaCenter()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x658E94", Offset = "0x658E94", VA = "0x658E94")]
	public void Update()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x658F34", Offset = "0x658F34", VA = "0x658F34")]
	public Vector3 GetSceneOffset(Minigame.Name miniGame)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x6590A8", Offset = "0x6590A8", VA = "0x6590A8")]
	public PicoFloorHeightFix()
	{
	}
}
[Token(Token = "0x200007A")]
public class PicoMemoryFixer : MonoBehaviour
{
	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool enableMemoryFix;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public long megaBytesClaimedAtStart;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool enableRT;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int GCInterval;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public long megaBytesClaimedInRuntime;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public long simulatedMemoryPressureMB;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool dumpTextureMemoryOnPause;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float texStreamMemoryIdleMB;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float texStreamMemoryBudgetMB;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int GCCounter;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static byte[][] ramWasteBuffer;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static byte[][] memoryPressureBuffer;

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x6590B0", Offset = "0x6590B0", VA = "0x6590B0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x659F20", Offset = "0x659F20", VA = "0x659F20")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x65A0C0", Offset = "0x65A0C0", VA = "0x65A0C0")]
	private void OnLowMemory()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x65A0D8", Offset = "0x65A0D8", VA = "0x65A0D8")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x65A0E8", Offset = "0x65A0E8", VA = "0x65A0E8")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x65A04C", Offset = "0x65A04C", VA = "0x65A04C")]
	public void gcMax()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x659EB0", Offset = "0x659EB0", VA = "0x659EB0")]
	public void gcDefault()
	{
	}

	[MethodImpl(64)]
	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x65917C", Offset = "0x65917C", VA = "0x65917C")]
	public byte[][] clearPhysicalMemGroups(long total_megabytes, long num_groups = 1L)
	{
		return null;
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x65A1F8", Offset = "0x65A1F8", VA = "0x65A1F8")]
	public PicoMemoryFixer()
	{
	}
}
[Token(Token = "0x200007B")]
public class PicoSceneModifier : SceneModifier
{
	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x65A238", Offset = "0x65A238", VA = "0x65A238", Slot = "6")]
	public override void OnCameraInstantiated(Camera camera)
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x65A23C", Offset = "0x65A23C", VA = "0x65A23C", Slot = "7")]
	public override Transform GetLeftEye()
	{
		return null;
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x65A2C8", Offset = "0x65A2C8", VA = "0x65A2C8", Slot = "8")]
	public override Transform GetRightEye()
	{
		return null;
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x65A354", Offset = "0x65A354", VA = "0x65A354", Slot = "9")]
	public override Transform GetCenterCamera()
	{
		return null;
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x65A3E0", Offset = "0x65A3E0", VA = "0x65A3E0")]
	public PicoSceneModifier()
	{
	}
}
[Token(Token = "0x200007C")]
public class PlatformCameraClearColorModifier : MonoBehaviour, IPlatformCameraModifier
{
	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color clearColor;

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x65C10C", Offset = "0x65C10C", VA = "0x65C10C", Slot = "4")]
	public void Apply(Camera camera)
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x65C204", Offset = "0x65C204", VA = "0x65C204")]
	public PlatformCameraClearColorModifier()
	{
	}
}
[Token(Token = "0x200007D")]
public class PlatformCameraCullingModifier : MonoBehaviour, IPlatformCameraModifier
{
	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask cullingMask;

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x65C20C", Offset = "0x65C20C", VA = "0x65C20C", Slot = "4")]
	public void Apply(Camera camera)
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x65C2FC", Offset = "0x65C2FC", VA = "0x65C2FC")]
	public PlatformCameraCullingModifier()
	{
	}
}
[Token(Token = "0x200007E")]
public class PlatformCameraSkyboxModifier : MonoBehaviour, IPlatformCameraModifier
{
	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x65C304", Offset = "0x65C304", VA = "0x65C304", Slot = "4")]
	public void Apply(Camera camera)
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x65C3D4", Offset = "0x65C3D4", VA = "0x65C3D4")]
	public PlatformCameraSkyboxModifier()
	{
	}
}
[Token(Token = "0x200007F")]
public class PlatformCameraSpawner : MonoBehaviour
{
	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject currentInstance;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PlatformConfig platfromConfig;

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x65C3DC", Offset = "0x65C3DC", VA = "0x65C3DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x65C5BC", Offset = "0x65C5BC", VA = "0x65C5BC")]
	public void SpawnCamera()
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x65CB74", Offset = "0x65CB74", VA = "0x65CB74")]
	public void RemoveCamera()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x65CC8C", Offset = "0x65CC8C", VA = "0x65CC8C")]
	public PlatformCameraSpawner()
	{
	}
}
[Token(Token = "0x2000080")]
public enum BackPackButton
{
	[Token(Token = "0x40003A7")]
	AppButton,
	[Token(Token = "0x40003A8")]
	TouchPad,
	[Token(Token = "0x40003A9")]
	AB_Buttons
}
[Token(Token = "0x2000081")]
public enum ConfigPrefab
{
	[Token(Token = "0x40003AB")]
	Camera,
	[Token(Token = "0x40003AC")]
	HandLeft,
	[Token(Token = "0x40003AD")]
	HandRight,
	[Token(Token = "0x40003AE")]
	Essentials
}
[Token(Token = "0x2000082")]
public enum AxisInput
{
	[Token(Token = "0x40003B0")]
	Touch,
	[Token(Token = "0x40003B1")]
	Stick
}
[Token(Token = "0x2000083")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x4A8088", Offset = "0x4A8088")]
public class PlatformConfig : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x20003A8")]
	public class BasketAimValues
	{
		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enableAimAssist;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float cheatAngle;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float minimumForce;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float cheatPercent;

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0x65CDB0", Offset = "0x65CDB0", VA = "0x65CDB0")]
		public BasketAimValues()
		{
		}
	}

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int targetFps;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject cameraPrefab;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject rightHand;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject leftHand;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject controllerPrefab;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject controllerUiPrefab;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private BackPackButton backPackButton;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private bool isUsingUnityVRSplash;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float waitBeforeSplash;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float waitAfterIntro;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AA6E4", Offset = "0x4AA6E4")]
	private GameObject deviceEssentials;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AA730", Offset = "0x4AA730")]
	private float TextureResolutionScale;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private InputMode defaultInputMode;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AxisInput axisInput;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private BasketAimValues basketAimValues;

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x65CC94", Offset = "0x65CC94", VA = "0x65CC94", Slot = "4")]
	public virtual int GetTargetFPS()
	{
		return default(int);
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x65CC9C", Offset = "0x65CC9C", VA = "0x65CC9C", Slot = "5")]
	public virtual bool ShouldPause()
	{
		return default(bool);
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x65CCA4", Offset = "0x65CCA4", VA = "0x65CCA4", Slot = "6")]
	public virtual BackPackButton GetBackPackMode()
	{
		return default(BackPackButton);
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x65CCAC", Offset = "0x65CCAC", VA = "0x65CCAC", Slot = "7")]
	public virtual BasketAimValues GetBasketAimValues()
	{
		return null;
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x65CCB4", Offset = "0x65CCB4", VA = "0x65CCB4", Slot = "8")]
	public virtual GameObject GetCameraPrefab()
	{
		return null;
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x65CCBC", Offset = "0x65CCBC", VA = "0x65CCBC", Slot = "9")]
	public virtual GameObject GetHandRight()
	{
		return null;
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x65CCC4", Offset = "0x65CCC4", VA = "0x65CCC4", Slot = "10")]
	public virtual GameObject GetHandLeft()
	{
		return null;
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x65CCCC", Offset = "0x65CCCC", VA = "0x65CCCC", Slot = "11")]
	public virtual GameObject GetEssentialsPrefab()
	{
		return null;
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x65CCD4", Offset = "0x65CCD4", VA = "0x65CCD4", Slot = "12")]
	public virtual GameObject GetControllerPrefab()
	{
		return null;
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x65CCDC", Offset = "0x65CCDC", VA = "0x65CCDC", Slot = "13")]
	public virtual GameObject GetControllerUIPrefab()
	{
		return null;
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x65CCE4", Offset = "0x65CCE4", VA = "0x65CCE4", Slot = "14")]
	public virtual Type GetTrackerType()
	{
		return null;
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x65CD54", Offset = "0x65CD54", VA = "0x65CD54", Slot = "15")]
	public virtual float GetTextureResolutionScale()
	{
		return default(float);
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x65CD5C", Offset = "0x65CD5C", VA = "0x65CD5C", Slot = "16")]
	public virtual bool IsUsingUnityVRSplash()
	{
		return default(bool);
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x65CD64", Offset = "0x65CD64", VA = "0x65CD64", Slot = "17")]
	public virtual float WaitBeforeSplash()
	{
		return default(float);
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x65CD6C", Offset = "0x65CD6C", VA = "0x65CD6C", Slot = "18")]
	public virtual float WaitAfterIntro()
	{
		return default(float);
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x65CD74", Offset = "0x65CD74", VA = "0x65CD74")]
	public GameObject GetPrefabOfType(ConfigPrefab objectType)
	{
		return null;
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x65CDA0", Offset = "0x65CDA0", VA = "0x65CDA0", Slot = "19")]
	public virtual InputMode GetDefaultInputMode()
	{
		return default(InputMode);
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x65CDA8", Offset = "0x65CDA8", VA = "0x65CDA8", Slot = "20")]
	public virtual AxisInput GetAxisInput()
	{
		return default(AxisInput);
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x658BA8", Offset = "0x658BA8", VA = "0x658BA8")]
	public PlatformConfig()
	{
	}
}
[Token(Token = "0x2000084")]
public class PlatformConfigLoader : SingleInstanceBehavior<PlatformConfigLoader>
{
	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlatformConfig config;

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x65CDD0", Offset = "0x65CDD0", VA = "0x65CDD0", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x65C504", Offset = "0x65C504", VA = "0x65C504")]
	public PlatformConfig GetConfig()
	{
		return null;
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x65CE28", Offset = "0x65CE28", VA = "0x65CE28")]
	private void LoadConfig()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x65CF54", Offset = "0x65CF54", VA = "0x65CF54")]
	public PlatformConfigLoader()
	{
	}
}
[Token(Token = "0x2000085")]
public class PlatformGameObjectSpawner : MonoBehaviour
{
	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ConfigPrefab prefabTypeToSpawn;

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x65CFC4", Offset = "0x65CFC4", VA = "0x65CFC4")]
	private void Start()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x65D184", Offset = "0x65D184", VA = "0x65D184")]
	public PlatformGameObjectSpawner()
	{
	}
}
[Token(Token = "0x2000086")]
public enum SwipeDirection
{
	[Token(Token = "0x40003C4")]
	Up,
	[Token(Token = "0x40003C5")]
	Down,
	[Token(Token = "0x40003C6")]
	Left,
	[Token(Token = "0x40003C7")]
	Right
}
[Token(Token = "0x2000087")]
public class ControllerSwipe : MonoBehaviour
{
	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SwipeDirection SwipeDirection;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4AA7BC", Offset = "0x4AA7BC")]
	public float minSwipeDist;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector2 startPos;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool isSwiping;

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x6D7CC0", Offset = "0x6D7CC0", VA = "0x6D7CC0")]
	public ControllerSwipe()
	{
	}
}
[Token(Token = "0x2000088")]
public class ControllerVisualization : MonoBehaviour
{
	[Token(Token = "0x20003A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8AB4", Offset = "0x4A8AB4")]
	private sealed class <FadeAlpha>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float target;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ControllerVisualization <>4__this;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float time;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timePassed>5__2;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <start>5__3;

		[Token(Token = "0x17000164")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B43")]
			[Address(RVA = "0x6D91F4", Offset = "0x6D91F4", VA = "0x6D91F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000165")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B45")]
			[Address(RVA = "0x6D9264", Offset = "0x6D9264", VA = "0x6D9264", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0x6D8FE0", Offset = "0x6D8FE0", VA = "0x6D8FE0")]
		[DebuggerHidden]
		public <FadeAlpha>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0x6D9068", Offset = "0x6D9068", VA = "0x6D9068", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0x6D906C", Offset = "0x6D906C", VA = "0x6D906C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0x6D91FC", Offset = "0x6D91FC", VA = "0x6D91FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform controllerGraphicsAnchor;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public LineRenderer laserRenderer;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Color laserColorStart;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Color laserColorEnd;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4AA804", Offset = "0x4AA804")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4AA804", Offset = "0x4AA804")]
	public float fadeDistanceFromFace;

	[Token(Token = "0x40003D1")]
	private const float DELTA_ALPHA = 4f;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float alphaValue;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float fadeAlpha;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float minimumWidth;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float maximumWidth;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Handedness handedness;

	[Token(Token = "0x1700006A")]
	public Handedness Handedness
	{
		[Token(Token = "0x60004F1")]
		[Address(RVA = "0x6D8968", Offset = "0x6D8968", VA = "0x6D8968")]
		get
		{
			return default(Handedness);
		}
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x6D8970", Offset = "0x6D8970", VA = "0x6D8970")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x6D8B50", Offset = "0x6D8B50", VA = "0x6D8B50")]
	private void Update()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x6D8B48", Offset = "0x6D8B48", VA = "0x6D8B48")]
	public void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x6D8F30", Offset = "0x6D8F30", VA = "0x6D8F30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B07B8", Offset = "0x4B07B8")]
	private IEnumerator FadeAlpha(float target, float time)
	{
		return null;
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x6D8EF8", Offset = "0x6D8EF8", VA = "0x6D8EF8")]
	private void SetControllerVisible(bool visible)
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x6D8E3C", Offset = "0x6D8E3C", VA = "0x6D8E3C")]
	private void SetLineRendererAlpha(LineRenderer r, float alpha1, float alpha2)
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x6D8CFC", Offset = "0x6D8CFC", VA = "0x6D8CFC")]
	private void SetWidth()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x6D900C", Offset = "0x6D900C", VA = "0x6D900C")]
	public ControllerVisualization()
	{
	}
}
[Token(Token = "0x2000089")]
public class GrabbableGolfClub : GrabbableObject
{
	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Signal<GameObject> GrabSignal;

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x790520", Offset = "0x790520", VA = "0x790520", Slot = "5")]
	public override bool OnObjectGrabbed(Hand hand, Action OnGrabbed, Transform grabOffset, InputAction inputAction)
	{
		return default(bool);
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x790B14", Offset = "0x790B14", VA = "0x790B14")]
	public GrabbableGolfClub()
	{
	}
}
[Token(Token = "0x200008A")]
public class GrabbableObject : MonoBehaviour
{
	[Token(Token = "0x20003AA")]
	public delegate Vector3 ThrowForceOverrider(Vector3 force);

	[Token(Token = "0x20003AB")]
	private enum ThrowMode
	{
		[Token(Token = "0x40016D9")]
		resetPosition,
		[Token(Token = "0x40016DA")]
		freeThrow
	}

	[Token(Token = "0x20003AC")]
	private enum GrabMode
	{
		[Token(Token = "0x40016DC")]
		grabPoint,
		[Token(Token = "0x40016DD")]
		grabAnywhere
	}

	[Token(Token = "0x20003AD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8AC4", Offset = "0x4A8AC4")]
	private sealed class <HoverAway>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GrabbableObject <>4__this;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 velocity;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <time>5__2;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <currentPostion>5__3;

		[Token(Token = "0x17000166")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B4D")]
			[Address(RVA = "0x791FBC", Offset = "0x791FBC", VA = "0x791FBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000167")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B4F")]
			[Address(RVA = "0x79202C", Offset = "0x79202C", VA = "0x79202C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0x7919F0", Offset = "0x7919F0", VA = "0x7919F0")]
		[DebuggerHidden]
		public <HoverAway>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0x791C68", Offset = "0x791C68", VA = "0x791C68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0x791C6C", Offset = "0x791C6C", VA = "0x791C6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0x791FC4", Offset = "0x791FC4", VA = "0x791FC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003AE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8AD4", Offset = "0x4A8AD4")]
	private sealed class <ReturnToDefaultLocation>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GrabbableObject <>4__this;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x17000168")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B53")]
			[Address(RVA = "0x7921AC", Offset = "0x7921AC", VA = "0x7921AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000169")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B55")]
			[Address(RVA = "0x79221C", Offset = "0x79221C", VA = "0x79221C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0x791A1C", Offset = "0x791A1C", VA = "0x791A1C")]
		[DebuggerHidden]
		public <ReturnToDefaultLocation>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0x792034", Offset = "0x792034", VA = "0x792034", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0x792038", Offset = "0x792038", VA = "0x792038", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0x7921B4", Offset = "0x7921B4", VA = "0x7921B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003AF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8AE4", Offset = "0x4A8AE4")]
	private sealed class <ReturnToHand>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GrabbableObject <>4__this;

		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Hand previousHand;

		[Token(Token = "0x1700016A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B59")]
			[Address(RVA = "0x79236C", Offset = "0x79236C", VA = "0x79236C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B5B")]
			[Address(RVA = "0x7923DC", Offset = "0x7923DC", VA = "0x7923DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0x791AE0", Offset = "0x791AE0", VA = "0x791AE0")]
		[DebuggerHidden]
		public <ReturnToHand>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0x792224", Offset = "0x792224", VA = "0x792224", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0x792228", Offset = "0x792228", VA = "0x792228", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0x792374", Offset = "0x792374", VA = "0x792374", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected int priorty;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	protected bool isGrabbable;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4AA87C", Offset = "0x4AA87C")]
	[SerializeField]
	private bool triggerAlsoGrabs;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GrabMode grabMode;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public Transform topGrabPoint;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform bottomGrabPoint;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private string grabSound;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4AA908", Offset = "0x4AA908")]
	[SerializeField]
	private ThrowMode throwMode;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private string throwSound;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4AA964", Offset = "0x4AA964")]
	private float returnDelay;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4AA9A8", Offset = "0x4AA9A8")]
	private float returnTweenDuration;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4AA9EC", Offset = "0x4AA9EC")]
	private float throwVelocityMultiplier;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4AAA2C", Offset = "0x4AAA2C")]
	private float throwArcModifier;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Hand hand;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform resetParent;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 resetPosition;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 resetRotation;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ThrowForceOverrider throwForceOverrider;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AAA6C", Offset = "0x4AAA6C")]
	private bool <IsFlyingAway>k__BackingField;

	[Token(Token = "0x1700006B")]
	public float ThrowVelocityMultiplier
	{
		[Token(Token = "0x60004FD")]
		[Address(RVA = "0x790C30", Offset = "0x790C30", VA = "0x790C30")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60004FE")]
		[Address(RVA = "0x790C38", Offset = "0x790C38", VA = "0x790C38")]
		set
		{
		}
	}

	[Token(Token = "0x1700006C")]
	public float ThrowArcModifier
	{
		[Token(Token = "0x60004FF")]
		[Address(RVA = "0x790C40", Offset = "0x790C40", VA = "0x790C40")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000500")]
		[Address(RVA = "0x790C48", Offset = "0x790C48", VA = "0x790C48")]
		set
		{
		}
	}

	[Token(Token = "0x1700006D")]
	public int Priority
	{
		[Token(Token = "0x6000504")]
		[Address(RVA = "0x790E38", Offset = "0x790E38", VA = "0x790E38")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000505")]
		[Address(RVA = "0x790E40", Offset = "0x790E40", VA = "0x790E40")]
		set
		{
		}
	}

	[Token(Token = "0x1700006E")]
	public bool IsGrabbable
	{
		[Token(Token = "0x6000506")]
		[Address(RVA = "0x790E48", Offset = "0x790E48", VA = "0x790E48")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000507")]
		[Address(RVA = "0x790E50", Offset = "0x790E50", VA = "0x790E50")]
		set
		{
		}
	}

	[Token(Token = "0x1700006F")]
	public bool IsFlyingAway
	{
		[Token(Token = "0x6000508")]
		[Address(RVA = "0x790E5C", Offset = "0x790E5C", VA = "0x790E5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B081C", Offset = "0x4B081C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000509")]
		[Address(RVA = "0x790E64", Offset = "0x790E64", VA = "0x790E64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B082C", Offset = "0x4B082C")]
		set
		{
		}
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x790C50", Offset = "0x790C50", VA = "0x790C50")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x78DE84", Offset = "0x78DE84", VA = "0x78DE84")]
	public bool GetHand(out Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x790DC8", Offset = "0x790DC8", VA = "0x790DC8")]
	public bool IsGrabbed()
	{
		return default(bool);
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x790E70", Offset = "0x790E70", VA = "0x790E70", Slot = "4")]
	public virtual HandAnimation.Pose GetGrabbedPose()
	{
		return default(HandAnimation.Pose);
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x7905FC", Offset = "0x7905FC", VA = "0x7905FC", Slot = "5")]
	public virtual bool OnObjectGrabbed(Hand hand, Action OnGrabbed, Transform grabOffset, InputAction inputAction)
	{
		return default(bool);
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x791010", Offset = "0x791010", VA = "0x791010", Slot = "6")]
	public virtual bool OnObjectReleased(Hand hand, InputAction inputAction = InputAction.Grab)
	{
		return default(bool);
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x7918AC", Offset = "0x7918AC", VA = "0x7918AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B083C", Offset = "0x4B083C")]
	private IEnumerator HoverAway(Vector3 velocity)
	{
		return null;
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x791958", Offset = "0x791958", VA = "0x791958")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B08A0", Offset = "0x4B08A0")]
	private IEnumerator ReturnToDefaultLocation(float duration, float delay)
	{
		return null;
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x791A48", Offset = "0x791A48", VA = "0x791A48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B0904", Offset = "0x4B0904")]
	private IEnumerator ReturnToHand(Hand previousHand)
	{
		return null;
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x791B0C", Offset = "0x791B0C", VA = "0x791B0C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x790E78", Offset = "0x790E78", VA = "0x790E78")]
	public static Vector3 NearestPointOnFiniteLine(Vector3 start, Vector3 end, Vector3 pnt)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x791C24", Offset = "0x791C24", VA = "0x791C24")]
	protected void OnDisable()
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x790B18", Offset = "0x790B18", VA = "0x790B18")]
	public GrabbableObject()
	{
	}
}
[Token(Token = "0x200008B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4A80E8", Offset = "0x4A80E8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4A80E8", Offset = "0x4A80E8")]
public class Grabber : MonoBehaviour
{
	[Token(Token = "0x40003EB")]
	private const float grabbInterval = 0.25f;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform handGrabOffset;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Hand hand;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GrabbableObject currentGrabObject;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GrabbableObject hoveringObject;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<GrabbableObject> overlappingObjects;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float grabbTimmer;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private InputAction? tryToGrabWith;

	[Token(Token = "0x17000070")]
	public bool IsGrabbing
	{
		[Token(Token = "0x6000514")]
		[Address(RVA = "0x7924C4", Offset = "0x7924C4", VA = "0x7924C4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x792534", Offset = "0x792534", VA = "0x792534")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x7925C0", Offset = "0x7925C0", VA = "0x7925C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x792684", Offset = "0x792684", VA = "0x792684")]
	private void Update()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x792D28", Offset = "0x792D28", VA = "0x792D28")]
	private void OnGrabObject(InputAction inputAction)
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x792EE8", Offset = "0x792EE8", VA = "0x792EE8")]
	public void ForceRelease(GrabbableObject grabbable)
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x792A54", Offset = "0x792A54", VA = "0x792A54")]
	public void OnReleaseObject(InputAction input)
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x792FEC", Offset = "0x792FEC", VA = "0x792FEC")]
	public void OnObjectTaken()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x792B80", Offset = "0x792B80", VA = "0x792B80")]
	private void UpdateHovering()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x7930DC", Offset = "0x7930DC", VA = "0x7930DC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x7931D0", Offset = "0x7931D0", VA = "0x7931D0")]
	private bool AddGrabbable(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x793304", Offset = "0x793304", VA = "0x793304")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x7933F8", Offset = "0x7933F8", VA = "0x7933F8")]
	private bool RemoveGrabbable(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x7934DC", Offset = "0x7934DC", VA = "0x7934DC")]
	private static int SortByPrioirty(GrabbableObject a, GrabbableObject b)
	{
		return default(int);
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x793538", Offset = "0x793538", VA = "0x793538")]
	public Grabber()
	{
	}
}
[Token(Token = "0x200008C")]
public class Hand : MonoBehaviour
{
	[Token(Token = "0x20003B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8AF4", Offset = "0x4A8AF4")]
	private sealed class <InstantiateGolfClubOffset>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Hand <>4__this;

		[Token(Token = "0x1700016C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B5F")]
			[Address(RVA = "0x7A09CC", Offset = "0x7A09CC", VA = "0x7A09CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B61")]
			[Address(RVA = "0x7A0A3C", Offset = "0x7A0A3C", VA = "0x7A0A3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0x7A0188", Offset = "0x7A0188", VA = "0x7A0188")]
		[DebuggerHidden]
		public <InstantiateGolfClubOffset>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0x7A076C", Offset = "0x7A076C", VA = "0x7A076C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0x7A0770", Offset = "0x7A0770", VA = "0x7A0770", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0x7A09D4", Offset = "0x7A09D4", VA = "0x7A09D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Handedness hand;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform handGrabOffset;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int avrageOverFrames;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 velocity;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 avrageVelocity;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3[] velocityBuffer;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 previousThrowLocation;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private HandAnimation handAnim;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private HandFader handFader;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool hasHandFader;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool isGolfScene;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform golfOffset;

	[Token(Token = "0x17000071")]
	public Handedness Handedness
	{
		[Token(Token = "0x6000523")]
		[Address(RVA = "0x78E7DC", Offset = "0x78E7DC", VA = "0x78E7DC")]
		get
		{
			return default(Handedness);
		}
		[Token(Token = "0x6000524")]
		[Address(RVA = "0x79FF90", Offset = "0x79FF90", VA = "0x79FF90")]
		set
		{
		}
	}

	[Token(Token = "0x17000072")]
	public Vector3 ThrowPosition
	{
		[Token(Token = "0x6000525")]
		[Address(RVA = "0x79FF98", Offset = "0x79FF98", VA = "0x79FF98")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000073")]
	public Vector3 ThrowVelocity
	{
		[Token(Token = "0x6000526")]
		[Address(RVA = "0x79FFF0", Offset = "0x79FFF0", VA = "0x79FFF0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000074")]
	public Vector3 AvrageThrowVelocity
	{
		[Token(Token = "0x6000527")]
		[Address(RVA = "0x78DF20", Offset = "0x78DF20", VA = "0x78DF20")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x79FFFC", Offset = "0x79FFFC", VA = "0x79FFFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x7A0054", Offset = "0x7A0054", VA = "0x7A0054")]
	private void Start()
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x7A0114", Offset = "0x7A0114", VA = "0x7A0114")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B0968", Offset = "0x4B0968")]
	private IEnumerator InstantiateGolfClubOffset()
	{
		return null;
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x792EB4", Offset = "0x792EB4", VA = "0x792EB4")]
	public void SetPose(HandAnimation.Pose pose)
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x7A0208", Offset = "0x7A0208", VA = "0x7A0208")]
	private void Update()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x7A0440", Offset = "0x7A0440", VA = "0x7A0440")]
	private void UpdateThrowVelocity()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x7A075C", Offset = "0x7A075C", VA = "0x7A075C")]
	public Hand()
	{
	}
}
[Token(Token = "0x200008D")]
public class HandFader : MonoBehaviour
{
	[Token(Token = "0x20003B1")]
	private enum State
	{
		[Token(Token = "0x40016F0")]
		Hidden,
		[Token(Token = "0x40016F1")]
		Blending,
		[Token(Token = "0x40016F2")]
		Normal
	}

	[Serializable]
	[Token(Token = "0x20003B2")]
	public struct RendererData
	{
		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Renderer renderer;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Color color;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material normalMat;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material fadeMat;
	}

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float blendSpeed;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float startAlpha;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RendererData[] renderers;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float targetAlpha;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float currentAlpha;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MaterialPropertyBlock propBlock;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int colorId;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private State state;

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x7A0EE8", Offset = "0x7A0EE8", VA = "0x7A0EE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x7A1044", Offset = "0x7A1044", VA = "0x7A1044")]
	private void Update()
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x7A0400", Offset = "0x7A0400", VA = "0x7A0400")]
	public void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x7A144C", Offset = "0x7A144C", VA = "0x7A144C")]
	public HandFader()
	{
	}
}
[Token(Token = "0x200008E")]
public class HandAnimation : MonoBehaviour
{
	[Token(Token = "0x20003B3")]
	public enum Pose
	{
		[Token(Token = "0x40016F8")]
		Flex,
		[Token(Token = "0x40016F9")]
		GenericHold,
		[Token(Token = "0x40016FA")]
		HoldBall,
		[Token(Token = "0x40016FB")]
		HoldController,
		[Token(Token = "0x40016FC")]
		HoldSoft,
		[Token(Token = "0x40016FD")]
		HoldHard
	}

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Handedness hand;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x4000409")]
	public const string ANIM_LAYER_NAME_POINT = "Point Layer";

	[Token(Token = "0x400040A")]
	public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

	[Token(Token = "0x400040B")]
	public const string ANIM_PARAM_NAME_FLEX = "Flex";

	[Token(Token = "0x400040C")]
	public const string ANIM_PARAM_NAME_POSE = "Pose";

	[Token(Token = "0x400040D")]
	public const float INPUT_RATE_CHANGE = 20f;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int m_animLayerIndexThumb;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int m_animLayerIndexPoint;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int m_animParamIndexFlex;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int m_animParamIndexPose;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isPointing;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool isGivingThumbsUp;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Pose currentPose;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float pointBlend;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float thumbsUpBlend;

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x7A0A44", Offset = "0x7A0A44", VA = "0x7A0A44")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x7A0B0C", Offset = "0x7A0B0C", VA = "0x7A0B0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x7A01B4", Offset = "0x7A01B4", VA = "0x7A01B4")]
	public void SetPose(Pose pose)
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x7A0B80", Offset = "0x7A0B80", VA = "0x7A0B80")]
	private void UpdateCapTouchStates()
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x7A0C84", Offset = "0x7A0C84", VA = "0x7A0C84")]
	private float InputValueRateChange(bool isDown, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x7A0D24", Offset = "0x7A0D24", VA = "0x7A0D24")]
	private void UpdateAnimStates()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x7A0ED8", Offset = "0x7A0ED8", VA = "0x7A0ED8")]
	public HandAnimation()
	{
	}
}
[Token(Token = "0x200008F")]
public class VRBounds : MonoBehaviour
{
	[Token(Token = "0x20003B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8B04", Offset = "0x4A8B04")]
	private sealed class <Start>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRBounds <>4__this;

		[Token(Token = "0x1700016E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B65")]
			[Address(RVA = "0x82893C", Offset = "0x82893C", VA = "0x82893C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B67")]
			[Address(RVA = "0x8289AC", Offset = "0x8289AC", VA = "0x8289AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0x8281A0", Offset = "0x8281A0", VA = "0x8281A0")]
		[DebuggerHidden]
		public <Start>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0x8287FC", Offset = "0x8287FC", VA = "0x8287FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0x828800", Offset = "0x828800", VA = "0x828800", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0x828944", Offset = "0x828944", VA = "0x828944", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform target;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int intersectCount;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool hasFadedOut;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private VRBoundsHandle[] handles;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LineRenderer[] lineRenderers;

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x82812C", Offset = "0x82812C", VA = "0x82812C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B09CC", Offset = "0x4B09CC")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x8281CC", Offset = "0x8281CC", VA = "0x8281CC")]
	private void SetUpHandles()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x828224", Offset = "0x828224", VA = "0x828224")]
	private bool IntersectUpdate()
	{
		return default(bool);
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x828724", Offset = "0x828724", VA = "0x828724")]
	private void Update()
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x82854C", Offset = "0x82854C", VA = "0x82854C")]
	private static bool Intersect(Vector3 A, Vector3 B, Vector3 C, Vector3 D)
	{
		return default(bool);
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x8287F4", Offset = "0x8287F4", VA = "0x8287F4")]
	public VRBounds()
	{
	}
}
[Token(Token = "0x2000090")]
public class VRBoundsHandle : MonoBehaviour
{
	[Token(Token = "0x6000540")]
	[Address(RVA = "0x8289B4", Offset = "0x8289B4", VA = "0x8289B4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x8289F8", Offset = "0x8289F8", VA = "0x8289F8")]
	public VRBoundsHandle()
	{
	}
}
[Token(Token = "0x2000091")]
public abstract class SceneModifier : SingleInstanceBehavior<SceneModifier>
{
	[Token(Token = "0x6000542")]
	public abstract void OnCameraInstantiated(Camera camera);

	[Token(Token = "0x6000543")]
	public abstract Transform GetLeftEye();

	[Token(Token = "0x6000544")]
	public abstract Transform GetRightEye();

	[Token(Token = "0x6000545")]
	public abstract Transform GetCenterCamera();

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x6993BC", Offset = "0x6993BC", VA = "0x6993BC")]
	protected SceneModifier()
	{
	}
}
[Token(Token = "0x2000092")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x4A81B4", Offset = "0x4A81B4")]
public class XiaomiConfig : PlatformConfig
{
	[Token(Token = "0x6000547")]
	[Address(RVA = "0x832820", Offset = "0x832820", VA = "0x832820", Slot = "5")]
	public override bool ShouldPause()
	{
		return default(bool);
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x832828", Offset = "0x832828", VA = "0x832828", Slot = "14")]
	public override Type GetTrackerType()
	{
		return null;
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x832898", Offset = "0x832898", VA = "0x832898")]
	public XiaomiConfig()
	{
	}
}
[Token(Token = "0x2000093")]
public class XiaomiEntitlementCheck : MonoBehaviour
{
	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject entitlementText;

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x8328A0", Offset = "0x8328A0", VA = "0x8328A0")]
	private void Start()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x832914", Offset = "0x832914", VA = "0x832914")]
	public XiaomiEntitlementCheck()
	{
	}
}
[Token(Token = "0x2000094")]
public class XiaomiSceneModifier : SceneModifier
{
	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform mainCameraTransform;

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x83291C", Offset = "0x83291C", VA = "0x83291C")]
	private void Start()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x832920", Offset = "0x832920", VA = "0x832920", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x832970", Offset = "0x832970", VA = "0x832970", Slot = "6")]
	public override void OnCameraInstantiated(Camera camera)
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x832A30", Offset = "0x832A30", VA = "0x832A30", Slot = "7")]
	public override Transform GetLeftEye()
	{
		return null;
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x832AD4", Offset = "0x832AD4", VA = "0x832AD4", Slot = "8")]
	public override Transform GetRightEye()
	{
		return null;
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x832AD8", Offset = "0x832AD8", VA = "0x832AD8", Slot = "9")]
	public override Transform GetCenterCamera()
	{
		return null;
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x832A34", Offset = "0x832A34", VA = "0x832A34")]
	private Transform GetMainCameraTransform()
	{
		return null;
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x832ADC", Offset = "0x832ADC", VA = "0x832ADC")]
	public XiaomiSceneModifier()
	{
	}
}
[Token(Token = "0x2000095")]
public class InputWrapperXRSpace : InputWrapper
{
	[Token(Token = "0x6000554")]
	[Address(RVA = "0x737228", Offset = "0x737228", VA = "0x737228")]
	public static Vector3 ReadAccelerometer()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x737288", Offset = "0x737288", VA = "0x737288")]
	public InputWrapperXRSpace()
	{
	}
}
[Token(Token = "0x2000096")]
public class ProxyInstance : MonoBehaviour
{
	[Token(Token = "0x6000556")]
	[Address(RVA = "0x66CB9C", Offset = "0x66CB9C", VA = "0x66CB9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x66CC38", Offset = "0x66CC38", VA = "0x66CC38")]
	public ProxyInstance()
	{
	}
}
[Token(Token = "0x2000097")]
public class ProxyVRCameraSetup : MonoBehaviour
{
	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject prefab;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameObject instance;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3? lastPos;

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x66CC40", Offset = "0x66CC40", VA = "0x66CC40")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x66D004", Offset = "0x66D004", VA = "0x66D004")]
	public ProxyVRCameraSetup()
	{
	}
}
[Token(Token = "0x2000098")]
public class SpeechBubbleAnimatorReplacement : MonoBehaviour
{
	[Token(Token = "0x20003B5")]
	public enum State
	{
		[Token(Token = "0x4001702")]
		HideBubble,
		[Token(Token = "0x4001703")]
		HideController,
		[Token(Token = "0x4001704")]
		Move,
		[Token(Token = "0x4001705")]
		Backpack,
		[Token(Token = "0x4001706")]
		Recenter
	}

	[Token(Token = "0x20003B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8B14", Offset = "0x4A8B14")]
	private sealed class <ShowRoutine>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpeechBubbleAnimatorReplacement <>4__this;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x17000170")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B6B")]
			[Address(RVA = "0x6A861C", Offset = "0x6A861C", VA = "0x6A861C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000171")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B6D")]
			[Address(RVA = "0x6A868C", Offset = "0x6A868C", VA = "0x6A868C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0x6A7EA0", Offset = "0x6A7EA0", VA = "0x6A7EA0")]
		[DebuggerHidden]
		public <ShowRoutine>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0x6A8404", Offset = "0x6A8404", VA = "0x6A8404", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0x6A8408", Offset = "0x6A8408", VA = "0x6A8408", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0x6A8624", Offset = "0x6A8624", VA = "0x6A8624", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8B24", Offset = "0x4A8B24")]
	private sealed class <BlinkRoutine>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpeechBubbleAnimatorReplacement <>4__this;

		[Token(Token = "0x17000172")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B71")]
			[Address(RVA = "0x6A8134", Offset = "0x6A8134", VA = "0x6A8134", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000173")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B73")]
			[Address(RVA = "0x6A81A4", Offset = "0x6A81A4", VA = "0x6A81A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0x6A7F40", Offset = "0x6A7F40", VA = "0x6A7F40")]
		[DebuggerHidden]
		public <BlinkRoutine>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0x6A7FB4", Offset = "0x6A7FB4", VA = "0x6A7FB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0x6A7FB8", Offset = "0x6A7FB8", VA = "0x6A7FB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0x6A813C", Offset = "0x6A813C", VA = "0x6A813C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8B34", Offset = "0x4A8B34")]
	private sealed class <HideRoutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpeechBubbleAnimatorReplacement <>4__this;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startScale>5__2;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <time>5__3;

		[Token(Token = "0x17000174")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B77")]
			[Address(RVA = "0x6A838C", Offset = "0x6A838C", VA = "0x6A838C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000175")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B79")]
			[Address(RVA = "0x6A83FC", Offset = "0x6A83FC", VA = "0x6A83FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0x6A7F6C", Offset = "0x6A7F6C", VA = "0x6A7F6C")]
		[DebuggerHidden]
		public <HideRoutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0x6A81AC", Offset = "0x6A81AC", VA = "0x6A81AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0x6A81B0", Offset = "0x6A81B0", VA = "0x6A81B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0x6A8394", Offset = "0x6A8394", VA = "0x6A8394", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform scaleRoot;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject[] texts;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private State[] states;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject backpackBtnIndicator;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject moveBtnIndicator;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject recenterBtnIndicator;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject controller;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float blinkDuration;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float popupTime;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AnimationCurve appearCurve;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AnimationCurve disappearCurve;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private bool enableDebugTesting;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private int debugState;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int prevDebugState;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool showing;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private State state;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject currentBlinking;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool currentActive;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float timer;

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x6A7D04", Offset = "0x6A7D04", VA = "0x6A7D04")]
	private void Awake()
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x6A7538", Offset = "0x6A7538", VA = "0x6A7538")]
	public void SetState(int stateIndex)
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x6A7DB8", Offset = "0x6A7DB8", VA = "0x6A7DB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B0A30", Offset = "0x4B0A30")]
	private IEnumerator ShowRoutine()
	{
		return null;
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x6A7ECC", Offset = "0x6A7ECC", VA = "0x6A7ECC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B0A94", Offset = "0x4B0A94")]
	private IEnumerator BlinkRoutine()
	{
		return null;
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x6A7E2C", Offset = "0x6A7E2C", VA = "0x6A7E2C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B0AF8", Offset = "0x4B0AF8")]
	private IEnumerator HideRoutine()
	{
		return null;
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x6A7F98", Offset = "0x6A7F98", VA = "0x6A7F98")]
	public SpeechBubbleAnimatorReplacement()
	{
	}
}
[Token(Token = "0x2000099")]
public class XRSpaceHelper : MonoBehaviour
{
	[Token(Token = "0x20003B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8B44", Offset = "0x4A8B44")]
	private sealed class <DoSetDefaultHandPos>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public XRSpaceHelper <>4__this;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <duration>5__2;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <startPos>5__3;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <targetPos>5__4;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <t>5__5;

		[Token(Token = "0x17000176")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B7D")]
			[Address(RVA = "0x832784", Offset = "0x832784", VA = "0x832784", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000177")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B7F")]
			[Address(RVA = "0x8327F4", Offset = "0x8327F4", VA = "0x8327F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0x832300", Offset = "0x832300", VA = "0x832300")]
		[DebuggerHidden]
		public <DoSetDefaultHandPos>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0x832334", Offset = "0x832334", VA = "0x832334", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0x832338", Offset = "0x832338", VA = "0x832338", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0x83278C", Offset = "0x83278C", VA = "0x83278C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static XRSpaceHelper instance;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform leftHand;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform rightHand;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 offset;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 leftHandPosition;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 rightHandPosition;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool resettingHandPos;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AABEC", Offset = "0x4AABEC")]
	private float <TimeNotTracked>k__BackingField;

	[Token(Token = "0x17000075")]
	public float TimeNotTracked
	{
		[Token(Token = "0x6000560")]
		[Address(RVA = "0x832184", Offset = "0x832184", VA = "0x832184")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0B5C", Offset = "0x4B0B5C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000561")]
		[Address(RVA = "0x83218C", Offset = "0x83218C", VA = "0x83218C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0B6C", Offset = "0x4B0B6C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x832194", Offset = "0x832194", VA = "0x832194")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x8321E8", Offset = "0x8321E8", VA = "0x8321E8")]
	public Vector3 GetPos(Handedness hand)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x832248", Offset = "0x832248", VA = "0x832248")]
	public void SetDefaultHandPos()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x83228C", Offset = "0x83228C", VA = "0x83228C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B0B7C", Offset = "0x4B0B7C")]
	private IEnumerator DoSetDefaultHandPos()
	{
		return null;
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x83232C", Offset = "0x83232C", VA = "0x83232C")]
	public XRSpaceHelper()
	{
	}
}
[Token(Token = "0x200009A")]
public class XRSpaceSceneModifier : SceneModifier
{
	[Token(Token = "0x6000567")]
	[Address(RVA = "0x8327FC", Offset = "0x8327FC", VA = "0x8327FC", Slot = "6")]
	public override void OnCameraInstantiated(Camera camera)
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x832800", Offset = "0x832800", VA = "0x832800", Slot = "7")]
	public override Transform GetLeftEye()
	{
		return null;
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x832808", Offset = "0x832808", VA = "0x832808", Slot = "8")]
	public override Transform GetRightEye()
	{
		return null;
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x832810", Offset = "0x832810", VA = "0x832810", Slot = "9")]
	public override Transform GetCenterCamera()
	{
		return null;
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x832818", Offset = "0x832818", VA = "0x832818")]
	public XRSpaceSceneModifier()
	{
	}
}
[Token(Token = "0x200009B")]
[ExecuteInEditMode]
public class CubemapRenderer : MonoBehaviour
{
	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Cubemap cubemap;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4AAC0C", Offset = "0x4AAC0C")]
	private int textureSizePowerOfTwo;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Camera renderCam;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Material materialToUpdate;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private string materialTextureName;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool renderBack;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	[SerializeField]
	private bool renderBottom;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	[SerializeField]
	private bool renderTop;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	[SerializeField]
	private bool renderEachFrame;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int frameCounter;

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x6DDBB4", Offset = "0x6DDBB4", VA = "0x6DDBB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x6DDE28", Offset = "0x6DDE28", VA = "0x6DDE28")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x6DDC44", Offset = "0x6DDC44", VA = "0x6DDC44")]
	private void CreateCubemap()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x6DDD3C", Offset = "0x6DDD3C", VA = "0x6DDD3C")]
	private void RenderToCubemap(bool renderAll = false)
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x6DDEB8", Offset = "0x6DDEB8", VA = "0x6DDEB8")]
	private int GetActualTextureSize()
	{
		return default(int);
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x6DDECC", Offset = "0x6DDECC", VA = "0x6DDECC")]
	public CubemapRenderer()
	{
	}
}
[Token(Token = "0x200009C")]
public class BasketAimGaze : MonoBehaviour
{
	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform[] hoops;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 lockOnTarget;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private BasketBallAimTarget currentHightlightedTarget;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform cameraTransform;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int lastGazeHitInstanceID;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool isAiming;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Vector2 crosshairDeviation;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Vector2 aimDeviation;

	[Token(Token = "0x17000076")]
	public Vector3 LockOnTarget
	{
		[Token(Token = "0x6000572")]
		[Address(RVA = "0x6BD69C", Offset = "0x6BD69C", VA = "0x6BD69C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000077")]
	public bool IsAiming
	{
		[Token(Token = "0x6000573")]
		[Address(RVA = "0x6BD6A8", Offset = "0x6BD6A8", VA = "0x6BD6A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x6BD6B0", Offset = "0x6BD6B0", VA = "0x6BD6B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x6BD84C", Offset = "0x6BD84C", VA = "0x6BD84C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x6BD850", Offset = "0x6BD850", VA = "0x6BD850")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x6BDB18", Offset = "0x6BDB18", VA = "0x6BDB18")]
	private void Update()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x6BDF14", Offset = "0x6BDF14", VA = "0x6BDF14")]
	private void UpdateAimCrosshairPosition(BasketBallAimTarget aimTarget, Vector3 worldPosHit)
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x6BE0C4", Offset = "0x6BE0C4", VA = "0x6BE0C4")]
	private void hideCurrentHighlitedTarget()
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x6BE250", Offset = "0x6BE250", VA = "0x6BE250")]
	public BasketAimGaze()
	{
	}
}
[Token(Token = "0x200009D")]
public class BasketAppearFade : MonoBehaviour
{
	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer rend;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material mat;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float fadeOutTime;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float fadeValue;

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x6BE2C4", Offset = "0x6BE2C4", VA = "0x6BE2C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x6BE358", Offset = "0x6BE358", VA = "0x6BE358")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x6BE420", Offset = "0x6BE420", VA = "0x6BE420")]
	private void FadeUp()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x6BE61C", Offset = "0x6BE61C", VA = "0x6BE61C")]
	private void FadeDown()
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x6BE774", Offset = "0x6BE774", VA = "0x6BE774")]
	private void Update()
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x6BE7E8", Offset = "0x6BE7E8", VA = "0x6BE7E8")]
	public BasketAppearFade()
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x6BE7F8", Offset = "0x6BE7F8", VA = "0x6BE7F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0BE0", Offset = "0x4B0BE0")]
	private void <FadeUp>b__6_0(float val)
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x6BE800", Offset = "0x6BE800", VA = "0x6BE800")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0BF0", Offset = "0x4B0BF0")]
	private void <FadeDown>b__7_0(float val)
	{
	}
}
[Token(Token = "0x200009E")]
public class BasketBall : MonoBehaviour
{
	[Token(Token = "0x4000452")]
	private const string basketEnvMaterialName = "BasketFloor";

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int floorBounces;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GrabbableObject grabbableObject;

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x6BE808", Offset = "0x6BE808", VA = "0x6BE808")]
	private void Start()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x6BE878", Offset = "0x6BE878", VA = "0x6BE878")]
	private void OnCollisionEnter(Collision coll)
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x6BE9F8", Offset = "0x6BE9F8", VA = "0x6BE9F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x6BEA7C", Offset = "0x6BEA7C", VA = "0x6BEA7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x6BEA84", Offset = "0x6BEA84", VA = "0x6BEA84")]
	public BasketBall()
	{
	}
}
[Token(Token = "0x200009F")]
public class BasketBallAimTarget : MonoBehaviour
{
	[Token(Token = "0x4000455")]
	private const float rotationSpeed = 10f;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform crosshair;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform crosshairOuterRing;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SpriteRenderer crosshairInnerTimerRing;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MaterialPropertyBlock timerRingPropertyBlock;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 targetScale;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private BasketHoop basketHoop;

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x6BEA8C", Offset = "0x6BEA8C", VA = "0x6BEA8C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x6BECE0", Offset = "0x6BECE0", VA = "0x6BECE0")]
	private void Update()
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x6BE0F0", Offset = "0x6BE0F0", VA = "0x6BE0F0")]
	public void Show()
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x6BD8E4", Offset = "0x6BD8E4", VA = "0x6BD8E4")]
	public void Hide()
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x6BEED0", Offset = "0x6BEED0", VA = "0x6BEED0")]
	public void MoveCrosshair(float x, float y)
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x6BEF58", Offset = "0x6BEF58", VA = "0x6BEF58")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x6BE248", Offset = "0x6BE248", VA = "0x6BE248")]
	public Transform GetCrosshair()
	{
		return null;
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x6BEFE4", Offset = "0x6BEFE4", VA = "0x6BEFE4")]
	public BasketBallAimTarget()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x6BEFEC", Offset = "0x6BEFEC", VA = "0x6BEFEC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0C00", Offset = "0x4B0C00")]
	private void <Hide>b__10_0()
	{
	}
}
[Token(Token = "0x20000A0")]
public class BasketBallSpawner : MonoBehaviour
{
	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int maxAmountOfBalls;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float timeToSpawnNewBall;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector3 relativeSpawnPoint;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string basketBallPrefabName;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject[] balls;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int ballIndex;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float newBallSpawnCounter;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool canSpawn;

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x6BF038", Offset = "0x6BF038", VA = "0x6BF038")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x6BF090", Offset = "0x6BF090", VA = "0x6BF090")]
	private void Start()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x6BF094", Offset = "0x6BF094", VA = "0x6BF094")]
	private void Update()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x6BF0D4", Offset = "0x6BF0D4", VA = "0x6BF0D4")]
	public void ResetSpawnTime()
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x6BF0DC", Offset = "0x6BF0DC", VA = "0x6BF0DC")]
	public void CanSpawn(bool canSpawn)
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x6BF0E8", Offset = "0x6BF0E8", VA = "0x6BF0E8")]
	public bool CheckSpawnTime()
	{
		return default(bool);
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x6BF0FC", Offset = "0x6BF0FC", VA = "0x6BF0FC")]
	public void SpawnBasketBall3Dof(Transform parent, out Transform ball, out Rigidbody ballRigidBody)
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x6BF5D4", Offset = "0x6BF5D4", VA = "0x6BF5D4")]
	public void SpawnBasketBall6Dof(Transform parent, out Transform ball)
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x6BFB54", Offset = "0x6BFB54", VA = "0x6BFB54")]
	public BasketBallSpawner()
	{
	}
}
[Token(Token = "0x20000A1")]
public class BasketGame : SingleInstanceBehavior<BasketGame>
{
	[Token(Token = "0x20003BA")]
	private enum State
	{
		[Token(Token = "0x400171B")]
		Setup,
		[Token(Token = "0x400171C")]
		Instructions,
		[Token(Token = "0x400171D")]
		GameOn,
		[Token(Token = "0x400171E")]
		WaitForBallsToStop,
		[Token(Token = "0x400171F")]
		GameOver
	}

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int gameTime;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ThrowBallController throwBallController;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator[] hamsterAnimators;

	[Token(Token = "0x4000467")]
	private const string hamsterPlayerScoredTrigger = "PlayerScored";

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform throwingArc;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float originalThrowingArcXPos;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool hasTriggeredFinalBuzzer;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private State currentState;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private UIBoard instructions;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private BasketScoreDisplay basketScoreDisplay;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private HamsterAnnouncer hamsterAnnouncer;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private BasketWaveManager waveManager;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int totalScore;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int numberOfCollectedTickets;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private CountdownTime gameTimer;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string basketBallPrefabName;

	[Token(Token = "0x17000078")]
	public float timeLeft
	{
		[Token(Token = "0x600059A")]
		[Address(RVA = "0x6BFC20", Offset = "0x6BFC20", VA = "0x6BFC20")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x6BFC50", Offset = "0x6BFC50", VA = "0x6BFC50")]
	private void Start()
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x6C02AC", Offset = "0x6C02AC", VA = "0x6C02AC")]
	private void SetupBasketBalls()
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x6C0404", Offset = "0x6C0404", VA = "0x6C0404")]
	private void UpdateThrowingHandedness()
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x6C053C", Offset = "0x6C053C", VA = "0x6C053C", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x6C0648", Offset = "0x6C0648", VA = "0x6C0648")]
	public bool IsGameActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x6C0658", Offset = "0x6C0658", VA = "0x6C0658")]
	public void OnHitStart()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x6C0770", Offset = "0x6C0770", VA = "0x6C0770")]
	private void Update()
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x6C0504", Offset = "0x6C0504", VA = "0x6C0504")]
	private void ShowInstructions()
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x6C0CE8", Offset = "0x6C0CE8", VA = "0x6C0CE8")]
	private void StartGame()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x6C0ED4", Offset = "0x6C0ED4", VA = "0x6C0ED4")]
	public void AddScore(int amount, BasketHoop.HoopType hoopType)
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x6C11B8", Offset = "0x6C11B8", VA = "0x6C11B8")]
	public void AddCollectedTicket()
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x6C0BF0", Offset = "0x6C0BF0", VA = "0x6C0BF0")]
	private void WaitForAllBallsToStop()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x6C0A84", Offset = "0x6C0A84", VA = "0x6C0A84")]
	private void EndGame()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x6C12E4", Offset = "0x6C12E4", VA = "0x6C12E4")]
	private void DisplayScoreboard()
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x6C164C", Offset = "0x6C164C", VA = "0x6C164C")]
	public BasketGame()
	{
	}
}
[Token(Token = "0x20000A2")]
public class BasketHoop : MonoBehaviour
{
	[Token(Token = "0x20003BB")]
	public enum HoopType
	{
		[Token(Token = "0x4001721")]
		Singleshot,
		[Token(Token = "0x4001722")]
		Multishot,
		[Token(Token = "0x4001723")]
		GoldenSingle
	}

	[Token(Token = "0x20003BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8B54", Offset = "0x4A8B54")]
	private sealed class <>c__DisplayClass28_0
	{
		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BasketHoop <>4__this;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool activeAtFadeEnd;

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0x6C1D68", Offset = "0x6C1D68", VA = "0x6C1D68")]
		public <>c__DisplayClass28_0()
		{
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0x6C2330", Offset = "0x6C2330", VA = "0x6C2330")]
		internal void <Fade>b__0()
		{
		}
	}

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HoopType type;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BasketWaveConfig.Label[] labels;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EventHandler OnScored;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EventHandler OnTimeExpired;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int overrideNumThrows;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float overrideTimeToLive;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public int numberOfThrowsLeft;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float maxLifeTime;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float timeLeftToLive;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int LastHoopHitId;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int score;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int id;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int numTimesScored;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject hoopActiveParent;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject appearEffectParent;

	[Token(Token = "0x4000483")]
	private const float fadeTime = 0.25f;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GenericTrigger scoreTrigger1;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GenericTrigger scoreTrigger2;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Animator lightsAnimator;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Text scoreSign;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool isActiveInGame;

	[Token(Token = "0x17000079")]
	public HoopType Type
	{
		[Token(Token = "0x60005AB")]
		[Address(RVA = "0x6BEEBC", Offset = "0x6BEEBC", VA = "0x6BEEBC")]
		get
		{
			return default(HoopType);
		}
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x6C1720", Offset = "0x6C1720", VA = "0x6C1720")]
	public static void Reset()
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x6C1770", Offset = "0x6C1770", VA = "0x6C1770")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x6C1A04", Offset = "0x6C1A04", VA = "0x6C1A04")]
	public void Show()
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x6C1C98", Offset = "0x6C1C98", VA = "0x6C1C98")]
	public void Hide()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x6C1B74", Offset = "0x6C1B74", VA = "0x6C1B74")]
	private void Fade(bool activeAtFadeEnd)
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x6C1AF4", Offset = "0x6C1AF4", VA = "0x6C1AF4")]
	public void ResetHoop()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x6C1D70", Offset = "0x6C1D70", VA = "0x6C1D70")]
	public bool IsActiveInGame()
	{
		return default(bool);
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x6C1D78", Offset = "0x6C1D78", VA = "0x6C1D78")]
	public void SetTimeToLive(float seconds)
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x6C1D80", Offset = "0x6C1D80", VA = "0x6C1D80")]
	public void AddToTimeToLive(float seconds)
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x6BEEC4", Offset = "0x6BEEC4", VA = "0x6BEEC4")]
	public float percentageLifeTimeLeft()
	{
		return default(float);
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x6C1D98", Offset = "0x6C1D98", VA = "0x6C1D98")]
	private void Update()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x6C1E6C", Offset = "0x6C1E6C", VA = "0x6C1E6C")]
	private void OnFirstTrigger(object sender, EventArgs args)
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x6C1EC4", Offset = "0x6C1EC4", VA = "0x6C1EC4")]
	private void OnSecondTrigger(object sender, EventArgs args)
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x6C2204", Offset = "0x6C2204", VA = "0x6C2204")]
	public int GetNumberOfTimesScored()
	{
		return default(int);
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x6C220C", Offset = "0x6C220C", VA = "0x6C220C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x6C2320", Offset = "0x6C2320", VA = "0x6C2320")]
	public BasketHoop()
	{
	}
}
[Token(Token = "0x20000A3")]
public class BasketNetReset : MonoBehaviour
{
	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform trans;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 startPos;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody rb;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SpringJoint spring;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 anchorPos;

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x6C2380", Offset = "0x6C2380", VA = "0x6C2380")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x6C2450", Offset = "0x6C2450", VA = "0x6C2450")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x6C2518", Offset = "0x6C2518", VA = "0x6C2518")]
	public BasketNetReset()
	{
	}
}
[Token(Token = "0x20000A4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4A8224", Offset = "0x4A8224")]
public class BasketOnHitStart : MonoBehaviour
{
	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BasketGame basketGame;

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x6C2520", Offset = "0x6C2520", VA = "0x6C2520")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x6C254C", Offset = "0x6C254C", VA = "0x6C254C")]
	public BasketOnHitStart()
	{
	}
}
[Token(Token = "0x20000A5")]
public class BasketScoreDisplay : SingleInstanceBehavior<BasketScoreDisplay>
{
	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text scoreText;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text timeText;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string scoreTemplateString;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string timeTemplateString;

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x6C2554", Offset = "0x6C2554", VA = "0x6C2554", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x6C1114", Offset = "0x6C1114", VA = "0x6C1114")]
	public void SetScore(int score)
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x6C0964", Offset = "0x6C0964", VA = "0x6C0964")]
	public void SetTime(float seconds)
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x6C25FC", Offset = "0x6C25FC", VA = "0x6C25FC")]
	public BasketScoreDisplay()
	{
	}
}
[Token(Token = "0x20000A6")]
public class BasketSignals
{
	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Signal GameFinished;

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x6C268C", Offset = "0x6C268C", VA = "0x6C268C")]
	public BasketSignals()
	{
	}
}
[Token(Token = "0x20000A7")]
public class BasketTicketSpawner : SingleInstanceBehavior<BasketTicketSpawner>
{
	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ticketPrefab;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TicketPickup ticket;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private BasketGame basketGame;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform[] ticketSpawnPositions;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float timeBetweenTicketPickups;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int numberOfTicketsInScene;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private BasketHoop hoopWithTicket;

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x6C2734", Offset = "0x6C2734", VA = "0x6C2734")]
	private void Start()
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x6C2C20", Offset = "0x6C2C20", VA = "0x6C2C20")]
	private void Update()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x6C2CF4", Offset = "0x6C2CF4", VA = "0x6C2CF4")]
	private void SpawnTicket()
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x6C2FDC", Offset = "0x6C2FDC", VA = "0x6C2FDC")]
	public void OnTicketPickup(TicketPickup ticket, bool pickedUpByPlayer)
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x6C3024", Offset = "0x6C3024", VA = "0x6C3024")]
	public void OnHoopRemoved(BasketHoop hoopToBeRemoved)
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x6C312C", Offset = "0x6C312C", VA = "0x6C312C", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x6C31BC", Offset = "0x6C31BC", VA = "0x6C31BC")]
	public BasketTicketSpawner()
	{
	}
}
[Token(Token = "0x20000A8")]
public class BasketWaveConfig : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003BD")]
	public enum Label
	{
		[Token(Token = "0x4001727")]
		Close,
		[Token(Token = "0x4001728")]
		FarAway,
		[Token(Token = "0x4001729")]
		Left,
		[Token(Token = "0x400172A")]
		Middle,
		[Token(Token = "0x400172B")]
		Right,
		[Token(Token = "0x400172C")]
		Medium,
		[Token(Token = "0x400172D")]
		High,
		[Token(Token = "0x400172E")]
		Tutorial1,
		[Token(Token = "0x400172F")]
		Unused,
		[Token(Token = "0x4001730")]
		Multihoop,
		[Token(Token = "0x4001731")]
		Tutorial2,
		[Token(Token = "0x4001732")]
		Tutorial3
	}

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int waveNumber;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int maxConcurrentHoops;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int numberOfHoopsInWave;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BasketHoop[] hoops;

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x6C322C", Offset = "0x6C322C", VA = "0x6C322C")]
	public BasketWaveConfig()
	{
	}
}
[Token(Token = "0x20000A9")]
public class BasketWaveManager : SingleInstanceBehavior<BasketWaveManager>
{
	[Token(Token = "0x20003BE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8B64", Offset = "0x4A8B64")]
	private sealed class <ShowFirstMultiHoop>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BasketWaveManager <>4__this;

		[Token(Token = "0x17000178")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B85")]
			[Address(RVA = "0x6C4660", Offset = "0x6C4660", VA = "0x6C4660", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000179")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B87")]
			[Address(RVA = "0x6C46D0", Offset = "0x6C46D0", VA = "0x6C46D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0x6C3A84", Offset = "0x6C3A84", VA = "0x6C3A84")]
		[DebuggerHidden]
		public <ShowFirstMultiHoop>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0x6C4590", Offset = "0x6C4590", VA = "0x6C4590", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0x6C4594", Offset = "0x6C4594", VA = "0x6C4594", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0x6C4668", Offset = "0x6C4668", VA = "0x6C4668", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400049F")]
	private const int MAX_CONCURRENT_HOOPS = 6;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float defaultHoopTimeToLive;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int defaultHoopNumThrows;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int allowMultiHoopsFromWaveNumber;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float addTimeToHoopOnScore;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BasketHoop[] multiHoopOrder;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float timeBetweenMultiHoops;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int multiHoopIndex;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private BasketHoop[] allHoops;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private BasketWaveConfig[] waves;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int currentWaveIndex;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int currentHoopCount;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int maxConcurrentHoops;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool isGameOver;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<BasketHoop> activeHoops;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private BasketWaveConfig currentWave;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool multiHoopActive;

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x6C0E58", Offset = "0x6C0E58", VA = "0x6C0E58")]
	public int GetWaveNumber()
	{
		return default(int);
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x6C3248", Offset = "0x6C3248", VA = "0x6C3248")]
	public bool GetMultiHoopActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x6C3250", Offset = "0x6C3250", VA = "0x6C3250", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x6C0E60", Offset = "0x6C0E60", VA = "0x6C0E60")]
	public void StartGame()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x6C1234", Offset = "0x6C1234", VA = "0x6C1234")]
	public void DisableHoopSpawning()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x6C1240", Offset = "0x6C1240", VA = "0x6C1240")]
	public void HideAllHoops()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x6C35A0", Offset = "0x6C35A0", VA = "0x6C35A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B0C10", Offset = "0x4B0C10")]
	private IEnumerator ShowFirstMultiHoop()
	{
		return null;
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x6C3AB0", Offset = "0x6C3AB0", VA = "0x6C3AB0")]
	private void OnHoopScored(object sender, EventArgs e)
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x6C3CE4", Offset = "0x6C3CE4", VA = "0x6C3CE4")]
	private void OnHoopTimeExpired(object sender, EventArgs e)
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x6C39B8", Offset = "0x6C39B8", VA = "0x6C39B8")]
	private void RemoveHoop(BasketHoop hoop)
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x6C3ED0", Offset = "0x6C3ED0", VA = "0x6C3ED0")]
	private void ShowNextMultiHoop()
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x6C3614", Offset = "0x6C3614", VA = "0x6C3614")]
	private void ShowNextHoop()
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x6C4110", Offset = "0x6C4110", VA = "0x6C4110")]
	private BasketHoop GetRandomNonActiveHoopFromList(BasketHoop[] list)
	{
		return null;
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x6C431C", Offset = "0x6C431C", VA = "0x6C431C", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x6C4504", Offset = "0x6C4504", VA = "0x6C4504")]
	public BasketWaveManager()
	{
	}
}
[Token(Token = "0x20000AA")]
public class ControllerRotationHelper : MonoBehaviour
{
	[Token(Token = "0x40004B0")]
	private const int MAX_SIZE = 60;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform orientation;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform point;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform ground;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Matrix4x4 rotationX;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Matrix4x4 rotationY;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3[] positions;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float[] times;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int index;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int length;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 forwardVec;

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x6D6B78", Offset = "0x6D6B78", VA = "0x6D6B78")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x6D6DE0", Offset = "0x6D6DE0", VA = "0x6D6DE0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x6D7034", Offset = "0x6D7034", VA = "0x6D7034")]
	private void SavePos(Vector3 pos)
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x6D7114", Offset = "0x6D7114", VA = "0x6D7114")]
	public Vector3 GetCurrentPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x6D6D70", Offset = "0x6D6D70", VA = "0x6D6D70")]
	public void Reset()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x6D716C", Offset = "0x6D716C", VA = "0x6D716C")]
	public Vector3 GetSampledDeltaPos(float sampleTime)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x6D73E4", Offset = "0x6D73E4", VA = "0x6D73E4")]
	public float GetAngleAroundX()
	{
		return default(float);
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x6D7660", Offset = "0x6D7660", VA = "0x6D7660")]
	private void FindOrthoNormals(Vector3 normal, out Vector3 orthoNormal1)
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x6D7944", Offset = "0x6D7944", VA = "0x6D7944")]
	public ControllerRotationHelper()
	{
	}
}
[Token(Token = "0x20000AB")]
public class DebugBasketBallTuning : MonoBehaviour
{
	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ThrowBallController6Dof ballController;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider massSlider;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider draggSlider;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Slider angularDraggSlider;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Slider throwVelocSlider;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Slider throwArcSlider;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float stepSmall;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float stepLarge;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private BaseCursor baseCursor;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private UIButton highlightedButton;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float savedMass;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float savedDragg;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float savedAngularDragg;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float savedThrowVelocMult;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float savedThrowArcMod;

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x6DDF34", Offset = "0x6DDF34", VA = "0x6DDF34")]
	private void Start()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x6DE2F4", Offset = "0x6DE2F4", VA = "0x6DE2F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x6DE984", Offset = "0x6DE984", VA = "0x6DE984")]
	private void UpdateValues()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x6DEF48", Offset = "0x6DEF48", VA = "0x6DEF48")]
	private void UpdateHighlightedButton()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x6DF050", Offset = "0x6DF050", VA = "0x6DF050")]
	private InputManager.CallbackResult OnClickButtonPressed()
	{
		return default(InputManager.CallbackResult);
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x6DE184", Offset = "0x6DE184", VA = "0x6DE184")]
	private void InitializeSavedData()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x6DEF9C", Offset = "0x6DEF9C", VA = "0x6DEF9C")]
	private void UpdateSavedData()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x6DEF84", Offset = "0x6DEF84", VA = "0x6DEF84")]
	private void Reset()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x6DF068", Offset = "0x6DF068", VA = "0x6DF068")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x6DF070", Offset = "0x6DF070", VA = "0x6DF070")]
	public DebugBasketBallTuning()
	{
	}
}
[Token(Token = "0x20000AC")]
public class DisableAfterEnableTime : MonoBehaviour
{
	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x71B06C", Offset = "0x71B06C", VA = "0x71B06C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x71B0C4", Offset = "0x71B0C4", VA = "0x71B0C4")]
	private void TurnOff()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x71B0FC", Offset = "0x71B0FC", VA = "0x71B0FC")]
	public DisableAfterEnableTime()
	{
	}
}
[Token(Token = "0x20000AD")]
public class GenericTrigger : MonoBehaviour
{
	[Token(Token = "0x1400001F")]
	public event EventHandler TriggerEnter
	{
		[Token(Token = "0x60005F4")]
		[Address(RVA = "0x723958", Offset = "0x723958", VA = "0x723958")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0C74", Offset = "0x4B0C74")]
		add
		{
		}
		[Token(Token = "0x60005F5")]
		[Address(RVA = "0x723A44", Offset = "0x723A44", VA = "0x723A44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0C84", Offset = "0x4B0C84")]
		remove
		{
		}
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x723B30", Offset = "0x723B30", VA = "0x723B30")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x723BC8", Offset = "0x723BC8", VA = "0x723BC8")]
	public GenericTrigger()
	{
	}
}
[Token(Token = "0x20000AE")]
public class HamsterAnnouncer : SingletonBehavior<HamsterAnnouncer>
{
	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator animator;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isGameActive;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CountdownTime randomTalkTimer;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float maxRandomCommentaryDelay;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float minRandomCommentaryDelay;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float delayRandomCommentaryOnScore;

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x79FA88", Offset = "0x79FA88", VA = "0x79FA88", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x79FBB8", Offset = "0x79FBB8", VA = "0x79FBB8")]
	public void GameStart()
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x79FCA8", Offset = "0x79FCA8", VA = "0x79FCA8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x79FD64", Offset = "0x79FD64", VA = "0x79FD64")]
	public void OnPlayerScoredGold()
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x79FBE0", Offset = "0x79FBE0", VA = "0x79FBE0")]
	private void PlayRandomCommentary()
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x79FE58", Offset = "0x79FE58", VA = "0x79FE58")]
	private void OnGameOver()
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x79FE60", Offset = "0x79FE60", VA = "0x79FE60", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x79FBAC", Offset = "0x79FBAC", VA = "0x79FBAC")]
	private float GetRandomDelayTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x79FF2C", Offset = "0x79FF2C", VA = "0x79FF2C")]
	public HamsterAnnouncer()
	{
	}
}
[Token(Token = "0x20000AF")]
public class RigidbodyMagnet : MonoBehaviour
{
	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rigidBody;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float forceAmount;

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x697860", Offset = "0x697860", VA = "0x697860")]
	private void Update()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x697A38", Offset = "0x697A38", VA = "0x697A38")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x697AFC", Offset = "0x697AFC", VA = "0x697AFC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x697BA8", Offset = "0x697BA8", VA = "0x697BA8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x697BB0", Offset = "0x697BB0", VA = "0x697BB0")]
	public RigidbodyMagnet()
	{
	}
}
[Token(Token = "0x20000B0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4A8288", Offset = "0x4A8288")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4A8288", Offset = "0x4A8288")]
public abstract class ThrowBallController : MonoBehaviour
{
	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool isThrowingAllowed;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected BasketBallSpawner basketBallSpawner;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected BasketAimGaze basketAimGaze;

	[Token(Token = "0x6000606")]
	public abstract void EnableThrowing();

	[Token(Token = "0x6000607")]
	public abstract void DisableThrowing();

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x6B0E90", Offset = "0x6B0E90", VA = "0x6B0E90")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x6B0F00", Offset = "0x6B0F00", VA = "0x6B0F00")]
	protected Vector3 SolveForInitialForce(Vector3 startPos, Vector3 targetPos, float angle)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x6B10A0", Offset = "0x6B10A0", VA = "0x6B10A0")]
	protected ThrowBallController()
	{
	}
}
[Token(Token = "0x20000B1")]
public class ThrowBallController3Dof : ThrowBallController
{
	[Token(Token = "0x40004D6")]
	private const float GRAVITY = 9.8f;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float MIN_ANGLE;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float MAX_ANGLE;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4AAD7C", Offset = "0x4AAD7C")]
	private float userForceMixedIn;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private bool useHardCodedAngle;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float hardCodedAngle;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float minForceToThrow;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool releaseTouchToThrow;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4AADFC", Offset = "0x4AADFC")]
	private float userForceModifier;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform ball;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform throwedBallParent;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private LeanTweenPath throwingArcLeanTweenPath;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform throwingArcPivot;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private LTBezierPath throwingArcBezierPath;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform spawnBallParent;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool isHoldingBall;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool preparingToThrow;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float currentThrowSpeed;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Rigidbody ballRb;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform cameraTransform;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private ControllerRotationHelper rotHelper;

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x6B10B0", Offset = "0x6B10B0", VA = "0x6B10B0")]
	private void Start()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x6B1320", Offset = "0x6B1320", VA = "0x6B1320", Slot = "4")]
	public override void EnableThrowing()
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x6B135C", Offset = "0x6B135C", VA = "0x6B135C", Slot = "5")]
	public override void DisableThrowing()
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x6B13DC", Offset = "0x6B13DC", VA = "0x6B13DC")]
	private void Update()
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x6B186C", Offset = "0x6B186C", VA = "0x6B186C")]
	private void ThrowBall()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x6B1C80", Offset = "0x6B1C80", VA = "0x6B1C80")]
	private float GetArcRatioFromAngle(float angle)
	{
		return default(float);
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x6B1D24", Offset = "0x6B1D24", VA = "0x6B1D24")]
	public ThrowBallController3Dof()
	{
	}
}
[Token(Token = "0x20000B2")]
public class ThrowBallController6Dof : ThrowBallController
{
	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform lastSpawnedBall;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool hasGrabbedBall;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float[] accelerometerMags;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float currentAcceleratorForce;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float hammerAccelerometerScale;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private PlatformConfig.BasketAimValues basketAimValues;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AAE3C", Offset = "0x4AAE3C")]
	private Transform <CurrentBall>k__BackingField;

	[Token(Token = "0x1700007A")]
	public Transform CurrentBall
	{
		[Token(Token = "0x6000612")]
		[Address(RVA = "0x81C6C4", Offset = "0x81C6C4", VA = "0x81C6C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0C94", Offset = "0x4B0C94")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000613")]
		[Address(RVA = "0x81C6CC", Offset = "0x81C6CC", VA = "0x81C6CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0CA4", Offset = "0x4B0CA4")]
		set
		{
		}
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x81C6D4", Offset = "0x81C6D4", VA = "0x81C6D4", Slot = "4")]
	public override void EnableThrowing()
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x81C710", Offset = "0x81C710", VA = "0x81C710", Slot = "5")]
	public override void DisableThrowing()
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x81C748", Offset = "0x81C748", VA = "0x81C748")]
	private void Start()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x81C7F0", Offset = "0x81C7F0", VA = "0x81C7F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x81CAA0", Offset = "0x81CAA0", VA = "0x81CAA0")]
	private Vector3 CalculateCheatForce(Vector3 force)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x81CD04", Offset = "0x81CD04", VA = "0x81CD04")]
	public ThrowBallController6Dof()
	{
	}
}
[Token(Token = "0x20000B3")]
public class BackToPoolWithDelay : MonoBehaviour
{
	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delay;

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x6B911C", Offset = "0x6B911C", VA = "0x6B911C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x6B9174", Offset = "0x6B9174", VA = "0x6B9174")]
	private void PutBackToPool()
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x6B9220", Offset = "0x6B9220", VA = "0x6B9220")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x6B9228", Offset = "0x6B9228", VA = "0x6B9228")]
	public BackToPoolWithDelay()
	{
	}
}
[Token(Token = "0x20000B4")]
public class ButtonCollectionExit : GazeButton
{
	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HierarchicalMenu menu;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer[] fadeableRenderers;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Text exitText;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float currentMeshAlpha;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float currentTextAlpha;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float targetMeshAlpha;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float targetTextAlpha;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool exitAvailable;

	[Token(Token = "0x40004FB")]
	private const string enabledAtMenuLevel = "Categories";

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CollectionExit itemPreviouslyHit;

	[Token(Token = "0x40004FD")]
	private const float fadeSpeed = 9f;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 restingPosition;

	[Token(Token = "0x40004FF")]
	private const float highlightDisplacementAmount = 0.1f;

	[Token(Token = "0x4000500")]
	private const float highlightMoveTime = 0.5f;

	[Token(Token = "0x4000501")]
	private const float unhighlightMoveTime = 0.05f;

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x6C9EA8", Offset = "0x6C9EA8", VA = "0x6C9EA8")]
	private void Start()
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x6CA0F8", Offset = "0x6CA0F8", VA = "0x6CA0F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x6CA46C", Offset = "0x6CA46C", VA = "0x6CA46C")]
	private void UpdateTextActiveStatus(float newAlpha)
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x6CA594", Offset = "0x6CA594", VA = "0x6CA594")]
	private void UpdatTextAlpha(float newAlpha)
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x6CA44C", Offset = "0x6CA44C", VA = "0x6CA44C")]
	private void EnableExit()
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x6CA460", Offset = "0x6CA460", VA = "0x6CA460")]
	private void DisableExit()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x6CA624", Offset = "0x6CA624", VA = "0x6CA624", Slot = "9")]
	public override void OnStartGaze()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x6CA878", Offset = "0x6CA878", VA = "0x6CA878", Slot = "10")]
	public override void OnStopGaze()
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x6CA928", Offset = "0x6CA928", VA = "0x6CA928", Slot = "5")]
	public override PostSelectAction OnSelect(GameObject obj)
	{
		return default(PostSelectAction);
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x6CA9D4", Offset = "0x6CA9D4", VA = "0x6CA9D4")]
	public ButtonCollectionExit()
	{
	}
}
[Token(Token = "0x20000B5")]
public class CollectionCreditsItem : SelectableItem
{
	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private HierarchicalMenu menu;

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x6D3718", Offset = "0x6D3718", VA = "0x6D3718", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x6D377C", Offset = "0x6D377C", VA = "0x6D377C", Slot = "6")]
	public override void Select()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x6D38A8", Offset = "0x6D38A8", VA = "0x6D38A8")]
	public void OnCancel()
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x6D39F0", Offset = "0x6D39F0", VA = "0x6D39F0")]
	public CollectionCreditsItem()
	{
	}
}
[Token(Token = "0x20000B6")]
public class CollectionExit : MonoBehaviour
{
	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HierarchicalMenu menu;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer[] fadeableRenderers;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Text exitText;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float currentMeshAlpha;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float currentTextAlpha;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float targetMeshAlpha;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float targetTextAlpha;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool exitAvailable;

	[Token(Token = "0x400050B")]
	private const string enabledAtMenuLevel = "Categories";

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RaycastHit[] raycastHits;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CollectionExit itemPreviouslyHit;

	[Token(Token = "0x400050E")]
	private const float fadeSpeed = 9f;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 restingPosition;

	[Token(Token = "0x4000510")]
	private const float highlightDisplacementAmount = 0.1f;

	[Token(Token = "0x4000511")]
	private const float highlightMoveTime = 0.5f;

	[Token(Token = "0x4000512")]
	private const float unhighlightMoveTime = 0.05f;

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x6D39F8", Offset = "0x6D39F8", VA = "0x6D39F8")]
	private void Start()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x6D3C48", Offset = "0x6D3C48", VA = "0x6D3C48")]
	private void Update()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x6D4308", Offset = "0x6D4308", VA = "0x6D4308")]
	private void UpdateTextActiveStatus(float newAlpha)
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x6D4430", Offset = "0x6D4430", VA = "0x6D4430")]
	private void UpdatTextAlpha(float newAlpha)
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x6D3F3C", Offset = "0x6D3F3C", VA = "0x6D3F3C")]
	private void UpdateControllerInput()
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x6D4730", Offset = "0x6D4730", VA = "0x6D4730")]
	private void removeHighlight()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x6D44D4", Offset = "0x6D44D4", VA = "0x6D44D4")]
	private void highlight()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x6D44C0", Offset = "0x6D44C0", VA = "0x6D44C0")]
	private void EnableExit()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x6D47D4", Offset = "0x6D47D4", VA = "0x6D47D4")]
	private void DisableExit()
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x6D4728", Offset = "0x6D4728", VA = "0x6D4728")]
	private void ExitToWorld()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x6D47E0", Offset = "0x6D47E0", VA = "0x6D47E0")]
	public CollectionExit()
	{
	}
}
[Token(Token = "0x20000B7")]
public class CollectionGameCategoryItem : SelectableItem
{
	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	public MenuLevel submenu;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	public ItemCategory category;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private HierarchicalMenu menu;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject newInCategoryIndicator;

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x6D4840", Offset = "0x6D4840", VA = "0x6D4840", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x6D48C0", Offset = "0x6D48C0", VA = "0x6D48C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x6D4AE8", Offset = "0x6D4AE8", VA = "0x6D4AE8")]
	private void ShowNewItemInCategory()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x6D4B1C", Offset = "0x6D4B1C", VA = "0x6D4B1C")]
	private void HideNewItemInCategory()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x6D4B50", Offset = "0x6D4B50", VA = "0x6D4B50", Slot = "6")]
	public override void Select()
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x6D4E68", Offset = "0x6D4E68", VA = "0x6D4E68", Slot = "7")]
	public override void SelectedAsParent()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x6D4A20", Offset = "0x6D4A20", VA = "0x6D4A20")]
	private bool IsAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x6D4EDC", Offset = "0x6D4EDC", VA = "0x6D4EDC")]
	public CollectionGameCategoryItem()
	{
	}
}
[Token(Token = "0x20000B8")]
public class CollectionItemMenuItem : SelectableItem
{
	[Token(Token = "0x20003BF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8B74", Offset = "0x4A8B74")]
	private sealed class <ShowItemPurchased>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CollectionItemMenuItem <>4__this;

		[Token(Token = "0x1700017A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B8B")]
			[Address(RVA = "0x6D5FE8", Offset = "0x6D5FE8", VA = "0x6D5FE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B8D")]
			[Address(RVA = "0x6D6058", Offset = "0x6D6058", VA = "0x6D6058", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0x6D5DBC", Offset = "0x6D5DBC", VA = "0x6D5DBC")]
		[DebuggerHidden]
		public <ShowItemPurchased>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0x6D5DF0", Offset = "0x6D5DF0", VA = "0x6D5DF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0x6D5DF4", Offset = "0x6D5DF4", VA = "0x6D5DF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0x6D5FF0", Offset = "0x6D5FF0", VA = "0x6D5FF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public InventoryCatalogue.ItemID itemID;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject equippedObject;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject isNewObject;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private HierarchicalMenu menu;

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x6D4EE4", Offset = "0x6D4EE4", VA = "0x6D4EE4", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x6D51B8", Offset = "0x6D51B8", VA = "0x6D51B8", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x6D52E8", Offset = "0x6D52E8", VA = "0x6D52E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x6D530C", Offset = "0x6D530C", VA = "0x6D530C")]
	private void OnInspectorEquip()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x6D59BC", Offset = "0x6D59BC", VA = "0x6D59BC")]
	private void OnInspectorPurchase()
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x6D5A9C", Offset = "0x6D5A9C", VA = "0x6D5A9C")]
	private void OnInspectorCancel()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x6D5B3C", Offset = "0x6D5B3C", VA = "0x6D5B3C", Slot = "6")]
	public override void Select()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x6D59C0", Offset = "0x6D59C0", VA = "0x6D59C0")]
	private void BuyItem()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x6D50AC", Offset = "0x6D50AC", VA = "0x6D50AC")]
	private void UpdateEquipped()
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x6D5118", Offset = "0x6D5118", VA = "0x6D5118")]
	private void UpdateIsNew()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x6D5C7C", Offset = "0x6D5C7C", VA = "0x6D5C7C")]
	private void UpdateAvailable()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x6D5CEC", Offset = "0x6D5CEC", VA = "0x6D5CEC")]
	private void OnInventoryItemChanged(InventoryCatalogue.ItemID itemID)
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x6D5D00", Offset = "0x6D5D00", VA = "0x6D5D00")]
	private void OnItemPurchased(InventoryCatalogue.ItemID purchasedItemID)
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x6D5D48", Offset = "0x6D5D48", VA = "0x6D5D48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B0CB4", Offset = "0x4B0CB4")]
	private IEnumerator ShowItemPurchased()
	{
		return null;
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x6D5DE8", Offset = "0x6D5DE8", VA = "0x6D5DE8")]
	public CollectionItemMenuItem()
	{
	}
}
[Token(Token = "0x20000B9")]
public class CollectionSignals
{
	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Signal CollectionOpened;

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x6D6268", Offset = "0x6D6268", VA = "0x6D6268")]
	public CollectionSignals()
	{
	}
}
[Token(Token = "0x20000BA")]
public class CollectionSignalSender : MonoBehaviour
{
	[Token(Token = "0x6000650")]
	[Address(RVA = "0x6D6060", Offset = "0x6D6060", VA = "0x6D6060")]
	private void Start()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x6D622C", Offset = "0x6D622C", VA = "0x6D622C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x6D6260", Offset = "0x6D6260", VA = "0x6D6260")]
	public CollectionSignalSender()
	{
	}
}
[Token(Token = "0x20000BB")]
public class CreditsDisplay : SingleInstanceBehavior<CreditsDisplay>
{
	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator creditsAnimator;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UIButton currentHighlightButton;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UIButton closeButton;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Action onCancel;

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x6DCBAC", Offset = "0x6DCBAC", VA = "0x6DCBAC", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x6DCD58", Offset = "0x6DCD58", VA = "0x6DCD58")]
	public void CreditsShow()
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x6D3944", Offset = "0x6D3944", VA = "0x6D3944")]
	public void CreditsHide()
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x6D3870", Offset = "0x6D3870", VA = "0x6D3870")]
	public void Display(Action OnCreditsDisplayCancel)
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x6DCDF4", Offset = "0x6DCDF4", VA = "0x6DCDF4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x6DD010", Offset = "0x6DD010", VA = "0x6DD010")]
	private bool IsMinigameUIBackButtonEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x6DD030", Offset = "0x6DD030", VA = "0x6DD030", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x6DD1F0", Offset = "0x6DD1F0", VA = "0x6DD1F0")]
	public bool IsCreditsDisplaying()
	{
		return default(bool);
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x6DD1F8", Offset = "0x6DD1F8", VA = "0x6DD1F8")]
	public CreditsDisplay()
	{
	}
}
[Token(Token = "0x20000BC")]
public class ItemInspector : SingleInstanceBehavior<ItemInspector>
{
	[Token(Token = "0x4000520")]
	private const float appearTime = 0.3f;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Action onEquip;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Action onPurchase;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Action onCancel;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private UIButton currentHighlightButton;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UIButton closeButton;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float inspectStartTime;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float delayUntilInteractive;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Animator boardAnimator;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform inspectItemTransform;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LocalizedText boardLabelHeader;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private LocalizedText boardLabelDescription;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Text priceLabel;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject purchaseInformation;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject purchaseRoot;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject equipRoot;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform inspectItemPreviousParent;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private CollectionItemMenuItem inspectItem;

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x73CC80", Offset = "0x73CC80", VA = "0x73CC80")]
	private void Start()
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x73D008", Offset = "0x73D008", VA = "0x73D008", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x73D268", Offset = "0x73D268", VA = "0x73D268")]
	public void Inspect(CollectionItemMenuItem item, Action newOnEquip, Action newOnPurchase, Action newOnCancel)
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x73D970", Offset = "0x73D970", VA = "0x73D970")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x73DC40", Offset = "0x73DC40", VA = "0x73DC40")]
	private string GetStringIDForName()
	{
		return null;
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x73DCD0", Offset = "0x73DCD0", VA = "0x73DCD0")]
	private string GetStringIDForDescription()
	{
		return null;
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x73D5EC", Offset = "0x73D5EC", VA = "0x73D5EC")]
	private void RefreshUI()
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x73DD60", Offset = "0x73DD60", VA = "0x73DD60")]
	private bool IsMinigameUIBackButtonEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x73DC14", Offset = "0x73DC14", VA = "0x73DC14")]
	private float GetTimeSpentInInspector()
	{
		return default(float);
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x73DD80", Offset = "0x73DD80", VA = "0x73DD80")]
	private void OnInventoryItemChanged(InventoryCatalogue.ItemID itemID)
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x73DDE4", Offset = "0x73DDE4", VA = "0x73DDE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x73E1B4", Offset = "0x73E1B4", VA = "0x73E1B4")]
	private InputManager.CallbackResult OnAppButtonPressed()
	{
		return default(InputManager.CallbackResult);
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x73E204", Offset = "0x73E204", VA = "0x73E204")]
	public ItemInspector()
	{
	}
}
[Token(Token = "0x20000BD")]
public class BallMovement : MonoBehaviour
{
	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Signal<GameObject> StopSignal;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Signal<GameObject> InHoleSignal;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxVelocity;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool inHole;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool inMachine;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int cannonFiredCombo;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Projector aimLineProjector;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CollisionDetectionMode collisionDetection;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x4AAE6C", Offset = "0x4AAE6C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4AAE6C", Offset = "0x4AAE6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AAE6C", Offset = "0x4AAE6C")]
	[SerializeField]
	private AnimationCurve wallHitHardSoundGraph;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AAEF0", Offset = "0x4AAEF0")]
	[SerializeField]
	private AnimationCurve wallHitSoftSoundGraph;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x4AAF3C", Offset = "0x4AAF3C")]
	private Rigidbody ballBody;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 lastShotPosition;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool sleepEventDispatched;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] latestMagnitudes;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int magnitudeIndex;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float timeToAverageMagnitudesOver;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float startDrag;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool resetDragOnNextSleep;

	[Token(Token = "0x4000544")]
	private const float minAverageMagnitude = 0.0033f;

	[Token(Token = "0x4000545")]
	private const float defaultMagnitude = 10f;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string soundNameWallHitHard;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string soundNameWallHitSoft;

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x6B9238", Offset = "0x6B9238", VA = "0x6B9238")]
	private void Awake()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x6B9338", Offset = "0x6B9338", VA = "0x6B9338")]
	private void Start()
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x6B952C", Offset = "0x6B952C", VA = "0x6B952C")]
	private void ResetMagnitudeVector()
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x6B95BC", Offset = "0x6B95BC", VA = "0x6B95BC")]
	private void OnHit(GameObject ball)
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x6B9608", Offset = "0x6B9608", VA = "0x6B9608")]
	private void OnStartCourse(Course course)
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x6B97D8", Offset = "0x6B97D8", VA = "0x6B97D8")]
	private void Update()
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x6B9958", Offset = "0x6B9958", VA = "0x6B9958")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x6B9F40", Offset = "0x6B9F40", VA = "0x6B9F40")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x6BA244", Offset = "0x6BA244", VA = "0x6BA244")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x6B9688", Offset = "0x6B9688", VA = "0x6B9688")]
	private void SetKinematicAndMoveToPosition(Vector3 targetPosition)
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x6B9D9C", Offset = "0x6B9D9C", VA = "0x6B9D9C")]
	public void ResetBallToLastShot()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x6BA57C", Offset = "0x6BA57C", VA = "0x6BA57C")]
	public void SetDragUntilNextShot(float drag)
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x6BA5CC", Offset = "0x6BA5CC", VA = "0x6BA5CC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x6BA718", Offset = "0x6BA718", VA = "0x6BA718")]
	public BallMovement()
	{
	}
}
[Token(Token = "0x20000BE")]
public class BallVisuals : MonoBehaviour
{
	[Token(Token = "0x6000678")]
	[Address(RVA = "0x6BA89C", Offset = "0x6BA89C", VA = "0x6BA89C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x6BAA04", Offset = "0x6BAA04", VA = "0x6BAA04")]
	public BallVisuals()
	{
	}
}
[Token(Token = "0x20000BF")]
public class BlastDoorController : SingletonBehavior<BlastDoorController>
{
	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject LeftDoor;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject RightDoor;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 leftStart;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 rightStart;

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x6C4E84", Offset = "0x6C4E84", VA = "0x6C4E84")]
	private void Start()
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x6C4F18", Offset = "0x6C4F18", VA = "0x6C4F18")]
	public void Open([Optional] Action OnOpened)
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x6C5244", Offset = "0x6C5244", VA = "0x6C5244")]
	public void Close([Optional] Action OnClosed)
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x6C54BC", Offset = "0x6C54BC", VA = "0x6C54BC", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x6C550C", Offset = "0x6C550C", VA = "0x6C550C")]
	public BlastDoorController()
	{
	}
}
[Token(Token = "0x20000C0")]
public class CannonTesterBallPhysicsDisabler : MonoBehaviour
{
	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rbody;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Collider coll;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float counterSeconds;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float physicsTimeToLive;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AAF70", Offset = "0x4AAF70")]
	private Color <VerticalLineColor>k__BackingField;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AAF80", Offset = "0x4AAF80")]
	private Material <TestMaterial>k__BackingField;

	[Token(Token = "0x1700007B")]
	public Color VerticalLineColor
	{
		[Token(Token = "0x600067F")]
		[Address(RVA = "0x6CB894", Offset = "0x6CB894", VA = "0x6CB894")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0D18", Offset = "0x4B0D18")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000680")]
		[Address(RVA = "0x6CB8A0", Offset = "0x6CB8A0", VA = "0x6CB8A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0D28", Offset = "0x4B0D28")]
		set
		{
		}
	}

	[Token(Token = "0x1700007C")]
	public Material TestMaterial
	{
		[Token(Token = "0x6000681")]
		[Address(RVA = "0x6CB8AC", Offset = "0x6CB8AC", VA = "0x6CB8AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0D38", Offset = "0x4B0D38")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000682")]
		[Address(RVA = "0x6CB8B4", Offset = "0x6CB8B4", VA = "0x6CB8B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0D48", Offset = "0x4B0D48")]
		set
		{
		}
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x6CB8BC", Offset = "0x6CB8BC", VA = "0x6CB8BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x6CB95C", Offset = "0x6CB95C", VA = "0x6CB95C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x6CBA38", Offset = "0x6CBA38", VA = "0x6CBA38")]
	private void AddVerticalLine()
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x6CBCC0", Offset = "0x6CBCC0", VA = "0x6CBCC0")]
	private void Disable()
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x6CBD90", Offset = "0x6CBD90", VA = "0x6CBD90")]
	public CannonTesterBallPhysicsDisabler()
	{
	}
}
[Token(Token = "0x20000C1")]
public class ClubSwinging : MonoBehaviour
{
	[Token(Token = "0x6000688")]
	[Address(RVA = "0x6D2B34", Offset = "0x6D2B34", VA = "0x6D2B34")]
	public ClubSwinging()
	{
	}
}
[Token(Token = "0x20000C2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4A8314", Offset = "0x4A8314")]
public class ClubSwingingUnguided : MonoBehaviour
{
	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public GameObject putterHandle;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public GameObject putterBody;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public GameObject putterHead;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float hitDistance;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GolfatchuPutterHead putterHeadController;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GrabbableObject grabbableObject;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject ballObject;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Collider grabbableObjectCollider;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int courseLayer;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform topGrabbingPoint;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 putterHeadSavedPosition;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Hand previousHand;

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x6D2B3C", Offset = "0x6D2B3C", VA = "0x6D2B3C")]
	private void Start()
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x6D2F50", Offset = "0x6D2F50", VA = "0x6D2F50")]
	public void Update()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x6D2E14", Offset = "0x6D2E14", VA = "0x6D2E14")]
	private void OnSwitchHand(Hand hand)
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x6D34D8", Offset = "0x6D34D8", VA = "0x6D34D8")]
	private void OnStartCourse(Course course)
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x6D3538", Offset = "0x6D3538", VA = "0x6D3538")]
	private void OnBallInHole(GameObject ball)
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x6D35B8", Offset = "0x6D35B8", VA = "0x6D35B8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x6D3704", Offset = "0x6D3704", VA = "0x6D3704")]
	public ClubSwingingUnguided()
	{
	}
}
[Token(Token = "0x20000C3")]
public class Course : MonoBehaviour
{
	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform hole;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GolfFlagArea flagComponent;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform teePos;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LookZone[] lookZones;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<LookZone> currentZones;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GolfatchuPickupCluster cluster;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int par;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Collider[] allColliders;

	[Token(Token = "0x1700007D")]
	public Vector3 LookTarget
	{
		[Token(Token = "0x6000690")]
		[Address(RVA = "0x6D9E50", Offset = "0x6D9E50", VA = "0x6D9E50")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x6D9F5C", Offset = "0x6D9F5C", VA = "0x6D9F5C")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x6DA1D0", Offset = "0x6DA1D0", VA = "0x6DA1D0")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x6D9F60", Offset = "0x6D9F60", VA = "0x6D9F60")]
	private void VerifyComponents()
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x6DA1D4", Offset = "0x6DA1D4", VA = "0x6DA1D4")]
	public bool IsValid()
	{
		return default(bool);
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x6DA2A8", Offset = "0x6DA2A8", VA = "0x6DA2A8")]
	public void AddLookZoneToList(LookZone newZone)
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x6DA318", Offset = "0x6DA318", VA = "0x6DA318")]
	public void RemoveLookZoneFromList(LookZone oldZone)
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x6DA3C4", Offset = "0x6DA3C4", VA = "0x6DA3C4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x6DA4F8", Offset = "0x6DA4F8", VA = "0x6DA4F8")]
	public void SetState(bool active)
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x6DA714", Offset = "0x6DA714", VA = "0x6DA714")]
	public Course()
	{
	}
}
[Token(Token = "0x20000C4")]
public class CourseScore
{
	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int par;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int numShots;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int numPickUpSmall;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int numGeneratedTickets;

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x6DA724", Offset = "0x6DA724", VA = "0x6DA724")]
	public CourseScore(int par)
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x6DA758", Offset = "0x6DA758", VA = "0x6DA758")]
	public string GetParHeaderStringId()
	{
		return null;
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x6DA810", Offset = "0x6DA810", VA = "0x6DA810")]
	public int GetSmallPickupScore()
	{
		return default(int);
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x6DA820", Offset = "0x6DA820", VA = "0x6DA820")]
	public int GetParHeaderScore()
	{
		return default(int);
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x6DA84C", Offset = "0x6DA84C", VA = "0x6DA84C")]
	public int GetHoleInOneScore()
	{
		return default(int);
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x6DA860", Offset = "0x6DA860", VA = "0x6DA860")]
	public int GetTotalScore()
	{
		return default(int);
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x6DA8A4", Offset = "0x6DA8A4", VA = "0x6DA8A4")]
	public int GetSmallPickupCount()
	{
		return default(int);
	}
}
[Token(Token = "0x20000C5")]
public class CourseSet : SingletonBehavior<CourseSet>
{
	[Token(Token = "0x20003C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8B84", Offset = "0x4A8B84")]
	private sealed class <FinishCourse>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CourseSet <>4__this;

		[Token(Token = "0x1700017C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B91")]
			[Address(RVA = "0x6DC954", Offset = "0x6DC954", VA = "0x6DC954", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B93")]
			[Address(RVA = "0x6DC9C4", Offset = "0x6DC9C4", VA = "0x6DC9C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0x6DB7F0", Offset = "0x6DB7F0", VA = "0x6DB7F0")]
		[DebuggerHidden]
		public <FinishCourse>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0x6DC5A8", Offset = "0x6DC5A8", VA = "0x6DC5A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0x6DC5AC", Offset = "0x6DC5AC", VA = "0x6DC5AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0x6DC95C", Offset = "0x6DC95C", VA = "0x6DC95C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Signal<Course> StartCourseSignal;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Signal<Course> FinishedCourseSignal;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Signal FinishedLastCourseSignal;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Signal StartCourseSetSignal;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Signal<FinalScore> FinishedCourseSetSignal;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int id;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ballPrefab;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float moveInDelay;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float scaleInDelay;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float scaleFactor;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public List<Course> courses;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int currentCourseIndex;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool courseSetFinished;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject ballInstance;

	[Token(Token = "0x1700007E")]
	public bool CourseSetFinished
	{
		[Token(Token = "0x60006A1")]
		[Address(RVA = "0x6DA8AC", Offset = "0x6DA8AC", VA = "0x6DA8AC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700007F")]
	public Course currentCourse
	{
		[Token(Token = "0x60006A2")]
		[Address(RVA = "0x6DA8B4", Offset = "0x6DA8B4", VA = "0x6DA8B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000080")]
	public int currentCourseNumber
	{
		[Token(Token = "0x60006A3")]
		[Address(RVA = "0x6DA91C", Offset = "0x6DA91C", VA = "0x6DA91C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000081")]
	public Vector3 lookTarget
	{
		[Token(Token = "0x60006A4")]
		[Address(RVA = "0x6DA924", Offset = "0x6DA924", VA = "0x6DA924")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x6DAA68", Offset = "0x6DAA68", VA = "0x6DAA68", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x6DACF8", Offset = "0x6DACF8", VA = "0x6DACF8")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x6DB320", Offset = "0x6DB320", VA = "0x6DB320")]
	private void FinishedCourseSignal_Dispatched(Course arg1)
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x6DB3A0", Offset = "0x6DB3A0", VA = "0x6DB3A0")]
	private void FinishedCourseSetSignal_Dispatched(FinalScore score)
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x6DB430", Offset = "0x6DB430", VA = "0x6DB430")]
	private void StartCourseSetSignal_Dispatched()
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x6DB4A0", Offset = "0x6DB4A0", VA = "0x6DB4A0")]
	private void StartCourseSignal_Dispatched(Course arg1)
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x6DAF48", Offset = "0x6DAF48", VA = "0x6DAF48")]
	private void StartCourseSet()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x6DB520", Offset = "0x6DB520", VA = "0x6DB520")]
	private void Reset()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x6DAB44", Offset = "0x6DAB44", VA = "0x6DAB44")]
	private void FindCourses()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x6DB58C", Offset = "0x6DB58C", VA = "0x6DB58C")]
	public void addCourse(Course newCourse)
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x6DB66C", Offset = "0x6DB66C", VA = "0x6DB66C")]
	public void removeCourse(Course course)
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x6DB6DC", Offset = "0x6DB6DC", VA = "0x6DB6DC")]
	public bool IsLastCourseInSet()
	{
		return default(bool);
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x6DB750", Offset = "0x6DB750", VA = "0x6DB750")]
	public void OnRemoveScoreScreen()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x6DB77C", Offset = "0x6DB77C", VA = "0x6DB77C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B0D58", Offset = "0x4B0D58")]
	private IEnumerator FinishCourse()
	{
		return null;
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x6DB81C", Offset = "0x6DB81C", VA = "0x6DB81C")]
	private void ShowCourseSetScoreScreen()
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x6DBDC8", Offset = "0x6DBDC8", VA = "0x6DBDC8")]
	private void SetCourseStatuses()
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x6DBE98", Offset = "0x6DBE98", VA = "0x6DBE98", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x6DC0F4", Offset = "0x6DC0F4", VA = "0x6DC0F4")]
	public CourseSet()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x6DC31C", Offset = "0x6DC31C", VA = "0x6DC31C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0DBC", Offset = "0x4B0DBC")]
	private void <StartCourseSet>b__28_0()
	{
	}
}
[Serializable]
[Token(Token = "0x20000C6")]
public class CourseSetRecord
{
	[Serializable]
	[Token(Token = "0x20003C1")]
	public class RecentScore
	{
		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string time;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int score;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int coins;

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0x6DCBA4", Offset = "0x6DCBA4", VA = "0x6DCBA4")]
		public RecentScore()
		{
		}
	}

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] courseRecords;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int courseSetRecord;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int courseSetCoinsRecord;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int courseSetMinCourseRecord;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int courseSetParRecord;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<RecentScore> recentScores;

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x6DC9CC", Offset = "0x6DC9CC", VA = "0x6DC9CC")]
	public CourseSetRecord()
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x6DCA64", Offset = "0x6DCA64", VA = "0x6DCA64")]
	public void AddRecentScore(string time, int score, int coins)
	{
	}
}
[Token(Token = "0x20000C7")]
public class GolfatchuBallRedirector : MonoBehaviour
{
	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject targetPosition;

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x789878", Offset = "0x789878", VA = "0x789878")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x789A8C", Offset = "0x789A8C", VA = "0x789A8C")]
	public GolfatchuBallRedirector()
	{
	}
}
[Token(Token = "0x20000C8")]
public abstract class GolfatchuButton : MonoBehaviour
{
	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x789A94", Offset = "0x789A94", VA = "0x789A94", Slot = "4")]
	public virtual void OnClick()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x789A98", Offset = "0x789A98", VA = "0x789A98", Slot = "5")]
	public virtual void OnEnter()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x789A9C", Offset = "0x789A9C", VA = "0x789A9C", Slot = "6")]
	public virtual void OnExit()
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x789AA0", Offset = "0x789AA0", VA = "0x789AA0")]
	protected GolfatchuButton()
	{
	}
}
[Serializable]
[Token(Token = "0x20000C9")]
public class GolfatchuCourseSetUnlockRequirements
{
	[Token(Token = "0x20003C2")]
	public enum Mode
	{
		[Token(Token = "0x4001740")]
		PointsForSet,
		[Token(Token = "0x4001741")]
		Score,
		[Token(Token = "0x4001742")]
		Coins,
		[Token(Token = "0x4001743")]
		PointsPerHole
	}

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Mode mode;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int threshold;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int setId;

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x789AA8", Offset = "0x789AA8", VA = "0x789AA8")]
	public bool IsMet()
	{
		return default(bool);
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x789CF4", Offset = "0x789CF4", VA = "0x789CF4")]
	private bool PointsForSet(CourseSetRecord record)
	{
		return default(bool);
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x789D30", Offset = "0x789D30", VA = "0x789D30")]
	private bool Score(CourseSetRecord record)
	{
		return default(bool);
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x789D6C", Offset = "0x789D6C", VA = "0x789D6C")]
	private bool Coins(CourseSetRecord record)
	{
		return default(bool);
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x789DA8", Offset = "0x789DA8", VA = "0x789DA8")]
	private bool PointsPerHole(CourseSetRecord record)
	{
		return default(bool);
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x789DE4", Offset = "0x789DE4", VA = "0x789DE4")]
	public GolfatchuCourseSetUnlockRequirements()
	{
	}
}
[Token(Token = "0x20000CA")]
public class GolfatchuEquipmentRegistry : SingletonBehavior<GolfatchuEquipmentRegistry>
{
	[Serializable]
	[Token(Token = "0x20003C3")]
	public class ClubSpecification
	{
		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InventoryCatalogue.ItemID itemId;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject clubPrefab;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Mesh handleMesh;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Mesh bodyMesh;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Mesh headMesh;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material material;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string soundGroupPrefix;

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0x78A020", Offset = "0x78A020", VA = "0x78A020")]
		public ClubSpecification()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003C4")]
	public class BallSpecification
	{
		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InventoryCatalogue.ItemID itemId;

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh mesh;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material material;

		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string soundGroupPrefix;

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0x78A018", Offset = "0x78A018", VA = "0x78A018")]
		public BallSpecification()
		{
		}
	}

	[Token(Token = "0x20003C5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8B94", Offset = "0x4A8B94")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InventoryCatalogue.ItemID itemId;

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0x789DEC", Offset = "0x789DEC", VA = "0x789DEC")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0x789FA0", Offset = "0x789FA0", VA = "0x789FA0")]
		internal bool <GetClub>b__0(ClubSpecification c)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20003C6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8BA4", Offset = "0x4A8BA4")]
	private sealed class <>c__DisplayClass5_0
	{
		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InventoryCatalogue.ItemID itemId;

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0x789F48", Offset = "0x789F48", VA = "0x789F48")]
		public <>c__DisplayClass5_0()
		{
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0x789FDC", Offset = "0x789FDC", VA = "0x789FDC")]
		internal bool <GetBall>b__0(BallSpecification c)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ClubSpecification[] clubs;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BallSpecification[] balls;

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x78597C", Offset = "0x78597C", VA = "0x78597C")]
	public ClubSpecification GetClub(InventoryCatalogue.ItemID itemId)
	{
		return null;
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x789DF4", Offset = "0x789DF4", VA = "0x789DF4")]
	public BallSpecification GetBall(InventoryCatalogue.ItemID itemId)
	{
		return null;
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x789F50", Offset = "0x789F50", VA = "0x789F50")]
	public GolfatchuEquipmentRegistry()
	{
	}
}
[Token(Token = "0x20000CB")]
public class GolfatchuLevelLoader : SingletonBehavior<GolfatchuLevelLoader>
{
	[Token(Token = "0x20003C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8BB4", Offset = "0x4A8BB4")]
	private sealed class <LoadScene>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string sceneToLoad;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GolfatchuLevelLoader <>4__this;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AsyncOperation <load>5__2;

		[Token(Token = "0x1700017E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B9E")]
			[Address(RVA = "0x78A8A0", Offset = "0x78A8A0", VA = "0x78A8A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BA0")]
			[Address(RVA = "0x78A910", Offset = "0x78A910", VA = "0x78A910", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0x78A2EC", Offset = "0x78A2EC", VA = "0x78A2EC")]
		[DebuggerHidden]
		public <LoadScene>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0x78A784", Offset = "0x78A784", VA = "0x78A784", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0x78A788", Offset = "0x78A788", VA = "0x78A788", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0x78A8A8", Offset = "0x78A8A8", VA = "0x78A8A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8BC4", Offset = "0x4A8BC4")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GolfatchuLevelLoader <>4__this;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string sceneToLoad;

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0x78A3F0", Offset = "0x78A3F0", VA = "0x78A3F0")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0x78A620", Offset = "0x78A620", VA = "0x78A620")]
		internal void <OnMenuButtonClick>b__0()
		{
		}
	}

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AAFE0", Offset = "0x4AAFE0")]
	private string <CurrentScene>k__BackingField;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BlastDoorController blastDoors;

	[Token(Token = "0x4000586")]
	private const string menuSceneName = "GolfatchuMenu";

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PassAndPlay passAndPlay;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string sceneToLoad;

	[Token(Token = "0x17000082")]
	public string CurrentScene
	{
		[Token(Token = "0x60006CA")]
		[Address(RVA = "0x78A028", Offset = "0x78A028", VA = "0x78A028")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0DCC", Offset = "0x4B0DCC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006CB")]
		[Address(RVA = "0x78A030", Offset = "0x78A030", VA = "0x78A030")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0DDC", Offset = "0x4B0DDC")]
		private set
		{
		}
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x78A038", Offset = "0x78A038", VA = "0x78A038")]
	private void Start()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x78A254", Offset = "0x78A254", VA = "0x78A254")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B0DEC", Offset = "0x4B0DEC")]
	private IEnumerator LoadScene(string sceneToLoad)
	{
		return null;
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x78A318", Offset = "0x78A318", VA = "0x78A318")]
	private void OnMenuButtonClick(string sceneToLoad)
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x78A224", Offset = "0x78A224", VA = "0x78A224")]
	private void StartLoadingScene()
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x78A3F8", Offset = "0x78A3F8", VA = "0x78A3F8")]
	private void OnCourseSetEnd(FinalScore score)
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x78A488", Offset = "0x78A488", VA = "0x78A488", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x78A564", Offset = "0x78A564", VA = "0x78A564")]
	public GolfatchuLevelLoader()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x78A5B4", Offset = "0x78A5B4", VA = "0x78A5B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0E50", Offset = "0x4B0E50")]
	private void <OnCourseSetEnd>b__12_0()
	{
	}
}
[Token(Token = "0x20000CC")]
public class GolfatchuMenu : MonoBehaviour
{
	[Token(Token = "0x20003C9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8BD4", Offset = "0x4A8BD4")]
	private sealed class <ShowTutorialWithDelay>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GolfatchuMenu <>4__this;

		[Token(Token = "0x17000180")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BA6")]
			[Address(RVA = "0x78BBBC", Offset = "0x78BBBC", VA = "0x78BBBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000181")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BA8")]
			[Address(RVA = "0x78BC2C", Offset = "0x78BC2C", VA = "0x78BC2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0x78B240", Offset = "0x78B240", VA = "0x78B240")]
		[DebuggerHidden]
		public <ShowTutorialWithDelay>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0x78BB08", Offset = "0x78BB08", VA = "0x78BB08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0x78BB0C", Offset = "0x78BB0C", VA = "0x78BB0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0x78BBC4", Offset = "0x78BBC4", VA = "0x78BBC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003CA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8BE4", Offset = "0x4A8BE4")]
	private sealed class <>c
	{
		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__15_4;

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0x78BA84", Offset = "0x78BA84", VA = "0x78BA84")]
		public <>c()
		{
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0x78BA8C", Offset = "0x78BA8C", VA = "0x78BA8C")]
		internal void <AnimateIn>b__15_4()
		{
		}
	}

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Signal MenuReady;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject menuParent;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject groundParent;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private HierarchicalMenu hierarchicalMenu;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 groundInPosition;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 groundOutPosition;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Animator set1Anim;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Animator set2Anim;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Animator set3Anim;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject FirstPageScrollArrow;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float recenterTutDelay;

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x78A918", Offset = "0x78A918", VA = "0x78A918")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x78AAD8", Offset = "0x78AAD8", VA = "0x78AAD8")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x78B1CC", Offset = "0x78B1CC", VA = "0x78B1CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B0E60", Offset = "0x4B0E60")]
	private IEnumerator ShowTutorialWithDelay()
	{
		return null;
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x78B26C", Offset = "0x78B26C", VA = "0x78B26C")]
	private void OnMenuButtonClick(string levelToLoad)
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x78AC30", Offset = "0x78AC30", VA = "0x78AC30")]
	private void AnimateIn()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x78B3D4", Offset = "0x78B3D4", VA = "0x78B3D4")]
	private void AnimateOut()
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x78B67C", Offset = "0x78B67C", VA = "0x78B67C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x78B784", Offset = "0x78B784", VA = "0x78B784")]
	public GolfatchuMenu()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x78B834", Offset = "0x78B834", VA = "0x78B834")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0EC4", Offset = "0x4B0EC4")]
	private void <AnimateIn>b__15_0()
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x78B8F8", Offset = "0x78B8F8", VA = "0x78B8F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0ED4", Offset = "0x4B0ED4")]
	private void <AnimateIn>b__15_1()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x78B960", Offset = "0x78B960", VA = "0x78B960")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0EE4", Offset = "0x4B0EE4")]
	private void <AnimateIn>b__15_2()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x78B9C8", Offset = "0x78B9C8", VA = "0x78B9C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0EF4", Offset = "0x4B0EF4")]
	private void <AnimateIn>b__15_3()
	{
	}
}
[Token(Token = "0x20000CD")]
public class GolfatchuMenuButton : SelectableItem
{
	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Signal<string> Click;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isCheating;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GolfatchuCourseSetUnlockRequirements unlockRequirements;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int requiredScoreSetId;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int requiredScore;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool requiresItemToUnlock;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public InventoryCatalogue.ItemID requiredItem;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string sceneToLoad;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool clicked;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool unlocked;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject lockSignBig;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject lockSignSmall;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject lockText;

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x78BC34", Offset = "0x78BC34", VA = "0x78BC34")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x78BDF8", Offset = "0x78BDF8", VA = "0x78BDF8")]
	private void UpdateLockStatus()
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x78BEC4", Offset = "0x78BEC4", VA = "0x78BEC4")]
	private void SetLocked()
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x78BE4C", Offset = "0x78BE4C", VA = "0x78BE4C")]
	private void SetUnlocked()
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x78BF3C", Offset = "0x78BF3C", VA = "0x78BF3C", Slot = "6")]
	public override void Select()
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x78C014", Offset = "0x78C014", VA = "0x78C014")]
	private void OnInventoryItemChanged(InventoryCatalogue.ItemID itemID)
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x78C038", Offset = "0x78C038", VA = "0x78C038", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x78C10C", Offset = "0x78C10C", VA = "0x78C10C")]
	public GolfatchuMenuButton()
	{
	}
}
[Token(Token = "0x20000CE")]
public class GolfatchuPhysicsSetup : MonoBehaviour
{
	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float customContactOffset;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int customSolverIterationCount;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float customFixedTimeStep;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float defaultContactOffset;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int defaultSolverIterationCount;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float defaultFixedTimeStep;

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x78C1C8", Offset = "0x78C1C8", VA = "0x78C1C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x78C22C", Offset = "0x78C22C", VA = "0x78C22C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x78C268", Offset = "0x78C268", VA = "0x78C268")]
	public GolfatchuPhysicsSetup()
	{
	}
}
[Token(Token = "0x20000CF")]
public class GolfatchuPickup : MonoBehaviour
{
	[Token(Token = "0x20003CB")]
	public enum Type
	{
		[Token(Token = "0x400175E")]
		small = 50
	}

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Signal<GolfatchuPickup> PickUp;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Type type;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform particles;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform visualRoot;

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x78C28C", Offset = "0x78C28C", VA = "0x78C28C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x78C334", Offset = "0x78C334", VA = "0x78C334")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x78C4E8", Offset = "0x78C4E8", VA = "0x78C4E8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x78C564", Offset = "0x78C564", VA = "0x78C564")]
	public GolfatchuPickup()
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x78C614", Offset = "0x78C614", VA = "0x78C614")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0F04", Offset = "0x4B0F04")]
	private void <OnTriggerEnter>b__6_0()
	{
	}
}
[Token(Token = "0x20000D0")]
public class GolfatchuPickupCluster : MonoBehaviour
{
	[Token(Token = "0x20003CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8BF4", Offset = "0x4A8BF4")]
	private sealed class <Activate>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GolfatchuPickupCluster <>4__this;

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x17000182")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BAF")]
			[Address(RVA = "0x78CF88", Offset = "0x78CF88", VA = "0x78CF88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000183")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BB1")]
			[Address(RVA = "0x78CFF8", Offset = "0x78CFF8", VA = "0x78CFF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0x78C9EC", Offset = "0x78C9EC", VA = "0x78C9EC")]
		[DebuggerHidden]
		public <Activate>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0x78CA20", Offset = "0x78CA20", VA = "0x78CA20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0x78CA24", Offset = "0x78CA24", VA = "0x78CA24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0x78CF90", Offset = "0x78CF90", VA = "0x78CF90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject smallPickupPrefab;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject bigPickupPrefab;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<GolfatchuPickupSpawnPosition> spawnPositions;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Transform> allPickupsVisualRoots;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool active;

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x78C6BC", Offset = "0x78C6BC", VA = "0x78C6BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x78C7FC", Offset = "0x78C7FC", VA = "0x78C7FC")]
	public void SetStatus(bool active)
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x78C8BC", Offset = "0x78C8BC", VA = "0x78C8BC")]
	private void removePickups()
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x78C848", Offset = "0x78C848", VA = "0x78C848")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B0F14", Offset = "0x4B0F14")]
	private IEnumerator Activate()
	{
		return null;
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x78CA18", Offset = "0x78CA18", VA = "0x78CA18")]
	public GolfatchuPickupCluster()
	{
	}
}
[Token(Token = "0x20000D1")]
public class GolfatchuPickupSpawnPosition : MonoBehaviour
{
	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public GolfatchuPickup.Type type;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool adjustToFloor;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool adjustToFloorOnlyLayer19;

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x78D000", Offset = "0x78D000", VA = "0x78D000")]
	public GolfatchuPickupSpawnPosition()
	{
	}
}
[Token(Token = "0x20000D2")]
public class GolfatchuPutterHead : MonoBehaviour
{
	[Token(Token = "0x20003CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8C04", Offset = "0x4A8C04")]
	private sealed class <WaitAndSetCollider>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GolfatchuPutterHead <>4__this;

		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool value;

		[Token(Token = "0x17000184")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BB5")]
			[Address(RVA = "0x78EC60", Offset = "0x78EC60", VA = "0x78EC60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000185")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BB7")]
			[Address(RVA = "0x78ECD0", Offset = "0x78ECD0", VA = "0x78ECD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0x78D604", Offset = "0x78D604", VA = "0x78D604")]
		[DebuggerHidden]
		public <WaitAndSetCollider>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0x78EAE4", Offset = "0x78EAE4", VA = "0x78EAE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0x78EAE8", Offset = "0x78EAE8", VA = "0x78EAE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0x78EC68", Offset = "0x78EC68", VA = "0x78EC68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8C14", Offset = "0x4A8C14")]
	private sealed class <ResetColliderSize>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float interval;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GolfatchuPutterHead <>4__this;

		[Token(Token = "0x17000186")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BBB")]
			[Address(RVA = "0x78EA6C", Offset = "0x78EA6C", VA = "0x78EA6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000187")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BBD")]
			[Address(RVA = "0x78EADC", Offset = "0x78EADC", VA = "0x78EADC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0x78E000", Offset = "0x78E000", VA = "0x78E000")]
		[DebuggerHidden]
		public <ResetColliderSize>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0x78E930", Offset = "0x78E930", VA = "0x78E930", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0x78E934", Offset = "0x78E934", VA = "0x78E934", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0x78EA74", Offset = "0x78EA74", VA = "0x78EA74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x4AB000", Offset = "0x4AB000")]
	[SerializeField]
	private Texture[] projectorTextures;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Signal<GameObject> HitSignal;

	[Token(Token = "0x40005B5")]
	private const float forceMultiplier = 1.5f;

	[Token(Token = "0x40005B6")]
	private const float startForceMultiplier = 1.5f;

	[Token(Token = "0x40005B7")]
	private const float endForceMultiplier = 4f;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float forceFactor;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GrabbableObject grabbablePutter;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Collider putterCollider;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string soundNameHard;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string soundNameSoft;

	[Token(Token = "0x40005BD")]
	private const float minSwingVelocity = 0.01f;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int frameSkip;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float currentVelocity;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 currentDirection;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private BoxCollider col;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 colDefaultSize;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 calDefaultCenter;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject currentBall;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private BallMovement ballMovement;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private LineRenderer directionLine;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Projector ballProjector;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Material projectorMaterial;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AB04C", Offset = "0x4AB04C")]
	private bool <IsShotLocked>k__BackingField;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AB05C", Offset = "0x4AB05C")]
	private bool <CanShoot>k__BackingField;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 prevPos;

	[Token(Token = "0x17000083")]
	public bool IsShotLocked
	{
		[Token(Token = "0x60006F9")]
		[Address(RVA = "0x78D018", Offset = "0x78D018", VA = "0x78D018")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0F78", Offset = "0x4B0F78")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006FA")]
		[Address(RVA = "0x78D020", Offset = "0x78D020", VA = "0x78D020")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0F88", Offset = "0x4B0F88")]
		set
		{
		}
	}

	[Token(Token = "0x17000084")]
	public bool CanShoot
	{
		[Token(Token = "0x60006FB")]
		[Address(RVA = "0x78D02C", Offset = "0x78D02C", VA = "0x78D02C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0F98", Offset = "0x4B0F98")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006FC")]
		[Address(RVA = "0x78D034", Offset = "0x78D034", VA = "0x78D034")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B0FA8", Offset = "0x4B0FA8")]
		set
		{
		}
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x78D040", Offset = "0x78D040", VA = "0x78D040")]
	private void Start()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x78D540", Offset = "0x78D540", VA = "0x78D540")]
	public void SetPutterCollider(float delay, bool value)
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x785EE8", Offset = "0x785EE8", VA = "0x785EE8")]
	public void SetGuideLine(bool value)
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x78D548", Offset = "0x78D548", VA = "0x78D548")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B0FB8", Offset = "0x4B0FB8")]
	private IEnumerator WaitAndSetCollider(float delay, bool value)
	{
		return null;
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x78D630", Offset = "0x78D630", VA = "0x78D630")]
	private void OnBallStop(GameObject ball)
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x78D680", Offset = "0x78D680", VA = "0x78D680")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x78DF2C", Offset = "0x78DF2C", VA = "0x78DF2C")]
	private float RemapColliderSize(float remapVelocity, float minVelocity = 50f, float maxVelocity = 300f, float maxMultiplier = 5f, float minMultiplier = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x78DCBC", Offset = "0x78DCBC", VA = "0x78DCBC")]
	private Vector3 MoveColliderOppositeToBall()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x78DF68", Offset = "0x78DF68", VA = "0x78DF68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B101C", Offset = "0x4B101C")]
	private IEnumerator ResetColliderSize(float interval)
	{
		return null;
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x78E02C", Offset = "0x78E02C", VA = "0x78E02C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x78E2AC", Offset = "0x78E2AC", VA = "0x78E2AC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x78E720", Offset = "0x78E720", VA = "0x78E720")]
	private void PlayHitSound(float hitSpeed)
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x78E7E4", Offset = "0x78E7E4", VA = "0x78E7E4")]
	public GolfatchuPutterHead()
	{
	}
}
[Token(Token = "0x20000D3")]
public class GolfatchuScoreTracker : SingletonBehavior<GolfatchuScoreTracker>
{
	[Serializable]
	[Token(Token = "0x20003CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8C24", Offset = "0x4A8C24")]
	private sealed class <>c
	{
		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<CourseScore, int> <>9__18_0;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<CourseScore, int> <>9__18_1;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<CourseScore, int> <>9__18_2;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Func<CourseScore, int> <>9__18_3;

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0x78FF90", Offset = "0x78FF90", VA = "0x78FF90")]
		public <>c()
		{
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0x78FF98", Offset = "0x78FF98", VA = "0x78FF98")]
		internal int <UpdateCourseSetRecord>b__18_0(CourseScore s)
		{
			return default(int);
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0x78FFC8", Offset = "0x78FFC8", VA = "0x78FFC8")]
		internal int <UpdateCourseSetRecord>b__18_1(CourseScore s)
		{
			return default(int);
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0x78FFF8", Offset = "0x78FFF8", VA = "0x78FFF8")]
		internal int <UpdateCourseSetRecord>b__18_2(CourseScore s)
		{
			return default(int);
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0x790028", Offset = "0x790028", VA = "0x790028")]
		internal int <UpdateCourseSetRecord>b__18_3(CourseScore s)
		{
			return default(int);
		}
	}

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ticketPickupParticleEffectInScene;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timeSinceLastTicketSpawnInSeconds;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timeSinceLastHit;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int coinsSinceLastTicket;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AB06C", Offset = "0x4AB06C")]
	private CourseSetRecord <CourseSetRecord>k__BackingField;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AB07C", Offset = "0x4AB07C")]
	private List<CourseScore> <AllCourseScores>k__BackingField;

	[Token(Token = "0x17000085")]
	public CourseSetRecord CourseSetRecord
	{
		[Token(Token = "0x600070B")]
		[Address(RVA = "0x78ECD8", Offset = "0x78ECD8", VA = "0x78ECD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1080", Offset = "0x4B1080")]
		get
		{
			return null;
		}
		[Token(Token = "0x600070C")]
		[Address(RVA = "0x78ECE0", Offset = "0x78ECE0", VA = "0x78ECE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1090", Offset = "0x4B1090")]
		private set
		{
		}
	}

	[Token(Token = "0x17000086")]
	public List<CourseScore> AllCourseScores
	{
		[Token(Token = "0x600070D")]
		[Address(RVA = "0x78ECE8", Offset = "0x78ECE8", VA = "0x78ECE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B10A0", Offset = "0x4B10A0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600070E")]
		[Address(RVA = "0x78ECF0", Offset = "0x78ECF0", VA = "0x78ECF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B10B0", Offset = "0x4B10B0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000087")]
	public CourseScore CurrentCourseScore
	{
		[Token(Token = "0x600070F")]
		[Address(RVA = "0x78ECF8", Offset = "0x78ECF8", VA = "0x78ECF8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x78ED88", Offset = "0x78ED88", VA = "0x78ED88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x78F030", Offset = "0x78F030", VA = "0x78F030")]
	private void OnStartCourseSet()
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x78F0BC", Offset = "0x78F0BC", VA = "0x78F0BC")]
	private void OnStartCourse(Course course)
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x78F15C", Offset = "0x78F15C", VA = "0x78F15C")]
	private void OnFinishedCourse(Course course)
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x78F318", Offset = "0x78F318", VA = "0x78F318")]
	public void UpdateCourseSetRecord()
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x78F740", Offset = "0x78F740", VA = "0x78F740")]
	private void OnBallHit(GameObject ball)
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x78F7B0", Offset = "0x78F7B0", VA = "0x78F7B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x78F7FC", Offset = "0x78F7FC", VA = "0x78F7FC")]
	private void OnPickup(GolfatchuPickup pickup)
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x78F2B4", Offset = "0x78F2B4", VA = "0x78F2B4")]
	public void SaveCourseSetRecord()
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0x78FAE4", Offset = "0x78FAE4", VA = "0x78FAE4")]
	private void SaveCourseSetRecord(int courseSetId)
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x789C58", Offset = "0x789C58", VA = "0x789C58")]
	public CourseSetRecord LoadCourseSetRecord(int courseSetId)
	{
		return null;
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x78FB94", Offset = "0x78FB94", VA = "0x78FB94")]
	public void DeleteCourseSetRecord(int courseSetId)
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x78FB2C", Offset = "0x78FB2C", VA = "0x78FB2C")]
	private string GetRecordPlayerPrefsKey(int courseSetId)
	{
		return null;
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x78FBD4", Offset = "0x78FBD4", VA = "0x78FBD4", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x78FEA8", Offset = "0x78FEA8", VA = "0x78FEA8")]
	public GolfatchuScoreTracker()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x78FEF8", Offset = "0x78FEF8", VA = "0x78FEF8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B10C0", Offset = "0x4B10C0")]
	private void <OnPickup>b__21_0()
	{
	}
}
[Token(Token = "0x20000D4")]
public enum GolfatchuVelocityBoosterMode
{
	[Token(Token = "0x40005D3")]
	Always,
	[Token(Token = "0x40005D4")]
	PositiveYVelocityOnly,
	[Token(Token = "0x40005D5")]
	NegativeYVelocityOnly
}
[Token(Token = "0x20000D5")]
public class GolfatchuVelocityBooster : MonoBehaviour
{
	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GolfatchuVelocityBoosterMode boosterMode;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float lowVelocitySqrTreshold;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float accelerationBoostForce;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem particleEffect;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float particleEffectYOffset;

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x790070", Offset = "0x790070", VA = "0x790070")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x790418", Offset = "0x790418", VA = "0x790418")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x790518", Offset = "0x790518", VA = "0x790518")]
	public GolfatchuVelocityBooster()
	{
	}
}
[Token(Token = "0x20000D6")]
public class GolfBallCatcher : MonoBehaviour
{
	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float velocityMultiplier;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float velocityUpperTreshold;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool OnlyApplyForPositiveYVelocity;

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x729914", Offset = "0x729914", VA = "0x729914")]
	public void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x729AE4", Offset = "0x729AE4", VA = "0x729AE4")]
	public GolfBallCatcher()
	{
	}
}
[Token(Token = "0x20000D7")]
public class GolfBridgeMovement : MonoBehaviour
{
	[Token(Token = "0x20003D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8C34", Offset = "0x4A8C34")]
	private sealed class <OnBallStopCoroutine>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GolfBridgeMovement <>4__this;

		[Token(Token = "0x17000188")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BC7")]
			[Address(RVA = "0x72A730", Offset = "0x72A730", VA = "0x72A730", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000189")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BC9")]
			[Address(RVA = "0x72A7A0", Offset = "0x72A7A0", VA = "0x72A7A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0x72A0C0", Offset = "0x72A0C0", VA = "0x72A0C0")]
		[DebuggerHidden]
		public <OnBallStopCoroutine>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0x72A69C", Offset = "0x72A69C", VA = "0x72A69C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0x72A6A0", Offset = "0x72A6A0", VA = "0x72A6A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0x72A738", Offset = "0x72A738", VA = "0x72A738", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject bridgePivotOne;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject bridgePivotTwo;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool ballOnBridge;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool bridgeMovementHalted;

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x729AEC", Offset = "0x729AEC", VA = "0x729AEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x729E94", Offset = "0x729E94", VA = "0x729E94")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x729F5C", Offset = "0x729F5C", VA = "0x729F5C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x72A020", Offset = "0x72A020", VA = "0x72A020")]
	private void OnBallStop(GameObject ball)
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x72A04C", Offset = "0x72A04C", VA = "0x72A04C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B10D0", Offset = "0x4B10D0")]
	private IEnumerator OnBallStopCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x729BF4", Offset = "0x729BF4", VA = "0x729BF4")]
	private void RaiseBridge()
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x72A2B4", Offset = "0x72A2B4", VA = "0x72A2B4")]
	private void LowerBridge()
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x72A0EC", Offset = "0x72A0EC", VA = "0x72A0EC")]
	private LTDescr RotateBridgePivot(GameObject pivot, float targetZRotation)
	{
		return null;
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0x72A54C", Offset = "0x72A54C", VA = "0x72A54C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0x72A61C", Offset = "0x72A61C", VA = "0x72A61C")]
	private void CancelAllTweens()
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0x72A694", Offset = "0x72A694", VA = "0x72A694")]
	public GolfBridgeMovement()
	{
	}
}
[Token(Token = "0x20000D8")]
public class GolfCannon : MonoBehaviour
{
	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Collider VacuumArea;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform CannonBody;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform CannonBase;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform Tube;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ParticleSystem cannonEffects;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4AB0DC", Offset = "0x4AB0DC")]
	private int rotationDegrees;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float rotationTime;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float shootBallForce;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private bool IsMultiTriggerCannon;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float MultiTriggerRotationY;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private bool hasComboAngle;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float comboAngle;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool forceTestCombo;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float yRotationOnStart;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float yRotationPlus;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float yRotationNegative;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 tubeLocalStartingPos;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private LTDescr rotationDescriptor;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject ball;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Rigidbody ballBody;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private BallMovement ballMov;

	[Token(Token = "0x17000088")]
	private bool ShouldRotate
	{
		[Token(Token = "0x6000730")]
		[Address(RVA = "0x72A7A8", Offset = "0x72A7A8", VA = "0x72A7A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x72A7B8", Offset = "0x72A7B8", VA = "0x72A7B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x72A850", Offset = "0x72A850", VA = "0x72A850")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x72AD2C", Offset = "0x72AD2C", VA = "0x72AD2C")]
	private void LoadBallAndAnimate()
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x72B59C", Offset = "0x72B59C", VA = "0x72B59C")]
	private void LoadBallAndAnimateMultiTrigger()
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x72BA64", Offset = "0x72BA64", VA = "0x72BA64")]
	private void MoveTubeBack()
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x72AAD0", Offset = "0x72AAD0", VA = "0x72AAD0")]
	private void StartRotation()
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x72BFBC", Offset = "0x72BFBC", VA = "0x72BFBC")]
	private void ResumeRotation()
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x72B4E0", Offset = "0x72B4E0", VA = "0x72B4E0")]
	private void PauseRotation()
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x72C0D8", Offset = "0x72C0D8", VA = "0x72C0D8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x72BC38", Offset = "0x72BC38", VA = "0x72BC38")]
	private void ShootBall()
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x72C4D4", Offset = "0x72C4D4", VA = "0x72C4D4")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x72C790", Offset = "0x72C790", VA = "0x72C790")]
	private void DrawTrajectory(Vector3 launchPosition, Vector3 launchVelocity)
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x72C97C", Offset = "0x72C97C", VA = "0x72C97C")]
	public GolfCannon()
	{
	}
}
[Token(Token = "0x20000D9")]
public class GolfCannonMultiTriggerTester : MonoBehaviour
{
	[Token(Token = "0x600073E")]
	[Address(RVA = "0x72C998", Offset = "0x72C998", VA = "0x72C998")]
	public GolfCannonMultiTriggerTester()
	{
	}
}
[Token(Token = "0x20000DA")]
public class GolfCourseScoreScreen : MonoBehaviour
{
	[Token(Token = "0x20003D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8C44", Offset = "0x4A8C44")]
	private sealed class <DelayedLookAtCamera>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GolfCourseScoreScreen <>4__this;

		[Token(Token = "0x1700018A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BCD")]
			[Address(RVA = "0x784518", Offset = "0x784518", VA = "0x784518", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BCF")]
			[Address(RVA = "0x784588", Offset = "0x784588", VA = "0x784588", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0x78447C", Offset = "0x78447C", VA = "0x78447C")]
		[DebuggerHidden]
		public <DelayedLookAtCamera>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0x7844A8", Offset = "0x7844A8", VA = "0x7844A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0x7844AC", Offset = "0x7844AC", VA = "0x7844AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0x784520", Offset = "0x784520", VA = "0x784520", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Signal remove;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Signal show;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float distanceFactor;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float unremovableTime;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator boardAnim;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected InputManager input;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected float showTime;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool removeButtonClicked;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool scoreAnimationDone;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocalizedText headerText;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected GameObject clickToContinueObject;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Text strokesCount;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected LocalizedText parText;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected Text parScore;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Text ticketCount;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Text smallPickupScore;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Text smallPickupCount;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected Text totalScore;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Text recordScore;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected Transform confirmQuitPosition;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected int parScoreTarget;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	protected int smallPickupScoreTarget;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected int totalScoreTarget;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	protected int recordScoreTarget;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GolfatchuScoreTracker scoreTracker;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<LTDescr> scoreAnimations;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool isShowing;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector3 startPosition;

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x72C9A0", Offset = "0x72C9A0", VA = "0x72C9A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x72CD44", Offset = "0x72CD44", VA = "0x72CD44")]
	public void Update()
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x72D024", Offset = "0x72D024", VA = "0x72D024")]
	private void RemoveScoreScreen()
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x72D130", Offset = "0x72D130", VA = "0x72D130")]
	private void OnBallInHole(GameObject hole)
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x72CCD0", Offset = "0x72CCD0", VA = "0x72CCD0")]
	private void MoveOutOfView()
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x72D9AC", Offset = "0x72D9AC", VA = "0x72D9AC")]
	private void OnHandednessUpdated()
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x72D9B0", Offset = "0x72D9B0", VA = "0x72D9B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B1134", Offset = "0x4B1134")]
	private IEnumerator DelayedLookAtCamera()
	{
		return null;
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x72D134", Offset = "0x72D134", VA = "0x72D134")]
	protected void Show()
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x72DD78", Offset = "0x72DD78", VA = "0x72DD78")]
	private void MoveAndTurnTowardsCamera()
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x72DB44", Offset = "0x72DB44", VA = "0x72DB44")]
	private LTDescr createValueAnimation(Action<float> onUpdate, Action onComplete, float from, float to, float time, float delay, LeanTweenType tweenType)
	{
		return null;
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x72DA24", Offset = "0x72DA24", VA = "0x72DA24")]
	private void updateParScoreTarget(float newValue)
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x72DA84", Offset = "0x72DA84", VA = "0x72DA84")]
	private void updateSmallPickupScoreTarget(float newValue)
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x72DAE4", Offset = "0x72DAE4", VA = "0x72DAE4")]
	private void updateTotalScoreTarget(float newValue)
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x72E19C", Offset = "0x72E19C", VA = "0x72E19C")]
	private void setParScoreTarget()
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x72E1E8", Offset = "0x72E1E8", VA = "0x72E1E8")]
	private void setSmallPickupScoreTarget()
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0x72E234", Offset = "0x72E234", VA = "0x72E234")]
	private void setTotalScoreTarget()
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0x72E338", Offset = "0x72E338", VA = "0x72E338")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0x72E400", Offset = "0x72E400", VA = "0x72E400")]
	public GolfCourseScoreScreen()
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x72E4F8", Offset = "0x72E4F8", VA = "0x72E4F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1198", Offset = "0x4B1198")]
	private void <RemoveScoreScreen>b__30_0()
	{
	}
}
[Token(Token = "0x20000DB")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4A8378", Offset = "0x4A8378")]
public class GolfFlagArea : MonoBehaviour
{
	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform flagObject;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool active;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 flagStartingPosition;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float maxRaiseFlag;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Collider ownCollider;

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x784590", Offset = "0x784590", VA = "0x784590")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x78464C", Offset = "0x78464C", VA = "0x78464C")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x784594", Offset = "0x784594", VA = "0x784594")]
	private void VerifyComponents()
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x784650", Offset = "0x784650", VA = "0x784650")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x784710", Offset = "0x784710", VA = "0x784710")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0x784974", Offset = "0x784974", VA = "0x784974")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x784A7C", Offset = "0x784A7C", VA = "0x784A7C")]
	public GolfFlagArea()
	{
	}
}
[Token(Token = "0x20000DC")]
public class GolfPiston : MonoBehaviour
{
	[Token(Token = "0x20003D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8C54", Offset = "0x4A8C54")]
	private sealed class <StartAnimation>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GolfPiston <>4__this;

		[Token(Token = "0x1700018C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BD3")]
			[Address(RVA = "0x78544C", Offset = "0x78544C", VA = "0x78544C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BD5")]
			[Address(RVA = "0x7854BC", Offset = "0x7854BC", VA = "0x7854BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0x784F08", Offset = "0x784F08", VA = "0x784F08")]
		[DebuggerHidden]
		public <StartAnimation>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0x78530C", Offset = "0x78530C", VA = "0x78530C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0x785310", Offset = "0x785310", VA = "0x785310", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0x785454", Offset = "0x785454", VA = "0x785454", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Collider> pistonColliders;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Collider triggerVolume;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float startDelay;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float cycleTiming;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Animation animComponent;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool ballInVicinity;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool startAnimation;

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x784A8C", Offset = "0x784A8C", VA = "0x784A8C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x784E24", Offset = "0x784E24", VA = "0x784E24")]
	private void Reset()
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x784E28", Offset = "0x784E28", VA = "0x784E28")]
	private void OnStartCourseSet()
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x784E94", Offset = "0x784E94", VA = "0x784E94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B11A8", Offset = "0x4B11A8")]
	public IEnumerator StartAnimation()
	{
		return null;
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x784F34", Offset = "0x784F34", VA = "0x784F34")]
	private void Update()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x785054", Offset = "0x785054", VA = "0x785054")]
	private void SetPistonStatuses()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x785128", Offset = "0x785128", VA = "0x785128")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x7851BC", Offset = "0x7851BC", VA = "0x7851BC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x784B9C", Offset = "0x784B9C", VA = "0x784B9C")]
	private void VerifyComponents()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x78524C", Offset = "0x78524C", VA = "0x78524C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x785304", Offset = "0x785304", VA = "0x785304")]
	public GolfPiston()
	{
	}
}
[Token(Token = "0x20000DD")]
public class GolfPlayer : MonoBehaviour
{
	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform putterTrans;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform golfPutterTrans;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GolfatchuPutterHead putterHead;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Collider putterHandleCollider;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Inventory inventory;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GolfatchuEquipmentRegistry equipmentRegistry;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 startGolfPutterTransform;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 moveTarget;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool centerAndRotatePlayer;

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x7854C4", Offset = "0x7854C4", VA = "0x7854C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x785860", Offset = "0x785860", VA = "0x785860")]
	private void SetClubVisuals()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x785AD0", Offset = "0x785AD0", VA = "0x785AD0")]
	private void EnablePutting()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x785930", Offset = "0x785930", VA = "0x785930")]
	private void DisablePutting()
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x785B1C", Offset = "0x785B1C", VA = "0x785B1C")]
	private void OnFinishedLastCourse()
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x785D60", Offset = "0x785D60", VA = "0x785D60")]
	private void OnStartCourse(Course course)
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x7862C4", Offset = "0x7862C4", VA = "0x7862C4")]
	private void OnBallStop(GameObject ball)
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x785BD0", Offset = "0x785BD0", VA = "0x785BD0")]
	private void FadeAndMove(Vector3 target, bool centerAndRotatePlayer = false)
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x786438", Offset = "0x786438", VA = "0x786438")]
	private void OnFadeOutDone()
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x786B94", Offset = "0x786B94", VA = "0x786B94")]
	private void OnMoveDone()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x786DC4", Offset = "0x786DC4", VA = "0x786DC4")]
	private void OnShowScoreScreen()
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x786CE0", Offset = "0x786CE0", VA = "0x786CE0")]
	private void ToggleMesh(bool value)
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x786DEC", Offset = "0x786DEC", VA = "0x786DEC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x7870B8", Offset = "0x7870B8", VA = "0x7870B8")]
	public GolfPlayer()
	{
	}
}
[Token(Token = "0x20000DE")]
public class GolfSecondTutorial : MonoBehaviour
{
	[Token(Token = "0x20003D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8C64", Offset = "0x4A8C64")]
	private sealed class <DelayedLookAtCamera>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GolfSecondTutorial <>4__this;

		[Token(Token = "0x1700018E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BD9")]
			[Address(RVA = "0x7879C8", Offset = "0x7879C8", VA = "0x7879C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BDB")]
			[Address(RVA = "0x787A38", Offset = "0x787A38", VA = "0x787A38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0x787380", Offset = "0x787380", VA = "0x787380")]
		[DebuggerHidden]
		public <DelayedLookAtCamera>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0x787948", Offset = "0x787948", VA = "0x787948", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0x78794C", Offset = "0x78794C", VA = "0x78794C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0x7879D0", Offset = "0x7879D0", VA = "0x7879D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject Graphics;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool MoveWithCamera;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float distanceFactor;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool hasActed;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float constantY;

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x7870C0", Offset = "0x7870C0", VA = "0x7870C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x787244", Offset = "0x787244", VA = "0x787244")]
	private void OnClubGrabbed(GameObject club)
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x787330", Offset = "0x787330", VA = "0x787330")]
	private void OnHit(GameObject ball)
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x7872BC", Offset = "0x7872BC", VA = "0x7872BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B120C", Offset = "0x4B120C")]
	public IEnumerator DelayedLookAtCamera()
	{
		return null;
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x7873AC", Offset = "0x7873AC", VA = "0x7873AC")]
	private void MoveAndTurnTowardsCamera()
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x7877FC", Offset = "0x7877FC", VA = "0x7877FC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x787938", Offset = "0x787938", VA = "0x787938")]
	public GolfSecondTutorial()
	{
	}
}
[Token(Token = "0x20000DF")]
public class GolfTutorialBoard : MonoBehaviour
{
	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float transitionDelay;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool tutorialBoardShowedOnce;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator showAnimator;

	[Token(Token = "0x4000630")]
	private const string showParameter = "ShowBoard";

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x787A40", Offset = "0x787A40", VA = "0x787A40")]
	private void Awake()
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x787B94", Offset = "0x787B94", VA = "0x787B94")]
	private void Start()
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x787C54", Offset = "0x787C54", VA = "0x787C54")]
	private void UpdateForHandedness()
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x787E8C", Offset = "0x787E8C", VA = "0x787E8C")]
	private Vector3 SwitchXPosSign(Vector3 offsetPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x787EC4", Offset = "0x787EC4", VA = "0x787EC4")]
	private void OnStartCourseSet()
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x787FE8", Offset = "0x787FE8", VA = "0x787FE8")]
	private void OnClubGrabbed(GameObject club)
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x78812C", Offset = "0x78812C", VA = "0x78812C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x788314", Offset = "0x788314", VA = "0x788314")]
	public GolfTutorialBoard()
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x788328", Offset = "0x788328", VA = "0x788328")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1270", Offset = "0x4B1270")]
	private void <OnStartCourseSet>b__8_0()
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x788390", Offset = "0x788390", VA = "0x788390")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1280", Offset = "0x4B1280")]
	private void <OnClubGrabbed>b__9_0()
	{
	}
}
[Token(Token = "0x20000E0")]
public class GolfVehicle : MonoBehaviour
{
	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LeanTweenPath pathToFollow;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float waitTime;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float speedModifier;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LeanTweenType tweenType;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LTDescr splineDescriptor;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool needsSyncControl;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool hasFinishedLoop;

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x7883F8", Offset = "0x7883F8", VA = "0x7883F8")]
	public void StartOnPath()
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x788868", Offset = "0x788868", VA = "0x788868")]
	public void FinishLoop()
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x78892C", Offset = "0x78892C", VA = "0x78892C")]
	public void RestartVehicle()
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x788AF0", Offset = "0x788AF0", VA = "0x788AF0")]
	public GolfVehicle()
	{
	}
}
[Token(Token = "0x20000E1")]
public class GolfVehiclePool : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003D4")]
	public class GolfVehicleSetting
	{
		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject vehiclePrefab;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material vehicleMaterial;

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LeanTweenPath vehiclePath;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LeanTweenType tweenType;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float waitTime;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4AFA58", Offset = "0x4AFA58")]
		public float speedModifier;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float scaleModifier;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool needsSyncControl;

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0x789860", Offset = "0x789860", VA = "0x789860")]
		public GolfVehicleSetting()
		{
		}
	}

	[Token(Token = "0x20003D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8C74", Offset = "0x4A8C74")]
	private sealed class <InstantiateAndControlVehicles>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GolfVehiclePool <>4__this;

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <origDistanceCount>5__2;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <origSublineCount>5__3;

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForSeconds <wait>5__4;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__5;

		[Token(Token = "0x17000190")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BE0")]
			[Address(RVA = "0x7897E8", Offset = "0x7897E8", VA = "0x7897E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000191")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BE2")]
			[Address(RVA = "0x789858", Offset = "0x789858", VA = "0x789858", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0x788CEC", Offset = "0x788CEC", VA = "0x788CEC")]
		[DebuggerHidden]
		public <InstantiateAndControlVehicles>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0x788E44", Offset = "0x788E44", VA = "0x788E44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0x788E48", Offset = "0x788E48", VA = "0x788E48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0x7897F0", Offset = "0x7897F0", VA = "0x7897F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GolfVehicleSetting[] vehicleSettings;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GolfVehicle[] instantiatedVehicles;

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x788B00", Offset = "0x788B00", VA = "0x788B00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x788C4C", Offset = "0x788C4C", VA = "0x788C4C")]
	private void OnStartCourseSet()
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x788C78", Offset = "0x788C78", VA = "0x788C78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B1290", Offset = "0x4B1290")]
	private IEnumerator InstantiateAndControlVehicles()
	{
		return null;
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x788D18", Offset = "0x788D18", VA = "0x788D18")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x788E3C", Offset = "0x788E3C", VA = "0x788E3C")]
	public GolfVehiclePool()
	{
	}
}
[Token(Token = "0x20000E2")]
public class LookZone : MonoBehaviour
{
	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform lookTarget;

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x74169C", Offset = "0x74169C", VA = "0x74169C")]
	private void Reset()
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x74176C", Offset = "0x74176C", VA = "0x74176C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x741848", Offset = "0x741848", VA = "0x741848")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x741924", Offset = "0x741924", VA = "0x741924")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x741B10", Offset = "0x741B10", VA = "0x741B10")]
	public LookZone()
	{
	}
}
[Token(Token = "0x20000E3")]
public class ToggleBallShadowTrigger : MonoBehaviour
{
	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool shadowEnableValueOnEnter;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool restoreShadowValueOnExit;

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x824894", Offset = "0x824894", VA = "0x824894")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x824974", Offset = "0x824974", VA = "0x824974")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x824A5C", Offset = "0x824A5C", VA = "0x824A5C")]
	public ToggleBallShadowTrigger()
	{
	}
}
[Token(Token = "0x20000E4")]
public class AnimationCurveReader
{
	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AnimationCurve curve;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float duration;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float startTime;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float currentTime;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float deltaTime;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isRunning;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float defaultValue;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float timeFactor;

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x6B69E8", Offset = "0x6B69E8", VA = "0x6B69E8")]
	public AnimationCurveReader(AnimationCurve curve, float defaultValue)
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x6B6ACC", Offset = "0x6B6ACC", VA = "0x6B6ACC")]
	public void Start(float startTime)
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x6B6ADC", Offset = "0x6B6ADC", VA = "0x6B6ADC")]
	public void SetTimeFactor(float timeFactor)
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x6B6AE4", Offset = "0x6B6AE4", VA = "0x6B6AE4")]
	public bool SetCurrentTime(float time)
	{
		return default(bool);
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x6B6B40", Offset = "0x6B6B40", VA = "0x6B6B40")]
	public bool IsRunning()
	{
		return default(bool);
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x6B6B48", Offset = "0x6B6B48", VA = "0x6B6B48")]
	public bool InRange()
	{
		return default(bool);
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x6B6B7C", Offset = "0x6B6B7C", VA = "0x6B6B7C")]
	public bool InRange(float time)
	{
		return default(bool);
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x6B6BAC", Offset = "0x6B6BAC", VA = "0x6B6BAC")]
	public float GetValue()
	{
		return default(float);
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x6B6C1C", Offset = "0x6B6C1C", VA = "0x6B6C1C")]
	public float GetValueAtTime(float time)
	{
		return default(float);
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x6B6B20", Offset = "0x6B6B20", VA = "0x6B6B20")]
	private bool GetDeltaTimeInRange(float deltaTime)
	{
		return default(bool);
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x6B6BB4", Offset = "0x6B6BB4", VA = "0x6B6BB4")]
	private float GetValueAtDeltaTime(float deltaTime)
	{
		return default(float);
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x6B6C64", Offset = "0x6B6C64", VA = "0x6B6C64")]
	public float GetCurrentTimeFactor()
	{
		return default(float);
	}
}
[Token(Token = "0x20000E5")]
public class ChefController : SingletonBehavior<ChefController>
{
	[Token(Token = "0x20003D6")]
	public enum TriggerParameters
	{
		[Token(Token = "0x400178D")]
		clap,
		[Token(Token = "0x400178E")]
		clap01,
		[Token(Token = "0x400178F")]
		clap02,
		[Token(Token = "0x4001790")]
		idle_var,
		[Token(Token = "0x4001791")]
		idle01,
		[Token(Token = "0x4001792")]
		idle02,
		[Token(Token = "0x4001793")]
		idle03,
		[Token(Token = "0x4001794")]
		picknose,
		[Token(Token = "0x4001795")]
		pickear,
		[Token(Token = "0x4001796")]
		hat,
		[Token(Token = "0x4001797")]
		scratch,
		[Token(Token = "0x4001798")]
		wipenose,
		[Token(Token = "0x4001799")]
		present,
		[Token(Token = "0x400179A")]
		cry,
		[Token(Token = "0x400179B")]
		upset,
		[Token(Token = "0x400179C")]
		angry,
		[Token(Token = "0x400179D")]
		shake,
		[Token(Token = "0x400179E")]
		faceplant,
		[Token(Token = "0x400179F")]
		glad,
		[Token(Token = "0x40017A0")]
		goodjob,
		[Token(Token = "0x40017A1")]
		outro
	}

	[Token(Token = "0x20003D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8C84", Offset = "0x4A8C84")]
	private sealed class <PlayRandomAnim>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChefController <>4__this;

		[Token(Token = "0x17000192")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BE6")]
			[Address(RVA = "0x6D03B4", Offset = "0x6D03B4", VA = "0x6D03B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000193")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BE8")]
			[Address(RVA = "0x6D0424", Offset = "0x6D0424", VA = "0x6D0424", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0x6CF9B8", Offset = "0x6CF9B8", VA = "0x6CF9B8")]
		[DebuggerHidden]
		public <PlayRandomAnim>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0x6D01D4", Offset = "0x6D01D4", VA = "0x6D01D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0x6D01D8", Offset = "0x6D01D8", VA = "0x6D01D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0x6D03BC", Offset = "0x6D03BC", VA = "0x6D03BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8C94", Offset = "0x4A8C94")]
	private sealed class <OutroAnim>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChefController <>4__this;

		[Token(Token = "0x17000194")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BEC")]
			[Address(RVA = "0x6D015C", Offset = "0x6D015C", VA = "0x6D015C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000195")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BEE")]
			[Address(RVA = "0x6D01CC", Offset = "0x6D01CC", VA = "0x6D01CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0x6CFBCC", Offset = "0x6CFBCC", VA = "0x6CFBCC")]
		[DebuggerHidden]
		public <OutroAnim>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0x6D0024", Offset = "0x6D0024", VA = "0x6D0024", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0x6D0028", Offset = "0x6D0028", VA = "0x6D0028", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0x6D0164", Offset = "0x6D0164", VA = "0x6D0164", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator chefAnimator;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeForOutroAnimAfterGameEnds;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minRandomAnimDelayTime;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxRandomAnimDelayTime;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationClip presentClip;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isOutroPlaying;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool isRandomAnimPlaying;

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x6CF350", Offset = "0x6CF350", VA = "0x6CF350", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x6CF434", Offset = "0x6CF434", VA = "0x6CF434")]
	private void OnCurrentTableEmpty()
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x6CF4B4", Offset = "0x6CF4B4", VA = "0x6CF4B4")]
	public void ObjectSpawnChefAnim()
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x6CF5C0", Offset = "0x6CF5C0", VA = "0x6CF5C0")]
	public void StartWhistleAnim()
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x6CF628", Offset = "0x6CF628", VA = "0x6CF628")]
	public void StopWhistleAnim()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x6CF438", Offset = "0x6CF438", VA = "0x6CF438")]
	public void StartRingerInstruction()
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x6CF690", Offset = "0x6CF690", VA = "0x6CF690")]
	public void StopRingerInstruction()
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x6CF70C", Offset = "0x6CF70C", VA = "0x6CF70C")]
	private void PresentAnim()
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x6CF7A4", Offset = "0x6CF7A4", VA = "0x6CF7A4")]
	public void OnPlayerHitSpecial_positive()
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x6CF874", Offset = "0x6CF874", VA = "0x6CF874")]
	public void OnPlayerHitSpecial_negative()
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x6CF944", Offset = "0x6CF944", VA = "0x6CF944")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B12F4", Offset = "0x4B12F4")]
	private IEnumerator PlayRandomAnim()
	{
		return null;
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x6CF9E4", Offset = "0x6CF9E4", VA = "0x6CF9E4")]
	public void StartPlayRandomAnim()
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x6CFA18", Offset = "0x6CFA18", VA = "0x6CFA18")]
	public void StopPlayRandomAnim()
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x6CFA20", Offset = "0x6CFA20", VA = "0x6CFA20")]
	public void GetTrappedAnim()
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0x6CFAF0", Offset = "0x6CFAF0", VA = "0x6CFAF0")]
	public void PlayOutroAnim()
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0x6CFB58", Offset = "0x6CFB58", VA = "0x6CFB58")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B1358", Offset = "0x4B1358")]
	private IEnumerator OutroAnim()
	{
		return null;
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0x6CFBF8", Offset = "0x6CFBF8", VA = "0x6CFBF8")]
	private float GetRandomDelayTime()
	{
		return default(float);
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x6CFC04", Offset = "0x6CFC04", VA = "0x6CFC04")]
	public void OnHitObjectPlayChefAnim(string onHitAnimName)
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0x6CFE50", Offset = "0x6CFE50", VA = "0x6CFE50")]
	public void ItemSpawnedAt(string itemName, int pointAnimIndex)
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0x6CFEF4", Offset = "0x6CFEF4", VA = "0x6CFEF4", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x6CFFC0", Offset = "0x6CFFC0", VA = "0x6CFFC0")]
	public ChefController()
	{
	}
}
[Token(Token = "0x20000E6")]
public class Crusher : MonoBehaviour
{
	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HammerGame hammerGame;

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x6DD978", Offset = "0x6DD978", VA = "0x6DD978")]
	private void Start()
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x6DD9EC", Offset = "0x6DD9EC", VA = "0x6DD9EC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x6DDA84", Offset = "0x6DDA84", VA = "0x6DDA84")]
	private void CheckHitObject(Collider other)
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x6DDBAC", Offset = "0x6DDBAC", VA = "0x6DDBAC")]
	public Crusher()
	{
	}
}
[Token(Token = "0x20000E7")]
public class DebugHammerTuning : MonoBehaviour
{
	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Slider accelerometerScale;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text scaleText;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text currentAccText;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HammerController6Dof hammer;

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x6DF4E8", Offset = "0x6DF4E8", VA = "0x6DF4E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x6DF540", Offset = "0x6DF540", VA = "0x6DF540")]
	private void Update()
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x6DF6D4", Offset = "0x6DF6D4", VA = "0x6DF6D4")]
	private InputManager.CallbackResult OnClickButtonPressed()
	{
		return default(InputManager.CallbackResult);
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x6DF944", Offset = "0x6DF944", VA = "0x6DF944")]
	public DebugHammerTuning()
	{
	}
}
[Token(Token = "0x20000E8")]
public class FlyingToTimer : MonoBehaviour, IHammerHitObjectActivation
{
	[Token(Token = "0x20003D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8CA4", Offset = "0x4A8CA4")]
	private sealed class <>c__DisplayClass5_0
	{
		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FlyingToTimer <>4__this;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 offset;

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0x71ED08", Offset = "0x71ED08", VA = "0x71ED08")]
		public <>c__DisplayClass5_0()
		{
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0x71ED1C", Offset = "0x71ED1C", VA = "0x71ED1C")]
		internal void <Flying>b__0()
		{
		}
	}

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delayBeforeFlying;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform targetPosition;

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x71E760", Offset = "0x71E760", VA = "0x71E760")]
	public void Awake()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x71E7BC", Offset = "0x71E7BC", VA = "0x71E7BC")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x71E8EC", Offset = "0x71E8EC", VA = "0x71E8EC")]
	public void Flying()
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x71ED10", Offset = "0x71ED10", VA = "0x71ED10", Slot = "4")]
	public void OnShow()
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x71ED14", Offset = "0x71ED14", VA = "0x71ED14")]
	public FlyingToTimer()
	{
	}
}
[Token(Token = "0x20000E9")]
public class HammerController6Dof : MonoBehaviour
{
	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4AB1D0", Offset = "0x4AB1D0")]
	[SerializeField]
	private Transform visual;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform hammerShadow;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected Transform hammerHeadCenterTransform;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LayerMask hammerShadowRaycastMask;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Renderer hammerShadowRenderer;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float hammerAccelerometerScale;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool isTrapped;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float timeWhenUntrapped;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MaterialPropertyBlock hammerShadowProp;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] accelerometerMags;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float currentForce;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float currentAcceleratorForce;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 lastPos;

	[Token(Token = "0x4000661")]
	private const float HAMMER_MULTIPLY_FORCE = 20f;

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x79375C", Offset = "0x79375C", VA = "0x79375C")]
	protected void Awake()
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x793814", Offset = "0x793814", VA = "0x793814")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x7938CC", Offset = "0x7938CC", VA = "0x7938CC")]
	public bool IsTrapped()
	{
		return default(bool);
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x7938D4", Offset = "0x7938D4", VA = "0x7938D4")]
	public Transform GetHammerHeadCenterTransform()
	{
		return null;
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x7938DC", Offset = "0x7938DC", VA = "0x7938DC")]
	public float GetCurrentAcceleratorForce()
	{
		return default(float);
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x7938E4", Offset = "0x7938E4", VA = "0x7938E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x793E00", Offset = "0x793E00", VA = "0x793E00")]
	private void Update()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x79412C", Offset = "0x79412C", VA = "0x79412C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x7939A0", Offset = "0x7939A0", VA = "0x7939A0")]
	private void UpdateVisualHammer()
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x7942B0", Offset = "0x7942B0", VA = "0x7942B0")]
	public float GetCurrentHammerForce()
	{
		return default(float);
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x7942BC", Offset = "0x7942BC", VA = "0x7942BC")]
	public bool CanHitBellAfterTrapped()
	{
		return default(bool);
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x7942F8", Offset = "0x7942F8", VA = "0x7942F8")]
	public void UntrapPlayer()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x794324", Offset = "0x794324", VA = "0x794324")]
	public void TrapPlayer(Vector3 trapAtPosition)
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x794330", Offset = "0x794330", VA = "0x794330")]
	public HammerController6Dof()
	{
	}
}
[Token(Token = "0x20000EA")]
public class HammerGame : SingleInstanceBehavior<HammerGame>
{
	[Token(Token = "0x20003DA")]
	private enum State
	{
		[Token(Token = "0x40017AB")]
		Setup,
		[Token(Token = "0x40017AC")]
		Instructions,
		[Token(Token = "0x40017AD")]
		GameOn,
		[Token(Token = "0x40017AE")]
		GameOver
	}

	[Token(Token = "0x20003DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8CB4", Offset = "0x4A8CB4")]
	private sealed class <OnBellHitCoroutine>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HammerGame <>4__this;

		[Token(Token = "0x17000196")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BF4")]
			[Address(RVA = "0x797C00", Offset = "0x797C00", VA = "0x797C00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000197")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BF6")]
			[Address(RVA = "0x797C70", Offset = "0x797C70", VA = "0x797C70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0x795298", Offset = "0x795298", VA = "0x795298")]
		[DebuggerHidden]
		public <OnBellHitCoroutine>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0x797744", Offset = "0x797744", VA = "0x797744", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0x797748", Offset = "0x797748", VA = "0x797748", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0x797C08", Offset = "0x797C08", VA = "0x797C08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float trapTime;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float trapVelocityToShakeOff;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int debrisLayer;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private int gameTime;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float bellDelayTime;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float bellPostDelayTime;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float wobbleVelocity;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float spawnedItemsHittableDelay;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve bouncingObject;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve slowdownCurve;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve hammerFreezeOnHit;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private RotatingTimer rotatingTimer;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private int score;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private int numTickets;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private HammerController6Dof hammerController;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GrabbableObject hammerGrabbable;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GrabbableObject grabbableObject;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private HammerWaveManager waveManager;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private HammerHitObjectRegistry hitObjectRegistry;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool isSpawningNewTable;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private bool isTimeSlowdownRunning;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private ParticleSystem hammerParticleSystem;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private ChefController chefController;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private AnimationCurveReader timeSlowdownReader;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Text scoreText;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private ParticleSystem gongShockWave;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int itemCount;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private State currentState;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private UIBoard instructions;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private CountdownTime gameTimer;

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x794390", Offset = "0x794390", VA = "0x794390", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x794478", Offset = "0x794478", VA = "0x794478")]
	private void Start()
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x794828", Offset = "0x794828", VA = "0x794828")]
	private void OnGamePaused()
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x7948A4", Offset = "0x7948A4", VA = "0x7948A4")]
	public Transform GetHammerHeadCenterTransform()
	{
		return null;
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x7948D0", Offset = "0x7948D0", VA = "0x7948D0")]
	public HammerController6Dof GetHammerController()
	{
		return null;
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x7947F0", Offset = "0x7947F0", VA = "0x7947F0")]
	private void ShowInstructions()
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x7948D8", Offset = "0x7948D8", VA = "0x7948D8")]
	private void StartGame()
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x794A5C", Offset = "0x794A5C", VA = "0x794A5C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x794D40", Offset = "0x794D40", VA = "0x794D40")]
	public float GetCurrentHammerForce()
	{
		return default(float);
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x794D70", Offset = "0x794D70", VA = "0x794D70")]
	public void OnHit(GameObject obj)
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x7951A8", Offset = "0x7951A8", VA = "0x7951A8")]
	public void OnBellHit()
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x795224", Offset = "0x795224", VA = "0x795224")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B13BC", Offset = "0x4B13BC")]
	private IEnumerator OnBellHitCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x7952C4", Offset = "0x7952C4", VA = "0x7952C4")]
	public void SlowDownTime()
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0x79482C", Offset = "0x79482C", VA = "0x79482C")]
	private void AbortSlowDownTime()
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x795320", Offset = "0x795320", VA = "0x795320")]
	public void TrapPlayer(Vector3 trapAtPosition)
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x795400", Offset = "0x795400", VA = "0x795400")]
	public bool IsTrapped()
	{
		return default(bool);
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x794C54", Offset = "0x794C54", VA = "0x794C54")]
	private void EndGame()
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x79542C", Offset = "0x79542C", VA = "0x79542C")]
	private void DisplayScoreboard()
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x794730", Offset = "0x794730", VA = "0x794730")]
	private void LoadAndParseHammerResources()
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x79649C", Offset = "0x79649C", VA = "0x79649C")]
	public HammerHitObjectRegistry.Data DataFromName(string itemName)
	{
		return default(HammerHitObjectRegistry.Data);
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x796558", Offset = "0x796558", VA = "0x796558")]
	public HammerHitObjectRegistry.Data DataFromFullName(string fullName)
	{
		return default(HammerHitObjectRegistry.Data);
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x7966BC", Offset = "0x7966BC", VA = "0x7966BC")]
	public HammerHitObjectRegistry.Data DataFromGameObject(GameObject go)
	{
		return default(HammerHitObjectRegistry.Data);
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0x796750", Offset = "0x796750", VA = "0x796750")]
	public void StartParticlesForItem(GameObject item)
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x7942A8", Offset = "0x7942A8", VA = "0x7942A8")]
	public void SetHammerHitParticles(ParticleSystem pSys)
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x795118", Offset = "0x795118", VA = "0x795118")]
	public void ShowHammerHitParticles(Vector3 atPos)
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x796A44", Offset = "0x796A44", VA = "0x796A44")]
	public void PlayHitSound(GameObject item)
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x796BE8", Offset = "0x796BE8", VA = "0x796BE8")]
	private void DestroyLoadedHammerResources()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x796C20", Offset = "0x796C20", VA = "0x796C20")]
	public void SpawnBonusObject(HammerHitObject hitObject)
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x797034", Offset = "0x797034", VA = "0x797034")]
	public void AddScore(int score)
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x7970EC", Offset = "0x7970EC", VA = "0x7970EC")]
	public void AddTimeBonus(float timeBonus)
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x797160", Offset = "0x797160", VA = "0x797160")]
	public void AddTicket()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x7971DC", Offset = "0x7971DC", VA = "0x7971DC")]
	private void OnNewTableSpawned(int numItems)
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x797268", Offset = "0x797268", VA = "0x797268")]
	private void OnItemRemovedFromTable(int uid)
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x7974B0", Offset = "0x7974B0", VA = "0x7974B0", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x7976B0", Offset = "0x7976B0", VA = "0x7976B0")]
	public HammerGame()
	{
	}
}
[Token(Token = "0x20000EB")]
public class HammerGong : MonoBehaviour
{
	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem shockWave;

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x797C78", Offset = "0x797C78", VA = "0x797C78")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x797D9C", Offset = "0x797D9C", VA = "0x797D9C")]
	private void OnGameEnd()
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x797DCC", Offset = "0x797DCC", VA = "0x797DCC")]
	private void OnShockWaveShow()
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x797DFC", Offset = "0x797DFC", VA = "0x797DFC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x797F84", Offset = "0x797F84", VA = "0x797F84")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x798090", Offset = "0x798090", VA = "0x798090")]
	public HammerGong()
	{
	}
}
[Token(Token = "0x20000EC")]
public class HammerHitObject : MonoBehaviour
{
	[Token(Token = "0x20003DC")]
	public delegate void HammerEventArgs();

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float breakableForce;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int score;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int perHitScore;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool spawnsBonusObjects;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool isTrap;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	public bool isTicket;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
	public bool isTimeBonus;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isDestructable;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool doesGiveScorePerHit;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool isSingleIntanceAllowedOnTable;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4AB31C", Offset = "0x4AB31C")]
	public float squashFactor;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float hammerStickToTableFactor;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float defaultInitialInactiveTime;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int uid;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float jumpStartTime;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float jumpTimeScale;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float jumpValScale;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float jumpStartY;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool isJumping;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float jumpDur;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float spawnedCountdownToHittable;

	[Token(Token = "0x17000089")]
	public int uniqueId
	{
		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x798448", Offset = "0x798448", VA = "0x798448")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700008A")]
	public bool isPooled
	{
		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x798450", Offset = "0x798450", VA = "0x798450")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008B")]
	public bool isHittable
	{
		[Token(Token = "0x6000800")]
		[Address(RVA = "0x798578", Offset = "0x798578", VA = "0x798578")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000020")]
	public event HammerEventArgs OnLeftTableEvent
	{
		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x798098", Offset = "0x798098", VA = "0x798098")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1420", Offset = "0x4B1420")]
		add
		{
		}
		[Token(Token = "0x60007FB")]
		[Address(RVA = "0x798184", Offset = "0x798184", VA = "0x798184")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1430", Offset = "0x4B1430")]
		remove
		{
		}
	}

	[Token(Token = "0x14000021")]
	public event HammerEventArgs OnRecycledEvent
	{
		[Token(Token = "0x60007FC")]
		[Address(RVA = "0x798270", Offset = "0x798270", VA = "0x798270")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1440", Offset = "0x4B1440")]
		add
		{
		}
		[Token(Token = "0x60007FD")]
		[Address(RVA = "0x79835C", Offset = "0x79835C", VA = "0x79835C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1450", Offset = "0x4B1450")]
		remove
		{
		}
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0x798588", Offset = "0x798588", VA = "0x798588")]
	public void OnSpawned(int uid)
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x7985E0", Offset = "0x7985E0", VA = "0x7985E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0x7986B0", Offset = "0x7986B0", VA = "0x7986B0")]
	public void SetTimeUntilHittable(float seconds)
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0x7986C4", Offset = "0x7986C4", VA = "0x7986C4")]
	public void Jump(float range)
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x798B74", Offset = "0x798B74", VA = "0x798B74")]
	private float Interpolate(float min, float max, float range)
	{
		return default(float);
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0x798B84", Offset = "0x798B84", VA = "0x798B84")]
	public void AbortJump()
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x798C54", Offset = "0x798C54", VA = "0x798C54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x798E78", Offset = "0x798E78", VA = "0x798E78")]
	public void ItemHasLeftTable()
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0x799288", Offset = "0x799288", VA = "0x799288")]
	public void Recycle()
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0x799328", Offset = "0x799328", VA = "0x799328")]
	public HammerHitObject()
	{
	}
}
[Token(Token = "0x20000ED")]
public class HammerHitObjectAnimation : MonoBehaviour
{
	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int uniqueId;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private HammerHitObject hammerHitObject;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ChefController chefController;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ChefController.TriggerParameters animName;

	[Token(Token = "0x600080B")]
	[Address(RVA = "0x7993AC", Offset = "0x7993AC", VA = "0x7993AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0x7994A0", Offset = "0x7994A0", VA = "0x7994A0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0x799568", Offset = "0x799568", VA = "0x799568")]
	private void OnHitObjectAnim(int uid)
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0x799650", Offset = "0x799650", VA = "0x799650")]
	public HammerHitObjectAnimation()
	{
	}
}
[Token(Token = "0x20000EE")]
public class HammerHitObjectController : MonoBehaviour
{
	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int uniqueId;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private HammerHitObject[] hitObjects;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private HammerHitObject currentHitObject;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int currentIndex;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private HammerHitObjectRegistry.Data itemData;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject blobShadow;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool itemOnTable;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool itemHasBroken;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ParticleSystem onDestroyPoof;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private HammerGame game;

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x799658", Offset = "0x799658", VA = "0x799658")]
	public void Start()
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x7997E0", Offset = "0x7997E0", VA = "0x7997E0")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x79990C", Offset = "0x79990C", VA = "0x79990C")]
	public void SetHitObjects(int uid, HammerHitObject[] hitObjects, GameObject blobShadow)
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x799D74", Offset = "0x799D74", VA = "0x799D74")]
	private void AddListeners(HammerHitObject hitObject)
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0x799E3C", Offset = "0x799E3C", VA = "0x799E3C")]
	private void RemoveListeners(HammerHitObject hitObject)
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x799A44", Offset = "0x799A44", VA = "0x799A44")]
	public void SetCurrentObject(int index)
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x799F04", Offset = "0x799F04", VA = "0x799F04")]
	public void OnHit(int hitObjectId)
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x79A704", Offset = "0x79A704", VA = "0x79A704")]
	public void BreakItem()
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x79A1FC", Offset = "0x79A1FC", VA = "0x79A1FC")]
	private bool ValidateCanSwitchToNext()
	{
		return default(bool);
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x79A36C", Offset = "0x79A36C", VA = "0x79A36C")]
	private void WobbleItem()
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x79AA0C", Offset = "0x79AA0C", VA = "0x79AA0C")]
	private void OnHitTableWithVelocity(float velocity)
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x79AA84", Offset = "0x79AA84", VA = "0x79AA84")]
	private float GetNormalizedValue(float value, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x79A95C", Offset = "0x79A95C", VA = "0x79A95C")]
	public void ItemLeftTable()
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x79ABD0", Offset = "0x79ABD0", VA = "0x79ABD0")]
	public void ItemRecycled()
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x79ABD4", Offset = "0x79ABD4", VA = "0x79ABD4")]
	public bool DestroyHitObjects()
	{
		return default(bool);
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x79AB18", Offset = "0x79AB18", VA = "0x79AB18")]
	private void RemoveShadow()
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x79AD5C", Offset = "0x79AD5C", VA = "0x79AD5C")]
	public bool IsHitObjectSmashed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x79AD98", Offset = "0x79AD98", VA = "0x79AD98")]
	public HammerHitObjectController()
	{
	}
}
[Token(Token = "0x20000EF")]
public class HammerHitObjectRegistry
{
	[Token(Token = "0x20003DD")]
	public struct Data
	{
		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string itemName;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string type;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sequenceLength;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int score;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int perHitScore;

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float breakableForce;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float itemRadius;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool spawnsBonusObjects;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool isTrap;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool isTicket;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		public bool isTimeBonus;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isDestructable;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool doesGiveScorePerHit;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool isSingleIntanceAllowedOnTable;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float squashFactor;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float hammerStickToTableFactor;

		[Token(Token = "0x17000198")]
		public string particleSystemName
		{
			[Token(Token = "0x6001BFD")]
			[Address(RVA = "0x50A4AC", Offset = "0x50A4AC", VA = "0x50A4AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000199")]
		public string hitSound
		{
			[Token(Token = "0x6001BFE")]
			[Address(RVA = "0x50A4B4", Offset = "0x50A4B4", VA = "0x50A4B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0x50A480", Offset = "0x50A480", VA = "0x50A480")]
		public Data(string name, string type)
		{
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0x50A4A4", Offset = "0x50A4A4", VA = "0x50A4A4")]
		public string GetFullName(int forIndex)
		{
			return null;
		}
	}

	[Token(Token = "0x40006A6")]
	public const string itemNameTemplate = "{0}_{1}_{2}";

	[Token(Token = "0x40006A7")]
	public const string particleTemplate = "{0}_particles";

	[Token(Token = "0x40006A8")]
	public const string hitSoundTemplate = "{0}_hit";

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<string, Data> data;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObjectPool objectPool;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int flagIsBonusSpawner;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int flagIsTrap;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int flagIsTicket;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int flagIsTimeBonus;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int flagIsDestructable;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int flagDoesGiveScorePerHit;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int flagIsSingleInstanceAllowedOnTable;

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x795754", Offset = "0x795754", VA = "0x795754")]
	public void RegisterGameObjects(GameObject[] gos)
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x7964E0", Offset = "0x7964E0", VA = "0x7964E0")]
	public Data GetDataFromName(string name)
	{
		return default(Data);
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x79659C", Offset = "0x79659C", VA = "0x79659C")]
	public Data GetDataFromFullName(string fullName)
	{
		return default(Data);
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x796700", Offset = "0x796700", VA = "0x796700")]
	public Data GetDataFromGameObject(GameObject go)
	{
		return default(Data);
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x79AE88", Offset = "0x79AE88", VA = "0x79AE88")]
	private void Validate(string fullName)
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x79ADA0", Offset = "0x79ADA0", VA = "0x79ADA0")]
	private void RegisterParticleSystem(GameObject go, string[] nameSplit)
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x796C18", Offset = "0x796C18", VA = "0x796C18")]
	public void Destroy()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x79572C", Offset = "0x79572C", VA = "0x79572C")]
	public HammerHitObjectRegistry()
	{
	}
}
[Token(Token = "0x20000F0")]
public class HammerHitObjectShards : MonoBehaviour
{
	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lifeTime;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool applyForceToRigidBodies;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minForceY;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxForceY;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ForceXZValue;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float SpinForceValue;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody[] rigidBodies;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3[] localStartPositions;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion[] localStartRotations;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject[] children;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int childCount;

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x79AF1C", Offset = "0x79AF1C", VA = "0x79AF1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x79B19C", Offset = "0x79B19C", VA = "0x79B19C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x79B5E8", Offset = "0x79B5E8", VA = "0x79B5E8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x79B664", Offset = "0x79B664", VA = "0x79B664")]
	private void Hide()
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x79B7C0", Offset = "0x79B7C0", VA = "0x79B7C0")]
	public HammerHitObjectShards()
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x79B7E4", Offset = "0x79B7E4", VA = "0x79B7E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1460", Offset = "0x4B1460")]
	private void <OnEnable>b__12_0()
	{
	}
}
[Token(Token = "0x20000F1")]
public class HammerHitObjectSpawner
{
	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int counter;

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x79B7E8", Offset = "0x79B7E8", VA = "0x79B7E8")]
	public GameObject SpawnItem(string itemName, Transform parent, Vector3 worldpos, float initialHittableDelay = 0f)
	{
		return null;
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x79BFBC", Offset = "0x79BFBC", VA = "0x79BFBC")]
	private HammerHitObject addOrGetHitObject(GameObject go)
	{
		return null;
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x79C084", Offset = "0x79C084", VA = "0x79C084")]
	public HammerHitObjectSpawner()
	{
	}
}
[Token(Token = "0x20000F2")]
public class HammerScore : MonoBehaviour
{
	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera cam;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float rotationZ;

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x79C08C", Offset = "0x79C08C", VA = "0x79C08C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x79C0F8", Offset = "0x79C0F8", VA = "0x79C0F8")]
	public void SetRotZ(float val)
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x79C100", Offset = "0x79C100", VA = "0x79C100")]
	private void Update()
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x79C2B0", Offset = "0x79C2B0", VA = "0x79C2B0")]
	public HammerScore()
	{
	}
}
[Token(Token = "0x20000F3")]
public class HammerScoreSpawner : SingleInstanceBehavior<HammerScoreSpawner>
{
	[Token(Token = "0x20003DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8CC4", Offset = "0x4A8CC4")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject s;

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0x79C880", Offset = "0x79C880", VA = "0x79C880")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0x79C8F8", Offset = "0x79C8F8", VA = "0x79C8F8")]
		internal void <ShowAt>b__0()
		{
		}
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x79A2A4", Offset = "0x79A2A4", VA = "0x79A2A4")]
	public void ShowScoreAt(int score, Vector3 pos)
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x79C780", Offset = "0x79C780", VA = "0x79C780")]
	public void ShowTimeBonusAt(int time, Vector3 pos)
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x79C2B8", Offset = "0x79C2B8", VA = "0x79C2B8")]
	private void ShowAt(GameObject s, string amnt, Vector3 pos)
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x79C888", Offset = "0x79C888", VA = "0x79C888")]
	public HammerScoreSpawner()
	{
	}
}
[Token(Token = "0x20000F4")]
public class HammerSignals : MonoBehaviour
{
	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Signal<int> OnHitObject;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly Signal<float> OnHitTableWithVelocity;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly Signal OnTrapRelease;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly Signal<float> RequestHammerStickToTableWithTimeScale;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly Signal OnGameEnd;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly Signal OnCurrentTableEmpty;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly Signal<int> OnNewTableSpawned;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly Signal<int> OnItemRemovedFromTable;

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x79C968", Offset = "0x79C968", VA = "0x79C968")]
	public HammerSignals()
	{
	}
}
[Token(Token = "0x20000F5")]
public class HammerSpawnPoint : MonoBehaviour
{
	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] ObjectsToSpawn;

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x79CBBC", Offset = "0x79CBBC", VA = "0x79CBBC")]
	private void Start()
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x79CBC0", Offset = "0x79CBC0", VA = "0x79CBC0")]
	public GameObject SpawnRandomObject()
	{
		return null;
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x79CDAC", Offset = "0x79CDAC", VA = "0x79CDAC")]
	public HammerSpawnPoint()
	{
	}
}
[Token(Token = "0x20000F6")]
public class HammerTimedObject : MonoBehaviour, IHammerHitObjectActivation
{
	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float TimeToLiveSeconds;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject progressBarPrefab;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject progressBar;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SpriteRenderer TimerRing;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MaterialPropertyBlock timerRingPropertyBlock;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float activationTimer;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float timeToLiveCounter;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private HammerHitObject hammerHitObject;

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x79CDB4", Offset = "0x79CDB4", VA = "0x79CDB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x79CE28", Offset = "0x79CE28", VA = "0x79CE28", Slot = "4")]
	public void OnShow()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x79D06C", Offset = "0x79D06C", VA = "0x79D06C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x79D138", Offset = "0x79D138", VA = "0x79D138")]
	private void SetProgress(float progress)
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x79D1F8", Offset = "0x79D1F8", VA = "0x79D1F8")]
	public HammerTimedObject()
	{
	}
}
[Token(Token = "0x20000F7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4A83DC", Offset = "0x4A83DC")]
public class HammerTrapObject : MonoBehaviour, IHammerHitObjectActivation
{
	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material trapProgressMaterial;

	[Token(Token = "0x40006D2")]
	private const int STATE_STICK = 1;

	[Token(Token = "0x40006D3")]
	private const int STATE_FALL_OFF = 2;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform hammerCenterTransform;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int state;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timeToLive;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody rb;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool playGetTrappedAnim;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject progressBarGO;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float velocityBuildUp;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float velocityToShakeOff;

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x79D200", Offset = "0x79D200", VA = "0x79D200")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x79D30C", Offset = "0x79D30C", VA = "0x79D30C", Slot = "4")]
	public void OnShow()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x79D828", Offset = "0x79D828", VA = "0x79D828")]
	private void Update()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x79DD30", Offset = "0x79DD30", VA = "0x79DD30")]
	private void FlyAway()
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x79DF4C", Offset = "0x79DF4C", VA = "0x79DF4C")]
	private void RemoveMe()
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x79D784", Offset = "0x79D784", VA = "0x79D784")]
	private void SetProgress(float val)
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x79E004", Offset = "0x79E004", VA = "0x79E004")]
	private void OnGameEnd()
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x79E0CC", Offset = "0x79E0CC", VA = "0x79E0CC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x79E184", Offset = "0x79E184", VA = "0x79E184")]
	public HammerTrapObject()
	{
	}
}
[Token(Token = "0x20000F8")]
public class HammerWaveConfig : MonoBehaviour
{
	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int waveNumber;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float angleWidth;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int numTables;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minItemSpacing;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxItemSpacing;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int minSlots;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int maxSlots;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] allowedItems;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] rewardItems;

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x79E18C", Offset = "0x79E18C", VA = "0x79E18C")]
	public HammerWaveConfig()
	{
	}
}
[Token(Token = "0x20000F9")]
public class HammerWaveManager : MonoBehaviour
{
	[Token(Token = "0x20003DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8CD4", Offset = "0x4A8CD4")]
	private sealed class <>c__DisplayClass19_0
	{
		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject item;

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0x79F5D8", Offset = "0x79F5D8", VA = "0x79F5D8")]
		public <>c__DisplayClass19_0()
		{
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0x79F998", Offset = "0x79F998", VA = "0x79F998")]
		internal void <SpawnTable>b__0()
		{
		}
	}

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float defaultAngleWidth;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int defaultMaxSlots;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int defaultNumTables;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int currentWave;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int currentWaveTable;

	[Token(Token = "0x40006EA")]
	public const float distToHammer = 0.63f;

	[Token(Token = "0x40006EB")]
	public const float tableHeight = 0.64f;

	[Token(Token = "0x40006EC")]
	public const float maxAllowedAngle = 120f;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private HammerHitObjectSpawner spawner;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject currentWaveHolder;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float anglesPerUnit;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private HammerWaveConfig[] config;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private HammerWaveConfig currentWaveConfig;

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x79E1B8", Offset = "0x79E1B8", VA = "0x79E1B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x797B74", Offset = "0x797B74", VA = "0x797B74")]
	public void NewTable()
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x79E448", Offset = "0x79E448", VA = "0x79E448")]
	private void SpawnNextWave()
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x79E5B8", Offset = "0x79E5B8", VA = "0x79E5B8")]
	private void SpawnNextTable()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x7979C0", Offset = "0x7979C0", VA = "0x7979C0")]
	public void ClearCurrentTable()
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x79F37C", Offset = "0x79F37C", VA = "0x79F37C")]
	public bool IsCurrentTableEmpty()
	{
		return default(bool);
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x79E61C", Offset = "0x79E61C", VA = "0x79E61C")]
	private void SpawnTable()
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x79F4EC", Offset = "0x79F4EC", VA = "0x79F4EC")]
	private string GetRandomObjectNameFromList(GameObject[] list)
	{
		return null;
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x796C60", Offset = "0x796C60", VA = "0x796C60")]
	public void SpawnBonusObject(HammerHitObject fromItem)
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x79F5E0", Offset = "0x79F5E0", VA = "0x79F5E0")]
	private void RegisterItemSpawnedToChefController(float angle, string itemName)
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x79F964", Offset = "0x79F964", VA = "0x79F964")]
	private bool InRange(float val, float min, float max)
	{
		return default(bool);
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0x79F97C", Offset = "0x79F97C", VA = "0x79F97C")]
	public HammerWaveManager()
	{
	}
}
[Token(Token = "0x20000FA")]
public interface IHammerHitObjectActivation
{
	[Token(Token = "0x600085A")]
	void OnShow();
}
[Token(Token = "0x20000FB")]
public class JelloSplashRandomForce : MonoBehaviour
{
	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float XZForceValue;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float minYForceValue;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxYForceValue;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float torqueValue;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody JelloShardsPieces;

	[Token(Token = "0x600085B")]
	[Address(RVA = "0x73E538", Offset = "0x73E538", VA = "0x73E538")]
	private void Awake()
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0x73E590", Offset = "0x73E590", VA = "0x73E590")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0x73E778", Offset = "0x73E778", VA = "0x73E778")]
	public JelloSplashRandomForce()
	{
	}
}
[Token(Token = "0x20000FC")]
public class PlaySoundOnShow : MonoBehaviour, IHammerHitObjectActivation
{
	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string soundName;

	[Token(Token = "0x600085E")]
	[Address(RVA = "0x65D18C", Offset = "0x65D18C", VA = "0x65D18C", Slot = "4")]
	public void OnShow()
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0x65D220", Offset = "0x65D220", VA = "0x65D220")]
	public PlaySoundOnShow()
	{
	}
}
[Token(Token = "0x20000FD")]
public class RandomForce : MonoBehaviour
{
	[Token(Token = "0x6000860")]
	[Address(RVA = "0x696B3C", Offset = "0x696B3C", VA = "0x696B3C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0x696C34", Offset = "0x696C34", VA = "0x696C34")]
	public RandomForce()
	{
	}
}
[Token(Token = "0x20000FE")]
public class ResetPositionOnEnable : MonoBehaviour
{
	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3[] localStartPositions;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Quaternion[] localStartRotations;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int childCount;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody[] rigidbodies;

	[Token(Token = "0x6000862")]
	[Address(RVA = "0x697368", Offset = "0x697368", VA = "0x697368")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0x697548", Offset = "0x697548", VA = "0x697548")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0x6977A8", Offset = "0x6977A8", VA = "0x6977A8")]
	public ResetPositionOnEnable()
	{
	}
}
[Token(Token = "0x20000FF")]
public class Shake : MonoBehaviour
{
	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rotLeft;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float rotRight;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float rotDuration;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int dir;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 initialRot;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rX;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float rY;

	[Token(Token = "0x6000865")]
	[Address(RVA = "0x6A4744", Offset = "0x6A4744", VA = "0x6A4744")]
	private void Start()
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x6A47AC", Offset = "0x6A47AC", VA = "0x6A47AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0x6A4928", Offset = "0x6A4928", VA = "0x6A4928")]
	private void Rot()
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x6A4AB8", Offset = "0x6A4AB8", VA = "0x6A4AB8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x6A4B34", Offset = "0x6A4B34", VA = "0x6A4B34")]
	public Shake()
	{
	}
}
[Token(Token = "0x2000100")]
public class ShowJelloSplashEffect : MonoBehaviour
{
	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HammerHitObject hammerHitObjectJello;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int sharedId;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int currentPosIndex;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform[] piecesTransform;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform jelloTransform;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject splashObject;

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x6A4B4C", Offset = "0x6A4B4C", VA = "0x6A4B4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x6A4E98", Offset = "0x6A4E98", VA = "0x6A4E98")]
	private void OnHitObject(int uid)
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x6A4EF8", Offset = "0x6A4EF8", VA = "0x6A4EF8")]
	private void ShowSplashEffect()
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x6A50E4", Offset = "0x6A50E4", VA = "0x6A50E4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x6A51AC", Offset = "0x6A51AC", VA = "0x6A51AC")]
	public ShowJelloSplashEffect()
	{
	}
}
[Token(Token = "0x2000101")]
public class SpringJointController : MonoBehaviour
{
	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SpringJoint springJointJello;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody hammerJelloPieceJoint;

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x6AA478", Offset = "0x6AA478", VA = "0x6AA478")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x6AA4D0", Offset = "0x6AA4D0", VA = "0x6AA4D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0x6AA6B4", Offset = "0x6AA6B4", VA = "0x6AA6B4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x6AA720", Offset = "0x6AA720", VA = "0x6AA720")]
	public SpringJointController()
	{
	}
}
[Token(Token = "0x2000102")]
public class TableClothAddForce : MonoBehaviour
{
	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float minVelocity;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float maxVelocity;

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x6AF7A0", Offset = "0x6AF7A0", VA = "0x6AF7A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x6AF884", Offset = "0x6AF884", VA = "0x6AF884")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x6AF94C", Offset = "0x6AF94C", VA = "0x6AF94C")]
	private void OnHitTableWithVelocity(float velocity)
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x6AFA78", Offset = "0x6AFA78", VA = "0x6AFA78")]
	private float Interpolate(float min, float max, float range)
	{
		return default(float);
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x6AFA88", Offset = "0x6AFA88", VA = "0x6AFA88")]
	public TableClothAddForce()
	{
	}
}
[Token(Token = "0x2000103")]
public class TestAnimationCurve : MonoBehaviour
{
	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float scaleTime;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float scaleStrenght;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private HammerGame hg;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float startY;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float curveDur;

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x6AFBA0", Offset = "0x6AFBA0", VA = "0x6AFBA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x6AFD20", Offset = "0x6AFD20", VA = "0x6AFD20")]
	private void Update()
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x6AFECC", Offset = "0x6AFECC", VA = "0x6AFECC")]
	public TestAnimationCurve()
	{
	}
}
[Token(Token = "0x2000104")]
public class PaintTarget : MonoBehaviour
{
	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AB344", Offset = "0x4AB344")]
	private Vector3 <RenderCameraPosition>k__BackingField;

	[Token(Token = "0x1700008C")]
	public Vector3 RenderCameraPosition
	{
		[Token(Token = "0x600087B")]
		[Address(RVA = "0x647C5C", Offset = "0x647C5C", VA = "0x647C5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1470", Offset = "0x4B1470")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600087C")]
		[Address(RVA = "0x647C68", Offset = "0x647C68", VA = "0x647C68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1480", Offset = "0x4B1480")]
		set
		{
		}
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x647C74", Offset = "0x647C74", VA = "0x647C74")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x647D30", Offset = "0x647D30", VA = "0x647D30")]
	private Vector2 GetUV(ContactPoint p)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x648128", Offset = "0x648128", VA = "0x648128")]
	private void AddSplash(Vector2 uv)
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x6483CC", Offset = "0x6483CC", VA = "0x6483CC")]
	public PaintTarget()
	{
	}
}
[Token(Token = "0x2000105")]
public class TexturePainting : MonoBehaviour
{
	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material backgroundMaterialTemplate;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 nextCameraPosition;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GameObject> generatedGameObjects;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<RenderTexture> renderTextures;

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x6B02E4", Offset = "0x6B02E4", VA = "0x6B02E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x6B0778", Offset = "0x6B0778", VA = "0x6B0778")]
	private void SetUpForObject(GameObject obj)
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x6B0D08", Offset = "0x6B0D08", VA = "0x6B0D08")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x6B0E30", Offset = "0x6B0E30", VA = "0x6B0E30")]
	public TexturePainting()
	{
	}
}
[Token(Token = "0x2000106")]
public class IntroScreen : MonoBehaviour
{
	[Token(Token = "0x20003E0")]
	private enum State
	{
		[Token(Token = "0x40017C5")]
		Nothing,
		[Token(Token = "0x40017C6")]
		WaitingAtStart,
		[Token(Token = "0x40017C7")]
		Splash,
		[Token(Token = "0x40017C8")]
		LoadingScene,
		[Token(Token = "0x40017C9")]
		FadingInBlur,
		[Token(Token = "0x40017CA")]
		ActivatingWorld,
		[Token(Token = "0x40017CB")]
		WaitingForGDPR,
		[Token(Token = "0x40017CC")]
		WaitingForClick,
		[Token(Token = "0x40017CD")]
		RevealingScene
	}

	[Token(Token = "0x20003E1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8CE4", Offset = "0x4A8CE4")]
	private sealed class <ActivateLoadingLogo>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntroScreen <>4__this;

		[Token(Token = "0x1700019A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C06")]
			[Address(RVA = "0x738888", Offset = "0x738888", VA = "0x738888", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C08")]
			[Address(RVA = "0x7388F8", Offset = "0x7388F8", VA = "0x7388F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0x73806C", Offset = "0x73806C", VA = "0x73806C")]
		[DebuggerHidden]
		public <ActivateLoadingLogo>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0x7385E8", Offset = "0x7385E8", VA = "0x7385E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0x7385EC", Offset = "0x7385EC", VA = "0x7385EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0x738890", Offset = "0x738890", VA = "0x738890", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8CF4", Offset = "0x4A8CF4")]
	private sealed class <ActivateScene>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntroScreen <>4__this;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <color>5__2;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <wait>5__3;

		[Token(Token = "0x1700019C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C0C")]
			[Address(RVA = "0x738D48", Offset = "0x738D48", VA = "0x738D48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C0E")]
			[Address(RVA = "0x738DB8", Offset = "0x738DB8", VA = "0x738DB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0x7384AC", Offset = "0x7384AC", VA = "0x7384AC")]
		[DebuggerHidden]
		public <ActivateScene>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0x738900", Offset = "0x738900", VA = "0x738900", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0x738904", Offset = "0x738904", VA = "0x738904", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0x738D50", Offset = "0x738D50", VA = "0x738D50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8D04", Offset = "0x4A8D04")]
	private sealed class <RevealScene>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntroScreen <>4__this;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Scene <scene>5__2;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <alpha>5__3;

		[Token(Token = "0x1700019E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C12")]
			[Address(RVA = "0x7390A4", Offset = "0x7390A4", VA = "0x7390A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C14")]
			[Address(RVA = "0x739114", Offset = "0x739114", VA = "0x739114", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0x7384D8", Offset = "0x7384D8", VA = "0x7384D8")]
		[DebuggerHidden]
		public <RevealScene>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0x738DC0", Offset = "0x738DC0", VA = "0x738DC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0x738DC4", Offset = "0x738DC4", VA = "0x738DC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0x7390AC", Offset = "0x7390AC", VA = "0x7390AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject disclaimer;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject prompt;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject loadingLabel;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer backgroundRenderer;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material backgroundMaterial;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject logo;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject logoDissolve;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject splash;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject penny;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Animator pennyTrailAnimator;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private SkinnedMeshRenderer pennyRenderer;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject pennyEyes;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject pennyPoof;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private AudioSource IntroLogoSound;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject videoLogo;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private float IntroWaitTime;

	[Token(Token = "0x4000728")]
	private const int backgroundRenderQueue = 6000;

	[Token(Token = "0x4000729")]
	private const int foregroundRenderQueue = 6010;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float splashCountdown;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float waitAtStartTime;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private State state;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string nextScene;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private AsyncOperation loadSceneOperation;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GDPRWindow gdprWindow;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int propertyIDAlpha;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int propertyIDColorMultiplier;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Animator myAnimator;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool fadeComplete;

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x737588", Offset = "0x737588", VA = "0x737588")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x737980", Offset = "0x737980", VA = "0x737980")]
	private void Start()
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x737C5C", Offset = "0x737C5C", VA = "0x737C5C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x737DE8", Offset = "0x737DE8", VA = "0x737DE8")]
	private void OnSplashFinished()
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x737FF8", Offset = "0x737FF8", VA = "0x737FF8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B1490", Offset = "0x4B1490")]
	private IEnumerator ActivateLoadingLogo()
	{
		return null;
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x738098", Offset = "0x738098", VA = "0x738098")]
	private InputManager.CallbackResult OnClickButtonPressed()
	{
		return default(InputManager.CallbackResult);
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x738314", Offset = "0x738314", VA = "0x738314")]
	public void ACB_OnLoop()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x7383FC", Offset = "0x7383FC", VA = "0x7383FC")]
	private void OnReadyToActivate()
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x73849C", Offset = "0x73849C", VA = "0x73849C")]
	public void FadeComplete()
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x738428", Offset = "0x738428", VA = "0x738428")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B14F4", Offset = "0x4B14F4")]
	private IEnumerator ActivateScene()
	{
		return null;
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x737E14", Offset = "0x737E14", VA = "0x737E14")]
	private void OnLoaded()
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x737FB4", Offset = "0x737FB4", VA = "0x737FB4")]
	private void OnGDPRWindowHide()
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x7382A0", Offset = "0x7382A0", VA = "0x7382A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B1558", Offset = "0x4B1558")]
	private IEnumerator RevealScene()
	{
		return null;
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x737844", Offset = "0x737844", VA = "0x737844")]
	private void SetRenderQueues()
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x738504", Offset = "0x738504", VA = "0x738504")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x738584", Offset = "0x738584", VA = "0x738584")]
	public IntroScreen()
	{
	}
}
[Token(Token = "0x2000107")]
public class Launcher : MonoBehaviour
{
	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LaunchSettings launchSettings;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int itemsSpawned;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timeToNext;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MagicMayhemItem.Type[] itemTypes;

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x740444", Offset = "0x740444", VA = "0x740444")]
	private void Update()
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x7406C8", Offset = "0x7406C8", VA = "0x7406C8")]
	public void StartWave(LaunchSettings launchSettings)
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x7404B0", Offset = "0x7404B0", VA = "0x7404B0")]
	public bool IsFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x7404D4", Offset = "0x7404D4", VA = "0x7404D4")]
	private void SpawnNext()
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x740724", Offset = "0x740724", VA = "0x740724")]
	public void Stop()
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x74072C", Offset = "0x74072C", VA = "0x74072C")]
	public Launcher()
	{
	}
}
[Token(Token = "0x2000108")]
public class LaunchSettings : MonoBehaviour
{
	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AB374", Offset = "0x4AB374")]
	[SerializeField]
	public float preDelay;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AB3C0", Offset = "0x4AB3C0")]
	[SerializeField]
	public float period;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AB40C", Offset = "0x4AB40C")]
	[SerializeField]
	private string itemTypes;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector3 launchPositionOffset;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float launchSpeed;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float maxRandomSpreadAngleAlongX;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float maxRandomSpreadAngleAlongZ;

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x73FAA0", Offset = "0x73FAA0", VA = "0x73FAA0")]
	public MagicMayhemItem.Type[] GetItems()
	{
		return null;
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x73FBB8", Offset = "0x73FBB8", VA = "0x73FBB8")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x73FCE4", Offset = "0x73FCE4", VA = "0x73FCE4")]
	public Vector3 GetLaunchPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x74016C", Offset = "0x74016C", VA = "0x74016C")]
	public Vector3 GetRandomLaunchVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x73FDEC", Offset = "0x73FDEC", VA = "0x73FDEC")]
	public Vector3 GetLaunchVelocity(float spreadAngleAlongX, float spreadAngleAlongZ)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x73FFE8", Offset = "0x73FFE8", VA = "0x73FFE8")]
	private void DrawTrajectory(Vector3 launchPosition, Vector3 launchVelocity)
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x73FAA8", Offset = "0x73FAA8", VA = "0x73FAA8")]
	private static MagicMayhemItem.Type[] ParseItemTypes(string items)
	{
		return null;
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x7402E8", Offset = "0x7402E8", VA = "0x7402E8")]
	private static MagicMayhemItem.Type ParseItemType(char c)
	{
		return default(MagicMayhemItem.Type);
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x7403D8", Offset = "0x7403D8", VA = "0x7403D8")]
	public LaunchSettings()
	{
	}
}
[Token(Token = "0x2000109")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4A8440", Offset = "0x4A8440")]
public class MagicMayhemForceField : MonoBehaviour
{
	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float pushForce;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BoxCollider boxCollider;

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x6360DC", Offset = "0x6360DC", VA = "0x6360DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x636134", Offset = "0x636134", VA = "0x636134")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x636414", Offset = "0x636414", VA = "0x636414")]
	public MagicMayhemForceField()
	{
	}
}
[Token(Token = "0x200010A")]
public class MagicMayhemGame : SingleInstanceBehavior<MagicMayhemGame>
{
	[Token(Token = "0x20003E4")]
	private enum State
	{
		[Token(Token = "0x40017DC")]
		Setup,
		[Token(Token = "0x40017DD")]
		Instructions,
		[Token(Token = "0x40017DE")]
		GameOn,
		[Token(Token = "0x40017DF")]
		GameOver
	}

	[Token(Token = "0x20003E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8D14", Offset = "0x4A8D14")]
	private sealed class <StartGame>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MagicMayhemGame <>4__this;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MagicMayhemWave <wave>5__2;

		[Token(Token = "0x170001A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C18")]
			[Address(RVA = "0x63AF40", Offset = "0x63AF40", VA = "0x63AF40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C1A")]
			[Address(RVA = "0x63AFB0", Offset = "0x63AFB0", VA = "0x63AFB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0x63722C", Offset = "0x63722C", VA = "0x63722C")]
		[DebuggerHidden]
		public <StartGame>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0x63A3AC", Offset = "0x63A3AC", VA = "0x63A3AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0x63A3B0", Offset = "0x63A3B0", VA = "0x63A3B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0x63AF48", Offset = "0x63AF48", VA = "0x63AF48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003E6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8D24", Offset = "0x4A8D24")]
	private sealed class <DelayRemoveObject>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject obj;

		[Token(Token = "0x170001A2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C1E")]
			[Address(RVA = "0x63A074", Offset = "0x63A074", VA = "0x63A074", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C20")]
			[Address(RVA = "0x63A0E4", Offset = "0x63A0E4", VA = "0x63A0E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0x6376C0", Offset = "0x6376C0", VA = "0x6376C0")]
		[DebuggerHidden]
		public <DelayRemoveObject>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0x639FA0", Offset = "0x639FA0", VA = "0x639FA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0x639FA4", Offset = "0x639FA4", VA = "0x639FA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0x63A07C", Offset = "0x63A07C", VA = "0x63A07C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003E7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8D34", Offset = "0x4A8D34")]
	private sealed class <>c__DisplayClass51_0
	{
		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MagicMayhemGame <>4__this;

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject particleObj;

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0x638CB8", Offset = "0x638CB8", VA = "0x638CB8")]
		public <>c__DisplayClass51_0()
		{
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0x639ADC", Offset = "0x639ADC", VA = "0x639ADC")]
		internal void <SpawnParticles>b__0()
		{
		}
	}

	[Token(Token = "0x20003E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8D44", Offset = "0x4A8D44")]
	private sealed class <EndGame>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MagicMayhemGame <>4__this;

		[Token(Token = "0x170001A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C26")]
			[Address(RVA = "0x63A334", Offset = "0x63A334", VA = "0x63A334", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C28")]
			[Address(RVA = "0x63A3A4", Offset = "0x63A3A4", VA = "0x63A3A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0x638DA0", Offset = "0x638DA0", VA = "0x638DA0")]
		[DebuggerHidden]
		public <EndGame>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x6001C24")]
		[Address(RVA = "0x63A0EC", Offset = "0x63A0EC", VA = "0x63A0EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0x63A0F0", Offset = "0x63A0F0", VA = "0x63A0F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0x63A33C", Offset = "0x63A33C", VA = "0x63A33C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003E9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8D54", Offset = "0x4A8D54")]
	private sealed class <ClearActiveProjectiles>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MagicMayhemGame <>4__this;

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<MagicMayhemItem> <itemsToClear>5__2;

		[Token(Token = "0x170001A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C2C")]
			[Address(RVA = "0x639F28", Offset = "0x639F28", VA = "0x639F28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C2E")]
			[Address(RVA = "0x639F98", Offset = "0x639F98", VA = "0x639F98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0x638E40", Offset = "0x638E40", VA = "0x638E40")]
		[DebuggerHidden]
		public <ClearActiveProjectiles>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0x639B24", Offset = "0x639B24", VA = "0x639B24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0x639B28", Offset = "0x639B28", VA = "0x639B28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0x639F30", Offset = "0x639F30", VA = "0x639F30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MagicMayhemWandList wandDefinitions;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int uniqueFragmentBuffer;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GrabbableObject grabbableObject;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private WandCollisions[] wandCollisions;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float gameTimeScale;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float gameTime;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float timeFragmentChance;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float doubleFragmentChance;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float bonusTimeFromAddTimeItem;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Sprite[] scoreboardUIIcons;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GrabbableObject grabbableWand;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private RotatingTimer rotatingTimer;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private State currentState;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool timerShouldCountdown;

	[Token(Token = "0x400074F")]
	private const float exitTutorialDelay = 0.4f;

	[Token(Token = "0x4000750")]
	private const float clockFillUpDelay = 2.5f;

	[Token(Token = "0x4000751")]
	private const float cooldownTime = 0.2f;

	[Token(Token = "0x4000752")]
	private const string uniqueFragmentName = "Fragment2";

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Dictionary<string, Sprite> scoreboardUIIconsMap;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Launcher[] launchers;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private UIBoard instructions;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private ObjectPool objectPool;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private MagicMayhemWandGlow wandGlow;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private CountdownTime gameTimer;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int waveNumber;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int hitsThisWave;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int ticketsCollected;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int totalFragmentScore;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int totalStandardItemScore;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Text scoreText;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private LocalizedText waveText;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 fragmentVelocityAdd;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 fragmentSpreadAmount;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private MagicMayhemWave[] waves;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private List<string> itemsHit;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private PassAndPlay passAndPlay;

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x636424", Offset = "0x636424", VA = "0x636424", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x636728", Offset = "0x636728", VA = "0x636728")]
	private void Start()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x6368E8", Offset = "0x6368E8", VA = "0x6368E8")]
	private void EnterInstructionsState()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x636E44", Offset = "0x636E44", VA = "0x636E44")]
	private InputManager.CallbackResult OnClickButtonPressed()
	{
		return default(InputManager.CallbackResult);
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x636E54", Offset = "0x636E54", VA = "0x636E54")]
	private void ExitInstructions()
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x636FB0", Offset = "0x636FB0", VA = "0x636FB0")]
	public void LaunchItem(MagicMayhemItem.Type type, Vector3 position, Vector3 velocity)
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x6371B8", Offset = "0x6371B8", VA = "0x6371B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B15BC", Offset = "0x4B15BC")]
	private IEnumerator StartGame()
	{
		return null;
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x6369A8", Offset = "0x6369A8", VA = "0x6369A8")]
	private void SpawnWand()
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x637340", Offset = "0x637340", VA = "0x637340")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B1620", Offset = "0x4B1620")]
	private IEnumerator DelayRemoveObject(GameObject obj, float delay)
	{
		return null;
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x6376EC", Offset = "0x6376EC", VA = "0x6376EC")]
	private bool WaveIsFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x6377B0", Offset = "0x6377B0", VA = "0x6377B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x637114", Offset = "0x637114", VA = "0x637114")]
	private GameObject CreateItem(MagicMayhemItem.Type type)
	{
		return null;
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x637C54", Offset = "0x637C54", VA = "0x637C54")]
	private void AddHitItem(string itemName)
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x637D00", Offset = "0x637D00", VA = "0x637D00")]
	public void OnWandHit(MagicMayhemItem item)
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x638ABC", Offset = "0x638ABC", VA = "0x638ABC")]
	private bool SpawnParticles(Transform itemTransform, string particleType)
	{
		return default(bool);
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x6387A4", Offset = "0x6387A4", VA = "0x6387A4")]
	private void SpawnFragments(Transform itemTransform, int fragmentCount, string objectType)
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x638CCC", Offset = "0x638CCC", VA = "0x638CCC")]
	public void OnItemMissed(MagicMayhemItem item)
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x637940", Offset = "0x637940", VA = "0x637940")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B1684", Offset = "0x4B1684")]
	private IEnumerator EndGame()
	{
		return null;
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x638DCC", Offset = "0x638DCC", VA = "0x638DCC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B16E8", Offset = "0x4B16E8")]
	private IEnumerator ClearActiveProjectiles()
	{
		return null;
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x638E6C", Offset = "0x638E6C", VA = "0x638E6C")]
	private Sprite GetImageForItem(string itemName)
	{
		return null;
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x638FE8", Offset = "0x638FE8", VA = "0x638FE8")]
	private void DisplayScoreboard()
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x6377A0", Offset = "0x6377A0", VA = "0x6377A0")]
	private bool IsGameOn()
	{
		return default(bool);
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x6379B4", Offset = "0x6379B4", VA = "0x6379B4")]
	private void UpdateScoreDisplay()
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x636698", Offset = "0x636698", VA = "0x636698")]
	private void ShowScore(int points, int wave)
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x638754", Offset = "0x638754", VA = "0x638754")]
	private void RemoveItem(MagicMayhemItem item)
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x639894", Offset = "0x639894", VA = "0x639894", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x639970", Offset = "0x639970", VA = "0x639970")]
	public MagicMayhemGame()
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x639A78", Offset = "0x639A78", VA = "0x639A78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B174C", Offset = "0x4B174C")]
	private void <EnterInstructionsState>b__39_0()
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x639AB0", Offset = "0x639AB0", VA = "0x639AB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B175C", Offset = "0x4B175C")]
	private void <ExitInstructions>b__41_0()
	{
	}
}
[Token(Token = "0x200010B")]
public class MagicMayhemItem : MonoBehaviour
{
	[Token(Token = "0x20003EA")]
	public enum Type
	{
		[Token(Token = "0x40017F2")]
		Standard,
		[Token(Token = "0x40017F3")]
		Currency,
		[Token(Token = "0x40017F4")]
		Fragment1,
		[Token(Token = "0x40017F5")]
		Fragment2,
		[Token(Token = "0x40017F6")]
		Fragment3,
		[Token(Token = "0x40017F7")]
		AddTime
	}

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Type type;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float cooldownTime;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Collider[] colliderComponents;

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x63AFB8", Offset = "0x63AFB8", VA = "0x63AFB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x63B010", Offset = "0x63B010", VA = "0x63B010")]
	private void Update()
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x638CC0", Offset = "0x638CC0", VA = "0x638CC0")]
	public void StartCollisionCooldown(float cooldownTime)
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x63B070", Offset = "0x63B070", VA = "0x63B070")]
	private void SetColliderEnabled(bool value)
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x63857C", Offset = "0x63857C", VA = "0x63857C")]
	public static bool IsFragment(Type type)
	{
		return default(bool);
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x63B11C", Offset = "0x63B11C", VA = "0x63B11C")]
	public MagicMayhemItem()
	{
	}
}
[Token(Token = "0x200010C")]
public static class MagicMayhemScoring
{
	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<MagicMayhemItem.Type, int> pointsForType;

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x638418", Offset = "0x638418", VA = "0x638418")]
	public static int GetScore(MagicMayhemItem.Type type)
	{
		return default(int);
	}
}
[Token(Token = "0x200010D")]
public class MagicMayhemSignals
{
	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Signal GameFinished;

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x63BAC0", Offset = "0x63BAC0", VA = "0x63BAC0")]
	public MagicMayhemSignals()
	{
	}
}
[Token(Token = "0x200010E")]
public class MagicMayhemSkinnedWandGlow : MonoBehaviour
{
	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SkinnedMeshRenderer rend;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material mat;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fadeOutTime;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float glowValue;

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x63BB68", Offset = "0x63BB68", VA = "0x63BB68")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x63BBFC", Offset = "0x63BBFC", VA = "0x63BBFC")]
	public void MakeWandGlow()
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x63BDC4", Offset = "0x63BDC4", VA = "0x63BDC4")]
	private void Update()
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x63BE38", Offset = "0x63BE38", VA = "0x63BE38")]
	public MagicMayhemSkinnedWandGlow()
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x63BE48", Offset = "0x63BE48", VA = "0x63BE48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B176C", Offset = "0x4B176C")]
	private void <MakeWandGlow>b__5_0(float val)
	{
	}
}
[Token(Token = "0x200010F")]
public class MagicMayhemWandGlow : MonoBehaviour
{
	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer rend;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material mat;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fadeOutTime;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float glowValue;

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x63BE58", Offset = "0x63BE58", VA = "0x63BE58")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x63858C", Offset = "0x63858C", VA = "0x63858C")]
	public void MakeWandGlow()
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x63BF4C", Offset = "0x63BF4C", VA = "0x63BF4C")]
	private void Update()
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x63BFC0", Offset = "0x63BFC0", VA = "0x63BFC0")]
	public MagicMayhemWandGlow()
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x63BFD4", Offset = "0x63BFD4", VA = "0x63BFD4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B177C", Offset = "0x4B177C")]
	private void <MakeWandGlow>b__5_0(float val)
	{
	}
}
[Token(Token = "0x2000110")]
public class MagicMayhemWave : MonoBehaviour
{
	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AB568", Offset = "0x4AB568")]
	public float delay;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AB5A0", Offset = "0x4AB5A0")]
	public int requiredHits;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AB5D8", Offset = "0x4AB5D8")]
	public int waveNumber;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LaunchSettings[] launches;

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x63BFE4", Offset = "0x63BFE4", VA = "0x63BFE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x63AD4C", Offset = "0x63AD4C", VA = "0x63AD4C")]
	public LaunchSettings GetLaunchSettings(int i)
	{
		return null;
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x63ADA0", Offset = "0x63ADA0", VA = "0x63ADA0")]
	public int GetNumberOfLaunchSettings()
	{
		return default(int);
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x63C03C", Offset = "0x63C03C", VA = "0x63C03C")]
	public MagicMayhemWave()
	{
	}
}
[Token(Token = "0x2000111")]
public class MissCollisions : MonoBehaviour
{
	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x641A4C", Offset = "0x641A4C", VA = "0x641A4C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x641B50", Offset = "0x641B50", VA = "0x641B50")]
	public MissCollisions()
	{
	}
}
[Token(Token = "0x2000112")]
public class MagicMayhemMatPulse : MonoBehaviour
{
	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer rend;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material mat;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float multiplier;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float offset;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speed;

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x63B124", Offset = "0x63B124", VA = "0x63B124")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x63B1B8", Offset = "0x63B1B8", VA = "0x63B1B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x63B220", Offset = "0x63B220", VA = "0x63B220")]
	private void Update()
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x63B2D4", Offset = "0x63B2D4", VA = "0x63B2D4")]
	public MagicMayhemMatPulse()
	{
	}
}
[Token(Token = "0x2000113")]
public class MagicMayhemRot : MonoBehaviour
{
	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float minXAmt;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float maxXAmt;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float minYAmt;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float maxYAmt;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float minZAmt;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float maxZAmt;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 rotationSpeed;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform transformComponent;

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x63B648", Offset = "0x63B648", VA = "0x63B648")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x63B670", Offset = "0x63B670", VA = "0x63B670")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x63B700", Offset = "0x63B700", VA = "0x63B700")]
	private void Update()
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x63B7CC", Offset = "0x63B7CC", VA = "0x63B7CC")]
	public MagicMayhemRot()
	{
	}
}
[Token(Token = "0x2000114")]
public class MagicMayhemScalePulse : MonoBehaviour
{
	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform trans;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float scaleMin;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float scaleMax;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speed;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float value;

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x63B7EC", Offset = "0x63B7EC", VA = "0x63B7EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x63B82C", Offset = "0x63B82C", VA = "0x63B82C")]
	private void Update()
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x63B918", Offset = "0x63B918", VA = "0x63B918")]
	public MagicMayhemScalePulse()
	{
	}
}
[Token(Token = "0x2000115")]
public class RotationRangeView : MonoBehaviour
{
	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AB610", Offset = "0x4AB610")]
	public Collider tip;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color innerSphereColor;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color outerSphereColor;

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x698538", Offset = "0x698538", VA = "0x698538")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x698A8C", Offset = "0x698A8C", VA = "0x698A8C")]
	public RotationRangeView()
	{
	}
}
[Token(Token = "0x2000116")]
public class WandCollisions : MonoBehaviour
{
	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GrabbableObject grabbableWand;

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x828E98", Offset = "0x828E98", VA = "0x828E98")]
	public void SetMesh(MeshCollider mesh)
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x828F30", Offset = "0x828F30", VA = "0x828F30")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x829360", Offset = "0x829360", VA = "0x829360")]
	public WandCollisions()
	{
	}
}
[Token(Token = "0x2000117")]
public class MagicMayhemMoveJointsWhenPaused : MonoBehaviour
{
	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Rigidbody baseNode;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Rigidbody[] followNodes;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3[] offsets;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isPaused;

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x63B2EC", Offset = "0x63B2EC", VA = "0x63B2EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x63B354", Offset = "0x63B354", VA = "0x63B354")]
	private void Update()
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x63B640", Offset = "0x63B640", VA = "0x63B640")]
	public MagicMayhemMoveJointsWhenPaused()
	{
	}
}
[Token(Token = "0x2000118")]
public class MagicMayhemWandDefinition : MonoBehaviour
{
	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InventoryCatalogue.ItemID itemID;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject visualPrefab;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject uniqueFragmentPrefab;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Collider wandCollider;

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x63BE50", Offset = "0x63BE50", VA = "0x63BE50")]
	public MagicMayhemWandDefinition()
	{
	}
}
[Token(Token = "0x2000119")]
public class MagicMayhemWandList : MonoBehaviour
{
	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MagicMayhemWandDefinition[] wandDefinitions;

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x637258", Offset = "0x637258", VA = "0x637258")]
	public MagicMayhemWandDefinition GetWandDefinition(InventoryCatalogue.ItemID wandItemID)
	{
		return null;
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0x63BFDC", Offset = "0x63BFDC", VA = "0x63BFDC")]
	public MagicMayhemWandList()
	{
	}
}
[Token(Token = "0x200011A")]
public class TiltCarReplay : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x20003EB")]
	public class Keyframe
	{
		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float timeStampStart;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float timeStampEnd;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 ballLocalPosition;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Quaternion ballLocalRotation;

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0x82013C", Offset = "0x82013C", VA = "0x82013C")]
		public Keyframe()
		{
		}
	}

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InventoryCatalogue.ItemID equippedItem;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 rootLocalPosition;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Quaternion rootLocalRotation;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Keyframe[] frames;

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x820134", Offset = "0x820134", VA = "0x820134")]
	public TiltCarReplay()
	{
	}
}
[Token(Token = "0x200011B")]
public class TiltCarReplayPlayback : MonoBehaviour
{
	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speedFactor;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject carBall;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TiltCarReplay replayData;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isPlaying;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float playbackTime;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float raceTime;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int currentFrameIndex;

	[Token(Token = "0x40007A0")]
	private const float replayFrameRate = 60f;

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x820144", Offset = "0x820144", VA = "0x820144")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x8201F0", Offset = "0x8201F0", VA = "0x8201F0")]
	public void SetReplayData(TiltCarReplay newReplayData)
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x8204E0", Offset = "0x8204E0", VA = "0x8204E0")]
	public void ResetToBeginning()
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x820854", Offset = "0x820854", VA = "0x820854")]
	public void Play()
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x820928", Offset = "0x820928", VA = "0x820928")]
	public void Stop()
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x8204F0", Offset = "0x8204F0", VA = "0x8204F0")]
	private bool ApplyCurrentFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x8209E4", Offset = "0x8209E4", VA = "0x8209E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x8204E8", Offset = "0x8204E8", VA = "0x8204E8")]
	private void ResetRelativeTime()
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x820A40", Offset = "0x820A40", VA = "0x820A40")]
	public TiltCarReplayPlayback()
	{
	}
}
[Token(Token = "0x200011C")]
public class TiltCarReplayPlaybackController : MonoBehaviour
{
	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TiltCarReplayPlayback playbackCarPrefab;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AB698", Offset = "0x4AB698")]
	[SerializeField]
	private AnimationCurve replayPlaybackSpeedCurve;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AB6E4", Offset = "0x4AB6E4")]
	[SerializeField]
	private int replayPlaybackSpeedHalfRange;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TiltCarReplayPlayback playbackCarInstance;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int playerCheckpoint;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int replayCheckpoint;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int numCheckpointsNeededToFinishRace;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int? checkpointWinDelta;

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x820A50", Offset = "0x820A50", VA = "0x820A50")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x820A54", Offset = "0x820A54", VA = "0x820A54")]
	private void SpawnReplayCar()
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x820B98", Offset = "0x820B98", VA = "0x820B98")]
	public void SetReplay(TiltCarReplay replay, PidgeyChallengeSettings challengeSettings)
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x820D68", Offset = "0x820D68", VA = "0x820D68")]
	public void Play(int numberOfLaps)
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x820E30", Offset = "0x820E30", VA = "0x820E30")]
	public void ResetToBeginning()
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x820EC8", Offset = "0x820EC8", VA = "0x820EC8")]
	private void OnReplayCheckpoint(Checkpoint cp)
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x821058", Offset = "0x821058", VA = "0x821058")]
	public void PlayerCheckpoint(Checkpoint cp)
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x820FD4", Offset = "0x820FD4", VA = "0x820FD4")]
	private void UpdateWinDelta(int checkpointNumber)
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x82108C", Offset = "0x82108C", VA = "0x82108C")]
	private void SaveWinCheckpointDelta()
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x820EFC", Offset = "0x820EFC", VA = "0x820EFC")]
	private void AdjustReplaySpeed()
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x8210FC", Offset = "0x8210FC", VA = "0x8210FC")]
	public int? GetCheckpointWinDelta()
	{
		return null;
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x821104", Offset = "0x821104", VA = "0x821104")]
	public TiltCarReplayPlaybackController()
	{
	}
}
[Token(Token = "0x200011D")]
public class PidgeyCarDefinition : MonoBehaviour
{
	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InventoryCatalogue.ItemID itemID;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject visualPrefab;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject visualGhostPrefab;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject racingParticlePool;

	[Token(Token = "0x600090A")]
	[Address(RVA = "0x65A3E8", Offset = "0x65A3E8", VA = "0x65A3E8")]
	public PidgeyCarDefinition()
	{
	}
}
[Token(Token = "0x200011E")]
public class PidgeyCarList : SingleInstanceBehavior<PidgeyCarList>
{
	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PidgeyCarDefinition[] carDefinitions;

	[Token(Token = "0x600090B")]
	[Address(RVA = "0x65A3F0", Offset = "0x65A3F0", VA = "0x65A3F0")]
	public PidgeyCarDefinition GetCarDefinition(InventoryCatalogue.ItemID carItemID)
	{
		return null;
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0x65A480", Offset = "0x65A480", VA = "0x65A480")]
	public PidgeyCarList()
	{
	}
}
[Token(Token = "0x200011F")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x4A84A4", Offset = "0x4A84A4")]
public class PidgeyChallengeSettings : ScriptableObject
{
	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float CatchupSpeedFactor;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float EqualPositionSpeedFactor;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float LeadSlowdownSpeedFactor;

	[Token(Token = "0x600090D")]
	[Address(RVA = "0x65A4F0", Offset = "0x65A4F0", VA = "0x65A4F0")]
	public PidgeyChallengeSettings()
	{
	}
}
[Token(Token = "0x2000120")]
public class PidgeyChallengeTracker : SingleInstanceBehavior<PidgeyChallengeTracker>
{
	[Token(Token = "0x40007B1")]
	public const int numberOfChallengesPerTrack = 3;

	[Token(Token = "0x40007B2")]
	private const int lockedTrack = -1;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int numberOfTracks;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PidgeySelectTrackItem[] selectTrackBoards;

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x65A4F8", Offset = "0x65A4F8", VA = "0x65A4F8", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x65A684", Offset = "0x65A684", VA = "0x65A684")]
	private void Start()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0x65A74C", Offset = "0x65A74C", VA = "0x65A74C")]
	private void OnInventoryItemChanged(InventoryCatalogue.ItemID itemID)
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x65A5AC", Offset = "0x65A5AC", VA = "0x65A5AC")]
	private void SetupDefaultPlayerPrefValues()
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x65A9A4", Offset = "0x65A9A4", VA = "0x65A9A4")]
	private string GeneratePlayerPrefKey(int trackIndex)
	{
		return null;
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x65AA20", Offset = "0x65AA20", VA = "0x65AA20")]
	private string GetPlayerPrefKey(int trackIndex)
	{
		return null;
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x65AA24", Offset = "0x65AA24", VA = "0x65AA24")]
	public bool IsTrackUnlocked(int trackIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x65AA48", Offset = "0x65AA48", VA = "0x65AA48")]
	public int GetCurrentChallengeOnTrack(int trackIndex)
	{
		return default(int);
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x65AA60", Offset = "0x65AA60", VA = "0x65AA60")]
	public void SetChallengeComplete(int trackIndex, int challengeIndex)
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x65A640", Offset = "0x65A640", VA = "0x65A640")]
	private void UpdateAllTracksLockStatus()
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x65AAE0", Offset = "0x65AAE0", VA = "0x65AAE0")]
	private void UpdateTrackLockStatus(int trackIndex)
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x65AB5C", Offset = "0x65AB5C", VA = "0x65AB5C", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x65AC38", Offset = "0x65AC38", VA = "0x65AC38")]
	public PidgeyChallengeTracker()
	{
	}
}
[Token(Token = "0x2000121")]
public class TrackChallenges : MonoBehaviour
{
	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public TiltCarReplay[] challengeReplays;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public PidgeyChallengeSettings[] challengeSettings;

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x824A64", Offset = "0x824A64", VA = "0x824A64")]
	private void Start()
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x824A68", Offset = "0x824A68", VA = "0x824A68")]
	public TiltCarReplay GetChallenge(int challengeIndex)
	{
		return null;
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x824ABC", Offset = "0x824ABC", VA = "0x824ABC")]
	public PidgeyChallengeSettings getChallengeSettings(int challengeIndex)
	{
		return null;
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x824B10", Offset = "0x824B10", VA = "0x824B10")]
	public TrackChallenges()
	{
	}
}
[Token(Token = "0x2000122")]
public class EditorLookAt : MonoBehaviour
{
	[Token(Token = "0x600091F")]
	[Address(RVA = "0x71B1E0", Offset = "0x71B1E0", VA = "0x71B1E0")]
	public EditorLookAt()
	{
	}
}
[Token(Token = "0x2000123")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4A84B4", Offset = "0x4A84B4")]
public class TCInput : SingleInstanceBehavior<TCInput>
{
	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float maxTilt;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GrabbableObject controller;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool worldTiltActive;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Hand hand;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AB780", Offset = "0x4AB780")]
	private static Quaternion <WorldTilt>k__BackingField;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AB790", Offset = "0x4AB790")]
	private static Vector3 <TiltUp>k__BackingField;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AB7A0", Offset = "0x4AB7A0")]
	private static Vector3 <RollForward>k__BackingField;

	[Token(Token = "0x1700008D")]
	public static Quaternion WorldTilt
	{
		[Token(Token = "0x6000920")]
		[Address(RVA = "0x6AE7C4", Offset = "0x6AE7C4", VA = "0x6AE7C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B178C", Offset = "0x4B178C")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000921")]
		[Address(RVA = "0x6AE818", Offset = "0x6AE818", VA = "0x6AE818")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B179C", Offset = "0x4B179C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008E")]
	public static Vector3 TiltUp
	{
		[Token(Token = "0x6000922")]
		[Address(RVA = "0x6AE88C", Offset = "0x6AE88C", VA = "0x6AE88C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B17AC", Offset = "0x4B17AC")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000923")]
		[Address(RVA = "0x6AE8E0", Offset = "0x6AE8E0", VA = "0x6AE8E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B17BC", Offset = "0x4B17BC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008F")]
	public static Vector3 RollForward
	{
		[Token(Token = "0x6000924")]
		[Address(RVA = "0x6AE950", Offset = "0x6AE950", VA = "0x6AE950")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B17CC", Offset = "0x4B17CC")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000925")]
		[Address(RVA = "0x6AE9A4", Offset = "0x6AE9A4", VA = "0x6AE9A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B17DC", Offset = "0x4B17DC")]
		private set
		{
		}
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x6AEA14", Offset = "0x6AEA14", VA = "0x6AEA14")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x6AEEA0", Offset = "0x6AEEA0", VA = "0x6AEEA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x6AEEEC", Offset = "0x6AEEEC", VA = "0x6AEEEC")]
	public void SetWorldTiltActive(bool value)
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x6AEC70", Offset = "0x6AEC70", VA = "0x6AEC70")]
	private void UpdateValues(Quaternion orientation)
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0x6AEF44", Offset = "0x6AEF44", VA = "0x6AEF44")]
	private void DampenAndCapRotation(ref Vector3 controllerOrientation, float dampen)
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x6AF078", Offset = "0x6AF078", VA = "0x6AF078")]
	private Vector3 CalculateRoll()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x6AF1B4", Offset = "0x6AF1B4", VA = "0x6AF1B4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x6AF1D8", Offset = "0x6AF1D8", VA = "0x6AF1D8")]
	private void DrawPlaneNormalGizmo()
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x6AF4A8", Offset = "0x6AF4A8", VA = "0x6AF4A8")]
	private void DrawForwardVector()
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x6AF5F8", Offset = "0x6AF5F8", VA = "0x6AF5F8")]
	public TCInput()
	{
	}
}
[Token(Token = "0x2000124")]
public class TCMath : MonoBehaviour
{
	[Token(Token = "0x6000930")]
	[Address(RVA = "0x6AF670", Offset = "0x6AF670", VA = "0x6AF670")]
	public static float DampenRotation(float angle, float dampen)
	{
		return default(float);
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x6AF6B4", Offset = "0x6AF6B4", VA = "0x6AF6B4")]
	public static Vector3 DampenRotation(Vector3 rotationVector, float dampen)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x6AF798", Offset = "0x6AF798", VA = "0x6AF798")]
	public TCMath()
	{
	}
}
[Token(Token = "0x2000125")]
public class BootIntoPidgeyTrack : MonoBehaviour
{
	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string bootIntoTrackName;

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x6C5EE8", Offset = "0x6C5EE8", VA = "0x6C5EE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x6C6004", Offset = "0x6C6004", VA = "0x6C6004")]
	public BootIntoPidgeyTrack()
	{
	}
}
[Token(Token = "0x2000126")]
public class Checkpoint : MonoBehaviour
{
	[Token(Token = "0x20003EC")]
	public delegate void OnCheckpointHit(string tag, Checkpoint cp);

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AB7B0", Offset = "0x4AB7B0")]
	private int <index>k__BackingField;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Action<Checkpoint> onPlayerHitCallback;

	[Token(Token = "0x17000090")]
	public int index
	{
		[Token(Token = "0x6000935")]
		[Address(RVA = "0x6CE47C", Offset = "0x6CE47C", VA = "0x6CE47C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B17EC", Offset = "0x4B17EC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000936")]
		[Address(RVA = "0x6CE484", Offset = "0x6CE484", VA = "0x6CE484")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B17FC", Offset = "0x4B17FC")]
		private set
		{
		}
	}

	[Token(Token = "0x14000022")]
	private event OnCheckpointHit onCheckpointHit
	{
		[Token(Token = "0x6000937")]
		[Address(RVA = "0x6CE48C", Offset = "0x6CE48C", VA = "0x6CE48C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B180C", Offset = "0x4B180C")]
		add
		{
		}
		[Token(Token = "0x6000938")]
		[Address(RVA = "0x6CE578", Offset = "0x6CE578", VA = "0x6CE578")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B181C", Offset = "0x4B181C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x6CE664", Offset = "0x6CE664", VA = "0x6CE664")]
	private void Awake()
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x6CE804", Offset = "0x6CE804", VA = "0x6CE804")]
	public void SetPlayerHitCallback(Action<Checkpoint> newOnPlayerHitCallback)
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x6CE80C", Offset = "0x6CE80C", VA = "0x6CE80C")]
	public void AddCheckpointHitCallback(OnCheckpointHit newOnCheckpointHit)
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x6CE810", Offset = "0x6CE810", VA = "0x6CE810")]
	public void RemoveCheckpointHitCallback(OnCheckpointHit oldOnCheckpointHit)
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0x6CE730", Offset = "0x6CE730", VA = "0x6CE730")]
	public static bool TryParseName(string name, out int index)
	{
		return default(bool);
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x6CE814", Offset = "0x6CE814", VA = "0x6CE814")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0x6CF060", Offset = "0x6CF060", VA = "0x6CF060")]
	public Checkpoint()
	{
	}
}
[Token(Token = "0x2000127")]
public class CheckpointTraveller : MonoBehaviour
{
	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int expectedCheckpoint;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int numCheckpoints;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ListenerList listenerList;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Action<Checkpoint> onNextCheckpoint;

	[Token(Token = "0x6000940")]
	[Address(RVA = "0x6CF0B4", Offset = "0x6CF0B4", VA = "0x6CF0B4")]
	public void SetOnNextCheckpoint(Action<Checkpoint> newOnNextCheckpoint)
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x6CF0BC", Offset = "0x6CF0BC", VA = "0x6CF0BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x6CF198", Offset = "0x6CF198", VA = "0x6CF198")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x6CF1C8", Offset = "0x6CF1C8", VA = "0x6CF1C8")]
	private void OnTrackLoaded()
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x6CF250", Offset = "0x6CF250", VA = "0x6CF250")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x6CF348", Offset = "0x6CF348", VA = "0x6CF348")]
	public CheckpointTraveller()
	{
	}
}
[Token(Token = "0x2000128")]
public class GameState : SingleInstanceBehavior<GameState>
{
	[Token(Token = "0x20003ED")]
	private enum State
	{
		[Token(Token = "0x40017FD")]
		Setup,
		[Token(Token = "0x40017FE")]
		TrackSelection,
		[Token(Token = "0x40017FF")]
		LoadTrack,
		[Token(Token = "0x4001800")]
		SpinUpTrack,
		[Token(Token = "0x4001801")]
		Instructions,
		[Token(Token = "0x4001802")]
		Countdown,
		[Token(Token = "0x4001803")]
		Running,
		[Token(Token = "0x4001804")]
		TrackDone,
		[Token(Token = "0x4001805")]
		GameOver
	}

	[Token(Token = "0x20003EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8D64", Offset = "0x4A8D64")]
	private sealed class <>c__DisplayClass56_0
	{
		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TiltWorld currentTiltRoot;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TiltWorld loadedTiltRoot;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameState <>4__this;

		[Token(Token = "0x6001C34")]
		[Address(RVA = "0x721A68", Offset = "0x721A68", VA = "0x721A68")]
		public <>c__DisplayClass56_0()
		{
		}

		[Token(Token = "0x6001C35")]
		[Address(RVA = "0x7232A4", Offset = "0x7232A4", VA = "0x7232A4")]
		internal void <SpinUpNextTrack>b__0(float t)
		{
		}
	}

	[Token(Token = "0x20003EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8D74", Offset = "0x4A8D74")]
	private sealed class <UnloadSceneCoroutine>d__62 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameState <>4__this;

		[Token(Token = "0x170001A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C39")]
			[Address(RVA = "0x723440", Offset = "0x723440", VA = "0x723440", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C3B")]
			[Address(RVA = "0x7234B0", Offset = "0x7234B0", VA = "0x7234B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0x721F94", Offset = "0x721F94", VA = "0x721F94")]
		[DebuggerHidden]
		public <UnloadSceneCoroutine>d__62(int <>1__state)
		{
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0x7233B4", Offset = "0x7233B4", VA = "0x7233B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0x7233B8", Offset = "0x7233B8", VA = "0x7233B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0x723448", Offset = "0x723448", VA = "0x723448", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8D84", Offset = "0x4A8D84")]
	private sealed class <>c
	{
		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Scoreboard.FormatScore <>9__69_0;

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0x723298", Offset = "0x723298", VA = "0x723298")]
		public <>c()
		{
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0x7232A0", Offset = "0x7232A0", VA = "0x7232A0")]
		internal string <ShowScoreboard>b__69_0(float score)
		{
			return null;
		}
	}

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TiltCarAssembler carPrefab;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject carShadowPrefab;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite scoreboardBannerWin;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string winSoundGroup;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Sprite scoreboardBannerLose;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private string loseSoundGroup;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float delayOnTrackDone;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GrabbableObject controller;

	[Token(Token = "0x40007CE")]
	private const string sceneNameOfEmptyTrack = "PidgeyEmpty";

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject menu;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PassAndPlay passAndPlay;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RaceTrackInfo raceTrackInfo;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameStateVisualiser gameStateVisualiser;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Laplimit lapLimit;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private CarBall carBall;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private TiltCarAssembler carRoot;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private TiltWorld currentTiltRoot;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private TiltWorld lastTiltRoot;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private UIBoard instructions;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private PickupSpawner pickupSpawner;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private TiltEdgeBetweenTracks edgeBetweenTracks;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private State currentState;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float totalTimeForTrack;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private AsyncOperation loadSceneOperation;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string loadedTrackName;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private string previousLoadedTrackName;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int trackIndex;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private int challengeIndex;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int lapCount;

	[Token(Token = "0x40007E3")]
	private const int challengeIndexOnPassAndPlay = 2000;

	[Token(Token = "0x40007E4")]
	private const int challengeIndexOnboarding = 1000;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private int checkpointWinDelta;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool playerWonChallenge;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private FinalScore finalScore;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float previousFixedDeltaTime;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Transform startingTransform;

	[Token(Token = "0x40007EA")]
	private const float transitionDuration = 2f;

	[Token(Token = "0x17000091")]
	public int currentTrackIndex
	{
		[Token(Token = "0x6000946")]
		[Address(RVA = "0x720474", Offset = "0x720474", VA = "0x720474")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x72047C", Offset = "0x72047C", VA = "0x72047C", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x7204EC", Offset = "0x7204EC", VA = "0x7204EC", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x72071C", Offset = "0x72071C", VA = "0x72071C")]
	private void Start()
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x720AEC", Offset = "0x720AEC", VA = "0x720AEC")]
	private void Update()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x720DB0", Offset = "0x720DB0", VA = "0x720DB0")]
	private bool IsBackButtonEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x720A8C", Offset = "0x720A8C", VA = "0x720A8C")]
	private void GotoSetup()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x720B98", Offset = "0x720B98", VA = "0x720B98")]
	private void LeaveSetup()
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x720DB8", Offset = "0x720DB8", VA = "0x720DB8")]
	private void SetLoadedTrackAsCurrentTiltRoot()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x721080", Offset = "0x721080", VA = "0x721080")]
	public CarBall GetCarBall()
	{
		return null;
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x720EE8", Offset = "0x720EE8", VA = "0x720EE8")]
	public void SelectTrack(int trackIndex, int challengeIndex)
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x721088", Offset = "0x721088", VA = "0x721088")]
	private void GotoLoadTrack()
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x721278", Offset = "0x721278", VA = "0x721278")]
	private void LoadTrack()
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x720C6C", Offset = "0x720C6C", VA = "0x720C6C")]
	private void LevelTrackLoaded()
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x7212A8", Offset = "0x7212A8", VA = "0x7212A8")]
	private void GotoSpinUpTrack()
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x721448", Offset = "0x721448", VA = "0x721448")]
	private void SpawnCar()
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x72196C", Offset = "0x72196C", VA = "0x72196C")]
	private void OnPlayerCheckpoint(Checkpoint cp)
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x7217CC", Offset = "0x7217CC", VA = "0x7217CC")]
	private LTDescr SpinUpNextTrack(TiltWorld currentTiltRoot, TiltWorld loadedTiltRoot)
	{
		return null;
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0x721A70", Offset = "0x721A70", VA = "0x721A70")]
	private void OnTrackSpinUpComplete()
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x721B60", Offset = "0x721B60", VA = "0x721B60")]
	public void PrepareChallenge()
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x721D68", Offset = "0x721D68", VA = "0x721D68")]
	private void GotoInstructions()
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x721E0C", Offset = "0x721E0C", VA = "0x721E0C")]
	private InputManager.CallbackResult OnClickButtonPressed()
	{
		return default(InputManager.CallbackResult);
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0x720D0C", Offset = "0x720D0C", VA = "0x720D0C")]
	private void LeaveInstructions()
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0x721CF4", Offset = "0x721CF4", VA = "0x721CF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B182C", Offset = "0x4B182C")]
	private IEnumerator UnloadSceneCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x721E1C", Offset = "0x721E1C", VA = "0x721E1C")]
	private void GotoCountdownState()
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0x721FF4", Offset = "0x721FF4", VA = "0x721FF4")]
	private void GotoRacingState()
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x722338", Offset = "0x722338", VA = "0x722338")]
	private void GotoTrackDoneState()
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x7227AC", Offset = "0x7227AC", VA = "0x7227AC")]
	private void EndGame()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0x7228B4", Offset = "0x7228B4", VA = "0x7228B4")]
	private void EndGameSinglePlayer()
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0x72281C", Offset = "0x72281C", VA = "0x72281C")]
	private void EndGameMultiplayer()
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0x722BA4", Offset = "0x722BA4", VA = "0x722BA4")]
	private void ShowScoreboard()
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0x722FC0", Offset = "0x722FC0", VA = "0x722FC0")]
	private void QuitWithoutScoreboard()
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0x722A6C", Offset = "0x722A6C", VA = "0x722A6C")]
	private void GotoGameOver()
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0x722FC8", Offset = "0x722FC8", VA = "0x722FC8")]
	private void OnLapDone()
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0x72220C", Offset = "0x72220C", VA = "0x72220C")]
	private void RefreshLapIndicator()
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x722FD8", Offset = "0x722FD8", VA = "0x722FD8")]
	private static string GetTimeAsString(float seconds)
	{
		return null;
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0x7226C0", Offset = "0x7226C0", VA = "0x7226C0")]
	private static float RoundTime(float time)
	{
		return default(float);
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x723110", Offset = "0x723110", VA = "0x723110")]
	public GameState()
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x7231A0", Offset = "0x7231A0", VA = "0x7231A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1890", Offset = "0x4B1890")]
	private void <GotoLoadTrack>b__50_0()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x723230", Offset = "0x723230", VA = "0x723230")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B18A0", Offset = "0x4B18A0")]
	private void <GotoTrackDoneState>b__65_0()
	{
	}
}
[Token(Token = "0x2000129")]
public class HoleRespawnTrigger : MonoBehaviour
{
	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform RespawnPos;

	[Token(Token = "0x600096E")]
	[Address(RVA = "0x7351D8", Offset = "0x7351D8", VA = "0x7351D8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x7352A8", Offset = "0x7352A8", VA = "0x7352A8")]
	public HoleRespawnTrigger()
	{
	}
}
[Token(Token = "0x200012A")]
public class Laplimit : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8D94", Offset = "0x4A8D94")]
	private sealed class <>c
	{
		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<Checkpoint> <>9__20_0;

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0x73F94C", Offset = "0x73F94C", VA = "0x73F94C")]
		public <>c()
		{
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0x73F954", Offset = "0x73F954", VA = "0x73F954")]
		internal int <FindCheckpoints>b__20_0(Checkpoint a, Checkpoint b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int numLaps;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Checkpoint[] checkpoints;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Action raceDoneCallback;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Action lapDoneCallback;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int nextCheckpoint;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int lapsRaced;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int lapsLeft;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool running;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float lapTime;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float totalTime;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ListenerList listenerList;

	[Token(Token = "0x17000092")]
	public bool IsRunning
	{
		[Token(Token = "0x6000970")]
		[Address(RVA = "0x73F414", Offset = "0x73F414", VA = "0x73F414")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x73F41C", Offset = "0x73F41C", VA = "0x73F41C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x73F534", Offset = "0x73F534", VA = "0x73F534")]
	private void OnTrackLoaded()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0x73F720", Offset = "0x73F720", VA = "0x73F720")]
	public void StartLaplimit(Action newRaceDoneCallback, Action newLapDoneCallback)
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x73F740", Offset = "0x73F740", VA = "0x73F740")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x73F748", Offset = "0x73F748", VA = "0x73F748")]
	public void OverrideTotalNumberOfLaps(int newNumLaps)
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0x73F750", Offset = "0x73F750", VA = "0x73F750")]
	public float GetTotalTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x73F758", Offset = "0x73F758", VA = "0x73F758")]
	public int GetTotalNumberOfLaps()
	{
		return default(int);
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x73F538", Offset = "0x73F538", VA = "0x73F538")]
	private void FindCheckpoints()
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x73F760", Offset = "0x73F760", VA = "0x73F760")]
	private void Update()
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x73F838", Offset = "0x73F838", VA = "0x73F838")]
	private void OnCheckpointHit(Checkpoint hitCheckpoint)
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x73F8E0", Offset = "0x73F8E0", VA = "0x73F8E0")]
	public Laplimit()
	{
	}
}
[Token(Token = "0x200012B")]
public class PickupSpawner : MonoBehaviour
{
	[Token(Token = "0x20003F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8DA4", Offset = "0x4A8DA4")]
	private sealed class <SpawnPickupWithDelay>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PickupSpawner <>4__this;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int index;

		[Token(Token = "0x170001AA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C45")]
			[Address(RVA = "0x658AA8", Offset = "0x658AA8", VA = "0x658AA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C47")]
			[Address(RVA = "0x658B18", Offset = "0x658B18", VA = "0x658B18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0x6587C8", Offset = "0x6587C8", VA = "0x6587C8")]
		[DebuggerHidden]
		public <SpawnPickupWithDelay>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0x658964", Offset = "0x658964", VA = "0x658964", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0x658968", Offset = "0x658968", VA = "0x658968", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0x658AB0", Offset = "0x658AB0", VA = "0x658AB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007F7")]
	private const int maxCollectedPickupsPerTrack = 8;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TicketPickup[] pickups;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int indexToSpawn;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int numPickupsInWorld;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int pickupsCollected;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator pickupSpawnerCoroutine;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ListenerList listenerList;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float timeSinceLastPickupSpawnInSeconds;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool canSpawnPickup;

	[Token(Token = "0x4000800")]
	private const float pickupSpawnDelay = 0.25f;

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x658378", Offset = "0x658378", VA = "0x658378")]
	private void Start()
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x6584B0", Offset = "0x6584B0", VA = "0x6584B0")]
	private void OnTrackLoaded()
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x65853C", Offset = "0x65853C", VA = "0x65853C")]
	private TicketPickup[] Shuffle(TicketPickup[] array)
	{
		return null;
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x658684", Offset = "0x658684", VA = "0x658684")]
	private void OnRaceTrackFinished()
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x658698", Offset = "0x658698", VA = "0x658698")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x6586C8", Offset = "0x6586C8", VA = "0x6586C8")]
	private void SpawnNewPickup()
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x658730", Offset = "0x658730", VA = "0x658730")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B18B0", Offset = "0x4B18B0")]
	private IEnumerator SpawnPickupWithDelay(int index)
	{
		return null;
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x6587F4", Offset = "0x6587F4", VA = "0x6587F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x6588BC", Offset = "0x6588BC", VA = "0x6588BC")]
	public void OnPickup(TicketPickup pickup, bool pickedUpByPlayer)
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x658954", Offset = "0x658954", VA = "0x658954")]
	public int GetNumberOfCollectedTickets()
	{
		return default(int);
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x65895C", Offset = "0x65895C", VA = "0x65895C")]
	public PickupSpawner()
	{
	}
}
[Token(Token = "0x200012C")]
public class PidgeyFallTrigger : MonoBehaviour
{
	[Token(Token = "0x6000987")]
	[Address(RVA = "0x65ACA8", Offset = "0x65ACA8", VA = "0x65ACA8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x65AD64", Offset = "0x65AD64", VA = "0x65AD64")]
	public PidgeyFallTrigger()
	{
	}
}
[Token(Token = "0x200012D")]
public class RaceTrackInfo : MonoBehaviour
{
	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x4AB860", Offset = "0x4AB860")]
	public CountdownTrackStarter countdownTrackStarter;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TrackChallenges trackChallenges;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TiltCarReplayPlaybackController replayController;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] lapIndicator;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject winObject;

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x696B2C", Offset = "0x696B2C", VA = "0x696B2C")]
	public RaceTrackInfo()
	{
	}
}
[Token(Token = "0x200012E")]
public class PidgeySelectTrackItem : SelectableItem
{
	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	public int trackIndex;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject[] challengeIndicator;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int numChallenges;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int currentChallenge;

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x65AD6C", Offset = "0x65AD6C", VA = "0x65AD6C")]
	private void Start()
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x65A868", Offset = "0x65A868", VA = "0x65A868")]
	public void UpdateVisuals()
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x65AFA8", Offset = "0x65AFA8", VA = "0x65AFA8")]
	private void LockVisually()
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x65AFA0", Offset = "0x65AFA0", VA = "0x65AFA0")]
	private void UnlockVisually()
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x65AFB0", Offset = "0x65AFB0", VA = "0x65AFB0")]
	private void SetCanvasElementsLocked(bool locked)
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0x65AEC8", Offset = "0x65AEC8", VA = "0x65AEC8")]
	private void TurnIndicatorOn(int challengeIndex)
	{
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x65AF34", Offset = "0x65AF34", VA = "0x65AF34")]
	private void TurnIndicatorOff(int challengeIndex)
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0x65B1E0", Offset = "0x65B1E0", VA = "0x65B1E0", Slot = "6")]
	public override void Select()
	{
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x65B404", Offset = "0x65B404", VA = "0x65B404")]
	public PidgeySelectTrackItem()
	{
	}
}
[Token(Token = "0x200012F")]
public class PidgeySignals
{
	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Signal GameStart;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly Signal GameFinished;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly Signal TrackSetupComplete;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly Signal RaceTrackFinished;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly Signal<float> raceTimeUpdated;

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x65B40C", Offset = "0x65B40C", VA = "0x65B40C")]
	public PidgeySignals()
	{
	}
}
[Token(Token = "0x2000130")]
public class CarBall : MonoBehaviour
{
	[Token(Token = "0x20003F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8DB4", Offset = "0x4A8DB4")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CarBall <>4__this;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action OnSlowdownComplete;

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0x6CC368", Offset = "0x6CC368", VA = "0x6CC368")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0x6CDC1C", Offset = "0x6CDC1C", VA = "0x6CDC1C")]
		internal void <SlowdownOnTrackFinished>b__0(float val)
		{
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0x6CDC54", Offset = "0x6CDC54", VA = "0x6CDC54")]
		internal void <SlowdownOnTrackFinished>b__1()
		{
		}
	}

	[Token(Token = "0x20003F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8DC4", Offset = "0x4A8DC4")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform toTransform;

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CarBall <>4__this;

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 fromPosition;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float jumpHeight;

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0x6CC57C", Offset = "0x6CC57C", VA = "0x6CC57C")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0x6CDC68", Offset = "0x6CDC68", VA = "0x6CDC68")]
		internal void <TweenToTransform>b__0(float t)
		{
		}
	}

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public ParticlePool particlePool;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public CarBallShadow carBallShadow;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float radius;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x4AB8D8", Offset = "0x4AB8D8")]
	[SerializeField]
	private float rollingForce;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AB924", Offset = "0x4AB924")]
	[SerializeField]
	private float boostForce;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AnimationCurve boost;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AB980", Offset = "0x4AB980")]
	[SerializeField]
	private float boostLength;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AB9CC", Offset = "0x4AB9CC")]
	[SerializeField]
	private float boostParticleLength;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4ABA18", Offset = "0x4ABA18")]
	[SerializeField]
	private float waitBetweenBoosts;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4ABA64", Offset = "0x4ABA64")]
	[SerializeField]
	private float verticalBoost;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4ABAB0", Offset = "0x4ABAB0")]
	[SerializeField]
	private float minDirtVelocity;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float minGrassVelocity;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Rigidbody myRigidbody;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float lastCollisionTime;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float boostStartTime;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isBoosting;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Animator visualAnimator;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float lastParticleTime;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float minTimeBetweenParticles;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float minTimeBetweenParticlesBoosting;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Dictionary<RacingParticleDefinition.Type, RacingParticleDefinition> particleDefinitionsDict;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float racingRollingForce;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float slowDownTime;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float slowdownTargetValue;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool isFalling;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Transform fallRespawnPos;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float fallRespawnActivateCountdown;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool isFallRespawning;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float fallRespawnWarmup;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Renderer skinRenderer;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool waitForClickRelease;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 boostDirection;

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x6CBDA0", Offset = "0x6CBDA0", VA = "0x6CBDA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x6CBE24", Offset = "0x6CBE24", VA = "0x6CBE24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x6CBF78", Offset = "0x6CBF78", VA = "0x6CBF78")]
	public void PlayOnTrack(Transform startingTransform)
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x6CC118", Offset = "0x6CC118", VA = "0x6CC118")]
	public void SlowdownOnTrackFinished(Action OnSlowdownComplete)
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x6CC370", Offset = "0x6CC370", VA = "0x6CC370")]
	public void RestOnTrack()
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x6CC3A4", Offset = "0x6CC3A4", VA = "0x6CC3A4")]
	public LTDescr TweenToTransform(Transform toTransform, float time, float jumpHeight)
	{
		return null;
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x6CC584", Offset = "0x6CC584", VA = "0x6CC584")]
	private void Update()
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x6CC038", Offset = "0x6CC038", VA = "0x6CC038")]
	public void SetFallRespawnPoint(Transform t)
	{
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x6CC950", Offset = "0x6CC950", VA = "0x6CC950")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x6CD158", Offset = "0x6CD158", VA = "0x6CD158")]
	private void ShowParticleWithHeightDisplacement(RacingParticleDefinition.Type type)
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x6CD330", Offset = "0x6CD330", VA = "0x6CD330")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x6CCFF8", Offset = "0x6CCFF8", VA = "0x6CCFF8")]
	private Vector3 GetCurrentBoost()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x6CD65C", Offset = "0x6CD65C", VA = "0x6CD65C")]
	public void TryBoost(Hand hand)
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x6CD974", Offset = "0x6CD974", VA = "0x6CD974")]
	public void FallOfTrack()
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x6CC6E8", Offset = "0x6CC6E8", VA = "0x6CC6E8")]
	private void RespawnAfterFall()
	{
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x6CDB30", Offset = "0x6CDB30", VA = "0x6CDB30")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x6CDBAC", Offset = "0x6CDBAC", VA = "0x6CDBAC")]
	public CarBall()
	{
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0x6CDC14", Offset = "0x6CDC14", VA = "0x6CDC14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1914", Offset = "0x4B1914")]
	private void <TryBoost>b__44_0()
	{
	}
}
[Token(Token = "0x2000131")]
public class CarBallShadow : MonoBehaviour
{
	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform targetToFollow;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float lockedHeight;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform myTransform;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 initialScale;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Quaternion initialRotation;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer shadowRenderer;

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0x6CDDE0", Offset = "0x6CDDE0", VA = "0x6CDDE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0x6CC040", Offset = "0x6CC040", VA = "0x6CC040")]
	public void EnableShadow(Transform parentTransform)
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x6CDAFC", Offset = "0x6CDAFC", VA = "0x6CDAFC")]
	public void Show()
	{
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0x6CDAC8", Offset = "0x6CDAC8", VA = "0x6CDAC8")]
	public void Hide()
	{
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0x6CDE8C", Offset = "0x6CDE8C", VA = "0x6CDE8C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x6CDF74", Offset = "0x6CDF74", VA = "0x6CDF74")]
	public CarBallShadow()
	{
	}
}
[Token(Token = "0x2000132")]
public class RacingParticleDefinition : MonoBehaviour
{
	[Token(Token = "0x20003F5")]
	public enum Type
	{
		[Token(Token = "0x400181B")]
		Dirt,
		[Token(Token = "0x400181C")]
		Grass,
		[Token(Token = "0x400181D")]
		BoostTrail,
		[Token(Token = "0x400181E")]
		BoostStart
	}

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Type type;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 spawnDiscplacement;

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x696B34", Offset = "0x696B34", VA = "0x696B34")]
	public RacingParticleDefinition()
	{
	}
}
[Token(Token = "0x2000133")]
public class TiltCarAssembler : MonoBehaviour
{
	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x81FE58", Offset = "0x81FE58", VA = "0x81FE58")]
	public void SpawnFromDefinition(PidgeyCarDefinition definition, GameObject carShadowPrefab)
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x82012C", Offset = "0x82012C", VA = "0x82012C")]
	public TiltCarAssembler()
	{
	}
}
[Token(Token = "0x2000134")]
public class TiltEdgeBetweenTracks : MonoBehaviour
{
	[NonSerialized]
	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rotationOffset;

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x82110C", Offset = "0x82110C", VA = "0x82110C")]
	private void Update()
	{
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x821224", Offset = "0x821224", VA = "0x821224")]
	public TiltEdgeBetweenTracks()
	{
	}
}
[Token(Token = "0x2000135")]
public class TiltWorld : MonoBehaviour
{
	[NonSerialized]
	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rotationOffset;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool hiddenAtStart;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform myTransform;

	[Token(Token = "0x400083B")]
	private const float angleHiddenStart = 180f;

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x82122C", Offset = "0x82122C", VA = "0x82122C")]
	private void Start()
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x821310", Offset = "0x821310", VA = "0x821310")]
	private void Update()
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x82141C", Offset = "0x82141C", VA = "0x82141C")]
	public TiltWorld()
	{
	}
}
[Token(Token = "0x2000136")]
public class AnimalSoundListener : MonoBehaviour
{
	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x6B6940", Offset = "0x6B6940", VA = "0x6B6940")]
	public void SheepLeapCallBack()
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x6B69E0", Offset = "0x6B69E0", VA = "0x6B69E0")]
	public AnimalSoundListener()
	{
	}
}
[Token(Token = "0x2000137")]
public class CountdownTrackStarter : MonoBehaviour
{
	[Token(Token = "0x20003F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8DD4", Offset = "0x4A8DD4")]
	private sealed class <CountdownSequence>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CountdownTrackStarter <>4__this;

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action doneCallback;

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForSeconds <wait>5__2;

		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__3;

		[Token(Token = "0x170001AC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C50")]
			[Address(RVA = "0x6D9DD8", Offset = "0x6D9DD8", VA = "0x6D9DD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C52")]
			[Address(RVA = "0x6D9E48", Offset = "0x6D9E48", VA = "0x6D9E48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0x6D9A54", Offset = "0x6D9A54", VA = "0x6D9A54")]
		[DebuggerHidden]
		public <CountdownSequence>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0x6D9ABC", Offset = "0x6D9ABC", VA = "0x6D9ABC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0x6D9AC0", Offset = "0x6D9AC0", VA = "0x6D9AC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0x6D9DE0", Offset = "0x6D9DE0", VA = "0x6D9DE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] countdownReds;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject[] countdownGreens;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject myGameObject;

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x6D96D4", Offset = "0x6D96D4", VA = "0x6D96D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x6D97D4", Offset = "0x6D97D4", VA = "0x6D97D4")]
	public void Hide()
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x6D995C", Offset = "0x6D995C", VA = "0x6D995C")]
	public void StartCountdown(Action doneCallback)
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x6D99BC", Offset = "0x6D99BC", VA = "0x6D99BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B1924", Offset = "0x4B1924")]
	private IEnumerator CountdownSequence(Action doneCallback)
	{
		return null;
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x6D9A80", Offset = "0x6D9A80", VA = "0x6D9A80")]
	public CountdownTrackStarter()
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x6D9A88", Offset = "0x6D9A88", VA = "0x6D9A88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1988", Offset = "0x4B1988")]
	private void <Hide>b__4_0()
	{
	}
}
[Token(Token = "0x2000138")]
public class GameStateVisualiser : SingleInstanceBehavior<GameStateVisualiser>
{
	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource overAudio;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject myGameObject;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Text t;

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x7234B8", Offset = "0x7234B8", VA = "0x7234B8", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x721FC0", Offset = "0x721FC0", VA = "0x721FC0")]
	public void Hide()
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x722618", Offset = "0x722618", VA = "0x722618")]
	public void ShowRestart()
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x723540", Offset = "0x723540", VA = "0x723540")]
	public GameStateVisualiser()
	{
	}
}
[Token(Token = "0x2000139")]
public class GateOpener : MonoBehaviour
{
	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool westEastGateClosed;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator gateAnimator;

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x7235B0", Offset = "0x7235B0", VA = "0x7235B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x7235B4", Offset = "0x7235B4", VA = "0x7235B4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x723670", Offset = "0x723670", VA = "0x723670")]
	public GateOpener()
	{
	}
}
[Token(Token = "0x200013A")]
public class ParticleRandomSeed : MonoBehaviour
{
	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem particles;

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x70891C", Offset = "0x70891C", VA = "0x70891C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x708974", Offset = "0x708974", VA = "0x708974")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x708A04", Offset = "0x708A04", VA = "0x708A04")]
	public ParticleRandomSeed()
	{
	}
}
[Token(Token = "0x200013B")]
public class PidgeyTimeboard : MonoBehaviour
{
	[Token(Token = "0x20003F7")]
	private class SteppingWheel
	{
		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Transform transform;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Quaternion originalRotation;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AnimationCurve rollAnimation;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float animationLength;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int targetDigit;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float currentAngle;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float animationTime;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float startAngle;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float endAngle;

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0x65B8E4", Offset = "0x65B8E4", VA = "0x65B8E4")]
		public SteppingWheel(Transform transform, AnimationCurve rollAnimation, float animationLength)
		{
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0x65BFBC", Offset = "0x65BFBC", VA = "0x65BFBC")]
		public void ScrollToDigit(int digit)
		{
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0x65BB14", Offset = "0x65BB14", VA = "0x65BB14")]
		public void Update(float deltaTime)
		{
		}
	}

	[Token(Token = "0x20003F8")]
	private struct FreeSpinningWheel
	{
		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform transform;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Quaternion originalRotation;

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0x507B0C", Offset = "0x507B0C", VA = "0x507B0C")]
		public FreeSpinningWheel(Transform transform)
		{
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0x507B14", Offset = "0x507B14", VA = "0x507B14")]
		public void SetDigitWithFraction(float digit)
		{
		}
	}

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4ABB5C", Offset = "0x4ABB5C")]
	[SerializeField]
	private AnimationCurve slowRollAnimation;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4ABBA8", Offset = "0x4ABBA8")]
	[SerializeField]
	private AnimationCurve fastRollAnimation;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float minutesWheelsAnimationLength;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float secondsWheelsAnimationLength;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4ABC14", Offset = "0x4ABC14")]
	private float tenthsWheelAnimationLength;

	[Token(Token = "0x400084A")]
	private const float degreesPerDigit = 36f;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SteppingWheel wheel0;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SteppingWheel wheel1;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SteppingWheel wheel2;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SteppingWheel wheel3;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SteppingWheel wheel4;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private FreeSpinningWheel wheel5;

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x65B5A4", Offset = "0x65B5A4", VA = "0x65B5A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x65B994", Offset = "0x65B994", VA = "0x65B994")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x65BA5C", Offset = "0x65BA5C", VA = "0x65BA5C")]
	private void Update()
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x65BCF4", Offset = "0x65BCF4", VA = "0x65BCF4")]
	private void OnRaceTimeUpdated(float seconds)
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x65C088", Offset = "0x65C088", VA = "0x65C088")]
	public PidgeyTimeboard()
	{
	}
}
[Token(Token = "0x200013C")]
public class SheepMovement : MonoBehaviour
{
	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x6A4B3C", Offset = "0x6A4B3C", VA = "0x6A4B3C")]
	private void Start()
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x6A4B40", Offset = "0x6A4B40", VA = "0x6A4B40")]
	private void Update()
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x6A4B44", Offset = "0x6A4B44", VA = "0x6A4B44")]
	public SheepMovement()
	{
	}
}
[Token(Token = "0x200013D")]
public class BirdMovement : MonoBehaviour
{
	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float minXArc;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float maxXArc;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float minZArc;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float maxZArc;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float minSpeed;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float maxSpeed;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Vector3 endPositionOrigin;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 endPosition;

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x6C46EC", Offset = "0x6C46EC", VA = "0x6C46EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x6C47F8", Offset = "0x6C47F8", VA = "0x6C47F8")]
	public void Fly(Action onFlightComplete)
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x6C4C74", Offset = "0x6C4C74", VA = "0x6C4C74")]
	public BirdMovement()
	{
	}
}
[Token(Token = "0x200013E")]
public class BirdTrigger : MonoBehaviour
{
	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ShyBird[] birds;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Collider triggerCollider;

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x6C4CEC", Offset = "0x6C4CEC", VA = "0x6C4CEC")]
	private void Start()
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x6C4D5C", Offset = "0x6C4D5C", VA = "0x6C4D5C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x6C4E7C", Offset = "0x6C4E7C", VA = "0x6C4E7C")]
	public BirdTrigger()
	{
	}
}
[Token(Token = "0x200013F")]
public class ShyBird : MonoBehaviour
{
	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject seatedBird;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject flyingBird;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private BirdMovement birdMovement;

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x6A520C", Offset = "0x6A520C", VA = "0x6A520C")]
	private void Start()
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x6A52A4", Offset = "0x6A52A4", VA = "0x6A52A4")]
	public void TakeFlight()
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x6A53EC", Offset = "0x6A53EC", VA = "0x6A53EC")]
	public ShyBird()
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x6A53F4", Offset = "0x6A53F4", VA = "0x6A53F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1998", Offset = "0x4B1998")]
	private void <TakeFlight>b__4_0()
	{
	}
}
[Token(Token = "0x2000140")]
public class TrackPhysicsType : MonoBehaviour
{
	[Token(Token = "0x20003F9")]
	public enum Type
	{
		[Token(Token = "0x4001831")]
		DirtRoad,
		[Token(Token = "0x4001832")]
		Grass
	}

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Type type;

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x824B18", Offset = "0x824B18", VA = "0x824B18")]
	public Type getGroundType()
	{
		return default(Type);
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x824B20", Offset = "0x824B20", VA = "0x824B20")]
	public float GetDrag()
	{
		return default(float);
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x824B38", Offset = "0x824B38", VA = "0x824B38")]
	public TrackPhysicsType()
	{
	}
}
[Token(Token = "0x2000141")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4A8518", Offset = "0x4A8518")]
public class VelocityToSound : MonoBehaviour
{
	[Token(Token = "0x20003FA")]
	public enum OutType
	{
		[Token(Token = "0x4001834")]
		Volume,
		[Token(Token = "0x4001835")]
		Pitch
	}

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string groupName;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private OutType outType;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float outMin;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float outMax;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float velocityMin;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float velocityMax;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AnimationCurve curve;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private int smoothSamples;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Rigidbody myRigidBody;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float velocityRange;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float soundRange;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float velocitySmoothValue;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float velocitySmoothSamples;

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x828BA4", Offset = "0x828BA4", VA = "0x828BA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x828C20", Offset = "0x828C20", VA = "0x828C20")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x828D84", Offset = "0x828D84", VA = "0x828D84")]
	private float GetOutValue()
	{
		return default(float);
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x828D60", Offset = "0x828D60", VA = "0x828D60")]
	private void SmoothSamples(float newSample)
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x828E30", Offset = "0x828E30", VA = "0x828E30")]
	public VelocityToSound()
	{
	}
}
[Token(Token = "0x2000142")]
public class FlipperSparkEmission : SingleInstanceBehavior<FlipperSparkEmission>
{
	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject particleObj;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem particleSys;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem.EmissionModule emission;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Collider emitterCollider;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool wheelIsSpinning;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float emitCountdown;

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x71E1C0", Offset = "0x71E1C0", VA = "0x71E1C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x71E344", Offset = "0x71E344", VA = "0x71E344")]
	private void Update()
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x71E3C0", Offset = "0x71E3C0", VA = "0x71E3C0")]
	private void OnWheelSpinStarted()
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x71E3CC", Offset = "0x71E3CC", VA = "0x71E3CC")]
	private void OnWheelSpinStopped()
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x71E3D4", Offset = "0x71E3D4", VA = "0x71E3D4")]
	private void OnCollisionEnter(Collision coll)
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x71E55C", Offset = "0x71E55C", VA = "0x71E55C")]
	public void TurnOff()
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x71E5D0", Offset = "0x71E5D0", VA = "0x71E5D0", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x71E6F0", Offset = "0x71E6F0", VA = "0x71E6F0")]
	public FlipperSparkEmission()
	{
	}
}
[Token(Token = "0x2000143")]
public class Lamp : MonoBehaviour
{
	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject halo;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject unlit;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject lit;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isLit;

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x73F2AC", Offset = "0x73F2AC", VA = "0x73F2AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x73F350", Offset = "0x73F350", VA = "0x73F350")]
	public void power(bool powerOn)
	{
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x73F368", Offset = "0x73F368", VA = "0x73F368")]
	public void turnOn()
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x73F348", Offset = "0x73F348", VA = "0x73F348")]
	public void turnOff()
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x73F374", Offset = "0x73F374", VA = "0x73F374")]
	private void updateChildrenActiveStatus()
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0x73F40C", Offset = "0x73F40C", VA = "0x73F40C")]
	public Lamp()
	{
	}
}
[Token(Token = "0x2000144")]
public class PsyduckSpotlight : MonoBehaviour
{
	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int ANIMID_LIGHTON;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int ANIMID_WIN;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator animator;

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0x9CECFC", Offset = "0x9CECFC", VA = "0x9CECFC")]
	private void Start()
	{
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x9CBD74", Offset = "0x9CBD74", VA = "0x9CBD74")]
	public void TurnOn()
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x9CED54", Offset = "0x9CED54", VA = "0x9CED54")]
	public void TurnOff()
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x9CBFEC", Offset = "0x9CBFEC", VA = "0x9CBFEC")]
	public void SetWin(bool win)
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x9CEDE0", Offset = "0x9CEDE0", VA = "0x9CEDE0")]
	public PsyduckSpotlight()
	{
	}
}
[Token(Token = "0x2000145")]
public class WheelLamps : MonoBehaviour
{
	[Token(Token = "0x20003FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8DE4", Offset = "0x4A8DE4")]
	private sealed class <LightSuccessfulSpinCoroutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WheelLamps <>4__this;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timeBetweenFlashes>5__2;

		[Token(Token = "0x170001AE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C5B")]
			[Address(RVA = "0x82FE48", Offset = "0x82FE48", VA = "0x82FE48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C5D")]
			[Address(RVA = "0x82FEB8", Offset = "0x82FEB8", VA = "0x82FEB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0x82F570", Offset = "0x82F570", VA = "0x82F570")]
		[DebuggerHidden]
		public <LightSuccessfulSpinCoroutine>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0x82FBAC", Offset = "0x82FBAC", VA = "0x82FBAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0x82FBB0", Offset = "0x82FBB0", VA = "0x82FBB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0x82FE50", Offset = "0x82FE50", VA = "0x82FE50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8DF4", Offset = "0x4A8DF4")]
	private sealed class <LightFailedSpinCoroutine>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float percentage;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WheelLamps <>4__this;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <numberOfLampstoLight>5__2;

		[Token(Token = "0x170001B0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C61")]
			[Address(RVA = "0x82FB34", Offset = "0x82FB34", VA = "0x82FB34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C63")]
			[Address(RVA = "0x82FBA4", Offset = "0x82FBA4", VA = "0x82FBA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0x82F720", Offset = "0x82F720", VA = "0x82F720")]
		[DebuggerHidden]
		public <LightFailedSpinCoroutine>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0x82F8EC", Offset = "0x82F8EC", VA = "0x82F8EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0x82F8F0", Offset = "0x82F8F0", VA = "0x82F8F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0x82FB3C", Offset = "0x82FB3C", VA = "0x82FB3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8E04", Offset = "0x4A8E04")]
	private sealed class <TurnOnSideLights>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WheelLamps <>4__this;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int numberOfLampsToLight;

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__2;

		[Token(Token = "0x170001B2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C67")]
			[Address(RVA = "0x830250", Offset = "0x830250", VA = "0x830250", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C69")]
			[Address(RVA = "0x8302C0", Offset = "0x8302C0", VA = "0x8302C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0x82F7E4", Offset = "0x82F7E4", VA = "0x82F7E4")]
		[DebuggerHidden]
		public <TurnOnSideLights>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0x8300BC", Offset = "0x8300BC", VA = "0x8300BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0x8300C0", Offset = "0x8300C0", VA = "0x8300C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0x830258", Offset = "0x830258", VA = "0x830258", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8E14", Offset = "0x4A8E14")]
	private sealed class <TurnOffSideLightsInversed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int firstIndex;

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WheelLamps <>4__this;

		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__2;

		[Token(Token = "0x170001B4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C6D")]
			[Address(RVA = "0x830044", Offset = "0x830044", VA = "0x830044", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C6F")]
			[Address(RVA = "0x8300B4", Offset = "0x8300B4", VA = "0x8300B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0x82F8A8", Offset = "0x82F8A8", VA = "0x82F8A8")]
		[DebuggerHidden]
		public <TurnOffSideLightsInversed>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0x82FEC0", Offset = "0x82FEC0", VA = "0x82FEC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0x82FEC4", Offset = "0x82FEC4", VA = "0x82FEC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0x83004C", Offset = "0x83004C", VA = "0x83004C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float timeBetweenLamps;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float timeIncreaseBetweenFlashes;

	[NonSerialized]
	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isGameOver;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Lamp[] leftLamps;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Lamp midLamp;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Lamp[] rightLamps;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Lamp> allLampsLeftoRight;

	[Token(Token = "0x4000880")]
	private const float flashTimeIncreaseExponent = 1.25f;

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x82F0A0", Offset = "0x82F0A0", VA = "0x82F0A0")]
	private void Start()
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x82F274", Offset = "0x82F274", VA = "0x82F274")]
	public void LightWheelOnGrab()
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x82F29C", Offset = "0x82F29C", VA = "0x82F29C")]
	private void ResetLightsOnGrab()
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x82F40C", Offset = "0x82F40C", VA = "0x82F40C")]
	public void LightSuccessfulSpin()
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x82F4AC", Offset = "0x82F4AC", VA = "0x82F4AC")]
	public void LightFailedSpin(float percentageToSuccessfulSpin)
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x82F438", Offset = "0x82F438", VA = "0x82F438")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B19A8", Offset = "0x4B19A8")]
	private IEnumerator LightSuccessfulSpinCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x82F59C", Offset = "0x82F59C", VA = "0x82F59C")]
	private float IncreaseFlashTime(float timeBetweenFlashes)
	{
		return default(float);
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0x82F62C", Offset = "0x82F62C", VA = "0x82F62C")]
	private void LightPatternEveryOther(bool value)
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0x82F4D8", Offset = "0x82F4D8", VA = "0x82F4D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B1A0C", Offset = "0x4B1A0C")]
	private IEnumerator LightFailedSpinCoroutine(float percentage)
	{
		return null;
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0x82F74C", Offset = "0x82F74C", VA = "0x82F74C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B1A70", Offset = "0x4B1A70")]
	private IEnumerator TurnOnSideLights(int numberOfLampsToLight)
	{
		return null;
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x82F810", Offset = "0x82F810", VA = "0x82F810")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B1AD4", Offset = "0x4B1AD4")]
	private IEnumerator TurnOffSideLightsInversed(int firstIndex)
	{
		return null;
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x82F8D4", Offset = "0x82F8D4", VA = "0x82F8D4")]
	public WheelLamps()
	{
	}
}
[Token(Token = "0x2000146")]
public class ParallaxRotator : MonoBehaviour
{
	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform myTransform;

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0x6483D4", Offset = "0x6483D4", VA = "0x6483D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0x6483FC", Offset = "0x6483FC", VA = "0x6483FC", Slot = "4")]
	public virtual void RotateToAngle(float angle)
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0x6484FC", Offset = "0x6484FC", VA = "0x6484FC")]
	public ParallaxRotator()
	{
	}
}
[Token(Token = "0x2000147")]
public class PrizeDefinition : MonoBehaviour
{
	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InventoryCatalogue.ItemID itemID;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string displayName;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string description;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture image;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x4ABD18", Offset = "0x4ABD18")]
	public GameObject visualPrefab;

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0x669560", Offset = "0x669560", VA = "0x669560")]
	public PrizeDefinition()
	{
	}
}
[Token(Token = "0x2000148")]
public class PrizePool : SingletonBehavior<PrizePool>
{
	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PrizeDefinition[] prizes;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<PrizeDefinition> availablePrizes;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int index;

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0x669568", Offset = "0x669568", VA = "0x669568", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0x669644", Offset = "0x669644", VA = "0x669644")]
	private void OnSceneLoaded(string sceneName)
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0x6696BC", Offset = "0x6696BC", VA = "0x6696BC")]
	private void SetupPrizePool()
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0x6699E4", Offset = "0x6699E4", VA = "0x6699E4")]
	public PrizeDefinition DrawNextFromAll()
	{
		return null;
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0x669A70", Offset = "0x669A70", VA = "0x669A70")]
	public PrizeDefinition DrawRandomFromAvailable()
	{
		return null;
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0x669B08", Offset = "0x669B08", VA = "0x669B08", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0x669BE4", Offset = "0x669BE4", VA = "0x669BE4")]
	public PrizePool()
	{
	}
}
[Token(Token = "0x2000149")]
public class PsyduckSignals
{
	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Signal GameStart;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly Signal GameFinished;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly Signal PrizePoolReady;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly Signal GavePrize;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly Signal SpinStarted;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly Signal SpinEnded;

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0x9CEB40", Offset = "0x9CEB40", VA = "0x9CEB40")]
	public PsyduckSignals()
	{
	}
}
[Token(Token = "0x200014A")]
public class PsyduckTutorial : SingleInstanceBehavior<PsyduckTutorial>
{
	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private WheelInteraction wheelInteraction;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator boardAnimator;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Collider myCollider;

	[Token(Token = "0x4000893")]
	private const float hideDelay = 0.8f;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Action onTutorialClicked;

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0x9CEE6C", Offset = "0x9CEE6C", VA = "0x9CEE6C", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0x9CEF08", Offset = "0x9CEF08", VA = "0x9CEF08")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0x9CAFC4", Offset = "0x9CAFC4", VA = "0x9CAFC4")]
	public void Show(Action onTutorialClicked)
	{
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0x9CEFA4", Offset = "0x9CEFA4", VA = "0x9CEFA4")]
	internal void Hide()
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0x9CF0D8", Offset = "0x9CF0D8", VA = "0x9CF0D8", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0x9CF168", Offset = "0x9CF168", VA = "0x9CF168")]
	public PsyduckTutorial()
	{
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0x9CF1D8", Offset = "0x9CF1D8", VA = "0x9CF1D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1B38", Offset = "0x4B1B38")]
	private void <Hide>b__8_0()
	{
	}
}
[Token(Token = "0x200014B")]
public class PsyduckWinAnimation : SingletonBehavior<PsyduckWinAnimation>
{
	[Serializable]
	[Token(Token = "0x20003FF")]
	public class TextSizes
	{
		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float pidgey;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float tinderTown;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float golfatchu;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float magicMayhem;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float basket;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float hammer;

		[Token(Token = "0x6001C70")]
		[Address(RVA = "0x9CF71C", Offset = "0x9CF71C", VA = "0x9CF71C")]
		public TextSizes()
		{
		}
	}

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int ANIMID_SHOW;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int ANIMID_ITEM_TO_BAG;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int ANIMID_BACKPACK_OPEN;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Animator animatorBackPack;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform root;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextSizes textSizes;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<Minigame.Name, GameObject> bannerLogos;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Text bannerItemText;

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0x9CF210", Offset = "0x9CF210", VA = "0x9CF210")]
	public void Start()
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0x9CB31C", Offset = "0x9CB31C", VA = "0x9CB31C")]
	public void Show(Transform visualRoot, InventoryCatalogue.ItemID itemID, string displayName)
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0x9CF424", Offset = "0x9CF424", VA = "0x9CF424")]
	public void SendItemIntoBackpack()
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0x9CF510", Offset = "0x9CF510", VA = "0x9CF510")]
	public void OpenBackPack()
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0x9CF59C", Offset = "0x9CF59C", VA = "0x9CF59C")]
	public void CloseBackPack()
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0x9CF628", Offset = "0x9CF628", VA = "0x9CF628")]
	public PsyduckWinAnimation()
	{
	}
}
[Token(Token = "0x200014C")]
public class RigidbodyParallaxRotator : ParallaxRotator
{
	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody myRigidbody;

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0x697BC0", Offset = "0x697BC0", VA = "0x697BC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0x697C18", Offset = "0x697C18", VA = "0x697C18", Slot = "4")]
	public override void RotateToAngle(float angle)
	{
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0x697D18", Offset = "0x697D18", VA = "0x697D18")]
	public RigidbodyParallaxRotator()
	{
	}
}
[Token(Token = "0x200014D")]
public class Rotator : MonoBehaviour
{
	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector3 axis;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float speed;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform myTransform;

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0x698B24", Offset = "0x698B24", VA = "0x698B24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0x698B4C", Offset = "0x698B4C", VA = "0x698B4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0x698BB8", Offset = "0x698BB8", VA = "0x698BB8")]
	public Rotator()
	{
	}
}
[Token(Token = "0x200014E")]
public class RotatorRandom : MonoBehaviour
{
	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector3 axis;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float speedMin;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float speedMax;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float speed;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform myTransform;

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0x698C38", Offset = "0x698C38", VA = "0x698C38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0x698C70", Offset = "0x698C70", VA = "0x698C70")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0x698CE0", Offset = "0x698CE0", VA = "0x698CE0")]
	public RotatorRandom()
	{
	}
}
[Token(Token = "0x200014F")]
public class SpriteAlphaFader : MonoBehaviour
{
	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minFadeTime;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxFadeTime;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float fadeTime;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minAlphaValue;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxAlphaValue;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float alphaValue;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SpriteRenderer spriteRend;

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x6AA728", Offset = "0x6AA728", VA = "0x6AA728")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x6AA780", Offset = "0x6AA780", VA = "0x6AA780")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x6AA7F8", Offset = "0x6AA7F8", VA = "0x6AA7F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x6AA7B0", Offset = "0x6AA7B0", VA = "0x6AA7B0")]
	private void ChooseFadeInOrOut()
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x6AA8F4", Offset = "0x6AA8F4", VA = "0x6AA8F4")]
	private void FadeAlphaOut()
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x6AAAFC", Offset = "0x6AAAFC", VA = "0x6AAAFC")]
	private void FadeAlphaIn()
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x6AAD04", Offset = "0x6AAD04", VA = "0x6AAD04")]
	public SpriteAlphaFader()
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x6AAD24", Offset = "0x6AAD24", VA = "0x6AAD24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1B48", Offset = "0x4B1B48")]
	private void <FadeAlphaOut>b__11_0(float val)
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x6AAD2C", Offset = "0x6AAD2C", VA = "0x6AAD2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1B58", Offset = "0x4B1B58")]
	private void <FadeAlphaIn>b__12_0(float val)
	{
	}
}
[Token(Token = "0x2000150")]
public class ClubController : SingleInstanceBehavior<ClubController>
{
	[Token(Token = "0x2000400")]
	public enum SnappingMode
	{
		[Token(Token = "0x4001850")]
		None,
		[Token(Token = "0x4001851")]
		FullSnap,
		[Token(Token = "0x4001852")]
		Partial,
		[Token(Token = "0x4001853")]
		HeadSnap,
		[Token(Token = "0x4001854")]
		HeadSnapPartial
	}

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SnappingMode snappingMode;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float minAngle;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float headClampRatio;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MinigameUI minigameUI;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float[] buttonSnapAngles;

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x6D1418", Offset = "0x6D1418", VA = "0x6D1418")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x6D16C4", Offset = "0x6D16C4", VA = "0x6D16C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0x6D1AB4", Offset = "0x6D1AB4", VA = "0x6D1AB4")]
	public ClubController()
	{
	}
}
[Token(Token = "0x2000151")]
public class StaryuButton : MonoBehaviour
{
	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform buttonTop;

	[Token(Token = "0x40008B4")]
	private const float buttonPressedOffset = 0.066f;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float buttonTopStartY;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private StaryuButtonGlow exteriorGlow;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isGlowing;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CountdownTime glowTimer;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Renderer buttonRenderer;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer baseRenderer;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MaterialPropertyBlock materialPropertyBlock;

	[Token(Token = "0x40008BC")]
	private const float startupGlowTime = 0.1f;

	[Token(Token = "0x40008BD")]
	private const float disappearGlowTime = 0.1f;

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0x6AB250", Offset = "0x6AB250", VA = "0x6AB250")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0x6AB3B8", Offset = "0x6AB3B8", VA = "0x6AB3B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x6AB3C0", Offset = "0x6AB3C0", VA = "0x6AB3C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0x6AB44C", Offset = "0x6AB44C", VA = "0x6AB44C")]
	public void TurnOffGlow()
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0x6AB6B4", Offset = "0x6AB6B4", VA = "0x6AB6B4")]
	internal void OnHit()
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x6AB86C", Offset = "0x6AB86C", VA = "0x6AB86C")]
	public void Glow(float glowTime)
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x6ABC78", Offset = "0x6ABC78", VA = "0x6ABC78")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x6ABD04", Offset = "0x6ABD04", VA = "0x6ABD04")]
	public bool IsGlowing()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x6ABB2C", Offset = "0x6ABB2C", VA = "0x6ABB2C")]
	private void StartInteriorGlow()
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x6AB568", Offset = "0x6AB568", VA = "0x6AB568")]
	private void StopInteriorGlow()
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0x6ABD0C", Offset = "0x6ABD0C", VA = "0x6ABD0C")]
	private void UpdateMaterialBlockProgress(float value)
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0x6ABE38", Offset = "0x6ABE38", VA = "0x6ABE38")]
	public StaryuButton()
	{
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x6ABE40", Offset = "0x6ABE40", VA = "0x6ABE40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1B68", Offset = "0x4B1B68")]
	private void <StartInteriorGlow>b__19_0(float val)
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x6ABE44", Offset = "0x6ABE44", VA = "0x6ABE44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1B78", Offset = "0x4B1B78")]
	private void <StopInteriorGlow>b__20_0(float val)
	{
	}
}
[Token(Token = "0x2000152")]
public class StaryuButtonGlow : MonoBehaviour
{
	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float scaleMin;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float scaleMax;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float speed;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool shouldPulse;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float pulseTime;

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0x6ABE48", Offset = "0x6ABE48", VA = "0x6ABE48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0x6AB940", Offset = "0x6AB940", VA = "0x6AB940")]
	public void StartGlowing(float startupTime)
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x6ABF7C", Offset = "0x6ABF7C", VA = "0x6ABF7C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x6AB490", Offset = "0x6AB490", VA = "0x6AB490")]
	public void StopGlowing(float disappearTime)
	{
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x6AC084", Offset = "0x6AC084", VA = "0x6AC084")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x6AC100", Offset = "0x6AC100", VA = "0x6AC100")]
	public StaryuButtonGlow()
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x6AC108", Offset = "0x6AC108", VA = "0x6AC108")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1B88", Offset = "0x4B1B88")]
	private void <StartGlowing>b__6_0()
	{
	}
}
[Token(Token = "0x2000153")]
public class StaryuCannon : MonoBehaviour
{
	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float launchAngle;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject springPlatform;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float launchedYPos;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject launchCharacter;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 launchCharacterStartPos;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Rigidbody characterRigidBody;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform[] launchTargets;

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x6AC114", Offset = "0x6AC114", VA = "0x6AC114")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x6AC324", Offset = "0x6AC324", VA = "0x6AC324")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x6AC3EC", Offset = "0x6AC3EC", VA = "0x6AC3EC")]
	public void Launch()
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x6AC850", Offset = "0x6AC850", VA = "0x6AC850")]
	private void ResetLaunchCharacter()
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x6AC944", Offset = "0x6AC944", VA = "0x6AC944")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x6ACA28", Offset = "0x6ACA28", VA = "0x6ACA28")]
	public StaryuCannon()
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x6ACA38", Offset = "0x6ACA38", VA = "0x6ACA38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1B98", Offset = "0x4B1B98")]
	private void <Launch>b__9_0()
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x6ACB28", Offset = "0x6ACB28", VA = "0x6ACB28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1BA8", Offset = "0x4B1BA8")]
	private void <Launch>b__9_1()
	{
	}
}
[Token(Token = "0x2000154")]
public class StaryuGame : SingleInstanceBehavior<StaryuGame>
{
	[Token(Token = "0x2000401")]
	private enum State
	{
		[Token(Token = "0x4001856")]
		Setup,
		[Token(Token = "0x4001857")]
		Instructions,
		[Token(Token = "0x4001858")]
		GameOn,
		[Token(Token = "0x4001859")]
		GameOver
	}

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4ABE30", Offset = "0x4ABE30")]
	private float buttonBeatOffset;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private int minBeatsBetweenButtons;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float glowTime;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool glowInOrder;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private State currentState;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private StaryuButton[] buttons;

	[Token(Token = "0x40008D0")]
	private const float maxVelocityForCrush = -0.005f;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int score;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject crusher;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private StaryuCannon[] cannons;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ParticleSystem crushParticles;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 previousCrusherPosition;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float verticalVelocity;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private UIBoard instructions;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Text tempScoreText;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private AudioSource musicAudioSource;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int buttonBeatCountTarget;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float timeSamples;

	[Token(Token = "0x40008DC")]
	private const float musicBPM = 120f;

	[Token(Token = "0x40008DD")]
	private const float sampleRate = 44100f;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int buttonOrderIndex;

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x6ACB2C", Offset = "0x6ACB2C", VA = "0x6ACB2C", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x6ACC98", Offset = "0x6ACC98", VA = "0x6ACC98")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x6ACC9C", Offset = "0x6ACC9C", VA = "0x6ACC9C")]
	private void ShowInstructions()
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x6ACCD4", Offset = "0x6ACCD4", VA = "0x6ACCD4")]
	private void StartGame()
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x6ACDA4", Offset = "0x6ACDA4", VA = "0x6ACDA4")]
	private void OnHit(GameObject obj)
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x6AD250", Offset = "0x6AD250", VA = "0x6AD250")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x6AD4D8", Offset = "0x6AD4D8", VA = "0x6AD4D8")]
	public void OnBeatMusicChanged()
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x6AD394", Offset = "0x6AD394", VA = "0x6AD394")]
	private void MakeButtonGlowInOrder()
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x6AD3E8", Offset = "0x6AD3E8", VA = "0x6AD3E8")]
	private void MakeRandomButtonGlow()
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x6AD6CC", Offset = "0x6AD6CC", VA = "0x6AD6CC")]
	private void MakeButtonGlow(int index)
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x6AD42C", Offset = "0x6AD42C", VA = "0x6AD42C")]
	private void UpdateScoreDisplay()
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x6AD74C", Offset = "0x6AD74C", VA = "0x6AD74C")]
	private void EndGame()
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x6AD84C", Offset = "0x6AD84C", VA = "0x6AD84C")]
	private void DisplayScoreboard()
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x6ADB70", Offset = "0x6ADB70", VA = "0x6ADB70")]
	public StaryuGame()
	{
	}
}
[Token(Token = "0x2000155")]
public class StaryuSongChangedListener : MonoBehaviour, ICustomEventReceiver
{
	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly string eventSubscribedTo;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private StaryuGame staryuGame;

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x6ADBF8", Offset = "0x6ADBF8", VA = "0x6ADBF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x6ADD48", Offset = "0x6ADD48", VA = "0x6ADD48")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x6ADDCC", Offset = "0x6ADDCC", VA = "0x6ADDCC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x6ADE38", Offset = "0x6ADE38", VA = "0x6ADE38")]
	private void BeatMusicSongHasChanged()
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x6ADC74", Offset = "0x6ADC74", VA = "0x6ADC74", Slot = "4")]
	public void CheckForIllegalCustomEvents()
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x6ADE64", Offset = "0x6ADE64", VA = "0x6ADE64", Slot = "5")]
	public void ReceiveEvent(string customEventName, Vector3 originPoint)
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x6ADEA8", Offset = "0x6ADEA8", VA = "0x6ADEA8", Slot = "6")]
	public bool SubscribesToEvent(string customEventName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x6ADD4C", Offset = "0x6ADD4C", VA = "0x6ADD4C", Slot = "7")]
	public void RegisterReceiver()
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0x6ADDD0", Offset = "0x6ADDD0", VA = "0x6ADDD0", Slot = "8")]
	public void UnregisterReceiver()
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0x6ADEF4", Offset = "0x6ADEF4", VA = "0x6ADEF4", Slot = "9")]
	public IList<AudioEventGroup> GetAllEvents()
	{
		return null;
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0x6ADFB8", Offset = "0x6ADFB8", VA = "0x6ADFB8")]
	public StaryuSongChangedListener()
	{
	}
}
[Token(Token = "0x2000156")]
public class DestroyOnEnable : MonoBehaviour
{
	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delayTime;

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0x6E0764", Offset = "0x6E0764", VA = "0x6E0764")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0x6E07BC", Offset = "0x6E07BC", VA = "0x6E07BC")]
	private void Destroy()
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0x6E0838", Offset = "0x6E0838", VA = "0x6E0838")]
	public DestroyOnEnable()
	{
	}
}
[Token(Token = "0x2000157")]
public class ObjCount : MonoBehaviour
{
	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0x643ED0", Offset = "0x643ED0", VA = "0x643ED0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0x643F8C", Offset = "0x643F8C", VA = "0x643F8C")]
	public ObjCount()
	{
	}
}
[Token(Token = "0x2000158")]
public class ScaleOnEnable : MonoBehaviour
{
	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scaleTo;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LeanTweenType type;

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x6990A0", Offset = "0x6990A0", VA = "0x6990A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x699220", Offset = "0x699220", VA = "0x699220")]
	public ScaleOnEnable()
	{
	}
}
[Token(Token = "0x2000159")]
public class ScaleOnEnableDelay : MonoBehaviour
{
	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scaleTo;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LeanTweenType type;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float delay;

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0x699230", Offset = "0x699230", VA = "0x699230")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x699288", Offset = "0x699288", VA = "0x699288")]
	private void Scale()
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0x6993AC", Offset = "0x6993AC", VA = "0x6993AC")]
	public ScaleOnEnableDelay()
	{
	}
}
[Token(Token = "0x200015A")]
public class DebugGazeShowAllTargets : CrosshairInteractable
{
	[Token(Token = "0x2000402")]
	private enum Action
	{
		[Token(Token = "0x400185B")]
		PopUp,
		[Token(Token = "0x400185C")]
		PopDown
	}

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private WaveTarget.Type targetType;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Action action;

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0x6DF334", Offset = "0x6DF334", VA = "0x6DF334", Slot = "7")]
	public override void OnSelect()
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0x6DF4D8", Offset = "0x6DF4D8", VA = "0x6DF4D8")]
	public DebugGazeShowAllTargets()
	{
	}
}
[Token(Token = "0x200015B")]
public class Cannon : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000403")]
	public struct CannonInfo
	{
		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float initPause;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool rotateCannon;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float fireRate;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int numFires;
	}

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CannonInfo[] cannonInfos;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int cannonInfoIndex;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int shotsLeft;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float fireCountDown;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float initPauseCountDown;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speed;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float MaxRot;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float FireRate;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float FirePower;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float startZAngle;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float x;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TinderTownPrefabRegistry prefabRegistry;

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0x6CAF84", Offset = "0x6CAF84", VA = "0x6CAF84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0x6CB07C", Offset = "0x6CB07C", VA = "0x6CB07C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0x6CB488", Offset = "0x6CB488", VA = "0x6CB488")]
	private void Fire()
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0x6CB66C", Offset = "0x6CB66C", VA = "0x6CB66C")]
	public Cannon()
	{
	}
}
[Token(Token = "0x200015C")]
public class SpinningWheel : MonoBehaviour
{
	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x6A9728", Offset = "0x6A9728", VA = "0x6A9728")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x6A9818", Offset = "0x6A9818", VA = "0x6A9818")]
	public SpinningWheel()
	{
	}
}
[Token(Token = "0x200015D")]
public class ControllerStatus : MonoBehaviour
{
	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMesh text;

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0x6D7CB8", Offset = "0x6D7CB8", VA = "0x6D7CB8")]
	public ControllerStatus()
	{
	}
}
[Token(Token = "0x200015E")]
public class DestroyWithDelay : MonoBehaviour
{
	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delay;

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0x6E09D0", Offset = "0x6E09D0", VA = "0x6E09D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x6E0A28", Offset = "0x6E0A28", VA = "0x6E0A28")]
	private void Remove()
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x6E0AA4", Offset = "0x6E0AA4", VA = "0x6E0AA4")]
	public DestroyWithDelay()
	{
	}
}
[Token(Token = "0x200015F")]
public class EnableOnFinished : MonoBehaviour
{
	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0x71B5F8", Offset = "0x71B5F8", VA = "0x71B5F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0x71B6D8", Offset = "0x71B6D8", VA = "0x71B6D8")]
	private void OnFinalWaveFinished()
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x71B710", Offset = "0x71B710", VA = "0x71B710")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0x71B7C8", Offset = "0x71B7C8", VA = "0x71B7C8")]
	public EnableOnFinished()
	{
	}
}
[Token(Token = "0x2000160")]
public class EnableOnStart : MonoBehaviour
{
	[Token(Token = "0x6000A81")]
	[Address(RVA = "0x71B7D0", Offset = "0x71B7D0", VA = "0x71B7D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0x71B8B0", Offset = "0x71B8B0", VA = "0x71B8B0")]
	private void OnGameStart()
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0x71B8E8", Offset = "0x71B8E8", VA = "0x71B8E8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0x71B9A0", Offset = "0x71B9A0", VA = "0x71B9A0")]
	public EnableOnStart()
	{
	}
}
[Token(Token = "0x2000161")]
public class FinalWave : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000404")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8E24", Offset = "0x4A8E24")]
	private sealed class <>c
	{
		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<WaveTarget> <>9__5_0;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__8_1;

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0x71DF38", Offset = "0x71DF38", VA = "0x71DF38")]
		public <>c()
		{
		}

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0x71DF40", Offset = "0x71DF40", VA = "0x71DF40")]
		internal int <Awake>b__5_0(WaveTarget a, WaveTarget b)
		{
			return default(int);
		}

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0x71DFB0", Offset = "0x71DFB0", VA = "0x71DFB0")]
		internal void <StartFinalWavePart2>b__8_1()
		{
		}
	}

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] allFireHolders;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject particlesLeft;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject particlesRight;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LinkedList<WaveTarget> sortedListOfTargets;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int guardCount;

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0x71D494", Offset = "0x71D494", VA = "0x71D494")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0x71D7B4", Offset = "0x71D7B4", VA = "0x71D7B4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0x71D8AC", Offset = "0x71D8AC", VA = "0x71D8AC")]
	private void StartFinalWavePart1()
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x71DB34", Offset = "0x71DB34", VA = "0x71DB34")]
	private void StartFinalWavePart2()
	{
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0x71DE64", Offset = "0x71DE64", VA = "0x71DE64")]
	public FinalWave()
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x71DE6C", Offset = "0x71DE6C", VA = "0x71DE6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1BB8", Offset = "0x4B1BB8")]
	private void <StartFinalWavePart1>b__7_0()
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x71DEA0", Offset = "0x71DEA0", VA = "0x71DEA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1BC8", Offset = "0x4B1BC8")]
	private void <StartFinalWavePart2>b__8_0()
	{
	}
}
[Token(Token = "0x2000162")]
public class ScoreCounter : SingleInstanceBehavior<ScoreCounter>
{
	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Sprite[] scoreboardUIIcons;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text ScoreText;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TextMesh debugText;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int pointsForFire;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int pointsForBonus;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int totalScore;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int ticketsCollected;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<string, Sprite> scoreboardUIIconsMap;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<string> itemsHit;

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0x69A244", Offset = "0x69A244", VA = "0x69A244", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0x69A52C", Offset = "0x69A52C", VA = "0x69A52C")]
	public void AddTicket()
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0x69A5AC", Offset = "0x69A5AC", VA = "0x69A5AC")]
	private void AddHitItem(string itemName)
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0x69A658", Offset = "0x69A658", VA = "0x69A658")]
	private void OnAddScoreSignal(TinderTownSignals.ScoreUpdatedParams parameters)
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0x69A6BC", Offset = "0x69A6BC", VA = "0x69A6BC")]
	private void OnFinalWaveFinished()
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x69A4E0", Offset = "0x69A4E0", VA = "0x69A4E0")]
	private void UpdateScoreDisplay()
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x69A5A8", Offset = "0x69A5A8", VA = "0x69A5A8")]
	private void UpdateDebugText()
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x69AC94", Offset = "0x69AC94", VA = "0x69AC94", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x69ADC0", Offset = "0x69ADC0", VA = "0x69ADC0")]
	public ScoreCounter()
	{
	}
}
[Token(Token = "0x2000163")]
public class TicketSpawner
{
	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int activeTicketCount;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float timeSinceLastTicketSpawnInSeconds;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<TicketTarget> inactiveTickets;

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0x81D4E8", Offset = "0x81D4E8", VA = "0x81D4E8")]
	public TicketSpawner(Transform ticketParent)
	{
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0x81D5B8", Offset = "0x81D5B8", VA = "0x81D5B8")]
	public void UpdateTickerSpawner(float deltaTime)
	{
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0x81D64C", Offset = "0x81D64C", VA = "0x81D64C")]
	private void SpawnTicket()
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x81DC2C", Offset = "0x81DC2C", VA = "0x81DC2C")]
	private void OnTargetHitEvent(TicketTarget ticket)
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x81DD88", Offset = "0x81DD88", VA = "0x81DD88")]
	private void OnLifeTimeOverEvent(TicketTarget ticket)
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x81DCB8", Offset = "0x81DCB8", VA = "0x81DCB8")]
	private void removeEventListeners(TicketTarget ticket)
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x81D7EC", Offset = "0x81D7EC", VA = "0x81D7EC")]
	private TicketTarget GetInactiveTicket()
	{
		return null;
	}
}
[Token(Token = "0x2000164")]
public class WaveManager : SingleInstanceBehavior<WaveManager>
{
	[Serializable]
	[Token(Token = "0x2000405")]
	private class Wave
	{
		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject fireHolder;

		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int numberOfFires;

		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaveComponent[] waveComponents;

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0x82B760", Offset = "0x82B760", VA = "0x82B760")]
		public RandomizableList<BaseTarget> GetAllTargets()
		{
			return null;
		}

		[Token(Token = "0x6001C76")]
		[Address(RVA = "0x82C9C4", Offset = "0x82C9C4", VA = "0x82C9C4")]
		public Wave()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000406")]
	private struct WaveComponent
	{
		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject fireHolder;
	}

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotatingTimer rotatingTimer;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject bonusObjectsHolder;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject waveTextBoard;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LocalizedText waveText;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Animator waveTextBoardAnim;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int initialNumberOfBonusObjects;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int minimumNumberOfBonusObjects;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int maximumNumberOfBonusObjects;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform ticketObjectHolder;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Wave[] waves;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x4ABEEC", Offset = "0x4ABEEC")]
	public float gameTime;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float initialWaveDelay;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4ABF24", Offset = "0x4ABF24")]
	public float waveCompleteSignLifeTime;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4ABF5C", Offset = "0x4ABF5C")]
	public float pauseTimeBetweenWaves;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float bonusTimeForCompletedWave;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4ABF94", Offset = "0x4ABF94")]
	public float bonusTimeDelay;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private RandomizableList<BaseTarget> allBonusObjects;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<BaseTarget> activeWaveTargets;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<BaseTarget> activeBonusObjects;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int currentWaveIndex;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private TicketSpawner ticketSpawner;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private CountdownTime gameTimer;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4ABFCC", Offset = "0x4ABFCC")]
	private bool <IsFinalWave>k__BackingField;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	private bool gameIsRunning;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
	private bool timerShouldCountdown;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAB")]
	private bool isBetweenFires;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float pauseBetweenFiresTimer;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private HingeJoint hinge;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private GameObject hingeObject;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Transform hingeTrans;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 hingeStartPos;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Rigidbody hingeRigidbody;

	[Token(Token = "0x17000093")]
	public int CurrentWave
	{
		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x82A8F4", Offset = "0x82A8F4", VA = "0x82A8F4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000094")]
	public bool IsFinalWave
	{
		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x82A8FC", Offset = "0x82A8FC", VA = "0x82A8FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1BD8", Offset = "0x4B1BD8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x82A904", Offset = "0x82A904", VA = "0x82A904")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1BE8", Offset = "0x4B1BE8")]
		private set
		{
		}
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0x82A910", Offset = "0x82A910", VA = "0x82A910", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0x82AD74", Offset = "0x82AD74", VA = "0x82AD74")]
	private void OnWaveStarted(int waveIndex)
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0x82ADE4", Offset = "0x82ADE4", VA = "0x82ADE4")]
	private void OnFinalWaveStarted()
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0x82ADEC", Offset = "0x82ADEC", VA = "0x82ADEC")]
	private void OnFinalWaveCompleted()
	{
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0x82ADF4", Offset = "0x82ADF4", VA = "0x82ADF4")]
	private void OnWaveCompleted(int waveIndex)
	{
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0x82AE64", Offset = "0x82AE64", VA = "0x82AE64")]
	private void OnGameFinished(FinalScore score)
	{
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0x82AF04", Offset = "0x82AF04", VA = "0x82AF04")]
	private void OnStartMinigame()
	{
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0x82B0E4", Offset = "0x82B0E4", VA = "0x82B0E4")]
	private void ActivateNewBonusObject(float delay)
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0x82B318", Offset = "0x82B318", VA = "0x82B318")]
	private void RemoveBonusObject(BaseTarget bonusObject)
	{
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0x82B240", Offset = "0x82B240", VA = "0x82B240")]
	private BaseTarget GetRandomInactiveBonusObject()
	{
		return null;
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0x82B3D0", Offset = "0x82B3D0", VA = "0x82B3D0")]
	private void StartNewWave()
	{
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0x82B92C", Offset = "0x82B92C", VA = "0x82B92C")]
	private void OnTargetHit(BaseTarget sender)
	{
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0x82B8DC", Offset = "0x82B8DC", VA = "0x82B8DC")]
	private void ShowNormalWaveLabel(int index)
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x82BEC8", Offset = "0x82BEC8", VA = "0x82BEC8")]
	private void ShowFinalWaveLabel()
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0x82BCB0", Offset = "0x82BCB0", VA = "0x82BCB0")]
	private void ShowWaveLabelTemporary()
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0x82BA24", Offset = "0x82BA24", VA = "0x82BA24")]
	private void OnWaveEnded()
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0x82BFCC", Offset = "0x82BFCC", VA = "0x82BFCC")]
	private void PrepareStartNewWave()
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0x82C22C", Offset = "0x82C22C", VA = "0x82C22C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0x82C02C", Offset = "0x82C02C", VA = "0x82C02C")]
	private void StartFinalWave()
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0x82C3D0", Offset = "0x82C3D0", VA = "0x82C3D0")]
	private void ClearAllTargets(bool withAnimation)
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0x82C538", Offset = "0x82C538", VA = "0x82C538", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0x82C80C", Offset = "0x82C80C", VA = "0x82C80C")]
	public WaveManager()
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0x82C89C", Offset = "0x82C89C", VA = "0x82C89C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1BF8", Offset = "0x4B1BF8")]
	private void <OnStartMinigame>b__45_0()
	{
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0x82C8A0", Offset = "0x82C8A0", VA = "0x82C8A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1C08", Offset = "0x4B1C08")]
	private void <StartNewWave>b__49_0()
	{
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0x82C8AC", Offset = "0x82C8AC", VA = "0x82C8AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1C18", Offset = "0x4B1C18")]
	private void <ShowWaveLabelTemporary>b__53_0()
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0x82C914", Offset = "0x82C914", VA = "0x82C914")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1C28", Offset = "0x4B1C28")]
	private void <ShowWaveLabelTemporary>b__53_1()
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0x82C984", Offset = "0x82C984", VA = "0x82C984")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1C38", Offset = "0x4B1C38")]
	private void <OnWaveEnded>b__54_0()
	{
	}
}
[Token(Token = "0x2000165")]
public class ElectricLineRenderer : MonoBehaviour
{
	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject targetObject;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float randomX;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float randomY;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float randomZ;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0x71B1E8", Offset = "0x71B1E8", VA = "0x71B1E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0x71B240", Offset = "0x71B240", VA = "0x71B240")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0x71B4AC", Offset = "0x71B4AC", VA = "0x71B4AC")]
	public ElectricLineRenderer()
	{
	}
}
[Token(Token = "0x2000166")]
public class ScreenFlash : MonoBehaviour
{
	[Token(Token = "0x2000407")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8E34", Offset = "0x4A8E34")]
	private sealed class <FlashOff>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScreenFlash <>4__this;

		[Token(Token = "0x170001B6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C7A")]
			[Address(RVA = "0x69FD90", Offset = "0x69FD90", VA = "0x69FD90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C7C")]
			[Address(RVA = "0x69FE00", Offset = "0x69FE00", VA = "0x69FE00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C77")]
		[Address(RVA = "0x69FC98", Offset = "0x69FC98", VA = "0x69FC98")]
		[DebuggerHidden]
		public <FlashOff>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001C78")]
		[Address(RVA = "0x69FCCC", Offset = "0x69FCCC", VA = "0x69FCCC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C79")]
		[Address(RVA = "0x69FCD0", Offset = "0x69FCD0", VA = "0x69FCD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0x69FD98", Offset = "0x69FD98", VA = "0x69FD98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer rend;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color color;

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0x69FB3C", Offset = "0x69FB3C", VA = "0x69FB3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0x69FBB0", Offset = "0x69FBB0", VA = "0x69FBB0")]
	public void FlashOn()
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0x69FC24", Offset = "0x69FC24", VA = "0x69FC24")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B1C48", Offset = "0x4B1C48")]
	private IEnumerator FlashOff()
	{
		return null;
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0x69FCC4", Offset = "0x69FCC4", VA = "0x69FCC4")]
	public ScreenFlash()
	{
	}
}
[Token(Token = "0x2000167")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4A857C", Offset = "0x4A857C")]
public class TinderTownHoseController : MonoBehaviour
{
	[Token(Token = "0x2000408")]
	private enum FiringState
	{
		[Token(Token = "0x400186C")]
		NormalFire,
		[Token(Token = "0x400186D")]
		CriticalAmmo,
		[Token(Token = "0x400186E")]
		ForcedStop,
		[Token(Token = "0x400186F")]
		InfiniteAmmo
	}

	[Token(Token = "0x2000409")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8E44", Offset = "0x4A8E44")]
	private sealed class <ForceFireToStopTemporary>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TinderTownHoseController <>4__this;

		[Token(Token = "0x170001B8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C80")]
			[Address(RVA = "0x823EF4", Offset = "0x823EF4", VA = "0x823EF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C82")]
			[Address(RVA = "0x823F64", Offset = "0x823F64", VA = "0x823F64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0x823744", Offset = "0x823744", VA = "0x823744")]
		[DebuggerHidden]
		public <ForceFireToStopTemporary>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0x823A1C", Offset = "0x823A1C", VA = "0x823A1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0x823A20", Offset = "0x823A20", VA = "0x823A20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C81")]
		[Address(RVA = "0x823EFC", Offset = "0x823EFC", VA = "0x823EFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject WaterParent;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem.EmissionModule particleSprayEmission;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem.EmissionModule particleStreamEmission;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TinderTownHoseData[] hosePrefabs;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform tempHose;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GrabbableObject grabbableObject;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject crosshair;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject hoseVisuals;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isGameActive;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float lastParticleSpawnTime;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isFiringWater;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float ammo;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool ammoAtCriticalLevel;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float replenishDelayLeft;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isReplenishing;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private SoundManager soundManager;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool hasInfiniteAmmo;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool forcedReplenishActive;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	private bool waitForClickRelease;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private TinderTownHoseData hoseData;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Hand hand;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float currentWaterAmount;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float fakeWaterAmount;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float fakeWaterIncrease;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool resettingHose;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private FiringState currentFiringState;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private ListenerList listenerList;

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0x82160C", Offset = "0x82160C", VA = "0x82160C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0x821900", Offset = "0x821900", VA = "0x821900")]
	private void OnInfiniteAmmoStarted()
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0x821990", Offset = "0x821990", VA = "0x821990")]
	private void OnInfiniteAmmoEnded()
	{
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0x821B48", Offset = "0x821B48", VA = "0x821B48")]
	private void OnConfirmQuitShowing()
	{
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0x821B7C", Offset = "0x821B7C", VA = "0x821B7C")]
	private void OnConfirmQuitHidden()
	{
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0x821BB0", Offset = "0x821BB0", VA = "0x821BB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0x821CA0", Offset = "0x821CA0", VA = "0x821CA0")]
	private void SpawnHose()
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0x8222C8", Offset = "0x8222C8", VA = "0x8222C8")]
	private void OnIntroductionStart()
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0x822324", Offset = "0x822324", VA = "0x822324")]
	public void SetGameOver()
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0x822330", Offset = "0x822330", VA = "0x822330")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0x8228DC", Offset = "0x8228DC", VA = "0x8228DC")]
	private void SetNewFiringState(bool hasAmmo, bool ammoReachedCriticalLevel, bool wasFiringWater, FiringState lastFiringState)
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0x8236D0", Offset = "0x8236D0", VA = "0x8236D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B1CAC", Offset = "0x4B1CAC")]
	private IEnumerator ForceFireToStopTemporary()
	{
		return null;
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0x822C18", Offset = "0x822C18", VA = "0x822C18")]
	private void SetNewIsFiringWaterStatus(bool clickButtonDown)
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0x822C44", Offset = "0x822C44", VA = "0x822C44")]
	private void UpdateWaterShootingSounds(FiringState lastFiringState, bool wasFiringWater, Hand currenHand)
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0x823770", Offset = "0x823770", VA = "0x823770")]
	private void StartHoseSoundBasedOncriticalStatus()
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0x823618", Offset = "0x823618", VA = "0x823618")]
	private bool ReplenishWater()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0x823190", Offset = "0x823190", VA = "0x823190")]
	private void FireSingle()
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0x8237BC", Offset = "0x8237BC", VA = "0x8237BC")]
	private void AmmoDecrease(float amount)
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0x8220C0", Offset = "0x8220C0", VA = "0x8220C0")]
	private void AmmoBarUpdate()
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0x823844", Offset = "0x823844", VA = "0x823844")]
	private void OnFinalWaveComplete()
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0x823880", Offset = "0x823880", VA = "0x823880")]
	private void OnOutOfWater()
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0x8238F8", Offset = "0x8238F8", VA = "0x8238F8")]
	private void OnForcedWaterReplenishStarted()
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0x823924", Offset = "0x823924", VA = "0x823924")]
	private void OnAmmoChange(float newFraction)
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0x82397C", Offset = "0x82397C", VA = "0x82397C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0x823A14", Offset = "0x823A14", VA = "0x823A14")]
	public TinderTownHoseController()
	{
	}
}
[Token(Token = "0x2000168")]
public class TinderTownHoseData : MonoBehaviour
{
	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float baseForce;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float upForce;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fireRate;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxAmmo;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ammoDecreaseRate;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float ammoIncreaseRate;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int criticalAmmoAmount;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float replenishDelay;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float ammoIncreaseFactorOnForcedReplenish;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float forcedReplenishDuration;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float needleRotationEmpty;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float needleRotationFull;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float gaugeEmpty;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float gaugeFull;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private InventoryCatalogue.ItemID itemID;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject hose;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform projectilePosition;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ParticleSystem particleSpray;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ParticleSystem particleStream;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform aimTransform;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public WaterImpactEffect waterImpactEffectPrefab;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4AC02C", Offset = "0x4AC02C")]
	public GameObject waterObject;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int waterBufferLimit;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4AC064", Offset = "0x4AC064")]
	[SerializeField]
	private Transform WarningLight;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Transform needleTransform;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Transform needlePivot;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private MeshRenderer hoseRenderer;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Material gaugeMaterial;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int gaugePropertyID;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int mirrorPropertyID;

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0x822170", Offset = "0x822170", VA = "0x822170")]
	public InventoryCatalogue.ItemID GetItem()
	{
		return default(InventoryCatalogue.ItemID);
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0x8238AC", Offset = "0x8238AC", VA = "0x8238AC")]
	public void ShowLowpressureWarning()
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0x821944", Offset = "0x821944", VA = "0x821944")]
	public void HideLowPressureWarning()
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0x822178", Offset = "0x822178", VA = "0x822178")]
	public void SetUpMaterial()
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x822994", Offset = "0x822994", VA = "0x822994")]
	public void UpdateGaugePosition(Handedness handedness)
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0x8219D0", Offset = "0x8219D0", VA = "0x8219D0")]
	public void UpdateWaterMeter(float fraction)
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x823F6C", Offset = "0x823F6C", VA = "0x823F6C")]
	public TinderTownHoseData()
	{
	}
}
[Token(Token = "0x2000169")]
public class OnGroundHit : MonoBehaviour, IWaterInteractable
{
	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SoundCollisionManager collisionManager;

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x64459C", Offset = "0x64459C", VA = "0x64459C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x644614", Offset = "0x644614", VA = "0x644614", Slot = "4")]
	public void OnWaterCollision(Collision col, GameObject waterProjectile)
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0x644668", Offset = "0x644668", VA = "0x644668")]
	public OnGroundHit()
	{
	}
}
[Token(Token = "0x200016A")]
public class SoundCollisionManager : SingletonBehavior<SoundCollisionManager>
{
	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool hasWaterHitStarted;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool hasWaterHitSoundBeenTriggered;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float waterHitStopTime;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform waterHitTransform;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool hasGroundHitStarted;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool hasGroundHitSoundBeenTriggered;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float groundHitStopTime;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform groundHitTransform;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SoundManager soundManager;

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x6A5EF4", Offset = "0x6A5EF4", VA = "0x6A5EF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x6A5F9C", Offset = "0x6A5F9C", VA = "0x6A5F9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x6A60A0", Offset = "0x6A60A0", VA = "0x6A60A0")]
	public void WaterHitStarted(Transform transform)
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x6A6038", Offset = "0x6A6038", VA = "0x6A6038")]
	public void WaterHitStopped(Transform transform)
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0x6A6100", Offset = "0x6A6100", VA = "0x6A6100")]
	public void GroundHitStarted(Transform transform)
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0x6A606C", Offset = "0x6A606C", VA = "0x6A606C")]
	public void GroundHitStopped(Transform transform)
	{
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0x6A6160", Offset = "0x6A6160", VA = "0x6A6160")]
	public SoundCollisionManager()
	{
	}
}
[Token(Token = "0x200016B")]
public class SoundManager : MonoBehaviour
{
	[Token(Token = "0x200040A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8E54", Offset = "0x4A8E54")]
	private sealed class <PlayPlaylistAfterDelayCoroutine>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string PlaylistName;

		[Token(Token = "0x170001BA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C86")]
			[Address(RVA = "0x6A6E48", Offset = "0x6A6E48", VA = "0x6A6E48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C88")]
			[Address(RVA = "0x6A6EB8", Offset = "0x6A6EB8", VA = "0x6A6EB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0x6A6D40", Offset = "0x6A6D40", VA = "0x6A6D40")]
		[DebuggerHidden]
		public <PlayPlaylistAfterDelayCoroutine>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0x6A6D74", Offset = "0x6A6D74", VA = "0x6A6D74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0x6A6D78", Offset = "0x6A6D78", VA = "0x6A6D78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0x6A6E50", Offset = "0x6A6E50", VA = "0x6A6E50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SoundManager instance;

	[Token(Token = "0x17000095")]
	public static SoundManager Instance
	{
		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x6A5F4C", Offset = "0x6A5F4C", VA = "0x6A5F4C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0x6A61C0", Offset = "0x6A61C0", VA = "0x6A61C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0x6A6214", Offset = "0x6A6214", VA = "0x6A6214")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0x6A6264", Offset = "0x6A6264", VA = "0x6A6264")]
	public void OnWaveStarted(int waveNumber)
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0x6A6324", Offset = "0x6A6324", VA = "0x6A6324")]
	public void OnWaveCompleted(int waveNumber)
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0x6A63E4", Offset = "0x6A63E4", VA = "0x6A63E4")]
	public void HoseStartShooting(bool isCritical)
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0x6A659C", Offset = "0x6A659C", VA = "0x6A659C")]
	public void HoseStoppedShooting()
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0x6A67E0", Offset = "0x6A67E0", VA = "0x6A67E0")]
	public void OnHoseEnteringEmptyState()
	{
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0x6A6828", Offset = "0x6A6828", VA = "0x6A6828")]
	public void HoseEmptyStart()
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0x6A6908", Offset = "0x6A6908", VA = "0x6A6908")]
	public void HoseEmptyStopped()
	{
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0x6A60F8", Offset = "0x6A60F8", VA = "0x6A60F8")]
	public void GeneralWaterHitStartedSound(Transform transform)
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0x6A6974", Offset = "0x6A6974", VA = "0x6A6974")]
	public void WallHitSound(Transform transform)
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0x6A60FC", Offset = "0x6A60FC", VA = "0x6A60FC")]
	public void GeneralWaterHitStoppedSound(Transform transform)
	{
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0x6A6978", Offset = "0x6A6978", VA = "0x6A6978")]
	public void FirePopUpStartedSound(Transform transform)
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0x6A6A58", Offset = "0x6A6A58", VA = "0x6A6A58")]
	public void FirePopUpSound(Transform transform)
	{
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0x6A6A5C", Offset = "0x6A6A5C", VA = "0x6A6A5C")]
	public void FirePopUpStoppedSound(Transform transform)
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0x6A6A60", Offset = "0x6A6A60", VA = "0x6A6A60")]
	public void ScoreSound(Transform transform)
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0x6A6A68", Offset = "0x6A6A68", VA = "0x6A6A68")]
	public void ScoreSound(Transform transform, WaveTarget.Type waveTargetType)
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0x6A6158", Offset = "0x6A6158", VA = "0x6A6158")]
	public void GroundHitStarted(Transform transform)
	{
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0x6A6AD8", Offset = "0x6A6AD8", VA = "0x6A6AD8")]
	public void GroundHitSound(Transform transform)
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0x6A615C", Offset = "0x6A615C", VA = "0x6A615C")]
	public void GroundHitStopped(Transform tranform)
	{
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0x6A6ADC", Offset = "0x6A6ADC", VA = "0x6A6ADC")]
	public void AmmoRefillStarted(Transform transform)
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0x6A6B74", Offset = "0x6A6B74", VA = "0x6A6B74")]
	public void AmmoRefillStopped()
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0x6A651C", Offset = "0x6A651C", VA = "0x6A651C")]
	private void PlaySound(string name)
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x6A6768", Offset = "0x6A6768", VA = "0x6A6768")]
	private void FadeOutSound(string name, float fadeTime)
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x6A69C8", Offset = "0x6A69C8", VA = "0x6A69C8")]
	private void PlaySoundAt(string name, Transform transform)
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x6A6BF4", Offset = "0x6A6BF4", VA = "0x6A6BF4")]
	private void PlaySoundAtForget(string name, Transform transform)
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x6A6C7C", Offset = "0x6A6C7C", VA = "0x6A6C7C")]
	public void PlayPlaylistAfterDelay(string PlaylistName, float delay)
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0x6A6CA8", Offset = "0x6A6CA8", VA = "0x6A6CA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B1D10", Offset = "0x4B1D10")]
	private IEnumerator PlayPlaylistAfterDelayCoroutine(string PlaylistName, float delay)
	{
		return null;
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0x6A6D6C", Offset = "0x6A6D6C", VA = "0x6A6D6C")]
	public SoundManager()
	{
	}
}
[Token(Token = "0x200016C")]
public class TinderTownEventSounds : MonoBehaviour
{
	[Token(Token = "0x6000B09")]
	[Address(RVA = "0x82142C", Offset = "0x82142C", VA = "0x82142C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0x8214E4", Offset = "0x8214E4", VA = "0x8214E4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0x82159C", Offset = "0x82159C", VA = "0x82159C")]
	private void OnStartGame()
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0x821604", Offset = "0x821604", VA = "0x821604")]
	public TinderTownEventSounds()
	{
	}
}
[Token(Token = "0x200016D")]
public abstract class BaseTarget : MonoBehaviour
{
	[Token(Token = "0x200040B")]
	public delegate void OnTargetHitHandler(BaseTarget sender);

	[Token(Token = "0x17000096")]
	public abstract bool TargetIsRaised
	{
		[Token(Token = "0x6000B13")]
		get;
	}

	[Token(Token = "0x14000023")]
	public event OnTargetHitHandler OnTargetHitEvent
	{
		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x6BC228", Offset = "0x6BC228", VA = "0x6BC228")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1D74", Offset = "0x4B1D74")]
		add
		{
		}
		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x6BC314", Offset = "0x6BC314", VA = "0x6BC314")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1D84", Offset = "0x4B1D84")]
		remove
		{
		}
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0x6BC400", Offset = "0x6BC400", VA = "0x6BC400")]
	protected void DispatchOnTargetHitEvent()
	{
	}

	[Token(Token = "0x6000B10")]
	public abstract void PopUpTarget();

	[Token(Token = "0x6000B11")]
	public abstract void PopUpTargetWithDelay(float delaySeconds);

	[Token(Token = "0x6000B12")]
	public abstract void PopDownTarget();

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0x6BCB4C", Offset = "0x6BCB4C", VA = "0x6BCB4C")]
	protected BaseTarget()
	{
	}
}
[Token(Token = "0x200016E")]
public class BasicFinalTarget : MonoBehaviour, IWaterInteractable
{
	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float RaiseTime;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fallTime;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LeanTweenType easeType;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SoundManager soundManager;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float score;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject scorePrefab;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 startRot;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool isRisen;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool isFallen;

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0x6BCB94", Offset = "0x6BCB94", VA = "0x6BCB94")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0x6BCD6C", Offset = "0x6BCD6C", VA = "0x6BCD6C")]
	private void OnWaveStartSignal()
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0x6BCDDC", Offset = "0x6BCDDC", VA = "0x6BCDDC")]
	private void Raise()
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0x6BCF70", Offset = "0x6BCF70", VA = "0x6BCF70", Slot = "4")]
	public void OnWaterCollision(Collision col, GameObject waterProjectile)
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0x6BCFBC", Offset = "0x6BCFBC", VA = "0x6BCFBC")]
	private void FallDown()
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0x6BD1AC", Offset = "0x6BD1AC", VA = "0x6BD1AC")]
	private void GivePoints()
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0x6BD534", Offset = "0x6BD534", VA = "0x6BD534")]
	private void DisableObject()
	{
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0x6BD5DC", Offset = "0x6BD5DC", VA = "0x6BD5DC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0x6BD694", Offset = "0x6BD694", VA = "0x6BD694")]
	public BasicFinalTarget()
	{
	}
}
[Token(Token = "0x200016F")]
public class CannonBall : MonoBehaviour, IWaterInteractable
{
	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotationEachFrame;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float gravity;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 velocity;

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x6CB660", Offset = "0x6CB660", VA = "0x6CB660")]
	public void Shoot(Vector3 velocity)
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x6CB680", Offset = "0x6CB680", VA = "0x6CB680")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x6CB7D0", Offset = "0x6CB7D0", VA = "0x6CB7D0", Slot = "4")]
	public void OnWaterCollision(Collision col, GameObject waterProjectile)
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x6CB88C", Offset = "0x6CB88C", VA = "0x6CB88C")]
	public CannonBall()
	{
	}
}
[Token(Token = "0x2000170")]
public class LowerEmissionOnFinal : MonoBehaviour
{
	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public short minEmissionBurst;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public short maxEmissionBurst;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem.Burst[] burstOnFinal;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem particle;

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x741B18", Offset = "0x741B18", VA = "0x741B18")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x741C20", Offset = "0x741C20", VA = "0x741C20")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x741CE8", Offset = "0x741CE8", VA = "0x741CE8")]
	public LowerEmissionOnFinal()
	{
	}
}
[Token(Token = "0x2000171")]
public class PointMovement : MonoBehaviour
{
	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Transform> wayPoints;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TravelTime;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LeanTweenType MovementType;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool Rotate;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int index;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LTDescr ltDescrMove;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LTDescr ltDescrRot;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] wayPointsPosition;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] wayPointsAngles;

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x668928", Offset = "0x668928", VA = "0x668928")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x668BD4", Offset = "0x668BD4", VA = "0x668BD4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x668EFC", Offset = "0x668EFC", VA = "0x668EFC")]
	private void MoveToNext()
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0x66924C", Offset = "0x66924C", VA = "0x66924C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0x6693F8", Offset = "0x6693F8", VA = "0x6693F8")]
	public PointMovement()
	{
	}
}
[Token(Token = "0x2000172")]
public class ScorePopUp : MonoBehaviour
{
	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text scoreText;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 startPos;

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0x69AE30", Offset = "0x69AE30", VA = "0x69AE30")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0x69AF60", Offset = "0x69AF60", VA = "0x69AF60")]
	public void PopUp(int score)
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0x69B354", Offset = "0x69B354", VA = "0x69B354")]
	private void OnPopUpComplete()
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0x69B5C8", Offset = "0x69B5C8", VA = "0x69B5C8")]
	public ScorePopUp()
	{
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0x69B5D0", Offset = "0x69B5D0", VA = "0x69B5D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1D94", Offset = "0x4B1D94")]
	private void <OnPopUpComplete>b__4_0()
	{
	}
}
[Token(Token = "0x2000173")]
public class Joint : MonoBehaviour
{
	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isWheelTarget;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4AC0F0", Offset = "0x4AC0F0")]
	public float foldedAngle;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4AC110", Offset = "0x4AC110")]
	public float unfoldedAngle;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4AC130", Offset = "0x4AC130")]
	public float minRotationOffset;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4AC150", Offset = "0x4AC150")]
	public float maxRotationOffset;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool constantRotation;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float rotationSpeed;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4AC170", Offset = "0x4AC170")]
	public float unfoldTime;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4AC190", Offset = "0x4AC190")]
	public float unfoldDelay;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public float foldDelay;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float __debugAngle;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 unfoldVector;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 foldVector;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool isFullyUnfolded;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float swingAngle;

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0x73E78C", Offset = "0x73E78C", VA = "0x73E78C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0x73E8E8", Offset = "0x73E8E8", VA = "0x73E8E8")]
	public void Show()
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0x73EB38", Offset = "0x73EB38", VA = "0x73EB38")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0x73ECD8", Offset = "0x73ECD8", VA = "0x73ECD8")]
	public void ImmidiateHide()
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0x73EDFC", Offset = "0x73EDFC", VA = "0x73EDFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0x73EF78", Offset = "0x73EF78", VA = "0x73EF78")]
	public Joint()
	{
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0x73EF88", Offset = "0x73EF88", VA = "0x73EF88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1DA4", Offset = "0x4B1DA4")]
	private void <Show>b__15_0()
	{
	}
}
[Token(Token = "0x2000174")]
public class RootJoint : MonoBehaviour
{
	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Joint[] childJoints;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float unfoldTime;

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0x697D20", Offset = "0x697D20", VA = "0x697D20")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0x697F00", Offset = "0x697F00", VA = "0x697F00")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0x697F54", Offset = "0x697F54", VA = "0x697F54")]
	public void Show()
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0x698070", Offset = "0x698070", VA = "0x698070")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x69818C", Offset = "0x69818C", VA = "0x69818C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x698208", Offset = "0x698208", VA = "0x698208")]
	public RootJoint()
	{
	}
}
[Token(Token = "0x2000175")]
public class WheelTarget : MonoBehaviour
{
	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x8302C8", Offset = "0x8302C8", VA = "0x8302C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x8302CC", Offset = "0x8302CC", VA = "0x8302CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x8302D0", Offset = "0x8302D0", VA = "0x8302D0")]
	public WheelTarget()
	{
	}
}
[Token(Token = "0x2000176")]
public class TempFoldTargetWhenHit : MonoBehaviour, IWaterInteractable
{
	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float lastHitTime;

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0x6AFA9C", Offset = "0x6AFA9C", VA = "0x6AFA9C", Slot = "4")]
	public void OnWaterCollision(Collision col, GameObject waterProjectile)
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x6AFB98", Offset = "0x6AFB98", VA = "0x6AFB98")]
	public TempFoldTargetWhenHit()
	{
	}
}
[Token(Token = "0x2000177")]
public class Wheel : MonoBehaviour
{
	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rotationSpeed;

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0x82F044", Offset = "0x82F044", VA = "0x82F044")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x82F098", Offset = "0x82F098", VA = "0x82F098")]
	public Wheel()
	{
	}
}
[Token(Token = "0x2000178")]
public class TicketTarget : MonoBehaviour, IWaterInteractable
{
	[Token(Token = "0x200040C")]
	public delegate void OnTargetHitHandler(TicketTarget sender);

	[Token(Token = "0x200040D")]
	public delegate void OnLifeTimeOver(TicketTarget sender);

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lifeTime;

	[Token(Token = "0x40009A6")]
	private const float heightDisplacement = 3f;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool isTargetable;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CountdownTime countdownTimer;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 originalScale;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 originalPosition;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isRotating;

	[Token(Token = "0x40009AC")]
	private const float ticketTiltAngle = -55f;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float rotationSpeed;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ParticleSystem particles;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform collectedParticles;

	[Token(Token = "0x17000097")]
	public bool TicketIsTargetable
	{
		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x81E6EC", Offset = "0x81E6EC", VA = "0x81E6EC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000024")]
	public event OnTargetHitHandler OnTargetHitEvent
	{
		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x81D9CC", Offset = "0x81D9CC", VA = "0x81D9CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1DB4", Offset = "0x4B1DB4")]
		add
		{
		}
		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x81DF00", Offset = "0x81DF00", VA = "0x81DF00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1DC4", Offset = "0x4B1DC4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000025")]
	public event OnLifeTimeOver OnLifeTimeOverEvent
	{
		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x81D8D0", Offset = "0x81D8D0", VA = "0x81D8D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1DD4", Offset = "0x4B1DD4")]
		add
		{
		}
		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x81DE14", Offset = "0x81DE14", VA = "0x81DE14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1DE4", Offset = "0x4B1DE4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0x81DFEC", Offset = "0x81DFEC", VA = "0x81DFEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0x81E2D8", Offset = "0x81E2D8", VA = "0x81E2D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0x81E6DC", Offset = "0x81E6DC", VA = "0x81E6DC")]
	private void OnFinalWave()
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0x81DAB8", Offset = "0x81DAB8", VA = "0x81DAB8")]
	public void SpawnTicket()
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0x81E8C0", Offset = "0x81E8C0", VA = "0x81E8C0", Slot = "4")]
	public void OnWaterCollision(Collision col, GameObject waterProjectile)
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0x81EBC0", Offset = "0x81EBC0", VA = "0x81EBC0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0x81E6F4", Offset = "0x81E6F4", VA = "0x81E6F4")]
	private void PlaySpawnAnimation()
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0x81E444", Offset = "0x81E444", VA = "0x81E444")]
	private void DespawnTicket()
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0x81EA50", Offset = "0x81EA50", VA = "0x81EA50")]
	private void DespawnHitTicket()
	{
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0x81FB24", Offset = "0x81FB24", VA = "0x81FB24")]
	public TicketTarget()
	{
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0x81FB3C", Offset = "0x81FB3C", VA = "0x81FB3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1DF4", Offset = "0x4B1DF4")]
	private void <DespawnTicket>b__28_0()
	{
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0x81FD74", Offset = "0x81FD74", VA = "0x81FD74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1E04", Offset = "0x4B1E04")]
	private void <DespawnTicket>b__28_1()
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0x81FDAC", Offset = "0x81FDAC", VA = "0x81FDAC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1E14", Offset = "0x4B1E14")]
	private void <DespawnHitTicket>b__29_0()
	{
	}
}
[Token(Token = "0x2000179")]
public class WaveTarget : BaseTarget, IWaterInteractable
{
	[Token(Token = "0x200040E")]
	public enum Type
	{
		[Token(Token = "0x4001878")]
		Fire,
		[Token(Token = "0x4001879")]
		Bonus
	}

	[Token(Token = "0x200040F")]
	private enum TargetState
	{
		[Token(Token = "0x400187B")]
		Fallen,
		[Token(Token = "0x400187C")]
		GoingUp,
		[Token(Token = "0x400187D")]
		Raised,
		[Token(Token = "0x400187E")]
		GoingDown
	}

	[Token(Token = "0x2000410")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8E64", Offset = "0x4A8E64")]
	private sealed class <>c__DisplayClass25_0
	{
		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WaveTarget <>4__this;

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float hideDelay;

		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float showDelay;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__1;

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0x82E0FC", Offset = "0x82E0FC", VA = "0x82E0FC")]
		public <>c__DisplayClass25_0()
		{
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0x82E3BC", Offset = "0x82E3BC", VA = "0x82E3BC")]
		internal void <ShowAndHideTargetWithDelay>b__0()
		{
		}

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0x82E504", Offset = "0x82E504", VA = "0x82E504")]
		internal void <ShowAndHideTargetWithDelay>b__1()
		{
		}
	}

	[Token(Token = "0x2000411")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8E74", Offset = "0x4A8E74")]
	private sealed class <>c__DisplayClass26_0
	{
		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject particleObj;

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0x82E104", Offset = "0x82E104", VA = "0x82E104")]
		public <>c__DisplayClass26_0()
		{
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0x82E57C", Offset = "0x82E57C", VA = "0x82E57C")]
		internal void <SpawnParticle>b__0()
		{
		}
	}

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int baseScore;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int waveMultiplier;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Type type;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ScorePopUp scorePopUp;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int score;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float DipDownLength;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float startPosY;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float popDownPosY;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TargetState currentState;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion startRotation;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 targetTweanRotation;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool doDispatchPopupSound;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform hitDebris;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject FireMesh;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float degreesFromPlayer;

	[Token(Token = "0x17000098")]
	public float DegreesFromPlayer
	{
		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x82C9CC", Offset = "0x82C9CC", VA = "0x82C9CC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000099")]
	public override bool TargetIsRaised
	{
		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x82E114", Offset = "0x82E114", VA = "0x82E114", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0x82CAB8", Offset = "0x82CAB8", VA = "0x82CAB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0x82CD1C", Offset = "0x82CD1C", VA = "0x82CD1C", Slot = "5")]
	public override void PopUpTargetWithDelay(float delayTime)
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0x82CDF8", Offset = "0x82CDF8", VA = "0x82CDF8", Slot = "4")]
	public override void PopUpTarget()
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0x82D274", Offset = "0x82D274", VA = "0x82D274", Slot = "6")]
	public override void PopDownTarget()
	{
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0x82D438", Offset = "0x82D438", VA = "0x82D438")]
	private void DoMoveDown()
	{
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0x82D724", Offset = "0x82D724", VA = "0x82D724", Slot = "8")]
	public void OnWaterCollision(Collision col, GameObject waterProjectile)
	{
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0x82DF84", Offset = "0x82DF84", VA = "0x82DF84")]
	public void ShowAndHideTargetWithDelay(float showDelay, float hideDelay)
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0x82DD10", Offset = "0x82DD10", VA = "0x82DD10")]
	private void SpawnParticle(string objectName)
	{
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0x82D15C", Offset = "0x82D15C", VA = "0x82D15C")]
	private void DispatchSoundEvent(string eventName)
	{
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0x82E10C", Offset = "0x82E10C", VA = "0x82E10C")]
	public Type GetTargetType()
	{
		return default(Type);
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0x82E124", Offset = "0x82E124", VA = "0x82E124")]
	protected void OnDestroy()
	{
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0x82E1A0", Offset = "0x82E1A0", VA = "0x82E1A0")]
	public WaveTarget()
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0x82E1B8", Offset = "0x82E1B8", VA = "0x82E1B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1E24", Offset = "0x4B1E24")]
	private void <PopUpTarget>b__21_0()
	{
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0x82E1C4", Offset = "0x82E1C4", VA = "0x82E1C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1E34", Offset = "0x4B1E34")]
	private void <PopDownTarget>b__22_0()
	{
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0x82E200", Offset = "0x82E200", VA = "0x82E200")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1E44", Offset = "0x4B1E44")]
	private void <DoMoveDown>b__23_0()
	{
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0x82E23C", Offset = "0x82E23C", VA = "0x82E23C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1E54", Offset = "0x4B1E54")]
	private void <DoMoveDown>b__23_1()
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0x82E288", Offset = "0x82E288", VA = "0x82E288")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1E64", Offset = "0x4B1E64")]
	private void <OnWaterCollision>b__24_0()
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0x82E344", Offset = "0x82E344", VA = "0x82E344")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1E74", Offset = "0x4B1E74")]
	private void <OnWaterCollision>b__24_1()
	{
	}
}
[Token(Token = "0x200017A")]
public class WaveTargetHolder : MonoBehaviour
{
	[Token(Token = "0x2000412")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8E84", Offset = "0x4A8E84")]
	private sealed class <ShowWaveCompleted>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaveTargetHolder <>4__this;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float lifeTime;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator <animator>5__2;

		[Token(Token = "0x170001BC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C9D")]
			[Address(RVA = "0x82EBDC", Offset = "0x82EBDC", VA = "0x82EBDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C9F")]
			[Address(RVA = "0x82EC4C", Offset = "0x82EC4C", VA = "0x82EC4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0x82E6F0", Offset = "0x82E6F0", VA = "0x82E6F0")]
		[DebuggerHidden]
		public <ShowWaveCompleted>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0x82E830", Offset = "0x82E830", VA = "0x82E830", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0x82E834", Offset = "0x82E834", VA = "0x82E834", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0x82EBE4", Offset = "0x82EBE4", VA = "0x82EBE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject WaveCompletedSign;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 bonusTokenDisplacement;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private HingeJoint hinge;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject hingeObject;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform hingeTrans;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 hingeStartPos;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Rigidbody hingeRigidbody;

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0x82E5EC", Offset = "0x82E5EC", VA = "0x82E5EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0x82BF34", Offset = "0x82BF34", VA = "0x82BF34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B1E84", Offset = "0x4B1E84")]
	public IEnumerator ShowWaveCompleted(float lifeTime)
	{
		return null;
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0x82E71C", Offset = "0x82E71C", VA = "0x82E71C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0x82E798", Offset = "0x82E798", VA = "0x82E798")]
	public WaveTargetHolder()
	{
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0x82E7FC", Offset = "0x82E7FC", VA = "0x82E7FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1EE8", Offset = "0x4B1EE8")]
	private void <ShowWaveCompleted>b__8_0()
	{
	}
}
[Token(Token = "0x200017B")]
public class TinderTownPrefabRegistry : MonoBehaviour
{
	[Token(Token = "0x2000413")]
	public enum PrefabId
	{
		[Token(Token = "0x400188A")]
		ScorePopup,
		[Token(Token = "0x400188B")]
		CannonFodder
	}

	[Serializable]
	[Token(Token = "0x2000414")]
	public struct PrefabAndId
	{
		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PrefabId id;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject prefab;
	}

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PrefabAndId[] prefabs;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TinderTownPrefabRegistry instance;

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0x82420C", Offset = "0x82420C", VA = "0x82420C")]
	public static GameObject Get(PrefabId id)
	{
		return null;
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0x824438", Offset = "0x824438", VA = "0x824438")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0x82448C", Offset = "0x82448C", VA = "0x82448C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0x8244DC", Offset = "0x8244DC", VA = "0x8244DC")]
	public TinderTownPrefabRegistry()
	{
	}
}
[Token(Token = "0x200017C")]
public class TinderTownSignals
{
	[Serializable]
	[Token(Token = "0x2000415")]
	public struct ScoreUpdatedParams
	{
		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int score;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public WaveTarget.Type type;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string objectName;

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0x50C340", Offset = "0x50C340", VA = "0x50C340")]
		public ScoreUpdatedParams(WaveTarget.Type targetType, int targetScore, string newObjectName)
		{
		}
	}

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Signal IntroductionStart;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly Signal GameStart;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly Signal<FinalScore> GameFinished;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly Signal<int> OnWaveStarted;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly Signal<int> OnWaveCompleted;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly Signal<ScoreUpdatedParams> OnScoreUpdated;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly Signal OnFinalWaveStarted;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly Signal OnFinalWaveCompleted;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly Signal OnInfiniteAmmoStarted;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static readonly Signal OnInfiniteAmmoEnded;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static readonly Signal outOfWater;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static readonly Signal forcedWaterReplenishStarted;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static readonly Signal forcedWaterReplenishStopped;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static readonly Signal<float> waterLevelFractionChanged;

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0x8244E4", Offset = "0x8244E4", VA = "0x8244E4")]
	public TinderTownSignals()
	{
	}
}
[Token(Token = "0x200017D")]
public class BonusTimeToken : SingletonBehavior<BonusTimeToken>
{
	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 goalPosition;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float duration;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float delayBeforeMoving;

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x6C596C", Offset = "0x6C596C", VA = "0x6C596C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x6C59A4", Offset = "0x6C59A4", VA = "0x6C59A4")]
	public void SpawnAt(Vector3 spawnPos, Quaternion spawnRot)
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0x6C5D18", Offset = "0x6C5D18", VA = "0x6C5D18", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0x6C5DA8", Offset = "0x6C5DA8", VA = "0x6C5DA8")]
	public BonusTimeToken()
	{
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x6C5DF8", Offset = "0x6C5DF8", VA = "0x6C5DF8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1EF8", Offset = "0x4B1EF8")]
	private void <SpawnAt>b__4_0()
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0x6C5EB0", Offset = "0x6C5EB0", VA = "0x6C5EB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B1F08", Offset = "0x4B1F08")]
	private void <SpawnAt>b__4_1()
	{
	}
}
[Token(Token = "0x200017E")]
public class StartGame : MonoBehaviour, IWaterInteractable
{
	[Token(Token = "0x2000416")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8E94", Offset = "0x4A8E94")]
	private sealed class <StartGameWithDelay>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StartGame <>4__this;

		[Token(Token = "0x170001BE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CA4")]
			[Address(RVA = "0x6AB1D8", Offset = "0x6AB1D8", VA = "0x6AB1D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CA6")]
			[Address(RVA = "0x6AB248", Offset = "0x6AB248", VA = "0x6AB248", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0x6AB074", Offset = "0x6AB074", VA = "0x6AB074")]
		[DebuggerHidden]
		public <StartGameWithDelay>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0x6AB0B0", Offset = "0x6AB0B0", VA = "0x6AB0B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0x6AB0B4", Offset = "0x6AB0B4", VA = "0x6AB0B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0x6AB1E0", Offset = "0x6AB1E0", VA = "0x6AB1E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float delayAfterInstructions;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TinderTownInstructions instructions;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Collider waterCollider;

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0x6AAD34", Offset = "0x6AAD34", VA = "0x6AAD34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x6AAE10", Offset = "0x6AAE10", VA = "0x6AAE10")]
	private void ShowInstructions()
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x6AAEF4", Offset = "0x6AAEF4", VA = "0x6AAEF4", Slot = "4")]
	public void OnWaterCollision(Collision col, GameObject waterProjectile)
	{
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x6AB000", Offset = "0x6AB000", VA = "0x6AB000")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B1F18", Offset = "0x4B1F18")]
	private IEnumerator StartGameWithDelay()
	{
		return null;
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0x6AB0A0", Offset = "0x6AB0A0", VA = "0x6AB0A0")]
	public StartGame()
	{
	}
}
[Token(Token = "0x200017F")]
public class TinderTownInstructions : SingleInstanceBehavior<TinderTownInstructions>
{
	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator anim;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator recenterTutorialAnimator;

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0x823FC4", Offset = "0x823FC4", VA = "0x823FC4", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x824054", Offset = "0x824054", VA = "0x824054")]
	public void Show()
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x824134", Offset = "0x824134", VA = "0x824134")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x82419C", Offset = "0x82419C", VA = "0x82419C")]
	public TinderTownInstructions()
	{
	}
}
[Token(Token = "0x2000180")]
public class EmissionDecay : MonoBehaviour
{
	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float decaySpeed;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem waterParticleSystem;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem.EmissionModule emission;

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x71B4D4", Offset = "0x71B4D4", VA = "0x71B4D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0x71B548", Offset = "0x71B548", VA = "0x71B548")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x71B5E8", Offset = "0x71B5E8", VA = "0x71B5E8")]
	public EmissionDecay()
	{
	}
}
[Token(Token = "0x2000181")]
public interface IWaterInteractable
{
	[Token(Token = "0x6000B86")]
	void OnWaterCollision(Collision col, GameObject waterProjectile);
}
[Token(Token = "0x2000182")]
public class WaterCollision : MonoBehaviour
{
	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SoundCollisionManager collisionManager;

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0x829368", Offset = "0x829368", VA = "0x829368")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0x8293BC", Offset = "0x8293BC", VA = "0x8293BC")]
	private void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0x829554", Offset = "0x829554", VA = "0x829554")]
	private void MoveWaterImpact(Collision col)
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0x82973C", Offset = "0x82973C", VA = "0x82973C")]
	public WaterCollision()
	{
	}
}
[Token(Token = "0x2000183")]
public class WaterImpactEffect : SingletonBehavior<WaterImpactEffect>
{
	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject waterImpact;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform waterImpactTrans;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem waterImpactParticles;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem.EmissionModule waterImpactEmission;

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0x829744", Offset = "0x829744", VA = "0x829744")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0x82969C", Offset = "0x82969C", VA = "0x82969C")]
	public void Impact(Vector3 worldPos)
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0x8297E8", Offset = "0x8297E8", VA = "0x8297E8")]
	public WaterImpactEffect()
	{
	}
}
[Token(Token = "0x2000184")]
public class WaterSprite : MonoBehaviour
{
	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite[] sprites;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SpriteRenderer spriteRenderer;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float startRotationMin;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float startRotationMax;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float rotationMin;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float rotationMax;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float scaleMin;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float scaleMax;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float scaleTime;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float currentLerpTime;

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0x829838", Offset = "0x829838", VA = "0x829838")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0x829890", Offset = "0x829890", VA = "0x829890")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0x829AB4", Offset = "0x829AB4", VA = "0x829AB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0x8298C4", Offset = "0x8298C4", VA = "0x8298C4")]
	private void ChooseRandomSprite()
	{
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0x829A3C", Offset = "0x829A3C", VA = "0x829A3C")]
	private void ResetScale()
	{
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0x829B44", Offset = "0x829B44", VA = "0x829B44")]
	private void ScaleIncrease()
	{
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0x829AAC", Offset = "0x829AAC", VA = "0x829AAC")]
	private void ResetLerpTime()
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0x82995C", Offset = "0x82995C", VA = "0x82995C")]
	private void ChooseRandomRotation()
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0x829AD8", Offset = "0x829AD8", VA = "0x829AD8")]
	private void Rotate()
	{
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0x829C84", Offset = "0x829C84", VA = "0x829C84")]
	public WaterSprite()
	{
	}
}
[Token(Token = "0x2000185")]
public class WaterTrumpetSprite : MonoBehaviour
{
	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite[] sprites;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SpriteRenderer spriteRenderer;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float startRotationMin;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float startRotationMax;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float rotationMin;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float rotationMax;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float rotationValue;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float scaleMin;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float scaleMax;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float scaleEnd;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float scaleTime;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 startScale;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float currentLerpTime;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float alphaMin;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float alphaMax;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float alphaTime;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float currentAlphaLerpTime;

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0x829CA8", Offset = "0x829CA8", VA = "0x829CA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0x829D00", Offset = "0x829D00", VA = "0x829D00")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0x829FB0", Offset = "0x829FB0", VA = "0x829FB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0x829D48", Offset = "0x829D48", VA = "0x829D48")]
	private void ChooseRandomSprite()
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0x829EEC", Offset = "0x829EEC", VA = "0x829EEC")]
	private void RandomScale()
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0x829FB4", Offset = "0x829FB4", VA = "0x829FB4")]
	private void ScaleIncrease()
	{
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0x829FA4", Offset = "0x829FA4", VA = "0x829FA4")]
	private void ResetLerpTime()
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0x82A0E4", Offset = "0x82A0E4", VA = "0x82A0E4")]
	private void ResetAlpha()
	{
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0x82A148", Offset = "0x82A148", VA = "0x82A148")]
	private void AlphaIncrease()
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0x829DE0", Offset = "0x829DE0", VA = "0x829DE0")]
	private void ChooseRandomRotation()
	{
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0x829EC0", Offset = "0x829EC0", VA = "0x829EC0")]
	private void ChooseRandomRotationValue()
	{
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0x82A248", Offset = "0x82A248", VA = "0x82A248")]
	private void Rotate()
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0x82A2A8", Offset = "0x82A2A8", VA = "0x82A2A8")]
	public WaterTrumpetSprite()
	{
	}
}
[Token(Token = "0x2000186")]
public class WaterUnicornSprite : MonoBehaviour
{
	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite[] sprites;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SpriteRenderer spriteRenderer;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float startRotationMin;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float startRotationMax;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float rotationMin;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float rotationMax;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float rotationValue;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float scaleMin;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float scaleMax;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float scaleTime;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float currentLerpTime;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float alphaMin;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float alphaMax;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float alphaTime;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float currentAlphaLerpTime;

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0x82A2CC", Offset = "0x82A2CC", VA = "0x82A2CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0x82A324", Offset = "0x82A324", VA = "0x82A324")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0x82A5F4", Offset = "0x82A5F4", VA = "0x82A5F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0x82A370", Offset = "0x82A370", VA = "0x82A370")]
	private void ChooseRandomSprite()
	{
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0x82A514", Offset = "0x82A514", VA = "0x82A514")]
	private void ResetScale()
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0x82A680", Offset = "0x82A680", VA = "0x82A680")]
	private void ScaleIncrease()
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0x82A584", Offset = "0x82A584", VA = "0x82A584")]
	private void ResetLerpTime()
	{
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0x82A590", Offset = "0x82A590", VA = "0x82A590")]
	private void ResetAlpha()
	{
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0x82A7C0", Offset = "0x82A7C0", VA = "0x82A7C0")]
	private void AlphaIncrease()
	{
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0x82A408", Offset = "0x82A408", VA = "0x82A408")]
	private void ChooseRandomRotation()
	{
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0x82A4E8", Offset = "0x82A4E8", VA = "0x82A4E8")]
	private void ChooseRandomRotationValue()
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0x82A620", Offset = "0x82A620", VA = "0x82A620")]
	private void Rotate()
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0x82A8C0", Offset = "0x82A8C0", VA = "0x82A8C0")]
	public WaterUnicornSprite()
	{
	}
}
[Token(Token = "0x2000187")]
public class Mecanim_random_idles : StateMachineBehaviour
{
	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0x63CAD4", Offset = "0x63CAD4", VA = "0x63CAD4", Slot = "9")]
	public override void OnStateMachineEnter(Animator animator, int stateMachinePathHash)
	{
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0x63CB4C", Offset = "0x63CB4C", VA = "0x63CB4C")]
	public Mecanim_random_idles()
	{
	}
}
[Token(Token = "0x2000188")]
public class Mecanim_random_idles_weighting : StateMachineBehaviour
{
	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve curve;

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0x63CB54", Offset = "0x63CB54", VA = "0x63CB54")]
	private int animSort()
	{
		return default(int);
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0x63CC30", Offset = "0x63CC30", VA = "0x63CC30", Slot = "9")]
	public override void OnStateMachineEnter(Animator animator, int stateMachinePathHash)
	{
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0x63CC9C", Offset = "0x63CC9C", VA = "0x63CC9C")]
	public Mecanim_random_idles_weighting()
	{
	}
}
[Token(Token = "0x2000189")]
public class TextureImageSequence : MonoBehaviour
{
	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture[] textures;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool reverse;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool looping;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float id;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int frame;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer rend;

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0x6AFEDC", Offset = "0x6AFEDC", VA = "0x6AFEDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0x6AFF34", Offset = "0x6AFF34", VA = "0x6AFF34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0x6B0054", Offset = "0x6B0054", VA = "0x6B0054")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0x6B0190", Offset = "0x6B0190", VA = "0x6B0190")]
	private void PlayForward()
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0x6B0064", Offset = "0x6B0064", VA = "0x6B0064")]
	private void PlayBackward()
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x6B004C", Offset = "0x6B004C", VA = "0x6B004C")]
	private void SetFirstFrame()
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0x6AFFE8", Offset = "0x6AFFE8", VA = "0x6AFFE8")]
	private void SetLastFrame()
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0x6B02D4", Offset = "0x6B02D4", VA = "0x6B02D4")]
	public TextureImageSequence()
	{
	}
}
[Token(Token = "0x200018A")]
public class VanityItemsList : SingletonBehavior<VanityItemsList>
{
	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VanityItemsCategory[] vanityItemCategories;

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0x828A20", Offset = "0x828A20", VA = "0x828A20")]
	public VanityItemPrefabDefinition GetVanityItemPrefabDefinition(InventoryCatalogue.ItemID itemID)
	{
		return null;
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0x828A24", Offset = "0x828A24", VA = "0x828A24")]
	private VanityItemPrefabDefinition GetVanityItemPrefabDefinitionBruteForce(InventoryCatalogue.ItemID itemID)
	{
		return null;
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0x828B54", Offset = "0x828B54", VA = "0x828B54")]
	public VanityItemsList()
	{
	}
}
[Serializable]
[Token(Token = "0x200018B")]
public class VanityItemsCategory
{
	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ItemCategory itemCategory;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VanityItemPrefabDefinition[] vanityItemPrefabDefinitions;

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0x828A18", Offset = "0x828A18", VA = "0x828A18")]
	public VanityItemsCategory()
	{
	}
}
[Serializable]
[Token(Token = "0x200018C")]
public class VanityItemPrefabDefinition
{
	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public InventoryCatalogue.ItemID itemID;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject spawnablePrefab;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ItemCategory itemCategory;

	[Token(Token = "0x1700009A")]
	public ItemCategory ItemCategory
	{
		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0x828A00", Offset = "0x828A00", VA = "0x828A00")]
		get
		{
			return default(ItemCategory);
		}
		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0x828A08", Offset = "0x828A08", VA = "0x828A08")]
		set
		{
		}
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0x828A10", Offset = "0x828A10", VA = "0x828A10")]
	public VanityItemPrefabDefinition()
	{
	}
}
[Token(Token = "0x200018D")]
public class Attraction : MonoBehaviour
{
	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform exitTransform;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject availableRoot;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject unavailableRoot;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private UnlockButton unlockButton;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Minigame.Name sceneToLoad;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public Vector3 entrancePosition;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isAvailable;

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0x6B72BC", Offset = "0x6B72BC", VA = "0x6B72BC", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0x6B74CC", Offset = "0x6B74CC", VA = "0x6B74CC")]
	private void OnPlayerProgressUpdate(int state)
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0x6B7434", Offset = "0x6B7434", VA = "0x6B7434")]
	public void UpdateLockStatus()
	{
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0x6B74D0", Offset = "0x6B74D0", VA = "0x6B74D0")]
	public void UpdateLockVisuals()
	{
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0x6B75D4", Offset = "0x6B75D4", VA = "0x6B75D4")]
	private void UpdateUnlockButtonStatus()
	{
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0x6B76B4", Offset = "0x6B76B4", VA = "0x6B76B4", Slot = "5")]
	public virtual bool IsLocked()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0x6B76C4", Offset = "0x6B76C4", VA = "0x6B76C4")]
	public Vector3 GetExitPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0x6B76F4", Offset = "0x6B76F4", VA = "0x6B76F4")]
	public Quaternion GetExitRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0x6B7724", Offset = "0x6B7724", VA = "0x6B7724", Slot = "6")]
	public virtual bool PlayerCanEnter()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0x6B7748", Offset = "0x6B7748", VA = "0x6B7748")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0x6B7810", Offset = "0x6B7810", VA = "0x6B7810")]
	public Attraction()
	{
	}
}
[Token(Token = "0x200018E")]
public class AttractionCollider : MonoBehaviour
{
	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Attraction attraction;

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0x6B7818", Offset = "0x6B7818", VA = "0x6B7818")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0x6B78B0", Offset = "0x6B78B0", VA = "0x6B78B0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0x6B79A8", Offset = "0x6B79A8", VA = "0x6B79A8")]
	public AttractionCollider()
	{
	}
}
[Token(Token = "0x200018F")]
public class HammerAttractionUnlockLogic : MonoBehaviour
{
	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform movePlayerToPositionOnBuy;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayerAvatar playerAvatar;

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0x793540", Offset = "0x793540", VA = "0x793540")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0x793754", Offset = "0x793754", VA = "0x793754")]
	public HammerAttractionUnlockLogic()
	{
	}
}
[Token(Token = "0x2000190")]
public class PsyduckAttraction : Attraction
{
	[Token(Token = "0x2000417")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8EA4", Offset = "0x4A8EA4")]
	private sealed class <DelayedUpdateStatus>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PsyduckAttraction <>4__this;

		[Token(Token = "0x170001C0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CAA")]
			[Address(RVA = "0x9CE2F8", Offset = "0x9CE2F8", VA = "0x9CE2F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CAC")]
			[Address(RVA = "0x9CE368", Offset = "0x9CE368", VA = "0x9CE368", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0x9CD4CC", Offset = "0x9CD4CC", VA = "0x9CD4CC")]
		[DebuggerHidden]
		public <DelayedUpdateStatus>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0x9CE284", Offset = "0x9CE284", VA = "0x9CE284", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0x9CE288", Offset = "0x9CE288", VA = "0x9CE288", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0x9CE300", Offset = "0x9CE300", VA = "0x9CE300", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000418")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8EB4", Offset = "0x4A8EB4")]
	private sealed class <SpawnParticles>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PsyduckAttraction <>4__this;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int numParticles;

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <spawnPosition>5__2;

		[Token(Token = "0x170001C2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CB0")]
			[Address(RVA = "0x9CE804", Offset = "0x9CE804", VA = "0x9CE804", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CB2")]
			[Address(RVA = "0x9CE874", Offset = "0x9CE874", VA = "0x9CE874", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0x9CE0B0", Offset = "0x9CE0B0", VA = "0x9CE0B0")]
		[DebuggerHidden]
		public <SpawnParticles>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0x9CE508", Offset = "0x9CE508", VA = "0x9CE508", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0x9CE50C", Offset = "0x9CE50C", VA = "0x9CE50C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0x9CE80C", Offset = "0x9CE80C", VA = "0x9CE80C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000419")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8EC4", Offset = "0x4A8EC4")]
	private sealed class <EnableClickInteraction>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PsyduckAttraction <>4__this;

		[Token(Token = "0x170001C4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CB6")]
			[Address(RVA = "0x9CE490", Offset = "0x9CE490", VA = "0x9CE490", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CB8")]
			[Address(RVA = "0x9CE500", Offset = "0x9CE500", VA = "0x9CE500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0x9CE1A8", Offset = "0x9CE1A8", VA = "0x9CE1A8")]
		[DebuggerHidden]
		public <EnableClickInteraction>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0x9CE370", Offset = "0x9CE370", VA = "0x9CE370", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0x9CE374", Offset = "0x9CE374", VA = "0x9CE374", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0x9CE498", Offset = "0x9CE498", VA = "0x9CE498", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int ANIMID_OPEN;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int ANIMID_INSTANT_OPEN;

	[Token(Token = "0x4000A2D")]
	public const int TicketsRequiredToSpin = 30;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int numDoorTickets;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4AC240", Offset = "0x4AC240")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private MeshRenderer progressionRenderer;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Text ticketAmountText;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject getSpinEffect;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private ParticleMover particleMover;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool canEnter;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float fillRate;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float emptyRate;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Material progressionMaterial;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int countingNumSpins;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float currentFillFraction;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float targetFillFraction;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int numberOfTicketsDisplayed;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float totalFillFractionDecreased;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private readonly int maxHeldTickets;

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0x9CD00C", Offset = "0x9CD00C", VA = "0x9CD00C")]
	public static void SetDoorTickets(int amount)
	{
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0x9CD078", Offset = "0x9CD078", VA = "0x9CD078")]
	public static void AddDoorTickets(int amount)
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0x9CD0EC", Offset = "0x9CD0EC", VA = "0x9CD0EC")]
	public static void RemoveDoorTickets(int amount)
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0x9CD160", Offset = "0x9CD160", VA = "0x9CD160")]
	public static int GetNumDoorTickets()
	{
		return default(int);
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0x9CD1C8", Offset = "0x9CD1C8", VA = "0x9CD1C8", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0x9CD458", Offset = "0x9CD458", VA = "0x9CD458")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B1F7C", Offset = "0x4B1F7C")]
	private IEnumerator DelayedUpdateStatus()
	{
		return null;
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0x9CD4F8", Offset = "0x9CD4F8", VA = "0x9CD4F8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0x9CD700", Offset = "0x9CD700", VA = "0x9CD700")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0x9CDAD4", Offset = "0x9CDAD4", VA = "0x9CDAD4")]
	private void OnItemChanged(InventoryCatalogue.ItemID itemID)
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0x9CDE9C", Offset = "0x9CDE9C", VA = "0x9CDE9C")]
	private void OnOnboardingStartTickets()
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0x9CDEA8", Offset = "0x9CDEA8", VA = "0x9CDEA8")]
	private void OnPassAndPlayPickAttraction()
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0x9CDF44", Offset = "0x9CDF44", VA = "0x9CDF44")]
	private void OnPassAndPlayCancelPickAttraction()
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0x9CDF58", Offset = "0x9CDF58", VA = "0x9CDF58", Slot = "5")]
	public override bool IsLocked()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0x9CDFDC", Offset = "0x9CDFDC", VA = "0x9CDFDC", Slot = "6")]
	public override bool PlayerCanEnter()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0x9CDAE4", Offset = "0x9CDAE4", VA = "0x9CDAE4")]
	private void UpdateInteractStatus(bool force = false, bool instantOpen = true)
	{
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0x9CDA74", Offset = "0x9CDA74", VA = "0x9CDA74")]
	private void SetNumberOfTicketsToDisplay(int numTicketsBeforeCounting)
	{
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0x9CE018", Offset = "0x9CE018", VA = "0x9CE018")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B1FE0", Offset = "0x4B1FE0")]
	private IEnumerator SpawnParticles(int numParticles)
	{
		return null;
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0x9CE0DC", Offset = "0x9CE0DC", VA = "0x9CE0DC")]
	private void OnParticleDeath()
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0x9CD9FC", Offset = "0x9CD9FC", VA = "0x9CD9FC")]
	private void RefreshProgression()
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0x9CD988", Offset = "0x9CD988", VA = "0x9CD988")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B3044", Offset = "0x4B3044")]
	public IEnumerator EnableClickInteraction()
	{
		return null;
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0x9CE1D4", Offset = "0x9CE1D4", VA = "0x9CE1D4")]
	public PsyduckAttraction()
	{
	}
}
[Token(Token = "0x2000191")]
public class PsyduckNotification : MonoBehaviour
{
	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int psyduckPrice;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Attraction psyduckAttraction;

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0x9CE87C", Offset = "0x9CE87C", VA = "0x9CE87C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0x9CE9E4", Offset = "0x9CE9E4", VA = "0x9CE9E4")]
	private void OnInventoryItemChanged(InventoryCatalogue.ItemID itemID)
	{
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0x9CE964", Offset = "0x9CE964", VA = "0x9CE964")]
	private void CheckIfPlayerCanAffordRound()
	{
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0x9CE9F0", Offset = "0x9CE9F0", VA = "0x9CE9F0")]
	private void DisplayRoundAvailable()
	{
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0x9CEA70", Offset = "0x9CEA70", VA = "0x9CEA70")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0x9CEB38", Offset = "0x9CEB38", VA = "0x9CEB38")]
	public PsyduckNotification()
	{
	}
}
[Token(Token = "0x2000192")]
public class UnlockButton : MonoBehaviour
{
	[Token(Token = "0x200041A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8ED4", Offset = "0x4A8ED4")]
	private sealed class <UnlockCoroutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnlockButton <>4__this;

		[Token(Token = "0x170001C6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CBC")]
			[Address(RVA = "0x827CB8", Offset = "0x827CB8", VA = "0x827CB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CBE")]
			[Address(RVA = "0x827D28", Offset = "0x827D28", VA = "0x827D28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0x827A1C", Offset = "0x827A1C", VA = "0x827A1C")]
		[DebuggerHidden]
		public <UnlockCoroutine>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0x827A50", Offset = "0x827A50", VA = "0x827A50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0x827A54", Offset = "0x827A54", VA = "0x827A54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0x827CC0", Offset = "0x827CC0", VA = "0x827CC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform buttonTransform;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject unlockEffectPrefab;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject unlockEffectRoot;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Minigame.Name miniGame;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool used;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject unlockEffectInstance;

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0x8276B4", Offset = "0x8276B4", VA = "0x8276B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0x8276EC", Offset = "0x8276EC", VA = "0x8276EC")]
	public void RefreshVisuals(bool buttonAvailable)
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0x82795C", Offset = "0x82795C", VA = "0x82795C")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0x8279A8", Offset = "0x8279A8", VA = "0x8279A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B30A8", Offset = "0x4B30A8")]
	private IEnumerator UnlockCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0x827A48", Offset = "0x827A48", VA = "0x827A48")]
	public UnlockButton()
	{
	}
}
[Token(Token = "0x2000193")]
public class ControllerPointerActivate : MonoBehaviour
{
	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0x6D6930", Offset = "0x6D6930", VA = "0x6D6930")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0x6D69F8", Offset = "0x6D69F8", VA = "0x6D69F8")]
	private void OnSceneLoaded(string sceneName)
	{
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0x6D6AA8", Offset = "0x6D6AA8", VA = "0x6D6AA8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0x6D6B70", Offset = "0x6D6B70", VA = "0x6D6B70")]
	public ControllerPointerActivate()
	{
	}
}
[Token(Token = "0x2000194")]
public class DebugCurrencyDisplay : MonoBehaviour
{
	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text currencyDebugText;

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0x6DF0A0", Offset = "0x6DF0A0", VA = "0x6DF0A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0x6DF258", Offset = "0x6DF258", VA = "0x6DF258")]
	private void OnInventoryItemChanged(InventoryCatalogue.ItemID itemID)
	{
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0x6DF188", Offset = "0x6DF188", VA = "0x6DF188")]
	private void UpdateText()
	{
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0x6DF264", Offset = "0x6DF264", VA = "0x6DF264")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0x6DF32C", Offset = "0x6DF32C", VA = "0x6DF32C")]
	public DebugCurrencyDisplay()
	{
	}
}
[Token(Token = "0x2000195")]
public class DebugPennyController : MonoBehaviour
{
	[Token(Token = "0x6000C00")]
	[Address(RVA = "0x6DF9D0", Offset = "0x6DF9D0", VA = "0x6DF9D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0x6DFA4C", Offset = "0x6DFA4C", VA = "0x6DFA4C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0x6DFB20", Offset = "0x6DFB20", VA = "0x6DFB20")]
	public DebugPennyController()
	{
	}
}
[Token(Token = "0x2000196")]
public abstract class ClickInteraction : MonoBehaviour
{
	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpeechBubble.TutorialID tutorialID;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform interactionTargetTransform;

	[Token(Token = "0x4000A49")]
	protected const SpeechBubble.TutorialID NOINTERACTION = SpeechBubble.TutorialID.Hidden;

	[Token(Token = "0x6000C03")]
	public abstract SpeechBubble.TutorialID CanInteract();

	[Token(Token = "0x6000C04")]
	public abstract void Interact(PlayerAvatar avatar);

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0x6D0740", Offset = "0x6D0740", VA = "0x6D0740")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0x6D0830", Offset = "0x6D0830", VA = "0x6D0830")]
	protected ClickInteraction()
	{
	}
}
[Token(Token = "0x2000197")]
public class ClickInteractionAttraction : ClickInteraction
{
	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SpeechBubble.TutorialID IDOnCantInteract;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Attraction attraction;

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0x6D0838", Offset = "0x6D0838", VA = "0x6D0838", Slot = "4")]
	public override SpeechBubble.TutorialID CanInteract()
	{
		return default(SpeechBubble.TutorialID);
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0x6D0908", Offset = "0x6D0908", VA = "0x6D0908", Slot = "5")]
	public override void Interact(PlayerAvatar avatar)
	{
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0x6D09C4", Offset = "0x6D09C4", VA = "0x6D09C4")]
	public ClickInteractionAttraction()
	{
	}
}
[Token(Token = "0x2000198")]
public class ClickInteractionBuy : ClickInteraction
{
	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject debugBuyPanel;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PlayerAvatar playerAvatar;

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0x6D09CC", Offset = "0x6D09CC", VA = "0x6D09CC", Slot = "4")]
	public override SpeechBubble.TutorialID CanInteract()
	{
		return default(SpeechBubble.TutorialID);
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0x6D0A44", Offset = "0x6D0A44", VA = "0x6D0A44", Slot = "5")]
	public override void Interact(PlayerAvatar avatar)
	{
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0x6D0AA8", Offset = "0x6D0AA8", VA = "0x6D0AA8")]
	private void ShowControllerLockAvatar()
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0x6D0B48", Offset = "0x6D0B48", VA = "0x6D0B48")]
	private void HideControllerUnlockAvatar()
	{
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0x6D0C00", Offset = "0x6D0C00", VA = "0x6D0C00")]
	public ClickInteractionBuy()
	{
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0x6D0C08", Offset = "0x6D0C08", VA = "0x6D0C08")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B310C", Offset = "0x4B310C")]
	private void <HideControllerUnlockAvatar>b__5_0()
	{
	}
}
[Token(Token = "0x2000199")]
public class ClickInteractionBuyHammer : ClickInteraction
{
	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InventoryCatalogue.ItemID unigamepackID;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PlayerAvatar playerAvatar;

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0x6D0C38", Offset = "0x6D0C38", VA = "0x6D0C38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0x6D0C3C", Offset = "0x6D0C3C", VA = "0x6D0C3C", Slot = "4")]
	public override SpeechBubble.TutorialID CanInteract()
	{
		return default(SpeechBubble.TutorialID);
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0x6D0CB4", Offset = "0x6D0CB4", VA = "0x6D0CB4", Slot = "5")]
	public override void Interact(PlayerAvatar avatar)
	{
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0x6D0DF8", Offset = "0x6D0DF8", VA = "0x6D0DF8")]
	private void OnCancel()
	{
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0x6D0DC8", Offset = "0x6D0DC8", VA = "0x6D0DC8")]
	private void ShowControllerLockAvatar()
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0x6D0E84", Offset = "0x6D0E84", VA = "0x6D0E84")]
	private void HideControllerMoveUnlockAvatar()
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0x6D0F3C", Offset = "0x6D0F3C", VA = "0x6D0F3C")]
	public ClickInteractionBuyHammer()
	{
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0x6D0F44", Offset = "0x6D0F44", VA = "0x6D0F44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B311C", Offset = "0x4B311C")]
	private void <HideControllerMoveUnlockAvatar>b__7_0()
	{
	}
}
[Token(Token = "0x200019A")]
public class ClickInteractionLever : ClickInteraction
{
	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PassAndPlay passAndPlay;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PassAndPlayWorldController passAndPlayWorldController;

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0x6D0F74", Offset = "0x6D0F74", VA = "0x6D0F74")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0x6D0FDC", Offset = "0x6D0FDC", VA = "0x6D0FDC", Slot = "4")]
	public override SpeechBubble.TutorialID CanInteract()
	{
		return default(SpeechBubble.TutorialID);
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0x6D1074", Offset = "0x6D1074", VA = "0x6D1074", Slot = "5")]
	public override void Interact(PlayerAvatar avatar)
	{
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0x6D10A4", Offset = "0x6D10A4", VA = "0x6D10A4")]
	public ClickInteractionLever()
	{
	}
}
[Token(Token = "0x200019B")]
public class ClickInteractionLeverUnlock : ClickInteraction
{
	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PassAndPlayWorldController passAndPlay;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform button;

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0x6D10AC", Offset = "0x6D10AC", VA = "0x6D10AC", Slot = "4")]
	public override SpeechBubble.TutorialID CanInteract()
	{
		return default(SpeechBubble.TutorialID);
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0x6D1158", Offset = "0x6D1158", VA = "0x6D1158", Slot = "5")]
	public override void Interact(PlayerAvatar avatar)
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0x6D1248", Offset = "0x6D1248", VA = "0x6D1248")]
	public ClickInteractionLeverUnlock()
	{
	}
}
[Token(Token = "0x200019C")]
public class ClickInteractionUnlock : ClickInteraction
{
	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Attraction attraction;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform button;

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0x6D1250", Offset = "0x6D1250", VA = "0x6D1250", Slot = "4")]
	public override SpeechBubble.TutorialID CanInteract()
	{
		return default(SpeechBubble.TutorialID);
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0x6D1320", Offset = "0x6D1320", VA = "0x6D1320", Slot = "5")]
	public override void Interact(PlayerAvatar avatar)
	{
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0x6D1410", Offset = "0x6D1410", VA = "0x6D1410")]
	public ClickInteractionUnlock()
	{
	}
}
[Token(Token = "0x200019D")]
public class DebugPassAndPlay : MonoBehaviour
{
	[Token(Token = "0x6000C22")]
	[Address(RVA = "0x6DF94C", Offset = "0x6DF94C", VA = "0x6DF94C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0x6DF9C8", Offset = "0x6DF9C8", VA = "0x6DF9C8")]
	public DebugPassAndPlay()
	{
	}
}
[Token(Token = "0x200019E")]
public class WorldBird : MonoBehaviour
{
	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float maxFlyHeight;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float minFlyHeight;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float flightSpeed;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector3> landingPositions;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 currentLandingPosition;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject seatedBird;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject flyingBird;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool inFlight;

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0x8309F0", Offset = "0x8309F0", VA = "0x8309F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0x830D18", Offset = "0x830D18", VA = "0x830D18")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0x830E1C", Offset = "0x830E1C", VA = "0x830E1C")]
	private void Fly()
	{
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0x8313CC", Offset = "0x8313CC", VA = "0x8313CC")]
	private Vector3 GetAndRegisterNewLandingPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0x830C20", Offset = "0x830C20", VA = "0x830C20")]
	private Vector3 GetRandomPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0x8314BC", Offset = "0x8314BC", VA = "0x8314BC")]
	public WorldBird()
	{
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0x8314D8", Offset = "0x8314D8", VA = "0x8314D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B312C", Offset = "0x4B312C")]
	private void <Fly>b__10_0()
	{
	}
}
[Token(Token = "0x200019F")]
public class WorldPickupSpawner : SingleInstanceBehavior<WorldPickupSpawner>
{
	[Token(Token = "0x200041B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8EE4", Offset = "0x4A8EE4")]
	private sealed class <SpawnPickups>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WorldPickupSpawner <>4__this;

		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <waitPerLoop>5__2;

		[Token(Token = "0x170001C8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CC2")]
			[Address(RVA = "0x831E1C", Offset = "0x831E1C", VA = "0x831E1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CC4")]
			[Address(RVA = "0x831E8C", Offset = "0x831E8C", VA = "0x831E8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0x8317B0", Offset = "0x8317B0", VA = "0x8317B0")]
		[DebuggerHidden]
		public <SpawnPickups>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0x831C80", Offset = "0x831C80", VA = "0x831C80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0x831C84", Offset = "0x831C84", VA = "0x831C84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0x831E24", Offset = "0x831E24", VA = "0x831E24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3? lastPickedUpPickupPos;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TicketPickup currentPickup;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TicketPickup lastPickedUpPickup;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isSpawningAllowed;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private TicketPickup[] allPickups;

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0x831534", Offset = "0x831534", VA = "0x831534")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0x831704", Offset = "0x831704", VA = "0x831704")]
	private void OnPassAndPlayPickAttraction()
	{
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0x8317A4", Offset = "0x8317A4", VA = "0x8317A4")]
	private void OnPassAndPlayCancelPickAttraction()
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0x831690", Offset = "0x831690", VA = "0x831690")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B313C", Offset = "0x4B313C")]
	private IEnumerator SpawnPickups()
	{
		return null;
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0x8317DC", Offset = "0x8317DC", VA = "0x8317DC")]
	private void SpawnPickup()
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0x8319E0", Offset = "0x8319E0", VA = "0x8319E0")]
	private void OnPickup(TicketPickup pickup, bool pickedUpByPlayer)
	{
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0x831AE8", Offset = "0x831AE8", VA = "0x831AE8", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0x831C08", Offset = "0x831C08", VA = "0x831C08")]
	public WorldPickupSpawner()
	{
	}
}
[Token(Token = "0x20001A0")]
public class WorldSignTickets : MonoBehaviour
{
	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text ticketCountText;

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0x831E94", Offset = "0x831E94", VA = "0x831E94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0x83200C", Offset = "0x83200C", VA = "0x83200C")]
	private void OnInventoryItemChanged(InventoryCatalogue.ItemID itemID)
	{
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0x831F88", Offset = "0x831F88", VA = "0x831F88")]
	private void UpdateText()
	{
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0x832018", Offset = "0x832018", VA = "0x832018")]
	public WorldSignTickets()
	{
	}
}
[Token(Token = "0x20001A1")]
public class OptimizeTurnOff : MonoBehaviour
{
	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] objs;

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0x645D1C", Offset = "0x645D1C", VA = "0x645D1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0x64615C", Offset = "0x64615C", VA = "0x64615C")]
	private void ToggleActive(GameObject obj)
	{
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0x6461C8", Offset = "0x6461C8", VA = "0x6461C8")]
	public OptimizeTurnOff()
	{
	}
}
[Token(Token = "0x20001A2")]
public class ParticleMover : MonoBehaviour
{
	[Token(Token = "0x200041C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8EF4", Offset = "0x4A8EF4")]
	private sealed class <GiveTickets>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float emissionRate;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ParticleMover <>4__this;

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int amount;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WaitForSeconds <wfs>5__2;

		[Token(Token = "0x170001CA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CC8")]
			[Address(RVA = "0x648D78", Offset = "0x648D78", VA = "0x648D78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CCA")]
			[Address(RVA = "0x648DE8", Offset = "0x648DE8", VA = "0x648DE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0x64888C", Offset = "0x64888C", VA = "0x64888C")]
		[DebuggerHidden]
		public <GiveTickets>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0x648C40", Offset = "0x648C40", VA = "0x648C40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0x648C44", Offset = "0x648C44", VA = "0x648C44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0x648D80", Offset = "0x648D80", VA = "0x648D80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform target;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x4AC33C", Offset = "0x4AC33C")]
	[SerializeField]
	private ParticleSystem targetParticleSystem;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float minimalEndDistanceToGoal;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem.MainModule targetMainModule;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Action deathCallback;

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0x648504", Offset = "0x648504", VA = "0x648504")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0x6485B4", Offset = "0x6485B4", VA = "0x6485B4")]
	public void Spawn(Vector3 position, int numParticles)
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0x64884C", Offset = "0x64884C", VA = "0x64884C")]
	public void SetDeathCallback(Action newDeathCallback)
	{
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0x648854", Offset = "0x648854", VA = "0x648854")]
	public void DecreaseMaxParticleCount(int count)
	{
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0x648794", Offset = "0x648794", VA = "0x648794")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B31A0", Offset = "0x4B31A0")]
	private IEnumerator GiveTickets(int amount, float emissionRate)
	{
		return null;
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0x6488B8", Offset = "0x6488B8", VA = "0x6488B8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0x648BD8", Offset = "0x648BD8", VA = "0x648BD8")]
	private void killParticle(int i)
	{
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0x648C38", Offset = "0x648C38", VA = "0x648C38")]
	public ParticleMover()
	{
	}
}
[Token(Token = "0x20001A3")]
public class PassAndPlayWorldController : SingletonBehavior<PassAndPlayWorldController>
{
	[Token(Token = "0x200041D")]
	private enum State
	{
		[Token(Token = "0x40018AD")]
		Idle,
		[Token(Token = "0x40018AE")]
		PickPlayerNumber,
		[Token(Token = "0x40018AF")]
		PickAttraction,
		[Token(Token = "0x40018B0")]
		ConfirmQuit,
		[Token(Token = "0x40018B1")]
		DisplayEndOfSessionScore
	}

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform[] pullLeverTargetTransform;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject menuHolder;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator leverAnim;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlayerAvatar playerAvatar;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UIBoard confirmQuit;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private UIBoard pickPlayerNumber;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private UIBoard pickAttraction;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private UIBoard scoreboard;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private UIButton highlightedButton;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform oldScoreboardOffset;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private UIBoard oldScoreboard;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private UIBoard smallScoreboard;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private UIBoard mediumScoreboard;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private UIBoard largeScoreboard;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private PassAndPlay passAndPlay;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private UnlockButton unlockButton;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject availableRoot;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject unavailableRoot;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private State currentState;

	[Token(Token = "0x4000A7E")]
	private const string confirmQuitButtonString = "ConfirmQuit";

	[Token(Token = "0x4000A7F")]
	private const string refuseQuitButtonString = "RefuseQuit";

	[Token(Token = "0x4000A80")]
	private const string cancelUIButtonString = "Cancel";

	[Token(Token = "0x4000A81")]
	private const string doneShowingEndScoreString = "Done";

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0x709AF8", Offset = "0x709AF8", VA = "0x709AF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0x709F60", Offset = "0x709F60", VA = "0x709F60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0x70A0D4", Offset = "0x70A0D4", VA = "0x70A0D4")]
	private bool CheckBackPackButtonDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0x70A754", Offset = "0x70A754", VA = "0x70A754")]
	private void OnPlayerProgressUpdate(int state)
	{
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0x70A758", Offset = "0x70A758", VA = "0x70A758")]
	public bool IsAvatarTutorialAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0x709E70", Offset = "0x709E70", VA = "0x709E70")]
	private void UpdateLockStatus()
	{
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0x70A048", Offset = "0x70A048", VA = "0x70A048")]
	private void UpdateHighlightedButton()
	{
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0x70A77C", Offset = "0x70A77C", VA = "0x70A77C")]
	public void BeginPullingLever()
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0x70A8BC", Offset = "0x70A8BC", VA = "0x70A8BC")]
	public void StartLeverAnimation()
	{
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0x70A9EC", Offset = "0x70A9EC", VA = "0x70A9EC")]
	public void OnLeverPulled()
	{
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0x70AA64", Offset = "0x70AA64", VA = "0x70AA64")]
	public void ResetLeverToPullable()
	{
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0x70AAC8", Offset = "0x70AAC8", VA = "0x70AAC8")]
	public InputManager.CallbackResult OnClickButtonPressed()
	{
		return default(InputManager.CallbackResult);
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0x70ACF8", Offset = "0x70ACF8", VA = "0x70ACF8")]
	private void OnConfirmQuitClick()
	{
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0x70AB14", Offset = "0x70AB14", VA = "0x70AB14")]
	private void OnPickPlayerClick()
	{
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0x70AE60", Offset = "0x70AE60", VA = "0x70AE60")]
	private void OnDisplayEndScoreClick()
	{
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0x70A614", Offset = "0x70A614", VA = "0x70A614")]
	private void OnExitEndScore()
	{
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0x70AF14", Offset = "0x70AF14", VA = "0x70AF14")]
	private void ShowCopyOfScoreboard()
	{
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0x70B138", Offset = "0x70B138", VA = "0x70B138")]
	public InputManager.CallbackResult OnAppButtonPressed()
	{
		return default(InputManager.CallbackResult);
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0x70A2B8", Offset = "0x70A2B8", VA = "0x70A2B8")]
	private void OnPickPlayerAppPressed()
	{
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0x70A440", Offset = "0x70A440", VA = "0x70A440")]
	private void OnPickAttractionAppPressed()
	{
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0x70A484", Offset = "0x70A484", VA = "0x70A484")]
	private void OnConfirmQuit()
	{
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0x70AA34", Offset = "0x70AA34", VA = "0x70AA34")]
	private void ShowControllerLockAvatar()
	{
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0x70A388", Offset = "0x70A388", VA = "0x70A388")]
	private void HideControllerUnlockAvatar()
	{
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0x70B180", Offset = "0x70B180", VA = "0x70B180", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0x709668", Offset = "0x709668", VA = "0x709668")]
	public void DisplayEndOfSessionScore(FinalScore[] playerScores)
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0x70B31C", Offset = "0x70B31C", VA = "0x70B31C")]
	public PassAndPlayWorldController()
	{
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0x70B36C", Offset = "0x70B36C", VA = "0x70B36C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B3204", Offset = "0x4B3204")]
	private void <HideControllerUnlockAvatar>b__46_0()
	{
	}
}
[Token(Token = "0x20001A4")]
public class PauseHandler : MonoBehaviour
{
	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool currentPauseStatus;

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0x70B39C", Offset = "0x70B39C", VA = "0x70B39C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0x70B56C", Offset = "0x70B56C", VA = "0x70B56C")]
	public PauseHandler()
	{
	}
}
[Token(Token = "0x20001A5")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4A85E0", Offset = "0x4A85E0")]
public class AvatarAnimationController : MonoBehaviour
{
	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public float moveSpeed;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public float playbackSpeedWalk;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public float playbackSpeedRun;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public float playbackSpeedFastRun;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public float animationSpeedPercentage;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Animator animator;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject backpack;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject backpackThrow;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject bigBackpack;

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0x6B804C", Offset = "0x6B804C", VA = "0x6B804C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0x6B80F8", Offset = "0x6B80F8", VA = "0x6B80F8")]
	public void StartTouch()
	{
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0x6B8160", Offset = "0x6B8160", VA = "0x6B8160")]
	public void EndTouch()
	{
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0x6B81C8", Offset = "0x6B81C8", VA = "0x6B81C8")]
	public void SetVelocity(float velocity, float maxVelocity)
	{
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0x6B8328", Offset = "0x6B8328", VA = "0x6B8328")]
	public void Jump()
	{
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0x6B832C", Offset = "0x6B832C", VA = "0x6B832C")]
	public void SetNavMeshMovement(bool active)
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0x6B83A0", Offset = "0x6B83A0", VA = "0x6B83A0")]
	internal void EnterBackpack()
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0x6B8460", Offset = "0x6B8460", VA = "0x6B8460")]
	public void ThrowBackpack()
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0x6B84B8", Offset = "0x6B84B8", VA = "0x6B84B8")]
	public void SpawnBigBackpack()
	{
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0x6B8510", Offset = "0x6B8510", VA = "0x6B8510")]
	internal void PullLever()
	{
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0x6B8574", Offset = "0x6B8574", VA = "0x6B8574")]
	public AvatarAnimationController()
	{
	}
}
[Token(Token = "0x20001A6")]
public class AvatarEventListener : MonoBehaviour
{
	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem footStepDust;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticlePool particlePool;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform leftFootTrans;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform rightFootTrans;

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0x6B857C", Offset = "0x6B857C", VA = "0x6B857C")]
	public void RunRightFootSound()
	{
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0x6B861C", Offset = "0x6B861C", VA = "0x6B861C")]
	public void RunLeftFootSound()
	{
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0x6B86BC", Offset = "0x6B86BC", VA = "0x6B86BC")]
	public void RunFastRightFootSound()
	{
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0x6B87E4", Offset = "0x6B87E4", VA = "0x6B87E4")]
	public void RunFastLeftFootSound()
	{
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0x6B890C", Offset = "0x6B890C", VA = "0x6B890C")]
	public void WalkLeftSound()
	{
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0x6B89AC", Offset = "0x6B89AC", VA = "0x6B89AC")]
	public void WalkRightSound()
	{
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0x6B8A4C", Offset = "0x6B8A4C", VA = "0x6B8A4C")]
	public void SlideSound()
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0x6B8AEC", Offset = "0x6B8AEC", VA = "0x6B8AEC")]
	public void AvatarSlideStart()
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0x6B8BFC", Offset = "0x6B8BFC", VA = "0x6B8BFC")]
	public AvatarEventListener()
	{
	}
}
[Serializable]
[Token(Token = "0x20001A7")]
public class BendingSegment
{
	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform firstTransform;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform lastTransform;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float thresholdAngleDifference;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float bendingMultiplier;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxAngleDifference;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxBendingAngle;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float responsiveness;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	internal float angleH;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	internal float angleV;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	internal Vector3 dirUp;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	internal Vector3 referenceLookDir;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	internal Vector3 referenceUpDir;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	internal int chainLength;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	internal Quaternion[] origRotations;

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0x6C46D8", Offset = "0x6C46D8", VA = "0x6C46D8")]
	public BendingSegment()
	{
	}
}
[Serializable]
[Token(Token = "0x20001A8")]
public class NonAffectedJoints
{
	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform joint;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float effect;

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0x642920", Offset = "0x642920", VA = "0x642920")]
	public NonAffectedJoints()
	{
	}
}
[Token(Token = "0x20001A9")]
public class HeadLookController : MonoBehaviour
{
	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform rootNode;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BendingSegment[] segments;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NonAffectedJoints[] nonAffectedJoints;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 headLookVector;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 headUpVector;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform target;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float effect;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool overrideAnimation;

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0x72F5F8", Offset = "0x72F5F8", VA = "0x72F5F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0x72FA5C", Offset = "0x72FA5C", VA = "0x72FA5C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0x730ED8", Offset = "0x730ED8", VA = "0x730ED8")]
	public static float AngleAroundAxis(Vector3 dirA, Vector3 dirB, Vector3 axis)
	{
		return default(float);
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0x7310A0", Offset = "0x7310A0", VA = "0x7310A0")]
	public HeadLookController()
	{
	}
}
[Token(Token = "0x20001AA")]
public class LastMiniGamePlayed
{
	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3? ExitPosition;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Quaternion ExitRotation;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Minigame.Name LoadedScene;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LastMiniGamePlayed instance;

	[Token(Token = "0x1700009B")]
	public static LastMiniGamePlayed Instance
	{
		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x73F9AC", Offset = "0x73F9AC", VA = "0x73F9AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0x73FA28", Offset = "0x73FA28", VA = "0x73FA28")]
	public LastMiniGamePlayed()
	{
	}
}
[Token(Token = "0x20001AB")]
public class MoveMarker : MonoBehaviour
{
	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject walkMarker;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject markerVisual;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 backpackOffset;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform backpackTransform;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool MarkerActive;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool markeHitGorund;

	[Token(Token = "0x1700009C")]
	public bool HasValidPostion
	{
		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x641E14", Offset = "0x641E14", VA = "0x641E14")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0x641D44", Offset = "0x641D44", VA = "0x641D44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0x641E1C", Offset = "0x641E1C", VA = "0x641E1C")]
	public Vector3 GetMarkerPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0x641E64", Offset = "0x641E64", VA = "0x641E64")]
	public void EnableMarker()
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0x641EA0", Offset = "0x641EA0", VA = "0x641EA0")]
	public void DisableMarker()
	{
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0x641ED8", Offset = "0x641ED8", VA = "0x641ED8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0x6421D8", Offset = "0x6421D8", VA = "0x6421D8")]
	public MoveMarker()
	{
	}
}
[Token(Token = "0x20001AC")]
public class PlayerAvatar : MonoBehaviour
{
	[Token(Token = "0x200041E")]
	public enum AccelerationType
	{
		[Token(Token = "0x40018B3")]
		Instant,
		[Token(Token = "0x40018B4")]
		Linear,
		[Token(Token = "0x40018B5")]
		Curve
	}

	[Token(Token = "0x200041F")]
	private enum State
	{
		[Token(Token = "0x40018B7")]
		PlayerControlled,
		[Token(Token = "0x40018B8")]
		EnteringAttraction,
		[Token(Token = "0x40018B9")]
		EnteringBackpack,
		[Token(Token = "0x40018BA")]
		PullingLever,
		[Token(Token = "0x40018BB")]
		TemporaryDisabled,
		[Token(Token = "0x40018BC")]
		MovingToInteraction
	}

	[Token(Token = "0x2000420")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8F04", Offset = "0x4A8F04")]
	private sealed class <EnterAttraction>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerAvatar <>4__this;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Attraction attraction;

		[Token(Token = "0x170001CC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CCE")]
			[Address(RVA = "0x660960", Offset = "0x660960", VA = "0x660960", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CD0")]
			[Address(RVA = "0x6609D0", Offset = "0x6609D0", VA = "0x6609D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0x65E798", Offset = "0x65E798", VA = "0x65E798")]
		[DebuggerHidden]
		public <EnterAttraction>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0x6606F4", Offset = "0x6606F4", VA = "0x6606F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0x6606F8", Offset = "0x6606F8", VA = "0x6606F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0x660968", Offset = "0x660968", VA = "0x660968", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000421")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8F14", Offset = "0x4A8F14")]
	private sealed class <>c__DisplayClass49_0
	{
		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action onLeverPulled;

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0x6606BC", Offset = "0x6606BC", VA = "0x6606BC")]
		public <>c__DisplayClass49_0()
		{
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0x6606C4", Offset = "0x6606C4", VA = "0x6606C4")]
		internal void <PullLever>b__0()
		{
		}
	}

	[Token(Token = "0x2000422")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8F24", Offset = "0x4A8F24")]
	private sealed class <PullLever>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action onLeverPulled;

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerAvatar <>4__this;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform[] avatarPlacements;

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action StartLeverAnimation;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private <>c__DisplayClass49_0 <>8__1;

		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <i>5__2;

		[Token(Token = "0x170001CE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CD6")]
			[Address(RVA = "0x660CB0", Offset = "0x660CB0", VA = "0x660CB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CD8")]
			[Address(RVA = "0x660D20", Offset = "0x660D20", VA = "0x660D20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0x65E890", Offset = "0x65E890", VA = "0x65E890")]
		[DebuggerHidden]
		public <PullLever>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0x6609D8", Offset = "0x6609D8", VA = "0x6609D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0x6609DC", Offset = "0x6609DC", VA = "0x6609DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0x660CB8", Offset = "0x660CB8", VA = "0x660CB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000423")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8F34", Offset = "0x4A8F34")]
	private sealed class <WaitToReachTarget>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerAvatar <>4__this;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <reachedTarget>5__2;

		[Token(Token = "0x170001D0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CDC")]
			[Address(RVA = "0x660E94", Offset = "0x660E94", VA = "0x660E94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CDE")]
			[Address(RVA = "0x660F04", Offset = "0x660F04", VA = "0x660F04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0x65E930", Offset = "0x65E930", VA = "0x65E930")]
		[DebuggerHidden]
		public <WaitToReachTarget>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0x660D28", Offset = "0x660D28", VA = "0x660D28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0x660D2C", Offset = "0x660D2C", VA = "0x660D2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0x660E9C", Offset = "0x660E9C", VA = "0x660E9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AB2")]
	private const float TUTORIALTIMEOUT_MOVE = 5f;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float movementMultiplier;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string sceneForAppButton;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float delayToAppButtonScene;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private int maxBackpackThrowSpaceChecks;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SpeechBubble speechBubblePrefab;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform speechBubbleTransform;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private MagicMayhemMatPulse backpackNewItemMaterial;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject[] backpackNewItemObjects;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float holdForBackpackDelay;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private SpeechBubble speechBubbleXrsPrefab;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private SpeechBubble speechBubblePicoPrefab;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isInitialized;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool isWaitingToEnterBackpack;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Image backpacUIRing;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float toAppButtonSceneTimer;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private NavMeshAgent navMeshAgent;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject shadowBlob;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private LastMiniGamePlayed lastMiniGamePlayed;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private AvatarAnimationController animationController;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private SpeechBubble speechBubble;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private GameObject ticketFrenzyInactiveObject;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject ticketFrenzyActiveObject;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float backpackVisualDelay;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[HideInInspector]
	public float holdForBackPackTimer;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private MoveMarker moveMarker;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool hasClickPriority;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private State state;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private ClickInteraction currentClickInteraction;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private List<ClickInteraction> clickInteractions;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool isEnteringBackpack;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	private bool tutorialShowMove;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float tutorialMoveTimer;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool tutorialShowBackpack;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
	[HideInInspector]
	public bool tutorialYouNeedTickets;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private SpeechBubble.TutorialID tutorialShowAttraction;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Transform tutorialShowAttractionTransform;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private BackPackButton backpackMode;

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0x65DB1C", Offset = "0x65DB1C", VA = "0x65DB1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0x65DD98", Offset = "0x65DD98", VA = "0x65DD98")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0x65E074", Offset = "0x65E074", VA = "0x65E074")]
	private void OnSceneLoaded(string sceneName)
	{
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0x65E314", Offset = "0x65E314", VA = "0x65E314")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0x65E500", Offset = "0x65E500", VA = "0x65E500")]
	private void OnPlayerProgressStateUpdated(int newState)
	{
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0x65E650", Offset = "0x65E650", VA = "0x65E650")]
	public void MoveToWorldPos(Vector3 worldPos)
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0x65E6A8", Offset = "0x65E6A8", VA = "0x65E6A8")]
	public void NavigateTo(Vector3 worldPosition)
	{
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0x65E308", Offset = "0x65E308", VA = "0x65E308")]
	private void ResetMoveTimeout()
	{
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0x65E700", Offset = "0x65E700", VA = "0x65E700")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B3214", Offset = "0x4B3214")]
	public IEnumerator EnterAttraction(Attraction attraction)
	{
		return null;
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0x65E7C4", Offset = "0x65E7C4", VA = "0x65E7C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B3278", Offset = "0x4B3278")]
	public IEnumerator PullLever(Transform[] avatarPlacements, Action StartLeverAnimation, Action onLeverPulled)
	{
		return null;
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0x65E8BC", Offset = "0x65E8BC", VA = "0x65E8BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B32DC", Offset = "0x4B32DC")]
	public IEnumerator WaitToReachTarget()
	{
		return null;
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0x65E95C", Offset = "0x65E95C", VA = "0x65E95C")]
	public void DisablePlayerAvatarMovement()
	{
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0x65EB1C", Offset = "0x65EB1C", VA = "0x65EB1C")]
	public void EnablePlayerAvatarMovement()
	{
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0x65EB60", Offset = "0x65EB60", VA = "0x65EB60")]
	private void ReturnToPlayerControlled()
	{
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0x65E984", Offset = "0x65E984", VA = "0x65E984")]
	private void ChangeState(State newState)
	{
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0x65EB88", Offset = "0x65EB88", VA = "0x65EB88")]
	private void ClearAndHideGUI()
	{
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0x65EAEC", Offset = "0x65EAEC", VA = "0x65EAEC")]
	private void ResetMovement()
	{
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0x65EC0C", Offset = "0x65EC0C", VA = "0x65EC0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0x65FD50", Offset = "0x65FD50", VA = "0x65FD50")]
	private void RotateToViableThrowDirection()
	{
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0x660028", Offset = "0x660028", VA = "0x660028")]
	private Vector3 RotatePointAroundPivot(Vector3 point, Vector3 pivot, Vector3 angles)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0x65F2E4", Offset = "0x65F2E4", VA = "0x65F2E4")]
	private void CheckBackPackInput()
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0x65EF0C", Offset = "0x65EF0C", VA = "0x65EF0C")]
	private void DoNavmeshInput()
	{
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0x65FAF4", Offset = "0x65FAF4", VA = "0x65FAF4")]
	private void resetPriority()
	{
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0x6602DC", Offset = "0x6602DC", VA = "0x6602DC")]
	private InputManager.CallbackResult OnClickButtonPressed()
	{
		return default(InputManager.CallbackResult);
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0x6602F4", Offset = "0x6602F4", VA = "0x6602F4")]
	private InputManager.CallbackResult OnAppButtonPressed()
	{
		return default(InputManager.CallbackResult);
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0x65FA5C", Offset = "0x65FA5C", VA = "0x65FA5C")]
	private void AnimateFromAgent()
	{
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0x660560", Offset = "0x660560", VA = "0x660560")]
	public static void CalculateMovement(ref float currentVelocity, ref float targetVelocity, ref float velocityDelta, float velocityMax, AccelerationType accelerationType)
	{
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0x65EBCC", Offset = "0x65EBCC", VA = "0x65EBCC")]
	public void HideSpeechBubble()
	{
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0x65EDA4", Offset = "0x65EDA4", VA = "0x65EDA4")]
	private void UpdateClickInteraction()
	{
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0x65E510", Offset = "0x65E510", VA = "0x65E510")]
	private void RefreshClickInteractionLabel()
	{
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0x660270", Offset = "0x660270", VA = "0x660270")]
	private bool InteractionAllowed(ClickInteraction interaction)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0x65FB94", Offset = "0x65FB94", VA = "0x65FB94")]
	private void ResolveTutorial()
	{
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0x660658", Offset = "0x660658", VA = "0x660658")]
	public Transform GetSpeechBubbleTransform()
	{
		return null;
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0x660660", Offset = "0x660660", VA = "0x660660")]
	public PlayerAvatar()
	{
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0x66068C", Offset = "0x66068C", VA = "0x66068C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B3340", Offset = "0x4B3340")]
	private void <CheckBackPackInput>b__60_0()
	{
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0x66069C", Offset = "0x66069C", VA = "0x66069C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B3350", Offset = "0x4B3350")]
	private void <CheckBackPackInput>b__60_1()
	{
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0x6606AC", Offset = "0x6606AC", VA = "0x6606AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B3360", Offset = "0x4B3360")]
	private void <OnAppButtonPressed>b__64_0()
	{
	}
}
[Token(Token = "0x20001AD")]
public class PlayerAvatarCustomizationManager : MonoBehaviour
{
	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject vanityItemInstanceReference;

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0x660F0C", Offset = "0x660F0C", VA = "0x660F0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0x660F84", Offset = "0x660F84", VA = "0x660F84")]
	private void CheckForCurrentEquippedItemAndInstatiate()
	{
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0x661194", Offset = "0x661194", VA = "0x661194")]
	public PlayerAvatarCustomizationManager()
	{
	}
}
[Token(Token = "0x20001AE")]
public class RenderQueueFromDistance : MonoBehaviour
{
	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AC4D8", Offset = "0x4AC4D8")]
	public Transform otherObject;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AC510", Offset = "0x4AC510")]
	public int frontRenderQueue;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AC548", Offset = "0x4AC548")]
	public int backRenderQueue;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AC580", Offset = "0x4AC580")]
	public float hysteresis;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private new Transform transform;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer objectRenderer;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material material;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isBehind;

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0x696FB0", Offset = "0x696FB0", VA = "0x696FB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0x697078", Offset = "0x697078", VA = "0x697078")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0x69730C", Offset = "0x69730C", VA = "0x69730C")]
	private void ShowInFront()
	{
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0x697038", Offset = "0x697038", VA = "0x697038")]
	private void ShowBehind()
	{
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0x697348", Offset = "0x697348", VA = "0x697348")]
	public RenderQueueFromDistance()
	{
	}
}
[Token(Token = "0x20001AF")]
public class AvailableInProgression : MonoBehaviour
{
	[Token(Token = "0x2000424")]
	private enum Op
	{
		[Token(Token = "0x40018CF")]
		Equal,
		[Token(Token = "0x40018D0")]
		NotEqual,
		[Token(Token = "0x40018D1")]
		Greater,
		[Token(Token = "0x40018D2")]
		Less,
		[Token(Token = "0x40018D3")]
		InRange
	}

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4AC5B8", Offset = "0x4AC5B8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AC5B8", Offset = "0x4AC5B8")]
	[SerializeField]
	private Op op;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Progression.GameState state;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Progression.GameState state2;

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0x6B79B0", Offset = "0x6B79B0", VA = "0x6B79B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0x6B7C24", Offset = "0x6B7C24", VA = "0x6B7C24")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0x6B7CEC", Offset = "0x6B7CEC", VA = "0x6B7CEC")]
	private void OnProgressionStateUpdated(int newState)
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0x6B7A80", Offset = "0x6B7A80", VA = "0x6B7A80")]
	private void Evaluate()
	{
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0x6B7CF0", Offset = "0x6B7CF0", VA = "0x6B7CF0")]
	public AvailableInProgression()
	{
	}
}
[Token(Token = "0x20001B0")]
public class AvailableOnPickAttraction : MonoBehaviour
{
	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool hideOnStart;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Minigame.Name attractionName;

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0x6B7CF8", Offset = "0x6B7CF8", VA = "0x6B7CF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0x6B7E04", Offset = "0x6B7E04", VA = "0x6B7E04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0x6B7E48", Offset = "0x6B7E48", VA = "0x6B7E48")]
	private void OnPickAttraction()
	{
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0x6B7F00", Offset = "0x6B7F00", VA = "0x6B7F00")]
	private void OnPickAttractionCanceled()
	{
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0x6B7F38", Offset = "0x6B7F38", VA = "0x6B7F38")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0x6B8044", Offset = "0x6B8044", VA = "0x6B8044")]
	public AvailableOnPickAttraction()
	{
	}
}
[Token(Token = "0x20001B1")]
public class ChristmasHatHideAndShow : MonoBehaviour
{
	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0x6D042C", Offset = "0x6D042C", VA = "0x6D042C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0x6D04F0", Offset = "0x6D04F0", VA = "0x6D04F0")]
	public ChristmasHatHideAndShow()
	{
	}
}
[Token(Token = "0x20001B2")]
public class FlagAnimCycleOffset : MonoBehaviour
{
	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator anim;

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0x71E0D4", Offset = "0x71E0D4", VA = "0x71E0D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0x71E12C", Offset = "0x71E12C", VA = "0x71E12C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0x71E1B8", Offset = "0x71E1B8", VA = "0x71E1B8")]
	public FlagAnimCycleOffset()
	{
	}
}
[Token(Token = "0x20001B3")]
public class HopscotchShadow : MonoBehaviour
{
	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform charHips;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform thisTrans;

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0x7352B0", Offset = "0x7352B0", VA = "0x7352B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0x7352D8", Offset = "0x7352D8", VA = "0x7352D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0x7353A4", Offset = "0x7353A4", VA = "0x7353A4")]
	public HopscotchShadow()
	{
	}
}
[Token(Token = "0x20001B4")]
public class OnboardingDisableObject : MonoBehaviour
{
	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4AC658", Offset = "0x4AC658")]
	[SerializeField]
	private int ID;

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0x644670", Offset = "0x644670", VA = "0x644670")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0x644738", Offset = "0x644738", VA = "0x644738")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0x644800", Offset = "0x644800", VA = "0x644800")]
	private void OnOnboardingDisableObject(int parameter)
	{
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0x644848", Offset = "0x644848", VA = "0x644848")]
	public OnboardingDisableObject()
	{
	}
}
[Token(Token = "0x20001B5")]
public class TicketFrenzyIndicator : MonoBehaviour
{
	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0x81CE9C", Offset = "0x81CE9C", VA = "0x81CE9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0x81CEA0", Offset = "0x81CEA0", VA = "0x81CEA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0x81CEA4", Offset = "0x81CEA4", VA = "0x81CEA4")]
	public TicketFrenzyIndicator()
	{
	}
}
[Token(Token = "0x20001B6")]
public class SetRenderQueues : MonoBehaviour
{
	[Token(Token = "0x2000425")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8F44", Offset = "0x4A8F44")]
	private sealed class <ResetRenderQueue>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SetRenderQueues <>4__this;

		[Token(Token = "0x170001D2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CE2")]
			[Address(RVA = "0x6A1600", Offset = "0x6A1600", VA = "0x6A1600", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CE4")]
			[Address(RVA = "0x6A1670", Offset = "0x6A1670", VA = "0x6A1670", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0x6A1350", Offset = "0x6A1350", VA = "0x6A1350")]
		[DebuggerHidden]
		public <ResetRenderQueue>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0x6A1414", Offset = "0x6A1414", VA = "0x6A1414", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0x6A1418", Offset = "0x6A1418", VA = "0x6A1418", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0x6A1608", Offset = "0x6A1608", VA = "0x6A1608", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AEA")]
	private const int renderQueue = 6010;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Renderer> exceptionRenderers;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<int> exceptionRenderersValues;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Scene scene;

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0x6A0ECC", Offset = "0x6A0ECC", VA = "0x6A0ECC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0x6A1190", Offset = "0x6A1190", VA = "0x6A1190")]
	private void SetRenderQueue()
	{
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0x6A12DC", Offset = "0x6A12DC", VA = "0x6A12DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B3370", Offset = "0x4B3370")]
	private IEnumerator ResetRenderQueue()
	{
		return null;
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0x6A137C", Offset = "0x6A137C", VA = "0x6A137C")]
	public SetRenderQueues()
	{
	}
}
[Token(Token = "0x20001B7")]
public class PerPlatformTransformTweaks : MonoBehaviour
{
	[Token(Token = "0x2000426")]
	public enum Platform : byte
	{
		[Token(Token = "0x40018D8")]
		Oculus,
		[Token(Token = "0x40018D9")]
		DayDream,
		[Token(Token = "0x40018DA")]
		OculusGo
	}

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Platform platform;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "EnumFlagAttribute", RVA = "0x4AC6A4", Offset = "0x4AC6A4")]
	public Device devices;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool useRotation;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 rotation;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool usePosition;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 position;

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0x6581F8", Offset = "0x6581F8", VA = "0x6581F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0x6581FC", Offset = "0x6581FC", VA = "0x6581FC")]
	private void RunPerPlatform()
	{
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0x658240", Offset = "0x658240", VA = "0x658240")]
	private void RunTweaks()
	{
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0x658370", Offset = "0x658370", VA = "0x658370")]
	public PerPlatformTransformTweaks()
	{
	}
}
[Token(Token = "0x20001B8")]
public class AttachableItem : MonoBehaviour
{
	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0x6B6C84", Offset = "0x6B6C84", VA = "0x6B6C84")]
	public void Attach(GameObject parent, ItemCategory category)
	{
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0x6B72B4", Offset = "0x6B72B4", VA = "0x6B72B4")]
	public AttachableItem()
	{
	}
}
[Token(Token = "0x20001B9")]
public class AttachNode : MonoBehaviour
{
	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ItemCategory itemCategory;

	[Token(Token = "0x1700009D")]
	public ItemCategory ItemCategory
	{
		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x6B6C6C", Offset = "0x6B6C6C", VA = "0x6B6C6C")]
		get
		{
			return default(ItemCategory);
		}
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0x6B6C74", Offset = "0x6B6C74", VA = "0x6B6C74")]
	public AttachNode()
	{
	}
}
[Token(Token = "0x20001BA")]
public class WorldAudio : MonoBehaviour
{
	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0x830798", Offset = "0x830798", VA = "0x830798")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0x830860", Offset = "0x830860", VA = "0x830860")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0x830928", Offset = "0x830928", VA = "0x830928")]
	private void OnSceneLoaded(string sceneName)
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0x8309E8", Offset = "0x8309E8", VA = "0x8309E8")]
	public WorldAudio()
	{
	}
}
[Token(Token = "0x20001BB")]
public class WorldSignals
{
	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Signal<int> AttractionUnlockButtonPressed;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly Signal PlayerAvatarMovement;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly Signal PassAndPlayPickAttraction;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly Signal PassAndPlayCancelPickAttraction;

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0x832020", Offset = "0x832020", VA = "0x832020")]
	public WorldSignals()
	{
	}
}
[Token(Token = "0x20001BC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4A8644", Offset = "0x4A8644")]
public class BlinkingSprite : MonoBehaviour
{
	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4AC6C4", Offset = "0x4AC6C4")]
	private float blinkTimeSec;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SpriteRenderer spriteRenderer;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float timer;

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0x6C555C", Offset = "0x6C555C", VA = "0x6C555C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0x6C55B4", Offset = "0x6C55B4", VA = "0x6C55B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0x6C5654", Offset = "0x6C5654", VA = "0x6C5654")]
	public BlinkingSprite()
	{
	}
}
[Token(Token = "0x20001BD")]
public class OBBDownload : MonoBehaviour
{
	[Token(Token = "0x4000AFC")]
	private const string publicKey = "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArMGJ56HoFN+u3ajPMqOdyZDMK8POxCSNGdLvGXlPJgVVLP5DfOfV1yY6I44CdRQzHEylDzdokuQYZDS9H0ueS/ni61PiNNlbPTaqNh3Ke30lhkuho3ALd+b2SlzaYmDMDa/teNH2oQkfbcrnRh2DL6lldWHV+FG3Ttu8ph7QuM8VsXxCXAbbVyE6MN7O4HqxaegmWjk2CzrcAafGm2qKYb6CjzOREG6nfVsdm1TAux4PLegQYSlDvj/oldtJQZx3edRI6bH9DX8DUTs4AWRqHBTgvnzouDA+DRh9ckJUXB1N8XTv1JaCK5m4kg7MjOZxlnEADBY9X/r7sepPVEt2BQIDAQAB";

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0x643720", Offset = "0x643720", VA = "0x643720")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0x643EC8", Offset = "0x643EC8", VA = "0x643EC8")]
	public OBBDownload()
	{
	}
}
[Token(Token = "0x20001BE")]
public class HeadAnimator : MonoBehaviour
{
	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform leftEye;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform rightEye;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform neck;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AC738", Offset = "0x4AC738")]
	[SerializeField]
	private List<Transform> targets;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AC784", Offset = "0x4AC784")]
	[SerializeField]
	private float targetSwitchDelay;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AC7D0", Offset = "0x4AC7D0")]
	[SerializeField]
	private float targetSwitchDelayVariation;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AC81C", Offset = "0x4AC81C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4AC81C", Offset = "0x4AC81C")]
	[SerializeField]
	private float neckLookWeight;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AC880", Offset = "0x4AC880")]
	[SerializeField]
	private float neckBlendSwitchTimescale;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform target;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform neckTarget;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float switchTargetDelay;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool sceneLoadComplete;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PlayableBodyAnimator playableBodyAnimator;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ListenerList listenerList;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float blendedNeckLookWeight;

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0x7A145C", Offset = "0x7A145C", VA = "0x7A145C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0x7A1568", Offset = "0x7A1568", VA = "0x7A1568")]
	private void OnSceneLoaded(string sceneName)
	{
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0x7A15E4", Offset = "0x7A15E4", VA = "0x7A15E4")]
	private void AddPlayerCamerasAsTargets()
	{
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0x7A17CC", Offset = "0x7A17CC", VA = "0x7A17CC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0x7A1724", Offset = "0x7A1724", VA = "0x7A1724")]
	private void SetNewTarget()
	{
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0x7A1BD4", Offset = "0x7A1BD4", VA = "0x7A1BD4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0x7A1C04", Offset = "0x7A1C04", VA = "0x7A1C04")]
	public HeadAnimator()
	{
	}
}
[Token(Token = "0x20001BF")]
public class JawAnimator : SpeechPlayback.AudioVisualizer
{
	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform jawJoint;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float closedAngle;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float openedAngle;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector3 rotationVector;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AC90C", Offset = "0x4AC90C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4AC90C", Offset = "0x4AC90C")]
	[SerializeField]
	private float floor;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AC974", Offset = "0x4AC974")]
	[SerializeField]
	private float expansion;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PlayableBodyAnimator playableBodyAnimator;

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0x73E274", Offset = "0x73E274", VA = "0x73E274")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0x73E2DC", Offset = "0x73E2DC", VA = "0x73E2DC", Slot = "4")]
	public override void UpdateLoudness(float amount)
	{
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0x73E4A8", Offset = "0x73E4A8", VA = "0x73E4A8")]
	public JawAnimator()
	{
	}
}
[Token(Token = "0x20001C0")]
public class NewParentAtStart : MonoBehaviour
{
	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform parentAtStart;

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0x6428D8", Offset = "0x6428D8", VA = "0x6428D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0x642918", Offset = "0x642918", VA = "0x642918")]
	public NewParentAtStart()
	{
	}
}
[Token(Token = "0x20001C1")]
public class PlayableBodyAnimator : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000427")]
	private class ClipInformation
	{
		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationClip clip;

		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool allowJawAnimation;

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool allowHeadLookAt;

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool allowEyeLookAt;

		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0x65DB04", Offset = "0x65DB04", VA = "0x65DB04")]
		public ClipInformation()
		{
		}
	}

	[Token(Token = "0x2000428")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8F54", Offset = "0x4A8F54")]
	private sealed class <BindAnimationMixerAfterOneFrame>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayableBodyAnimator <>4__this;

		[Token(Token = "0x170001D4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CE9")]
			[Address(RVA = "0x65DA8C", Offset = "0x65DA8C", VA = "0x65DA8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CEB")]
			[Address(RVA = "0x65DAFC", Offset = "0x65DAFC", VA = "0x65DAFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0x65D520", Offset = "0x65D520", VA = "0x65D520")]
		[DebuggerHidden]
		public <BindAnimationMixerAfterOneFrame>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0x65DA1C", Offset = "0x65DA1C", VA = "0x65DA1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0x65DA20", Offset = "0x65DA20", VA = "0x65DA20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0x65DA94", Offset = "0x65DA94", VA = "0x65DA94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ClipInformation[] allClipsInformation;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float transitionSpeed;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float predelay;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private int maximumClipsMixedSimultaneously;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PlayableGraph playableGraph;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AnimationMixerPlayable animationMixer;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<string, int> animationClipIndexes;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float predelayLeft;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int currentActiveClipIndex;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int delayedUpcomingClipIndex;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float delayedUpcomingClipSpeed;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float[] inputWeights;

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0x65D228", Offset = "0x65D228", VA = "0x65D228")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0x65D358", Offset = "0x65D358", VA = "0x65D358")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0x65D4A0", Offset = "0x65D4A0", VA = "0x65D4A0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0x65D4AC", Offset = "0x65D4AC", VA = "0x65D4AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B33D4", Offset = "0x4B33D4")]
	private IEnumerator BindAnimationMixerAfterOneFrame()
	{
		return null;
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0x653F1C", Offset = "0x653F1C", VA = "0x653F1C")]
	public void PlayLine(string lineID, float speed)
	{
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0x65D54C", Offset = "0x65D54C", VA = "0x65D54C")]
	public bool AllowHeadLookAt()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0x65D5C4", Offset = "0x65D5C4", VA = "0x65D5C4")]
	public bool AllowEyeLookAt()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0x65D63C", Offset = "0x65D63C", VA = "0x65D63C")]
	public bool AllowJawAnimation()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0x65D6B4", Offset = "0x65D6B4", VA = "0x65D6B4")]
	private int GetNextIndex(int index)
	{
		return default(int);
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0x65D720", Offset = "0x65D720", VA = "0x65D720")]
	private void PlayNextActiveLine()
	{
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0x65D848", Offset = "0x65D848", VA = "0x65D848")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0x65D9F0", Offset = "0x65D9F0", VA = "0x65D9F0")]
	public PlayableBodyAnimator()
	{
	}
}
[Token(Token = "0x20001C2")]
public class CountdownTime
{
	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float totalTime;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float counter;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool autoReset;

	[Token(Token = "0x1700009E")]
	public bool IsRunning
	{
		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x6D9670", Offset = "0x6D9670", VA = "0x6D9670")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700009F")]
	public bool HasEnded
	{
		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x6D96A8", Offset = "0x6D96A8", VA = "0x6D96A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0x6D95EC", Offset = "0x6D95EC", VA = "0x6D95EC")]
	public CountdownTime(float totalTime)
	{
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0x6D962C", Offset = "0x6D962C", VA = "0x6D962C")]
	public CountdownTime SetTotalTime(float total)
	{
		return null;
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0x6D9634", Offset = "0x6D9634", VA = "0x6D9634")]
	public CountdownTime AutoReset()
	{
		return null;
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0x6D9640", Offset = "0x6D9640", VA = "0x6D9640")]
	public CountdownTime StartAtZero()
	{
		return null;
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0x6D9648", Offset = "0x6D9648", VA = "0x6D9648")]
	public CountdownTime Countdown(float time)
	{
		return null;
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0x6D9658", Offset = "0x6D9658", VA = "0x6D9658")]
	public CountdownTime AddTime(float time)
	{
		return null;
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0x6D9668", Offset = "0x6D9668", VA = "0x6D9668")]
	public float TimeLeft()
	{
		return default(float);
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0x6D9620", Offset = "0x6D9620", VA = "0x6D9620")]
	public void Reset()
	{
	}
}
[Token(Token = "0x20001C3")]
public class BaseCursor : SingleInstanceBehavior<BaseCursor>
{
	[Token(Token = "0x2000429")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8F64", Offset = "0x4A8F64")]
	private sealed class <Ininitialize>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BaseCursor <>4__this;

		[Token(Token = "0x170001D6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CEF")]
			[Address(RVA = "0x6BC1B0", Offset = "0x6BC1B0", VA = "0x6BC1B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CF1")]
			[Address(RVA = "0x6BC220", Offset = "0x6BC220", VA = "0x6BC220", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0x6BAC94", Offset = "0x6BAC94", VA = "0x6BAC94")]
		[DebuggerHidden]
		public <Ininitialize>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0x6BBE94", Offset = "0x6BBE94", VA = "0x6BBE94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0x6BBE98", Offset = "0x6BBE98", VA = "0x6BBE98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0x6BC1B8", Offset = "0x6BC1B8", VA = "0x6BC1B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Ray pointerRay;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float offsetFromObjects;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float defaultScale;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float minimumScale;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float defaultLaserPointerLength;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float defaultLaserPointerOriginDistanceOffset;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4ACA20", Offset = "0x4ACA20")]
	public LayerMask LayerMask;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float rayLength;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float laserBeamLength;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float lengthDivisor;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float minimumLaserlength;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform currentOriginTransform;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform reticle;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform transformComponent;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Renderer rendererComponent;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private LineRenderer laserBeamRenderer;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 laserBeamOriginalPositon;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool isInintialized;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	private bool disabledByGrabbing;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private RaycastHit[] raycastHits;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float rayCastLengthButton;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private UIButton lastHighlightedButton;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float rayCastLengthClick;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private ClickInteraction lastHoveredClickInteraction;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 defaultLaserPointOriginPosition;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Dictionary<Handedness, ControllerVisualization> handSetup;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Handedness handedness;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 playerScale;

	[Token(Token = "0x170000A0")]
	public bool DisabledByGrabbing
	{
		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x6BAA0C", Offset = "0x6BAA0C", VA = "0x6BAA0C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x6BAA14", Offset = "0x6BAA14", VA = "0x6BAA14")]
		set
		{
		}
	}

	[Token(Token = "0x170000A1")]
	public Vector3 PlayerScale
	{
		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x6BAA20", Offset = "0x6BAA20", VA = "0x6BAA20")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000A2")]
	public float CurrentLaserLength
	{
		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x6BAA2C", Offset = "0x6BAA2C", VA = "0x6BAA2C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0x6BAA34", Offset = "0x6BAA34", VA = "0x6BAA34", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0x6BABF4", Offset = "0x6BABF4", VA = "0x6BABF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0x6BAC20", Offset = "0x6BAC20", VA = "0x6BAC20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B3438", Offset = "0x4B3438")]
	private IEnumerator Ininitialize()
	{
		return null;
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0x6BACC0", Offset = "0x6BACC0", VA = "0x6BACC0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0x6BB55C", Offset = "0x6BB55C", VA = "0x6BB55C")]
	private Vector3 CalculateCursorPosition(Vector3 hitPoint, Vector3 cameraPosition, out Vector3 crosshairForward)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0x6BB474", Offset = "0x6BB474", VA = "0x6BB474")]
	public void SetLaserBeamAndCursorState(bool isEnabled)
	{
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0x6BB6E0", Offset = "0x6BB6E0", VA = "0x6BB6E0")]
	public void SetCursorState(bool isEnabled)
	{
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0x6BB650", Offset = "0x6BB650", VA = "0x6BB650")]
	public void SetLaserBeamState(bool isEnabled)
	{
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0x6BB790", Offset = "0x6BB790", VA = "0x6BB790")]
	public void SetPointerLength(float length)
	{
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0x6BB798", Offset = "0x6BB798", VA = "0x6BB798")]
	public void SetPointerLengthToDefault()
	{
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0x6BB7A4", Offset = "0x6BB7A4", VA = "0x6BB7A4")]
	public ClickInteraction UpdateAndGetClickInteraction()
	{
		return null;
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0x6BB7A8", Offset = "0x6BB7A8", VA = "0x6BB7A8")]
	private ClickInteraction GetPointedAtClickInteraction()
	{
		return null;
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0x6BB9F4", Offset = "0x6BB9F4", VA = "0x6BB9F4")]
	public UIButton UpdateAndGetHighlightedButton()
	{
		return null;
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0x6BBA1C", Offset = "0x6BBA1C", VA = "0x6BBA1C")]
	public UIButton GetPointedAtButton()
	{
		return null;
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0x6BBC18", Offset = "0x6BBC18", VA = "0x6BBC18")]
	public UIButton UpdateAndSetHighlightedButton(UIButton pointedAtButton)
	{
		return null;
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0x6BBDA0", Offset = "0x6BBDA0", VA = "0x6BBDA0")]
	public void SetReticleVisibility(bool active)
	{
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0x6BBDA8", Offset = "0x6BBDA8", VA = "0x6BBDA8")]
	public BaseCursor()
	{
	}
}
[Token(Token = "0x20001C4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4A86A8", Offset = "0x4A86A8")]
public class Crosshair : MonoBehaviour
{
	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerForImpact;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Transform aimTransform;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture idleTexture;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture focusedTexture;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float offsetFromObjects;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float defaultScale;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform lastHitTransform;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CrosshairInteractable lastHitInteractable;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer rendererComponent;

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0x6DD268", Offset = "0x6DD268", VA = "0x6DD268")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0x6DD2C0", Offset = "0x6DD2C0", VA = "0x6DD2C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0x6DD938", Offset = "0x6DD938", VA = "0x6DD938")]
	public Crosshair()
	{
	}
}
[Token(Token = "0x20001C5")]
public class CrosshairInteractable : MonoBehaviour
{
	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float crosshairScale;

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0x6DD954", Offset = "0x6DD954", VA = "0x6DD954", Slot = "4")]
	public virtual bool IsSelectable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0x6DD95C", Offset = "0x6DD95C", VA = "0x6DD95C", Slot = "5")]
	public virtual void OnHoverStart()
	{
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0x6DD960", Offset = "0x6DD960", VA = "0x6DD960", Slot = "6")]
	public virtual void OnHoverEnd()
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0x6DD964", Offset = "0x6DD964", VA = "0x6DD964", Slot = "7")]
	public virtual void OnSelect()
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0x6DD968", Offset = "0x6DD968", VA = "0x6DD968")]
	public CrosshairInteractable()
	{
	}
}
[Token(Token = "0x20001C6")]
public class GazeButton : MonoBehaviour
{
	[Token(Token = "0x200042A")]
	public enum PostSelectAction
	{
		[Token(Token = "0x40018E6")]
		Restart,
		[Token(Token = "0x40018E7")]
		WaitForLookAway
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0x723680", Offset = "0x723680", VA = "0x723680", Slot = "4")]
	public virtual bool IsSelectable(GameObject obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0x723688", Offset = "0x723688", VA = "0x723688", Slot = "5")]
	public virtual PostSelectAction OnSelect(GameObject obj)
	{
		return default(PostSelectAction);
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0x723690", Offset = "0x723690", VA = "0x723690", Slot = "6")]
	public virtual float GetGazeTimerLength(GameObject obj, float defaultTime)
	{
		return default(float);
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0x723694", Offset = "0x723694", VA = "0x723694", Slot = "7")]
	public virtual float GetCrossHairScale()
	{
		return default(float);
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0x72369C", Offset = "0x72369C", VA = "0x72369C", Slot = "8")]
	public virtual bool FakeShowAsNotSelectable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0x7236A4", Offset = "0x7236A4", VA = "0x7236A4", Slot = "9")]
	public virtual void OnStartGaze()
	{
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0x7236A8", Offset = "0x7236A8", VA = "0x7236A8", Slot = "10")]
	public virtual void OnStopGaze()
	{
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0x7236AC", Offset = "0x7236AC", VA = "0x7236AC")]
	public GazeButton()
	{
	}
}
[Token(Token = "0x20001C7")]
public class CheatButtonWorld : MonoBehaviour
{
	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BaseCursor baseCursor;

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0x6CDF7C", Offset = "0x6CDF7C", VA = "0x6CDF7C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0x6CDFF0", Offset = "0x6CDFF0", VA = "0x6CDFF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0x6CE2BC", Offset = "0x6CE2BC", VA = "0x6CE2BC")]
	private void GetAllItems()
	{
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0x6CE3C4", Offset = "0x6CE3C4", VA = "0x6CE3C4")]
	private void ResetPidgey()
	{
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0x6CE3C8", Offset = "0x6CE3C8", VA = "0x6CE3C8")]
	private void ResetProgression()
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0x6CE428", Offset = "0x6CE428", VA = "0x6CE428")]
	private void SkipProgression()
	{
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0x6CE42C", Offset = "0x6CE42C", VA = "0x6CE42C")]
	private void BuyHammer()
	{
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0x6CE46C", Offset = "0x6CE46C", VA = "0x6CE46C")]
	private void UnlockPidgeyStages()
	{
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0x6CE470", Offset = "0x6CE470", VA = "0x6CE470")]
	private void UnlockGolfStages()
	{
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0x6CE430", Offset = "0x6CE430", VA = "0x6CE430")]
	private void Get100Tickets()
	{
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0x6CE474", Offset = "0x6CE474", VA = "0x6CE474")]
	public CheatButtonWorld()
	{
	}
}
[Token(Token = "0x20001C8")]
public class DebugText : MonoBehaviour
{
	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static DebugText _instance;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text textField;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int numLines;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, string> logsByKeyword;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string[] logTextLines;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int currentLogIndex;

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0x6DFB28", Offset = "0x6DFB28", VA = "0x6DFB28")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0x6DFCF8", Offset = "0x6DFCF8", VA = "0x6DFCF8")]
	public static void Print(string msg, string keyword)
	{
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0x6DFCFC", Offset = "0x6DFCFC", VA = "0x6DFCFC")]
	public static void Print(string msg)
	{
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0x6DFD00", Offset = "0x6DFD00", VA = "0x6DFD00")]
	public static void Clear(string keyword = "")
	{
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0x6DFD04", Offset = "0x6DFD04", VA = "0x6DFD04")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0x6DFD54", Offset = "0x6DFD54", VA = "0x6DFD54")]
	private void AddText(string text, string keyword = "")
	{
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0x6E01D8", Offset = "0x6E01D8", VA = "0x6E01D8")]
	private void ClearText(string keyword = "")
	{
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0x6DFE6C", Offset = "0x6DFE6C", VA = "0x6DFE6C")]
	private void UpdateText()
	{
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0x6E0294", Offset = "0x6E0294", VA = "0x6E0294")]
	public DebugText()
	{
	}
}
[Token(Token = "0x20001C9")]
public class DestroyIfRelease : MonoBehaviour
{
	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0x6E06E0", Offset = "0x6E06E0", VA = "0x6E06E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0x6E075C", Offset = "0x6E075C", VA = "0x6E075C")]
	public DestroyIfRelease()
	{
	}
}
[Token(Token = "0x20001CA")]
public class InventoryDebug : MonoBehaviour
{
	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool debugShowInventory;

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0x73AF8C", Offset = "0x73AF8C", VA = "0x73AF8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0x73AF94", Offset = "0x73AF94", VA = "0x73AF94")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0x73AFCC", Offset = "0x73AFCC", VA = "0x73AFCC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0x73B798", Offset = "0x73B798", VA = "0x73B798")]
	public InventoryDebug()
	{
	}
}
[Token(Token = "0x20001CB")]
public class QualityTweaks : MonoBehaviour
{
	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4ACA68", Offset = "0x4ACA68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4ACA68", Offset = "0x4ACA68")]
	public float renderViewportScale;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4ACABC", Offset = "0x4ACABC")]
	public float renderScale;

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0x7CB648", Offset = "0x7CB648", VA = "0x7CB648")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0x7CB8A0", Offset = "0x7CB8A0", VA = "0x7CB8A0")]
	public QualityTweaks()
	{
	}
}
[Token(Token = "0x20001CC")]
public class UnlockAllIAPForRelease : MonoBehaviour
{
	[Token(Token = "0x6000D43")]
	[Address(RVA = "0x8276A8", Offset = "0x8276A8", VA = "0x8276A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0x8276AC", Offset = "0x8276AC", VA = "0x8276AC")]
	public UnlockAllIAPForRelease()
	{
	}
}
[Token(Token = "0x20001CD")]
public class DestroyIfDuplicate : MonoBehaviour
{
	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4ACAF4", Offset = "0x4ACAF4")]
	private string uniqueKey;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static HashSet<string> existingObjects;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isAllowedInstance;

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0x6E02A4", Offset = "0x6E02A4", VA = "0x6E02A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0x6E0430", Offset = "0x6E0430", VA = "0x6E0430")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0x6E056C", Offset = "0x6E056C", VA = "0x6E056C", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0x6E05D8", Offset = "0x6E05D8", VA = "0x6E05D8")]
	public DestroyIfDuplicate()
	{
	}
}
[Token(Token = "0x20001CE")]
public class DestroyOnPlatform : MonoBehaviour
{
	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Device[] platforms;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool destroyIfNotOnPlatform;

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0x6E0840", Offset = "0x6E0840", VA = "0x6E0840")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0x6E09C8", Offset = "0x6E09C8", VA = "0x6E09C8")]
	public DestroyOnPlatform()
	{
	}
}
[Token(Token = "0x20001CF")]
public class LinePlayback : MonoBehaviour
{
	[Token(Token = "0x200042B")]
	private class LineDefinition
	{
		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int NumAudioVariations;

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string BodyAnimationName;

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0x740D84", Offset = "0x740D84", VA = "0x740D84")]
		public LineDefinition()
		{
		}
	}

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Subtitles SubtitlesPrefab;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float speed;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, LineDefinition> lines;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<string, List<string>> groups;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<string, int> lastLineFromGroup;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SpeechPlayback speechPlayback;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PlayableBodyAnimator bodyAnimator;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Subtitles subtitlesInstance;

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0x740734", Offset = "0x740734", VA = "0x740734")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0x740968", Offset = "0x740968", VA = "0x740968")]
	private void LoadLineDefinitions()
	{
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0x740D8C", Offset = "0x740D8C", VA = "0x740D8C")]
	public void PlayLine(string lineID, [Optional] Action newOnPlaybackStopped)
	{
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0x7410C0", Offset = "0x7410C0", VA = "0x7410C0")]
	public void PlayGroup(string groupID, [Optional] Action newOnPlaybackStopped)
	{
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0x741024", Offset = "0x741024", VA = "0x741024")]
	private string GetRandomIdentifier(string baseIdentifier, int numVariations)
	{
		return null;
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0x7411CC", Offset = "0x7411CC", VA = "0x7411CC")]
	private string GetRandomLineFromGroup(string groupID)
	{
		return null;
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0x741348", Offset = "0x741348", VA = "0x741348")]
	public LinePlayback()
	{
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0x741358", Offset = "0x741358", VA = "0x741358")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B349C", Offset = "0x4B349C")]
	private void <PlayLine>b__11_0()
	{
	}
}
[Token(Token = "0x20001D0")]
public enum SpeechEventType
{
	[Token(Token = "0x4000B62")]
	Start,
	[Token(Token = "0x4000B63")]
	Stop
}
[Token(Token = "0x20001D1")]
public class SpeechPlayback : MonoBehaviour
{
	[Token(Token = "0x200042C")]
	public abstract class AudioVisualizer : MonoBehaviour
	{
		[Token(Token = "0x6001CF3")]
		public abstract void UpdateLoudness(float loudness);

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0x6A8F80", Offset = "0x6A8F80", VA = "0x6A8F80")]
		protected AudioVisualizer()
		{
		}
	}

	[Token(Token = "0x200042D")]
	private enum PlaybackState
	{
		[Token(Token = "0x40018EB")]
		Silent,
		[Token(Token = "0x40018EC")]
		Playing,
		[Token(Token = "0x40018ED")]
		FadingOut,
		[Token(Token = "0x40018EE")]
		Stopped
	}

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4ACB80", Offset = "0x4ACB80")]
	[SerializeField]
	private string characterId;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4ACBCC", Offset = "0x4ACBCC")]
	[SerializeField]
	private float predelay;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float fadeOutSpeed;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioVisualizer audioVisualizer;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float speed;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float preStopTime;

	[Token(Token = "0x4000B6B")]
	private const float frameInterval = 1f / 60f;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PlaybackState playbackState;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float defaultVolume;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float predelayLeft;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float preStopTimeLeft;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AudioClip nextAudioClip;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private byte[] animationData;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Action onPlaybackStopped;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Action onPreStop;

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0x6A8694", Offset = "0x6A8694", VA = "0x6A8694")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0x6A86D4", Offset = "0x6A86D4", VA = "0x6A86D4")]
	public void Say(string line_id, Action newOnPlaybackStopped, [Optional] Action newOnPreStop)
	{
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0x6A89DC", Offset = "0x6A89DC", VA = "0x6A89DC")]
	private void DoPlaybackStoppedCallback()
	{
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0x6A89F0", Offset = "0x6A89F0", VA = "0x6A89F0")]
	private void DoPreStopCallback()
	{
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0x6A8A04", Offset = "0x6A8A04", VA = "0x6A8A04")]
	private void Interrupt()
	{
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0x6A8A1C", Offset = "0x6A8A1C", VA = "0x6A8A1C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0x6A8A3C", Offset = "0x6A8A3C", VA = "0x6A8A3C")]
	private void UpdateWhenFadingOut()
	{
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0x6A8B00", Offset = "0x6A8B00", VA = "0x6A8B00")]
	private void UpdateWhenPlaying()
	{
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0x6A8CF8", Offset = "0x6A8CF8", VA = "0x6A8CF8")]
	private bool FadeOut()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0x6A8DD8", Offset = "0x6A8DD8", VA = "0x6A8DD8")]
	private void UpdateVisualizer()
	{
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0x6A8F5C", Offset = "0x6A8F5C", VA = "0x6A8F5C")]
	public SpeechPlayback()
	{
	}
}
[Token(Token = "0x20001D2")]
public class GodRayDust : MonoBehaviour
{
	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int materialIndex;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector2 uvAnimationRate;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string textureName;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material mat;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2 uvOffset;

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0x729704", Offset = "0x729704", VA = "0x729704")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0x729774", Offset = "0x729774", VA = "0x729774")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0x729864", Offset = "0x729864", VA = "0x729864")]
	public GodRayDust()
	{
	}
}
[Token(Token = "0x20001D3")]
public class FaceCamera : MonoBehaviour
{
	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera cam;

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0x71BFB4", Offset = "0x71BFB4", VA = "0x71BFB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0x71C020", Offset = "0x71C020", VA = "0x71C020")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0x71C1EC", Offset = "0x71C1EC", VA = "0x71C1EC")]
	public FaceCamera()
	{
	}
}
[Token(Token = "0x20001D4")]
public class FaceCameraYawOnly : MonoBehaviour
{
	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera cam;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 forward;

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0x71C1F4", Offset = "0x71C1F4", VA = "0x71C1F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0x71C260", Offset = "0x71C260", VA = "0x71C260")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0x71C424", Offset = "0x71C424", VA = "0x71C424")]
	public FaceCameraYawOnly()
	{
	}
}
[Token(Token = "0x20001D5")]
public class CameraFade : MonoBehaviour
{
	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GlobalFading globalFading;

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0x6CAEF8", Offset = "0x6CAEF8", VA = "0x6CAEF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0x6CAF4C", Offset = "0x6CAF4C", VA = "0x6CAF4C")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0x6CAF7C", Offset = "0x6CAF7C", VA = "0x6CAF7C")]
	public CameraFade()
	{
	}
}
[Token(Token = "0x20001D6")]
public class FadeGeometryByCameraDistance : MonoBehaviour
{
	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform cameraTransform;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float nearDistance;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float farDistance;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Material> affectedMaterials;

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0x71C42C", Offset = "0x71C42C", VA = "0x71C42C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0x71C430", Offset = "0x71C430", VA = "0x71C430")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0x71C70C", Offset = "0x71C70C", VA = "0x71C70C")]
	public FadeGeometryByCameraDistance()
	{
	}
}
[Token(Token = "0x20001D7")]
public class GlobalFading : SingletonBehavior<GlobalFading>
{
	[Token(Token = "0x200042E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8F74", Offset = "0x4A8F74")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GlobalFading <>4__this;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action onDone;

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0x724128", Offset = "0x724128", VA = "0x724128")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0x7249F4", Offset = "0x7249F4", VA = "0x7249F4")]
		internal void <FadeOut>b__0()
		{
		}
	}

	[Token(Token = "0x200042F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8F84", Offset = "0x4A8F84")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GlobalFading <>4__this;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool fadeAudio;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action onDone;

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0x7245DC", Offset = "0x7245DC", VA = "0x7245DC")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0x724938", Offset = "0x724938", VA = "0x724938")]
		internal void <FadeTo>b__0(float a)
		{
		}

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0x7249A8", Offset = "0x7249A8", VA = "0x7249A8")]
		internal void <FadeTo>b__1()
		{
		}
	}

	[Token(Token = "0x2000430")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8F94", Offset = "0x4A8F94")]
	private sealed class <SkipFramesAfterFadeOut>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GlobalFading <>4__this;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action onDone;

		[Token(Token = "0x170001D8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CFD")]
			[Address(RVA = "0x724C00", Offset = "0x724C00", VA = "0x724C00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CFF")]
			[Address(RVA = "0x724C70", Offset = "0x724C70", VA = "0x724C70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0x7247C0", Offset = "0x7247C0", VA = "0x7247C0")]
		[DebuggerHidden]
		public <SkipFramesAfterFadeOut>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0x724B2C", Offset = "0x724B2C", VA = "0x724B2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0x724B30", Offset = "0x724B30", VA = "0x724B30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0x724C08", Offset = "0x724C08", VA = "0x724C08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000431")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8FA4", Offset = "0x4A8FA4")]
	private sealed class <SkipFramesBeforeFadeIn>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GlobalFading <>4__this;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action onDone;

		[Token(Token = "0x170001DA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D03")]
			[Address(RVA = "0x724D4C", Offset = "0x724D4C", VA = "0x724D4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D05")]
			[Address(RVA = "0x724DBC", Offset = "0x724DBC", VA = "0x724DBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0x7247EC", Offset = "0x7247EC", VA = "0x7247EC")]
		[DebuggerHidden]
		public <SkipFramesBeforeFadeIn>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0x724C78", Offset = "0x724C78", VA = "0x724C78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0x724C7C", Offset = "0x724C7C", VA = "0x724C7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0x724D54", Offset = "0x724D54", VA = "0x724D54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000432")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8FB4", Offset = "0x4A8FB4")]
	private sealed class <SkipFrames>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int framesToSkip;

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int <framesSkipped>5__2;

		[Token(Token = "0x170001DC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D09")]
			[Address(RVA = "0x724AB4", Offset = "0x724AB4", VA = "0x724AB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D0B")]
			[Address(RVA = "0x724B24", Offset = "0x724B24", VA = "0x724B24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0x72488C", Offset = "0x72488C", VA = "0x72488C")]
		[DebuggerHidden]
		public <SkipFrames>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0x724A54", Offset = "0x724A54", VA = "0x724A54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0x724A58", Offset = "0x724A58", VA = "0x724A58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0x724ABC", Offset = "0x724ABC", VA = "0x724ABC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B81")]
	private const float floatCloseToOne = 0.999999f;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4ACC48", Offset = "0x4ACC48")]
	public float alpha;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private int framesToSkipOnFadeIn;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int framesToSkipAfterFadeOut;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material fadeMaterial;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color color;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int currentFadeId;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float fadeTime;

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0x723E9C", Offset = "0x723E9C", VA = "0x723E9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0x723FD4", Offset = "0x723FD4", VA = "0x723FD4")]
	public void FadeOut(Action onDone, bool fadeAudio)
	{
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0x7244F4", Offset = "0x7244F4", VA = "0x7244F4")]
	public void FadeIn(Action onDone, bool fadeAudio)
	{
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0x724130", Offset = "0x724130", VA = "0x724130")]
	private LTDescr FadeTo(float value, bool fadeAudio = false, [Optional] Action onDone)
	{
		return null;
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0x7245E4", Offset = "0x7245E4", VA = "0x7245E4")]
	private void OnFadeDone(Action onDone)
	{
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0x72453C", Offset = "0x72453C", VA = "0x72453C")]
	private void SetAudioVolume(float volume)
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0x724600", Offset = "0x724600", VA = "0x724600")]
	public void PostRender()
	{
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0x724728", Offset = "0x724728", VA = "0x724728")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B34AC", Offset = "0x4B34AC")]
	private IEnumerator SkipFramesAfterFadeOut(Action onDone)
	{
		return null;
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0x724544", Offset = "0x724544", VA = "0x724544")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B3510", Offset = "0x4B3510")]
	private IEnumerator SkipFramesBeforeFadeIn(Action onDone)
	{
		return null;
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0x724818", Offset = "0x724818", VA = "0x724818")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B3574", Offset = "0x4B3574")]
	private IEnumerator SkipFrames(int framesToSkip)
	{
		return null;
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0x7248B8", Offset = "0x7248B8", VA = "0x7248B8")]
	public GlobalFading()
	{
	}
}
[Token(Token = "0x20001D8")]
public class FixY : MonoBehaviour
{
	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4ACC80", Offset = "0x4ACC80")]
	[SerializeField]
	public float y;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform myTransform;

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0x71E02C", Offset = "0x71E02C", VA = "0x71E02C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0x71E054", Offset = "0x71E054", VA = "0x71E054")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0x71E0CC", Offset = "0x71E0CC", VA = "0x71E0CC")]
	public FixY()
	{
	}
}
[Token(Token = "0x20001D9")]
public class GDPRWindow : MonoBehaviour
{
	[Token(Token = "0x2000433")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8FC4", Offset = "0x4A8FC4")]
	private sealed class <Start>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GDPRWindow <>4__this;

		[Token(Token = "0x170001DE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D0F")]
			[Address(RVA = "0x7203FC", Offset = "0x7203FC", VA = "0x7203FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D11")]
			[Address(RVA = "0x72046C", Offset = "0x72046C", VA = "0x72046C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0x71F4D8", Offset = "0x71F4D8", VA = "0x71F4D8")]
		[DebuggerHidden]
		public <Start>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0x71FDDC", Offset = "0x71FDDC", VA = "0x71FDDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0x71FDE0", Offset = "0x71FDE0", VA = "0x71FDE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0x720404", Offset = "0x720404", VA = "0x720404", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject windowRoot;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject checkMarkCheck;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PulsateScale checkMarkPulsateScale;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject acceptButtonEnabled;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject acceptButtonDisabled;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private UIButton acceptButton;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private BaseCursor baseCursor;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UIBoard uiBoard;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<GameObject> hideWhenWindowOpen;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool checkmarkChecked;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Renderer[] controllerRenderers;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<int> controllerRenderQueues;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Material uiForegroundMaterial;

	[Token(Token = "0x170000A3")]
	public bool IsShowing
	{
		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x71F434", Offset = "0x71F434", VA = "0x71F434")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0x71F464", Offset = "0x71F464", VA = "0x71F464")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B35D8", Offset = "0x4B35D8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0x71F504", Offset = "0x71F504", VA = "0x71F504")]
	private void OnWorldLoaded(string scene)
	{
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0x71F608", Offset = "0x71F608", VA = "0x71F608")]
	private void SetWindowActive(bool active)
	{
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0x71F820", Offset = "0x71F820", VA = "0x71F820")]
	private void OnCheckmarkClicked()
	{
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0x71F85C", Offset = "0x71F85C", VA = "0x71F85C")]
	private void SetCheckmarkActive(bool active)
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0x71F8C4", Offset = "0x71F8C4", VA = "0x71F8C4")]
	private void SetAcceptButtonActive(bool active)
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0x71F980", Offset = "0x71F980", VA = "0x71F980")]
	private InputManager.CallbackResult OnButtonClicked()
	{
		return default(InputManager.CallbackResult);
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0x71F988", Offset = "0x71F988", VA = "0x71F988")]
	private void OnAcceptButtonClicked()
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0x71FC40", Offset = "0x71FC40", VA = "0x71FC40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0x71FDD4", Offset = "0x71FDD4", VA = "0x71FDD4")]
	public GDPRWindow()
	{
	}
}
[Token(Token = "0x20001DA")]
public class GDPRDialogStatus
{
	[Token(Token = "0x4000B98")]
	private const string GDPR_PREFS_KEY = "GDPR_User_viewed";

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0x71F388", Offset = "0x71F388", VA = "0x71F388")]
	public static bool HasAccepted()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0x71F3D4", Offset = "0x71F3D4", VA = "0x71F3D4")]
	public static void OnPlayerAccepted()
	{
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0x71F42C", Offset = "0x71F42C", VA = "0x71F42C")]
	public GDPRDialogStatus()
	{
	}
}
[Token(Token = "0x20001DB")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4A870C", Offset = "0x4A870C")]
public class SphereMesh : MonoBehaviour
{
	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float radius;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int longitudinalDivisions;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int latitudinalDivisions;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector2 firstUVCorner;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector2 secondUVCorner;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4ACCCC", Offset = "0x4ACCCC")]
	public bool inverted;

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0x6A8F88", Offset = "0x6A8F88", VA = "0x6A8F88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0x6A9690", Offset = "0x6A9690", VA = "0x6A9690")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0x6A8F8C", Offset = "0x6A8F8C", VA = "0x6A8F8C")]
	private void UpdateMesh()
	{
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0x6A9694", Offset = "0x6A9694", VA = "0x6A9694")]
	public SphereMesh()
	{
	}
}
[Token(Token = "0x20001DC")]
public class GizmoSphere : MonoBehaviour
{
	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Color GizmoColor;

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0x723DC8", Offset = "0x723DC8", VA = "0x723DC8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0x723E68", Offset = "0x723E68", VA = "0x723E68")]
	public GizmoSphere()
	{
	}
}
[Token(Token = "0x20001DD")]
public class AvoidHeadPosition : MonoBehaviour
{
	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform headTransform;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform moveDirectionTarget;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float desiredDistance;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minDistance;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float tightness;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float maxProximityBoost;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float waitBeforeReturning;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 originalPosition;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 moveDirection;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float timeLastDistanceIncrease;

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0x6B8C04", Offset = "0x6B8C04", VA = "0x6B8C04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0x6B8D30", Offset = "0x6B8D30", VA = "0x6B8D30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0x6B910C", Offset = "0x6B910C", VA = "0x6B910C")]
	public AvoidHeadPosition()
	{
	}
}
[Token(Token = "0x20001DE")]
public class ControllerUI : SingleInstanceBehavior<ControllerUI>
{
	[Token(Token = "0x2000434")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8FD4", Offset = "0x4A8FD4")]
	private sealed class <ShowStatusWithDelay>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControllerUI <>4__this;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ConnectionState status;

		[Token(Token = "0x170001E0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D15")]
			[Address(RVA = "0x6D88F0", Offset = "0x6D88F0", VA = "0x6D88F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D17")]
			[Address(RVA = "0x6D8960", Offset = "0x6D8960", VA = "0x6D8960", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0x6D82EC", Offset = "0x6D82EC", VA = "0x6D82EC")]
		[DebuggerHidden]
		public <ShowStatusWithDelay>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0x6D87C8", Offset = "0x6D87C8", VA = "0x6D87C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0x6D87CC", Offset = "0x6D87CC", VA = "0x6D87CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0x6D88F8", Offset = "0x6D88F8", VA = "0x6D88F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000435")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8FE4", Offset = "0x4A8FE4")]
	private sealed class <DelayedRemoveOnHeadset>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControllerUI <>4__this;

		[Token(Token = "0x170001E2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D1B")]
			[Address(RVA = "0x6D8750", Offset = "0x6D8750", VA = "0x6D8750", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D1D")]
			[Address(RVA = "0x6D87C0", Offset = "0x6D87C0", VA = "0x6D87C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0x6D838C", Offset = "0x6D838C", VA = "0x6D838C")]
		[DebuggerHidden]
		public <DelayedRemoveOnHeadset>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0x6D85E4", Offset = "0x6D85E4", VA = "0x6D85E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0x6D85E8", Offset = "0x6D85E8", VA = "0x6D85E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0x6D8758", Offset = "0x6D8758", VA = "0x6D8758", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject statusUI;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ConnectionState, GameObject> viewForStatus;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ConnectionState? currentlyShownStatus;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject statusView;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ConnectionState? pendingStatus;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine currentCoroutine;

	[Token(Token = "0x4000BB0")]
	private const float messageDelay = 0.5f;

	[Token(Token = "0x4000BB1")]
	private const float messageShowTime = 1.5f;

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0x6D7CD4", Offset = "0x6D7CD4", VA = "0x6D7CD4", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0x6D7EE4", Offset = "0x6D7EE4", VA = "0x6D7EE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0x6D808C", Offset = "0x6D808C", VA = "0x6D808C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0x6D7FD0", Offset = "0x6D7FD0", VA = "0x6D7FD0")]
	private void Hide()
	{
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0x6D8254", Offset = "0x6D8254", VA = "0x6D8254")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B363C", Offset = "0x4B363C")]
	private IEnumerator ShowStatusWithDelay(ConnectionState status)
	{
		return null;
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0x6D8318", Offset = "0x6D8318", VA = "0x6D8318")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B36A0", Offset = "0x4B36A0")]
	private IEnumerator DelayedRemoveOnHeadset()
	{
		return null;
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0x6D83B8", Offset = "0x6D83B8", VA = "0x6D83B8")]
	private void ShowStatus(ConnectionState status)
	{
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0x6D8574", Offset = "0x6D8574", VA = "0x6D8574")]
	public ControllerUI()
	{
	}
}
[Token(Token = "0x20001DF")]
public class FollowControllerOrientation : MonoBehaviour
{
	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Quaternion startRotation;

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0x71EE60", Offset = "0x71EE60", VA = "0x71EE60")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0x71EEA4", Offset = "0x71EEA4", VA = "0x71EEA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0x71F060", Offset = "0x71F060", VA = "0x71F060")]
	public FollowControllerOrientation()
	{
	}
}
[Token(Token = "0x20001E0")]
public class FollowHeadPosition : MonoBehaviour
{
	[Token(Token = "0x2000436")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A8FF4", Offset = "0x4A8FF4")]
	private sealed class <Start>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FollowHeadPosition <>4__this;

		[Token(Token = "0x170001E4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D21")]
			[Address(RVA = "0x71F310", Offset = "0x71F310", VA = "0x71F310", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D23")]
			[Address(RVA = "0x71F380", Offset = "0x71F380", VA = "0x71F380", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0x71F0DC", Offset = "0x71F0DC", VA = "0x71F0DC")]
		[DebuggerHidden]
		public <Start>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0x71F204", Offset = "0x71F204", VA = "0x71F204", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0x71F208", Offset = "0x71F208", VA = "0x71F208", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0x71F318", Offset = "0x71F318", VA = "0x71F318", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cameraParent;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform headTransform;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4ACD14", Offset = "0x4ACD14")]
	[SerializeField]
	private bool disableTrackingOnVive;

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0x71F068", Offset = "0x71F068", VA = "0x71F068")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B3704", Offset = "0x4B3704")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0x71F108", Offset = "0x71F108", VA = "0x71F108")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0x71F1FC", Offset = "0x71F1FC", VA = "0x71F1FC")]
	public FollowHeadPosition()
	{
	}
}
[Token(Token = "0x20001E1")]
public enum InputType
{
	[Token(Token = "0x4000BB7")]
	KeyDown,
	[Token(Token = "0x4000BB8")]
	KeyHold,
	[Token(Token = "0x4000BB9")]
	KeyUp,
	[Token(Token = "0x4000BBA")]
	KeyDownNoTouch
}
[Token(Token = "0x20001E2")]
public enum InputAction
{
	[Token(Token = "0x4000BBC")]
	Trigger,
	[Token(Token = "0x4000BBD")]
	Grab,
	[Token(Token = "0x4000BBE")]
	Special,
	[Token(Token = "0x4000BBF")]
	TouchPad,
	[Token(Token = "0x4000BC0")]
	Button1,
	[Token(Token = "0x4000BC1")]
	Button2,
	[Token(Token = "0x4000BC2")]
	Button3,
	[Token(Token = "0x4000BC3")]
	Button4
}
[Token(Token = "0x20001E3")]
public enum CallbackResult
{
	[Token(Token = "0x4000BC5")]
	Consumed,
	[Token(Token = "0x4000BC6")]
	NotConsumed
}
[Token(Token = "0x20001E4")]
public class InputManager : SingleInstanceBehavior<InputManager>
{
	[Token(Token = "0x2000437")]
	public enum Button : byte
	{
		[Token(Token = "0x400190E")]
		Click = 1,
		[Token(Token = "0x400190F")]
		Touch = 2,
		[Token(Token = "0x4001910")]
		App = 4
	}

	[Token(Token = "0x2000438")]
	public struct ButtonState
	{
		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool isDown;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool wasPressed;

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public bool wasReleased;
	}

	[Serializable]
	[Token(Token = "0x2000439")]
	public struct InputState
	{
		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 localPosition;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 wristPosition;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Quaternion orientation;

		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 touchPos;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Button buttonsDown;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public Button buttons;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public Button buttonsUp;
	}

	[Token(Token = "0x200043A")]
	private class InputEventListener : IComparable
	{
		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int priority;

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Func<CallbackResult> onInputEvent;

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0x736328", Offset = "0x736328", VA = "0x736328")]
		public InputEventListener(int priority, Func<CallbackResult> onInputEvent)
		{
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0x736968", Offset = "0x736968", VA = "0x736968", Slot = "4")]
		public int CompareTo(object obj)
		{
			return default(int);
		}
	}

	[Token(Token = "0x200043B")]
	public enum CallbackResult
	{
		[Token(Token = "0x400191E")]
		Consumed,
		[Token(Token = "0x400191F")]
		NotConsumed
	}

	[Token(Token = "0x200043C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9004", Offset = "0x4A9004")]
	private sealed class <DoUpdateHandedness>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InputManager <>4__this;

		[Token(Token = "0x170001E6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D29")]
			[Address(RVA = "0x7368F0", Offset = "0x7368F0", VA = "0x7368F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D2B")]
			[Address(RVA = "0x736960", Offset = "0x736960", VA = "0x736960", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0x736210", Offset = "0x736210", VA = "0x736210")]
		[DebuggerHidden]
		public <DoUpdateHandedness>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0x7367E0", Offset = "0x7367E0", VA = "0x7367E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0x7367E4", Offset = "0x7367E4", VA = "0x7367E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0x7368F8", Offset = "0x7368F8", VA = "0x7368F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Coroutine updateHandednessCoroutine;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private InputWrapper inputWrapper;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool buttonsEnabled;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private Handedness activeController;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private InputMode currentInputMode;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlatformConfig platformConfig;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private InputState currentRightControllerState;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private InputState currentLeftControllerState;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<InputEventListener> AppButtonListeners;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<InputEventListener> ClickButtonListeners;

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0x735514", Offset = "0x735514", VA = "0x735514")]
	public bool IsInputEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0x735548", Offset = "0x735548", VA = "0x735548")]
	public InputWrapper GetWrapper()
	{
		return null;
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0x735550", Offset = "0x735550", VA = "0x735550")]
	public InputMode GetInputMode()
	{
		return default(InputMode);
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0x735558", Offset = "0x735558", VA = "0x735558", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0x735A48", Offset = "0x735A48", VA = "0x735A48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0x735750", Offset = "0x735750", VA = "0x735750")]
	private InputState GetStateFromCurrentInput(Handedness handedness)
	{
		return default(InputState);
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0x735BB8", Offset = "0x735BB8", VA = "0x735BB8")]
	private Button GetButtonsDown()
	{
		return default(Button);
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0x735CC0", Offset = "0x735CC0", VA = "0x735CC0")]
	private Button GetCurrentButtons()
	{
		return default(Button);
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0x735DC8", Offset = "0x735DC8", VA = "0x735DC8")]
	private Button GetButtonsUp()
	{
		return default(Button);
	}

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0x735ED0", Offset = "0x735ED0", VA = "0x735ED0")]
	public bool ShouldHandBeVisible(Handedness hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0x732630", Offset = "0x732630", VA = "0x732630")]
	public bool IsButtonDown(InputAction action, Handedness handedness = Handedness.None)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0x733408", Offset = "0x733408", VA = "0x733408")]
	public bool IsButtonUp(InputAction action, Handedness handedness = Handedness.None)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0x73495C", Offset = "0x73495C", VA = "0x73495C")]
	public bool IsButtonHeld(InputAction action, Handedness handedness = Handedness.None)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0x7348C0", Offset = "0x7348C0", VA = "0x7348C0")]
	public Vector2 GetTouchPosition()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0x735F14", Offset = "0x735F14", VA = "0x735F14")]
	public Vector3 GetLocalPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0x735F20", Offset = "0x735F20", VA = "0x735F20")]
	public Vector3 GetWristPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0x735F2C", Offset = "0x735F2C", VA = "0x735F2C")]
	public Quaternion GetOrientation(Handedness hand = Handedness.None)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0x735F58", Offset = "0x735F58", VA = "0x735F58")]
	public void DisableInteraction()
	{
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0x735F60", Offset = "0x735F60", VA = "0x735F60")]
	public void EnableInteraction()
	{
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0x735B9C", Offset = "0x735B9C", VA = "0x735B9C")]
	public bool IsConnected()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0x735FB0", Offset = "0x735FB0", VA = "0x735FB0")]
	public bool IsRecentering()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0x735F6C", Offset = "0x735F6C", VA = "0x735F6C")]
	public ConnectionState GetStatus()
	{
		return default(ConnectionState);
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0x735FE8", Offset = "0x735FE8", VA = "0x735FE8")]
	public ConnectionState GetControllerConnection(Handedness handedness = Handedness.None)
	{
		return default(ConnectionState);
	}

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0x733E74", Offset = "0x733E74", VA = "0x733E74")]
	public void RandomHaptic(float minForce, float maxForce, float duration, Handedness handedness = Handedness.None)
	{
	}

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0x736044", Offset = "0x736044", VA = "0x736044")]
	public void FadeHaptic(float startForce, float endForce, float duration, Handedness handedness = Handedness.None)
	{
	}

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0x7360E0", Offset = "0x7360E0", VA = "0x7360E0")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0x73619C", Offset = "0x73619C", VA = "0x73619C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B3768", Offset = "0x4B3768")]
	private IEnumerator DoUpdateHandedness()
	{
		return null;
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0x735704", Offset = "0x735704", VA = "0x735704")]
	private void UpdateHandedness()
	{
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0x73623C", Offset = "0x73623C", VA = "0x73623C")]
	public Handedness GetHandedness()
	{
		return default(Handedness);
	}

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0x735B44", Offset = "0x735B44", VA = "0x735B44")]
	private void UpdateInputEventListeners()
	{
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0x736244", Offset = "0x736244", VA = "0x736244")]
	private bool CallListenersInOrder(List<InputEventListener> listeners)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0x731C94", Offset = "0x731C94", VA = "0x731C94")]
	public void AddInputEventListener(Button button, int priority, Func<CallbackResult> functionToCall)
	{
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0x736364", Offset = "0x736364", VA = "0x736364")]
	private void AddPrioritizedListener(InputEventListener newListener, List<InputEventListener> listeners)
	{
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0x731F58", Offset = "0x731F58", VA = "0x731F58")]
	public static void RemoveInputEventListener(Button button, int priority, Func<CallbackResult> functionToCall)
	{
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0x736408", Offset = "0x736408", VA = "0x736408")]
	private void UnregisterInputEventListener(Button button, int priority, Func<CallbackResult> functionToCall)
	{
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0x73643C", Offset = "0x73643C", VA = "0x73643C")]
	private void RemovePrioritizedListener(int priority, Func<CallbackResult> function, List<InputEventListener> listeners)
	{
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0x736570", Offset = "0x736570", VA = "0x736570")]
	public bool IsTouching(InputAction action, Handedness handedness = Handedness.None)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0x735AD4", Offset = "0x735AD4", VA = "0x735AD4")]
	private void UpdateActiveController()
	{
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0x735F0C", Offset = "0x735F0C", VA = "0x735F0C")]
	public Handedness GetActiveController()
	{
		return default(Handedness);
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0x736610", Offset = "0x736610", VA = "0x736610")]
	public float Axis(InputAction action, Handedness handedness = Handedness.None)
	{
		return default(float);
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0x7366B4", Offset = "0x7366B4", VA = "0x7366B4")]
	public Vector3 GetControllerLocalPosition(Handedness handedness = Handedness.None)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0x736710", Offset = "0x736710", VA = "0x736710")]
	public Quaternion GetControllerOrientation(Handedness handedness = Handedness.None)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0x736768", Offset = "0x736768", VA = "0x736768")]
	public InputManager()
	{
	}
}
[Token(Token = "0x20001E5")]
public class InputPriorities
{
	[Token(Token = "0x4000BD1")]
	public const int gdprWindow = 0;

	[Token(Token = "0x4000BD2")]
	public const int introScreen = 1;

	[Token(Token = "0x4000BD3")]
	public const int worldPassAndPlay = 2;

	[Token(Token = "0x4000BD4")]
	public const int worldPlayerAvatar = 3;

	[Token(Token = "0x4000BD5")]
	public const int worldPlayerMover = 4;

	[Token(Token = "0x4000BD6")]
	public const int minigameUIConfirmQuit = 1;

	[Token(Token = "0x4000BD7")]
	public const int minigameInstructions = 2;

	[Token(Token = "0x4000BD8")]
	public const int hierarchicalMenuClick = 3;

	[Token(Token = "0x4000BD9")]
	public const int worldPassAndPlayBack = 1;

	[Token(Token = "0x4000BDA")]
	public const int itemInspectorBack = 2;

	[Token(Token = "0x4000BDB")]
	public const int packPurchaseBoardBack = 3;

	[Token(Token = "0x4000BDC")]
	public const int hierarchicalMenuBack = 4;

	[Token(Token = "0x4000BDD")]
	public const int minigameUIBack = 5;

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0x736A50", Offset = "0x736A50", VA = "0x736A50")]
	public InputPriorities()
	{
	}
}
[Token(Token = "0x20001E6")]
public class InputRecord : MonoBehaviour, ISerializationCallbackReceiver
{
	[Serializable]
	[Token(Token = "0x200043D")]
	public struct Record
	{
		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float timestamp;

		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public InputManager.InputState state;
	}

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Record> records;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Record[] serializableRecords;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int playbackIndex;

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0x736A58", Offset = "0x736A58", VA = "0x736A58")]
	public void Store(float timestamp, InputManager.InputState state)
	{
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0x736BCC", Offset = "0x736BCC", VA = "0x736BCC")]
	public InputManager.InputState AdvancePlayback(float toTime)
	{
		return default(InputManager.InputState);
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0x736D58", Offset = "0x736D58", VA = "0x736D58")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0x736DC4", Offset = "0x736DC4", VA = "0x736DC4")]
	public void Rewind()
	{
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0x736DCC", Offset = "0x736DCC", VA = "0x736DCC", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0x736E40", Offset = "0x736E40", VA = "0x736E40", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0x736EB8", Offset = "0x736EB8", VA = "0x736EB8")]
	public InputRecord()
	{
	}
}
[Token(Token = "0x20001E7")]
public abstract class InputWrapper : MonoBehaviour
{
	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0x736EC0", Offset = "0x736EC0", VA = "0x736EC0", Slot = "4")]
	public virtual bool IsControllerActive(InputMode inputMode, Handedness hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0x736EC8", Offset = "0x736EC8", VA = "0x736EC8", Slot = "5")]
	public virtual bool IsInputEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0x736ED0", Offset = "0x736ED0", VA = "0x736ED0", Slot = "6")]
	public virtual bool SupportInputModes()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0x736ED8", Offset = "0x736ED8", VA = "0x736ED8", Slot = "7")]
	public virtual InputMode InitialInputMode()
	{
		return default(InputMode);
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0x736EE0", Offset = "0x736EE0", VA = "0x736EE0", Slot = "8")]
	public virtual bool IsControllerActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0x736EE8", Offset = "0x736EE8", VA = "0x736EE8", Slot = "9")]
	public virtual bool ShouldHandBeVisible(Handedness hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0x736EF0", Offset = "0x736EF0", VA = "0x736EF0", Slot = "10")]
	public virtual Handedness GetHandedness()
	{
		return default(Handedness);
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0x736EF8", Offset = "0x736EF8", VA = "0x736EF8", Slot = "11")]
	public virtual Vector3 GetControllerAcceleration(InputMode inputMode, Handedness hand)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0x736F58", Offset = "0x736F58", VA = "0x736F58", Slot = "12")]
	public virtual Quaternion GetControllerOrientation(InputMode inputMode, Handedness hand)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0x736FB8", Offset = "0x736FB8", VA = "0x736FB8", Slot = "13")]
	public virtual Vector3 GetControllerAngularVelocity(InputMode inputMode, Handedness hand)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0x737018", Offset = "0x737018", VA = "0x737018", Slot = "14")]
	public virtual Vector3 GetControllerLocalPosition(InputMode inputMode, Handedness hand)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0x737078", Offset = "0x737078", VA = "0x737078", Slot = "15")]
	public virtual Vector3 GetControllerWristPosition(InputMode inputMode, Handedness hand)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0x7370D8", Offset = "0x7370D8", VA = "0x7370D8", Slot = "16")]
	public virtual Vector2 GetControllerTouchPosition(InputMode inputMode, Handedness hand)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0x737138", Offset = "0x737138", VA = "0x737138", Slot = "17")]
	public virtual float GetAxis(InputSource axis, InputMode inputMode, Handedness hand)
	{
		return default(float);
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0x737140", Offset = "0x737140", VA = "0x737140", Slot = "18")]
	public virtual Vector2 GetAxis2D(InputSource axis, InputMode inputMode, Handedness hand)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0x7371A0", Offset = "0x7371A0", VA = "0x7371A0", Slot = "19")]
	public virtual bool GetButtonDown(InputSource button, InputMode inputMode, Handedness hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0x7371A8", Offset = "0x7371A8", VA = "0x7371A8", Slot = "20")]
	public virtual bool GetButtonUp(InputSource button, InputMode inputMode, Handedness hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0x7371B0", Offset = "0x7371B0", VA = "0x7371B0", Slot = "21")]
	public virtual bool GetButton(InputSource button, InputMode inputMode, Handedness hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0x7371B8", Offset = "0x7371B8", VA = "0x7371B8", Slot = "22")]
	public virtual bool GetTouchingDown(InputSource area, InputMode inputMode, Handedness hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0x7371C0", Offset = "0x7371C0", VA = "0x7371C0", Slot = "23")]
	public virtual bool GetTouchingUp(InputSource area, InputMode inputMode, Handedness hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0x7371C8", Offset = "0x7371C8", VA = "0x7371C8", Slot = "24")]
	public virtual bool GetTouching(InputSource area, InputMode inputMode, Handedness hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0x7371D0", Offset = "0x7371D0", VA = "0x7371D0", Slot = "25")]
	public virtual bool GetTouchingNearDown(InputSource area, InputMode inputMode, Handedness hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0x7371D8", Offset = "0x7371D8", VA = "0x7371D8", Slot = "26")]
	public virtual bool GetTouchingNearUp(InputSource area, InputMode inputMode, Handedness hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0x7371E0", Offset = "0x7371E0", VA = "0x7371E0", Slot = "27")]
	public virtual bool GetTouchingNear(InputSource area, InputMode inputMode, Handedness hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0x7371E8", Offset = "0x7371E8", VA = "0x7371E8", Slot = "28")]
	public virtual bool GetIsRecentering()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0x7371F0", Offset = "0x7371F0", VA = "0x7371F0", Slot = "29")]
	public virtual ConnectionState GetConnectionState(InputMode inputMode, Handedness hand)
	{
		return default(ConnectionState);
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0x7371F8", Offset = "0x7371F8", VA = "0x7371F8")]
	protected InputWrapper()
	{
	}
}
[Token(Token = "0x20001E8")]
public class InputWrapperEditor : InputWrapper
{
	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0x737200", Offset = "0x737200", VA = "0x737200")]
	public InputWrapperEditor()
	{
	}
}
[Token(Token = "0x20001E9")]
public class InputWrapperGearVR : InputWrapper
{
	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0x737208", Offset = "0x737208", VA = "0x737208")]
	public InputWrapperGearVR()
	{
	}
}
[Token(Token = "0x20001EA")]
public class InputWrapperGoogleVR : InputWrapper
{
	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0x737210", Offset = "0x737210", VA = "0x737210")]
	public InputWrapperGoogleVR()
	{
	}
}
[Token(Token = "0x20001EB")]
public class InputWrapperOpenVR : InputWrapper
{
	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0x737218", Offset = "0x737218", VA = "0x737218")]
	public InputWrapperOpenVR()
	{
	}
}
[Token(Token = "0x20001EC")]
public class InputWrapperViveWave : InputWrapper
{
	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0x737220", Offset = "0x737220", VA = "0x737220")]
	public InputWrapperViveWave()
	{
	}
}
[Token(Token = "0x20001ED")]
public class Inventory
{
	[Serializable]
	[Token(Token = "0x200043E")]
	private class PersistentItemData
	{
		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int freeQuantity;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool bought;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool newInCollection;

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0x73AE2C", Offset = "0x73AE2C", VA = "0x73AE2C")]
		public PersistentItemData()
		{
		}
	}

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Inventory instance;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<InventoryCatalogue.ItemID, PersistentItemData> items;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<ItemCategory, InventoryCatalogue.ItemID> equippedItems;

	[Token(Token = "0x4000BE4")]
	private const string playerInventoryItemKeyPrefix = "Universe_Inventory";

	[Token(Token = "0x4000BE5")]
	private const string playerEquipmentKeyPrefix = "Universe_Equipment";

	[Token(Token = "0x170000A4")]
	public static Inventory Instance
	{
		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x73911C", Offset = "0x73911C", VA = "0x73911C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0x739198", Offset = "0x739198", VA = "0x739198")]
	private Inventory()
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0x7397B8", Offset = "0x7397B8", VA = "0x7397B8")]
	public void AddItem(InventoryCatalogue.ItemID itemID, int quantity)
	{
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0x739904", Offset = "0x739904", VA = "0x739904")]
	private bool ShouldBeMarkedAsNew(InventoryCatalogue.ItemID itemId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0x739BD0", Offset = "0x739BD0", VA = "0x739BD0")]
	public bool HasBoughtItem(InventoryCatalogue.ItemID itemId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0x739C54", Offset = "0x739C54", VA = "0x739C54")]
	public bool HasBoughtHammerGame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0x739C9C", Offset = "0x739C9C", VA = "0x739C9C")]
	public bool HasBoughtPidgeyLevelPack()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0x739CE4", Offset = "0x739CE4", VA = "0x739CE4")]
	public bool HasBoughtGolfLevelPack()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0x739D2C", Offset = "0x739D2C", VA = "0x739D2C")]
	public void MarkAsBought(InventoryCatalogue.ItemID itemId, bool newInCollection)
	{
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0x739E70", Offset = "0x739E70", VA = "0x739E70")]
	public void MarkAsNotBought(InventoryCatalogue.ItemID itemId)
	{
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0x73A400", Offset = "0x73A400", VA = "0x73A400")]
	public bool TryRemoveItem(InventoryCatalogue.ItemID itemID, int quantity)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0x739AC8", Offset = "0x739AC8", VA = "0x739AC8")]
	public bool HasItem(InventoryCatalogue.ItemID itemID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0x73A570", Offset = "0x73A570", VA = "0x73A570")]
	public void SetItemQuantity(InventoryCatalogue.ItemID itemID, int freeQuantity)
	{
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0x73A4F8", Offset = "0x73A4F8", VA = "0x73A4F8")]
	public int GetNumItems(InventoryCatalogue.ItemID itemID)
	{
		return default(int);
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0x73A5FC", Offset = "0x73A5FC", VA = "0x73A5FC")]
	private int GetNumItems(PersistentItemData itemData)
	{
		return default(int);
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0x73A644", Offset = "0x73A644", VA = "0x73A644")]
	public bool IsItemNewInCollection(InventoryCatalogue.ItemID itemID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0x73A6C8", Offset = "0x73A6C8", VA = "0x73A6C8")]
	public void SetItemAsOldInCollection(InventoryCatalogue.ItemID itemID)
	{
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0x73A750", Offset = "0x73A750", VA = "0x73A750")]
	public bool HaveAnyNewItemInCollection()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0x73A8E8", Offset = "0x73A8E8", VA = "0x73A8E8")]
	public void SetAllHeldItemsAsOldInCollection()
	{
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0x73AA44", Offset = "0x73AA44", VA = "0x73AA44")]
	public void EquipItem(InventoryCatalogue.ItemID itemID, bool writeToPersistent = true)
	{
	}

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0x73AB10", Offset = "0x73AB10", VA = "0x73AB10")]
	public bool IsItemEquippedInCategory(ItemCategory itemCategory)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0x73AB80", Offset = "0x73AB80", VA = "0x73AB80")]
	public InventoryCatalogue.ItemID GetEquippedItem(ItemCategory itemCategory)
	{
		return default(InventoryCatalogue.ItemID);
	}

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0x739FE4", Offset = "0x739FE4", VA = "0x739FE4")]
	public bool IsItemEquipped(InventoryCatalogue.ItemID itemID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0x7399A0", Offset = "0x7399A0", VA = "0x7399A0")]
	private void WriteInventoryToPersistentMemory()
	{
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0x739240", Offset = "0x739240", VA = "0x739240")]
	private void ReadInventoryFromPersistentMemory()
	{
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0x73A0F4", Offset = "0x73A0F4", VA = "0x73A0F4")]
	private void WriteEquipmentToPersistentMemory()
	{
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0x7394B4", Offset = "0x7394B4", VA = "0x7394B4")]
	private void ReadEquipmentFromPersistentMemory()
	{
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0x73A088", Offset = "0x73A088", VA = "0x73A088")]
	private void EnsureDefaultEquipmentSetup()
	{
	}

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0x73AEE4", Offset = "0x73AEE4", VA = "0x73AEE4")]
	private void EnsureCategoryIsEquipped(InventoryCatalogue.ItemID defaultItem)
	{
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0x73ADA4", Offset = "0x73ADA4", VA = "0x73ADA4")]
	private string GeneratePlayerPrefKey(string keyPrefix, object enumObject)
	{
		return null;
	}
}
[Token(Token = "0x20001EE")]
public class InventoryCatalogue
{
	[Token(Token = "0x200043F")]
	public enum ItemID
	{
		[Token(Token = "0x4001929")]
		UniverseCurrencyA = 0,
		[Token(Token = "0x400192A")]
		UniverseTicketFrenzy = 1,
		[Token(Token = "0x400192B")]
		UniversePidgeyLevelPackA = 100,
		[Token(Token = "0x400192C")]
		UniverseGolfLevelPackA = 101,
		[Token(Token = "0x400192D")]
		UniverseHammerGameUnlock = 102,
		[Token(Token = "0x400192E")]
		UniversePidgeyGolfHammerBundle = 103,
		[Token(Token = "0x400192F")]
		TinderTownStandardHose = 1000,
		[Token(Token = "0x4001930")]
		TinderTownTrumpetHose = 1001,
		[Token(Token = "0x4001931")]
		TinderTownUnicornHose = 1002,
		[Token(Token = "0x4001932")]
		TinderTownDragonHose = 1003,
		[Token(Token = "0x4001933")]
		TinderTownFruitHose = 1004,
		[Token(Token = "0x4001934")]
		TinderTownExtinguisherHose = 1005,
		[Token(Token = "0x4001935")]
		TindertownAlienHose = 1006,
		[Token(Token = "0x4001936")]
		TinderTownGuitarHose = 1007,
		[Token(Token = "0x4001937")]
		PidgeyCow = 2000,
		[Token(Token = "0x4001938")]
		PidgeyPig = 2001,
		[Token(Token = "0x4001939")]
		PidgeyChicken = 2002,
		[Token(Token = "0x400193A")]
		PidgeyDragodile = 2003,
		[Token(Token = "0x400193B")]
		PidgeyFrog = 2004,
		[Token(Token = "0x400193C")]
		PidgeyUnicorn = 2005,
		[Token(Token = "0x400193D")]
		PidgeyLion = 2006,
		[Token(Token = "0x400193E")]
		PidgeyDuck = 2007,
		[Token(Token = "0x400193F")]
		PidgeyAlien = 2008,
		[Token(Token = "0x4001940")]
		SlowpokeStandardWand = 4000,
		[Token(Token = "0x4001941")]
		SlowpokeCutifyWand = 4001,
		[Token(Token = "0x4001942")]
		SlowpokeStarWand = 4002,
		[Token(Token = "0x4001943")]
		SlowpokeLavaWand = 4003,
		[Token(Token = "0x4001944")]
		SlowpokeFlowerWand = 4004,
		[Token(Token = "0x4001945")]
		SlowpokeMushroomWand = 4005,
		[Token(Token = "0x4001946")]
		SlowpokeCookieWand = 4006,
		[Token(Token = "0x4001947")]
		SlowpokeSockWand = 4007,
		[Token(Token = "0x4001948")]
		SlowpokeFlyWand = 4008,
		[Token(Token = "0x4001949")]
		GolfatchuStandard = 6000,
		[Token(Token = "0x400194A")]
		GolfatchuCutify = 6001,
		[Token(Token = "0x400194B")]
		GolfatchuMedieval = 6002,
		[Token(Token = "0x400194C")]
		GolfatchuFish = 6003,
		[Token(Token = "0x400194D")]
		GolfatchuGuitar = 6004,
		[Token(Token = "0x400194E")]
		GolfatchuHockey = 6005,
		[Token(Token = "0x400194F")]
		BasketStandard = 8000,
		[Token(Token = "0x4001950")]
		BasketHarlem = 8001,
		[Token(Token = "0x4001951")]
		BasketTennis = 8002,
		[Token(Token = "0x4001952")]
		BasketSkull = 8003,
		[Token(Token = "0x4001953")]
		HammerStandard = 9000,
		[Token(Token = "0x4001954")]
		HammerJewel = 9001,
		[Token(Token = "0x4001955")]
		HammerRubber = 9002,
		[Token(Token = "0x4001956")]
		VanityHeadNone = 100000,
		[Token(Token = "0x4001957")]
		VanityHeadGlasses1 = 100001,
		[Token(Token = "0x4001958")]
		VanityHeadGlasses2 = 100002,
		[Token(Token = "0x4001959")]
		VanityHeadGlasses3 = 100003,
		[Token(Token = "0x400195A")]
		VanityHeadGlasses4 = 100004,
		[Token(Token = "0x400195B")]
		VanityHeadMustache1 = 100005,
		[Token(Token = "0x400195C")]
		VanityHeadMustache2 = 100006,
		[Token(Token = "0x400195D")]
		VanityHeadMustache3 = 100007,
		[Token(Token = "0x400195E")]
		VanityHeadMustache4 = 100008,
		[Token(Token = "0x400195F")]
		VanityHeadMustache5 = 100009,
		[Token(Token = "0x4001960")]
		VanityHeadMustache6 = 100010,
		[Token(Token = "0x4001961")]
		VanityHeadNose1 = 100011,
		[Token(Token = "0x4001962")]
		VanityHeadEars1 = 100012,
		[Token(Token = "0x4001963")]
		VanityHeadHat1 = 100013,
		[Token(Token = "0x4001964")]
		VanityHeadRoyal1 = 100014,
		[Token(Token = "0x4001965")]
		VanityHeadSanta1 = 100015
	}

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ItemID[] allIds;

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0x73ABF0", Offset = "0x73ABF0", VA = "0x73ABF0")]
	public static ItemID[] GetAllItemIds()
	{
		return null;
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0x73AF84", Offset = "0x73AF84", VA = "0x73AF84")]
	public InventoryCatalogue()
	{
	}
}
[Token(Token = "0x20001EF")]
public enum ItemCategory
{
	[Token(Token = "0x4000BE8")]
	None = 0,
	[Token(Token = "0x4000BE9")]
	Currency = 1,
	[Token(Token = "0x4000BEA")]
	Consumable = 100,
	[Token(Token = "0x4000BEB")]
	Unlockable = 200,
	[Token(Token = "0x4000BEC")]
	TinderTownHose = 1000,
	[Token(Token = "0x4000BED")]
	PidgeyCar = 2000,
	[Token(Token = "0x4000BEE")]
	_WorldUnused = 2001,
	[Token(Token = "0x4000BEF")]
	MagicMayhemWand = 4000,
	[Token(Token = "0x4000BF0")]
	_PsyduckUnused = 4001,
	[Token(Token = "0x4000BF1")]
	GolfatchuClub = 6000,
	[Token(Token = "0x4000BF2")]
	_CollectionUnused = 6001,
	[Token(Token = "0x4000BF3")]
	BasketBall = 8000,
	[Token(Token = "0x4000BF4")]
	Hammer = 9000,
	[Token(Token = "0x4000BF5")]
	HeadCustomizationItems = 100000
}
[Token(Token = "0x20001F0")]
public static class ItemCatalogue
{
	[Token(Token = "0x2000440")]
	public struct ItemInfo
	{
		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ItemCategory category;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool purchasable;

		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int startAmount;

		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int minAmount;
	}

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<InventoryCatalogue.ItemID, ItemInfo> itemInfoDict;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Dictionary<ItemCategory, Minigame.Name> categoryToMinigameDict;

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0x739AE4", Offset = "0x739AE4", VA = "0x739AE4")]
	public static ItemCategory GetCategory(InventoryCatalogue.ItemID itemID)
	{
		return default(ItemCategory);
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0x73B7A0", Offset = "0x73B7A0", VA = "0x73B7A0")]
	public static Minigame.Name GetMinigame(ItemCategory category)
	{
		return default(Minigame.Name);
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0x73B894", Offset = "0x73B894", VA = "0x73B894")]
	public static Minigame.Name GetMinigame(InventoryCatalogue.ItemID itemID)
	{
		return default(Minigame.Name);
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x73B8FC", Offset = "0x73B8FC", VA = "0x73B8FC")]
	public static List<InventoryCatalogue.ItemID> GetPurchasableItems()
	{
		return null;
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0x73AE58", Offset = "0x73AE58", VA = "0x73AE58")]
	public static ItemInfo GetItemInfo(InventoryCatalogue.ItemID itemID)
	{
		return default(ItemInfo);
	}
}
[Token(Token = "0x20001F1")]
public abstract class Purchaser : SingleInstanceBehavior<Purchaser>
{
	[Token(Token = "0x6000E1A")]
	public abstract bool IsInitialized();

	[Token(Token = "0x6000E1B")]
	public abstract void BuyProduct(InventoryCatalogue.ItemID itemId);

	[Token(Token = "0x6000E1C")]
	public abstract string GetItemPrice(InventoryCatalogue.ItemID itemID);

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0x9CF930", Offset = "0x9CF930", VA = "0x9CF930")]
	protected Purchaser()
	{
	}
}
[Token(Token = "0x20001F2")]
public class LocalePrefabSpawner : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000441")]
	public class Entry
	{
		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] locales;

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject prefab;

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0x741534", Offset = "0x741534", VA = "0x741534")]
		public bool IsLocaleMatching(string locale)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0x741694", Offset = "0x741694", VA = "0x741694")]
		public Entry()
		{
		}
	}

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Entry[] entries;

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0x7413DC", Offset = "0x7413DC", VA = "0x7413DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0x7415F4", Offset = "0x7415F4", VA = "0x7415F4")]
	private void SpawnPrefab(GameObject prefab)
	{
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0x74168C", Offset = "0x74168C", VA = "0x74168C")]
	public LocalePrefabSpawner()
	{
	}
}
[Token(Token = "0x20001F3")]
public class Minigame : MonoBehaviour
{
	[Token(Token = "0x2000442")]
	public enum Name
	{
		[Token(Token = "0x400196D")]
		None = 0,
		[Token(Token = "0x400196E")]
		TinderTown = 1000,
		[Token(Token = "0x400196F")]
		Pidgey = 2000,
		[Token(Token = "0x4001970")]
		MagicMayhem = 4000,
		[Token(Token = "0x4001971")]
		Psyduck = 5000,
		[Token(Token = "0x4001972")]
		Golfatchu = 6000,
		[Token(Token = "0x4001973")]
		Collection = 7000,
		[Token(Token = "0x4001974")]
		Basket = 8000,
		[Token(Token = "0x4001975")]
		Hammer = 9000,
		[Token(Token = "0x4001976")]
		ScoreboardTester = 11111
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0x63FC50", Offset = "0x63FC50", VA = "0x63FC50")]
	public Minigame()
	{
	}
}
[Token(Token = "0x20001F4")]
public class InstructionsBoard : SingleInstanceBehavior<InstructionsBoard>
{
	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float showY;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float hideY;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float moveInSpeed;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float moveOutSpeed;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject myGameObject;

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0x737290", Offset = "0x737290", VA = "0x737290", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0x737360", Offset = "0x737360", VA = "0x737360")]
	public void Show()
	{
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0x737474", Offset = "0x737474", VA = "0x737474")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0x7373F0", Offset = "0x7373F0", VA = "0x7373F0")]
	private float GetMoveTime(float speed)
	{
		return default(float);
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0x737504", Offset = "0x737504", VA = "0x737504")]
	public InstructionsBoard()
	{
	}
}
[Token(Token = "0x20001F5")]
public class MinigameUI : SingleInstanceBehavior<MinigameUI>
{
	[Token(Token = "0x2000443")]
	private enum State
	{
		[Token(Token = "0x4001978")]
		Idle,
		[Token(Token = "0x4001979")]
		AwaitingQuitConfirm,
		[Token(Token = "0x400197A")]
		AwaitingNextPlayerReady,
		[Token(Token = "0x400197B")]
		AbortMinigame
	}

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float minigameTimeScale;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	public bool useConfirmQuit;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Func<bool> isBackButtonEnabled;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform confirmQuitOffset;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform passAndPlayConfirmQuitOffset;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UIBoard confirmQuitBoard;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private UIBoard passAndPlayConfirmQuitBoard;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private UIBoard readyPlayerBoard;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private UIButton highlightedButton;

	[Token(Token = "0x4000C07")]
	private const string confirmQuitButtonString = "ConfirmQuit";

	[Token(Token = "0x4000C08")]
	private const string refuseQuitButtonString = "RefuseQuit";

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private State state;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Action actionOnNextPlayerReady;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private LocalizedText readyPlayerText;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float debugSpeedFactor;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private BaseCursor baseCursor;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool paused;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private PlatformConfig platformSpecifics;

	[Token(Token = "0x170000A5")]
	public string minigameSceneName
	{
		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x640640", Offset = "0x640640", VA = "0x640640")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0x64068C", Offset = "0x64068C", VA = "0x64068C", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0x640794", Offset = "0x640794", VA = "0x640794")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0x640950", Offset = "0x640950", VA = "0x640950")]
	private void ShowConfirmQuit()
	{
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0x640BB4", Offset = "0x640BB4", VA = "0x640BB4")]
	private void HideConfirmQuit()
	{
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0x640CA4", Offset = "0x640CA4", VA = "0x640CA4")]
	public void AwaitPlayerReady(int playerNumber, Action onDone)
	{
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0x640D18", Offset = "0x640D18", VA = "0x640D18")]
	private void OnConfirmQuit()
	{
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0x640E10", Offset = "0x640E10", VA = "0x640E10")]
	private void OnNextPlayerReady()
	{
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0x640E5C", Offset = "0x640E5C", VA = "0x640E5C")]
	private void UpdateHighlightedButton()
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0x640E98", Offset = "0x640E98", VA = "0x640E98")]
	private void OnConfirmQuitClick()
	{
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0x640F8C", Offset = "0x640F8C", VA = "0x640F8C")]
	private void CheckInputAwaitingNextPlayerReady()
	{
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0x641030", Offset = "0x641030", VA = "0x641030")]
	private void CheckInputPauseGame()
	{
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0x64136C", Offset = "0x64136C", VA = "0x64136C")]
	private void CheckInputUnPauseGame()
	{
	}

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0x6414EC", Offset = "0x6414EC", VA = "0x6414EC")]
	private InputManager.CallbackResult OnClickButtonPressed()
	{
		return default(InputManager.CallbackResult);
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0x641518", Offset = "0x641518", VA = "0x641518")]
	private InputManager.CallbackResult OnAppButtonPressed()
	{
		return default(InputManager.CallbackResult);
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0x641520", Offset = "0x641520", VA = "0x641520")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0x64172C", Offset = "0x64172C", VA = "0x64172C")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0x641778", Offset = "0x641778", VA = "0x641778")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0x63A32C", Offset = "0x63A32C", VA = "0x63A32C")]
	public void SetTimeScale(float s)
	{
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0x641654", Offset = "0x641654", VA = "0x641654")]
	private void SetTimeParameters()
	{
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0x64177C", Offset = "0x64177C", VA = "0x64177C")]
	public void RemoveConfirmQuitOffset()
	{
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0x641860", Offset = "0x641860", VA = "0x641860")]
	public void SetConfirmQuitOffset(Vector3 worldPos)
	{
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0x63B55C", Offset = "0x63B55C", VA = "0x63B55C")]
	public bool GameShouldBePaused()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0x640D3C", Offset = "0x640D3C", VA = "0x640D3C")]
	private void AbortMinigame()
	{
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0x6418E4", Offset = "0x6418E4", VA = "0x6418E4", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0x6411D4", Offset = "0x6411D4", VA = "0x6411D4")]
	private bool IsBackButtonEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0x6419D0", Offset = "0x6419D0", VA = "0x6419D0")]
	public MinigameUI()
	{
	}
}
[Token(Token = "0x20001F6")]
public class MovementSound : MonoBehaviour
{
	[Token(Token = "0x2000444")]
	public enum vectorDirection
	{
		[Token(Token = "0x400197D")]
		forward,
		[Token(Token = "0x400197E")]
		up
	}

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minAccumulationTime;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxAccumulationTime;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minDegreesPerSecond;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string soundGroupName;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public vectorDirection directionToAccumalateMovementIn;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 lastVector;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float accumulatedRotation;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float accumulatedRotationTime;

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0x642680", Offset = "0x642680", VA = "0x642680")]
	private Vector3 GetTransformDirectionVector()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0x6426E8", Offset = "0x6426E8", VA = "0x6426E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0x642864", Offset = "0x642864", VA = "0x642864")]
	private void ResetAccumulatedRotation()
	{
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0x64286C", Offset = "0x64286C", VA = "0x64286C")]
	public MovementSound()
	{
	}
}
[Token(Token = "0x20001F7")]
public class ObjectInstance : MonoBehaviour
{
	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject objectToInstantiate;

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0x643F94", Offset = "0x643F94", VA = "0x643F94")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0x644288", Offset = "0x644288", VA = "0x644288")]
	public ObjectInstance()
	{
	}
}
[Token(Token = "0x20001F8")]
public class ObjectPool : MonoBehaviour
{
	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ObjectPool instance;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x4ACDD0", Offset = "0x4ACDD0")]
	public GameObject[] presetObjectPrefabs;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, List<GameObject>> pooledObjects;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, GameObject> clonablePrefab;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int[] amountToBuffer;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int defaultBufferAmount;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected GameObject containerObject;

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0x644290", Offset = "0x644290", VA = "0x644290")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0x637A54", Offset = "0x637A54", VA = "0x637A54")]
	public GameObject GetObjectForType(string objectName, bool onlyPooled)
	{
		return null;
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0x639708", Offset = "0x639708", VA = "0x639708")]
	public void PoolObject(GameObject obj)
	{
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0x644498", Offset = "0x644498", VA = "0x644498")]
	public void AddNewObjectToBePooled(GameObject obj, [Optional] int? amountToBuffer)
	{
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0x6373D8", Offset = "0x6373D8", VA = "0x6373D8")]
	public void AddNewObjectToBePooled(GameObject obj, string nameInPool, [Optional] int? amountToBuffer)
	{
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0x6444EC", Offset = "0x6444EC", VA = "0x6444EC")]
	public bool PooledObjectExists(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0x64455C", Offset = "0x64455C", VA = "0x64455C")]
	public string ObjectPoolContainerName()
	{
		return null;
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0x64458C", Offset = "0x64458C", VA = "0x64458C")]
	public ObjectPool()
	{
	}
}
[Token(Token = "0x20001F9")]
public class ParticlePool : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000445")]
	public class ParticleData
	{
		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParticleSystem particleSystemPrefab;

		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int numberOfSystemsToStore;

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0x708914", Offset = "0x708914", VA = "0x708914")]
		public ParticleData()
		{
		}
	}

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleData[] particleData;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, int> indexes;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, ParticleData> particleDataDict;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<string, List<ParticleSystem>> particles;

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0x708088", Offset = "0x708088", VA = "0x708088")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0x70853C", Offset = "0x70853C", VA = "0x70853C")]
	public void showParticleSystemAt(string particleSystemName, Vector3 position)
	{
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0x708868", Offset = "0x708868", VA = "0x708868")]
	public int NumberOfParticleSystems()
	{
		return default(int);
	}

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0x708894", Offset = "0x708894", VA = "0x708894")]
	public GameObject GetParticleGameObject(int index)
	{
		return null;
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0x70890C", Offset = "0x70890C", VA = "0x70890C")]
	public ParticlePool()
	{
	}
}
[Token(Token = "0x20001FA")]
public class PoolAfterDelay : MonoBehaviour
{
	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public float delayBeforeReturnToPool;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CountdownTime delayTimer;

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0x669400", Offset = "0x669400", VA = "0x669400")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0x669470", Offset = "0x669470", VA = "0x669470")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0x669550", Offset = "0x669550", VA = "0x669550")]
	public PoolAfterDelay()
	{
	}
}
[Token(Token = "0x20001FB")]
public class BuyPackButton : SelectableItem
{
	[Token(Token = "0x6000E58")]
	[Address(RVA = "0x6CAD3C", Offset = "0x6CAD3C", VA = "0x6CAD3C", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0x6CAD9C", Offset = "0x6CAD9C", VA = "0x6CAD9C", Slot = "6")]
	public override void Select()
	{
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0x6CAD64", Offset = "0x6CAD64", VA = "0x6CAD64")]
	private void Hide()
	{
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0x6CADA0", Offset = "0x6CADA0", VA = "0x6CADA0")]
	private void OnInventoryChanged(InventoryCatalogue.ItemID itemID)
	{
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0x6CADA4", Offset = "0x6CADA4", VA = "0x6CADA4", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0x6CAE78", Offset = "0x6CAE78", VA = "0x6CAE78")]
	public BuyPackButton()
	{
	}
}
[Token(Token = "0x20001FC")]
public class PackPurchaseBoardDisplay : SingleInstanceBehavior<PackPurchaseBoardDisplay>
{
	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UIBoard uniGameLevelPackUI;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UIBoard bundleGameLevelPackUI;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UIBoard networkIssuesUI;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Action onCancel;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private InventoryCatalogue.ItemID unigamePackID;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private BaseCursor baseCursor;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Text priceTagUni;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Text priceTagBunle;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool IsPurchaserInitialzied;

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0x646964", Offset = "0x646964", VA = "0x646964", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0x646AEC", Offset = "0x646AEC", VA = "0x646AEC")]
	private bool isBackButtonEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0x646B0C", Offset = "0x646B0C", VA = "0x646B0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0x646D84", Offset = "0x646D84", VA = "0x646D84")]
	private void UpdatedStatus()
	{
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0x646E94", Offset = "0x646E94", VA = "0x646E94")]
	private void CheckPurchaseInitialization()
	{
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0x646F28", Offset = "0x646F28", VA = "0x646F28")]
	public void PackBoardsShow()
	{
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0x646F90", Offset = "0x646F90", VA = "0x646F90")]
	public void PackBoardsHide()
	{
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0x6472E4", Offset = "0x6472E4", VA = "0x6472E4")]
	public void PackPurchase(InventoryCatalogue.ItemID newUnigamePackID, Action newOnCancel)
	{
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0x6475F4", Offset = "0x6475F4", VA = "0x6475F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0x6478C4", Offset = "0x6478C4", VA = "0x6478C4")]
	public void OnPurchasedItem(InventoryCatalogue.ItemID itemID)
	{
	}

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0x647784", Offset = "0x647784", VA = "0x647784")]
	private void OnPackPurchase(InventoryCatalogue.ItemID gamePackToBuy)
	{
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0x64790C", Offset = "0x64790C", VA = "0x64790C")]
	public bool IsPurchaseBoardEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0x647914", Offset = "0x647914", VA = "0x647914")]
	private InputManager.CallbackResult OnAppButtonPressed()
	{
		return default(InputManager.CallbackResult);
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0x647958", Offset = "0x647958", VA = "0x647958", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0x647BE4", Offset = "0x647BE4", VA = "0x647BE4")]
	public PackPurchaseBoardDisplay()
	{
	}
}
[Token(Token = "0x20001FD")]
public class PackPurchasing : MonoBehaviour
{
	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BuyPackButton buyPackButton;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InventoryCatalogue.ItemID unigamepackID;

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0x647C54", Offset = "0x647C54", VA = "0x647C54")]
	public PackPurchasing()
	{
	}
}
[Token(Token = "0x20001FE")]
public class PassAndPlay : SingletonBehavior<PassAndPlay>
{
	[Token(Token = "0x2000446")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9014", Offset = "0x4A9014")]
	private sealed class <SceneLoadedCoroutine>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string sceneName;

		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PassAndPlay <>4__this;

		[Token(Token = "0x170001E8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D33")]
			[Address(RVA = "0x709A80", Offset = "0x709A80", VA = "0x709A80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D35")]
			[Address(RVA = "0x709AF0", Offset = "0x709AF0", VA = "0x709AF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0x708BC8", Offset = "0x708BC8", VA = "0x708BC8")]
		[DebuggerHidden]
		public <SceneLoadedCoroutine>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0x7091A0", Offset = "0x7091A0", VA = "0x7091A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0x7091A4", Offset = "0x7091A4", VA = "0x7091A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0x709A88", Offset = "0x709A88", VA = "0x709A88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool passAndPlayModeActive;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private FinalScore[] playerScores;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int currentPlayerIndex;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string currentGameSceneName;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4ACE18", Offset = "0x4ACE18")]
	private object <CurrentGameLevel>k__BackingField;

	[Token(Token = "0x170000A6")]
	public bool PassAndPlayModeActive
	{
		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x708A0C", Offset = "0x708A0C", VA = "0x708A0C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A7")]
	public object CurrentGameLevel
	{
		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x708A14", Offset = "0x708A14", VA = "0x708A14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B37CC", Offset = "0x4B37CC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x708A1C", Offset = "0x708A1C", VA = "0x708A1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B37DC", Offset = "0x4B37DC")]
		set
		{
		}
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0x708A24", Offset = "0x708A24", VA = "0x708A24", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0x708B04", Offset = "0x708B04", VA = "0x708B04")]
	private void OnSceneLoaded(string sceneName)
	{
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0x708B30", Offset = "0x708B30", VA = "0x708B30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B37EC", Offset = "0x4B37EC")]
	private IEnumerator SceneLoadedCoroutine(string sceneName)
	{
		return null;
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0x708BF4", Offset = "0x708BF4", VA = "0x708BF4")]
	public void CancelPassAndPlay()
	{
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0x708C6C", Offset = "0x708C6C", VA = "0x708C6C")]
	private bool AllPlayersHasPlayed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0x708CFC", Offset = "0x708CFC", VA = "0x708CFC")]
	public void StartPassAndPlayMode(int numberOfPlayers)
	{
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0x708E2C", Offset = "0x708E2C", VA = "0x708E2C")]
	public int GetCurrentPlayerNumber()
	{
		return default(int);
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0x708E38", Offset = "0x708E38", VA = "0x708E38")]
	public int GetAmountOfPlayers()
	{
		return default(int);
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0x708E50", Offset = "0x708E50", VA = "0x708E50")]
	public void AwaitPlayerReady(Action onDone)
	{
	}

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0x708F7C", Offset = "0x708F7C", VA = "0x708F7C")]
	public void SavePlayerScore(FinalScore currentPlayerScore)
	{
	}

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0x709008", Offset = "0x709008", VA = "0x709008")]
	public void RestartGameForNextPlayer()
	{
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0x709074", Offset = "0x709074", VA = "0x709074", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0x709150", Offset = "0x709150", VA = "0x709150")]
	public PassAndPlay()
	{
	}
}
[Token(Token = "0x20001FF")]
public class CoroutineQueue : MonoBehaviour
{
	[Token(Token = "0x2000447")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9024", Offset = "0x4A9024")]
	private sealed class <CoroutineWrapper>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoroutineQueue <>4__this;

		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IEnumerator requestedCoroutine;

		[Token(Token = "0x170001EA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D39")]
			[Address(RVA = "0x6D9574", Offset = "0x6D9574", VA = "0x6D9574", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D3B")]
			[Address(RVA = "0x6D95E4", Offset = "0x6D95E4", VA = "0x6D95E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0x6D9430", Offset = "0x6D9430", VA = "0x6D9430")]
		[DebuggerHidden]
		public <CoroutineWrapper>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0x6D94D0", Offset = "0x6D94D0", VA = "0x6D94D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0x6D94D4", Offset = "0x6D94D4", VA = "0x6D94D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0x6D957C", Offset = "0x6D957C", VA = "0x6D957C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C36")]
	private const int DEFAULT_CAPACITY = 10;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Queue<IEnumerator> queue;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IEnumerator currentCoroutine;

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0x6D926C", Offset = "0x6D926C", VA = "0x6D926C")]
	public void AddCoroutine(IEnumerator newCoroutine)
	{
	}

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0x6D92DC", Offset = "0x6D92DC", VA = "0x6D92DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0x6D9398", Offset = "0x6D9398", VA = "0x6D9398")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B3850", Offset = "0x4B3850")]
	private IEnumerator CoroutineWrapper(IEnumerator requestedCoroutine)
	{
		return null;
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0x6D945C", Offset = "0x6D945C", VA = "0x6D945C")]
	public CoroutineQueue()
	{
	}
}
[Token(Token = "0x2000200")]
public class PennyController : SingletonBehavior<PennyController>
{
	[Token(Token = "0x2000448")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9034", Offset = "0x4A9034")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool waiting;

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0x70D494", Offset = "0x70D494", VA = "0x70D494")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0x70D49C", Offset = "0x70D49C", VA = "0x70D49C")]
		internal void <TrailAlongPath>b__0()
		{
		}
	}

	[Token(Token = "0x2000449")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9044", Offset = "0x4A9044")]
	private sealed class <TrailAlongPath>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PennyController <>4__this;

		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string pathID;

		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float speedFactor;

		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private <>c__DisplayClass11_0 <>8__1;

		[Token(Token = "0x170001EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D41")]
			[Address(RVA = "0x657EB4", Offset = "0x657EB4", VA = "0x657EB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D43")]
			[Address(RVA = "0x657F24", Offset = "0x657F24", VA = "0x657F24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0x657A34", Offset = "0x657A34", VA = "0x657A34")]
		[DebuggerHidden]
		public <TrailAlongPath>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0x657A60", Offset = "0x657A60", VA = "0x657A60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0x657A64", Offset = "0x657A64", VA = "0x657A64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0x657EBC", Offset = "0x657EBC", VA = "0x657EBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200044A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9054", Offset = "0x4A9054")]
	private sealed class <AppearAt>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PennyController <>4__this;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform t;

		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject <appearPoof>5__2;

		[Token(Token = "0x170001EE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D47")]
			[Address(RVA = "0x70D824", Offset = "0x70D824", VA = "0x70D824", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D49")]
			[Address(RVA = "0x70D894", Offset = "0x70D894", VA = "0x70D894", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0x70B9C8", Offset = "0x70B9C8", VA = "0x70B9C8")]
		[DebuggerHidden]
		public <AppearAt>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0x70D4C4", Offset = "0x70D4C4", VA = "0x70D4C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0x70D4C8", Offset = "0x70D4C8", VA = "0x70D4C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0x70D82C", Offset = "0x70D82C", VA = "0x70D82C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200044B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9064", Offset = "0x4A9064")]
	private sealed class <AppearAtRandom>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PennyController <>4__this;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string randomRoot;

		[Token(Token = "0x170001F0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D4D")]
			[Address(RVA = "0x70DAEC", Offset = "0x70DAEC", VA = "0x70DAEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D4F")]
			[Address(RVA = "0x70DB5C", Offset = "0x70DB5C", VA = "0x70DB5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0x70BA8C", Offset = "0x70BA8C", VA = "0x70BA8C")]
		[DebuggerHidden]
		public <AppearAtRandom>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0x70D9DC", Offset = "0x70D9DC", VA = "0x70D9DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0x70D9E0", Offset = "0x70D9E0", VA = "0x70D9E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0x70DAF4", Offset = "0x70DAF4", VA = "0x70DAF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200044C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9074", Offset = "0x4A9074")]
	private sealed class <AppearAt>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PennyController <>4__this;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string transformID;

		[Token(Token = "0x170001F2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D53")]
			[Address(RVA = "0x70D964", Offset = "0x70D964", VA = "0x70D964", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D55")]
			[Address(RVA = "0x70D9D4", Offset = "0x70D9D4", VA = "0x70D9D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0x70BB50", Offset = "0x70BB50", VA = "0x70BB50")]
		[DebuggerHidden]
		public <AppearAt>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0x70D89C", Offset = "0x70D89C", VA = "0x70D89C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0x70D8A0", Offset = "0x70D8A0", VA = "0x70D8A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0x70D96C", Offset = "0x70D96C", VA = "0x70D96C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200044D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9084", Offset = "0x4A9084")]
	private sealed class <Idle>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PennyController <>4__this;

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x170001F4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D59")]
			[Address(RVA = "0x654040", Offset = "0x654040", VA = "0x654040", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D5B")]
			[Address(RVA = "0x6540B0", Offset = "0x6540B0", VA = "0x6540B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0x653E14", Offset = "0x653E14", VA = "0x653E14")]
		[DebuggerHidden]
		public <Idle>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0x653E40", Offset = "0x653E40", VA = "0x653E40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0x653E44", Offset = "0x653E44", VA = "0x653E44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0x654048", Offset = "0x654048", VA = "0x654048", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200044E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9094", Offset = "0x4A9094")]
	private sealed class <Disappear>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PennyController <>4__this;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <disappearPoof>5__2;

		[Token(Token = "0x170001F6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D5F")]
			[Address(RVA = "0x6534E4", Offset = "0x6534E4", VA = "0x6534E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D61")]
			[Address(RVA = "0x653554", Offset = "0x653554", VA = "0x653554", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0x653208", Offset = "0x653208", VA = "0x653208")]
		[DebuggerHidden]
		public <Disappear>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0x653234", Offset = "0x653234", VA = "0x653234", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0x653238", Offset = "0x653238", VA = "0x653238", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0x6534EC", Offset = "0x6534EC", VA = "0x6534EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200044F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A90A4", Offset = "0x4A90A4")]
	private sealed class <>c__DisplayClass17_0
	{
		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool waiting;

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0x70D4A4", Offset = "0x70D4A4", VA = "0x70D4A4")]
		public <>c__DisplayClass17_0()
		{
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0x70D4AC", Offset = "0x70D4AC", VA = "0x70D4AC")]
		internal void <SayLine>b__0()
		{
		}
	}

	[Token(Token = "0x2000450")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A90B4", Offset = "0x4A90B4")]
	private sealed class <SayLine>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PennyController <>4__this;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string lineID;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private <>c__DisplayClass17_0 <>8__1;

		[Token(Token = "0x170001F8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D67")]
			[Address(RVA = "0x656D30", Offset = "0x656D30", VA = "0x656D30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D69")]
			[Address(RVA = "0x656DA0", Offset = "0x656DA0", VA = "0x656DA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0x656BC0", Offset = "0x656BC0", VA = "0x656BC0")]
		[DebuggerHidden]
		public <SayLine>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0x656BEC", Offset = "0x656BEC", VA = "0x656BEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0x656BF0", Offset = "0x656BF0", VA = "0x656BF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0x656D38", Offset = "0x656D38", VA = "0x656D38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000451")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A90C4", Offset = "0x4A90C4")]
	private sealed class <>c__DisplayClass18_0
	{
		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool waiting;

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0x70D4B4", Offset = "0x70D4B4", VA = "0x70D4B4")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0x70D4BC", Offset = "0x70D4BC", VA = "0x70D4BC")]
		internal void <SayGroup>b__0()
		{
		}
	}

	[Token(Token = "0x2000452")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A90D4", Offset = "0x4A90D4")]
	private sealed class <SayGroup>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PennyController <>4__this;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string groupID;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private <>c__DisplayClass18_0 <>8__1;

		[Token(Token = "0x170001FA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D6F")]
			[Address(RVA = "0x656B48", Offset = "0x656B48", VA = "0x656B48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D71")]
			[Address(RVA = "0x656BB8", Offset = "0x656BB8", VA = "0x656BB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0x6569D8", Offset = "0x6569D8", VA = "0x6569D8")]
		[DebuggerHidden]
		public <SayGroup>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0x656A04", Offset = "0x656A04", VA = "0x656A04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0x656A08", Offset = "0x656A08", VA = "0x656A08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0x656B50", Offset = "0x656B50", VA = "0x656B50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000453")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A90E4", Offset = "0x4A90E4")]
	private sealed class <TestRoutine>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PennyController <>4__this;

		[Token(Token = "0x170001FC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D75")]
			[Address(RVA = "0x657394", Offset = "0x657394", VA = "0x657394", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D77")]
			[Address(RVA = "0x657404", Offset = "0x657404", VA = "0x657404", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0x656DA8", Offset = "0x656DA8", VA = "0x656DA8")]
		[DebuggerHidden]
		public <TestRoutine>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0x656DD4", Offset = "0x656DD4", VA = "0x656DD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0x656DD8", Offset = "0x656DD8", VA = "0x656DD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0x65739C", Offset = "0x65739C", VA = "0x65739C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000454")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A90F4", Offset = "0x4A90F4")]
	private sealed class <HammerLockedCoroutine>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PennyController <>4__this;

		[Token(Token = "0x170001FE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D7B")]
			[Address(RVA = "0x653B24", Offset = "0x653B24", VA = "0x653B24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D7D")]
			[Address(RVA = "0x653B94", Offset = "0x653B94", VA = "0x653B94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0x6537EC", Offset = "0x6537EC", VA = "0x6537EC")]
		[DebuggerHidden]
		public <HammerLockedCoroutine>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0x653818", Offset = "0x653818", VA = "0x653818", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0x65381C", Offset = "0x65381C", VA = "0x65381C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0x653B2C", Offset = "0x653B2C", VA = "0x653B2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000455")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9104", Offset = "0x4A9104")]
	private sealed class <HammerUnlockedCoroutine>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PennyController <>4__this;

		[Token(Token = "0x17000200")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D81")]
			[Address(RVA = "0x653D9C", Offset = "0x653D9C", VA = "0x653D9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000201")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D83")]
			[Address(RVA = "0x653E0C", Offset = "0x653E0C", VA = "0x653E0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0x653B9C", Offset = "0x653B9C", VA = "0x653B9C")]
		[DebuggerHidden]
		public <HammerUnlockedCoroutine>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0x653BC8", Offset = "0x653BC8", VA = "0x653BC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0x653BCC", Offset = "0x653BCC", VA = "0x653BCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0x653DA4", Offset = "0x653DA4", VA = "0x653DA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000456")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9114", Offset = "0x4A9114")]
	private sealed class <ParkIntroductionCoroutine>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PennyController <>4__this;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action doneCallback;

		[Token(Token = "0x17000202")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D87")]
			[Address(RVA = "0x654DB4", Offset = "0x654DB4", VA = "0x654DB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000203")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D89")]
			[Address(RVA = "0x654E24", Offset = "0x654E24", VA = "0x654E24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0x654AB4", Offset = "0x654AB4", VA = "0x654AB4")]
		[DebuggerHidden]
		public <ParkIntroductionCoroutine>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0x654AE0", Offset = "0x654AE0", VA = "0x654AE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0x654AE4", Offset = "0x654AE4", VA = "0x654AE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0x654DBC", Offset = "0x654DBC", VA = "0x654DBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000457")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9124", Offset = "0x4A9124")]
	private sealed class <AvatarIntroductionBeginCoroutine>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PennyController <>4__this;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action doneCallback;

		[Token(Token = "0x17000204")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D8D")]
			[Address(RVA = "0x70DD80", Offset = "0x70DD80", VA = "0x70DD80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000205")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D8F")]
			[Address(RVA = "0x70DDF0", Offset = "0x70DDF0", VA = "0x70DDF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0x70D3C0", Offset = "0x70D3C0", VA = "0x70D3C0")]
		[DebuggerHidden]
		public <AvatarIntroductionBeginCoroutine>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0x70DB64", Offset = "0x70DB64", VA = "0x70DB64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0x70DB68", Offset = "0x70DB68", VA = "0x70DB68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0x70DD88", Offset = "0x70DD88", VA = "0x70DD88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000458")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9134", Offset = "0x4A9134")]
	private sealed class <AvatarIntroductionEndCoroutine>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PennyController <>4__this;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action doneCallback;

		[Token(Token = "0x17000206")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D93")]
			[Address(RVA = "0x70DFA4", Offset = "0x70DFA4", VA = "0x70DFA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000207")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D95")]
			[Address(RVA = "0x70E014", Offset = "0x70E014", VA = "0x70E014", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0x70D3EC", Offset = "0x70D3EC", VA = "0x70D3EC")]
		[DebuggerHidden]
		public <AvatarIntroductionEndCoroutine>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0x70DDF8", Offset = "0x70DDF8", VA = "0x70DDF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0x70DDFC", Offset = "0x70DDFC", VA = "0x70DDFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D94")]
		[Address(RVA = "0x70DFAC", Offset = "0x70DFAC", VA = "0x70DFAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000459")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9144", Offset = "0x4A9144")]
	private sealed class <MagicMayhemUnlockStartCoroutine>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool doWelcomeBack;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PennyController <>4__this;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action doneCallback;

		[Token(Token = "0x17000208")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D99")]
			[Address(RVA = "0x654A3C", Offset = "0x654A3C", VA = "0x654A3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000209")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D9B")]
			[Address(RVA = "0x654AAC", Offset = "0x654AAC", VA = "0x654AAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0x654674", Offset = "0x654674", VA = "0x654674")]
		[DebuggerHidden]
		public <MagicMayhemUnlockStartCoroutine>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x6001D97")]
		[Address(RVA = "0x6546A0", Offset = "0x6546A0", VA = "0x6546A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0x6546A4", Offset = "0x6546A4", VA = "0x6546A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0x654A44", Offset = "0x654A44", VA = "0x654A44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200045A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9154", Offset = "0x4A9154")]
	private sealed class <MagicMayhemUnlockEndCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PennyController <>4__this;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action doneCallback;

		[Token(Token = "0x1700020A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D9F")]
			[Address(RVA = "0x6545FC", Offset = "0x6545FC", VA = "0x6545FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DA1")]
			[Address(RVA = "0x65466C", Offset = "0x65466C", VA = "0x65466C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0x6544A4", Offset = "0x6544A4", VA = "0x6544A4")]
		[DebuggerHidden]
		public <MagicMayhemUnlockEndCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0x6544D0", Offset = "0x6544D0", VA = "0x6544D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0x6544D4", Offset = "0x6544D4", VA = "0x6544D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0x654604", Offset = "0x654604", VA = "0x654604", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200045B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9164", Offset = "0x4A9164")]
	private sealed class <MagicMayhemEnterCoroutine>d__53 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool doWelcomeBack;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PennyController <>4__this;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action doneCallback;

		[Token(Token = "0x1700020C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DA5")]
			[Address(RVA = "0x65442C", Offset = "0x65442C", VA = "0x65442C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DA7")]
			[Address(RVA = "0x65449C", Offset = "0x65449C", VA = "0x65449C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0x6540B8", Offset = "0x6540B8", VA = "0x6540B8")]
		[DebuggerHidden]
		public <MagicMayhemEnterCoroutine>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0x6540E4", Offset = "0x6540E4", VA = "0x6540E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0x6540E8", Offset = "0x6540E8", VA = "0x6540E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0x654434", Offset = "0x654434", VA = "0x654434", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200045C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9174", Offset = "0x4A9174")]
	private sealed class <PsyduckExplainCoroutine>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PennyController <>4__this;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool doWelcomeBack;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action doneCallback;

		[Token(Token = "0x1700020E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DAB")]
			[Address(RVA = "0x656250", Offset = "0x656250", VA = "0x656250", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DAD")]
			[Address(RVA = "0x6562C0", Offset = "0x6562C0", VA = "0x6562C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0x655B7C", Offset = "0x655B7C", VA = "0x655B7C")]
		[DebuggerHidden]
		public <PsyduckExplainCoroutine>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0x655BA8", Offset = "0x655BA8", VA = "0x655BA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0x655BAC", Offset = "0x655BAC", VA = "0x655BAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0x656258", Offset = "0x656258", VA = "0x656258", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200045D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9184", Offset = "0x4A9184")]
	private sealed class <BackpackExplainCoroutine>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool doWelcomeBack;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PennyController <>4__this;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action doneCallback;

		[Token(Token = "0x17000210")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DB1")]
			[Address(RVA = "0x70E420", Offset = "0x70E420", VA = "0x70E420", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000211")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DB3")]
			[Address(RVA = "0x70E490", Offset = "0x70E490", VA = "0x70E490", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0x70D418", Offset = "0x70D418", VA = "0x70D418")]
		[DebuggerHidden]
		public <BackpackExplainCoroutine>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0x70E01C", Offset = "0x70E01C", VA = "0x70E01C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0x70E020", Offset = "0x70E020", VA = "0x70E020", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0x70E428", Offset = "0x70E428", VA = "0x70E428", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200045E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9194", Offset = "0x4A9194")]
	private sealed class <BasketUnlockStartCoroutine>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PennyController <>4__this;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool doWelcomeBack;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action doneCallback;

		[Token(Token = "0x17000212")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DB7")]
			[Address(RVA = "0x653190", Offset = "0x653190", VA = "0x653190", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000213")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DB9")]
			[Address(RVA = "0x653200", Offset = "0x653200", VA = "0x653200", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0x652D70", Offset = "0x652D70", VA = "0x652D70")]
		[DebuggerHidden]
		public <BasketUnlockStartCoroutine>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0x652D9C", Offset = "0x652D9C", VA = "0x652D9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0x652DA0", Offset = "0x652DA0", VA = "0x652DA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0x653198", Offset = "0x653198", VA = "0x653198", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200045F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A91A4", Offset = "0x4A91A4")]
	private sealed class <BasketUnlockEndCoroutine>d__57 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PennyController <>4__this;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action doneCallback;

		[Token(Token = "0x17000214")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DBD")]
			[Address(RVA = "0x652CF8", Offset = "0x652CF8", VA = "0x652CF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000215")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DBF")]
			[Address(RVA = "0x652D68", Offset = "0x652D68", VA = "0x652D68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0x652C48", Offset = "0x652C48", VA = "0x652C48")]
		[DebuggerHidden]
		public <BasketUnlockEndCoroutine>d__57(int <>1__state)
		{
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0x652C74", Offset = "0x652C74", VA = "0x652C74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0x652C78", Offset = "0x652C78", VA = "0x652C78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0x652D00", Offset = "0x652D00", VA = "0x652D00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000460")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A91B4", Offset = "0x4A91B4")]
	private sealed class <BasketEnterCoroutine>d__58 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool doWelcomeBack;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PennyController <>4__this;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action doneCallback;

		[Token(Token = "0x17000216")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DC3")]
			[Address(RVA = "0x652BD0", Offset = "0x652BD0", VA = "0x652BD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000217")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DC5")]
			[Address(RVA = "0x652C40", Offset = "0x652C40", VA = "0x652C40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0x652814", Offset = "0x652814", VA = "0x652814")]
		[DebuggerHidden]
		public <BasketEnterCoroutine>d__58(int <>1__state)
		{
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0x652840", Offset = "0x652840", VA = "0x652840", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0x652844", Offset = "0x652844", VA = "0x652844", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0x652BD8", Offset = "0x652BD8", VA = "0x652BD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000461")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A91C4", Offset = "0x4A91C4")]
	private sealed class <BasketEndedCoroutine>d__59 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PennyController <>4__this;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action doneCallback;

		[Token(Token = "0x17000218")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DC9")]
			[Address(RVA = "0x65279C", Offset = "0x65279C", VA = "0x65279C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000219")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DCB")]
			[Address(RVA = "0x65280C", Offset = "0x65280C", VA = "0x65280C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0x652420", Offset = "0x652420", VA = "0x652420")]
		[DebuggerHidden]
		public <BasketEndedCoroutine>d__59(int <>1__state)
		{
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0x65244C", Offset = "0x65244C", VA = "0x65244C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0x652450", Offset = "0x652450", VA = "0x652450", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0x6527A4", Offset = "0x6527A4", VA = "0x6527A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000462")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A91D4", Offset = "0x4A91D4")]
	private sealed class <GolfatchuUnlockedCoroutine>d__60 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PennyController <>4__this;

		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action doneCallback;

		[Token(Token = "0x1700021A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DCF")]
			[Address(RVA = "0x653774", Offset = "0x653774", VA = "0x653774", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DD1")]
			[Address(RVA = "0x6537E4", Offset = "0x6537E4", VA = "0x6537E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0x65355C", Offset = "0x65355C", VA = "0x65355C")]
		[DebuggerHidden]
		public <GolfatchuUnlockedCoroutine>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0x653588", Offset = "0x653588", VA = "0x653588", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0x65358C", Offset = "0x65358C", VA = "0x65358C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0x65377C", Offset = "0x65377C", VA = "0x65377C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000463")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A91E4", Offset = "0x4A91E4")]
	private sealed class <PidgeyLockedCoroutine>d__61 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PennyController <>4__this;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action doneCallback;

		[Token(Token = "0x1700021C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DD5")]
			[Address(RVA = "0x655874", Offset = "0x655874", VA = "0x655874", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DD7")]
			[Address(RVA = "0x6558E4", Offset = "0x6558E4", VA = "0x6558E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0x65552C", Offset = "0x65552C", VA = "0x65552C")]
		[DebuggerHidden]
		public <PidgeyLockedCoroutine>d__61(int <>1__state)
		{
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0x655558", Offset = "0x655558", VA = "0x655558", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0x65555C", Offset = "0x65555C", VA = "0x65555C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0x65587C", Offset = "0x65587C", VA = "0x65587C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000464")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A91F4", Offset = "0x4A91F4")]
	private sealed class <PidgeyUnlockedCoroutine>d__62 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PennyController <>4__this;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action doneCallback;

		[Token(Token = "0x1700021E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DDB")]
			[Address(RVA = "0x655B04", Offset = "0x655B04", VA = "0x655B04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DDD")]
			[Address(RVA = "0x655B74", Offset = "0x655B74", VA = "0x655B74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0x6558EC", Offset = "0x6558EC", VA = "0x6558EC")]
		[DebuggerHidden]
		public <PidgeyUnlockedCoroutine>d__62(int <>1__state)
		{
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0x655918", Offset = "0x655918", VA = "0x655918", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0x65591C", Offset = "0x65591C", VA = "0x65591C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0x655B0C", Offset = "0x655B0C", VA = "0x655B0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000465")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9204", Offset = "0x4A9204")]
	private sealed class <TinderTownLockedCoroutine>d__63 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PennyController <>4__this;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action doneCallback;

		[Token(Token = "0x17000220")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DE1")]
			[Address(RVA = "0x657728", Offset = "0x657728", VA = "0x657728", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000221")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DE3")]
			[Address(RVA = "0x657798", Offset = "0x657798", VA = "0x657798", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0x65740C", Offset = "0x65740C", VA = "0x65740C")]
		[DebuggerHidden]
		public <TinderTownLockedCoroutine>d__63(int <>1__state)
		{
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0x657438", Offset = "0x657438", VA = "0x657438", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0x65743C", Offset = "0x65743C", VA = "0x65743C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0x657730", Offset = "0x657730", VA = "0x657730", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000466")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9214", Offset = "0x4A9214")]
	private sealed class <TinderTownUnlockedCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PennyController <>4__this;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action doneCallback;

		[Token(Token = "0x17000222")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DE7")]
			[Address(RVA = "0x6579BC", Offset = "0x6579BC", VA = "0x6579BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000223")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DE9")]
			[Address(RVA = "0x657A2C", Offset = "0x657A2C", VA = "0x657A2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0x6577A0", Offset = "0x6577A0", VA = "0x6577A0")]
		[DebuggerHidden]
		public <TinderTownUnlockedCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0x6577CC", Offset = "0x6577CC", VA = "0x6577CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0x6577D0", Offset = "0x6577D0", VA = "0x6577D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0x6579C4", Offset = "0x6579C4", VA = "0x6579C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000467")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9224", Offset = "0x4A9224")]
	private sealed class <PassAndPlayLockedCoroutine>d__65 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PennyController <>4__this;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action doneCallback;

		[Token(Token = "0x17000224")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DED")]
			[Address(RVA = "0x6551EC", Offset = "0x6551EC", VA = "0x6551EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000225")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DEF")]
			[Address(RVA = "0x65525C", Offset = "0x65525C", VA = "0x65525C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0x654E2C", Offset = "0x654E2C", VA = "0x654E2C")]
		[DebuggerHidden]
		public <PassAndPlayLockedCoroutine>d__65(int <>1__state)
		{
		}

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0x654E58", Offset = "0x654E58", VA = "0x654E58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0x654E5C", Offset = "0x654E5C", VA = "0x654E5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0x6551F4", Offset = "0x6551F4", VA = "0x6551F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000468")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9234", Offset = "0x4A9234")]
	private sealed class <PassAndPlayUnlockedCoroutine>d__66 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PennyController <>4__this;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action doneCallback;

		[Token(Token = "0x17000226")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DF3")]
			[Address(RVA = "0x6554B4", Offset = "0x6554B4", VA = "0x6554B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000227")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DF5")]
			[Address(RVA = "0x655524", Offset = "0x655524", VA = "0x655524", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0x655264", Offset = "0x655264", VA = "0x655264")]
		[DebuggerHidden]
		public <PassAndPlayUnlockedCoroutine>d__66(int <>1__state)
		{
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0x655290", Offset = "0x655290", VA = "0x655290", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0x655294", Offset = "0x655294", VA = "0x655294", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0x6554BC", Offset = "0x6554BC", VA = "0x6554BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000469")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9244", Offset = "0x4A9244")]
	private sealed class <WelcomeBackCoroutine>d__67 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PennyController <>4__this;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action doneCallback;

		[Token(Token = "0x17000228")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DF9")]
			[Address(RVA = "0x658110", Offset = "0x658110", VA = "0x658110", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000229")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DFB")]
			[Address(RVA = "0x658180", Offset = "0x658180", VA = "0x658180", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0x657F2C", Offset = "0x657F2C", VA = "0x657F2C")]
		[DebuggerHidden]
		public <WelcomeBackCoroutine>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0x657F58", Offset = "0x657F58", VA = "0x657F58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0x657F5C", Offset = "0x657F5C", VA = "0x657F5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0x658118", Offset = "0x658118", VA = "0x658118", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200046A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9254", Offset = "0x4A9254")]
	private sealed class <RandomHintCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PennyController <>4__this;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action doneCallback;

		[Token(Token = "0x1700022A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DFF")]
			[Address(RVA = "0x6564AC", Offset = "0x6564AC", VA = "0x6564AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E01")]
			[Address(RVA = "0x65651C", Offset = "0x65651C", VA = "0x65651C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0x6562C8", Offset = "0x6562C8", VA = "0x6562C8")]
		[DebuggerHidden]
		public <RandomHintCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0x6562F4", Offset = "0x6562F4", VA = "0x6562F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0x6562F8", Offset = "0x6562F8", VA = "0x6562F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0x6564B4", Offset = "0x6564B4", VA = "0x6564B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200046B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9264", Offset = "0x4A9264")]
	private sealed class <RandomIdleCoroutine>d__69 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PennyController <>4__this;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action doneCallback;

		[Token(Token = "0x1700022C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E05")]
			[Address(RVA = "0x656708", Offset = "0x656708", VA = "0x656708", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E07")]
			[Address(RVA = "0x656778", Offset = "0x656778", VA = "0x656778", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0x656524", Offset = "0x656524", VA = "0x656524")]
		[DebuggerHidden]
		public <RandomIdleCoroutine>d__69(int <>1__state)
		{
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0x656550", Offset = "0x656550", VA = "0x656550", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0x656554", Offset = "0x656554", VA = "0x656554", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0x656710", Offset = "0x656710", VA = "0x656710", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200046C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9274", Offset = "0x4A9274")]
	private sealed class <ReturnFromMiniGameCoroutine>d__70 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PennyController <>4__this;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string groupID;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action doneCallback;

		[Token(Token = "0x1700022E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E0B")]
			[Address(RVA = "0x656960", Offset = "0x656960", VA = "0x656960", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E0D")]
			[Address(RVA = "0x6569D0", Offset = "0x6569D0", VA = "0x6569D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E08")]
		[Address(RVA = "0x656780", Offset = "0x656780", VA = "0x656780")]
		[DebuggerHidden]
		public <ReturnFromMiniGameCoroutine>d__70(int <>1__state)
		{
		}

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0x6567AC", Offset = "0x6567AC", VA = "0x6567AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0x6567B0", Offset = "0x6567B0", VA = "0x6567B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0x656968", Offset = "0x656968", VA = "0x656968", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4ACE28", Offset = "0x4ACE28")]
	[SerializeField]
	private GameObject pennyPrefab;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PennyTrail trailPrefab;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, Transform> transformsLookup;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ObjectPool objectPool;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject pennyInstance;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PennyTrail trailInstance;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PlayableBodyAnimator pennyBodyAnimator;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LinePlayback pennyLinePlayback;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CoroutineQueue coroutineQueue;

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0x70B574", Offset = "0x70B574", VA = "0x70B574", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0x70B6D0", Offset = "0x70B6D0", VA = "0x70B6D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0x70B87C", Offset = "0x70B87C", VA = "0x70B87C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B38B4", Offset = "0x4B38B4")]
	private IEnumerator TrailAlongPath(string pathID, float speedFactor = 1f)
	{
		return null;
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0x70B930", Offset = "0x70B930", VA = "0x70B930")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B3918", Offset = "0x4B3918")]
	private IEnumerator AppearAt(Transform t)
	{
		return null;
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0x70B9F4", Offset = "0x70B9F4", VA = "0x70B9F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B397C", Offset = "0x4B397C")]
	private IEnumerator AppearAtRandom(string randomRoot)
	{
		return null;
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0x70BAB8", Offset = "0x70BAB8", VA = "0x70BAB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B39E0", Offset = "0x4B39E0")]
	private IEnumerator AppearAt(string transformID)
	{
		return null;
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0x70BB7C", Offset = "0x70BB7C", VA = "0x70BB7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B3A44", Offset = "0x4B3A44")]
	private IEnumerator Idle(float duration)
	{
		return null;
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0x70BC14", Offset = "0x70BC14", VA = "0x70BC14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B3AA8", Offset = "0x4B3AA8")]
	private IEnumerator Disappear()
	{
		return null;
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0x70BC88", Offset = "0x70BC88", VA = "0x70BC88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B3B0C", Offset = "0x4B3B0C")]
	private IEnumerator SayLine(string lineID)
	{
		return null;
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0x70BD20", Offset = "0x70BD20", VA = "0x70BD20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B3B70", Offset = "0x4B3B70")]
	private IEnumerator SayGroup(string groupID)
	{
		return null;
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0x70BDB8", Offset = "0x70BDB8", VA = "0x70BDB8")]
	public void Test()
	{
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0x70BE68", Offset = "0x70BE68", VA = "0x70BE68")]
	public void ParkIntroduction(Action doneCallback)
	{
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0x70BF3C", Offset = "0x70BF3C", VA = "0x70BF3C")]
	public void AvatarIntroductionBegin(Action doneCallback)
	{
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0x70C010", Offset = "0x70C010", VA = "0x70C010")]
	public void AvatarIntroductionEnd(Action doneCallback)
	{
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0x70C0E4", Offset = "0x70C0E4", VA = "0x70C0E4")]
	public void MagicMayhemUnlockStart(bool doWelcomeBack, Action doneCallback)
	{
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0x70C1DC", Offset = "0x70C1DC", VA = "0x70C1DC")]
	public void AttractionUnlockEnd(Action doneCallback)
	{
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0x70C2B0", Offset = "0x70C2B0", VA = "0x70C2B0")]
	public void MagicMayhemEnter(bool doWelcomeBack, Action doneCallback)
	{
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0x70C3A8", Offset = "0x70C3A8", VA = "0x70C3A8")]
	public void PsyduckExplain(bool doWelcomeBack, Action doneCallback)
	{
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0x70C4A0", Offset = "0x70C4A0", VA = "0x70C4A0")]
	public void BackpackExplain(bool doWelcomeBack, Action doneCallback)
	{
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0x70C598", Offset = "0x70C598", VA = "0x70C598")]
	public void BasketUnlockStart(bool doWelcomeBack, Action doneCallback)
	{
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0x70C690", Offset = "0x70C690", VA = "0x70C690")]
	public void BasketUnlockEnd(Action doneCallback)
	{
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0x70C764", Offset = "0x70C764", VA = "0x70C764")]
	public void BasketEnter(bool doWelcomeBack, Action doneCallback)
	{
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0x70C85C", Offset = "0x70C85C", VA = "0x70C85C")]
	public void BasketEnded(Action doneCallback)
	{
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0x70C930", Offset = "0x70C930", VA = "0x70C930")]
	public void GolfatchuUnlocked([Optional] Action doneCallback)
	{
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0x70CA04", Offset = "0x70CA04", VA = "0x70CA04")]
	public void PidgeyLocked([Optional] Action doneCallback)
	{
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0x70CAD8", Offset = "0x70CAD8", VA = "0x70CAD8")]
	public void PidgeyUnlocked([Optional] Action doneCallback)
	{
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0x70CBAC", Offset = "0x70CBAC", VA = "0x70CBAC")]
	public void TinderTownLocked([Optional] Action doneCallback)
	{
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0x70CC80", Offset = "0x70CC80", VA = "0x70CC80")]
	public void TinderTownUnlocked([Optional] Action doneCallback)
	{
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0x70CD54", Offset = "0x70CD54", VA = "0x70CD54")]
	public void PassAndPlayLocked([Optional] Action doneCallback)
	{
	}

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0x70CE28", Offset = "0x70CE28", VA = "0x70CE28")]
	public void PassAndPlayUnlocked([Optional] Action doneCallback)
	{
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0x70CEFC", Offset = "0x70CEFC", VA = "0x70CEFC")]
	public void WelcomeBack([Optional] Action doneCallback)
	{
	}

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0x70CFD0", Offset = "0x70CFD0", VA = "0x70CFD0")]
	public void RandomHint([Optional] Action doneCallback)
	{
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0x70D0A4", Offset = "0x70D0A4", VA = "0x70D0A4")]
	public void RandomIdle([Optional] Action doneCallback)
	{
	}

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0x70D178", Offset = "0x70D178", VA = "0x70D178")]
	public void ReturnFromMiniGame(string groupID, [Optional] Action doneCallback)
	{
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0x70D260", Offset = "0x70D260", VA = "0x70D260")]
	public void HammerLocked()
	{
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0x70D310", Offset = "0x70D310", VA = "0x70D310")]
	public void HammerUnlocked()
	{
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0x70BDF4", Offset = "0x70BDF4", VA = "0x70BDF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B3BD4", Offset = "0x4B3BD4")]
	private IEnumerator TestRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0x70D29C", Offset = "0x70D29C", VA = "0x70D29C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B3C38", Offset = "0x4B3C38")]
	private IEnumerator HammerLockedCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0x70D34C", Offset = "0x70D34C", VA = "0x70D34C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B3C9C", Offset = "0x4B3C9C")]
	private IEnumerator HammerUnlockedCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0x70BEA4", Offset = "0x70BEA4", VA = "0x70BEA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B3D00", Offset = "0x4B3D00")]
	private IEnumerator ParkIntroductionCoroutine(Action doneCallback)
	{
		return null;
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0x70BF78", Offset = "0x70BF78", VA = "0x70BF78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B3D64", Offset = "0x4B3D64")]
	private IEnumerator AvatarIntroductionBeginCoroutine(Action doneCallback)
	{
		return null;
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0x70C04C", Offset = "0x70C04C", VA = "0x70C04C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B3DC8", Offset = "0x4B3DC8")]
	private IEnumerator AvatarIntroductionEndCoroutine(Action doneCallback)
	{
		return null;
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0x70C124", Offset = "0x70C124", VA = "0x70C124")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B3E2C", Offset = "0x4B3E2C")]
	private IEnumerator MagicMayhemUnlockStartCoroutine(bool doWelcomeBack, Action doneCallback)
	{
		return null;
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0x70C218", Offset = "0x70C218", VA = "0x70C218")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B3E90", Offset = "0x4B3E90")]
	private IEnumerator MagicMayhemUnlockEndCoroutine(Action doneCallback)
	{
		return null;
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0x70C2F0", Offset = "0x70C2F0", VA = "0x70C2F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B3EF4", Offset = "0x4B3EF4")]
	private IEnumerator MagicMayhemEnterCoroutine(bool doWelcomeBack, Action doneCallback)
	{
		return null;
	}

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0x70C3E8", Offset = "0x70C3E8", VA = "0x70C3E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B3F58", Offset = "0x4B3F58")]
	private IEnumerator PsyduckExplainCoroutine(bool doWelcomeBack, Action doneCallback)
	{
		return null;
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0x70C4E0", Offset = "0x70C4E0", VA = "0x70C4E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B3FBC", Offset = "0x4B3FBC")]
	private IEnumerator BackpackExplainCoroutine(bool doWelcomeBack, Action doneCallback)
	{
		return null;
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0x70C5D8", Offset = "0x70C5D8", VA = "0x70C5D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B4020", Offset = "0x4B4020")]
	private IEnumerator BasketUnlockStartCoroutine(bool doWelcomeBack, Action doneCallback)
	{
		return null;
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0x70C6CC", Offset = "0x70C6CC", VA = "0x70C6CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B4084", Offset = "0x4B4084")]
	private IEnumerator BasketUnlockEndCoroutine(Action doneCallback)
	{
		return null;
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0x70C7A4", Offset = "0x70C7A4", VA = "0x70C7A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B40E8", Offset = "0x4B40E8")]
	private IEnumerator BasketEnterCoroutine(bool doWelcomeBack, Action doneCallback)
	{
		return null;
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0x70C898", Offset = "0x70C898", VA = "0x70C898")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B414C", Offset = "0x4B414C")]
	private IEnumerator BasketEndedCoroutine(Action doneCallback)
	{
		return null;
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0x70C96C", Offset = "0x70C96C", VA = "0x70C96C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B41B0", Offset = "0x4B41B0")]
	private IEnumerator GolfatchuUnlockedCoroutine(Action doneCallback)
	{
		return null;
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0x70CA40", Offset = "0x70CA40", VA = "0x70CA40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B4214", Offset = "0x4B4214")]
	private IEnumerator PidgeyLockedCoroutine(Action doneCallback)
	{
		return null;
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0x70CB14", Offset = "0x70CB14", VA = "0x70CB14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B4278", Offset = "0x4B4278")]
	private IEnumerator PidgeyUnlockedCoroutine(Action doneCallback)
	{
		return null;
	}

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0x70CBE8", Offset = "0x70CBE8", VA = "0x70CBE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B42DC", Offset = "0x4B42DC")]
	private IEnumerator TinderTownLockedCoroutine(Action doneCallback)
	{
		return null;
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0x70CCBC", Offset = "0x70CCBC", VA = "0x70CCBC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B4340", Offset = "0x4B4340")]
	private IEnumerator TinderTownUnlockedCoroutine(Action doneCallback)
	{
		return null;
	}

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0x70CD90", Offset = "0x70CD90", VA = "0x70CD90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B43A4", Offset = "0x4B43A4")]
	private IEnumerator PassAndPlayLockedCoroutine(Action doneCallback)
	{
		return null;
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0x70CE64", Offset = "0x70CE64", VA = "0x70CE64")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B4408", Offset = "0x4B4408")]
	private IEnumerator PassAndPlayUnlockedCoroutine(Action doneCallback)
	{
		return null;
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0x70CF38", Offset = "0x70CF38", VA = "0x70CF38")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B446C", Offset = "0x4B446C")]
	private IEnumerator WelcomeBackCoroutine(Action doneCallback)
	{
		return null;
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0x70D00C", Offset = "0x70D00C", VA = "0x70D00C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B44D0", Offset = "0x4B44D0")]
	private IEnumerator RandomHintCoroutine(Action doneCallback)
	{
		return null;
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0x70D0E0", Offset = "0x70D0E0", VA = "0x70D0E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B4534", Offset = "0x4B4534")]
	private IEnumerator RandomIdleCoroutine(Action doneCallback)
	{
		return null;
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0x70D1B4", Offset = "0x70D1B4", VA = "0x70D1B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B4598", Offset = "0x4B4598")]
	private IEnumerator ReturnFromMiniGameCoroutine(string groupID, Action doneCallback)
	{
		return null;
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0x70D444", Offset = "0x70D444", VA = "0x70D444")]
	public PennyController()
	{
	}
}
[Token(Token = "0x2000201")]
public class PennyTrail : MonoBehaviour
{
	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem myParticleSystem;

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0x658188", Offset = "0x658188", VA = "0x658188")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0x657D48", Offset = "0x657D48", VA = "0x657D48")]
	public void Show()
	{
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0x657E24", Offset = "0x657E24", VA = "0x657E24")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0x6581F0", Offset = "0x6581F0", VA = "0x6581F0")]
	public PennyTrail()
	{
	}
}
[Token(Token = "0x2000202")]
public class SporadicPenny : MonoBehaviour
{
	[Token(Token = "0x200046D")]
	private enum AppearanceTrack
	{
		[Token(Token = "0x4001A1E")]
		WelcomeBack,
		[Token(Token = "0x4001A1F")]
		ReturnFromMiniGame,
		[Token(Token = "0x4001A20")]
		ItemHints,
		[Token(Token = "0x4001A21")]
		GenericIdles,
		[Token(Token = "0x4001A22")]
		Count
	}

	[Serializable]
	[Token(Token = "0x200046E")]
	private class TrackProbability
	{
		[Token(Token = "0x2000537")]
		public enum TimeUnit
		{
			[Token(Token = "0x4001D26")]
			Seconds,
			[Token(Token = "0x4001D27")]
			Minutes,
			[Token(Token = "0x4001D28")]
			Hours,
			[Token(Token = "0x4001D29")]
			Days
		}

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve probability;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int startTime;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int endTime;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TimeUnit timeUnit;

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0x6AA2C0", Offset = "0x6AA2C0", VA = "0x6AA2C0")]
		public bool Evaluate(TimeSpan timeSpan, float suppress)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0x6AA470", Offset = "0x6AA470", VA = "0x6AA470")]
		public TrackProbability()
		{
		}
	}

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float evaluateTimeoutFirst;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float evaluateTimeoutPeriodically;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TrackProbability welcomeBack;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TrackProbability returnFromMiniGame;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TrackProbability itemHint;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TrackProbability genericIdle;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float suppressDurationSeconds;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AnimationCurve suppressCurve;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool firstTimeAfterBoot;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool firstTimeAfterLoadScene;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private DateTime[] lastAppearance;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float evaluateTimer;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float suppressTimer;

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0x6A9828", Offset = "0x6A9828", VA = "0x6A9828")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0x6A9C54", Offset = "0x6A9C54", VA = "0x6A9C54")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0x6A9D1C", Offset = "0x6A9D1C", VA = "0x6A9D1C")]
	private void OnSceneLoaded(string sceneName)
	{
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0x6A9D28", Offset = "0x6A9D28", VA = "0x6A9D28")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0x6A9B18", Offset = "0x6A9B18", VA = "0x6A9B18")]
	private void LoadLastAppearanceTimeStamps()
	{
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0x6A9A50", Offset = "0x6A9A50", VA = "0x6A9A50")]
	private void SaveAppearanceTimeStamp(AppearanceTrack track)
	{
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0x6A99F0", Offset = "0x6A99F0", VA = "0x6A99F0")]
	private DateTime Now()
	{
		return default(DateTime);
	}

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0x6AA0EC", Offset = "0x6AA0EC", VA = "0x6AA0EC")]
	private TimeSpan GetTimeSpanSinceLastAppearance(AppearanceTrack track)
	{
		return default(TimeSpan);
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0x6AA1A4", Offset = "0x6AA1A4", VA = "0x6AA1A4")]
	private TimeSpan GetTimeSpanSinceLevelLoad()
	{
		return default(TimeSpan);
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0x6AA21C", Offset = "0x6AA21C", VA = "0x6AA21C")]
	private string GetGameMentionGroupID()
	{
		return null;
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0x6A9D98", Offset = "0x6A9D98", VA = "0x6A9D98")]
	private void Evaluate()
	{
	}

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0x6AA03C", Offset = "0x6AA03C", VA = "0x6AA03C")]
	private string GetPlayerPrefsKey(AppearanceTrack track)
	{
		return null;
	}

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0x6AA3A8", Offset = "0x6AA3A8", VA = "0x6AA3A8")]
	public SporadicPenny()
	{
	}
}
[Token(Token = "0x2000203")]
public class Trajectory : MonoBehaviour
{
	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0x824D50", Offset = "0x824D50", VA = "0x824D50")]
	public static Vector3 SolveForLaunchForceGivenAngle(Vector3 startPos, Vector3 targetPos, float angle)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0x825024", Offset = "0x825024", VA = "0x825024")]
	public Trajectory()
	{
	}
}
[Token(Token = "0x2000204")]
public class MainCamera : MonoBehaviour
{
	[Token(Token = "0x200046F")]
	public enum Kind
	{
		[Token(Token = "0x4001A28")]
		mainCamera,
		[Token(Token = "0x4001A29")]
		otherCamera,
		[Token(Token = "0x4001A2A")]
		mainCameraRoot
	}

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Camera instance;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Transform cameraRoot;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static List<Transform> cameraRootList;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static List<Camera> allCameras;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static List<Camera> cameraMainList;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Kind kind;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static int cameraRootTotal;

	[Token(Token = "0x170000A8")]
	public static Camera Instance
	{
		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x63C044", Offset = "0x63C044", VA = "0x63C044")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A9")]
	public static Transform CameraRoot
	{
		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x63C118", Offset = "0x63C118", VA = "0x63C118")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000AA")]
	public static List<Camera> AllCameras
	{
		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x63C268", Offset = "0x63C268", VA = "0x63C268")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0x63C430", Offset = "0x63C430", VA = "0x63C430")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0x63C6D0", Offset = "0x63C6D0", VA = "0x63C6D0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0x63CA20", Offset = "0x63CA20", VA = "0x63CA20")]
	public MainCamera()
	{
	}
}
[Token(Token = "0x2000205")]
public class Progression : SingletonBehavior<Progression>
{
	[Token(Token = "0x2000470")]
	public enum GameState
	{
		[Token(Token = "0x4001A2C")]
		ParkIntroduction = 500,
		[Token(Token = "0x4001A2D")]
		AvatarIntroductionExplain = 600,
		[Token(Token = "0x4001A2E")]
		AvatarIntroductionAwaitPlayerInput = 610,
		[Token(Token = "0x4001A2F")]
		AvatarIntroductionGoodJob = 620,
		[Token(Token = "0x4001A30")]
		MagicMayhemUnlockExplain = 1000,
		[Token(Token = "0x4001A31")]
		MagicMayhemUnlockAwaitPlayer = 1010,
		[Token(Token = "0x4001A32")]
		MagicMayhemUnlockGoodJob = 1020,
		[Token(Token = "0x4001A33")]
		MagicMayhemEnterExplain = 1500,
		[Token(Token = "0x4001A34")]
		MagicMayhemEnterAwaitPlayerFinish = 1510,
		[Token(Token = "0x4001A35")]
		PsyduckExplain = 2000,
		[Token(Token = "0x4001A36")]
		PsyduckWaitForTickets = 2010,
		[Token(Token = "0x4001A37")]
		PsyduckAwaitPlayerFinish = 2020,
		[Token(Token = "0x4001A38")]
		BackpackExplain = 2500,
		[Token(Token = "0x4001A39")]
		BackpackAwaitPlayer = 2510,
		[Token(Token = "0x4001A3A")]
		BasketUnlockExplain = 3000,
		[Token(Token = "0x4001A3B")]
		BasketUnlockAwaitPlayerInput = 3010,
		[Token(Token = "0x4001A3C")]
		BasketUnlockGoodJob = 3020,
		[Token(Token = "0x4001A3D")]
		BasketEnterExplain = 3030,
		[Token(Token = "0x4001A3E")]
		BasketEnterAwaitPlayerFinish = 3040,
		[Token(Token = "0x4001A3F")]
		BasketWaitForCompleted = 3050,
		[Token(Token = "0x4001A40")]
		GolfatchuLockedExplain = 4000,
		[Token(Token = "0x4001A41")]
		GolfatchuLocked = 4010,
		[Token(Token = "0x4001A42")]
		GolfatchuAvailable = 4020,
		[Token(Token = "0x4001A43")]
		PidgeyLockedExplain = 5000,
		[Token(Token = "0x4001A44")]
		PidgeyLocked = 5010,
		[Token(Token = "0x4001A45")]
		PidgeyAvailable = 5020,
		[Token(Token = "0x4001A46")]
		TinderTownLockedExplain = 6000,
		[Token(Token = "0x4001A47")]
		TinderTownLocked = 6010,
		[Token(Token = "0x4001A48")]
		TinderTownAvailable = 6020,
		[Token(Token = "0x4001A49")]
		HammerLockedExplain = 6500,
		[Token(Token = "0x4001A4A")]
		HammerLocked = 6510,
		[Token(Token = "0x4001A4B")]
		HammerAvailable = 6520,
		[Token(Token = "0x4001A4C")]
		PassAndPlayLockedExplain = 7000,
		[Token(Token = "0x4001A4D")]
		PassAndPlayLocked = 7010,
		[Token(Token = "0x4001A4E")]
		PassAndPlayAvailable = 7020
	}

	[Serializable]
	[Token(Token = "0x2000471")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9284", Offset = "0x4A9284")]
	private sealed class <>c
	{
		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__14_5;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__14_6;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action <>9__14_10;

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0x66C238", Offset = "0x66C238", VA = "0x66C238")]
		public <>c()
		{
		}

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0x66C240", Offset = "0x66C240", VA = "0x66C240")]
		internal void <PennyEvaluate>b__14_5()
		{
		}

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0x66C244", Offset = "0x66C244", VA = "0x66C244")]
		internal void <PennyEvaluate>b__14_6()
		{
		}

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0x66C248", Offset = "0x66C248", VA = "0x66C248")]
		internal void <PennyEvaluate>b__14_10()
		{
		}
	}

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<GameState, GameState> checkPoints;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int numberOfGameStates;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private GameState defaultState;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameState currentState;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GameState loadedState;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ListenerList listenerList;

	[Token(Token = "0x4000C5D")]
	private const string progressionPrefKey = "ProgressionState";

	[Token(Token = "0x4000C5E")]
	private const string eventPerfKey = "ProgressionEvents";

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Array gameStateValues;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<Type, UnityEngine.Object> cachedComponents;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float lastProgressionTimeStamp;

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0x669C34", Offset = "0x669C34", VA = "0x669C34", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0x66A494", Offset = "0x66A494", VA = "0x66A494")]
	private void OnSceneLoaded(string sceneName)
	{
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0x66A540", Offset = "0x66A540", VA = "0x66A540")]
	private void PennyEvaluate()
	{
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0x66AF88", Offset = "0x66AF88", VA = "0x66AF88")]
	private void OnPlayerAvatarMoved()
	{
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0x66B050", Offset = "0x66B050", VA = "0x66B050")]
	private void OnPidgeyFinished()
	{
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0x66AE0C", Offset = "0x66AE0C", VA = "0x66AE0C")]
	private void OnBasketStarted()
	{
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0x66B094", Offset = "0x66B094", VA = "0x66B094")]
	private void OnHammerFinished()
	{
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0x66B0AC", Offset = "0x66B0AC", VA = "0x66B0AC")]
	private void OnTinderTownFinished(FinalScore finalScore)
	{
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0x66B0C4", Offset = "0x66B0C4", VA = "0x66B0C4")]
	private void OnGolfatchuFinishedCourseSet(FinalScore score)
	{
	}

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0x66B0D8", Offset = "0x66B0D8", VA = "0x66B0D8")]
	private void OnMagicMayhemFinished()
	{
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0x66B0EC", Offset = "0x66B0EC", VA = "0x66B0EC")]
	private void OnBasketFinished()
	{
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0x66B100", Offset = "0x66B100", VA = "0x66B100")]
	private void OnPsyduckGavePrize()
	{
	}

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0x66B14C", Offset = "0x66B14C", VA = "0x66B14C")]
	private void OnOnboardingStartTickets()
	{
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0x66B160", Offset = "0x66B160", VA = "0x66B160")]
	private void OnCollectionOpened()
	{
	}

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0x66B1AC", Offset = "0x66B1AC", VA = "0x66B1AC")]
	private void OnWorldAttractionUnlockButtonPressed(int miniGameId)
	{
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0x66B068", Offset = "0x66B068", VA = "0x66B068")]
	private bool IncrementFrom(GameState state)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0x66B3C0", Offset = "0x66B3C0", VA = "0x66B3C0")]
	private void GoToState(GameState specifiedState)
	{
	}

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0x66AE58", Offset = "0x66AE58", VA = "0x66AE58")]
	private void IncrementCurrentState()
	{
	}

	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0x66B5FC", Offset = "0x66B5FC", VA = "0x66B5FC")]
	public void DebugUnlockAll()
	{
	}

	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0x66B6D8", Offset = "0x66B6D8", VA = "0x66B6D8")]
	public void DebugLockAll()
	{
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0x66B780", Offset = "0x66B780", VA = "0x66B780")]
	public void DebugIncrementCurrentState()
	{
	}

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0x669958", Offset = "0x669958", VA = "0x669958")]
	public bool IsAttractionLocked(Minigame.Name name)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0x66B784", Offset = "0x66B784", VA = "0x66B784")]
	public bool IsPassAndPlayUnlockButtonAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0x66B79C", Offset = "0x66B79C", VA = "0x66B79C")]
	public bool IsAttractionUnlockButtonAvailable(Minigame.Name name)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0x6602CC", Offset = "0x6602CC", VA = "0x6602CC")]
	public bool ForceShowBackpackTutorial()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0x6602BC", Offset = "0x6602BC", VA = "0x6602BC")]
	public bool IsAvatarTutorialAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0x66015C", Offset = "0x66015C", VA = "0x66015C")]
	public bool IsAvatarMovementAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0x66B860", Offset = "0x66B860", VA = "0x66B860")]
	public bool IsTicketsInWorldAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0x66B870", Offset = "0x66B870", VA = "0x66B870")]
	public bool IsFlyingTicketsAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0x66014C", Offset = "0x66014C", VA = "0x66014C")]
	public bool IsBackpackAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0x66B894", Offset = "0x66B894", VA = "0x66B894")]
	public bool ShouldForcePsyduckSpinAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0x66016C", Offset = "0x66016C", VA = "0x66016C")]
	public bool IsClickInteractionAllowed(ClickInteraction interaction)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0x66B8A4", Offset = "0x66B8A4", VA = "0x66B8A4")]
	public bool IsQuittingPsyduckAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0x669938", Offset = "0x669938", VA = "0x669938")]
	public bool IsConsumablesAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0x669948", Offset = "0x669948", VA = "0x669948")]
	public bool IsVanityItemsAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0x66B8B4", Offset = "0x66B8B4", VA = "0x66B8B4")]
	public bool IsSporadicPennyAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0x66B8C8", Offset = "0x66B8C8", VA = "0x66B8C8")]
	public bool IsIAPAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0x66B8D0", Offset = "0x66B8D0", VA = "0x66B8D0")]
	public bool IsPassAndPlayAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0x66B8E4", Offset = "0x66B8E4", VA = "0x66B8E4")]
	public bool IsHammerGameUnlocked()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0x66B8F8", Offset = "0x66B8F8", VA = "0x66B8F8")]
	public bool IsBuyHammerGameAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0x66A2D0", Offset = "0x66A2D0", VA = "0x66A2D0")]
	private void ReadPersistentState()
	{
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0x66B490", Offset = "0x66B490", VA = "0x66B490")]
	private void WritePersistentState()
	{
	}

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0x66B900", Offset = "0x66B900", VA = "0x66B900", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000F07")]
	private T GetCachedComponentInScene<T>() where T : UnityEngine.Object
	{
		return null;
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0x66BA40", Offset = "0x66BA40", VA = "0x66BA40")]
	private SpeechBubble GetCurrentSpeechBubble()
	{
		return null;
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0x66BA90", Offset = "0x66BA90", VA = "0x66BA90")]
	private PlayerAvatar GetCurrentPlayerAvatar()
	{
		return null;
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0x66BAE0", Offset = "0x66BAE0", VA = "0x66BAE0")]
	public Progression()
	{
	}

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0x66BFBC", Offset = "0x66BFBC", VA = "0x66BFBC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B45FC", Offset = "0x4B45FC")]
	private void <PennyEvaluate>b__14_0()
	{
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0x66BFE0", Offset = "0x66BFE0", VA = "0x66BFE0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B460C", Offset = "0x4B460C")]
	private void <PennyEvaluate>b__14_1()
	{
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0x66C0E4", Offset = "0x66C0E4", VA = "0x66C0E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B461C", Offset = "0x4B461C")]
	private void <PennyEvaluate>b__14_2()
	{
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0x66C128", Offset = "0x66C128", VA = "0x66C128")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B462C", Offset = "0x4B462C")]
	private void <PennyEvaluate>b__14_3()
	{
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0x66C168", Offset = "0x66C168", VA = "0x66C168")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B463C", Offset = "0x4B463C")]
	private void <PennyEvaluate>b__14_4()
	{
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0x66C18C", Offset = "0x66C18C", VA = "0x66C18C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B464C", Offset = "0x4B464C")]
	private void <PennyEvaluate>b__14_7()
	{
	}

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0x66C190", Offset = "0x66C190", VA = "0x66C190")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B465C", Offset = "0x4B465C")]
	private void <PennyEvaluate>b__14_8()
	{
	}

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0x66C1D0", Offset = "0x66C1D0", VA = "0x66C1D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B466C", Offset = "0x4B466C")]
	private void <PennyEvaluate>b__14_9()
	{
	}
}
[Token(Token = "0x2000206")]
public class PulsateScale : MonoBehaviour
{
	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float pulseSpeed;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float pulseAmplitude;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 startScale;

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0x9CF73C", Offset = "0x9CF73C", VA = "0x9CF73C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0x9CF780", Offset = "0x9CF780", VA = "0x9CF780")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0x9CF7DC", Offset = "0x9CF7DC", VA = "0x9CF7DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0x9CF918", Offset = "0x9CF918", VA = "0x9CF918")]
	public PulsateScale()
	{
	}
}
[Token(Token = "0x2000207")]
public class RandomizableList<T>
{
	[Token(Token = "0x2000472")]
	internal class Node
	{
		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int id;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal Node prev;

		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal Node next;

		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal T value;

		[Token(Token = "0x6001E15")]
		public Node()
		{
		}
	}

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Node first;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Node last;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Node current;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int numNodes;

	[Token(Token = "0x170000AB")]
	public int Count
	{
		[Token(Token = "0x6000F1E")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000F17")]
	public void Setup(T[] values)
	{
	}

	[Token(Token = "0x6000F18")]
	public void Append(T[] values)
	{
	}

	[Token(Token = "0x6000F19")]
	public void ResetPosition()
	{
	}

	[Token(Token = "0x6000F1A")]
	public bool HasNext()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F1B")]
	public T Next()
	{
		return (T)null;
	}

	[Token(Token = "0x6000F1C")]
	public void Shuffle()
	{
	}

	[Token(Token = "0x6000F1D")]
	public void ShuffleAndResetPosition()
	{
	}

	[Token(Token = "0x6000F1F")]
	private void AddNode(Node n)
	{
	}

	[Token(Token = "0x6000F20")]
	private void MoveFirst(Node n)
	{
	}

	[Token(Token = "0x6000F21")]
	private void MoveLast(Node n)
	{
	}

	[Token(Token = "0x6000F22")]
	public RandomizableList()
	{
	}
}
[Token(Token = "0x2000208")]
public class RotatingTimer : MonoBehaviour
{
	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer timerPlaneRenderer;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 rotationAxis;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float fullAngle;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4ACF14", Offset = "0x4ACF14")]
	public float tickDegrees;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4ACF4C", Offset = "0x4ACF4C")]
	private float increaseSpeed;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Quaternion startRotation;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float currentAngle;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material progressionMaterial;

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0x698210", Offset = "0x698210", VA = "0x698210")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0x698274", Offset = "0x698274", VA = "0x698274")]
	public void Set(float fraction)
	{
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0x698444", Offset = "0x698444", VA = "0x698444")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0x6984AC", Offset = "0x6984AC", VA = "0x6984AC")]
	public RotatingTimer()
	{
	}
}
[Token(Token = "0x2000209")]
public class BootIntoScene : MonoBehaviour
{
	[Token(Token = "0x6000F27")]
	[Address(RVA = "0x6C600C", Offset = "0x6C600C", VA = "0x6C600C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0x6C60E4", Offset = "0x6C60E4", VA = "0x6C60E4")]
	public BootIntoScene()
	{
	}
}
[Token(Token = "0x200020A")]
public class SceneSwitcher : SingletonBehavior<SceneSwitcher>
{
	[Token(Token = "0x2000473")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9294", Offset = "0x4A9294")]
	private sealed class <LoadAndInitialize>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool showLoadingObject;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SceneSwitcher <>4__this;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string sceneName;

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action onDone;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AsyncOperation <asyncLoad>5__2;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Scene <scene>5__3;

		[Token(Token = "0x17000230")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E19")]
			[Address(RVA = "0x69A1CC", Offset = "0x69A1CC", VA = "0x69A1CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000231")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E1B")]
			[Address(RVA = "0x69A23C", Offset = "0x69A23C", VA = "0x69A23C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0x6999CC", Offset = "0x6999CC", VA = "0x6999CC")]
		[DebuggerHidden]
		public <LoadAndInitialize>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0x699E70", Offset = "0x699E70", VA = "0x699E70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0x699E74", Offset = "0x699E74", VA = "0x699E74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0x69A1D4", Offset = "0x69A1D4", VA = "0x69A1D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static HashSet<string> permanentScenes;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float lastLevelLoadTimeStamp;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string lastLevelLoadedName;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject loadingGameObject;

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0x69942C", Offset = "0x69942C", VA = "0x69942C", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0x69947C", Offset = "0x69947C", VA = "0x69947C")]
	public static void LoadTransient(string sceneName, bool showLoadingObject = true, [Optional] Action onDone)
	{
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0x6997F8", Offset = "0x6997F8", VA = "0x6997F8")]
	public static void LoadPermanent(string sceneName)
	{
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0x6996AC", Offset = "0x6996AC", VA = "0x6996AC")]
	private static void DisableRootGameObjects(Scene scene)
	{
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0x699744", Offset = "0x699744", VA = "0x699744")]
	private static void LoadScene(string sceneName, bool showLoadingObject, [Optional] Action onDone)
	{
	}

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0x6998F8", Offset = "0x6998F8", VA = "0x6998F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B467C", Offset = "0x4B467C")]
	private IEnumerator LoadAndInitialize(string sceneName, bool showLoadingObject, [Optional] Action onDone)
	{
		return null;
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0x69986C", Offset = "0x69986C", VA = "0x69986C")]
	public static void MakePermanent(string sceneName)
	{
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0x6996A8", Offset = "0x6996A8", VA = "0x6996A8")]
	private static void CheckName(string sceneName)
	{
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0x6999F8", Offset = "0x6999F8", VA = "0x6999F8")]
	private static void TrackLevelLoad(string sceneName)
	{
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0x699B4C", Offset = "0x699B4C", VA = "0x699B4C")]
	private static void TrackLevelLeave(string sceneName)
	{
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0x699D20", Offset = "0x699D20", VA = "0x699D20")]
	public SceneSwitcher()
	{
	}
}
[Token(Token = "0x200020B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4A8770", Offset = "0x4A8770")]
public class BonusMeter : MonoBehaviour
{
	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float[] widthForLevel;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4ACFA4", Offset = "0x4ACFA4")]
	[SerializeField]
	private float levelWithFraction;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform imageTransform;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rect originalRect;

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0x6C5664", Offset = "0x6C5664", VA = "0x6C5664")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0x6C5718", Offset = "0x6C5718", VA = "0x6C5718")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0x6C578C", Offset = "0x6C578C", VA = "0x6C578C")]
	public void SetLevel(float level)
	{
	}

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0x6C5668", Offset = "0x6C5668", VA = "0x6C5668")]
	private void SetStartupValues()
	{
	}

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0x6C571C", Offset = "0x6C571C", VA = "0x6C571C")]
	private void UpdateSize()
	{
	}

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0x6C5794", Offset = "0x6C5794", VA = "0x6C5794")]
	public float GetCurrentScale()
	{
		return default(float);
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0x6C57A8", Offset = "0x6C57A8", VA = "0x6C57A8")]
	private float GetScale(int level, float fraction)
	{
		return default(float);
	}

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0x6C5964", Offset = "0x6C5964", VA = "0x6C5964")]
	public BonusMeter()
	{
	}
}
[Token(Token = "0x200020C")]
public class FinalScore : IComparable
{
	[Token(Token = "0x2000474")]
	public struct ScoreEntry
	{
		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string heading;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string score;
	}

	[Token(Token = "0x2000475")]
	public class ImageListEntry
	{
		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite image;

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0x71D48C", Offset = "0x71D48C", VA = "0x71D48C")]
		public ImageListEntry()
		{
		}
	}

	[Token(Token = "0x2000476")]
	public struct BonusTier
	{
		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int scoreLimit;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int bonusTickets;
	}

	[Token(Token = "0x2000477")]
	public delegate float CompareScores(float a, float b);

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<ScoreEntry> scoreEntries;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<ImageListEntry> imageListEntries;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string imageListAudio;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite banner;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string bannerTextStringID;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string bannerSoundGroup;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<BonusTier> bonusTiers;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4ACFF0", Offset = "0x4ACFF0")]
	private float <TotalScore>k__BackingField;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD000", Offset = "0x4AD000")]
	private int <TicketsCollected>k__BackingField;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool skipBonusBarAnimation;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int ticketRewardMultiplier;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public CompareScores compareScores;

	[Token(Token = "0x170000AC")]
	public List<ScoreEntry> Scores
	{
		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0x71C714", Offset = "0x71C714", VA = "0x71C714")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000AD")]
	public List<ImageListEntry> ImageList
	{
		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0x71C71C", Offset = "0x71C71C", VA = "0x71C71C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000AE")]
	public List<BonusTier> BonusTiers
	{
		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0x71C724", Offset = "0x71C724", VA = "0x71C724")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000AF")]
	public float TotalScore
	{
		[Token(Token = "0x6000F40")]
		[Address(RVA = "0x71C72C", Offset = "0x71C72C", VA = "0x71C72C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B46E0", Offset = "0x4B46E0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000F41")]
		[Address(RVA = "0x71C734", Offset = "0x71C734", VA = "0x71C734")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B46F0", Offset = "0x4B46F0")]
		set
		{
		}
	}

	[Token(Token = "0x170000B0")]
	public int TicketsCollected
	{
		[Token(Token = "0x6000F42")]
		[Address(RVA = "0x71C73C", Offset = "0x71C73C", VA = "0x71C73C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4700", Offset = "0x4B4700")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F43")]
		[Address(RVA = "0x71C744", Offset = "0x71C744", VA = "0x71C744")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4710", Offset = "0x4B4710")]
		set
		{
		}
	}

	[Token(Token = "0x170000B1")]
	public int BonusTickets
	{
		[Token(Token = "0x6000F44")]
		[Address(RVA = "0x71C74C", Offset = "0x71C74C", VA = "0x71C74C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000B2")]
	public bool SkipBonusBarAnimation
	{
		[Token(Token = "0x6000F45")]
		[Address(RVA = "0x71C80C", Offset = "0x71C80C", VA = "0x71C80C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x71C814", Offset = "0x71C814", VA = "0x71C814")]
		set
		{
		}
	}

	[Token(Token = "0x170000B3")]
	public int TicketRewardMultiplier
	{
		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x71C820", Offset = "0x71C820", VA = "0x71C820")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F48")]
		[Address(RVA = "0x71C828", Offset = "0x71C828", VA = "0x71C828")]
		set
		{
		}
	}

	[Token(Token = "0x170000B4")]
	public int TotalTickets
	{
		[Token(Token = "0x6000F49")]
		[Address(RVA = "0x71C830", Offset = "0x71C830", VA = "0x71C830")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0x71C750", Offset = "0x71C750", VA = "0x71C750")]
	private int CalculateBonus()
	{
		return default(int);
	}

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0x71C860", Offset = "0x71C860", VA = "0x71C860")]
	public int? GetBonusTier()
	{
		return null;
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0x71C868", Offset = "0x71C868", VA = "0x71C868")]
	public int? GetBonusTierForScore(float score)
	{
		return null;
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0x71CE1C", Offset = "0x71CE1C", VA = "0x71CE1C")]
	public float GetProgress(int fromTier, float score)
	{
		return default(float);
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0x71CFA4", Offset = "0x71CFA4", VA = "0x71CFA4")]
	public float GetScoreForTier(float tier)
	{
		return default(float);
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0x71CF94", Offset = "0x71CF94", VA = "0x71CF94")]
	private static float InverseLerpUnclamped(float from, float to, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0x71D16C", Offset = "0x71D16C", VA = "0x71D16C")]
	public static float CompareLargerIsBetter(float a, float b)
	{
		return default(float);
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0x71D174", Offset = "0x71D174", VA = "0x71D174")]
	public static float CompareSmallerIsBetter(float a, float b)
	{
		return default(float);
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0x71D17C", Offset = "0x71D17C", VA = "0x71D17C", Slot = "4")]
	public int CompareTo(object obj)
	{
		return default(int);
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0x71D288", Offset = "0x71D288", VA = "0x71D288")]
	public FinalScore()
	{
	}
}
[Token(Token = "0x200020D")]
public class Scoreboard : SingleInstanceBehavior<Scoreboard>
{
	[Token(Token = "0x2000478")]
	public delegate string FormatScore(float score);

	[Token(Token = "0x2000479")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A92A4", Offset = "0x4A92A4")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Scoreboard <>4__this;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text totalText;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float totalScore;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Minigame.Name gameID;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string levelID;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LocalizedText localRecordScoreText;

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0x69D1FC", Offset = "0x69D1FC", VA = "0x69D1FC")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0x69D204", Offset = "0x69D204", VA = "0x69D204")]
		internal void <ShowScores>b__1()
		{
		}
	}

	[Token(Token = "0x200047A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A92B4", Offset = "0x4A92B4")]
	private sealed class <>c__DisplayClass41_1
	{
		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int lastFilledLevel;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass41_0 CS$<>8__locals1;

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0x69D2CC", Offset = "0x69D2CC", VA = "0x69D2CC")]
		public <>c__DisplayClass41_1()
		{
		}

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0x69D2D4", Offset = "0x69D2D4", VA = "0x69D2D4")]
		internal void <ShowScores>b__0(float levelWithFraction)
		{
		}
	}

	[Token(Token = "0x200047B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A92C4", Offset = "0x4A92C4")]
	private sealed class <ShowScores>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Scoreboard <>4__this;

		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Minigame.Name gameID;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string levelID;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private <>c__DisplayClass41_0 <>8__1;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WaitForSeconds <waitBetweenEntries>5__2;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 <position>5__3;

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<FinalScore.ImageListEntry> <imageList>5__4;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int <numImages>5__5;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<FinalScore.ScoreEntry> <scoreEntries>5__6;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private WaitForSeconds <waitBetweenImages>5__7;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 <imagePosition>5__8;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private RectTransform <imageEntryTemplateRectTransform>5__9;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float <spacingX>5__10;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int <i>5__11;

		[Token(Token = "0x17000232")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E2C")]
			[Address(RVA = "0x69EF84", Offset = "0x69EF84", VA = "0x69EF84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000233")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E2E")]
			[Address(RVA = "0x69EFF4", Offset = "0x69EFF4", VA = "0x69EFF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0x69C3FC", Offset = "0x69C3FC", VA = "0x69C3FC")]
		[DebuggerHidden]
		public <ShowScores>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0x69D4D8", Offset = "0x69D4D8", VA = "0x69D4D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0x69D4DC", Offset = "0x69D4DC", VA = "0x69D4DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0x69EF8C", Offset = "0x69EF8C", VA = "0x69EF8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[NonSerialized]
	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FormatScore formatTotalScore;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject ticketSpawnEffectPrefab;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject ticketPrefab;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform confirmQuitOffset;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject continuePrompt;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject scoreEntryTemplate;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject imageListEntryTemplate;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject totalObject;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject bannerObject;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject localRecordObject;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject ticketWithParticles;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private TicketCount bonusTicketCount;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private TicketCount collectedTicketCount;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private TicketCount totalTicketCount;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject ticketFrenzy2x;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private BonusMeter bonusMeter;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject[] ticketGroupIcon;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject[] ticketGroup;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool hasRun;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	private bool clickEnabled;

	[Token(Token = "0x4000C99")]
	private const float pauseBeforeEnableClick = 1.5f;

	[Token(Token = "0x4000C9A")]
	private const float pauseBetweenEntries = 1f;

	[Token(Token = "0x4000C9B")]
	private const float pauseBetweenImages = 0.2f;

	[Token(Token = "0x4000C9C")]
	private const float imageAppearTime = 0.5f;

	[Token(Token = "0x4000C9D")]
	private const float bonusBarGrowTime = 3f;

	[Token(Token = "0x4000C9E")]
	private const float appearTime = 0.4f;

	[Token(Token = "0x4000C9F")]
	private const float disappearTime = 0.4f;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private FinalScore score;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float? localRecord;

	[Token(Token = "0x4000CA2")]
	private const string recordKeyPostfix = "LocalRecord";

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Animator animator;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Animator boardAnim;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject particleCounter;

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0x69B608", Offset = "0x69B608", VA = "0x69B608")]
	private void InitializeBonusTierMarker(int index)
	{
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0x69BA6C", Offset = "0x69BA6C", VA = "0x69BA6C", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0x69BE64", Offset = "0x69BE64", VA = "0x69BE64", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0x69BEF4", Offset = "0x69BEF4", VA = "0x69BEF4")]
	public void Run(FinalScore score, Minigame.Name gameID, int level)
	{
	}

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0x69C10C", Offset = "0x69C10C", VA = "0x69C10C")]
	private string GetRecordPlayerPrefKey(string gameHighscoreKey)
	{
		return null;
	}

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0x69C160", Offset = "0x69C160", VA = "0x69C160")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0x69C3D0", Offset = "0x69C3D0", VA = "0x69C3D0")]
	public static string FormatIntScore(float score)
	{
		return null;
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0x69C05C", Offset = "0x69C05C", VA = "0x69C05C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B4720", Offset = "0x4B4720")]
	private IEnumerator ShowScores(Minigame.Name gameID, string levelID)
	{
		return null;
	}

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0x69C428", Offset = "0x69C428", VA = "0x69C428")]
	private void UpdateTicketRewardMultiplier()
	{
	}

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0x69C5BC", Offset = "0x69C5BC", VA = "0x69C5BC")]
	private void UpdateLocalRecordDisplay(Minigame.Name gameID, string levelID, LocalizedText localRecordScoreText)
	{
	}

	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0x69C854", Offset = "0x69C854", VA = "0x69C854")]
	private void SaveNewLocalRecord(float totalScore, string gameHighscoreKey)
	{
	}

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0x69CCCC", Offset = "0x69CCCC", VA = "0x69CCCC")]
	private void CelebrateBonusTier(int tier)
	{
	}

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0x69C218", Offset = "0x69C218", VA = "0x69C218")]
	private void HideAndExit()
	{
	}

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0x69BE28", Offset = "0x69BE28", VA = "0x69BE28")]
	private void SetClickEnabled(bool enable)
	{
	}

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0x69D0D4", Offset = "0x69D0D4", VA = "0x69D0D4")]
	public Scoreboard()
	{
	}

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0x69D1A8", Offset = "0x69D1A8", VA = "0x69D1A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4784", Offset = "0x4B4784")]
	private void <UpdateTicketRewardMultiplier>b__42_0()
	{
	}
}
[Token(Token = "0x200020E")]
public class ScoreboardTester : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200047C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A92D4", Offset = "0x4A92D4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Scoreboard.FormatScore <>9__9_0;

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0x69F758", Offset = "0x69F758", VA = "0x69F758")]
		public <>c()
		{
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0x69F760", Offset = "0x69F760", VA = "0x69F760")]
		internal string <Start>b__9_0(float score)
		{
			return null;
		}
	}

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float totalScore;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite[] testImages;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string testImagesAudio;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite testBanner;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string testBannerText;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string testBannerSoundGroup;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool testTicketFrenzy;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool skipBonusBarAnimation;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool smallerScoreIsBetter;

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0x69F094", Offset = "0x69F094", VA = "0x69F094")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0x69F568", Offset = "0x69F568", VA = "0x69F568")]
	private void UpdateForLargerIsBetter(FinalScore finalScore)
	{
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0x69F3F8", Offset = "0x69F3F8", VA = "0x69F3F8")]
	private void UpdateForSmallerIsBetter(FinalScore finalScore)
	{
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0x69F690", Offset = "0x69F690", VA = "0x69F690")]
	public ScoreboardTester()
	{
	}
}
[Token(Token = "0x200020F")]
public class Scoring
{
	[Token(Token = "0x6000F68")]
	[Address(RVA = "0x69F7E0", Offset = "0x69F7E0", VA = "0x69F7E0")]
	public static void CalculateAndShowFinalScore(FinalScore score, Minigame.Name minigameName, int level)
	{
	}

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0x69FB34", Offset = "0x69FB34", VA = "0x69FB34")]
	public Scoring()
	{
	}
}
[Token(Token = "0x2000210")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4A87D4", Offset = "0x4A87D4")]
public class TicketCount : MonoBehaviour
{
	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text textComponent;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text footerText;

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0x81CD78", Offset = "0x81CD78", VA = "0x81CD78")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0x81CDF8", Offset = "0x81CDF8", VA = "0x81CDF8")]
	public void SetCount(int numberOfTickets)
	{
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0x81CE54", Offset = "0x81CE54", VA = "0x81CE54")]
	public void SetFooter(string text)
	{
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0x81CE94", Offset = "0x81CE94", VA = "0x81CE94")]
	public TicketCount()
	{
	}
}
[Token(Token = "0x2000211")]
public static class Signals
{
	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly SerializedEventsQueue localQueue;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly SerializedEventsQueue remoteQueue;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly Signal<string> sceneLoadedButNotActive;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly Signal<string> sceneLoaded;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly Signal<int> PlayerProgressStateUpdated;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly Signal onboardingStartTickets;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly Signal<int> onboardingDisableObject;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly Signal hammerGameStatusUpdated;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly Signal<InventoryCatalogue.ItemID> InventoryItemChanged;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static readonly Signal handednessSettingsUpdated;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static readonly Signal OnConfirmQuitShowing;

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static readonly Signal OnConfirmQuitHidden;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static readonly Signal<InventoryCatalogue.ItemID> PurchasedItem;
}
[Token(Token = "0x2000212")]
public class SmoothMimicPose : MonoBehaviour
{
	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform transformToMimic;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float smoothTime;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float rotationVelocityX;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationVelocityY;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationVelocityZ;

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0x6A5750", Offset = "0x6A5750", VA = "0x6A5750")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0x6A575C", Offset = "0x6A575C", VA = "0x6A575C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0x6A5EE4", Offset = "0x6A5EE4", VA = "0x6A5EE4")]
	public SmoothMimicPose()
	{
	}
}
[Token(Token = "0x2000213")]
public class StateMachineSound : StateMachineBehaviour
{
	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SoundGroup]
	public string[] groupsToFadeOutAtExit;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeOutTime;

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0x6AE010", Offset = "0x6AE010", VA = "0x6AE010", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0x6AE100", Offset = "0x6AE100", VA = "0x6AE100")]
	public StateMachineSound()
	{
	}
}
[Token(Token = "0x2000214")]
public class TicketPickup : MonoBehaviour
{
	[Token(Token = "0x200047D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A92E4", Offset = "0x4A92E4")]
	private sealed class <DisableAnimatorAfterDelay>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TicketPickup <>4__this;

		[Token(Token = "0x17000234")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E35")]
			[Address(RVA = "0x81D470", Offset = "0x81D470", VA = "0x81D470", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000235")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E37")]
			[Address(RVA = "0x81D4E0", Offset = "0x81D4E0", VA = "0x81D4E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E32")]
		[Address(RVA = "0x81D368", Offset = "0x81D368", VA = "0x81D368")]
		[DebuggerHidden]
		public <DisableAnimatorAfterDelay>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0x81D39C", Offset = "0x81D39C", VA = "0x81D39C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E34")]
		[Address(RVA = "0x81D3A0", Offset = "0x81D3A0", VA = "0x81D3A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E36")]
		[Address(RVA = "0x81D478", Offset = "0x81D478", VA = "0x81D478", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool ShowWhenSpawned;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator visuals;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool visible;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Action<TicketPickup, bool> onPickup;

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0x81CEAC", Offset = "0x81CEAC", VA = "0x81CEAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0x81D048", Offset = "0x81D048", VA = "0x81D048")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0x81CF40", Offset = "0x81CF40", VA = "0x81CF40")]
	public void Show(Action<TicketPickup, bool> newOnPickup)
	{
	}

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0x81D0C0", Offset = "0x81D0C0", VA = "0x81D0C0")]
	public void OnPickup(bool pickedUpByPlayer)
	{
	}

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0x81D2BC", Offset = "0x81D2BC", VA = "0x81D2BC")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0x81D1DC", Offset = "0x81D1DC", VA = "0x81D1DC")]
	private void ReportPickupAndHide(bool pickedUpByPlayer)
	{
	}

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0x81D2D0", Offset = "0x81D2D0", VA = "0x81D2D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B4794", Offset = "0x4B4794")]
	private IEnumerator DisableAnimatorAfterDelay(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0x81D394", Offset = "0x81D394", VA = "0x81D394")]
	public TicketPickup()
	{
	}
}
[Token(Token = "0x2000215")]
public class CollectionTracking : SingletonBehavior<CollectionTracking>
{
	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private InventoryCatalogue.ItemID? itemIDWonInWheel;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string itemWonInWheel;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float startTime;

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0x6D6134", Offset = "0x6D6134", VA = "0x6D6134")]
	public CollectionTracking StartStopwatch()
	{
		return null;
	}

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0x6D6310", Offset = "0x6D6310", VA = "0x6D6310")]
	public void WonderWheelAborted()
	{
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0x6D6548", Offset = "0x6D6548", VA = "0x6D6548")]
	public void WinItem(InventoryCatalogue.ItemID newItem, string newItemDisplayName, bool playerHadItem)
	{
	}

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0x6D6160", Offset = "0x6D6160", VA = "0x6D6160")]
	public void SendCollectionEvent(string eventName)
	{
	}

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0x6D4CB4", Offset = "0x6D4CB4", VA = "0x6D4CB4")]
	public void SendCollectionEvent(string eventName, ItemCategory itemCategory)
	{
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0x6D54E0", Offset = "0x6D54E0", VA = "0x6D54E0")]
	public Tracking.TrackingEvent CreateCollectionEvent(string eventName)
	{
		return null;
	}

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0x6D56CC", Offset = "0x6D56CC", VA = "0x6D56CC")]
	public Tracking.TrackingEvent AddItemParameters(Tracking.TrackingEvent ev, InventoryCatalogue.ItemID item)
	{
		return null;
	}

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0x6D6808", Offset = "0x6D6808", VA = "0x6D6808")]
	public CollectionTracking()
	{
	}
}
[Token(Token = "0x2000216")]
public class DummyTracking : MonoBehaviour, Tracking.Tracker
{
	[Token(Token = "0x6000F84")]
	[Address(RVA = "0x71B114", Offset = "0x71B114", VA = "0x71B114")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0x71B17C", Offset = "0x71B17C", VA = "0x71B17C", Slot = "4")]
	public Tracking.TrackingEvent Track(string eventName)
	{
		return null;
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0x71B1D8", Offset = "0x71B1D8", VA = "0x71B1D8")]
	public DummyTracking()
	{
	}
}
[Token(Token = "0x2000217")]
public class MinigameTracking : SingletonBehavior<MinigameTracking>
{
	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD050", Offset = "0x4AD050")]
	private Minigame.Name? <minigameID>k__BackingField;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string minigameName;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int level;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int sublevel;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float gameStartTime;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float sublevelStartTime;

	[Token(Token = "0x170000B5")]
	public Minigame.Name? minigameID
	{
		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x63FC60", Offset = "0x63FC60", VA = "0x63FC60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4808", Offset = "0x4B4808")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x63FC58", Offset = "0x63FC58", VA = "0x63FC58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B47F8", Offset = "0x4B47F8")]
		private set
		{
		}
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0x63AAEC", Offset = "0x63AAEC", VA = "0x63AAEC")]
	public void GameStarted(Minigame.Name gameID, int level)
	{
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0x6393F4", Offset = "0x6393F4", VA = "0x6393F4")]
	public void GameCompleted(Minigame.Name gameID, int level, int sublevel, FinalScore score, [Optional] bool? playerWon, [Optional] float? winDelta)
	{
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0x63AC64", Offset = "0x63AC64", VA = "0x63AC64")]
	public void LevelStarted(Minigame.Name gameID, int level, int sublevel)
	{
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0x63ADCC", Offset = "0x63ADCC", VA = "0x63ADCC")]
	public void LevelCompleted(Minigame.Name gameID, int level, int sublevel)
	{
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0x6402E8", Offset = "0x6402E8", VA = "0x6402E8")]
	public bool IsGameStarted()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0x640350", Offset = "0x640350", VA = "0x640350")]
	public void Abort()
	{
	}

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0x63FC68", Offset = "0x63FC68", VA = "0x63FC68")]
	private Tracking.TrackingEvent CreateGameEvent(string eventPrefix)
	{
		return null;
	}

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0x6400A0", Offset = "0x6400A0", VA = "0x6400A0")]
	private Tracking.TrackingEvent AddScoreParameters(Tracking.TrackingEvent ev, FinalScore score)
	{
		return null;
	}

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0x6405E4", Offset = "0x6405E4", VA = "0x6405E4")]
	public MinigameTracking()
	{
	}
}
[Token(Token = "0x2000218")]
public class TrackingSelector : MonoBehaviour
{
	[Token(Token = "0x6000F92")]
	[Address(RVA = "0x824B40", Offset = "0x824B40", VA = "0x824B40")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F93")]
	[Address(RVA = "0x824D48", Offset = "0x824D48", VA = "0x824D48")]
	public TrackingSelector()
	{
	}
}
[Token(Token = "0x2000219")]
public class SpeechBubble : MonoBehaviour
{
	[Token(Token = "0x200047E")]
	public enum TutorialID
	{
		[Token(Token = "0x4001A83")]
		Hidden,
		[Token(Token = "0x4001A84")]
		ClickForAttraction,
		[Token(Token = "0x4001A85")]
		AppForBackpack,
		[Token(Token = "0x4001A86")]
		SwipeToMove,
		[Token(Token = "0x4001A87")]
		AppToExitBackpack,
		[Token(Token = "0x4001A88")]
		HomeToRecenter,
		[Token(Token = "0x4001A89")]
		AppToExitAndHomeToRecenter,
		[Token(Token = "0x4001A8A")]
		TicketsToEnterPsyduck,
		[Token(Token = "0x4001A8B")]
		ClickToStart,
		[Token(Token = "0x4001A8C")]
		ClickToBuy,
		[Token(Token = "0x4001A8D")]
		ClickToUnlock
	}

	[Token(Token = "0x200047F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A92F4", Offset = "0x4A92F4")]
	private sealed class <ShowHomeRecenterMini>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpeechBubble <>4__this;

		[Token(Token = "0x17000236")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E3B")]
			[Address(RVA = "0x6A7C8C", Offset = "0x6A7C8C", VA = "0x6A7C8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000237")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E3D")]
			[Address(RVA = "0x6A7CFC", Offset = "0x6A7CFC", VA = "0x6A7CFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E38")]
		[Address(RVA = "0x6A7AF0", Offset = "0x6A7AF0", VA = "0x6A7AF0")]
		[DebuggerHidden]
		public <ShowHomeRecenterMini>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6001E39")]
		[Address(RVA = "0x6A7B80", Offset = "0x6A7B80", VA = "0x6A7B80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0x6A7B84", Offset = "0x6A7B84", VA = "0x6A7B84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0x6A7C94", Offset = "0x6A7C94", VA = "0x6A7C94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator myAnimator;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform targetTransform;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform myTransform;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 cameraPosition;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private TutorialID currentID;

	[NonSerialized]
	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SpeechBubbleAnimatorReplacement animatorReplacement;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 INVALID_VEC3;

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0x6A6EC0", Offset = "0x6A6EC0", VA = "0x6A6EC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0x6A6F3C", Offset = "0x6A6F3C", VA = "0x6A6F3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0x6A7054", Offset = "0x6A7054", VA = "0x6A7054")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F97")]
	[Address(RVA = "0x6A72DC", Offset = "0x6A72DC", VA = "0x6A72DC")]
	public void Show(TutorialID tutorialID, Transform followTransform)
	{
	}

	[Token(Token = "0x6000F98")]
	[Address(RVA = "0x6A79A8", Offset = "0x6A79A8", VA = "0x6A79A8")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000F99")]
	[Address(RVA = "0x6A7438", Offset = "0x6A7438", VA = "0x6A7438")]
	private void UpdatedRecnterMini(TutorialID tutorialID)
	{
	}

	[Token(Token = "0x6000F9A")]
	[Address(RVA = "0x6A7A7C", Offset = "0x6A7A7C", VA = "0x6A7A7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B4818", Offset = "0x4B4818")]
	private IEnumerator ShowHomeRecenterMini()
	{
		return null;
	}

	[Token(Token = "0x6000F9B")]
	[Address(RVA = "0x6A7B1C", Offset = "0x6A7B1C", VA = "0x6A7B1C")]
	public SpeechBubble()
	{
	}
}
[Token(Token = "0x200021A")]
public class TweakData : SingletonBehavior<TweakData>
{
	[Token(Token = "0x2000480")]
	public struct PidgeyTrackBonusTiers
	{
		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int PidgeyScoreboardTier1Treshold;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int PidgeyScoreboardTier2Treshold;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int PidgeyScoreboardTier3Treshold;

		[Token(Token = "0x6001E3E")]
		[Address(RVA = "0x50C34C", Offset = "0x50C34C", VA = "0x50C34C")]
		public PidgeyTrackBonusTiers(int tier1, int tier2, int tier3)
		{
		}
	}

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD060", Offset = "0x4AD060")]
	private float <WorldTicketSpawnCoolDown>k__BackingField;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD070", Offset = "0x4AD070")]
	private float <WorldTicketSpawnFirstDelay>k__BackingField;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD080", Offset = "0x4AD080")]
	private float <MiniGolfTicketSpawnCoolDown>k__BackingField;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD090", Offset = "0x4AD090")]
	private int <MiniGolfTicketMultiplier>k__BackingField;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD0A0", Offset = "0x4AD0A0")]
	private int <MiniGolfScoreboardTier1Treshold>k__BackingField;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD0B0", Offset = "0x4AD0B0")]
	private int <MiniGolfScoreboardTier1TicketBonus>k__BackingField;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD0C0", Offset = "0x4AD0C0")]
	private int <MiniGolfScoreboardTier2Treshold>k__BackingField;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD0D0", Offset = "0x4AD0D0")]
	private int <MiniGolfScoreboardTier2TicketBonus>k__BackingField;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD0E0", Offset = "0x4AD0E0")]
	private int <MiniGolfScoreboardTier3Treshold>k__BackingField;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD0F0", Offset = "0x4AD0F0")]
	private int <MiniGolfScoreboardTier3TicketBonus>k__BackingField;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD100", Offset = "0x4AD100")]
	private float <PidgeyTicketSpawnCoolDown>k__BackingField;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD110", Offset = "0x4AD110")]
	private int <PidgeyTicketMultiplier>k__BackingField;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD120", Offset = "0x4AD120")]
	private int <PidgeyScoreboardTier1TicketBonus>k__BackingField;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD130", Offset = "0x4AD130")]
	private int <PidgeyScoreboardTier2TicketBonus>k__BackingField;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD140", Offset = "0x4AD140")]
	private int <PidgeyScoreboardTier3TicketBonus>k__BackingField;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PidgeyTrackBonusTiers[] pidgeyTracksBonusTiers;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD150", Offset = "0x4AD150")]
	private float <TindertownTicketSpawnCoolDown>k__BackingField;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD160", Offset = "0x4AD160")]
	private float <TindertownMaxConcurrentTickets>k__BackingField;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD170", Offset = "0x4AD170")]
	private int <TindertownTicketMultiplier>k__BackingField;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD180", Offset = "0x4AD180")]
	private int <TindertownScoreboardTier1Treshold>k__BackingField;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD190", Offset = "0x4AD190")]
	private int <TindertownScoreboardTier1TicketBonus>k__BackingField;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD1A0", Offset = "0x4AD1A0")]
	private int <TindertownScoreboardTier2Treshold>k__BackingField;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD1B0", Offset = "0x4AD1B0")]
	private int <TindertownScoreboardTier2TicketBonus>k__BackingField;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD1C0", Offset = "0x4AD1C0")]
	private int <TindertownScoreboardTier3Treshold>k__BackingField;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD1D0", Offset = "0x4AD1D0")]
	private int <TindertownScoreboardTier3TicketBonus>k__BackingField;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD1E0", Offset = "0x4AD1E0")]
	private float <MagicMayhemTicketChance>k__BackingField;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD1F0", Offset = "0x4AD1F0")]
	private int <MagicMayhemTicketMultiplier>k__BackingField;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD200", Offset = "0x4AD200")]
	private int <MagicMayhemScoreboardTier1Treshold>k__BackingField;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD210", Offset = "0x4AD210")]
	private int <MagicMayhemScoreboardTier1TicketBonus>k__BackingField;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD220", Offset = "0x4AD220")]
	private int <MagicMayhemScoreboardTier2Treshold>k__BackingField;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD230", Offset = "0x4AD230")]
	private int <MagicMayhemScoreboardTier2TicketBonus>k__BackingField;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD240", Offset = "0x4AD240")]
	private int <MagicMayhemScoreboardTier3Treshold>k__BackingField;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD250", Offset = "0x4AD250")]
	private int <MagicMayhemScoreboardTier3TicketBonus>k__BackingField;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD260", Offset = "0x4AD260")]
	private float <BasketTicketSpawnCoolDown>k__BackingField;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD270", Offset = "0x4AD270")]
	private int <BasketTicketMultiplier>k__BackingField;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD280", Offset = "0x4AD280")]
	private int <BasketScoreboardTier1Treshold>k__BackingField;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD290", Offset = "0x4AD290")]
	private int <BasketScoreboardTier1TicketBonus>k__BackingField;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD2A0", Offset = "0x4AD2A0")]
	private int <BasketScoreboardTier2Treshold>k__BackingField;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD2B0", Offset = "0x4AD2B0")]
	private int <BasketScoreboardTier2TicketBonus>k__BackingField;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD2C0", Offset = "0x4AD2C0")]
	private int <BasketScoreboardTier3Treshold>k__BackingField;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD2D0", Offset = "0x4AD2D0")]
	private int <BasketScoreboardTier3TicketBonus>k__BackingField;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD2E0", Offset = "0x4AD2E0")]
	private int <HammerTicketMultiplier>k__BackingField;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD2F0", Offset = "0x4AD2F0")]
	private int <HammerScoreboardTier1Treshold>k__BackingField;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD300", Offset = "0x4AD300")]
	private int <HammerScoreboardTier1TicketBonus>k__BackingField;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD310", Offset = "0x4AD310")]
	private int <HammerScoreboardTier2Treshold>k__BackingField;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD320", Offset = "0x4AD320")]
	private int <HammerScoreboardTier2TicketBonus>k__BackingField;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD330", Offset = "0x4AD330")]
	private int <HammerScoreboardTier3Treshold>k__BackingField;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD340", Offset = "0x4AD340")]
	private int <HammerScoreboardTier3TicketBonus>k__BackingField;

	[Token(Token = "0x170000B6")]
	public float WorldTicketSpawnCoolDown
	{
		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0x82502C", Offset = "0x82502C", VA = "0x82502C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B487C", Offset = "0x4B487C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0x825034", Offset = "0x825034", VA = "0x825034")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B488C", Offset = "0x4B488C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B7")]
	public float WorldTicketSpawnFirstDelay
	{
		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0x82503C", Offset = "0x82503C", VA = "0x82503C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B489C", Offset = "0x4B489C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0x825044", Offset = "0x825044", VA = "0x825044")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B48AC", Offset = "0x4B48AC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B8")]
	public float MiniGolfTicketSpawnCoolDown
	{
		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0x82504C", Offset = "0x82504C", VA = "0x82504C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B48BC", Offset = "0x4B48BC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0x825054", Offset = "0x825054", VA = "0x825054")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B48CC", Offset = "0x4B48CC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B9")]
	public int MiniGolfTicketMultiplier
	{
		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0x82505C", Offset = "0x82505C", VA = "0x82505C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B48DC", Offset = "0x4B48DC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0x825064", Offset = "0x825064", VA = "0x825064")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B48EC", Offset = "0x4B48EC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000BA")]
	public int MiniGolfScoreboardTier1Treshold
	{
		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0x82506C", Offset = "0x82506C", VA = "0x82506C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B48FC", Offset = "0x4B48FC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0x825074", Offset = "0x825074", VA = "0x825074")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B490C", Offset = "0x4B490C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000BB")]
	public int MiniGolfScoreboardTier1TicketBonus
	{
		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0x82507C", Offset = "0x82507C", VA = "0x82507C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B491C", Offset = "0x4B491C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0x825084", Offset = "0x825084", VA = "0x825084")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B492C", Offset = "0x4B492C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000BC")]
	public int MiniGolfScoreboardTier2Treshold
	{
		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0x82508C", Offset = "0x82508C", VA = "0x82508C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B493C", Offset = "0x4B493C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0x825094", Offset = "0x825094", VA = "0x825094")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B494C", Offset = "0x4B494C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000BD")]
	public int MiniGolfScoreboardTier2TicketBonus
	{
		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0x82509C", Offset = "0x82509C", VA = "0x82509C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B495C", Offset = "0x4B495C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0x8250A4", Offset = "0x8250A4", VA = "0x8250A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B496C", Offset = "0x4B496C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000BE")]
	public int MiniGolfScoreboardTier3Treshold
	{
		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x8250AC", Offset = "0x8250AC", VA = "0x8250AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B497C", Offset = "0x4B497C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x8250B4", Offset = "0x8250B4", VA = "0x8250B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B498C", Offset = "0x4B498C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000BF")]
	public int MiniGolfScoreboardTier3TicketBonus
	{
		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0x8250BC", Offset = "0x8250BC", VA = "0x8250BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B499C", Offset = "0x4B499C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x8250C4", Offset = "0x8250C4", VA = "0x8250C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B49AC", Offset = "0x4B49AC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C0")]
	public float PidgeyTicketSpawnCoolDown
	{
		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x8250CC", Offset = "0x8250CC", VA = "0x8250CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B49BC", Offset = "0x4B49BC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x8250D4", Offset = "0x8250D4", VA = "0x8250D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B49CC", Offset = "0x4B49CC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C1")]
	public int PidgeyTicketMultiplier
	{
		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x8250DC", Offset = "0x8250DC", VA = "0x8250DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B49DC", Offset = "0x4B49DC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x8250E4", Offset = "0x8250E4", VA = "0x8250E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B49EC", Offset = "0x4B49EC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C2")]
	public int PidgeyScoreboardTier1TicketBonus
	{
		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x8250EC", Offset = "0x8250EC", VA = "0x8250EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B49FC", Offset = "0x4B49FC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x8250F4", Offset = "0x8250F4", VA = "0x8250F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4A0C", Offset = "0x4B4A0C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C3")]
	public int PidgeyScoreboardTier2TicketBonus
	{
		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x8250FC", Offset = "0x8250FC", VA = "0x8250FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4A1C", Offset = "0x4B4A1C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x825104", Offset = "0x825104", VA = "0x825104")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4A2C", Offset = "0x4B4A2C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C4")]
	public int PidgeyScoreboardTier3TicketBonus
	{
		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x82510C", Offset = "0x82510C", VA = "0x82510C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4A3C", Offset = "0x4B4A3C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x825114", Offset = "0x825114", VA = "0x825114")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4A4C", Offset = "0x4B4A4C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C5")]
	public float TindertownTicketSpawnCoolDown
	{
		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x81D644", Offset = "0x81D644", VA = "0x81D644")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4A5C", Offset = "0x4B4A5C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x82511C", Offset = "0x82511C", VA = "0x82511C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4A6C", Offset = "0x4B4A6C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C6")]
	public float TindertownMaxConcurrentTickets
	{
		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x81D7E4", Offset = "0x81D7E4", VA = "0x81D7E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4A7C", Offset = "0x4B4A7C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x825124", Offset = "0x825124", VA = "0x825124")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4A8C", Offset = "0x4B4A8C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C7")]
	public int TindertownTicketMultiplier
	{
		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x82512C", Offset = "0x82512C", VA = "0x82512C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4A9C", Offset = "0x4B4A9C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x825134", Offset = "0x825134", VA = "0x825134")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4AAC", Offset = "0x4B4AAC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C8")]
	public int TindertownScoreboardTier1Treshold
	{
		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x82513C", Offset = "0x82513C", VA = "0x82513C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4ABC", Offset = "0x4B4ABC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x825144", Offset = "0x825144", VA = "0x825144")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4ACC", Offset = "0x4B4ACC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C9")]
	public int TindertownScoreboardTier1TicketBonus
	{
		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x82514C", Offset = "0x82514C", VA = "0x82514C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4ADC", Offset = "0x4B4ADC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x825154", Offset = "0x825154", VA = "0x825154")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4AEC", Offset = "0x4B4AEC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000CA")]
	public int TindertownScoreboardTier2Treshold
	{
		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x82515C", Offset = "0x82515C", VA = "0x82515C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4AFC", Offset = "0x4B4AFC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x825164", Offset = "0x825164", VA = "0x825164")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4B0C", Offset = "0x4B4B0C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000CB")]
	public int TindertownScoreboardTier2TicketBonus
	{
		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x82516C", Offset = "0x82516C", VA = "0x82516C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4B1C", Offset = "0x4B4B1C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x825174", Offset = "0x825174", VA = "0x825174")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4B2C", Offset = "0x4B4B2C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000CC")]
	public int TindertownScoreboardTier3Treshold
	{
		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x82517C", Offset = "0x82517C", VA = "0x82517C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4B3C", Offset = "0x4B4B3C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x825184", Offset = "0x825184", VA = "0x825184")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4B4C", Offset = "0x4B4B4C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000CD")]
	public int TindertownScoreboardTier3TicketBonus
	{
		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x82518C", Offset = "0x82518C", VA = "0x82518C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4B5C", Offset = "0x4B4B5C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x825194", Offset = "0x825194", VA = "0x825194")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4B6C", Offset = "0x4B4B6C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000CE")]
	public float MagicMayhemTicketChance
	{
		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0x82519C", Offset = "0x82519C", VA = "0x82519C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4B7C", Offset = "0x4B4B7C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0x8251A4", Offset = "0x8251A4", VA = "0x8251A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4B8C", Offset = "0x4B4B8C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000CF")]
	public int MagicMayhemTicketMultiplier
	{
		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x8251AC", Offset = "0x8251AC", VA = "0x8251AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4B9C", Offset = "0x4B4B9C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x8251B4", Offset = "0x8251B4", VA = "0x8251B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4BAC", Offset = "0x4B4BAC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D0")]
	public int MagicMayhemScoreboardTier1Treshold
	{
		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x8251BC", Offset = "0x8251BC", VA = "0x8251BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4BBC", Offset = "0x4B4BBC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x8251C4", Offset = "0x8251C4", VA = "0x8251C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4BCC", Offset = "0x4B4BCC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D1")]
	public int MagicMayhemScoreboardTier1TicketBonus
	{
		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x8251CC", Offset = "0x8251CC", VA = "0x8251CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4BDC", Offset = "0x4B4BDC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0x8251D4", Offset = "0x8251D4", VA = "0x8251D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4BEC", Offset = "0x4B4BEC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D2")]
	public int MagicMayhemScoreboardTier2Treshold
	{
		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x8251DC", Offset = "0x8251DC", VA = "0x8251DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4BFC", Offset = "0x4B4BFC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x8251E4", Offset = "0x8251E4", VA = "0x8251E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4C0C", Offset = "0x4B4C0C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D3")]
	public int MagicMayhemScoreboardTier2TicketBonus
	{
		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x8251EC", Offset = "0x8251EC", VA = "0x8251EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4C1C", Offset = "0x4B4C1C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0x8251F4", Offset = "0x8251F4", VA = "0x8251F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4C2C", Offset = "0x4B4C2C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D4")]
	public int MagicMayhemScoreboardTier3Treshold
	{
		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0x8251FC", Offset = "0x8251FC", VA = "0x8251FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4C3C", Offset = "0x4B4C3C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0x825204", Offset = "0x825204", VA = "0x825204")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4C4C", Offset = "0x4B4C4C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D5")]
	public int MagicMayhemScoreboardTier3TicketBonus
	{
		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x82520C", Offset = "0x82520C", VA = "0x82520C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4C5C", Offset = "0x4B4C5C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x825214", Offset = "0x825214", VA = "0x825214")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4C6C", Offset = "0x4B4C6C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D6")]
	public float BasketTicketSpawnCoolDown
	{
		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0x82521C", Offset = "0x82521C", VA = "0x82521C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4C7C", Offset = "0x4B4C7C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0x825224", Offset = "0x825224", VA = "0x825224")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4C8C", Offset = "0x4B4C8C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D7")]
	public int BasketTicketMultiplier
	{
		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0x82522C", Offset = "0x82522C", VA = "0x82522C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4C9C", Offset = "0x4B4C9C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x825234", Offset = "0x825234", VA = "0x825234")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4CAC", Offset = "0x4B4CAC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D8")]
	public int BasketScoreboardTier1Treshold
	{
		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x82523C", Offset = "0x82523C", VA = "0x82523C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4CBC", Offset = "0x4B4CBC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x825244", Offset = "0x825244", VA = "0x825244")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4CCC", Offset = "0x4B4CCC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D9")]
	public int BasketScoreboardTier1TicketBonus
	{
		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x82524C", Offset = "0x82524C", VA = "0x82524C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4CDC", Offset = "0x4B4CDC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x825254", Offset = "0x825254", VA = "0x825254")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4CEC", Offset = "0x4B4CEC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000DA")]
	public int BasketScoreboardTier2Treshold
	{
		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x82525C", Offset = "0x82525C", VA = "0x82525C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4CFC", Offset = "0x4B4CFC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x825264", Offset = "0x825264", VA = "0x825264")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4D0C", Offset = "0x4B4D0C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000DB")]
	public int BasketScoreboardTier2TicketBonus
	{
		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x82526C", Offset = "0x82526C", VA = "0x82526C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4D1C", Offset = "0x4B4D1C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x825274", Offset = "0x825274", VA = "0x825274")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4D2C", Offset = "0x4B4D2C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000DC")]
	public int BasketScoreboardTier3Treshold
	{
		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x82527C", Offset = "0x82527C", VA = "0x82527C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4D3C", Offset = "0x4B4D3C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x825284", Offset = "0x825284", VA = "0x825284")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4D4C", Offset = "0x4B4D4C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000DD")]
	public int BasketScoreboardTier3TicketBonus
	{
		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x82528C", Offset = "0x82528C", VA = "0x82528C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4D5C", Offset = "0x4B4D5C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x825294", Offset = "0x825294", VA = "0x825294")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4D6C", Offset = "0x4B4D6C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000DE")]
	public int HammerTicketMultiplier
	{
		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x82529C", Offset = "0x82529C", VA = "0x82529C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4D7C", Offset = "0x4B4D7C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x8252A4", Offset = "0x8252A4", VA = "0x8252A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4D8C", Offset = "0x4B4D8C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000DF")]
	public int HammerScoreboardTier1Treshold
	{
		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x8252AC", Offset = "0x8252AC", VA = "0x8252AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4D9C", Offset = "0x4B4D9C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x8252B4", Offset = "0x8252B4", VA = "0x8252B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4DAC", Offset = "0x4B4DAC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E0")]
	public int HammerScoreboardTier1TicketBonus
	{
		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x8252BC", Offset = "0x8252BC", VA = "0x8252BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4DBC", Offset = "0x4B4DBC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x8252C4", Offset = "0x8252C4", VA = "0x8252C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4DCC", Offset = "0x4B4DCC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E1")]
	public int HammerScoreboardTier2Treshold
	{
		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x8252CC", Offset = "0x8252CC", VA = "0x8252CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4DDC", Offset = "0x4B4DDC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x8252D4", Offset = "0x8252D4", VA = "0x8252D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4DEC", Offset = "0x4B4DEC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E2")]
	public int HammerScoreboardTier2TicketBonus
	{
		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x8252DC", Offset = "0x8252DC", VA = "0x8252DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4DFC", Offset = "0x4B4DFC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x8252E4", Offset = "0x8252E4", VA = "0x8252E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4E0C", Offset = "0x4B4E0C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E3")]
	public int HammerScoreboardTier3Treshold
	{
		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x8252EC", Offset = "0x8252EC", VA = "0x8252EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4E1C", Offset = "0x4B4E1C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x8252F4", Offset = "0x8252F4", VA = "0x8252F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4E2C", Offset = "0x4B4E2C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E4")]
	public int HammerScoreboardTier3TicketBonus
	{
		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x8252FC", Offset = "0x8252FC", VA = "0x8252FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4E3C", Offset = "0x4B4E3C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x825304", Offset = "0x825304", VA = "0x825304")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4E4C", Offset = "0x4B4E4C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0x82530C", Offset = "0x82530C", VA = "0x82530C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0x8255B0", Offset = "0x8255B0", VA = "0x8255B0")]
	public TweakData()
	{
	}
}
[Token(Token = "0x200021B")]
public class ControllerSpawner : MonoBehaviour
{
	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Hand controllerPrefab;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Handedness[] controllersToSpawn;

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0x6D79A4", Offset = "0x6D79A4", VA = "0x6D79A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0x6D7BA4", Offset = "0x6D7BA4", VA = "0x6D7BA4")]
	public ControllerSpawner()
	{
	}
}
[Token(Token = "0x200021C")]
public class ControllerIndicator : MonoBehaviour
{
	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject homeButtonIndicator;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject touchButtonIndicator;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject appButtonIndicator;

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0x6D6860", Offset = "0x6D6860", VA = "0x6D6860")]
	[SerializeField]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0x6D6864", Offset = "0x6D6864", VA = "0x6D6864")]
	private void ApplyTransform(Transform source, Transform target)
	{
	}

	[Token(Token = "0x6001000")]
	[Address(RVA = "0x6D6928", Offset = "0x6D6928", VA = "0x6D6928")]
	public ControllerIndicator()
	{
	}
}
[Token(Token = "0x200021D")]
public class BuyItemButton : SelectableItem
{
	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private InventoryCatalogue.ItemID itemToBuy;

	[Token(Token = "0x6001001")]
	[Address(RVA = "0x6CA9DC", Offset = "0x6CA9DC", VA = "0x6CA9DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0x6CAB10", Offset = "0x6CAB10", VA = "0x6CAB10", Slot = "6")]
	public override void Select()
	{
	}

	[Token(Token = "0x6001003")]
	[Address(RVA = "0x6CABF0", Offset = "0x6CABF0", VA = "0x6CABF0")]
	private void OnInventoryChanged(InventoryCatalogue.ItemID itemID)
	{
	}

	[Token(Token = "0x6001004")]
	[Address(RVA = "0x6CAAD8", Offset = "0x6CAAD8", VA = "0x6CAAD8")]
	private void Hide()
	{
	}

	[Token(Token = "0x6001005")]
	[Address(RVA = "0x6CAB14", Offset = "0x6CAB14", VA = "0x6CAB14")]
	private void BuyItem()
	{
	}

	[Token(Token = "0x6001006")]
	[Address(RVA = "0x6CAC60", Offset = "0x6CAC60", VA = "0x6CAC60", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0x6CAD34", Offset = "0x6CAD34", VA = "0x6CAD34")]
	public BuyItemButton()
	{
	}
}
[Token(Token = "0x200021E")]
public class HierarchicalMenu : MonoBehaviour
{
	[Token(Token = "0x2000481")]
	private enum HideItemAnimation
	{
		[Token(Token = "0x4001A95")]
		UpAndCenter,
		[Token(Token = "0x4001A96")]
		Up
	}

	[Token(Token = "0x2000482")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9304", Offset = "0x4A9304")]
	private sealed class <>c__DisplayClass43_0
	{
		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SelectableItem item;

		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0x7342E8", Offset = "0x7342E8", VA = "0x7342E8")]
		public <>c__DisplayClass43_0()
		{
		}

		[Token(Token = "0x6001E40")]
		[Address(RVA = "0x734E74", Offset = "0x734E74", VA = "0x734E74")]
		internal void <PopLevel>b__0()
		{
		}
	}

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MenuLevel startingLevel;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private HideItemAnimation hideItemAnimation;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<MenuLevel> levelStack;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isCurrentlyClicking;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SelectableItem highlightedItem;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SelectableItem upItem;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isScrolling;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool isTrackingTouches;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector2 initialTouchPos;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float previousTouchTimestamp;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2 overallVelocity;

	[Token(Token = "0x4000D1A")]
	private const float ScrollSensitivity = 0.05f;

	[Token(Token = "0x4000D1B")]
	private const float kClickThreshold = 0.25f;

	[Token(Token = "0x4000D1C")]
	private const float kStickThreshold = 0.05f;

	[Token(Token = "0x4000D1D")]
	private const float kTimestampDeltaThreshold = 1E-07f;

	[Token(Token = "0x4000D1E")]
	private const float kSwipeThreshold = 0.5f;

	[Token(Token = "0x4000D1F")]
	private const float kCuttoffHz = 10f;

	[Token(Token = "0x4000D20")]
	private const float kRc = 1f / (20f * (float)Math.PI);

	[Token(Token = "0x4000D21")]
	private const float highlightDisplacementAmount = 0.15f;

	[Token(Token = "0x4000D22")]
	private const float highlightMoveTime = 0.5f;

	[Token(Token = "0x4000D23")]
	private const float unhighlightMoveTime = 0.05f;

	[Token(Token = "0x4000D24")]
	private const float appearTime = 0.5f;

	[Token(Token = "0x4000D25")]
	private const float disappearTime = 0.5f;

	[Token(Token = "0x4000D26")]
	private const float backFromParentTime = 0.2f;

	[Token(Token = "0x4000D27")]
	private const float becomeParentTime = 0.15f;

	[Token(Token = "0x4000D28")]
	private const float goBackTime = 0.15f;

	[Token(Token = "0x4000D29")]
	private const float delayOnExitInspect = 0.8f;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float delayUntilInteractive;

	[Token(Token = "0x4000D2B")]
	private const float ouclusRangeCompensation = 0.5f;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RaycastHit[] raycastHits;

	[Token(Token = "0x170000E5")]
	public MenuLevel CurrentLevel
	{
		[Token(Token = "0x6001018")]
		[Address(RVA = "0x732E48", Offset = "0x732E48", VA = "0x732E48")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E6")]
	private MenuLevel ParentLevel
	{
		[Token(Token = "0x6001019")]
		[Address(RVA = "0x734778", Offset = "0x734778", VA = "0x734778")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0x731130", Offset = "0x731130", VA = "0x731130")]
	private void Start()
	{
	}

	[Token(Token = "0x6001009")]
	[Address(RVA = "0x731D4C", Offset = "0x731D4C", VA = "0x731D4C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0x732074", Offset = "0x732074", VA = "0x732074")]
	private bool IsBackButtonEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x600100B")]
	[Address(RVA = "0x73210C", Offset = "0x73210C", VA = "0x73210C")]
	private void Update()
	{
	}

	[Token(Token = "0x600100C")]
	[Address(RVA = "0x73383C", Offset = "0x73383C", VA = "0x73383C")]
	private InputManager.CallbackResult OnClickButtonPressed()
	{
		return default(InputManager.CallbackResult);
	}

	[Token(Token = "0x600100D")]
	[Address(RVA = "0x7338C4", Offset = "0x7338C4", VA = "0x7338C4")]
	private InputManager.CallbackResult OnAppButtonPressed()
	{
		return default(InputManager.CallbackResult);
	}

	[Token(Token = "0x600100E")]
	[Address(RVA = "0x7327A4", Offset = "0x7327A4", VA = "0x7327A4")]
	private bool OnBackPackButton()
	{
		return default(bool);
	}

	[Token(Token = "0x600100F")]
	[Address(RVA = "0x73357C", Offset = "0x73357C", VA = "0x73357C")]
	private void SelectItem(SelectableItem itemToSelect)
	{
	}

	[Token(Token = "0x6001010")]
	[Address(RVA = "0x732F14", Offset = "0x732F14", VA = "0x732F14")]
	private SelectableItem GetItemToHighlight()
	{
		return null;
	}

	[Token(Token = "0x6001011")]
	[Address(RVA = "0x7340A4", Offset = "0x7340A4", VA = "0x7340A4")]
	private bool IsSelectable(SelectableItem item)
	{
		return default(bool);
	}

	[Token(Token = "0x6001012")]
	[Address(RVA = "0x731524", Offset = "0x731524", VA = "0x731524")]
	public void PushLevel(MenuLevel level)
	{
	}

	[Token(Token = "0x6001013")]
	[Address(RVA = "0x7341D4", Offset = "0x7341D4", VA = "0x7341D4")]
	private void UpdateAllSelectionFeedbackDisplayPositions(SelectableItem item)
	{
	}

	[Token(Token = "0x6001014")]
	[Address(RVA = "0x7338E0", Offset = "0x7338E0", VA = "0x7338E0")]
	public void PopLevel()
	{
	}

	[Token(Token = "0x6001015")]
	[Address(RVA = "0x7342F0", Offset = "0x7342F0", VA = "0x7342F0")]
	public void HideAndDeactivate()
	{
	}

	[Token(Token = "0x6001016")]
	[Address(RVA = "0x734678", Offset = "0x734678", VA = "0x734678")]
	public void InspectItem(SelectableItem ignoreItem)
	{
	}

	[Token(Token = "0x6001017")]
	[Address(RVA = "0x734728", Offset = "0x734728", VA = "0x734728")]
	public void StopInspectingItem()
	{
	}

	[Token(Token = "0x600101A")]
	[Address(RVA = "0x73321C", Offset = "0x73321C", VA = "0x73321C")]
	private void UpdateHighlight(SelectableItem itemToHighlight, bool immediate = false)
	{
	}

	[Token(Token = "0x600101B")]
	[Address(RVA = "0x734818", Offset = "0x734818", VA = "0x734818")]
	internal void SwitchToPageInDirection(MenuLevel.ScrollingSnapDirection scrollDirection)
	{
	}

	[Token(Token = "0x600101C")]
	[Address(RVA = "0x732C04", Offset = "0x732C04", VA = "0x732C04")]
	private void UpdateStickScrolling()
	{
	}

	[Token(Token = "0x600101D")]
	[Address(RVA = "0x73294C", Offset = "0x73294C", VA = "0x73294C")]
	private void UpdateTouchScrolling()
	{
	}

	[Token(Token = "0x600101E")]
	[Address(RVA = "0x734AD0", Offset = "0x734AD0", VA = "0x734AD0")]
	private void StartTouchTracking()
	{
	}

	[Token(Token = "0x600101F")]
	[Address(RVA = "0x734CCC", Offset = "0x734CCC", VA = "0x734CCC")]
	private void TrackTouch(Vector2 touchDelta)
	{
	}

	[Token(Token = "0x6001020")]
	[Address(RVA = "0x734C4C", Offset = "0x734C4C", VA = "0x734C4C")]
	private void StopTouchTracking()
	{
	}

	[Token(Token = "0x6001021")]
	[Address(RVA = "0x734B94", Offset = "0x734B94", VA = "0x734B94")]
	private void StartScrolling()
	{
	}

	[Token(Token = "0x6001022")]
	[Address(RVA = "0x7348C8", Offset = "0x7348C8", VA = "0x7348C8")]
	private void ApplyScrolling()
	{
	}

	[Token(Token = "0x6001023")]
	[Address(RVA = "0x734DAC", Offset = "0x734DAC", VA = "0x734DAC")]
	public HierarchicalMenu()
	{
	}

	[Token(Token = "0x6001024")]
	[Address(RVA = "0x734E0C", Offset = "0x734E0C", VA = "0x734E0C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4E6C", Offset = "0x4B4E6C")]
	private void <PushLevel>b__41_0()
	{
	}

	[Token(Token = "0x6001025")]
	[Address(RVA = "0x734E3C", Offset = "0x734E3C", VA = "0x734E3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B4E7C", Offset = "0x4B4E7C")]
	private void <HideAndDeactivate>b__44_0()
	{
	}
}
[Token(Token = "0x200021F")]
public class MenuLevel : MonoBehaviour
{
	[Token(Token = "0x2000483")]
	public enum ScrollingSnapDirection
	{
		[Token(Token = "0x4001A99")]
		Left,
		[Token(Token = "0x4001A9A")]
		Right,
		[Token(Token = "0x4001A9B")]
		Closest
	}

	[Token(Token = "0x2000484")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9314", Offset = "0x4A9314")]
	private sealed class <SnapToPageCoroutine>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MenuLevel <>4__this;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int index;

		[Token(Token = "0x17000238")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E44")]
			[Address(RVA = "0x63E018", Offset = "0x63E018", VA = "0x63E018", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000239")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E46")]
			[Address(RVA = "0x63E088", Offset = "0x63E088", VA = "0x63E088", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E41")]
		[Address(RVA = "0x63DEB0", Offset = "0x63DEB0", VA = "0x63DEB0")]
		[DebuggerHidden]
		public <SnapToPageCoroutine>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6001E42")]
		[Address(RVA = "0x63DF0C", Offset = "0x63DF0C", VA = "0x63DF0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E43")]
		[Address(RVA = "0x63DF10", Offset = "0x63DF10", VA = "0x63DF10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E45")]
		[Address(RVA = "0x63E020", Offset = "0x63E020", VA = "0x63E020", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AD3D0", Offset = "0x4AD3D0")]
	public float pageSpacing;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AD408", Offset = "0x4AD408")]
	public float SnapSpeed;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4AD440", Offset = "0x4AD440")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AD440", Offset = "0x4AD440")]
	public float earlyFading;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4AD498", Offset = "0x4AD498")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AD498", Offset = "0x4AD498")]
	public float scrollClampFraction;

	[NonSerialized]
	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform parentPosition;

	[NonSerialized]
	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform parentSiblingPosition;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public Transform startingPosition;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public SelectableItem[] allItems;

	[NonSerialized]
	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool isScrollable;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MenuPage[] pages;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private MenuPage activePage;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<int> indexForVisiblePages;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Coroutine activeSnapCoroutine;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public bool isSnapping;

	[Token(Token = "0x4000D3B")]
	private const float kSnapScrollOffsetThresholdCoeff = 0.002f;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float targetScrollOffset;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float scrollOffset;

	[NonSerialized]
	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform[] itemTransforms;

	[Token(Token = "0x170000E7")]
	public float ScrollOffset
	{
		[Token(Token = "0x6001026")]
		[Address(RVA = "0x63CCA4", Offset = "0x63CCA4", VA = "0x63CCA4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001027")]
		[Address(RVA = "0x63CCAC", Offset = "0x63CCAC", VA = "0x63CCAC")]
		private set
		{
		}
	}

	[Token(Token = "0x6001028")]
	[Address(RVA = "0x63CE94", Offset = "0x63CE94", VA = "0x63CE94")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001029")]
	[Address(RVA = "0x63D174", Offset = "0x63D174", VA = "0x63D174")]
	private void Start()
	{
	}

	[Token(Token = "0x600102A")]
	[Address(RVA = "0x63D1A8", Offset = "0x63D1A8", VA = "0x63D1A8")]
	public SelectableItem[] getActivePageItems()
	{
		return null;
	}

	[Token(Token = "0x600102B")]
	[Address(RVA = "0x63D214", Offset = "0x63D214", VA = "0x63D214")]
	public float GetTargetScrollOffset()
	{
		return default(float);
	}

	[Token(Token = "0x600102C")]
	[Address(RVA = "0x63D21C", Offset = "0x63D21C", VA = "0x63D21C")]
	public void SetTargetScrollOffset(float offset)
	{
	}

	[Token(Token = "0x600102D")]
	[Address(RVA = "0x63D2F0", Offset = "0x63D2F0", VA = "0x63D2F0")]
	public void StartInspectItem(Vector3 origo, SelectableItem ignoreItem)
	{
	}

	[Token(Token = "0x600102E")]
	[Address(RVA = "0x63D534", Offset = "0x63D534", VA = "0x63D534")]
	public void StopInspectingItem()
	{
	}

	[Token(Token = "0x600102F")]
	[Address(RVA = "0x63CCC4", Offset = "0x63CCC4", VA = "0x63CCC4")]
	public void OnScrolled(float scrollOffset)
	{
	}

	[Token(Token = "0x6001030")]
	[Address(RVA = "0x63D5BC", Offset = "0x63D5BC", VA = "0x63D5BC")]
	public int IndexFromOffset(float offset, out bool didClamp)
	{
		return default(int);
	}

	[Token(Token = "0x6001031")]
	[Address(RVA = "0x63D680", Offset = "0x63D680", VA = "0x63D680")]
	private bool ShouldShowIndexForOffset(float offset, int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0x63DA50", Offset = "0x63DA50", VA = "0x63DA50")]
	public MenuPage[] getPages()
	{
		return null;
	}

	[Token(Token = "0x6001033")]
	[Address(RVA = "0x63D198", Offset = "0x63D198", VA = "0x63D198")]
	private float OffsetFromIndex(int index)
	{
		return default(float);
	}

	[Token(Token = "0x6001034")]
	[Address(RVA = "0x63D8B8", Offset = "0x63D8B8", VA = "0x63D8B8")]
	private void AddPage(int index, float scrollOffset)
	{
	}

	[Token(Token = "0x6001035")]
	[Address(RVA = "0x63D7FC", Offset = "0x63D7FC", VA = "0x63D7FC")]
	private void RemovePage(int index)
	{
	}

	[Token(Token = "0x6001036")]
	[Address(RVA = "0x63D724", Offset = "0x63D724", VA = "0x63D724")]
	private void UpdatePage(int pageIndex, float scrollOffset)
	{
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0x63D990", Offset = "0x63D990", VA = "0x63D990")]
	private bool IsPageVisible(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0x63DA00", Offset = "0x63DA00", VA = "0x63DA00")]
	private bool AddPageIfNecessary(int index, float scrollOffset)
	{
		return default(bool);
	}

	[Token(Token = "0x6001039")]
	[Address(RVA = "0x63DA9C", Offset = "0x63DA9C", VA = "0x63DA9C")]
	public void SnapToPageInDirection(ScrollingSnapDirection snapDirection)
	{
	}

	[Token(Token = "0x600103A")]
	[Address(RVA = "0x63DC50", Offset = "0x63DC50", VA = "0x63DC50")]
	public void SnapToPage(int index, bool immediate = false)
	{
	}

	[Token(Token = "0x600103B")]
	[Address(RVA = "0x63DD50", Offset = "0x63DD50", VA = "0x63DD50")]
	public bool LerpTowardsOffset()
	{
		return default(bool);
	}

	[Token(Token = "0x600103C")]
	[Address(RVA = "0x63DCB8", Offset = "0x63DCB8", VA = "0x63DCB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B4E8C", Offset = "0x4B4E8C")]
	private IEnumerator SnapToPageCoroutine(int index)
	{
		return null;
	}

	[Token(Token = "0x600103D")]
	[Address(RVA = "0x63DEDC", Offset = "0x63DEDC", VA = "0x63DEDC")]
	internal void stopSnapping()
	{
	}

	[Token(Token = "0x600103E")]
	[Address(RVA = "0x63DEF0", Offset = "0x63DEF0", VA = "0x63DEF0")]
	public MenuLevel()
	{
	}
}
[Token(Token = "0x2000220")]
public class MenuPage : MonoBehaviour
{
	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool deactiveOnHide;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SelectableItem[] items;

	[Token(Token = "0x600103F")]
	[Address(RVA = "0x63D1E4", Offset = "0x63D1E4", VA = "0x63D1E4")]
	public SelectableItem[] getItems()
	{
		return null;
	}

	[Token(Token = "0x6001040")]
	[Address(RVA = "0x63E090", Offset = "0x63E090", VA = "0x63E090")]
	private void SetupItems()
	{
	}

	[Token(Token = "0x6001041")]
	[Address(RVA = "0x63D13C", Offset = "0x63D13C", VA = "0x63D13C")]
	internal void SetAsVisible()
	{
	}

	[Token(Token = "0x6001042")]
	[Address(RVA = "0x63DA58", Offset = "0x63DA58", VA = "0x63DA58")]
	internal void SetAsHidden()
	{
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0x63E0EC", Offset = "0x63E0EC", VA = "0x63E0EC")]
	public MenuPage()
	{
	}
}
[Token(Token = "0x2000221")]
public class MenuScrollArrow : SelectableItem
{
	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MenuLevel.ScrollingSnapDirection scrollDirection;

	[NonSerialized]
	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public HierarchicalMenu menu;

	[Token(Token = "0x6001044")]
	[Address(RVA = "0x63E0FC", Offset = "0x63E0FC", VA = "0x63E0FC", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6001045")]
	[Address(RVA = "0x63E178", Offset = "0x63E178", VA = "0x63E178", Slot = "6")]
	public override void Select()
	{
	}

	[Token(Token = "0x6001046")]
	[Address(RVA = "0x63E1B0", Offset = "0x63E1B0", VA = "0x63E1B0")]
	public MenuScrollArrow()
	{
	}
}
[Token(Token = "0x2000222")]
public class MenuShinyScrollArrow : MenuScrollArrow
{
	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private InventoryCatalogue.ItemID targetItem;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject shineEffect;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Inventory inventory;

	[Token(Token = "0x6001047")]
	[Address(RVA = "0x63E1B8", Offset = "0x63E1B8", VA = "0x63E1B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001048")]
	[Address(RVA = "0x63E2B0", Offset = "0x63E2B0", VA = "0x63E2B0")]
	private void UpdateShineVisuals()
	{
	}

	[Token(Token = "0x6001049")]
	[Address(RVA = "0x63E2F0", Offset = "0x63E2F0", VA = "0x63E2F0")]
	private bool HasItem()
	{
		return default(bool);
	}

	[Token(Token = "0x600104A")]
	[Address(RVA = "0x63E36C", Offset = "0x63E36C", VA = "0x63E36C")]
	private void OnInventoryChanged(InventoryCatalogue.ItemID itemID)
	{
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0x63E380", Offset = "0x63E380", VA = "0x63E380", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x600104C")]
	[Address(RVA = "0x63E454", Offset = "0x63E454", VA = "0x63E454")]
	public MenuShinyScrollArrow()
	{
	}
}
[Token(Token = "0x2000223")]
public abstract class SelectableItem : MonoBehaviour
{
	[NonSerialized]
	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3? displayPosition;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isDirty;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool isAvailable;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool showParentIndicator;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject parentIndicator;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 startLocalPosition;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SelectionFeedback[] feedbacks;

	[Token(Token = "0x4000D4D")]
	private const float rotationResistance = 0.8f;

	[Token(Token = "0x4000D4E")]
	private const float sizeInDegrees = 20f;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected GameObject unavailableIndicator;

	[Token(Token = "0x600104D")]
	[Address(RVA = "0x69FE08", Offset = "0x69FE08", VA = "0x69FE08", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x600104E")]
	[Address(RVA = "0x69FFA0", Offset = "0x69FFA0", VA = "0x69FFA0", Slot = "5")]
	public virtual void OnDestroy()
	{
	}

	[Token(Token = "0x600104F")]
	[Address(RVA = "0x69FFA4", Offset = "0x69FFA4", VA = "0x69FFA4")]
	public void ShowParentIndicator()
	{
	}

	[Token(Token = "0x6001050")]
	[Address(RVA = "0x69FFC0", Offset = "0x69FFC0", VA = "0x69FFC0")]
	public void HideParentIndicator()
	{
	}

	[Token(Token = "0x6001051")]
	[Address(RVA = "0x69FFD8", Offset = "0x69FFD8", VA = "0x69FFD8")]
	public void UpdateForPointer(Ray pointer)
	{
	}

	[Token(Token = "0x6001052")]
	[Address(RVA = "0x6A0348", Offset = "0x6A0348", VA = "0x6A0348")]
	public void RemovePointerSelectionFeedback(float animationTime, bool immediate = false)
	{
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0x6A0570", Offset = "0x6A0570", VA = "0x6A0570")]
	public void AddPointerPositionalFeedback(float animationTime, float displacementAmount)
	{
	}

	[Token(Token = "0x6001054")]
	[Address(RVA = "0x6A01C4", Offset = "0x6A01C4", VA = "0x6A01C4")]
	private float GetRotationAmount(float angularFraction)
	{
		return default(float);
	}

	[Token(Token = "0x6001055")]
	[Address(RVA = "0x6A085C", Offset = "0x6A085C", VA = "0x6A085C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001056")]
	[Address(RVA = "0x6A089C", Offset = "0x6A089C", VA = "0x6A089C")]
	private void UpdateParentIndicator()
	{
	}

	[Token(Token = "0x6001057")]
	[Address(RVA = "0x6A09A8", Offset = "0x6A09A8", VA = "0x6A09A8")]
	private void UpdateAvailableVisuals()
	{
	}

	[Token(Token = "0x6001058")]
	[Address(RVA = "0x6A0A4C", Offset = "0x6A0A4C", VA = "0x6A0A4C")]
	protected void ShowAvailable()
	{
	}

	[Token(Token = "0x6001059")]
	[Address(RVA = "0x6A0A58", Offset = "0x6A0A58", VA = "0x6A0A58")]
	protected void ShowUnavailable()
	{
	}

	[Token(Token = "0x600105A")]
	public abstract void Select();

	[Token(Token = "0x600105B")]
	[Address(RVA = "0x6A0A64", Offset = "0x6A0A64", VA = "0x6A0A64", Slot = "7")]
	public virtual void SelectedAsParent()
	{
	}

	[Token(Token = "0x600105C")]
	[Address(RVA = "0x6A0A68", Offset = "0x6A0A68", VA = "0x6A0A68")]
	public void SwipeAway(Vector3 direction)
	{
	}

	[Token(Token = "0x600105D")]
	[Address(RVA = "0x6A0C08", Offset = "0x6A0C08", VA = "0x6A0C08")]
	public void SwipeBack()
	{
	}

	[Token(Token = "0x600105E")]
	[Address(RVA = "0x6A0D24", Offset = "0x6A0D24", VA = "0x6A0D24")]
	protected SelectableItem()
	{
	}
}
[Token(Token = "0x2000224")]
public class SelectionFeedback : MonoBehaviour
{
	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private new Transform transform;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Quaternion NOT_SET;

	[NonSerialized]
	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Quaternion restingRotation;

	[NonSerialized]
	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 restingRotationEuler;

	[Token(Token = "0x4000D54")]
	private const float yRotationAngle = 25f;

	[Token(Token = "0x4000D55")]
	private const float rotationCap = 200f;

	[NonSerialized]
	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 localDisplayPosition;

	[Token(Token = "0x600105F")]
	[Address(RVA = "0x6A0D34", Offset = "0x6A0D34", VA = "0x6A0D34")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001060")]
	[Address(RVA = "0x6A01E4", Offset = "0x6A01E4", VA = "0x6A01E4")]
	public void UpdateFeedback(float yAmount)
	{
	}

	[Token(Token = "0x6001061")]
	[Address(RVA = "0x6A0DC4", Offset = "0x6A0DC4", VA = "0x6A0DC4")]
	public SelectionFeedback()
	{
	}
}
[Token(Token = "0x2000225")]
public class KeepInFrontOfCamera : MonoBehaviour
{
	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float distanceFromCamera;

	[Token(Token = "0x4000D58")]
	private const float allowedDistanceFromOptimal = 0.15f;

	[Token(Token = "0x6001063")]
	[Address(RVA = "0x73EF94", Offset = "0x73EF94", VA = "0x73EF94")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001064")]
	[Address(RVA = "0x73F29C", Offset = "0x73F29C", VA = "0x73F29C")]
	public KeepInFrontOfCamera()
	{
	}
}
[Token(Token = "0x2000226")]
public class RectTransformMirror : MonoBehaviour
{
	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform source;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform myTransform;

	[Token(Token = "0x6001065")]
	[Address(RVA = "0x696EEC", Offset = "0x696EEC", VA = "0x696EEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001066")]
	[Address(RVA = "0x696F44", Offset = "0x696F44", VA = "0x696F44")]
	private void Start()
	{
	}

	[Token(Token = "0x6001067")]
	[Address(RVA = "0x696F48", Offset = "0x696F48", VA = "0x696F48")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6001068")]
	[Address(RVA = "0x696FA8", Offset = "0x696FA8", VA = "0x696FA8")]
	public RectTransformMirror()
	{
	}
}
[Token(Token = "0x2000227")]
public class ScaleOnCameraDistance : MonoBehaviour
{
	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float screenSpaceHeight;

	[Token(Token = "0x6001069")]
	[Address(RVA = "0x698D6C", Offset = "0x698D6C", VA = "0x698D6C")]
	private void Start()
	{
	}

	[Token(Token = "0x600106A")]
	[Address(RVA = "0x698D70", Offset = "0x698D70", VA = "0x698D70")]
	public void Refresh()
	{
	}

	[Token(Token = "0x600106B")]
	[Address(RVA = "0x698EC0", Offset = "0x698EC0", VA = "0x698EC0")]
	public ScaleOnCameraDistance()
	{
	}
}
[Token(Token = "0x2000228")]
public class ScaleOnDistanceChanged : MonoBehaviour
{
	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float screenSpaceHeight;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float ScaleOffset;

	[Token(Token = "0x600106C")]
	[Address(RVA = "0x698ED0", Offset = "0x698ED0", VA = "0x698ED0")]
	private void Update()
	{
	}

	[Token(Token = "0x600106D")]
	[Address(RVA = "0x69908C", Offset = "0x69908C", VA = "0x69908C")]
	public ScaleOnDistanceChanged()
	{
	}
}
[Token(Token = "0x2000229")]
public class Subtitles : MonoBehaviour
{
	[Token(Token = "0x2000485")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9324", Offset = "0x4A9324")]
	private sealed class <ShowCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string lineID;

		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Subtitles <>4__this;

		[Token(Token = "0x1700023A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E4A")]
			[Address(RVA = "0x6AE74C", Offset = "0x6AE74C", VA = "0x6AE74C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E4C")]
			[Address(RVA = "0x6AE7BC", Offset = "0x6AE7BC", VA = "0x6AE7BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0x6AE344", Offset = "0x6AE344", VA = "0x6AE344")]
		[DebuggerHidden]
		public <ShowCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001E48")]
		[Address(RVA = "0x6AE4B8", Offset = "0x6AE4B8", VA = "0x6AE4B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0x6AE4BC", Offset = "0x6AE4BC", VA = "0x6AE4BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0x6AE754", Offset = "0x6AE754", VA = "0x6AE754", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject appearAnimationObject;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LocalizedText label;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransformMirror speechBubbleSizeMirror;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ScaleOnCameraDistance scaler;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LayoutElement widthLimiter;

	[Token(Token = "0x600106E")]
	[Address(RVA = "0x6AE114", Offset = "0x6AE114", VA = "0x6AE114")]
	private void Start()
	{
	}

	[Token(Token = "0x600106F")]
	[Address(RVA = "0x6AE280", Offset = "0x6AE280", VA = "0x6AE280")]
	public void Show(string lineID)
	{
	}

	[Token(Token = "0x6001070")]
	[Address(RVA = "0x6AE2AC", Offset = "0x6AE2AC", VA = "0x6AE2AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B4EF0", Offset = "0x4B4EF0")]
	private IEnumerator ShowCoroutine(string lineID)
	{
		return null;
	}

	[Token(Token = "0x6001071")]
	[Address(RVA = "0x6AE370", Offset = "0x6AE370", VA = "0x6AE370")]
	public void Hide()
	{
	}

	[Token(Token = "0x6001072")]
	[Address(RVA = "0x6AE4B0", Offset = "0x6AE4B0", VA = "0x6AE4B0")]
	public Subtitles()
	{
	}
}
[Token(Token = "0x200022A")]
public class UIBoard : MonoBehaviour
{
	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator anim;

	[Token(Token = "0x6001073")]
	[Address(RVA = "0x825600", Offset = "0x825600", VA = "0x825600")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001074")]
	[Address(RVA = "0x825658", Offset = "0x825658", VA = "0x825658")]
	public void Show()
	{
	}

	[Token(Token = "0x6001075")]
	[Address(RVA = "0x825734", Offset = "0x825734", VA = "0x825734")]
	public void Hide()
	{
	}

	[Token(Token = "0x6001076")]
	[Address(RVA = "0x8257E8", Offset = "0x8257E8", VA = "0x8257E8")]
	public bool IsShowing()
	{
		return default(bool);
	}

	[Token(Token = "0x6001077")]
	[Address(RVA = "0x82584C", Offset = "0x82584C", VA = "0x82584C")]
	public UIBoard()
	{
	}
}
[Token(Token = "0x200022B")]
public class UIButton : MonoBehaviour
{
	[Token(Token = "0x2000486")]
	private enum HighlightFeedback
	{
		[Token(Token = "0x4001AA5")]
		Scale,
		[Token(Token = "0x4001AA6")]
		MoveAlongZ,
		[Token(Token = "0x4001AA7")]
		None
	}

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HighlightFeedback highlightFeedbackType;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float highlightScaleFactor;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float moveAlongZAmount;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float highlightTime;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string functionality;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject visualRoot;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 visualRootOriginalScale;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float visualRootOriginalZPos;

	[Token(Token = "0x6001078")]
	[Address(RVA = "0x825854", Offset = "0x825854", VA = "0x825854")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001079")]
	[Address(RVA = "0x82599C", Offset = "0x82599C", VA = "0x82599C")]
	public void RemoveHighlight()
	{
	}

	[Token(Token = "0x600107A")]
	[Address(RVA = "0x825B60", Offset = "0x825B60", VA = "0x825B60", Slot = "4")]
	public virtual void Highlight()
	{
	}

	[Token(Token = "0x600107B")]
	[Address(RVA = "0x825E28", Offset = "0x825E28", VA = "0x825E28")]
	public UIButton()
	{
	}
}
[Token(Token = "0x200022C")]
public class UIButtonActivatable : UIButton
{
	[Token(Token = "0x600107C")]
	[Address(RVA = "0x825EA0", Offset = "0x825EA0", VA = "0x825EA0", Slot = "4")]
	public override void Highlight()
	{
	}

	[Token(Token = "0x600107D")]
	[Address(RVA = "0x825ED8", Offset = "0x825ED8", VA = "0x825ED8")]
	public UIButtonActivatable()
	{
	}
}
[Token(Token = "0x200022D")]
public class WorldArcadeMenu : MonoBehaviour
{
	[Token(Token = "0x2000487")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9334", Offset = "0x4A9334")]
	private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WorldArcadeMenu <>4__this;

		[Token(Token = "0x1700023C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E50")]
			[Address(RVA = "0x830720", Offset = "0x830720", VA = "0x830720", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E52")]
			[Address(RVA = "0x830790", Offset = "0x830790", VA = "0x830790", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E4D")]
		[Address(RVA = "0x830390", Offset = "0x830390", VA = "0x830390")]
		[DebuggerHidden]
		public <Start>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0x830584", Offset = "0x830584", VA = "0x830584", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0x830588", Offset = "0x830588", VA = "0x830588", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0x830728", Offset = "0x830728", VA = "0x830728", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BaseCursor baseCursor;

	[Token(Token = "0x600107E")]
	[Address(RVA = "0x8302D8", Offset = "0x8302D8", VA = "0x8302D8")]
	private void LoadArcadeGame(string gameName)
	{
	}

	[Token(Token = "0x600107F")]
	[Address(RVA = "0x83031C", Offset = "0x83031C", VA = "0x83031C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B4F54", Offset = "0x4B4F54")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6001080")]
	[Address(RVA = "0x8303BC", Offset = "0x8303BC", VA = "0x8303BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001081")]
	[Address(RVA = "0x83057C", Offset = "0x83057C", VA = "0x83057C")]
	public WorldArcadeMenu()
	{
	}
}
[Token(Token = "0x200022E")]
public static class Universe
{
	[Token(Token = "0x2000488")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9344", Offset = "0x4A9344")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool showLoadingObject;

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0x827394", Offset = "0x827394", VA = "0x827394")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0x827594", Offset = "0x827594", VA = "0x827594")]
		internal void <LoadScene>b__0()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000489")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9354", Offset = "0x4A9354")]
	private sealed class <>c
	{
		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__2_2;

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__2_1;

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0x827400", Offset = "0x827400", VA = "0x827400")]
		public <>c()
		{
		}

		[Token(Token = "0x6001E57")]
		[Address(RVA = "0x827408", Offset = "0x827408", VA = "0x827408")]
		internal void <LoadScene>b__2_1()
		{
		}

		[Token(Token = "0x6001E58")]
		[Address(RVA = "0x827514", Offset = "0x827514", VA = "0x827514")]
		internal void <LoadScene>b__2_2()
		{
		}
	}

	[Token(Token = "0x4000D6D")]
	public const string worldScene = "World";

	[Token(Token = "0x6001082")]
	[Address(RVA = "0x82720C", Offset = "0x82720C", VA = "0x82720C")]
	public static void ShowWorld()
	{
	}

	[Token(Token = "0x6001083")]
	[Address(RVA = "0x827258", Offset = "0x827258", VA = "0x827258")]
	public static void LoadScene(string name, bool showLoadingObject = true)
	{
	}
}
[Token(Token = "0x200022F")]
public class ZangiefConfiguration : SingleInstanceBehavior<ZangiefConfiguration>
{
	[Token(Token = "0x200048A")]
	public enum Platform
	{
		[Token(Token = "0x4001AB1")]
		GearVR,
		[Token(Token = "0x4001AB2")]
		RiftVR,
		[Token(Token = "0x4001AB3")]
		XRSpaceVR,
		[Token(Token = "0x4001AB4")]
		PicoVR,
		[Token(Token = "0x4001AB5")]
		OpenVR
	}

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Platform platform;

	[Token(Token = "0x6001084")]
	[Address(RVA = "0x832AE4", Offset = "0x832AE4", VA = "0x832AE4")]
	public ZangiefConfiguration()
	{
	}
}
[Token(Token = "0x2000230")]
public class ZangiefStartup : MonoBehaviour
{
	[Token(Token = "0x200048B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9364", Offset = "0x4A9364")]
	private sealed class <Start>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZangiefStartup <>4__this;

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Camera <tempCamera>5__2;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <showWarning>5__3;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timeOut>5__4;

		[Token(Token = "0x1700023E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E5C")]
			[Address(RVA = "0x833494", Offset = "0x833494", VA = "0x833494", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E5E")]
			[Address(RVA = "0x833504", Offset = "0x833504", VA = "0x833504", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E59")]
		[Address(RVA = "0x832BC8", Offset = "0x832BC8", VA = "0x832BC8")]
		[DebuggerHidden]
		public <Start>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0x832D4C", Offset = "0x832D4C", VA = "0x832D4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0x832D50", Offset = "0x832D50", VA = "0x832D50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0x83349C", Offset = "0x83349C", VA = "0x83349C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D6F")]
	private const string bootScene = "Startup";

	[Token(Token = "0x4000D70")]
	private const string defaultInitialScene = "Intro";

	[Token(Token = "0x4000D71")]
	private const float warningDisplayTime = 4f;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string initialScene;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool hasBooted;

	[Token(Token = "0x6001085")]
	[Address(RVA = "0x832B54", Offset = "0x832B54", VA = "0x832B54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B4FB8", Offset = "0x4B4FB8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6001086")]
	[Address(RVA = "0x832BF4", Offset = "0x832BF4", VA = "0x832BF4")]
	public static bool HasBooted()
	{
		return default(bool);
	}

	[Token(Token = "0x6001087")]
	[Address(RVA = "0x832C5C", Offset = "0x832C5C", VA = "0x832C5C")]
	public static void StartWithScene(string sceneName)
	{
	}

	[Token(Token = "0x6001088")]
	[Address(RVA = "0x832CDC", Offset = "0x832CDC", VA = "0x832CDC")]
	public ZangiefStartup()
	{
	}
}
[Token(Token = "0x2000231")]
public class ZangiefTracking : SingletonBehavior<ZangiefTracking>
{
	[Token(Token = "0x600108A")]
	[Address(RVA = "0x83350C", Offset = "0x83350C", VA = "0x83350C")]
	public static void SendProgressionUpdate(Progression.GameState specifiedState, float timeSinceLastState)
	{
	}

	[Token(Token = "0x600108B")]
	[Address(RVA = "0x8338E4", Offset = "0x8338E4", VA = "0x8338E4")]
	public static Tracking.TrackingEvent AddItemData(Tracking.TrackingEvent ev, InventoryCatalogue.ItemID itemId)
	{
		return null;
	}

	[Token(Token = "0x600108C")]
	[Address(RVA = "0x833B20", Offset = "0x833B20", VA = "0x833B20")]
	public static Tracking.TrackingEvent AddCurrentTickets(Tracking.TrackingEvent ev)
	{
		return null;
	}

	[Token(Token = "0x600108D")]
	[Address(RVA = "0x833C20", Offset = "0x833C20", VA = "0x833C20")]
	public static void SendPassAndPlayEvents(string eventName, [Optional] string currentState, [Optional] int? numberOfPlayers, [Optional] string currentMinigame, [Optional] object level)
	{
	}

	[Token(Token = "0x600108E")]
	[Address(RVA = "0x833F9C", Offset = "0x833F9C", VA = "0x833F9C")]
	public ZangiefTracking()
	{
	}
}
[Token(Token = "0x2000232")]
public class MixerSnapShotSwitcher : MonoBehaviour
{
	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x600108F")]
	[Address(RVA = "0x641B58", Offset = "0x641B58", VA = "0x641B58")]
	private void Start()
	{
	}

	[Token(Token = "0x6001090")]
	[Address(RVA = "0x641C2C", Offset = "0x641C2C", VA = "0x641C2C")]
	public MixerSnapShotSwitcher()
	{
	}
}
[Token(Token = "0x2000233")]
public class CirclePositioning : MonoBehaviour
{
	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeForOneLap;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float radius;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float altitudeSpeed;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float amplitude;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform centerPosition;

	[Token(Token = "0x6001091")]
	[Address(RVA = "0x6D04F8", Offset = "0x6D04F8", VA = "0x6D04F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001092")]
	[Address(RVA = "0x6D072C", Offset = "0x6D072C", VA = "0x6D072C")]
	public CirclePositioning()
	{
	}
}
[Token(Token = "0x2000234")]
public class WaypointMovement : MonoBehaviour
{
	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] Waypoints;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform departingWP;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform arrivingWP;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int waypointIndex;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform ourTransform;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool shouldRandomizeStart;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float currentAnimationProgress;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float AnimationSpeed;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float animationDuration;

	[Token(Token = "0x6001093")]
	[Address(RVA = "0x82EC54", Offset = "0x82EC54", VA = "0x82EC54")]
	private void Start()
	{
	}

	[Token(Token = "0x6001094")]
	[Address(RVA = "0x82EE98", Offset = "0x82EE98", VA = "0x82EE98")]
	private void Update()
	{
	}

	[Token(Token = "0x6001095")]
	[Address(RVA = "0x82ECA4", Offset = "0x82ECA4", VA = "0x82ECA4")]
	private void SetWaypoint(int index)
	{
	}

	[Token(Token = "0x6001096")]
	[Address(RVA = "0x82F034", Offset = "0x82F034", VA = "0x82F034")]
	public WaypointMovement()
	{
	}
}
[Token(Token = "0x2000235")]
public class Dummy : MonoBehaviour
{
	[Token(Token = "0x6001097")]
	[Address(RVA = "0x71B104", Offset = "0x71B104", VA = "0x71B104")]
	private void Start()
	{
	}

	[Token(Token = "0x6001098")]
	[Address(RVA = "0x71B108", Offset = "0x71B108", VA = "0x71B108")]
	private void Update()
	{
	}

	[Token(Token = "0x6001099")]
	[Address(RVA = "0x71B10C", Offset = "0x71B10C", VA = "0x71B10C")]
	public Dummy()
	{
	}
}
[Token(Token = "0x2000236")]
public class NpcSoundListener : MonoBehaviour
{
	[Token(Token = "0x600109A")]
	[Address(RVA = "0x642928", Offset = "0x642928", VA = "0x642928")]
	public void chefangry()
	{
	}

	[Token(Token = "0x600109B")]
	[Address(RVA = "0x6429C0", Offset = "0x6429C0", VA = "0x6429C0")]
	public void VoNpcHello()
	{
	}

	[Token(Token = "0x600109C")]
	[Address(RVA = "0x642A58", Offset = "0x642A58", VA = "0x642A58")]
	public void clap1()
	{
	}

	[Token(Token = "0x600109D")]
	[Address(RVA = "0x642B34", Offset = "0x642B34", VA = "0x642B34")]
	public void present()
	{
	}

	[Token(Token = "0x600109E")]
	[Address(RVA = "0x642BCC", Offset = "0x642BCC", VA = "0x642BCC")]
	public void present01()
	{
	}

	[Token(Token = "0x600109F")]
	[Address(RVA = "0x642C64", Offset = "0x642C64", VA = "0x642C64")]
	public void cry()
	{
	}

	[Token(Token = "0x60010A0")]
	[Address(RVA = "0x642CFC", Offset = "0x642CFC", VA = "0x642CFC")]
	public void facepalm()
	{
	}

	[Token(Token = "0x60010A1")]
	[Address(RVA = "0x642D94", Offset = "0x642D94", VA = "0x642D94")]
	public void glad()
	{
	}

	[Token(Token = "0x60010A2")]
	[Address(RVA = "0x642E2C", Offset = "0x642E2C", VA = "0x642E2C")]
	public void glad2()
	{
	}

	[Token(Token = "0x60010A3")]
	[Address(RVA = "0x642EC4", Offset = "0x642EC4", VA = "0x642EC4")]
	public void glad3()
	{
	}

	[Token(Token = "0x60010A4")]
	[Address(RVA = "0x642F5C", Offset = "0x642F5C", VA = "0x642F5C")]
	public void shakehead()
	{
	}

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0x642FF4", Offset = "0x642FF4", VA = "0x642FF4")]
	public void goodjob()
	{
	}

	[Token(Token = "0x60010A6")]
	[Address(RVA = "0x64308C", Offset = "0x64308C", VA = "0x64308C")]
	public void goodjob2()
	{
	}

	[Token(Token = "0x60010A7")]
	[Address(RVA = "0x643124", Offset = "0x643124", VA = "0x643124")]
	public void goodjob3()
	{
	}

	[Token(Token = "0x60010A8")]
	[Address(RVA = "0x6431BC", Offset = "0x6431BC", VA = "0x6431BC")]
	public void upset()
	{
	}

	[Token(Token = "0x60010A9")]
	[Address(RVA = "0x643254", Offset = "0x643254", VA = "0x643254")]
	public void moustache()
	{
	}

	[Token(Token = "0x60010AA")]
	[Address(RVA = "0x6432EC", Offset = "0x6432EC", VA = "0x6432EC")]
	public void idle02()
	{
	}

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0x643384", Offset = "0x643384", VA = "0x643384")]
	public void clap2()
	{
	}

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0x64341C", Offset = "0x64341C", VA = "0x64341C")]
	public void Whistle()
	{
	}

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0x6434B4", Offset = "0x6434B4", VA = "0x6434B4")]
	public void Blownose()
	{
	}

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0x64354C", Offset = "0x64354C", VA = "0x64354C")]
	public void pickear()
	{
	}

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0x6435E4", Offset = "0x6435E4", VA = "0x6435E4")]
	public void scratch()
	{
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0x64367C", Offset = "0x64367C", VA = "0x64367C")]
	public void idledummy()
	{
	}

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0x643680", Offset = "0x643680", VA = "0x643680")]
	public void hat()
	{
	}

	[Token(Token = "0x60010B2")]
	[Address(RVA = "0x643718", Offset = "0x643718", VA = "0x643718")]
	public NpcSoundListener()
	{
	}
}
[Token(Token = "0x2000237")]
public abstract class RGVersion
{
	[Token(Token = "0x4000D83")]
	public const string VERSION = "1.10.112831";

	[Token(Token = "0x60010B3")]
	[Address(RVA = "0x696B24", Offset = "0x696B24", VA = "0x696B24")]
	protected RGVersion()
	{
	}
}
[Token(Token = "0x2000238")]
public class MeshCombinator : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200048C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9374", Offset = "0x4A9374")]
	private sealed class <>c
	{
		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<MeshFilter, int> <>9__7_0;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<Material, string> <>9__15_0;

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0x63FB74", Offset = "0x63FB74", VA = "0x63FB74")]
		public <>c()
		{
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0x63FB7C", Offset = "0x63FB7C", VA = "0x63FB7C")]
		internal int <Combine>b__7_0(MeshFilter filter)
		{
			return default(int);
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0x63FC20", Offset = "0x63FC20", VA = "0x63FC20")]
		internal string <GetEnabledMeshesFromFilters>b__15_0(Material material)
		{
			return null;
		}
	}

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "DefaultValueAttribute", RVA = "0x4AD5BC", Offset = "0x4AD5BC")]
	public bool CombineAutomatically;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> CombinedGameObjects;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<GameObject> objectsUsed;

	[Token(Token = "0x4000D87")]
	private const float MaxVertices = 65000f;

	[Token(Token = "0x60010B4")]
	[Address(RVA = "0x63E45C", Offset = "0x63E45C", VA = "0x63E45C")]
	public MeshCombinator()
	{
	}

	[Token(Token = "0x60010B5")]
	[Address(RVA = "0x63E4F8", Offset = "0x63E4F8", VA = "0x63E4F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60010B6")]
	[Address(RVA = "0x63EB68", Offset = "0x63EB68", VA = "0x63EB68")]
	private void Update()
	{
	}

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0x63E580", Offset = "0x63E580", VA = "0x63E580")]
	public void Combine()
	{
	}

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0x63ECF8", Offset = "0x63ECF8", VA = "0x63ECF8")]
	private GameObject SetupCombinedGameObject(List<CombineInstance> combineInstances, List<Material> materials, MeshFilter nameFilter, int nameIndex)
	{
		return null;
	}

	[Token(Token = "0x60010B9")]
	[Address(RVA = "0x63F1EC", Offset = "0x63F1EC", VA = "0x63F1EC")]
	private static void AddMeshRendererToCombinedGameObject(List<Material> sharedMaterials, GameObject combinedGameObject)
	{
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0x63F100", Offset = "0x63F100", VA = "0x63F100")]
	private static void AddMeshFilterToCombinedGameObject(CombineInstance[] combineInstances, GameObject combinedGameObject)
	{
	}

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0x63EBDC", Offset = "0x63EBDC", VA = "0x63EBDC")]
	private static Transform GetTransformFromFiltersPair(KeyValuePair<string, List<MeshFilter>> filtersPair, int i, int filtersInSplit, int j)
	{
		return null;
	}

	[Token(Token = "0x60010BC")]
	[Address(RVA = "0x63EC88", Offset = "0x63EC88", VA = "0x63EC88")]
	private void SaveToObjectsUsed(GameObject gameObject)
	{
	}

	[Token(Token = "0x60010BD")]
	[Address(RVA = "0x63F298", Offset = "0x63F298", VA = "0x63F298")]
	public void UnCombine()
	{
	}

	[Token(Token = "0x60010BE")]
	[Address(RVA = "0x63EB6C", Offset = "0x63EB6C", VA = "0x63EB6C")]
	private Dictionary<string, List<MeshFilter>> GetEnabledMeshes()
	{
		return null;
	}

	[Token(Token = "0x60010BF")]
	[Address(RVA = "0x63F558", Offset = "0x63F558", VA = "0x63F558")]
	private Dictionary<string, List<MeshFilter>> GetEnabledMeshesFromFilters(MeshFilter[] filters)
	{
		return null;
	}

	[Token(Token = "0x60010C0")]
	[Address(RVA = "0x63FA78", Offset = "0x63FA78", VA = "0x63FA78")]
	private static bool IsRendererEnabled(MeshRenderer renderer)
	{
		return default(bool);
	}

	[Token(Token = "0x60010C1")]
	[Address(RVA = "0x63F408", Offset = "0x63F408", VA = "0x63F408")]
	private void EnableRenderers(List<GameObject> gameObjects)
	{
	}

	[Token(Token = "0x60010C2")]
	[Address(RVA = "0x63EFB0", Offset = "0x63EFB0", VA = "0x63EFB0")]
	private void DisableRenderers(List<GameObject> gameObjects)
	{
	}
}
namespace RG
{
	[Token(Token = "0x2000239")]
	public enum Handedness : byte
	{
		[Token(Token = "0x4000D89")]
		None,
		[Token(Token = "0x4000D8A")]
		Right,
		[Token(Token = "0x4000D8B")]
		Left
	}
	[Token(Token = "0x200023A")]
	public enum ConnectionState
	{
		[Token(Token = "0x4000D8D")]
		Error = -1,
		[Token(Token = "0x4000D8E")]
		Disconnected,
		[Token(Token = "0x4000D8F")]
		Scanning,
		[Token(Token = "0x4000D90")]
		Connecting,
		[Token(Token = "0x4000D91")]
		Connected
	}
	[Token(Token = "0x200023B")]
	public enum InputMode
	{
		[Token(Token = "0x4000D93")]
		Headset = 1,
		[Token(Token = "0x4000D94")]
		Controller_3DoF = 2,
		[Token(Token = "0x4000D95")]
		Controller_6DoF = 4,
		[Token(Token = "0x4000D96")]
		Gamepad = 8
	}
	[Token(Token = "0x200023C")]
	public enum InputSource
	{
		[Token(Token = "0x4000D98")]
		Special = 1,
		[Token(Token = "0x4000D99")]
		One = 2,
		[Token(Token = "0x4000D9A")]
		Two = 4,
		[Token(Token = "0x4000D9B")]
		Three = 8,
		[Token(Token = "0x4000D9C")]
		Four = 0x10,
		[Token(Token = "0x4000D9D")]
		IndexTrigger = 0x20,
		[Token(Token = "0x4000D9E")]
		GripTrigger = 0x40,
		[Token(Token = "0x4000D9F")]
		Touchpad = 0x80,
		[Token(Token = "0x4000DA0")]
		Thumbstick = 0x100
	}
	[Token(Token = "0x200023D")]
	public class InputWrapperPico : InputWrapper
	{
		[Token(Token = "0x200048D")]
		private enum button_method_type
		{
			[Token(Token = "0x4001AC0")]
			begin,
			[Token(Token = "0x4001AC1")]
			hold,
			[Token(Token = "0x4001AC2")]
			end
		}

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Pvr_KeyCode[] menuButton;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Pvr_KeyCode[] triggerButton;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Pvr_KeyCode[] gripButton;

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Pvr_KeyCode[] noButton;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool[] heldPreviously;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool[] heldNow;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private button_method_type?[] gripState;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float[] gripTriggerValue;

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x7CB8F0", Offset = "0x7CB8F0", VA = "0x7CB8F0")]
		public static int GetControllerHand(Handedness hand)
		{
			return default(int);
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0x7CB994", Offset = "0x7CB994", VA = "0x7CB994")]
		public static Handedness GetControllerHand(int hand)
		{
			return default(Handedness);
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x7CB9AC", Offset = "0x7CB9AC", VA = "0x7CB9AC", Slot = "10")]
		public override Handedness GetHandedness()
		{
			return default(Handedness);
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x7CB9E8", Offset = "0x7CB9E8", VA = "0x7CB9E8")]
		public static bool isPicoControllerInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0x7CBA58", Offset = "0x7CBA58", VA = "0x7CBA58", Slot = "8")]
		public override bool IsControllerActive()
		{
			return default(bool);
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0x7CBA60", Offset = "0x7CBA60", VA = "0x7CBA60", Slot = "16")]
		public override Vector2 GetControllerTouchPosition(InputMode inputMode, Handedness hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0x7CBA7C", Offset = "0x7CBA7C", VA = "0x7CBA7C", Slot = "15")]
		public override Vector3 GetControllerWristPosition(InputMode inputMode, Handedness hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0x7CBA8C", Offset = "0x7CBA8C", VA = "0x7CBA8C", Slot = "11")]
		public override Vector3 GetControllerAcceleration(InputMode inputMode, Handedness hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0x7CBAA8", Offset = "0x7CBAA8", VA = "0x7CBAA8", Slot = "13")]
		public override Vector3 GetControllerAngularVelocity(InputMode inputMode, Handedness hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0x7CBAC4", Offset = "0x7CBAC4", VA = "0x7CBAC4", Slot = "12")]
		public override Quaternion GetControllerOrientation(InputMode inputMode, Handedness hand)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0x7CBB48", Offset = "0x7CBB48", VA = "0x7CBB48", Slot = "18")]
		public override Vector2 GetAxis2D(InputSource axis, InputMode inputMode, Handedness hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0x7CBBCC", Offset = "0x7CBBCC", VA = "0x7CBBCC", Slot = "14")]
		public override Vector3 GetControllerLocalPosition(InputMode inputMode, Handedness hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x7CBDCC", Offset = "0x7CBDCC", VA = "0x7CBDCC", Slot = "17")]
		public override float GetAxis(InputSource axis, InputMode inputMode, Handedness hand)
		{
			return default(float);
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0x7CBF50", Offset = "0x7CBF50", VA = "0x7CBF50")]
		private int HoldingCountOnHand(int hand, button_method_type bmt, int buttonCode)
		{
			return default(int);
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0x7CC0C0", Offset = "0x7CC0C0", VA = "0x7CC0C0")]
		private Pvr_KeyCode[] PicoButtonMapping(int buttonCode)
		{
			return null;
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0x7CBEF4", Offset = "0x7CBEF4", VA = "0x7CBEF4")]
		private int PicoButtonCode(InputSource button)
		{
			return default(int);
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0x7CC288", Offset = "0x7CC288", VA = "0x7CC288")]
		private bool HandleButtonCode(button_method_type bmt, InputSource button, Handedness hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x7CC37C", Offset = "0x7CC37C", VA = "0x7CC37C")]
		private bool isGripping(int handIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x7CC4B4", Offset = "0x7CC4B4", VA = "0x7CC4B4")]
		public void Update()
		{
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x7CC608", Offset = "0x7CC608", VA = "0x7CC608")]
		public void UpdateGripButton(int picoHand)
		{
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x7CCA04", Offset = "0x7CCA04", VA = "0x7CCA04")]
		private bool HandleGripButton(button_method_type requestedMethod, Handedness hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x7CCB80", Offset = "0x7CCB80", VA = "0x7CCB80")]
		private bool HandleInputSource(InputSource button, button_method_type bmt, Handedness hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x7CCBF8", Offset = "0x7CCBF8", VA = "0x7CCBF8", Slot = "19")]
		public override bool GetButtonDown(InputSource button, InputMode inputMode, Handedness hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x7CCC00", Offset = "0x7CCC00", VA = "0x7CCC00", Slot = "20")]
		public override bool GetButtonUp(InputSource button, InputMode inputMode, Handedness hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x7CCC08", Offset = "0x7CCC08", VA = "0x7CCC08", Slot = "21")]
		public override bool GetButton(InputSource button, InputMode inputMode, Handedness hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x7CCC10", Offset = "0x7CCC10", VA = "0x7CCC10")]
		public InputWrapperPico()
		{
		}
	}
}
namespace Psyduck
{
	[Token(Token = "0x200023E")]
	public class GameState : SingleInstanceBehavior<GameState>
	{
		[Token(Token = "0x200048E")]
		private enum State
		{
			[Token(Token = "0x4001AC4")]
			Pregame,
			[Token(Token = "0x4001AC5")]
			WaitingForSpin,
			[Token(Token = "0x4001AC6")]
			WaitingForWheel,
			[Token(Token = "0x4001AC7")]
			ShowPrize,
			[Token(Token = "0x4001AC8")]
			ExitingToWorld,
			[Token(Token = "0x4001AC9")]
			Transition
		}

		[Token(Token = "0x200048F")]
		private enum SpinDirection
		{
			[Token(Token = "0x4001ACB")]
			Clockwise,
			[Token(Token = "0x4001ACC")]
			CounterClockwise
		}

		[Token(Token = "0x2000490")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9384", Offset = "0x4A9384")]
		private sealed class <EnterPregameCoroutine>d__50 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001ACD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001ACE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001ACF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameState <>4__this;

			[Token(Token = "0x17000240")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E66")]
				[Address(RVA = "0x9CB0D0", Offset = "0x9CB0D0", VA = "0x9CB0D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000241")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E68")]
				[Address(RVA = "0x9CB140", Offset = "0x9CB140", VA = "0x9CB140", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E63")]
			[Address(RVA = "0x9CAE88", Offset = "0x9CAE88", VA = "0x9CAE88")]
			[DebuggerHidden]
			public <EnterPregameCoroutine>d__50(int <>1__state)
			{
			}

			[Token(Token = "0x6001E64")]
			[Address(RVA = "0x9CAEB4", Offset = "0x9CAEB4", VA = "0x9CAEB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E65")]
			[Address(RVA = "0x9CAEB8", Offset = "0x9CAEB8", VA = "0x9CAEB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E67")]
			[Address(RVA = "0x9CB0D8", Offset = "0x9CB0D8", VA = "0x9CB0D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000491")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9394", Offset = "0x4A9394")]
		private sealed class <EnterWaitingForSpinCoroutine>d__53 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameState <>4__this;

			[Token(Token = "0x17000242")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E6C")]
				[Address(RVA = "0x9CBA58", Offset = "0x9CBA58", VA = "0x9CBA58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000243")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E6E")]
				[Address(RVA = "0x9CBAC8", Offset = "0x9CBAC8", VA = "0x9CBAC8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E69")]
			[Address(RVA = "0x9CB8A0", Offset = "0x9CB8A0", VA = "0x9CB8A0")]
			[DebuggerHidden]
			public <EnterWaitingForSpinCoroutine>d__53(int <>1__state)
			{
			}

			[Token(Token = "0x6001E6A")]
			[Address(RVA = "0x9CB8CC", Offset = "0x9CB8CC", VA = "0x9CB8CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E6B")]
			[Address(RVA = "0x9CB8D0", Offset = "0x9CB8D0", VA = "0x9CB8D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E6D")]
			[Address(RVA = "0x9CBA60", Offset = "0x9CBA60", VA = "0x9CBA60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000492")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A93A4", Offset = "0x4A93A4")]
		private sealed class <ShowWaitSpotlights>d__61 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameState <>4__this;

			[Token(Token = "0x4001AD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private WaitForSeconds <wait>5__2;

			[Token(Token = "0x4001AD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private PsyduckSpotlight[] <>7__wrap2;

			[Token(Token = "0x4001AD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>7__wrap3;

			[Token(Token = "0x17000244")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E72")]
				[Address(RVA = "0x9CBE00", Offset = "0x9CBE00", VA = "0x9CBE00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000245")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E74")]
				[Address(RVA = "0x9CBE70", Offset = "0x9CBE70", VA = "0x9CBE70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E6F")]
			[Address(RVA = "0x9CBC08", Offset = "0x9CBC08", VA = "0x9CBC08")]
			[DebuggerHidden]
			public <ShowWaitSpotlights>d__61(int <>1__state)
			{
			}

			[Token(Token = "0x6001E70")]
			[Address(RVA = "0x9CBC34", Offset = "0x9CBC34", VA = "0x9CBC34", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E71")]
			[Address(RVA = "0x9CBC38", Offset = "0x9CBC38", VA = "0x9CBC38", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E73")]
			[Address(RVA = "0x9CBE08", Offset = "0x9CBE08", VA = "0x9CBE08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000493")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A93B4", Offset = "0x4A93B4")]
		private sealed class <ShowWinSpotlights>d__62 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001ADA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001ADB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameState <>4__this;

			[Token(Token = "0x4001ADC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private WaitForSeconds <wait>5__2;

			[Token(Token = "0x4001ADD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private PsyduckSpotlight[] <>7__wrap2;

			[Token(Token = "0x4001ADE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>7__wrap3;

			[Token(Token = "0x17000246")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E78")]
				[Address(RVA = "0x9CC084", Offset = "0x9CC084", VA = "0x9CC084", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000247")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E7A")]
				[Address(RVA = "0x9CC0F4", Offset = "0x9CC0F4", VA = "0x9CC0F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E75")]
			[Address(RVA = "0x9CBE78", Offset = "0x9CBE78", VA = "0x9CBE78")]
			[DebuggerHidden]
			public <ShowWinSpotlights>d__62(int <>1__state)
			{
			}

			[Token(Token = "0x6001E76")]
			[Address(RVA = "0x9CBEA4", Offset = "0x9CBEA4", VA = "0x9CBEA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E77")]
			[Address(RVA = "0x9CBEA8", Offset = "0x9CBEA8", VA = "0x9CBEA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E79")]
			[Address(RVA = "0x9CC08C", Offset = "0x9CC08C", VA = "0x9CC08C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000494")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A93C4", Offset = "0x4A93C4")]
		private sealed class <EnterShowPrizeCoroutine>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001ADF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PrizeDefinition prizeDefinition;

			[Token(Token = "0x4001AE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameState <>4__this;

			[Token(Token = "0x17000248")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E7E")]
				[Address(RVA = "0x9CB828", Offset = "0x9CB828", VA = "0x9CB828", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000249")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E80")]
				[Address(RVA = "0x9CB898", Offset = "0x9CB898", VA = "0x9CB898", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E7B")]
			[Address(RVA = "0x9CB148", Offset = "0x9CB148", VA = "0x9CB148")]
			[DebuggerHidden]
			public <EnterShowPrizeCoroutine>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6001E7C")]
			[Address(RVA = "0x9CB174", Offset = "0x9CB174", VA = "0x9CB174", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E7D")]
			[Address(RVA = "0x9CB178", Offset = "0x9CB178", VA = "0x9CB178", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E7F")]
			[Address(RVA = "0x9CB830", Offset = "0x9CB830", VA = "0x9CB830", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000495")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A93D4", Offset = "0x4A93D4")]
		private sealed class <GenericTransitionCoroutine>d__67 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameState <>4__this;

			[Token(Token = "0x4001AE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IEnumerator specificTransitionCoroutine;

			[Token(Token = "0x4001AE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public State newState;

			[Token(Token = "0x1700024A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E84")]
				[Address(RVA = "0x9CBB90", Offset = "0x9CBB90", VA = "0x9CBB90", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E86")]
				[Address(RVA = "0x9CBC00", Offset = "0x9CBC00", VA = "0x9CBC00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E81")]
			[Address(RVA = "0x9CBAD0", Offset = "0x9CBAD0", VA = "0x9CBAD0")]
			[DebuggerHidden]
			public <GenericTransitionCoroutine>d__67(int <>1__state)
			{
			}

			[Token(Token = "0x6001E82")]
			[Address(RVA = "0x9CBAFC", Offset = "0x9CBAFC", VA = "0x9CBAFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E83")]
			[Address(RVA = "0x9CBB00", Offset = "0x9CBB00", VA = "0x9CBB00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E85")]
			[Address(RVA = "0x9CBB98", Offset = "0x9CBB98", VA = "0x9CBB98", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AnimationCurve slowdownVelocityCurve;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x4AD5E0", Offset = "0x4AD5E0")]
		[SerializeField]
		private AnimationCurve spinDurationCurve;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AD62C", Offset = "0x4AD62C")]
		[SerializeField]
		private float failedSpinDecaySpeed;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PrizeDefinition winPrize;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private State currentState;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private SpinDirection spinDirection;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WheelInteraction wheelInteraction;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ParallaxRotator[] rotators;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PrizeSlot[] prizeSlots;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private WheelLamps wheelLamps;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PsyduckSpotlight[] spotlights;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform wheelTransform;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 wheelOrigo;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 wheelAngleVector;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float previousAngle;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float totalAnglesToSpin;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float wheelAngleAtSpinStart;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float waitingForWheelCurrentTargetAngle;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float changePrizeCounter;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float numberOfPrizeSwitchesOnSpin;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int numOfPrizesSwitched;

		[Token(Token = "0x4000DBE")]
		private const int slotsToReachTopPositionFromBottom = 5;

		[Token(Token = "0x4000DBF")]
		private const float minVelocityForPrize = 2f;

		[Token(Token = "0x4000DC0")]
		private const float durationPregameTransition = 0.6f;

		[Token(Token = "0x4000DC1")]
		private const float durationGameTransition = 0.6f;

		[Token(Token = "0x4000DC2")]
		private const float durationShowPrizeTransition = 1.2f;

		[Token(Token = "0x4000DC3")]
		private const float durationExitToWorldTransition = 2.4f;

		[Token(Token = "0x4000DC4")]
		private const int frameCountAverageVelocity = 10;

		[Token(Token = "0x4000DC5")]
		private const float wheelBoostFactor = 1f;

		[Token(Token = "0x4000DC6")]
		private const float numSegments = 10f;

		[Token(Token = "0x4000DC7")]
		private const float degPerSegment = 36f;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float[] averageVelocityRingBuffer;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int averageVelocityRingBufferIndex;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float wheelAngle;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float wheelFrameVelocity;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float spinDuration;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float spunTime;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool isGrabbing;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC5")]
		private bool audioIsPaused;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private WaitForSeconds pregameWait;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private WaitForSeconds waitBeforeSpin;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private WaitForSeconds waitForSpotlight;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private WaitForSeconds waitShowPrize;

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x66D00C", Offset = "0x66D00C", VA = "0x66D00C")]
		private void Start()
		{
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x66D378", Offset = "0x66D378", VA = "0x66D378", Slot = "5")]
		public override void OnDestroy()
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x66D554", Offset = "0x66D554", VA = "0x66D554")]
		private void Update()
		{
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x66D6D8", Offset = "0x66D6D8", VA = "0x66D6D8")]
		private void DecayFailedSpinVelocity()
		{
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0x66D33C", Offset = "0x66D33C", VA = "0x66D33C")]
		private void EnterPregame()
		{
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x66DB24", Offset = "0x66DB24", VA = "0x66DB24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B501C", Offset = "0x4B501C")]
		private IEnumerator EnterPregameCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0x66DBC4", Offset = "0x66DBC4", VA = "0x66DBC4")]
		private void OnTutorialClickedExitPregame()
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x66DC50", Offset = "0x66DC50", VA = "0x66DC50")]
		private void EnterGame()
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0x66DC8C", Offset = "0x66DC8C", VA = "0x66DC8C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B5080", Offset = "0x4B5080")]
		private IEnumerator EnterWaitingForSpinCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x66DD00", Offset = "0x66DD00", VA = "0x66DD00")]
		private void ExitWaitingForSpin()
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x66E3A0", Offset = "0x66E3A0", VA = "0x66E3A0")]
		private bool IsBackButtonEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x66D6D4", Offset = "0x66D6D4", VA = "0x66D6D4")]
		private void PauseAudioOnPause()
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x66DDAC", Offset = "0x66DDAC", VA = "0x66DDAC")]
		private void EnterWaitingForWheel()
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x66D79C", Offset = "0x66D79C", VA = "0x66D79C")]
		private void UpdateWaitingForWheel()
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x66E6E8", Offset = "0x66E6E8", VA = "0x66E6E8")]
		private void ExitWaitingForWheel()
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x66E7D0", Offset = "0x66E7D0", VA = "0x66E7D0")]
		private void EnterShowPrize()
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0x66E674", Offset = "0x66E674", VA = "0x66E674")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B50E4", Offset = "0x4B50E4")]
		private IEnumerator ShowWaitSpotlights()
		{
			return null;
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x66EB00", Offset = "0x66EB00", VA = "0x66EB00")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B5148", Offset = "0x4B5148")]
		private IEnumerator ShowWinSpotlights()
		{
			return null;
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x66EA68", Offset = "0x66EA68", VA = "0x66EA68")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B51AC", Offset = "0x4B51AC")]
		private IEnumerator EnterShowPrizeCoroutine(PrizeDefinition prizeDefinition)
		{
			return null;
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x66D898", Offset = "0x66D898", VA = "0x66D898")]
		private void ExitShowPrize()
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x66EB74", Offset = "0x66EB74", VA = "0x66EB74")]
		private void ExitToWorld()
		{
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x66DB98", Offset = "0x66DB98", VA = "0x66DB98")]
		private void TransitionToStateWithCoroutine(State newState, IEnumerator transitionCoroutine)
		{
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x66EBE8", Offset = "0x66EBE8", VA = "0x66EBE8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B5210", Offset = "0x4B5210")]
		private IEnumerator GenericTransitionCoroutine(State newState, IEnumerator specificTransitionCoroutine)
		{
			return null;
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0x66EC98", Offset = "0x66EC98", VA = "0x66EC98")]
		private void OnGrabWheel(GameObject wheel, Vector3 hitPoint)
		{
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x66EE60", Offset = "0x66EE60", VA = "0x66EE60")]
		private void OnGrabWheelUpdate(Vector3 hitPoint)
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x66EFF4", Offset = "0x66EFF4", VA = "0x66EFF4")]
		private void OnReleaseWheel()
		{
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x66F26C", Offset = "0x66F26C", VA = "0x66F26C")]
		private void PlacePrizeInInventory()
		{
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x66EDDC", Offset = "0x66EDDC", VA = "0x66EDDC")]
		private float CalculateWheelAngle()
		{
			return default(float);
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0x66EF74", Offset = "0x66EF74", VA = "0x66EF74")]
		private void AddFrameVelocity(float currentFrameVelocity)
		{
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x66F1E8", Offset = "0x66F1E8", VA = "0x66F1E8")]
		private float CalculateAverageFrameVelocity()
		{
			return default(float);
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x66D984", Offset = "0x66D984", VA = "0x66D984")]
		private void RotateWheelToAngle(float targetAngle, float DeltaAngle)
		{
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x66F578", Offset = "0x66F578", VA = "0x66F578")]
		private void UpdateSpinDirection(float deltaAngle)
		{
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0x66F588", Offset = "0x66F588", VA = "0x66F588")]
		private void updatePrizeOnBottomSegment(int segmentIndexFromBottom)
		{
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x66EA60", Offset = "0x66EA60", VA = "0x66EA60")]
		private int GetTopSegment()
		{
			return default(int);
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x66E540", Offset = "0x66E540", VA = "0x66E540")]
		private int GetTopSegmentIfWheelAtAngle(float angle)
		{
			return default(int);
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0x66E5E4", Offset = "0x66E5E4", VA = "0x66E5E4")]
		private PrizeSlot GetSlotForSegment(int segment)
		{
			return null;
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x66E518", Offset = "0x66E518", VA = "0x66E518")]
		private float Mod(float a, float b)
		{
			return default(float);
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0x66F820", Offset = "0x66F820", VA = "0x66F820")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0x66F900", Offset = "0x66F900", VA = "0x66F900")]
		public GameState()
		{
		}
	}
	[Token(Token = "0x200023F")]
	public class PrizeSlot : MonoBehaviour
	{
		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int slotIndex;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PrizeDefinition prizeDefinition;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material material;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Renderer myRenderer;

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x9CC0FC", Offset = "0x9CC0FC", VA = "0x9CC0FC")]
		public PrizeDefinition GetPrizeDefinition()
		{
			return null;
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0x9CC104", Offset = "0x9CC104", VA = "0x9CC104")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0x9CC1F0", Offset = "0x9CC1F0", VA = "0x9CC1F0")]
		private void OnPrizePoolReady()
		{
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0x9CC2D4", Offset = "0x9CC2D4", VA = "0x9CC2D4")]
		public void DrawNewPrizeFromPool()
		{
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0x9CC260", Offset = "0x9CC260", VA = "0x9CC260")]
		private void RefreshPresentation()
		{
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0x9CC344", Offset = "0x9CC344", VA = "0x9CC344")]
		public void SetPrize(PrizeDefinition prize)
		{
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0x9CC34C", Offset = "0x9CC34C", VA = "0x9CC34C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0x9CC404", Offset = "0x9CC404", VA = "0x9CC404")]
		public PrizeSlot()
		{
		}
	}
	[Token(Token = "0x2000240")]
	public class WheelInteraction : SingletonBehavior<WheelInteraction>
	{
		[Token(Token = "0x4000DD8")]
		private const float rayLength = 20f;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform handTransform;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform myTransform;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int layerMask;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Ray ray;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject grabbedObject;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject handOpenObject;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameObject handClosedObject;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Action<GameObject, Vector3> onGrabCallback;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Action<Vector3> onGrabUpdateCallback;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Action onReleaseCallback;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Plane grabbedPlane;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool hitLastFrame;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool isEnabled;

		[Token(Token = "0x170000E8")]
		public bool IsGrabbing
		{
			[Token(Token = "0x600110C")]
			[Address(RVA = "0x9CC414", Offset = "0x9CC414", VA = "0x9CC414")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0x9CC484", Offset = "0x9CC484", VA = "0x9CC484")]
		private void Start()
		{
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0x9CBA40", Offset = "0x9CBA40", VA = "0x9CBA40")]
		public void SetCallbacks(Action<GameObject, Vector3> newOnGrabCallback, Action<Vector3> newOnGrabUpdate, Action newOnReleaseCallback)
		{
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0x9CC644", Offset = "0x9CC644", VA = "0x9CC644")]
		public void Disable()
		{
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0x9CBA4C", Offset = "0x9CBA4C", VA = "0x9CBA4C")]
		public void Enable()
		{
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0x9CC714", Offset = "0x9CC714", VA = "0x9CC714")]
		private void Update()
		{
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0x9CCC90", Offset = "0x9CCC90", VA = "0x9CCC90")]
		private void Grab(GameObject newGrabbedObject, Vector3 grabPoint)
		{
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0x9CCBFC", Offset = "0x9CCBFC", VA = "0x9CCBFC")]
		private void Release()
		{
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0x9CC678", Offset = "0x9CC678", VA = "0x9CC678")]
		private void ReleaseIfGrabbing()
		{
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0x9CCE34", Offset = "0x9CCE34", VA = "0x9CCE34")]
		private void RefreshHandObject()
		{
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0x9CC6AC", Offset = "0x9CC6AC", VA = "0x9CC6AC")]
		private void HideHand()
		{
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0x9CCFB4", Offset = "0x9CCFB4", VA = "0x9CCFB4")]
		public WheelInteraction()
		{
		}
	}
}
namespace RGEvents
{
	[Token(Token = "0x2000241")]
	public class EventsConfiguration : SingleInstanceBehavior<EventsConfiguration>
	{
		[Token(Token = "0x2000496")]
		public struct ServerInfo
		{
			[Token(Token = "0x4001AE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string host;

			[Token(Token = "0x4001AE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int port;

			[Token(Token = "0x4001AEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string description;
		}

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string serverHost;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SerializedEventsQueue eventSystemQueue;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Signal newClient;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Signal connectedToServer;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Signal eventSystemReady;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Signal<ServerInfo> serverDiscovered;

		[Token(Token = "0x4000DEC")]
		private const int portNumber = 10001;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SerializedEventsQueue localQueue;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SerializedEventsQueue remoteQueue;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool running;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private EventServer server;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private EventClient client;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ServerDiscovery discovery;

		[Token(Token = "0x6001118")]
		[Address(RVA = "0x7DDCB4", Offset = "0x7DDCB4", VA = "0x7DDCB4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0x7DDD60", Offset = "0x7DDD60", VA = "0x7DDD60")]
		public void SetQueues(SerializedEventsQueue localQueue, SerializedEventsQueue remoteQueue)
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0x7DDD68", Offset = "0x7DDD68", VA = "0x7DDD68")]
		public void StartLocal()
		{
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0x7DDED0", Offset = "0x7DDED0", VA = "0x7DDED0")]
		public void StartServer()
		{
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0x7DE0B4", Offset = "0x7DE0B4", VA = "0x7DE0B4")]
		public void StartSpectator(ServerInfo server)
		{
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0x7DDE44", Offset = "0x7DDE44", VA = "0x7DDE44")]
		private void SetRunning()
		{
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0x7DE230", Offset = "0x7DE230", VA = "0x7DE230")]
		private void Update()
		{
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0x7DE310", Offset = "0x7DE310", VA = "0x7DE310")]
		public EventsConfiguration()
		{
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0x7DE4EC", Offset = "0x7DE4EC", VA = "0x7DE4EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B5274", Offset = "0x4B5274")]
		private void <StartServer>b__17_0()
		{
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0x7DE564", Offset = "0x7DE564", VA = "0x7DE564")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B5284", Offset = "0x4B5284")]
		private void <StartSpectator>b__18_0()
		{
		}
	}
	[Token(Token = "0x2000242")]
	public interface IQueue
	{
		[Token(Token = "0x6001123")]
		void Add(Signal signal);

		[Token(Token = "0x6001124")]
		void Add<T>(Signal<T> signal, T arg);
	}
	[Token(Token = "0x2000243")]
	public class ListenerList
	{
		[Token(Token = "0x2000497")]
		private delegate void Unregister();

		[Token(Token = "0x2000498")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A93E4", Offset = "0x4A93E4")]
		private sealed class <>c__DisplayClass2_0<T>
		{
			[Token(Token = "0x4001AEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Signal<T> signal;

			[Token(Token = "0x4001AEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Signal<T>.EventHandler handler;

			[Token(Token = "0x6001E8B")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001E8C")]
			internal void <Add>b__0()
			{
			}
		}

		[Token(Token = "0x2000499")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A93F4", Offset = "0x4A93F4")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001AED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Signal signal;

			[Token(Token = "0x4001AEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Signal.EventHandler handler;

			[Token(Token = "0x6001E8D")]
			[Address(RVA = "0x693540", Offset = "0x693540", VA = "0x693540")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001E8E")]
			[Address(RVA = "0x693B7C", Offset = "0x693B7C", VA = "0x693B7C")]
			internal void <Add>b__0()
			{
			}
		}

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Unregister> unregisterFunctions;

		[Token(Token = "0x6001125")]
		public void Add<T>(Signal<T> signal, Signal<T>.EventHandler handler)
		{
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0x69341C", Offset = "0x69341C", VA = "0x69341C")]
		public void Add(Signal signal, Signal.EventHandler handler)
		{
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0x693644", Offset = "0x693644", VA = "0x693644")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0x693B0C", Offset = "0x693B0C", VA = "0x693B0C")]
		public ListenerList()
		{
		}
	}
	[Token(Token = "0x2000244")]
	public class EventClient : NetworkPeer
	{
		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string host;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string hostName;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int portNumber;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int connectionId;

		[Token(Token = "0x6001129")]
		[Address(RVA = "0x7DC718", Offset = "0x7DC718", VA = "0x7DC718")]
		public EventClient(string host, int port)
		{
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0x7DC798", Offset = "0x7DC798", VA = "0x7DC798")]
		public void Connect()
		{
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x7DC9A0", Offset = "0x7DC9A0", VA = "0x7DC9A0")]
		public void ProcessNetworkEvents()
		{
		}
	}
	[Token(Token = "0x2000245")]
	public class EventServer : NetworkPeer
	{
		[Token(Token = "0x4000DF8")]
		private const int broadcastInterval = 1000;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<int> clientConnectionIds;

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x7DCE7C", Offset = "0x7DCE7C", VA = "0x7DCE7C")]
		public EventServer(int port)
		{
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0x7DD028", Offset = "0x7DD028", VA = "0x7DD028")]
		public void ProcessNetworkEvents()
		{
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0x7DD794", Offset = "0x7DD794", VA = "0x7DD794")]
		public void SendOutgoingEvents(MemoryStream stream)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000246")]
	public class NetworkError : Exception
	{
		[Token(Token = "0x600112F")]
		[Address(RVA = "0x693CD8", Offset = "0x693CD8", VA = "0x693CD8")]
		public NetworkError(string message, byte llapiError)
		{
		}
	}
	[Token(Token = "0x2000247")]
	public abstract class NetworkPeer
	{
		[Token(Token = "0x4000DFA")]
		protected const int maxConnections = 10;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected int channelId;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected int hostId;

		[Token(Token = "0x4000DFD")]
		protected const int bufferSize = 1024;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected byte[] buffer;

		[Token(Token = "0x6001130")]
		[Address(RVA = "0x693D9C", Offset = "0x693D9C", VA = "0x693D9C")]
		protected void InitNetwork(int portNumber)
		{
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0x693F98", Offset = "0x693F98", VA = "0x693F98")]
		public static void OpenSocket(int portNumber, out int hostId, out int channelId)
		{
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0x694080", Offset = "0x694080", VA = "0x694080")]
		protected NetworkPeer()
		{
		}
	}
	[Token(Token = "0x2000248")]
	public class ServerDiscovery
	{
		[Token(Token = "0x4000DFF")]
		public const int broadcastPort = 10002;

		[Token(Token = "0x4000E00")]
		public const int key = 1000;

		[Token(Token = "0x4000E01")]
		public const int version = 1;

		[Token(Token = "0x4000E02")]
		public const int subversion = 0;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int hostId;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int channelId;

		[Token(Token = "0x4000E05")]
		private const int bufferSize = 1024;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private byte[] buffer;

		[Token(Token = "0x6001133")]
		[Address(RVA = "0x695D40", Offset = "0x695D40", VA = "0x695D40")]
		public ServerDiscovery()
		{
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0x695E50", Offset = "0x695E50", VA = "0x695E50")]
		public void ProcessNetworkEvents()
		{
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0x696018", Offset = "0x696018", VA = "0x696018")]
		private void HandleBroadcastEvent()
		{
		}
	}
	[Token(Token = "0x2000249")]
	public class SerializedEventsQueue : IQueue
	{
		[Token(Token = "0x200049A")]
		public delegate void Listener(MemoryStream eventStream);

		[Serializable]
		[Token(Token = "0x200049B")]
		public class MaxConsequentialFlushesReached : Exception
		{
			[Token(Token = "0x6001E93")]
			[Address(RVA = "0x6945DC", Offset = "0x6945DC", VA = "0x6945DC")]
			public MaxConsequentialFlushesReached(string message)
			{
			}
		}

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AD688", Offset = "0x4AD688")]
		private string <Name>k__BackingField;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int maxConsequentialFlushes;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MemoryStream eventStream;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MemoryStream backEventStream;

		[Token(Token = "0x170000E9")]
		public string Name
		{
			[Token(Token = "0x6001138")]
			[Address(RVA = "0x6942B8", Offset = "0x6942B8", VA = "0x6942B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B52B4", Offset = "0x4B52B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001139")]
			[Address(RVA = "0x6942C0", Offset = "0x6942C0", VA = "0x6942C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B52C4", Offset = "0x4B52C4")]
			private set
			{
			}
		}

		[Token(Token = "0x14000026")]
		public event Listener listeners
		{
			[Token(Token = "0x6001136")]
			[Address(RVA = "0x6940E0", Offset = "0x6940E0", VA = "0x6940E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B5294", Offset = "0x4B5294")]
			add
			{
			}
			[Token(Token = "0x6001137")]
			[Address(RVA = "0x6941CC", Offset = "0x6941CC", VA = "0x6941CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B52A4", Offset = "0x4B52A4")]
			remove
			{
			}
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0x6942C8", Offset = "0x6942C8", VA = "0x6942C8")]
		public SerializedEventsQueue(string name)
		{
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0x694364", Offset = "0x694364", VA = "0x694364", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0x69436C", Offset = "0x69436C", VA = "0x69436C", Slot = "4")]
		public void Add(Signal signal)
		{
		}

		[Token(Token = "0x600113D")]
		public void Add<T>(Signal<T> signal, T arg)
		{
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0x694470", Offset = "0x694470", VA = "0x694470")]
		public void Flush()
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x694D88", Offset = "0x694D88", VA = "0x694D88")]
		public static void SendEvents(Stream events)
		{
		}
	}
	[Token(Token = "0x200024A")]
	public interface ISerializer<T>
	{
		[Token(Token = "0x6001140")]
		void Write(Stream s, T value);

		[Token(Token = "0x6001141")]
		bool Read(Stream s, out T result);
	}
	[Token(Token = "0x200024B")]
	public class Serializer<T> : ISerializer<T>
	{
		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly ISerializer<T> P;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static BinaryFormatter formatter;

		[Token(Token = "0x6001142")]
		private void RGEvents.ISerializer<T>.Write(Stream s, T value)
		{
		}

		[Token(Token = "0x6001143")]
		private bool RGEvents.ISerializer<T>.Read(Stream s, out T result)
		{
			return default(bool);
		}

		[Token(Token = "0x6001144")]
		public Serializer()
		{
		}
	}
	[Token(Token = "0x200024C")]
	internal class Serializer : ISerializer<byte>, ISerializer<short>, ISerializer<ushort>, ISerializer<int>, ISerializer<float>, ISerializer<Vector3>, ISerializer<Quaternion>
	{
		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Serializer P;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static byte[] byteArray;

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x6950E4", Offset = "0x6950E4", VA = "0x6950E4", Slot = "4")]
		private void RGEvents.ISerializer<System.Byte>.Write(Stream s, byte v)
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0x695124", Offset = "0x695124", VA = "0x695124", Slot = "6")]
		private void RGEvents.ISerializer<System.Int16>.Write(Stream s, short v)
		{
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0x695188", Offset = "0x695188", VA = "0x695188", Slot = "8")]
		private void RGEvents.ISerializer<System.UInt16>.Write(Stream s, ushort v)
		{
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0x6951EC", Offset = "0x6951EC", VA = "0x6951EC", Slot = "10")]
		private void RGEvents.ISerializer<System.Int32>.Write(Stream s, int v)
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0x695298", Offset = "0x695298", VA = "0x695298", Slot = "12")]
		private void RGEvents.ISerializer<System.Single>.Write(Stream s, float value)
		{
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0x69534C", Offset = "0x69534C", VA = "0x69534C", Slot = "14")]
		private void RGEvents.ISerializer<UnityEngine.Vector3>.Write(Stream s, Vector3 value)
		{
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0x695478", Offset = "0x695478", VA = "0x695478", Slot = "16")]
		private void RGEvents.ISerializer<UnityEngine.Quaternion>.Write(Stream s, Quaternion value)
		{
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0x6955E4", Offset = "0x6955E4", VA = "0x6955E4", Slot = "5")]
		private bool RGEvents.ISerializer<System.Byte>.Read(Stream s, out byte v)
		{
			return default(bool);
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0x695634", Offset = "0x695634", VA = "0x695634", Slot = "7")]
		private bool RGEvents.ISerializer<System.Int16>.Read(Stream s, out short v)
		{
			return default(bool);
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0x6956B0", Offset = "0x6956B0", VA = "0x6956B0", Slot = "9")]
		private bool RGEvents.ISerializer<System.UInt16>.Read(Stream s, out ushort v)
		{
			return default(bool);
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0x69572C", Offset = "0x69572C", VA = "0x69572C", Slot = "11")]
		private bool RGEvents.ISerializer<System.Int32>.Read(Stream s, out int v)
		{
			return default(bool);
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0x695810", Offset = "0x695810", VA = "0x695810", Slot = "13")]
		private bool RGEvents.ISerializer<System.Single>.Read(Stream s, out float v)
		{
			return default(bool);
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0x695928", Offset = "0x695928", VA = "0x695928", Slot = "15")]
		private bool RGEvents.ISerializer<UnityEngine.Vector3>.Read(Stream s, out Vector3 v)
		{
			return default(bool);
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0x695AE0", Offset = "0x695AE0", VA = "0x695AE0", Slot = "17")]
		private bool RGEvents.ISerializer<UnityEngine.Quaternion>.Read(Stream s, out Quaternion q)
		{
			return default(bool);
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0x695CB4", Offset = "0x695CB4", VA = "0x695CB4")]
		public Serializer()
		{
		}
	}
	[Token(Token = "0x200024D")]
	public abstract class SignalBase
	{
		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected readonly IQueue queue;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ushort Id;

		[Token(Token = "0x6001156")]
		[Address(RVA = "0x69641C", Offset = "0x69641C", VA = "0x69641C")]
		public SignalBase(ushort id, IQueue queue)
		{
		}

		[Token(Token = "0x6001157")]
		public abstract void DeserializeAndDispatch(Stream eventStream);

		[Token(Token = "0x6001158")]
		[Address(RVA = "0x696A74", Offset = "0x696A74", VA = "0x696A74", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200024E")]
	public class Signal : SignalBase
	{
		[Token(Token = "0x200049C")]
		public delegate void EventHandler();

		[Token(Token = "0x14000027")]
		public event EventHandler Dispatched
		{
			[Token(Token = "0x6001159")]
			[Address(RVA = "0x693548", Offset = "0x693548", VA = "0x693548")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B52D4", Offset = "0x4B52D4")]
			add
			{
			}
			[Token(Token = "0x600115A")]
			[Address(RVA = "0x693BAC", Offset = "0x693BAC", VA = "0x693BAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B52E4", Offset = "0x4B52E4")]
			remove
			{
			}
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0x696418", Offset = "0x696418", VA = "0x696418")]
		public Signal(ushort id, IQueue queue)
		{
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0x6964A4", Offset = "0x6964A4", VA = "0x6964A4")]
		public void Dispatch()
		{
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0x69655C", Offset = "0x69655C", VA = "0x69655C")]
		public void DispatchImmediately()
		{
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0x69696C", Offset = "0x69696C", VA = "0x69696C", Slot = "4")]
		public override void DeserializeAndDispatch(Stream eventStream)
		{
		}
	}
	[Token(Token = "0x200024F")]
	public class Signal<T1> : SignalBase
	{
		[Token(Token = "0x200049D")]
		public delegate void EventHandler(T1 arg1);

		[Token(Token = "0x14000028")]
		public event EventHandler Dispatched
		{
			[Token(Token = "0x600115F")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B52F4", Offset = "0x4B52F4")]
			add
			{
			}
			[Token(Token = "0x6001160")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B5304", Offset = "0x4B5304")]
			remove
			{
			}
		}

		[Token(Token = "0x6001161")]
		public Signal(ushort id, IQueue queue)
		{
		}

		[Token(Token = "0x6001162")]
		public void Dispatch(T1 arg1)
		{
		}

		[Token(Token = "0x6001163")]
		public void DispatchImmediately(T1 arg1)
		{
		}

		[Token(Token = "0x6001164")]
		public override void DeserializeAndDispatch(Stream eventStream)
		{
		}
	}
	[Token(Token = "0x2000250")]
	public abstract class SignalTypes
	{
		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<ushort, SignalBase> map;

		[Token(Token = "0x6001165")]
		[Address(RVA = "0x6969CC", Offset = "0x6969CC", VA = "0x6969CC")]
		public static void Register(SignalBase signal)
		{
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0x694EFC", Offset = "0x694EFC", VA = "0x694EFC")]
		public static SignalBase Get(ushort signalId)
		{
			return null;
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0x696AA0", Offset = "0x696AA0", VA = "0x696AA0")]
		protected SignalTypes()
		{
		}
	}
}
namespace RGCommon
{
	[Token(Token = "0x2000251")]
	public static class SynthesizedAudio
	{
		[Token(Token = "0x200049E")]
		private abstract class Generator
		{
			[Token(Token = "0x4001AEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly float frequency;

			[Token(Token = "0x4001AF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public readonly float amplitude;

			[Token(Token = "0x4001AF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			protected int position;

			[Token(Token = "0x6001E9C")]
			[Address(RVA = "0x7D97A0", Offset = "0x7D97A0", VA = "0x7D97A0")]
			public Generator(float frequency, float amplitude)
			{
			}

			[Token(Token = "0x6001E9D")]
			public abstract void OnAudioRead(float[] data);

			[Token(Token = "0x6001E9E")]
			[Address(RVA = "0x7D97D8", Offset = "0x7D97D8", VA = "0x7D97D8")]
			public void OnAudioSetPosition(int newPosition)
			{
			}
		}

		[Token(Token = "0x200049F")]
		private class SineGenerator : Generator
		{
			[Token(Token = "0x6001E9F")]
			[Address(RVA = "0x7D9768", Offset = "0x7D9768", VA = "0x7D9768")]
			public SineGenerator(float frequency, float amplitude)
			{
			}

			[Token(Token = "0x6001EA0")]
			[Address(RVA = "0x7D97E0", Offset = "0x7D97E0", VA = "0x7D97E0", Slot = "4")]
			public override void OnAudioRead(float[] data)
			{
			}
		}

		[Token(Token = "0x4000E15")]
		private const int sampleRate = 44100;

		[Token(Token = "0x6001169")]
		[Address(RVA = "0x7D9620", Offset = "0x7D9620", VA = "0x7D9620")]
		public static AudioClip GenerateSineBeep(float frequency, float amplitude, float lengthInSeconds)
		{
			return null;
		}
	}
	[Token(Token = "0x2000252")]
	public class VersionDisplay : MonoBehaviour
	{
		[Token(Token = "0x600116A")]
		[Address(RVA = "0x7DBDC4", Offset = "0x7DBDC4", VA = "0x7DBDC4")]
		private void Start()
		{
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0x7DBF20", Offset = "0x7DBF20", VA = "0x7DBF20")]
		public VersionDisplay()
		{
		}
	}
	[Token(Token = "0x2000253")]
	public static class VersionInformation
	{
		[Token(Token = "0x170000EA")]
		public static string Version
		{
			[Token(Token = "0x600116C")]
			[Address(RVA = "0x7D4B38", Offset = "0x7D4B38", VA = "0x7D4B38")]
			get
			{
				return null;
			}
		}
	}
	[Token(Token = "0x2000254")]
	public static class BestMatch
	{
		[Token(Token = "0x600116D")]
		public static void UpdateIfGreater<T>(ref T currentBest, ref float bestValue, T candidate, float candidateValue)
		{
		}

		[Token(Token = "0x600116E")]
		public static void UpdateIfLess<T>(ref T currentBest, ref float bestValue, T candidate, float candidateValue)
		{
		}
	}
	[Token(Token = "0x2000255")]
	public static class Collections
	{
		[Token(Token = "0x600116F")]
		public static void Shuffle<T>(T[] values)
		{
		}

		[Token(Token = "0x6001170")]
		public static void Shuffle<T>(List<T> values)
		{
		}
	}
	[Token(Token = "0x2000256")]
	public class CSVTable
	{
		[Token(Token = "0x20004A0")]
		public struct Row
		{
			[Token(Token = "0x4001AF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int index;

			[Token(Token = "0x4001AF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private Dictionary<string, int> headerIndexes;

			[Token(Token = "0x4001AF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private string[] columns;

			[Token(Token = "0x1700024C")]
			public int Count
			{
				[Token(Token = "0x6001EAE")]
				[Address(RVA = "0x50AAAC", Offset = "0x50AAAC", VA = "0x50AAAC")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6001EA1")]
			[Address(RVA = "0x50A9F0", Offset = "0x50A9F0", VA = "0x50A9F0")]
			internal Row(int index, Dictionary<string, int> headerIndexes, string[] columns)
			{
			}

			[Token(Token = "0x6001EA2")]
			[Address(RVA = "0x50A9FC", Offset = "0x50A9FC", VA = "0x50A9FC")]
			private void ValidateHeader(string header)
			{
			}

			[Token(Token = "0x6001EA3")]
			[Address(RVA = "0x50AA04", Offset = "0x50AA04", VA = "0x50AA04")]
			private void ValidateIndex(int i)
			{
			}

			[Token(Token = "0x6001EA4")]
			[Address(RVA = "0x50AA0C", Offset = "0x50AA0C", VA = "0x50AA0C")]
			public bool HasValue(int i)
			{
				return default(bool);
			}

			[Token(Token = "0x6001EA5")]
			[Address(RVA = "0x50AA14", Offset = "0x50AA14", VA = "0x50AA14")]
			public bool NotEmpty(string header)
			{
				return default(bool);
			}

			[Token(Token = "0x6001EA6")]
			[Address(RVA = "0x50AA1C", Offset = "0x50AA1C", VA = "0x50AA1C")]
			public string GetColumn(int i)
			{
				return null;
			}

			[Token(Token = "0x6001EA7")]
			[Address(RVA = "0x50AA24", Offset = "0x50AA24", VA = "0x50AA24")]
			public string GetColumn(string header)
			{
				return null;
			}

			[Token(Token = "0x6001EA8")]
			[Address(RVA = "0x50AA2C", Offset = "0x50AA2C", VA = "0x50AA2C")]
			public int GetColumnInt(string header)
			{
				return default(int);
			}

			[Token(Token = "0x6001EA9")]
			[Address(RVA = "0x50AA48", Offset = "0x50AA48", VA = "0x50AA48")]
			public int GetColumnInt(int i)
			{
				return default(int);
			}

			[Token(Token = "0x6001EAA")]
			[Address(RVA = "0x50AA64", Offset = "0x50AA64", VA = "0x50AA64")]
			public float GetColumnFloat(string header)
			{
				return default(float);
			}

			[Token(Token = "0x6001EAB")]
			[Address(RVA = "0x50AA80", Offset = "0x50AA80", VA = "0x50AA80")]
			public float GetColumnFloat(int i)
			{
				return default(float);
			}

			[Token(Token = "0x6001EAC")]
			[Address(RVA = "0x50AA9C", Offset = "0x50AA9C", VA = "0x50AA9C")]
			public bool GetColumnBool(string header)
			{
				return default(bool);
			}

			[Token(Token = "0x6001EAD")]
			[Address(RVA = "0x50AAA4", Offset = "0x50AAA4", VA = "0x50AAA4")]
			public bool GetColumnBool(int i)
			{
				return default(bool);
			}

			[Token(Token = "0x6001EAF")]
			[Address(RVA = "0x50AAD8", Offset = "0x50AAD8", VA = "0x50AAD8")]
			public int Index()
			{
				return default(int);
			}

			[Token(Token = "0x6001EB0")]
			[Address(RVA = "0x50AAE0", Offset = "0x50AAE0", VA = "0x50AAE0", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string path;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isLoaded;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Row[] rows;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string[] headers;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<string, int> headerIndexes;

		[Token(Token = "0x170000EB")]
		public int NumRows
		{
			[Token(Token = "0x6001175")]
			[Address(RVA = "0x7CD8A0", Offset = "0x7CD8A0", VA = "0x7CD8A0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000EC")]
		public int NumColumns
		{
			[Token(Token = "0x6001176")]
			[Address(RVA = "0x7CD8D0", Offset = "0x7CD8D0", VA = "0x7CD8D0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0x7CCD80", Offset = "0x7CCD80", VA = "0x7CCD80")]
		public void LoadFromResources(string path)
		{
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0x7CD6A0", Offset = "0x7CD6A0", VA = "0x7CD6A0")]
		public string GetHeader(int i)
		{
			return null;
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0x7CD7C0", Offset = "0x7CD7C0", VA = "0x7CD7C0")]
		public int GetHeaderIndex(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x7CD830", Offset = "0x7CD830", VA = "0x7CD830")]
		public bool HasHeader(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0x7CD8FC", Offset = "0x7CD8FC", VA = "0x7CD8FC")]
		public Row GetRow(int i)
		{
			return default(Row);
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0x7CDA38", Offset = "0x7CDA38", VA = "0x7CDA38", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0x7CDC44", Offset = "0x7CDC44", VA = "0x7CDC44")]
		public CSVTable()
		{
		}
	}
	[Token(Token = "0x2000257")]
	public class PerFrameCounter : MonoBehaviour
	{
		[Token(Token = "0x600117A")]
		[Address(RVA = "0x7D9140", Offset = "0x7D9140", VA = "0x7D9140")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x4B5314", Offset = "0x4B5314")]
		public static void Add(string name, int amount = 1)
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0x7D9144", Offset = "0x7D9144", VA = "0x7D9144")]
		public PerFrameCounter()
		{
		}
	}
	[Token(Token = "0x2000258")]
	public class SpeedControl : MonoBehaviour
	{
		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool enableOnDevice;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public KeyCode activationKey;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speedFactorWhenActivated;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool activated;

		[Token(Token = "0x600117C")]
		[Address(RVA = "0x7D9540", Offset = "0x7D9540", VA = "0x7D9540")]
		private void Start()
		{
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0x7D954C", Offset = "0x7D954C", VA = "0x7D954C")]
		private void Update()
		{
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0x7D9608", Offset = "0x7D9608", VA = "0x7D9608")]
		public SpeedControl()
		{
		}
	}
	[Token(Token = "0x2000259")]
	public class ToggleActive : MonoBehaviour
	{
		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] objects;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KeyCode key;

		[Token(Token = "0x600117F")]
		[Address(RVA = "0x7D99F8", Offset = "0x7D99F8", VA = "0x7D99F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x7D9AC4", Offset = "0x7D9AC4", VA = "0x7D9AC4")]
		public ToggleActive()
		{
		}
	}
	[Token(Token = "0x200025A")]
	public class CaptureCamera : MonoBehaviour
	{
		[Token(Token = "0x20004A1")]
		public enum FileFormat
		{
			[Token(Token = "0x4001AF6")]
			PNG,
			[Token(Token = "0x4001AF7")]
			PNGWithAlpha,
			[Token(Token = "0x4001AF8")]
			JPG,
			[Token(Token = "0x4001AF9")]
			EXR
		}

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AD6B8", Offset = "0x4AD6B8")]
		public string inputName;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2Int resolution;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FileFormat fileFormat;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string[] extensions;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AD6F0", Offset = "0x4AD6F0")]
		public Camera cameraToCapture;

		[Token(Token = "0x6001181")]
		[Address(RVA = "0x7CE58C", Offset = "0x7CE58C", VA = "0x7CE58C")]
		public void Update()
		{
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0x7CE784", Offset = "0x7CE784", VA = "0x7CE784")]
		private void Capture(Camera cam)
		{
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0x7CEC44", Offset = "0x7CEC44", VA = "0x7CEC44")]
		private TextureFormat GetTargetTextureFormat()
		{
			return default(TextureFormat);
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0x7CEC68", Offset = "0x7CEC68", VA = "0x7CEC68")]
		public CaptureCamera()
		{
		}
	}
	[Token(Token = "0x200025B")]
	public class EditorCameraControl : MonoBehaviour
	{
		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float mouseSpeed;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxKeyboardRotation;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KeyCode freezeKey;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float touchRotationSpeed;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float keyboardRotationSpeed;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public KeyCode turnLeftKey;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public KeyCode turnRightKey;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public KeyCode lookUpKey;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public KeyCode lookDownKey;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public KeyCode recenterKey;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool startMouseEnabled;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AD728", Offset = "0x4AD728")]
		public Transform vrHead;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion startRotation;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 currentRotation;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3? currentPosition;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool mouseEnabled;

		[Token(Token = "0x6001186")]
		[Address(RVA = "0x7CF18C", Offset = "0x7CF18C", VA = "0x7CF18C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0x7CF1F4", Offset = "0x7CF1F4", VA = "0x7CF1F4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0x7CF250", Offset = "0x7CF250", VA = "0x7CF250")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0x7CF2B0", Offset = "0x7CF2B0", VA = "0x7CF2B0")]
		public void SetPosition(Vector3 localPosition)
		{
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0x7CF39C", Offset = "0x7CF39C", VA = "0x7CF39C")]
		private void Update()
		{
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0x7CF914", Offset = "0x7CF914", VA = "0x7CF914")]
		public EditorCameraControl()
		{
		}
	}
	[Token(Token = "0x200025C")]
	public class Fader : MonoBehaviour
	{
		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float targetAlpha;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float fadeTime;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Shader fadeShader;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color color;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected float currentAlpha;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material fadeMaterial;

		[Token(Token = "0x170000ED")]
		public bool Done
		{
			[Token(Token = "0x600118E")]
			[Address(RVA = "0x7D00B0", Offset = "0x7D00B0", VA = "0x7D00B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0x7D009C", Offset = "0x7D009C", VA = "0x7D009C")]
		public void FadeIn()
		{
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0x7D00A4", Offset = "0x7D00A4", VA = "0x7D00A4")]
		public void FadeOut()
		{
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0x7D00C4", Offset = "0x7D00C4", VA = "0x7D00C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0x7D02C0", Offset = "0x7D02C0", VA = "0x7D02C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0x7D02CC", Offset = "0x7D02CC", VA = "0x7D02CC")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0x7D0178", Offset = "0x7D0178", VA = "0x7D0178")]
		private void Setup()
		{
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0x7D02D0", Offset = "0x7D02D0", VA = "0x7D02D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0x7D03C0", Offset = "0x7D03C0", VA = "0x7D03C0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0x7D043C", Offset = "0x7D043C", VA = "0x7D043C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0x7D04B8", Offset = "0x7D04B8", VA = "0x7D04B8")]
		private void SceneWasLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0x7D04C0", Offset = "0x7D04C0", VA = "0x7D04C0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0x7D0574", Offset = "0x7D0574", VA = "0x7D0574")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0x7D0678", Offset = "0x7D0678", VA = "0x7D0678")]
		public Fader()
		{
		}
	}
	[Token(Token = "0x200025D")]
	public class FpsDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float updateInterval;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public KeyCode toggleKey;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool visible;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float warningTime;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color standardColor;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color warningColor;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TextMesh textMesh;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Renderer rendererComponent;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int frameCount;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int warningCount;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float elapsed;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float fps;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float msPerFrame;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float maxTime;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float minTime;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string text;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float lastUpdate;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float collectionStartTime;

		[Token(Token = "0x600119A")]
		[Address(RVA = "0x7D1254", Offset = "0x7D1254", VA = "0x7D1254")]
		private void Awake()
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0x7D12C4", Offset = "0x7D12C4", VA = "0x7D12C4")]
		private void Start()
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0x7D1374", Offset = "0x7D1374", VA = "0x7D1374")]
		private void Update()
		{
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0x7D1550", Offset = "0x7D1550", VA = "0x7D1550")]
		public void ToggleVisibility()
		{
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0x7D15C0", Offset = "0x7D15C0", VA = "0x7D15C0")]
		private void UpdateDisplay()
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0x7D1880", Offset = "0x7D1880", VA = "0x7D1880")]
		public FpsDisplay()
		{
		}
	}
	[Token(Token = "0x200025E")]
	public class Screenshot : MonoBehaviour
	{
		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode screenshotKey;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int superSize;

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0x7D914C", Offset = "0x7D914C", VA = "0x7D914C")]
		public void Start()
		{
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0x7D91B4", Offset = "0x7D91B4", VA = "0x7D91B4")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0x7D928C", Offset = "0x7D928C", VA = "0x7D928C")]
		public static string ScreenShotName()
		{
			return null;
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x7D91F0", Offset = "0x7D91F0", VA = "0x7D91F0")]
		public void TakeScreenshot()
		{
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x7D932C", Offset = "0x7D932C", VA = "0x7D932C")]
		public Screenshot()
		{
		}
	}
	[Token(Token = "0x200025F")]
	public static class Find
	{
		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x7D06B4", Offset = "0x7D06B4", VA = "0x7D06B4")]
		public static GameObject ChildByName(Component tag, string path)
		{
			return null;
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x7D0838", Offset = "0x7D0838", VA = "0x7D0838")]
		public static GameObject ChildByName(object tag, GameObject go, string path)
		{
			return null;
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0x7D08A0", Offset = "0x7D08A0", VA = "0x7D08A0")]
		public static Transform ChildTransformByName(Component tag, string path)
		{
			return null;
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0x7D08E0", Offset = "0x7D08E0", VA = "0x7D08E0")]
		public static Transform ChildTransformByName(object tag, Transform go, string path)
		{
			return null;
		}

		[Token(Token = "0x60011A9")]
		public static T ComponentOnGameObject<T>(Component tag) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60011AA")]
		public static T ComponentOnGameObject<T>(GameObject tag) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60011AB")]
		public static T ComponentOnGameObject<T>(object tag, GameObject go) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60011AC")]
		public static T ComponentOrCreate<T>(GameObject gameObject) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60011AD")]
		public static T ComponentOnChild<T>(Component tag, string path) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60011AE")]
		public static T ComponentOnChild<T>(object tag, GameObject go, string path) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60011AF")]
		public static T ComponentInChildren<T>(Component tag) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60011B0")]
		public static T ComponentInChildren<T>(object tag, GameObject go) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60011B1")]
		public static T ComponentOrNull<T>(GameObject container) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x7D070C", Offset = "0x7D070C", VA = "0x7D070C")]
		private static Transform InternalFindChildByName(object tag, Transform transform, string path)
		{
			return null;
		}

		[Token(Token = "0x60011B3")]
		private static T InternalFindComponentOnGameObject<T>(object tag, GameObject go) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60011B4")]
		private static T InternalFindComponentOnChild<T>(object tag, GameObject go, string path) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60011B5")]
		private static T InternalFindComponentInChildren<T>(object tag, GameObject go)
		{
			return (T)null;
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0x7D08E4", Offset = "0x7D08E4", VA = "0x7D08E4")]
		private static string FormatError(string template, object tag, GameObject go, string path, Type t, string reason)
		{
			return null;
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0x7D092C", Offset = "0x7D092C", VA = "0x7D092C")]
		private static string FormatTag(object theTag)
		{
			return null;
		}
	}
	[Token(Token = "0x2000260")]
	public static class ComponentValidation
	{
		[Token(Token = "0x60011B8")]
		[Address(RVA = "0x7CEEA8", Offset = "0x7CEEA8", VA = "0x7CEEA8")]
		public static bool DisableIfNull(MonoBehaviour component, UnityEngine.Object attributeValue, string attributeName)
		{
			return default(bool);
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0x7CF038", Offset = "0x7CF038", VA = "0x7CF038")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x4B534C", Offset = "0x4B534C")]
		public static void FailIfNull(MonoBehaviour component, UnityEngine.Object attributeValue, string attributeName)
		{
		}
	}
	[Token(Token = "0x2000261")]
	public class DontDestroyOnLoad : MonoBehaviour
	{
		[Token(Token = "0x60011BA")]
		[Address(RVA = "0x7CF03C", Offset = "0x7CF03C", VA = "0x7CF03C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x7CF0B8", Offset = "0x7CF0B8", VA = "0x7CF0B8")]
		public DontDestroyOnLoad()
		{
		}
	}
	[Token(Token = "0x2000262")]
	public class Loader : MonoBehaviour
	{
		[Token(Token = "0x20004A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9404", Offset = "0x4A9404")]
		private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Loader <>4__this;

			[Token(Token = "0x4001AFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Fader[] <faders>5__2;

			[Token(Token = "0x4001AFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startTime>5__3;

			[Token(Token = "0x4001AFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private AsyncOperation <async>5__4;

			[Token(Token = "0x1700024D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EB4")]
				[Address(RVA = "0x7D5620", Offset = "0x7D5620", VA = "0x7D5620", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EB6")]
				[Address(RVA = "0x7D5690", Offset = "0x7D5690", VA = "0x7D5690", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EB1")]
			[Address(RVA = "0x7D5194", Offset = "0x7D5194", VA = "0x7D5194")]
			[DebuggerHidden]
			public <Start>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6001EB2")]
			[Address(RVA = "0x7D51C8", Offset = "0x7D51C8", VA = "0x7D51C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EB3")]
			[Address(RVA = "0x7D51CC", Offset = "0x7D51CC", VA = "0x7D51CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EB5")]
			[Address(RVA = "0x7D5628", Offset = "0x7D5628", VA = "0x7D5628", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string scene;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minimumTime;

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0x7D5120", Offset = "0x7D5120", VA = "0x7D5120")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B5384", Offset = "0x4B5384")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x7D51C0", Offset = "0x7D51C0", VA = "0x7D51C0")]
		public Loader()
		{
		}
	}
	[Token(Token = "0x2000263")]
	public class SingleInstanceBehavior<T> : MonoBehaviour where T : SingleInstanceBehavior<T>
	{
		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T instance;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string noInstanceMessage;

		[Token(Token = "0x170000EE")]
		public static T Instance
		{
			[Token(Token = "0x60011C1")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011BE")]
		static SingleInstanceBehavior()
		{
		}

		[Token(Token = "0x60011BF")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x60011C0")]
		public virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60011C2")]
		public static T GetInstance()
		{
			return null;
		}

		[Token(Token = "0x60011C3")]
		public SingleInstanceBehavior()
		{
		}
	}
	[Token(Token = "0x2000264")]
	public class Singleton<T> where T : Singleton<T>, new()
	{
		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T instance;

		[Token(Token = "0x170000EF")]
		public static T Instance
		{
			[Token(Token = "0x60011C5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011C4")]
		public Singleton()
		{
		}

		[Token(Token = "0x60011C6")]
		public static T GetInstance()
		{
			return null;
		}
	}
	[Token(Token = "0x2000265")]
	public class SingletonBehavior<T> : MonoBehaviour where T : SingletonBehavior<T>
	{
		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T instance;

		[Token(Token = "0x170000F0")]
		public static T Instance
		{
			[Token(Token = "0x60011C9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011C7")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x60011C8")]
		public virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60011CA")]
		public static T GetInstance()
		{
			return null;
		}

		[Token(Token = "0x60011CB")]
		public SingletonBehavior()
		{
		}
	}
	[Token(Token = "0x2000266")]
	public class Locale : Singleton<Locale>
	{
		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string language;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string country;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string explicitlySetLocale;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string currentLocale;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string[] availableLocales;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string[] stringIDs;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<string, string> strings;

		[Token(Token = "0x4000E5D")]
		private const string resourceFolder = "Text";

		[Token(Token = "0x4000E5E")]
		private const string binaryResourceSuffix = "_Strings";

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, string> countrySpecificLocales;

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x7D5698", Offset = "0x7D5698", VA = "0x7D5698")]
		public Locale()
		{
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0x7D5EBC", Offset = "0x7D5EBC", VA = "0x7D5EBC")]
		public string GetString(string key)
		{
			return null;
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0x7D5F5C", Offset = "0x7D5F5C", VA = "0x7D5F5C")]
		public bool TryGetString(string key, out string localized)
		{
			return default(bool);
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0x7D5FFC", Offset = "0x7D5FFC", VA = "0x7D5FFC")]
		public string Format(string key, params object[] templateArguments)
		{
			return null;
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0x7D6268", Offset = "0x7D6268", VA = "0x7D6268")]
		public bool TryFormat(string key, out string localized, params object[] templateArguments)
		{
			return default(bool);
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0x7D64FC", Offset = "0x7D64FC", VA = "0x7D64FC")]
		public string GetDefaultLanguageOrLocale()
		{
			return null;
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0x7D6514", Offset = "0x7D6514", VA = "0x7D6514")]
		public string GetDefaultCountry()
		{
			return null;
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0x7D651C", Offset = "0x7D651C", VA = "0x7D651C")]
		public string GetCurrentLocale()
		{
			return null;
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0x7D6524", Offset = "0x7D6524", VA = "0x7D6524")]
		public void SetLocale(string localeCode)
		{
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0x7D652C", Offset = "0x7D652C", VA = "0x7D652C")]
		public string[] GetAvailableLocales()
		{
			return null;
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0x7D5B28", Offset = "0x7D5B28", VA = "0x7D5B28")]
		public string GetLocale(string[] availableLocales)
		{
			return null;
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0x7D6568", Offset = "0x7D6568", VA = "0x7D6568")]
		public string[] GetStringIDs()
		{
			return null;
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0x7D65C4", Offset = "0x7D65C4", VA = "0x7D65C4")]
		public void Refresh()
		{
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x7D5710", Offset = "0x7D5710", VA = "0x7D5710")]
		private void LoadAvailableLocales()
		{
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0x7D5DB4", Offset = "0x7D5DB4", VA = "0x7D5DB4")]
		private void LoadStrings()
		{
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0x7D65E8", Offset = "0x7D65E8", VA = "0x7D65E8")]
		private bool TryLoadStrings()
		{
			return default(bool);
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0x7D6770", Offset = "0x7D6770", VA = "0x7D6770")]
		private bool TryLoadStringsFromBinaryAssets()
		{
			return default(bool);
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0x7D58FC", Offset = "0x7D58FC", VA = "0x7D58FC")]
		private void SetDefaultLanguageAndCountry()
		{
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0x7D6AE4", Offset = "0x7D6AE4", VA = "0x7D6AE4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x4B53E8", Offset = "0x4B53E8")]
		public string GetLanguage()
		{
			return null;
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0x7D6AEC", Offset = "0x7D6AEC", VA = "0x7D6AEC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x4B5420", Offset = "0x4B5420")]
		public void SetLanguage(string languageCode)
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0x7D6AF4", Offset = "0x7D6AF4", VA = "0x7D6AF4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x4B5458", Offset = "0x4B5458")]
		public string[] GetAvailableLanguages()
		{
			return null;
		}
	}
	[Token(Token = "0x2000267")]
	public class LocaleFonts : SingleInstanceBehavior<LocaleFonts>
	{
		[Serializable]
		[Token(Token = "0x20004A3")]
		public class Settings
		{
			[Token(Token = "0x4001B00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AFA70", Offset = "0x4AFA70")]
			public string locale;

			[Token(Token = "0x4001B01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AFAA8", Offset = "0x4AFAA8")]
			public Font font;

			[Token(Token = "0x4001B02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AFAE0", Offset = "0x4AFAE0")]
			public float scale;

			[Token(Token = "0x6001EB7")]
			[Address(RVA = "0x7D7294", Offset = "0x7D7294", VA = "0x7D7294")]
			public Settings()
			{
			}
		}

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AD760", Offset = "0x4AD760")]
		private Settings[] localeSettings;

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x7D70F4", Offset = "0x7D70F4", VA = "0x7D70F4")]
		public Settings GetCurrentLocaleSettings()
		{
			return null;
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0x7D7224", Offset = "0x7D7224", VA = "0x7D7224")]
		public LocaleFonts()
		{
		}
	}
	[Token(Token = "0x2000268")]
	[DisallowMultipleComponent]
	public class LocalizedText : MonoBehaviour
	{
		[Token(Token = "0x20004A4")]
		private struct FontProxy
		{
			[Token(Token = "0x4001B03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Font font;
		}

		[Token(Token = "0x20004A5")]
		private interface ITextComponent
		{
			[Token(Token = "0x1700024F")]
			string Text
			{
				[Token(Token = "0x6001EB8")]
				get;
				[Token(Token = "0x6001EB9")]
				set;
			}

			[Token(Token = "0x17000250")]
			FontProxy Font
			{
				[Token(Token = "0x6001EBA")]
				get;
				[Token(Token = "0x6001EBB")]
				set;
			}

			[Token(Token = "0x17000251")]
			int FontSize
			{
				[Token(Token = "0x6001EBC")]
				get;
				[Token(Token = "0x6001EBD")]
				set;
			}
		}

		[Token(Token = "0x20004A6")]
		private sealed class TextComponent : ITextComponent
		{
			[Token(Token = "0x4001B04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Text textComponent;

			[Token(Token = "0x17000252")]
			public string Text
			{
				[Token(Token = "0x6001EBF")]
				[Address(RVA = "0x7D80CC", Offset = "0x7D80CC", VA = "0x7D80CC", Slot = "4")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001EC0")]
				[Address(RVA = "0x7D8104", Offset = "0x7D8104", VA = "0x7D8104", Slot = "5")]
				set
				{
				}
			}

			[Token(Token = "0x17000253")]
			public FontProxy Font
			{
				[Token(Token = "0x6001EC1")]
				[Address(RVA = "0x7D8144", Offset = "0x7D8144", VA = "0x7D8144", Slot = "6")]
				get
				{
					return default(FontProxy);
				}
				[Token(Token = "0x6001EC2")]
				[Address(RVA = "0x7D8174", Offset = "0x7D8174", VA = "0x7D8174", Slot = "7")]
				set
				{
				}
			}

			[Token(Token = "0x17000254")]
			public int FontSize
			{
				[Token(Token = "0x6001EC3")]
				[Address(RVA = "0x7D81AC", Offset = "0x7D81AC", VA = "0x7D81AC", Slot = "8")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001EC4")]
				[Address(RVA = "0x7D81DC", Offset = "0x7D81DC", VA = "0x7D81DC", Slot = "9")]
				set
				{
				}
			}

			[Token(Token = "0x6001EBE")]
			[Address(RVA = "0x7D7FFC", Offset = "0x7D7FFC", VA = "0x7D7FFC")]
			public TextComponent(Text text)
			{
			}
		}

		[Token(Token = "0x20004A7")]
		private sealed class TextMeshComponent : ITextComponent
		{
			[Token(Token = "0x4001B05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly TextMesh textComponent;

			[Token(Token = "0x17000255")]
			public string Text
			{
				[Token(Token = "0x6001EC6")]
				[Address(RVA = "0x7D8214", Offset = "0x7D8214", VA = "0x7D8214", Slot = "4")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001EC7")]
				[Address(RVA = "0x7D8244", Offset = "0x7D8244", VA = "0x7D8244", Slot = "5")]
				set
				{
				}
			}

			[Token(Token = "0x17000256")]
			public FontProxy Font
			{
				[Token(Token = "0x6001EC8")]
				[Address(RVA = "0x7D827C", Offset = "0x7D827C", VA = "0x7D827C", Slot = "6")]
				get
				{
					return default(FontProxy);
				}
				[Token(Token = "0x6001EC9")]
				[Address(RVA = "0x7D82AC", Offset = "0x7D82AC", VA = "0x7D82AC", Slot = "7")]
				set
				{
				}
			}

			[Token(Token = "0x17000257")]
			public int FontSize
			{
				[Token(Token = "0x6001ECA")]
				[Address(RVA = "0x7D82E4", Offset = "0x7D82E4", VA = "0x7D82E4", Slot = "8")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001ECB")]
				[Address(RVA = "0x7D8314", Offset = "0x7D8314", VA = "0x7D8314", Slot = "9")]
				set
				{
				}
			}

			[Token(Token = "0x6001EC5")]
			[Address(RVA = "0x7D8028", Offset = "0x7D8028", VA = "0x7D8028")]
			public TextMeshComponent(TextMesh text)
			{
			}
		}

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string stringID;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ITextComponent textComponent;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string[] templateArguments;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int?[] templateArgumentsInts;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool fontOverridden;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FontProxy? originalFont;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int originalFontSize;

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x7D72A4", Offset = "0x7D72A4", VA = "0x7D72A4")]
		private void Start()
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0x7D7BD8", Offset = "0x7D7BD8", VA = "0x7D7BD8")]
		public void ShowString(string stringID)
		{
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0x7D7BE0", Offset = "0x7D7BE0", VA = "0x7D7BE0")]
		public void SetTemplateArgument(int index, string value)
		{
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0x7D7D54", Offset = "0x7D7D54", VA = "0x7D7D54")]
		public void SetTemplateArgument(int index, int value)
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x7D7F20", Offset = "0x7D7F20", VA = "0x7D7F20")]
		public void ShowRawText(string text)
		{
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x7D75C4", Offset = "0x7D75C4", VA = "0x7D75C4")]
		public void UpdateText()
		{
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x7D7700", Offset = "0x7D7700", VA = "0x7D7700")]
		public void UpdateFont()
		{
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0x7D72D0", Offset = "0x7D72D0", VA = "0x7D72D0")]
		private void FindComponents()
		{
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x7D8054", Offset = "0x7D8054", VA = "0x7D8054")]
		public LocalizedText()
		{
		}
	}
	[Token(Token = "0x2000269")]
	public struct SeparatedStringReader
	{
		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private byte[] bytes;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int index;

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x50AB34", Offset = "0x50AB34", VA = "0x50AB34")]
		public SeparatedStringReader(byte[] bytes, int startingIndex = 0)
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x50AB40", Offset = "0x50AB40", VA = "0x50AB40")]
		public bool HasNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x50AB78", Offset = "0x50AB78", VA = "0x50AB78")]
		public string GetNext()
		{
			return null;
		}
	}
	[Token(Token = "0x200026A")]
	public class TextTemplateDemo : MonoBehaviour
	{
		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool useIntegerArgument;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int number;

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0x7D98FC", Offset = "0x7D98FC", VA = "0x7D98FC")]
		private void Update()
		{
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x7D99E8", Offset = "0x7D99E8", VA = "0x7D99E8")]
		public TextTemplateDemo()
		{
		}
	}
	[Token(Token = "0x200026B")]
	public class Translations : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20004A8")]
		public struct StringEntry
		{
			[Token(Token = "0x4001B06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string id;

			[Token(Token = "0x4001B07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string translation;
		}

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StringEntry[] entries;

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0x7D9AD8", Offset = "0x7D9AD8", VA = "0x7D9AD8")]
		public Translations()
		{
		}
	}
	[Token(Token = "0x200026C")]
	public static class Interpolation
	{
		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x7D44E0", Offset = "0x7D44E0", VA = "0x7D44E0")]
		public static float EaseInEaseOut(float progress, int depth)
		{
			return default(float);
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x7D4584", Offset = "0x7D4584", VA = "0x7D4584")]
		public static bool ProgressOverTime(float startTime, float totalTime, ref float progress)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200026D")]
	public abstract class TwoD
	{
		[Token(Token = "0x60011F5")]
		[Address(RVA = "0x7D9AE0", Offset = "0x7D9AE0", VA = "0x7D9AE0")]
		public static bool TriangleIsInBounds(Rect bounds, Vector2 p0, Vector2 p1, Vector2 p2)
		{
			return default(bool);
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0x7D9FC4", Offset = "0x7D9FC4", VA = "0x7D9FC4")]
		public static bool TriangleContainsPoint(Vector2 vertex0, Vector2 vertex1, Vector2 vertex2, Vector2 point)
		{
			return default(bool);
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x7DA080", Offset = "0x7DA080", VA = "0x7DA080")]
		public static bool PointsOnSameSide(Vector2 line0, Vector2 line1, Vector2 point0, Vector2 point1)
		{
			return default(bool);
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0x7DA110", Offset = "0x7DA110", VA = "0x7DA110")]
		public static Vector3 ToBarycentric(Vector2 p0, Vector2 p1, Vector2 p2, Vector2 p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x7DA0E0", Offset = "0x7DA0E0", VA = "0x7DA0E0")]
		public static float Determinant(Vector2 p0, Vector2 p1, Vector2 p2)
		{
			return default(float);
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x7D9CC4", Offset = "0x7D9CC4", VA = "0x7D9CC4")]
		public static bool TriangleIntersectsRectangle(Vector2 vertex0, Vector2 vertex1, Vector2 vertex2, Rect rect)
		{
			return default(bool);
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x7DA198", Offset = "0x7DA198", VA = "0x7DA198")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x4B5490", Offset = "0x4B5490")]
		public static Vector2 SwizzleXZ(Vector3 v)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0x7DA1C8", Offset = "0x7DA1C8", VA = "0x7DA1C8")]
		protected TwoD()
		{
		}
	}
	[Token(Token = "0x200026E")]
	public class MeasurePoint : MonoBehaviour
	{
		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int nextNumber;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int number;

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x7D834C", Offset = "0x7D834C", VA = "0x7D834C")]
		public MeasurePoint()
		{
		}
	}
	[Token(Token = "0x200026F")]
	public class DummyEvent : Tracking.TrackingEvent
	{
		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static DummyEvent instance;

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0x7CF0C0", Offset = "0x7CF0C0", VA = "0x7CF0C0", Slot = "6")]
		public Tracking.TrackingEvent AddParameter(string name, float value)
		{
			return null;
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0x7CF0C4", Offset = "0x7CF0C4", VA = "0x7CF0C4", Slot = "8")]
		public Tracking.TrackingEvent AddParameter(string name, bool value)
		{
			return null;
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0x7CF0C8", Offset = "0x7CF0C8", VA = "0x7CF0C8", Slot = "7")]
		public Tracking.TrackingEvent AddParameter(string name, double value)
		{
			return null;
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0x7CF0CC", Offset = "0x7CF0CC", VA = "0x7CF0CC", Slot = "5")]
		public Tracking.TrackingEvent AddParameter(string name, int value)
		{
			return null;
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0x7CF0D0", Offset = "0x7CF0D0", VA = "0x7CF0D0", Slot = "4")]
		public Tracking.TrackingEvent AddParameter(string name, string value)
		{
			return null;
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0x7CF0D4", Offset = "0x7CF0D4", VA = "0x7CF0D4", Slot = "9")]
		public void Submit()
		{
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0x7CF0D8", Offset = "0x7CF0D8", VA = "0x7CF0D8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0x7CF120", Offset = "0x7CF120", VA = "0x7CF120")]
		public DummyEvent()
		{
		}
	}
	[Token(Token = "0x2000270")]
	public class ErrorCheckingTracker : Tracking.Tracker
	{
		[Token(Token = "0x20004A9")]
		public class Failure : ApplicationException
		{
			[Token(Token = "0x6001ECC")]
			[Address(RVA = "0x7CFB38", Offset = "0x7CFB38", VA = "0x7CFB38")]
			public Failure(string message)
			{
			}
		}

		[Token(Token = "0x20004AA")]
		private class ErrorCheckingEvent : Tracking.TrackingEvent
		{
			[Token(Token = "0x4001B08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly string eventName;

			[Token(Token = "0x4001B09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Dictionary<string, string> parameters;

			[Token(Token = "0x4001B0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private bool revenueSet;

			[Token(Token = "0x4001B0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			public bool isSubmitted;

			[Token(Token = "0x6001ECD")]
			[Address(RVA = "0x7CFB40", Offset = "0x7CFB40", VA = "0x7CFB40")]
			public ErrorCheckingEvent(string eventName)
			{
			}

			[Token(Token = "0x6001ECE")]
			[Address(RVA = "0x7CFBCC", Offset = "0x7CFBCC", VA = "0x7CFBCC", Slot = "4")]
			public Tracking.TrackingEvent AddParameter(string name, string value)
			{
				return null;
			}

			[Token(Token = "0x6001ECF")]
			[Address(RVA = "0x7CFE5C", Offset = "0x7CFE5C", VA = "0x7CFE5C", Slot = "6")]
			public Tracking.TrackingEvent AddParameter(string name, float value)
			{
				return null;
			}

			[Token(Token = "0x6001ED0")]
			[Address(RVA = "0x7CFEA8", Offset = "0x7CFEA8", VA = "0x7CFEA8", Slot = "7")]
			public Tracking.TrackingEvent AddParameter(string name, double value)
			{
				return null;
			}

			[Token(Token = "0x6001ED1")]
			[Address(RVA = "0x7CFEF4", Offset = "0x7CFEF4", VA = "0x7CFEF4", Slot = "5")]
			public Tracking.TrackingEvent AddParameter(string name, int value)
			{
				return null;
			}

			[Token(Token = "0x6001ED2")]
			[Address(RVA = "0x7CFF40", Offset = "0x7CFF40", VA = "0x7CFF40", Slot = "8")]
			public Tracking.TrackingEvent AddParameter(string name, bool value)
			{
				return null;
			}

			[Token(Token = "0x6001ED3")]
			[Address(RVA = "0x7CFF90", Offset = "0x7CFF90", VA = "0x7CFF90", Slot = "9")]
			public void Submit()
			{
			}

			[Token(Token = "0x6001ED4")]
			[Address(RVA = "0x7D0048", Offset = "0x7D0048", VA = "0x7D0048", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ErrorCheckingEvent currentEvent;

		[Token(Token = "0x6001207")]
		[Address(RVA = "0x7CF958", Offset = "0x7CF958", VA = "0x7CF958", Slot = "4")]
		public Tracking.TrackingEvent Track(string eventName)
		{
			return null;
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0x7CFBC4", Offset = "0x7CFBC4", VA = "0x7CFBC4")]
		public ErrorCheckingTracker()
		{
		}
	}
	[Token(Token = "0x2000271")]
	public class FirebaseTracking : MonoBehaviour, Tracking.Tracker
	{
		[Token(Token = "0x6001209")]
		[Address(RVA = "0x7D0A70", Offset = "0x7D0A70", VA = "0x7D0A70", Slot = "4")]
		private Tracking.TrackingEvent RGCommon.Tracking.Tracker.Track(string eventName)
		{
			return null;
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0x7D0AE4", Offset = "0x7D0AE4", VA = "0x7D0AE4")]
		public FirebaseTracking()
		{
		}
	}
	[Token(Token = "0x2000272")]
	public class HTTPTracking : MonoBehaviour, Tracking.Tracker, Tracking.TrackingEvent
	{
		[Token(Token = "0x20004AB")]
		private struct Timing
		{
			[Token(Token = "0x4001B0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float time;

			[Token(Token = "0x4001B0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float variation;
		}

		[Token(Token = "0x20004AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9414", Offset = "0x4A9414")]
		private sealed class <Quit>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HTTPTracking <>4__this;

			[Token(Token = "0x17000258")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001ED8")]
				[Address(RVA = "0x7D2CD8", Offset = "0x7D2CD8", VA = "0x7D2CD8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000259")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EDA")]
				[Address(RVA = "0x7D2D48", Offset = "0x7D2D48", VA = "0x7D2D48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001ED5")]
			[Address(RVA = "0x7D283C", Offset = "0x7D283C", VA = "0x7D283C")]
			[DebuggerHidden]
			public <Quit>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001ED6")]
			[Address(RVA = "0x7D2BC0", Offset = "0x7D2BC0", VA = "0x7D2BC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001ED7")]
			[Address(RVA = "0x7D2BC4", Offset = "0x7D2BC4", VA = "0x7D2BC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001ED9")]
			[Address(RVA = "0x7D2CE0", Offset = "0x7D2CE0", VA = "0x7D2CE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9424", Offset = "0x4A9424")]
		private sealed class <Start>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HTTPTracking <>4__this;

			[Token(Token = "0x4001B14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <nextSendTime>5__2;

			[Token(Token = "0x1700025A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EDE")]
				[Address(RVA = "0x7D4468", Offset = "0x7D4468", VA = "0x7D4468", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EE0")]
				[Address(RVA = "0x7D44D8", Offset = "0x7D44D8", VA = "0x7D44D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EDB")]
			[Address(RVA = "0x7D28DC", Offset = "0x7D28DC", VA = "0x7D28DC")]
			[DebuggerHidden]
			public <Start>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x6001EDC")]
			[Address(RVA = "0x7D42F0", Offset = "0x7D42F0", VA = "0x7D42F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EDD")]
			[Address(RVA = "0x7D42F4", Offset = "0x7D42F4", VA = "0x7D42F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EDF")]
			[Address(RVA = "0x7D4470", Offset = "0x7D4470", VA = "0x7D4470", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9434", Offset = "0x4A9434")]
		private sealed class <SendPending>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HTTPTracking <>4__this;

			[Token(Token = "0x4001B18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string <prefsKey>5__2;

			[Token(Token = "0x1700025C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EE4")]
				[Address(RVA = "0x7D4278", Offset = "0x7D4278", VA = "0x7D4278", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EE6")]
				[Address(RVA = "0x7D42E8", Offset = "0x7D42E8", VA = "0x7D42E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EE1")]
			[Address(RVA = "0x7D297C", Offset = "0x7D297C", VA = "0x7D297C")]
			[DebuggerHidden]
			public <SendPending>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x6001EE2")]
			[Address(RVA = "0x7D3DAC", Offset = "0x7D3DAC", VA = "0x7D3DAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EE3")]
			[Address(RVA = "0x7D3DB0", Offset = "0x7D3DB0", VA = "0x7D3DB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EE5")]
			[Address(RVA = "0x7D4280", Offset = "0x7D4280", VA = "0x7D4280", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A9444", Offset = "0x4A9444")]
		private sealed class <SendBatch>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int batchNumber;

			[Token(Token = "0x4001B1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string eventsData;

			[Token(Token = "0x4001B1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public HTTPTracking <>4__this;

			[Token(Token = "0x4001B1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UnityWebRequest <request>5__2;

			[Token(Token = "0x1700025E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EEB")]
				[Address(RVA = "0x7D3D34", Offset = "0x7D3D34", VA = "0x7D3D34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EED")]
				[Address(RVA = "0x7D3DA4", Offset = "0x7D3DA4", VA = "0x7D3DA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EE7")]
			[Address(RVA = "0x7D2A58", Offset = "0x7D2A58", VA = "0x7D2A58")]
			[DebuggerHidden]
			public <SendBatch>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001EE8")]
			[Address(RVA = "0x7D2D50", Offset = "0x7D2D50", VA = "0x7D2D50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EE9")]
			[Address(RVA = "0x7D2E2C", Offset = "0x7D2E2C", VA = "0x7D2E2C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EEA")]
			[Address(RVA = "0x7D2D6C", Offset = "0x7D2D6C", VA = "0x7D2D6C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001EEC")]
			[Address(RVA = "0x7D3D3C", Offset = "0x7D3D3C", VA = "0x7D3D3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E71")]
		private const float highFrequencyTime = 300f;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Timing highFrequencyTimeBetweenSends;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Timing standardTimeBetweenSends;

		[Token(Token = "0x4000E74")]
		private const string serverUrl = "https://e.resgam.com/";

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly DateTime epoch;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string baseUrl;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StringBuilder eventLog;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool eventOngoing;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool quitting;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool stopped;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly string NEXT_BATCH_NUMBER_KEY;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly string FIRST_UNSENT_BATCH_KEY;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly string BATCH_KEY_PREFIX;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int currentBatchNumber;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int firstUnsentBatch;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool lastSendFailed;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int lastResponseCode;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int consecutiveSendFailures;

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x7D18E4", Offset = "0x7D18E4", VA = "0x7D18E4", Slot = "5")]
		public Tracking.TrackingEvent AddParameter(string name, string value)
		{
			return null;
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0x7D1ACC", Offset = "0x7D1ACC", VA = "0x7D1ACC", Slot = "7")]
		public Tracking.TrackingEvent AddParameter(string name, float value)
		{
			return null;
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0x7D1C10", Offset = "0x7D1C10", VA = "0x7D1C10", Slot = "9")]
		public Tracking.TrackingEvent AddParameter(string name, bool value)
		{
			return null;
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0x7D1D24", Offset = "0x7D1D24", VA = "0x7D1D24", Slot = "8")]
		public Tracking.TrackingEvent AddParameter(string name, double value)
		{
			return null;
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0x7D1E68", Offset = "0x7D1E68", VA = "0x7D1E68", Slot = "6")]
		public Tracking.TrackingEvent AddParameter(string name, int value)
		{
			return null;
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x7D1FAC", Offset = "0x7D1FAC", VA = "0x7D1FAC", Slot = "10")]
		public void Submit()
		{
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0x7D1FE4", Offset = "0x7D1FE4", VA = "0x7D1FE4", Slot = "4")]
		public Tracking.TrackingEvent Track(string eventName)
		{
			return null;
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0x7D2200", Offset = "0x7D2200", VA = "0x7D2200")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x7D24B4", Offset = "0x7D24B4", VA = "0x7D24B4")]
		private bool OnWantsToQuit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0x7D25C4", Offset = "0x7D25C4", VA = "0x7D25C4")]
		private void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0x7D27F0", Offset = "0x7D27F0", VA = "0x7D27F0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x7D2550", Offset = "0x7D2550", VA = "0x7D2550")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B54C8", Offset = "0x4B54C8")]
		private IEnumerator Quit()
		{
			return null;
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x7D2868", Offset = "0x7D2868", VA = "0x7D2868")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B552C", Offset = "0x4B552C")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0x7D2908", Offset = "0x7D2908", VA = "0x7D2908")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B5590", Offset = "0x4B5590")]
		private IEnumerator SendPending()
		{
			return null;
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0x7D25D0", Offset = "0x7D25D0", VA = "0x7D25D0")]
		private void EndBatch()
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0x7D29A8", Offset = "0x7D29A8", VA = "0x7D29A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B55F4", Offset = "0x4B55F4")]
		private IEnumerator SendBatch(int batchNumber, string eventsData)
		{
			return null;
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0x7D19F0", Offset = "0x7D19F0", VA = "0x7D19F0")]
		private static string Encode(string v)
		{
			return null;
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0x7D2140", Offset = "0x7D2140", VA = "0x7D2140")]
		private static double GetTimestamp()
		{
			return default(double);
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0x7D2A84", Offset = "0x7D2A84", VA = "0x7D2A84")]
		public HTTPTracking()
		{
		}
	}
	[Token(Token = "0x2000273")]
	public class LifecycleTracking : MonoBehaviour
	{
		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string platform;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string PRODUCT_VERSION_KEY;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool hasSentStopEvent;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool? lastKnownPause;

		[Token(Token = "0x600121F")]
		[Address(RVA = "0x7D4638", Offset = "0x7D4638", VA = "0x7D4638")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0x7D46A0", Offset = "0x7D46A0", VA = "0x7D46A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0x7D4DDC", Offset = "0x7D4DDC", VA = "0x7D4DDC")]
		private void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0x7D4FC4", Offset = "0x7D4FC4", VA = "0x7D4FC4")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0x7D4B80", Offset = "0x7D4B80", VA = "0x7D4B80")]
		private Tracking.TrackingEvent AddCommonParameters(Tracking.TrackingEvent ev)
		{
			return null;
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x7D50BC", Offset = "0x7D50BC", VA = "0x7D50BC")]
		public LifecycleTracking()
		{
		}
	}
	[Token(Token = "0x2000274")]
	internal class MultiTracker : Tracking.Tracker
	{
		[Token(Token = "0x20004B0")]
		private class MultiEvent : Tracking.TrackingEvent
		{
			[Token(Token = "0x4001B1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Tracking.TrackingEvent[] events;

			[Token(Token = "0x6001EEE")]
			[Address(RVA = "0x7D874C", Offset = "0x7D874C", VA = "0x7D874C")]
			public MultiEvent(Tracking.TrackingEvent[] events)
			{
			}

			[Token(Token = "0x6001EEF")]
			[Address(RVA = "0x7D87E8", Offset = "0x7D87E8", VA = "0x7D87E8", Slot = "5")]
			public Tracking.TrackingEvent AddParameter(string name, int value)
			{
				return null;
			}

			[Token(Token = "0x6001EF0")]
			[Address(RVA = "0x7D8930", Offset = "0x7D8930", VA = "0x7D8930", Slot = "7")]
			public Tracking.TrackingEvent AddParameter(string name, double value)
			{
				return null;
			}

			[Token(Token = "0x6001EF1")]
			[Address(RVA = "0x7D8A78", Offset = "0x7D8A78", VA = "0x7D8A78", Slot = "8")]
			public Tracking.TrackingEvent AddParameter(string name, bool value)
			{
				return null;
			}

			[Token(Token = "0x6001EF2")]
			[Address(RVA = "0x7D8BC4", Offset = "0x7D8BC4", VA = "0x7D8BC4", Slot = "6")]
			public Tracking.TrackingEvent AddParameter(string name, float value)
			{
				return null;
			}

			[Token(Token = "0x6001EF3")]
			[Address(RVA = "0x7D8D0C", Offset = "0x7D8D0C", VA = "0x7D8D0C", Slot = "4")]
			public Tracking.TrackingEvent AddParameter(string name, string value)
			{
				return null;
			}

			[Token(Token = "0x6001EF4")]
			[Address(RVA = "0x7D8E50", Offset = "0x7D8E50", VA = "0x7D8E50", Slot = "9")]
			public void Submit()
			{
			}
		}

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Tracking.Tracker> trackers;

		[Token(Token = "0x6001226")]
		[Address(RVA = "0x7D8354", Offset = "0x7D8354", VA = "0x7D8354", Slot = "4")]
		public Tracking.TrackingEvent Track(string eventName)
		{
			return null;
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0x7D8778", Offset = "0x7D8778", VA = "0x7D8778")]
		public MultiTracker()
		{
		}
	}
	[Token(Token = "0x2000275")]
	public static class SimpleTracking
	{
		[Token(Token = "0x20004B1")]
		public struct Settings
		{
			[Token(Token = "0x4001B20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string productName;

			[Token(Token = "0x4001B21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string platform;
		}

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool started;

		[Token(Token = "0x6001228")]
		[Address(RVA = "0x7D9340", Offset = "0x7D9340", VA = "0x7D9340")]
		public static void Start(Settings settings)
		{
		}
	}
	[Token(Token = "0x2000276")]
	public static class Tracking
	{
		[Token(Token = "0x20004B2")]
		public interface TrackingEvent
		{
			[Token(Token = "0x6001EF5")]
			TrackingEvent AddParameter(string name, string value);

			[Token(Token = "0x6001EF6")]
			TrackingEvent AddParameter(string name, int value);

			[Token(Token = "0x6001EF7")]
			TrackingEvent AddParameter(string name, float value);

			[Token(Token = "0x6001EF8")]
			TrackingEvent AddParameter(string name, double value);

			[Token(Token = "0x6001EF9")]
			TrackingEvent AddParameter(string name, bool value);

			[Token(Token = "0x6001EFA")]
			void Submit();
		}

		[Token(Token = "0x20004B3")]
		public interface Tracker
		{
			[Token(Token = "0x6001EFB")]
			TrackingEvent Track(string eventName);
		}

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string installationId;

		[Token(Token = "0x4000E8A")]
		private const string installationIdPrefsKey = "installationId";

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string productId;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Tracker tracker;

		[Token(Token = "0x600122A")]
		[Address(RVA = "0x7D3BE4", Offset = "0x7D3BE4", VA = "0x7D3BE4")]
		public static TrackingEvent Track(string eventName)
		{
			return null;
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0x7D22FC", Offset = "0x7D22FC", VA = "0x7D22FC")]
		public static void RegisterTracker(Tracker newTracker)
		{
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0x7D94D0", Offset = "0x7D94D0", VA = "0x7D94D0")]
		public static void SetProduct(string product)
		{
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0x7D394C", Offset = "0x7D394C", VA = "0x7D394C")]
		public static string GetProduct()
		{
			return null;
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0x7D3A20", Offset = "0x7D3A20", VA = "0x7D3A20")]
		public static string GetVersion()
		{
			return null;
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0x7D3A68", Offset = "0x7D3A68", VA = "0x7D3A68")]
		public static string GetUserId()
		{
			return null;
		}
	}
	[Token(Token = "0x2000277")]
	public static class TrackingNames
	{
		[Token(Token = "0x4000E8D")]
		public const string eventAddPaymentInfo = "add_payment_info";

		[Token(Token = "0x4000E8E")]
		public const string eventAddToCart = "add_to_cart";

		[Token(Token = "0x4000E8F")]
		public const string eventAddToWishlist = "add_to_wishlist";

		[Token(Token = "0x4000E90")]
		public const string eventAppOpen = "app_open";

		[Token(Token = "0x4000E91")]
		public const string eventBeginCheckout = "begin_checkout";

		[Token(Token = "0x4000E92")]
		public const string eventCampaignDetails = "campaign_details";

		[Token(Token = "0x4000E93")]
		public const string eventCheckoutProgress = "checkout_progress";

		[Token(Token = "0x4000E94")]
		public const string eventEarnVirtualCurrency = "earn_virtual_currency";

		[Token(Token = "0x4000E95")]
		public const string eventEcommercePurchase = "ecommerce_purchase";

		[Token(Token = "0x4000E96")]
		public const string eventGenerateLead = "generate_lead";

		[Token(Token = "0x4000E97")]
		public const string eventJoinGroup = "join_group";

		[Token(Token = "0x4000E98")]
		public const string eventLevelUp = "level_up";

		[Token(Token = "0x4000E99")]
		public const string eventLogin = "login";

		[Token(Token = "0x4000E9A")]
		public const string eventPostScore = "post_score";

		[Token(Token = "0x4000E9B")]
		public const string eventPresentOffer = "present_offer";

		[Token(Token = "0x4000E9C")]
		public const string eventPurchaseRefund = "purchase_refund";

		[Token(Token = "0x4000E9D")]
		public const string eventRemoveFromCart = "remove_from_cart";

		[Token(Token = "0x4000E9E")]
		public const string eventSearch = "search";

		[Token(Token = "0x4000E9F")]
		public const string eventSelectContent = "select_content";

		[Token(Token = "0x4000EA0")]
		public const string eventSetCheckoutOption = "set_checkout_option";

		[Token(Token = "0x4000EA1")]
		public const string eventShare = "share";

		[Token(Token = "0x4000EA2")]
		public const string eventSignUp = "sign_up";

		[Token(Token = "0x4000EA3")]
		public const string eventSpendVirtualCurrency = "spend_virtual_currency";

		[Token(Token = "0x4000EA4")]
		public const string eventTutorialBegin = "tutorial_begin";

		[Token(Token = "0x4000EA5")]
		public const string eventTutorialComplete = "tutorial_complete";

		[Token(Token = "0x4000EA6")]
		public const string eventUnlockAchievement = "unlock_achievement";

		[Token(Token = "0x4000EA7")]
		public const string eventViewItem = "view_item";

		[Token(Token = "0x4000EA8")]
		public const string eventViewItemList = "view_item_list";

		[Token(Token = "0x4000EA9")]
		public const string eventViewSearchResults = "view_search_results";

		[Token(Token = "0x4000EAA")]
		public const string parameterAchievementId = "achievement_id";

		[Token(Token = "0x4000EAB")]
		public const string parameterAdNetworkClickID = "aclid";

		[Token(Token = "0x4000EAC")]
		public const string parameterAffiliation = "affiliation";

		[Token(Token = "0x4000EAD")]
		public const string parameterCampaign = "campaign";

		[Token(Token = "0x4000EAE")]
		public const string parameterCharacter = "character";

		[Token(Token = "0x4000EAF")]
		public const string parameterCheckoutOption = "checkout_option";

		[Token(Token = "0x4000EB0")]
		public const string parameterCheckoutStep = "checkout_step";

		[Token(Token = "0x4000EB1")]
		public const string parameterContent = "content";

		[Token(Token = "0x4000EB2")]
		public const string parameterContentType = "content_type";

		[Token(Token = "0x4000EB3")]
		public const string parameterCoupon = "coupon";

		[Token(Token = "0x4000EB4")]
		public const string parameterCP1 = "cp1";

		[Token(Token = "0x4000EB5")]
		public const string parameterCreativeName = "creative_name";

		[Token(Token = "0x4000EB6")]
		public const string parameterCreativeSlot = "creative_slot";

		[Token(Token = "0x4000EB7")]
		public const string parameterCurrency = "currency";

		[Token(Token = "0x4000EB8")]
		public const string parameterDestination = "destination";

		[Token(Token = "0x4000EB9")]
		public const string parameterEndDate = "end_date";

		[Token(Token = "0x4000EBA")]
		public const string parameterFlightNumber = "flight_number";

		[Token(Token = "0x4000EBB")]
		public const string parameterGroupId = "group_id";

		[Token(Token = "0x4000EBC")]
		public const string parameterItemBrand = "item_brand";

		[Token(Token = "0x4000EBD")]
		public const string parameterItemCategory = "item_category";

		[Token(Token = "0x4000EBE")]
		public const string parameterItemId = "item_id";

		[Token(Token = "0x4000EBF")]
		public const string parameterItemList = "item_list";

		[Token(Token = "0x4000EC0")]
		public const string parameterItemLocationId = "item_location_id";

		[Token(Token = "0x4000EC1")]
		public const string parameterItemName = "item_name";

		[Token(Token = "0x4000EC2")]
		public const string parameterItemVariant = "item_variant";

		[Token(Token = "0x4000EC3")]
		public const string parameterLevel = "level";

		[Token(Token = "0x4000EC4")]
		public const string parameterLocation = "location";

		[Token(Token = "0x4000EC5")]
		public const string parameterMedium = "medium";

		[Token(Token = "0x4000EC6")]
		public const string parameterNumberOfNights = "number_of_nights";

		[Token(Token = "0x4000EC7")]
		public const string parameterNumberOfPassengers = "number_of_passengers";

		[Token(Token = "0x4000EC8")]
		public const string parameterNumberOfRooms = "number_of_rooms";

		[Token(Token = "0x4000EC9")]
		public const string parameterOrigin = "origin";

		[Token(Token = "0x4000ECA")]
		public const string parameterPrice = "price";

		[Token(Token = "0x4000ECB")]
		public const string parameterQuantity = "quantity";

		[Token(Token = "0x4000ECC")]
		public const string parameterScore = "score";

		[Token(Token = "0x4000ECD")]
		public const string parameterSearchTerm = "search_term";

		[Token(Token = "0x4000ECE")]
		public const string parameterShipping = "shipping";

		[Token(Token = "0x4000ECF")]
		public const string parameterSignUpMethod = "sign_up_method";

		[Token(Token = "0x4000ED0")]
		public const string parameterSource = "source";

		[Token(Token = "0x4000ED1")]
		public const string parameterStartDate = "start_date";

		[Token(Token = "0x4000ED2")]
		public const string parameterTax = "tax";

		[Token(Token = "0x4000ED3")]
		public const string parameterTerm = "term";

		[Token(Token = "0x4000ED4")]
		public const string parameterTransactionId = "transaction_id";

		[Token(Token = "0x4000ED5")]
		public const string parameterTravelClass = "travel_class";

		[Token(Token = "0x4000ED6")]
		public const string parameterValue = "value";

		[Token(Token = "0x4000ED7")]
		public const string parameterVirtualCurrencyName = "virtual_currency_name";

		[Token(Token = "0x4000ED8")]
		public const string userPropertySignUpMethod = "sign_up_method";
	}
	[Token(Token = "0x2000278")]
	public class FollowPose : MonoBehaviour
	{
		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AD7BC", Offset = "0x4AD7BC")]
		public Transform objectToFollow;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AD7F4", Offset = "0x4AD7F4")]
		[SerializeField]
		private float movementSmoothTime;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AD840", Offset = "0x4AD840")]
		[SerializeField]
		private float rotationSmoothTime;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AD88C", Offset = "0x4AD88C")]
		[SerializeField]
		private Vector3 globalPositionOffset;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AD8D8", Offset = "0x4AD8D8")]
		[SerializeField]
		private Vector3 localPositionOffset;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AD924", Offset = "0x4AD924")]
		[SerializeField]
		private Vector3 rotationOffset;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4AD970", Offset = "0x4AD970")]
		[SerializeField]
		private bool keepHorizontal;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private new Transform transform;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 movementVelocity;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Quaternion rotationVelocity;

		[Token(Token = "0x6001231")]
		[Address(RVA = "0x7D0AEC", Offset = "0x7D0AEC", VA = "0x7D0AEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0x7D0B14", Offset = "0x7D0B14", VA = "0x7D0B14")]
		private void Update()
		{
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0x7D0F68", Offset = "0x7D0F68", VA = "0x7D0F68")]
		private static Quaternion SmoothDamp(Quaternion rot, Quaternion target, ref Quaternion deriv, float time)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0x7D11A8", Offset = "0x7D11A8", VA = "0x7D11A8")]
		public FollowPose()
		{
		}
	}
	[Token(Token = "0x2000279")]
	public class VideoSlate : MonoBehaviour
	{
		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode visibilityKey;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public KeyCode slateKey;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GUIStyle guiStyle;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int framesLeft;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Texture2D bgTexture;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int slateNumber;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool showSlateNumber;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AudioSource audioSource;

		[Token(Token = "0x6001235")]
		[Address(RVA = "0x7DBF28", Offset = "0x7DBF28", VA = "0x7DBF28")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0x7DC0E0", Offset = "0x7DC0E0", VA = "0x7DC0E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0x7DC1BC", Offset = "0x7DC1BC", VA = "0x7DC1BC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0x7DC69C", Offset = "0x7DC69C", VA = "0x7DC69C")]
		public VideoSlate()
		{
		}
	}
}
namespace RGCommon.VectorExtensions
{
	[Token(Token = "0x200027A")]
	public static class VectorComponentReplacement
	{
		[Token(Token = "0x6001239")]
		[Address(RVA = "0x7DA1D0", Offset = "0x7DA1D0", VA = "0x7DA1D0")]
		public static Vector3 WithX(this Vector3 original, float newX)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0x7DA208", Offset = "0x7DA208", VA = "0x7DA208")]
		public static Vector3 WithY(this Vector3 original, float newY)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0x7DA240", Offset = "0x7DA240", VA = "0x7DA240")]
		public static Vector3 WithZ(this Vector3 original, float newZ)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0x7DA278", Offset = "0x7DA278", VA = "0x7DA278")]
		public static Vector2 WithX(this Vector2 original, float newX)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0x7DA2A8", Offset = "0x7DA2A8", VA = "0x7DA2A8")]
		public static Vector2 WithY(this Vector2 original, float newY)
		{
			return default(Vector2);
		}
	}
	[Token(Token = "0x200027B")]
	public static class VectorSwizzle
	{
		[Token(Token = "0x600123E")]
		[Address(RVA = "0x7DA2D8", Offset = "0x7DA2D8", VA = "0x7DA2D8")]
		public static Vector2 Swizzle00(this Vector3 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0x7DA30C", Offset = "0x7DA30C", VA = "0x7DA30C")]
		public static Vector2 Swizzle0X(this Vector3 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0x7DA340", Offset = "0x7DA340", VA = "0x7DA340")]
		public static Vector2 Swizzle0Y(this Vector3 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0x7DA370", Offset = "0x7DA370", VA = "0x7DA370")]
		public static Vector2 Swizzle0Z(this Vector3 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0x7DA3A4", Offset = "0x7DA3A4", VA = "0x7DA3A4")]
		public static Vector2 SwizzleX0(this Vector3 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x7DA3D4", Offset = "0x7DA3D4", VA = "0x7DA3D4")]
		public static Vector2 SwizzleXX(this Vector3 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x7DA404", Offset = "0x7DA404", VA = "0x7DA404")]
		public static Vector2 SwizzleXY(this Vector3 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x7DA430", Offset = "0x7DA430", VA = "0x7DA430")]
		public static Vector2 SwizzleXZ(this Vector3 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x7DA460", Offset = "0x7DA460", VA = "0x7DA460")]
		public static Vector2 SwizzleY0(this Vector3 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0x7DA494", Offset = "0x7DA494", VA = "0x7DA494")]
		public static Vector2 SwizzleYX(this Vector3 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x7DA4CC", Offset = "0x7DA4CC", VA = "0x7DA4CC")]
		public static Vector2 SwizzleYY(this Vector3 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0x7DA4FC", Offset = "0x7DA4FC", VA = "0x7DA4FC")]
		public static Vector2 SwizzleYZ(this Vector3 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0x7DA530", Offset = "0x7DA530", VA = "0x7DA530")]
		public static Vector2 SwizzleZ0(this Vector3 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0x7DA564", Offset = "0x7DA564", VA = "0x7DA564")]
		public static Vector2 SwizzleZX(this Vector3 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0x7DA598", Offset = "0x7DA598", VA = "0x7DA598")]
		public static Vector2 SwizzleZY(this Vector3 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0x7DA5C8", Offset = "0x7DA5C8", VA = "0x7DA5C8")]
		public static Vector2 SwizzleZZ(this Vector3 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0x7DA5FC", Offset = "0x7DA5FC", VA = "0x7DA5FC")]
		public static Vector3 Swizzle000(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0x7DA63C", Offset = "0x7DA63C", VA = "0x7DA63C")]
		public static Vector3 Swizzle00X(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0x7DA67C", Offset = "0x7DA67C", VA = "0x7DA67C")]
		public static Vector3 Swizzle00Y(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0x7DA6BC", Offset = "0x7DA6BC", VA = "0x7DA6BC")]
		public static Vector3 Swizzle00Z(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0x7DA6F8", Offset = "0x7DA6F8", VA = "0x7DA6F8")]
		public static Vector3 Swizzle0X0(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0x7DA738", Offset = "0x7DA738", VA = "0x7DA738")]
		public static Vector3 Swizzle0XX(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0x7DA778", Offset = "0x7DA778", VA = "0x7DA778")]
		public static Vector3 Swizzle0XY(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0x7DA7B8", Offset = "0x7DA7B8", VA = "0x7DA7B8")]
		public static Vector3 Swizzle0XZ(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0x7DA7F4", Offset = "0x7DA7F4", VA = "0x7DA7F4")]
		public static Vector3 Swizzle0Y0(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0x7DA830", Offset = "0x7DA830", VA = "0x7DA830")]
		public static Vector3 Swizzle0YX(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0x7DA86C", Offset = "0x7DA86C", VA = "0x7DA86C")]
		public static Vector3 Swizzle0YY(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0x7DA8A8", Offset = "0x7DA8A8", VA = "0x7DA8A8")]
		public static Vector3 Swizzle0YZ(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0x7DA8E0", Offset = "0x7DA8E0", VA = "0x7DA8E0")]
		public static Vector3 Swizzle0Z0(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0x7DA920", Offset = "0x7DA920", VA = "0x7DA920")]
		public static Vector3 Swizzle0ZX(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0x7DA964", Offset = "0x7DA964", VA = "0x7DA964")]
		public static Vector3 Swizzle0ZY(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x7DA9A8", Offset = "0x7DA9A8", VA = "0x7DA9A8")]
		public static Vector3 Swizzle0ZZ(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0x7DA9E4", Offset = "0x7DA9E4", VA = "0x7DA9E4")]
		public static Vector3 SwizzleX00(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x7DAA20", Offset = "0x7DAA20", VA = "0x7DAA20")]
		public static Vector3 SwizzleX0X(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x7DAA5C", Offset = "0x7DAA5C", VA = "0x7DAA5C")]
		public static Vector3 SwizzleX0Y(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x7DAA98", Offset = "0x7DAA98", VA = "0x7DAA98")]
		public static Vector3 SwizzleX0Z(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x7DAAD0", Offset = "0x7DAAD0", VA = "0x7DAAD0")]
		public static Vector3 SwizzleXX0(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0x7DAB0C", Offset = "0x7DAB0C", VA = "0x7DAB0C")]
		public static Vector3 SwizzleXXX(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0x7DAB48", Offset = "0x7DAB48", VA = "0x7DAB48")]
		public static Vector3 SwizzleXXY(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0x7DAB84", Offset = "0x7DAB84", VA = "0x7DAB84")]
		public static Vector3 SwizzleXXZ(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0x7DABBC", Offset = "0x7DABBC", VA = "0x7DABBC")]
		public static Vector3 SwizzleXY0(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0x7DABF4", Offset = "0x7DABF4", VA = "0x7DABF4")]
		public static Vector3 SwizzleXYX(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0x7DAC2C", Offset = "0x7DAC2C", VA = "0x7DAC2C")]
		public static Vector3 SwizzleXYY(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0x7DAC64", Offset = "0x7DAC64", VA = "0x7DAC64")]
		public static Vector3 SwizzleXYZ(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0x7DAC98", Offset = "0x7DAC98", VA = "0x7DAC98")]
		public static Vector3 SwizzleXZ0(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0x7DACD4", Offset = "0x7DACD4", VA = "0x7DACD4")]
		public static Vector3 SwizzleXZX(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0x7DAD10", Offset = "0x7DAD10", VA = "0x7DAD10")]
		public static Vector3 SwizzleXZY(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0x7DAD50", Offset = "0x7DAD50", VA = "0x7DAD50")]
		public static Vector3 SwizzleXZZ(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0x7DAD88", Offset = "0x7DAD88", VA = "0x7DAD88")]
		public static Vector3 SwizzleY00(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0x7DADC8", Offset = "0x7DADC8", VA = "0x7DADC8")]
		public static Vector3 SwizzleY0X(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0x7DAE10", Offset = "0x7DAE10", VA = "0x7DAE10")]
		public static Vector3 SwizzleY0Y(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0x7DAE50", Offset = "0x7DAE50", VA = "0x7DAE50")]
		public static Vector3 SwizzleY0Z(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0x7DAE8C", Offset = "0x7DAE8C", VA = "0x7DAE8C")]
		public static Vector3 SwizzleYX0(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0x7DAED0", Offset = "0x7DAED0", VA = "0x7DAED0")]
		public static Vector3 SwizzleYXX(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0x7DAF10", Offset = "0x7DAF10", VA = "0x7DAF10")]
		public static Vector3 SwizzleYXY(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0x7DAF50", Offset = "0x7DAF50", VA = "0x7DAF50")]
		public static Vector3 SwizzleYXZ(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0x7DAF90", Offset = "0x7DAF90", VA = "0x7DAF90")]
		public static Vector3 SwizzleYY0(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0x7DAFCC", Offset = "0x7DAFCC", VA = "0x7DAFCC")]
		public static Vector3 SwizzleYYX(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0x7DB008", Offset = "0x7DB008", VA = "0x7DB008")]
		public static Vector3 SwizzleYYY(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0x7DB044", Offset = "0x7DB044", VA = "0x7DB044")]
		public static Vector3 SwizzleYYZ(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0x7DB07C", Offset = "0x7DB07C", VA = "0x7DB07C")]
		public static Vector3 SwizzleYZ0(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0x7DB0C0", Offset = "0x7DB0C0", VA = "0x7DB0C0")]
		public static Vector3 SwizzleYZX(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0x7DB104", Offset = "0x7DB104", VA = "0x7DB104")]
		public static Vector3 SwizzleYZY(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0x7DB144", Offset = "0x7DB144", VA = "0x7DB144")]
		public static Vector3 SwizzleYZZ(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0x7DB180", Offset = "0x7DB180", VA = "0x7DB180")]
		public static Vector3 SwizzleZ00(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0x7DB1C0", Offset = "0x7DB1C0", VA = "0x7DB1C0")]
		public static Vector3 SwizzleZ0X(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0x7DB204", Offset = "0x7DB204", VA = "0x7DB204")]
		public static Vector3 SwizzleZ0Y(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0x7DB248", Offset = "0x7DB248", VA = "0x7DB248")]
		public static Vector3 SwizzleZ0Z(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0x7DB284", Offset = "0x7DB284", VA = "0x7DB284")]
		public static Vector3 SwizzleZX0(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0x7DB2CC", Offset = "0x7DB2CC", VA = "0x7DB2CC")]
		public static Vector3 SwizzleZXX(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0x7DB30C", Offset = "0x7DB30C", VA = "0x7DB30C")]
		public static Vector3 SwizzleZXY(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0x7DB350", Offset = "0x7DB350", VA = "0x7DB350")]
		public static Vector3 SwizzleZXZ(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0x7DB38C", Offset = "0x7DB38C", VA = "0x7DB38C")]
		public static Vector3 SwizzleZY0(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0x7DB3C8", Offset = "0x7DB3C8", VA = "0x7DB3C8")]
		public static Vector3 SwizzleZYX(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x7DB408", Offset = "0x7DB408", VA = "0x7DB408")]
		public static Vector3 SwizzleZYY(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0x7DB444", Offset = "0x7DB444", VA = "0x7DB444")]
		public static Vector3 SwizzleZYZ(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0x7DB47C", Offset = "0x7DB47C", VA = "0x7DB47C")]
		public static Vector3 SwizzleZZ0(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0x7DB4BC", Offset = "0x7DB4BC", VA = "0x7DB4BC")]
		public static Vector3 SwizzleZZX(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0x7DB500", Offset = "0x7DB500", VA = "0x7DB500")]
		public static Vector3 SwizzleZZY(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0x7DB544", Offset = "0x7DB544", VA = "0x7DB544")]
		public static Vector3 SwizzleZZZ(this Vector3 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0x7DB580", Offset = "0x7DB580", VA = "0x7DB580")]
		public static Vector2 Swizzle00(this Vector2 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0x7DB5B4", Offset = "0x7DB5B4", VA = "0x7DB5B4")]
		public static Vector2 Swizzle0X(this Vector2 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0x7DB5E8", Offset = "0x7DB5E8", VA = "0x7DB5E8")]
		public static Vector2 Swizzle0Y(this Vector2 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0x7DB618", Offset = "0x7DB618", VA = "0x7DB618")]
		public static Vector2 SwizzleX0(this Vector2 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0x7DB648", Offset = "0x7DB648", VA = "0x7DB648")]
		public static Vector2 SwizzleXX(this Vector2 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0x7DB678", Offset = "0x7DB678", VA = "0x7DB678")]
		public static Vector2 SwizzleXY(this Vector2 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0x7DB6A4", Offset = "0x7DB6A4", VA = "0x7DB6A4")]
		public static Vector2 SwizzleY0(this Vector2 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0x7DB6D8", Offset = "0x7DB6D8", VA = "0x7DB6D8")]
		public static Vector2 SwizzleYX(this Vector2 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0x7DB710", Offset = "0x7DB710", VA = "0x7DB710")]
		public static Vector2 SwizzleYY(this Vector2 original)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0x7DB740", Offset = "0x7DB740", VA = "0x7DB740")]
		public static Vector3 Swizzle000(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0x7DB780", Offset = "0x7DB780", VA = "0x7DB780")]
		public static Vector3 Swizzle00X(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0x7DB7C0", Offset = "0x7DB7C0", VA = "0x7DB7C0")]
		public static Vector3 Swizzle00Y(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0x7DB800", Offset = "0x7DB800", VA = "0x7DB800")]
		public static Vector3 Swizzle0X0(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0x7DB840", Offset = "0x7DB840", VA = "0x7DB840")]
		public static Vector3 Swizzle0XX(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0x7DB880", Offset = "0x7DB880", VA = "0x7DB880")]
		public static Vector3 Swizzle0XY(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0x7DB8C0", Offset = "0x7DB8C0", VA = "0x7DB8C0")]
		public static Vector3 Swizzle0Y0(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0x7DB8FC", Offset = "0x7DB8FC", VA = "0x7DB8FC")]
		public static Vector3 Swizzle0YX(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0x7DB938", Offset = "0x7DB938", VA = "0x7DB938")]
		public static Vector3 Swizzle0YY(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x7DB974", Offset = "0x7DB974", VA = "0x7DB974")]
		public static Vector3 SwizzleX00(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0x7DB9B0", Offset = "0x7DB9B0", VA = "0x7DB9B0")]
		public static Vector3 SwizzleX0X(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0x7DB9EC", Offset = "0x7DB9EC", VA = "0x7DB9EC")]
		public static Vector3 SwizzleX0Y(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0x7DBA28", Offset = "0x7DBA28", VA = "0x7DBA28")]
		public static Vector3 SwizzleXX0(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0x7DBA64", Offset = "0x7DBA64", VA = "0x7DBA64")]
		public static Vector3 SwizzleXXX(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0x7DBAA0", Offset = "0x7DBAA0", VA = "0x7DBAA0")]
		public static Vector3 SwizzleXXY(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0x7DBADC", Offset = "0x7DBADC", VA = "0x7DBADC")]
		public static Vector3 SwizzleXY0(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x7DBB14", Offset = "0x7DBB14", VA = "0x7DBB14")]
		public static Vector3 SwizzleXYX(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x7DBB4C", Offset = "0x7DBB4C", VA = "0x7DBB4C")]
		public static Vector3 SwizzleXYY(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x7DBB84", Offset = "0x7DBB84", VA = "0x7DBB84")]
		public static Vector3 SwizzleY00(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x7DBBC4", Offset = "0x7DBBC4", VA = "0x7DBBC4")]
		public static Vector3 SwizzleY0X(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x7DBC0C", Offset = "0x7DBC0C", VA = "0x7DBC0C")]
		public static Vector3 SwizzleY0Y(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x7DBC4C", Offset = "0x7DBC4C", VA = "0x7DBC4C")]
		public static Vector3 SwizzleYX0(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x7DBC90", Offset = "0x7DBC90", VA = "0x7DBC90")]
		public static Vector3 SwizzleYXX(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x7DBCD0", Offset = "0x7DBCD0", VA = "0x7DBCD0")]
		public static Vector3 SwizzleYXY(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x7DBD10", Offset = "0x7DBD10", VA = "0x7DBD10")]
		public static Vector3 SwizzleYY0(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0x7DBD4C", Offset = "0x7DBD4C", VA = "0x7DBD4C")]
		public static Vector3 SwizzleYYX(this Vector2 original)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0x7DBD88", Offset = "0x7DBD88", VA = "0x7DBD88")]
		public static Vector3 SwizzleYYY(this Vector2 original)
		{
			return default(Vector3);
		}
	}
}
namespace BoundarySystem_Ext
{
	[Token(Token = "0x200027C")]
	internal static class Pvr_BoundaryAPI
	{
		[Token(Token = "0x4000EEB")]
		private const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x60012B2")]
		[Address(RVA = "0x6C60EC", Offset = "0x6C60EC", VA = "0x6C60EC")]
		public static extern void Pvr_StartSDKBoundary();

		[PreserveSig]
		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x6C617C", Offset = "0x6C617C", VA = "0x6C617C")]
		public static extern void Pvr_ShutdownSDKBoundary();

		[PreserveSig]
		[Token(Token = "0x60012B4")]
		[Address(RVA = "0x6C620C", Offset = "0x6C620C", VA = "0x6C620C")]
		private static extern int Pvr_GetMainSensorStateExt(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber);

		[PreserveSig]
		[Token(Token = "0x60012B5")]
		[Address(RVA = "0x6C630C", Offset = "0x6C630C", VA = "0x6C630C")]
		private static extern IntPtr Pvr_GetCameraData_Ext();

		[PreserveSig]
		[Token(Token = "0x60012B6")]
		[Address(RVA = "0x6C639C", Offset = "0x6C639C", VA = "0x6C639C")]
		public static extern void Pvr_ResetVrModebyForce();

		[PreserveSig]
		[Token(Token = "0x60012B7")]
		[Address(RVA = "0x6C642C", Offset = "0x6C642C", VA = "0x6C642C")]
		private static extern bool Pvr_ResumeBoundaryForSTS();

		[PreserveSig]
		[Token(Token = "0x60012B8")]
		[Address(RVA = "0x6C64C4", Offset = "0x6C64C4", VA = "0x6C64C4")]
		private static extern void Pvr_PauseBoundaryForSTS();

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0x6C6554", Offset = "0x6C6554", VA = "0x6C6554")]
		public static int UPvr_GetMainSensorStateExt(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber)
		{
			return default(int);
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0x6C6560", Offset = "0x6C6560", VA = "0x6C6560")]
		public static IntPtr UPvr_GetCameraData_Ext()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0x6C659C", Offset = "0x6C659C", VA = "0x6C659C")]
		public static bool UPvr_ResumeBoundaryForSTS()
		{
			return default(bool);
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0x6C65A0", Offset = "0x6C65A0", VA = "0x6C65A0")]
		public static void UPvr_PauseBoundaryForSTS()
		{
		}

		[Token(Token = "0x60012BD")]
		public static IntPtr StructToIntPtr<T>(T info)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60012BE")]
		public static T IntPtrToStruct<T>(IntPtr info)
		{
			return (T)null;
		}
	}
	[Token(Token = "0x200027D")]
	internal static class Pvr_SafeAreaAlgoAPI
	{
		[Token(Token = "0x20004B4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x4A9454", Offset = "0x4A9454")]
		public delegate void SafeAreaCallback(IntPtr lineCollectionPtr, IntPtr safeAreaRectPtr);

		[Token(Token = "0x20004B5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x4A9468", Offset = "0x4A9468")]
		public delegate void SafeAreaCallbackShrink(IntPtr lineCollectionPtr, IntPtr safeAreaDetailRectPtr);

		[Token(Token = "0x20004B6")]
		public struct GSAPoint3i
		{
			[Token(Token = "0x4001B22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int x;

			[Token(Token = "0x4001B23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int y;

			[Token(Token = "0x4001B24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int z;
		}

		[Token(Token = "0x20004B7")]
		public struct GSALine
		{
			[Token(Token = "0x4001B25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr pointArray;

			[Token(Token = "0x4001B26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int pointCount;
		}

		[Token(Token = "0x20004B8")]
		public struct GSALineCollection
		{
			[Token(Token = "0x4001B27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr lineArray;

			[Token(Token = "0x4001B28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int lineCount;
		}

		[Token(Token = "0x20004B9")]
		public struct GSALegalData
		{
			[Token(Token = "0x4001B29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int overMaxRange;

			[Token(Token = "0x4001B2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int includeBigGrap;

			[Token(Token = "0x4001B2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int bigGapNum;

			[Token(Token = "0x4001B2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int centerOut;

			[Token(Token = "0x4001B2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int removeNarrow;

			[Token(Token = "0x4001B2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int overMaxRange_more;

			[Token(Token = "0x4001B2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int validShrinkArea;
		}

		[Token(Token = "0x20004BA")]
		public struct GSARect
		{
			[Token(Token = "0x4001B30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GSAPoint3i leftup;

			[Token(Token = "0x4001B31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public GSAPoint3i leftdown;

			[Token(Token = "0x4001B32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GSAPoint3i rightup;

			[Token(Token = "0x4001B33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public GSAPoint3i rightdown;

			[Token(Token = "0x4001B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GSAPoint3i center;

			[Token(Token = "0x4001B35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public uint width;

			[Token(Token = "0x4001B36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public uint height;

			[Token(Token = "0x4001B37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int isLegal;

			[Token(Token = "0x4001B38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public GSALegalData legalData;
		}

		[Token(Token = "0x4000EEC")]
		private const string LibFileName = "SafetyArea";

		[PreserveSig]
		[Token(Token = "0x60012BF")]
		[Address(RVA = "0x6C68D4", Offset = "0x6C68D4", VA = "0x6C68D4")]
		private static extern int GSAInit(int width, int height);

		[PreserveSig]
		[Token(Token = "0x60012C0")]
		[Address(RVA = "0x6C6984", Offset = "0x6C6984", VA = "0x6C6984")]
		private static extern int GSAShutDown();

		[PreserveSig]
		[Token(Token = "0x60012C1")]
		[Address(RVA = "0x6C6A14", Offset = "0x6C6A14", VA = "0x6C6A14")]
		private static extern int GSASetCallback(SafeAreaCallback cb);

		[PreserveSig]
		[Token(Token = "0x60012C2")]
		[Address(RVA = "0x6C6AB8", Offset = "0x6C6AB8", VA = "0x6C6AB8")]
		private static extern int GSASetCallbackShrink(SafeAreaCallbackShrink cb);

		[PreserveSig]
		[Token(Token = "0x60012C3")]
		[Address(RVA = "0x6C6B5C", Offset = "0x6C6B5C", VA = "0x6C6B5C")]
		private static extern int GSAUpDateData(IntPtr lineCollectionPtr);

		[PreserveSig]
		[Token(Token = "0x60012C4")]
		[Address(RVA = "0x6C6BFC", Offset = "0x6C6BFC", VA = "0x6C6BFC")]
		private static extern int GSASetConfigFilePath(IntPtr configPath);

		[PreserveSig]
		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x6C6C9C", Offset = "0x6C6C9C", VA = "0x6C6C9C")]
		private static extern bool GSAGetClosedAreaUpdateFlag();

		[PreserveSig]
		[Token(Token = "0x60012C6")]
		[Address(RVA = "0x6C6D34", Offset = "0x6C6D34", VA = "0x6C6D34")]
		private static extern int GSALoadSafetyArea(IntPtr lineCollectionPtr);

		[PreserveSig]
		[Token(Token = "0x60012C7")]
		[Address(RVA = "0x6C6DD4", Offset = "0x6C6DD4", VA = "0x6C6DD4")]
		private static extern double GSABoundaryDetector(ref GSAPoint3i pointPtr);

		[PreserveSig]
		[Token(Token = "0x60012C8")]
		[Address(RVA = "0x6C6E74", Offset = "0x6C6E74", VA = "0x6C6E74")]
		private static extern int GSALoadSafetyArea2(IntPtr lineCollectionPtr, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x60012C9")]
		[Address(RVA = "0x6C6F24", Offset = "0x6C6F24", VA = "0x6C6F24")]
		private static extern double GSABoundaryDetector2(ref GSAPoint3i point, bool isPlayArea, ref GSAPoint3i closestPoint, ref GSAPoint3i normalDir);

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0x6C6FEC", Offset = "0x6C6FEC", VA = "0x6C6FEC")]
		public static int Pvr_GSAInit(int width, int height)
		{
			return default(int);
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0x6C6FF0", Offset = "0x6C6FF0", VA = "0x6C6FF0")]
		public static int Pvr_GSASetCallback(SafeAreaCallback cb)
		{
			return default(int);
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0x6C6FF4", Offset = "0x6C6FF4", VA = "0x6C6FF4")]
		public static int Pvr_GSASetCallbackShrink(SafeAreaCallbackShrink cb)
		{
			return default(int);
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0x6C6FF8", Offset = "0x6C6FF8", VA = "0x6C6FF8")]
		public static int Pvr_GSAUpDateData(IntPtr lineCollectionPtr)
		{
			return default(int);
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0x6C6FFC", Offset = "0x6C6FFC", VA = "0x6C6FFC")]
		public static bool Pvr_GSAGetClosedAreaUpdateFlag()
		{
			return default(bool);
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0x6C7000", Offset = "0x6C7000", VA = "0x6C7000")]
		public static int Pvr_GSASetConfigFilePath(string configPath)
		{
			return default(int);
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0x6C7088", Offset = "0x6C7088", VA = "0x6C7088")]
		public static int Pvr_GSALoadSafetyArea(IntPtr lineCollectionPtr)
		{
			return default(int);
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x6C708C", Offset = "0x6C708C", VA = "0x6C708C")]
		public static double Pvr_GSABoundaryDetector(ref GSAPoint3i point)
		{
			return default(double);
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x6C7090", Offset = "0x6C7090", VA = "0x6C7090")]
		public static int Pvr_GSAShutDown()
		{
			return default(int);
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x6C7094", Offset = "0x6C7094", VA = "0x6C7094")]
		public static int Pvr_GSALoadSafetyArea2(IntPtr lineCollectionPtr, bool isPlayArea)
		{
			return default(int);
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x6C709C", Offset = "0x6C709C", VA = "0x6C709C")]
		public static double Pvr_GSABoundaryDetector2(ref GSAPoint3i point, bool isPlayArea, ref GSAPoint3i closestPoint, ref GSAPoint3i normalDir)
		{
			return default(double);
		}
	}
	[Token(Token = "0x200027E")]
	public class Pvr_BoundarySystem
	{
		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pvr_BoundarySystem instance;

		[Token(Token = "0x4000EEE")]
		public const int CameraImageWidth = 1280;

		[Token(Token = "0x4000EEF")]
		public const int CameraImageHeight = 400;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr CameraFramePtr;

		[Token(Token = "0x170000F1")]
		public static Pvr_BoundarySystem Instance
		{
			[Token(Token = "0x60012D5")]
			[Address(RVA = "0x6C65A4", Offset = "0x6C65A4", VA = "0x6C65A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x6C666C", Offset = "0x6C666C", VA = "0x6C666C")]
		public void OpenBoundary()
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x6C6670", Offset = "0x6C6670", VA = "0x6C6670")]
		public void CloseBoundary()
		{
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x6C6674", Offset = "0x6C6674", VA = "0x6C6674")]
		public void Reset6Dof()
		{
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x6C6678", Offset = "0x6C6678", VA = "0x6C6678")]
		public float[] GetControllerFixedPoseData(int hand)
		{
			return null;
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x6C6620", Offset = "0x6C6620", VA = "0x6C6620")]
		public Pvr_BoundarySystem()
		{
		}
	}
	[Token(Token = "0x200027F")]
	public class Pvr_SafeAreaAlgoModule
	{
		[Token(Token = "0x20004BB")]
		public struct ExtraInfo
		{
			[Token(Token = "0x4001B39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool overMaxRange;

			[Token(Token = "0x4001B3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool includeBigGap;

			[Token(Token = "0x4001B3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int bigGapNum;

			[Token(Token = "0x4001B3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool centerOut;

			[Token(Token = "0x4001B3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
			public bool removeNarrow;

			[Token(Token = "0x4001B3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
			public bool overMaxRange_more;

			[Token(Token = "0x4001B3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int validShrinkArea;
		}

		[Token(Token = "0x20004BC")]
		public struct BoundaryPlayerArea
		{
			[Token(Token = "0x4001B40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 lowerleft;

			[Token(Token = "0x4001B41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 upperleft;

			[Token(Token = "0x4001B42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 upperRight;

			[Token(Token = "0x4001B43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 lowerRight;

			[Token(Token = "0x4001B44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 center;

			[Token(Token = "0x4001B45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public uint width;

			[Token(Token = "0x4001B46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public uint height;

			[Token(Token = "0x4001B47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public bool isLegal;

			[Token(Token = "0x4001B48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public ExtraInfo extraInfo;
		}

		[Token(Token = "0x20004BD")]
		public delegate void BoundarySystemCallback(BoundaryPlayerArea playAreaInfo, List<Vector3> boundaryPoints, List<List<Vector3>> unusedLines);

		[Token(Token = "0x20004BE")]
		public delegate void BoundarySystemCallbackShrink(List<Vector3> rectPoints, List<Vector3> boundaryPoints, List<List<Vector3>> unusedLines);

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pvr_SafeAreaAlgoModule instance;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private BoundarySystemCallback boundarySystemCallback;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BoundarySystemCallbackShrink boundarySystemCallbackShrink;

		[Token(Token = "0x170000F2")]
		public static Pvr_SafeAreaAlgoModule Instance
		{
			[Token(Token = "0x60012DB")]
			[Address(RVA = "0x6C8888", Offset = "0x6C8888", VA = "0x6C8888")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0x6C8910", Offset = "0x6C8910", VA = "0x6C8910")]
		public void RegisterCallBack(BoundarySystemCallback callback)
		{
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0x6C8918", Offset = "0x6C8918", VA = "0x6C8918")]
		public void RegisterCallBackShrink(BoundarySystemCallbackShrink callback)
		{
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0x6C8920", Offset = "0x6C8920", VA = "0x6C8920")]
		public bool Start()
		{
			return default(bool);
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0x6C8A40", Offset = "0x6C8A40", VA = "0x6C8A40")]
		public bool CommitNewLineData(bool isFistLine, Vector3[] points)
		{
			return default(bool);
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0x6C8E0C", Offset = "0x6C8E0C", VA = "0x6C8E0C")]
		public bool Shutdown()
		{
			return default(bool);
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0x6C8E90", Offset = "0x6C8E90", VA = "0x6C8E90")]
		public double QueryDistanceOfPoint(Vector3 point)
		{
			return default(double);
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x6C8EE4", Offset = "0x6C8EE4", VA = "0x6C8EE4")]
		public double QueryDistanceOfPoint(Vector3 point, bool isPlayArea, ref Vector3 closestPoint, ref Vector3 normalDir)
		{
			return default(double);
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x6C7AEC", Offset = "0x6C7AEC", VA = "0x6C7AEC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x4B5DE8", Offset = "0x4B5DE8")]
		private static void _SafeAreaCallback(IntPtr lineCollectionPtr, IntPtr safeAreaRectPtr)
		{
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0x6C81FC", Offset = "0x6C81FC", VA = "0x6C81FC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x4B5E4C", Offset = "0x4B5E4C")]
		private static void _SafeAreaCallbackShrink(IntPtr lineCollectionPtr, IntPtr safeAreaDetailRectPtr)
		{
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x6C8908", Offset = "0x6C8908", VA = "0x6C8908")]
		public Pvr_SafeAreaAlgoModule()
		{
		}
	}
}
namespace Pvr_UnitySDKAPI
{
	[Token(Token = "0x2000280")]
	public class PvrControllerKey
	{
		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool State;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool PressedDown;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool PressedUp;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool LongPressed;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool Click;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool Touch;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool TouchDown;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public bool TouchUp;

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x98FAB4", Offset = "0x98FAB4", VA = "0x98FAB4")]
		public PvrControllerKey()
		{
		}
	}
	[Token(Token = "0x2000281")]
	public class ControllerHand
	{
		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PvrControllerKey App;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PvrControllerKey Touch;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PvrControllerKey Home;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PvrControllerKey VolumeDown;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PvrControllerKey VolumeUp;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PvrControllerKey Trigger;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PvrControllerKey X;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PvrControllerKey Y;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public PvrControllerKey A;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PvrControllerKey B;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public PvrControllerKey Left;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public PvrControllerKey Right;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public PvrControllerKey Thumbrest;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector2 TouchPadPosition;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int TriggerNum;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int GripValue;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Quaternion Rotation;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Vector3 Position;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public int Battery;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public ControllerState ConnectState;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public SwipeDirection SwipeDirection;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public TouchPadClick TouchPadClick;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public bool isShowBoundary;

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0x98F8CC", Offset = "0x98F8CC", VA = "0x98F8CC")]
		public ControllerHand()
		{
		}
	}
	[Token(Token = "0x2000282")]
	public enum ControllerState
	{
		[Token(Token = "0x4000F14")]
		Error = -1,
		[Token(Token = "0x4000F15")]
		DisConnected,
		[Token(Token = "0x4000F16")]
		Connected
	}
	[Token(Token = "0x2000283")]
	public enum Pvr_KeyCode
	{
		[Token(Token = "0x4000F18")]
		APP = 1,
		[Token(Token = "0x4000F19")]
		TOUCHPAD,
		[Token(Token = "0x4000F1A")]
		HOME,
		[Token(Token = "0x4000F1B")]
		VOLUMEUP,
		[Token(Token = "0x4000F1C")]
		VOLUMEDOWN,
		[Token(Token = "0x4000F1D")]
		TRIGGER,
		[Token(Token = "0x4000F1E")]
		A,
		[Token(Token = "0x4000F1F")]
		B,
		[Token(Token = "0x4000F20")]
		X,
		[Token(Token = "0x4000F21")]
		Y,
		[Token(Token = "0x4000F22")]
		Left,
		[Token(Token = "0x4000F23")]
		Right,
		[Token(Token = "0x4000F24")]
		Thumbrest
	}
	[Token(Token = "0x2000284")]
	public enum SwipeDirection
	{
		[Token(Token = "0x4000F26")]
		No,
		[Token(Token = "0x4000F27")]
		SwipeUp,
		[Token(Token = "0x4000F28")]
		SwipeDown,
		[Token(Token = "0x4000F29")]
		SwipeLeft,
		[Token(Token = "0x4000F2A")]
		SwipeRight
	}
	[Token(Token = "0x2000285")]
	public enum TouchPadClick
	{
		[Token(Token = "0x4000F2C")]
		No,
		[Token(Token = "0x4000F2D")]
		ClickUp,
		[Token(Token = "0x4000F2E")]
		ClickDown,
		[Token(Token = "0x4000F2F")]
		ClickLeft,
		[Token(Token = "0x4000F30")]
		ClickRight
	}
	[Token(Token = "0x2000286")]
	public struct Controller
	{
		[Token(Token = "0x4000F31")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x98A69C", Offset = "0x98A69C", VA = "0x98A69C")]
		public static Vector2 UPvr_GetTouchPadPosition(int hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0x98A7AC", Offset = "0x98A7AC", VA = "0x98A7AC")]
		public static float UPvr_GetAxis1D(int hand, Pvr_KeyCode key)
		{
			return default(float);
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0x98A95C", Offset = "0x98A95C", VA = "0x98A95C")]
		public static Vector2 UPvr_GetAxis2D(int hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0x98AC18", Offset = "0x98AC18", VA = "0x98AC18")]
		public static ControllerState UPvr_GetControllerState(int hand)
		{
			return default(ControllerState);
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x98AD2C", Offset = "0x98AD2C", VA = "0x98AD2C")]
		public static Quaternion UPvr_GetControllerQUA(int hand)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0x98AE58", Offset = "0x98AE58", VA = "0x98AE58")]
		public static Vector3 UPvr_GetControllerPOS(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0x98AF80", Offset = "0x98AF80", VA = "0x98AF80")]
		public static int UPvr_GetControllerTriggerValue(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0x98B060", Offset = "0x98B060", VA = "0x98B060")]
		public static int UPvr_GetControllerPower(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0x98B140", Offset = "0x98B140", VA = "0x98B140")]
		public static SwipeDirection UPvr_GetSwipeDirection(int hand)
		{
			return default(SwipeDirection);
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0x98B220", Offset = "0x98B220", VA = "0x98B220")]
		public static TouchPadClick UPvr_GetTouchPadClick(int hand)
		{
			return default(TouchPadClick);
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0x98B300", Offset = "0x98B300", VA = "0x98B300")]
		public static bool UPvr_GetKey(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0x98B940", Offset = "0x98B940", VA = "0x98B940")]
		public static bool UPvr_GetKeyDown(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0x98BF80", Offset = "0x98BF80", VA = "0x98BF80")]
		public static bool UPvr_GetKeyUp(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0x98C5C0", Offset = "0x98C5C0", VA = "0x98C5C0")]
		public static bool UPvr_GetTouch(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0x98C990", Offset = "0x98C990", VA = "0x98C990")]
		public static bool UPvr_GetTouchDown(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0x98CD60", Offset = "0x98CD60", VA = "0x98CD60")]
		public static bool UPvr_GetTouchUp(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0x98D130", Offset = "0x98D130", VA = "0x98D130")]
		public static bool UPvr_GetKeyClick(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0x98D770", Offset = "0x98D770", VA = "0x98D770")]
		public static bool UPvr_GetKeyLongPressed(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0x98DDB0", Offset = "0x98DDB0", VA = "0x98DDB0")]
		public static bool UPvr_IsTouching(int hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0x98DFB8", Offset = "0x98DFB8", VA = "0x98DFB8")]
		public static void UPvr_SetHandNess(Pvr_Controller.UserHandNess hand)
		{
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x98E098", Offset = "0x98E098", VA = "0x98E098")]
		public static Pvr_Controller.UserHandNess UPvr_GetHandNess()
		{
			return default(Pvr_Controller.UserHandNess);
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x98E110", Offset = "0x98E110", VA = "0x98E110")]
		public static int UPvr_GetPreferenceDevice()
		{
			return default(int);
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0x98E1FC", Offset = "0x98E1FC", VA = "0x98E1FC")]
		public static bool UPvr_IsEnbleTrigger()
		{
			return default(bool);
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0x98E278", Offset = "0x98E278", VA = "0x98E278")]
		public static int UPvr_GetDeviceType()
		{
			return default(int);
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0x98E2F0", Offset = "0x98E2F0", VA = "0x98E2F0")]
		public static int UPvr_GetMainHandNess()
		{
			return default(int);
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0x98E368", Offset = "0x98E368", VA = "0x98E368")]
		public static void UPvr_SetMainHandNess(int hand)
		{
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0x98E3EC", Offset = "0x98E3EC", VA = "0x98E3EC")]
		public static int UPvr_GetControllerAbility(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0x98E470", Offset = "0x98E470", VA = "0x98E470")]
		public static void UPvr_VibrateNeo2Controller(float strength, int time, int hand)
		{
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0x98E514", Offset = "0x98E514", VA = "0x98E514")]
		public static int UPvr_GetControllerBindingState(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0x98E598", Offset = "0x98E598", VA = "0x98E598")]
		public static Vector3 UPvr_GetVelocity(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0x98E61C", Offset = "0x98E61C", VA = "0x98E61C")]
		public static Vector3 UPvr_GetAngularVelocity(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0x98E6A0", Offset = "0x98E6A0", VA = "0x98E6A0")]
		public static Vector3 UPvr_GetAcceleration(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0x98E724", Offset = "0x98E724", VA = "0x98E724")]
		public static void UPvr_ScanController()
		{
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0x98E7A0", Offset = "0x98E7A0", VA = "0x98E7A0")]
		public static void UPvr_StopScanController()
		{
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0x98E81C", Offset = "0x98E81C", VA = "0x98E81C")]
		public static void UPvr_ConnectController(string mac)
		{
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0x98E8F4", Offset = "0x98E8F4", VA = "0x98E8F4")]
		public static void UPvr_DisConnectController()
		{
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0x98E970", Offset = "0x98E970", VA = "0x98E970")]
		public static void UPvr_ResetController(int hand)
		{
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0x98E9F4", Offset = "0x98E9F4", VA = "0x98E9F4")]
		public static string UPvr_GetControllerVersion()
		{
			return null;
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0x98EA70", Offset = "0x98EA70", VA = "0x98EA70")]
		public static void UPvr_GetDeviceVersion(int deviceType)
		{
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0x98EAF4", Offset = "0x98EAF4", VA = "0x98EAF4")]
		public static void UPvr_GetControllerSnCode(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0x98EB78", Offset = "0x98EB78", VA = "0x98EB78")]
		public static void UPvr_SetControllerUnbind(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0x98EBFC", Offset = "0x98EBFC", VA = "0x98EBFC")]
		public static void UPvr_SetStationRestart()
		{
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0x98EC78", Offset = "0x98EC78", VA = "0x98EC78")]
		public static void UPvr_StartStationOtaUpdate()
		{
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0x98ECF4", Offset = "0x98ECF4", VA = "0x98ECF4")]
		public static void UPvr_StartControllerOtaUpdate(int mode, int controllerSerialNum)
		{
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0x98ED88", Offset = "0x98ED88", VA = "0x98ED88")]
		public static void UPvr_EnterPairMode(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0x98EE0C", Offset = "0x98EE0C", VA = "0x98EE0C")]
		public static void UPvr_SetControllerShutdown(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0x98EE90", Offset = "0x98EE90", VA = "0x98EE90")]
		public static int UPvr_GetStationPairState()
		{
			return default(int);
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0x98EF0C", Offset = "0x98EF0C", VA = "0x98EF0C")]
		public static int UPvr_GetStationOtaUpdateProgress()
		{
			return default(int);
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0x98EF88", Offset = "0x98EF88", VA = "0x98EF88")]
		public static int UPvr_GetControllerOtaUpdateProgress()
		{
			return default(int);
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0x98F004", Offset = "0x98F004", VA = "0x98F004")]
		public static void UPvr_GetControllerVersionAndSN(int controllerSerialNum)
		{
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0x98F088", Offset = "0x98F088", VA = "0x98F088")]
		public static void UPvr_GetControllerUniqueID()
		{
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0x50FA00", Offset = "0x50FA00", VA = "0x50FA00")]
		public void UPvr_InterruptStationPairMode()
		{
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0x50FA04", Offset = "0x50FA04", VA = "0x50FA04")]
		public void UPvr_StartCV2PairingMode(int deviceType)
		{
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0x50FA08", Offset = "0x50FA08", VA = "0x50FA08")]
		public void UPvr_StopCV2PairingMode(int deviceType)
		{
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0x98F288", Offset = "0x98F288", VA = "0x98F288")]
		public static void UPvr_SetArmModelParameters(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle)
		{
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0x98F364", Offset = "0x98F364", VA = "0x98F364")]
		public static void UPvr_CalcArmModelParameters(float[] headOrientation, float[] controllerOrientation, float[] controllerPrimary)
		{
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0x98F438", Offset = "0x98F438", VA = "0x98F438")]
		public static void UPvr_GetPointerPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0x98F4FC", Offset = "0x98F4FC", VA = "0x98F4FC")]
		public static void UPvr_GetElbowPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0x98F5BC", Offset = "0x98F5BC", VA = "0x98F5BC")]
		public static void UPvr_GetWristPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0x98F67C", Offset = "0x98F67C", VA = "0x98F67C")]
		public static void UPvr_GetShoulderPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0x98F740", Offset = "0x98F740", VA = "0x98F740")]
		public static void UPvr_IsEnbleHomeKey(bool state)
		{
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0x98F7C4", Offset = "0x98F7C4", VA = "0x98F7C4")]
		public static void UPvr_SwitchHomeKey(bool state)
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0x98F848", Offset = "0x98F848", VA = "0x98F848")]
		public static int UPvr_GetControllerSensorStatus(int id)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001327")]
		[Address(RVA = "0x98F368", Offset = "0x98F368", VA = "0x98F368")]
		private static extern void Pvr_CalcArmModelParameters(float[] headOrientation, float[] controllerOrientation, float[] gyro);

		[PreserveSig]
		[Token(Token = "0x6001328")]
		[Address(RVA = "0x98F43C", Offset = "0x98F43C", VA = "0x98F43C")]
		private static extern void Pvr_GetPointerPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6001329")]
		[Address(RVA = "0x98F500", Offset = "0x98F500", VA = "0x98F500")]
		private static extern void Pvr_GetElbowPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x600132A")]
		[Address(RVA = "0x98F5C0", Offset = "0x98F5C0", VA = "0x98F5C0")]
		private static extern void Pvr_GetWristPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x600132B")]
		[Address(RVA = "0x98F680", Offset = "0x98F680", VA = "0x98F680")]
		private static extern void Pvr_GetShoulderPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x600132C")]
		[Address(RVA = "0x98F28C", Offset = "0x98F28C", VA = "0x98F28C")]
		private static extern void Pvr_SetArmModelParameters(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle);
	}
	[Token(Token = "0x2000287")]
	public enum ControllerVariety
	{
		[Token(Token = "0x4000F33")]
		Controller0,
		[Token(Token = "0x4000F34")]
		Controller1
	}
	[Token(Token = "0x2000288")]
	public enum ControllerDevice
	{
		[Token(Token = "0x4000F36")]
		Goblin,
		[Token(Token = "0x4000F37")]
		Neo,
		[Token(Token = "0x4000F38")]
		G2,
		[Token(Token = "0x4000F39")]
		Neo2,
		[Token(Token = "0x4000F3A")]
		Neo3,
		[Token(Token = "0x4000F3B")]
		NewController
	}
	[Token(Token = "0x2000289")]
	public enum PBS_SystemInfoEnum
	{
		[Token(Token = "0x4000F3D")]
		ELECTRIC_QUANTITY,
		[Token(Token = "0x4000F3E")]
		PUI_VERSION,
		[Token(Token = "0x4000F3F")]
		EQUIPMENT_MODEL,
		[Token(Token = "0x4000F40")]
		EQUIPMENT_SN,
		[Token(Token = "0x4000F41")]
		CUSTOMER_SN,
		[Token(Token = "0x4000F42")]
		INTERNAL_STORAGE_SPACE_OF_THE_DEVICE,
		[Token(Token = "0x4000F43")]
		DEVICE_BLUETOOTH_STATUS,
		[Token(Token = "0x4000F44")]
		BLUETOOTH_NAME_CONNECTED,
		[Token(Token = "0x4000F45")]
		BLUETOOTH_MAC_ADDRESS,
		[Token(Token = "0x4000F46")]
		DEVICE_WIFI_STATUS,
		[Token(Token = "0x4000F47")]
		WIFI_NAME_CONNECTED,
		[Token(Token = "0x4000F48")]
		WLAN_MAC_ADDRESS,
		[Token(Token = "0x4000F49")]
		DEVICE_IP
	}
	[Token(Token = "0x200028A")]
	public enum PBS_DeviceControlEnum
	{
		[Token(Token = "0x4000F4B")]
		DEVICE_CONTROL_REBOOT,
		[Token(Token = "0x4000F4C")]
		DEVICE_CONTROL_SHUTDOWN
	}
	[Token(Token = "0x200028B")]
	public enum PBS_PackageControlEnum
	{
		[Token(Token = "0x4000F4E")]
		PACKAGE_SILENCE_INSTALL,
		[Token(Token = "0x4000F4F")]
		PACKAGE_SILENCE_UNINSTALL
	}
	[Token(Token = "0x200028C")]
	public enum PBS_SwitchEnum
	{
		[Token(Token = "0x4000F51")]
		S_ON,
		[Token(Token = "0x4000F52")]
		S_OFF
	}
	[Token(Token = "0x200028D")]
	public enum PBS_HomeEventEnum
	{
		[Token(Token = "0x4000F54")]
		SINGLE_CLICK,
		[Token(Token = "0x4000F55")]
		DOUBLE_CLICK,
		[Token(Token = "0x4000F56")]
		LONG_PRESS
	}
	[Token(Token = "0x200028E")]
	public enum PBS_HomeFunctionEnum
	{
		[Token(Token = "0x4000F58")]
		VALUE_HOME_GO_TO_SETTING,
		[Token(Token = "0x4000F59")]
		VALUE_HOME_BACK,
		[Token(Token = "0x4000F5A")]
		VALUE_HOME_RECENTER,
		[Token(Token = "0x4000F5B")]
		VALUE_HOME_OPEN_APP,
		[Token(Token = "0x4000F5C")]
		VALUE_HOME_DISABLE,
		[Token(Token = "0x4000F5D")]
		VALUE_HOME_GO_TO_HOME,
		[Token(Token = "0x4000F5E")]
		VALUE_HOME_SEND_BROADCAST,
		[Token(Token = "0x4000F5F")]
		VALUE_HOME_CLEAN_MEMORY
	}
	[Token(Token = "0x200028F")]
	public enum PBS_ScreenOffDelayTimeEnum
	{
		[Token(Token = "0x4000F61")]
		THREE = 3,
		[Token(Token = "0x4000F62")]
		TEN = 10,
		[Token(Token = "0x4000F63")]
		THIRTY = 30,
		[Token(Token = "0x4000F64")]
		SIXTY = 60,
		[Token(Token = "0x4000F65")]
		THREE_HUNDRED = 300,
		[Token(Token = "0x4000F66")]
		SIX_HUNDRED = 600,
		[Token(Token = "0x4000F67")]
		NEVER = -1
	}
	[Token(Token = "0x2000290")]
	public enum PBS_SleepDelayTimeEnum
	{
		[Token(Token = "0x4000F69")]
		FIFTEEN = 15,
		[Token(Token = "0x4000F6A")]
		THIRTY = 30,
		[Token(Token = "0x4000F6B")]
		SIXTY = 60,
		[Token(Token = "0x4000F6C")]
		THREE_HUNDRED = 300,
		[Token(Token = "0x4000F6D")]
		SIX_HUNDRED = 600,
		[Token(Token = "0x4000F6E")]
		ONE_THOUSAND_AND_EIGHT_HUNDRED = 1800,
		[Token(Token = "0x4000F6F")]
		NEVER = -1
	}
	[Token(Token = "0x2000291")]
	public enum PBS_SystemFunctionSwitchEnum
	{
		[Token(Token = "0x4000F71")]
		SFS_USB,
		[Token(Token = "0x4000F72")]
		SFS_AUTOSLEEP,
		[Token(Token = "0x4000F73")]
		SFS_SCREENON_CHARGING,
		[Token(Token = "0x4000F74")]
		SFS_OTG_CHARGING,
		[Token(Token = "0x4000F75")]
		SFS_RETURN_MENU_IN_2DMODE,
		[Token(Token = "0x4000F76")]
		SFS_COMBINATION_KEY,
		[Token(Token = "0x4000F77")]
		SFS_CALIBRATION_WITH_POWER_ON,
		[Token(Token = "0x4000F78")]
		SFS_SYSTEM_UPDATE,
		[Token(Token = "0x4000F79")]
		SFS_CAST_SERVICE,
		[Token(Token = "0x4000F7A")]
		SFS_EYE_PROTECTION,
		[Token(Token = "0x4000F7B")]
		SFS_SECURITY_ZONE_PERMANENTLY,
		[Token(Token = "0x4000F7C")]
		SFS_GLOBAL_CALIBRATION,
		[Token(Token = "0x4000F7D")]
		SFS_Auto_Calibration,
		[Token(Token = "0x4000F7E")]
		SFS_USB_BOOT
	}
	[Token(Token = "0x2000292")]
	public enum PBS_USBConfigModeEnum
	{
		[Token(Token = "0x4000F80")]
		MTP,
		[Token(Token = "0x4000F81")]
		CHARGE
	}
	[Token(Token = "0x2000293")]
	public struct ToBService
	{
		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<bool> BoolCallback;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<int> IntCallback;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<long> LongCallback;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaClass unityPlayer;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaObject currentActivity;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AndroidJavaObject tobHelper;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AndroidJavaClass tobHelperClass;

		[Token(Token = "0x600132D")]
		[Address(RVA = "0x999680", Offset = "0x999680", VA = "0x999680")]
		public static void UPvr_InitToBService()
		{
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0x9997C4", Offset = "0x9997C4", VA = "0x9997C4")]
		public static void UPvr_SetUnityObjectName(string obj)
		{
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0x9998A0", Offset = "0x9998A0", VA = "0x9998A0")]
		public static void UPvr_BindToBService()
		{
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0x999984", Offset = "0x999984", VA = "0x999984")]
		public static void UPvr_UnBindToBService()
		{
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0x999A68", Offset = "0x999A68", VA = "0x999A68")]
		private static AndroidJavaObject GetEnumType(Enum enumType)
		{
			return null;
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0x999B98", Offset = "0x999B98", VA = "0x999B98")]
		public static string UPvr_StateGetDeviceInfo(PBS_SystemInfoEnum type)
		{
			return null;
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0x999D28", Offset = "0x999D28", VA = "0x999D28")]
		public static void UPvr_ControlSetDeviceAction(PBS_DeviceControlEnum deviceControl, Action<int> callback)
		{
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0x999E3C", Offset = "0x999E3C", VA = "0x999E3C")]
		public static void UPvr_ControlAPPManger(PBS_PackageControlEnum packageControl, string path, Action<int> callback)
		{
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0x99A008", Offset = "0x99A008", VA = "0x99A008")]
		public static void UPvr_ControlSetAutoConnectWIFI(string ssid, string pwd, Action<bool> callback)
		{
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0x99A1BC", Offset = "0x99A1BC", VA = "0x99A1BC")]
		public static void UPvr_ControlClearAutoConnectWIFI(Action<bool> callback)
		{
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0x99A238", Offset = "0x99A238", VA = "0x99A238")]
		public static void UPvr_PropertySetHomeKey(PBS_HomeEventEnum eventEnum, PBS_HomeFunctionEnum function, Action<bool> callback)
		{
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0x99A3CC", Offset = "0x99A3CC", VA = "0x99A3CC")]
		public static void UPvr_PropertySetHomeKeyAll(PBS_HomeEventEnum eventEnum, PBS_HomeFunctionEnum function, int timesetup, string pkg, string className, Action<bool> callback)
		{
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0x99A670", Offset = "0x99A670", VA = "0x99A670")]
		public static void UPvr_PropertyDisablePowerKey(bool isSingleTap, bool enable, Action<int> callback)
		{
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0x99A7E4", Offset = "0x99A7E4", VA = "0x99A7E4")]
		public static void UPvr_PropertySetScreenOffDelay(PBS_ScreenOffDelayTimeEnum timeEnum, Action<int> callback)
		{
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0x99A8F8", Offset = "0x99A8F8", VA = "0x99A8F8")]
		public static void UPvr_PropertySetSleepDelay(PBS_SleepDelayTimeEnum timeEnum)
		{
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0x99A9FC", Offset = "0x99A9FC", VA = "0x99A9FC")]
		public static void UPvr_SwitchSystemFunction(PBS_SystemFunctionSwitchEnum systemFunction, PBS_SwitchEnum switchEnum)
		{
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0x99ABD8", Offset = "0x99ABD8", VA = "0x99ABD8")]
		public static void UPvr_SwitchSetUsbConfigurationOption(PBS_USBConfigModeEnum uSBConfigModeEnum)
		{
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0x99AD40", Offset = "0x99AD40", VA = "0x99AD40")]
		public static void UPvr_ScreenOn()
		{
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0x99ADB4", Offset = "0x99ADB4", VA = "0x99ADB4")]
		public static void UPvr_ScreenOff()
		{
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0x99AE28", Offset = "0x99AE28", VA = "0x99AE28")]
		public static void UPvr_AcquireWakeLock()
		{
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0x99AE9C", Offset = "0x99AE9C", VA = "0x99AE9C")]
		public static void UPvr_ReleaseWakeLock()
		{
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0x99AF10", Offset = "0x99AF10", VA = "0x99AF10")]
		public static void UPvr_EnableEnterKey()
		{
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0x99AF84", Offset = "0x99AF84", VA = "0x99AF84")]
		public static void UPvr_DisableEnterKey()
		{
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0x99AFF8", Offset = "0x99AFF8", VA = "0x99AFF8")]
		public static void UPvr_EnableVolumeKey()
		{
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0x99B06C", Offset = "0x99B06C", VA = "0x99B06C")]
		public static void UPvr_DisableVolumeKey()
		{
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0x99B0E0", Offset = "0x99B0E0", VA = "0x99B0E0")]
		public static void UPvr_EnableBackKey()
		{
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0x99B154", Offset = "0x99B154", VA = "0x99B154")]
		public static void UPvr_DisableBackKey()
		{
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0x99B1C8", Offset = "0x99B1C8", VA = "0x99B1C8")]
		public static void UPvr_WriteConfigFileToDataLocal(string path, string content, Action<bool> callback)
		{
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0x99B30C", Offset = "0x99B30C", VA = "0x99B30C")]
		public static void UPvr_ResetAllKeyToDefault(Action<bool> callback)
		{
		}
	}
	[Token(Token = "0x2000294")]
	public enum GlobalIntConfigs
	{
		[Token(Token = "0x4000F8A")]
		EYE_TEXTURE_RESOLUTION0,
		[Token(Token = "0x4000F8B")]
		EYE_TEXTURE_RESOLUTION1,
		[Token(Token = "0x4000F8C")]
		SEENSOR_COUNT,
		[Token(Token = "0x4000F8D")]
		ABILITY6DOF,
		[Token(Token = "0x4000F8E")]
		PLATFORM_TYPE,
		[Token(Token = "0x4000F8F")]
		TRACKING_MODE,
		[Token(Token = "0x4000F90")]
		LOG_LEVEL,
		[Token(Token = "0x4000F91")]
		ENBLE_HAND6DOF_BY_HEAD,
		[Token(Token = "0x4000F92")]
		ENBLE_6DOF_GLOBAL_TRACKING,
		[Token(Token = "0x4000F93")]
		TARGET_FRAME_RATE,
		[Token(Token = "0x4000F94")]
		iShowFPS,
		[Token(Token = "0x4000F95")]
		SensorMode,
		[Token(Token = "0x4000F96")]
		LOGICFLOW,
		[Token(Token = "0x4000F97")]
		EYE_TEXTURE_RES_HIGH,
		[Token(Token = "0x4000F98")]
		EYE_TEXTURE_RES_NORMAL,
		[Token(Token = "0x4000F99")]
		iCtrlModelLoadingPri,
		[Token(Token = "0x4000F9A")]
		iPhoneHMDModeEnabled,
		[Token(Token = "0x4000F9B")]
		isEnableBoundary,
		[Token(Token = "0x4000F9C")]
		Enable_Activity_Rotation,
		[Token(Token = "0x4000F9D")]
		GetDisplay_Orientation,
		[Token(Token = "0x4000F9E")]
		GetWaitFrameNum,
		[Token(Token = "0x4000F9F")]
		GetResetFrameNum,
		[Token(Token = "0x4000FA0")]
		EnableFFRBYSYS,
		[Token(Token = "0x4000FA1")]
		RotControllerMode
	}
	[Token(Token = "0x2000295")]
	public enum GlobalFloatConfigs
	{
		[Token(Token = "0x4000FA3")]
		IPD,
		[Token(Token = "0x4000FA4")]
		VFOV,
		[Token(Token = "0x4000FA5")]
		HFOV,
		[Token(Token = "0x4000FA6")]
		NECK_MODEL_X,
		[Token(Token = "0x4000FA7")]
		NECK_MODEL_Y,
		[Token(Token = "0x4000FA8")]
		NECK_MODEL_Z,
		[Token(Token = "0x4000FA9")]
		DISPLAY_REFRESH_RATE
	}
	[Token(Token = "0x2000296")]
	public enum RenderTextureAntiAliasing
	{
		[Token(Token = "0x4000FAB")]
		X_1 = 1,
		[Token(Token = "0x4000FAC")]
		X_2 = 2,
		[Token(Token = "0x4000FAD")]
		X_4 = 4,
		[Token(Token = "0x4000FAE")]
		X_8 = 8
	}
	[Token(Token = "0x2000297")]
	public enum PlatForm
	{
		[Token(Token = "0x4000FB0")]
		Android = 1,
		[Token(Token = "0x4000FB1")]
		IOS,
		[Token(Token = "0x4000FB2")]
		Win,
		[Token(Token = "0x4000FB3")]
		Notsupport
	}
	[Token(Token = "0x2000298")]
	public enum RenderTextureDepth
	{
		[Token(Token = "0x4000FB5")]
		BD_0 = 0,
		[Token(Token = "0x4000FB6")]
		BD_16 = 16,
		[Token(Token = "0x4000FB7")]
		BD_24 = 24
	}
	[Token(Token = "0x2000299")]
	public enum RenderTextureLevel
	{
		[Token(Token = "0x4000FB9")]
		Normal,
		[Token(Token = "0x4000FBA")]
		High
	}
	[Token(Token = "0x200029A")]
	public enum Sensorindex
	{
		[Token(Token = "0x4000FBC")]
		Default,
		[Token(Token = "0x4000FBD")]
		FirstSensor,
		[Token(Token = "0x4000FBE")]
		SecondSensor
	}
	[Token(Token = "0x200029B")]
	public enum Eye
	{
		[Token(Token = "0x4000FC0")]
		LeftEye,
		[Token(Token = "0x4000FC1")]
		RightEye,
		[Token(Token = "0x4000FC2")]
		BothEye
	}
	[Token(Token = "0x200029C")]
	public enum ResUtilsType
	{
		[Token(Token = "0x4000FC4")]
		TYPE_TEXTSIZE,
		[Token(Token = "0x4000FC5")]
		TYPE_COLOR,
		[Token(Token = "0x4000FC6")]
		TYPE_TEXT,
		[Token(Token = "0x4000FC7")]
		TYPE_FONT,
		[Token(Token = "0x4000FC8")]
		TYPE_VALUE,
		[Token(Token = "0x4000FC9")]
		TYPE_DRAWABLE,
		[Token(Token = "0x4000FCA")]
		TYPE_OBJECT,
		[Token(Token = "0x4000FCB")]
		TYPR_OBJECTARRAY
	}
	[Token(Token = "0x200029D")]
	public enum TrackingOrigin
	{
		[Token(Token = "0x4000FCD")]
		EyeLevel,
		[Token(Token = "0x4000FCE")]
		FloorLevel,
		[Token(Token = "0x4000FCF")]
		StageLevel
	}
	[Token(Token = "0x200029E")]
	public enum EFoveationLevel
	{
		[Token(Token = "0x4000FD1")]
		Low,
		[Token(Token = "0x4000FD2")]
		Med,
		[Token(Token = "0x4000FD3")]
		High,
		[Token(Token = "0x4000FD4")]
		Top_High
	}
	[Token(Token = "0x200029F")]
	public enum StereoRenderingPathPico
	{
		[Token(Token = "0x4000FD6")]
		MultiPass,
		[Token(Token = "0x4000FD7")]
		SinglePass
	}
	[Token(Token = "0x20002A0")]
	public enum pvrEyePoseStatus
	{
		[Token(Token = "0x4000FD9")]
		kGazePointValid = 1,
		[Token(Token = "0x4000FDA")]
		kGazeVectorValid = 2,
		[Token(Token = "0x4000FDB")]
		kEyeOpennessValid = 4,
		[Token(Token = "0x4000FDC")]
		kEyePupilDilationValid = 8,
		[Token(Token = "0x4000FDD")]
		kEyePositionGuideValid = 0x10
	}
	[Token(Token = "0x20002A1")]
	public enum TrackingMode
	{
		[Token(Token = "0x4000FDF")]
		PVR_TRACKING_MODE_ROTATION = 1,
		[Token(Token = "0x4000FE0")]
		PVR_TRACKING_MODE_POSITION = 2,
		[Token(Token = "0x4000FE1")]
		PVR_TRACKING_MODE_EYE = 4
	}
	[Token(Token = "0x20002A2")]
	public struct EyeTrackingData
	{
		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int leftEyePoseStatus;

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int rightEyePoseStatus;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int combinedEyePoseStatus;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 leftEyeGazePoint;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 rightEyeGazePoint;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 combinedEyeGazePoint;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 leftEyeGazeVector;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 rightEyeGazeVector;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 combinedEyeGazeVector;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float leftEyeOpenness;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float rightEyeOpenness;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float leftEyePupilDilation;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float rightEyePupilDilation;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 leftEyePositionGuide;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector3 rightEyePositionGuide;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Vector3 foveatedGazeDirection;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int foveatedGazeTrackingState;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public byte[] reserved;
	}
	[Token(Token = "0x20002A3")]
	public struct EyeTrackingGazeRay
	{
		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Direction;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool IsValid;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Origin;
	}
	[Token(Token = "0x20002A4")]
	public struct EyeDeviceInfo
	{
		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ViewFrustum targetFrustumLeft;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ViewFrustum targetFrustumRight;
	}
	[Token(Token = "0x20002A5")]
	public struct ViewFrustum
	{
		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float left;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float right;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float top;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float bottom;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float near;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float far;
	}
	[Token(Token = "0x20002A6")]
	public struct EyeSetting
	{
		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform eyelocalPosition;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Rect eyeRect;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float eyeFov;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float eyeAspect;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Matrix4x4 eyeProjectionMatrix;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Shader eyeShader;
	}
	[Token(Token = "0x20002A7")]
	public struct Sensor
	{
		[Token(Token = "0x4001005")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x600134A")]
		[Address(RVA = "0x992AF4", Offset = "0x992AF4", VA = "0x992AF4")]
		private static extern int Pvr_Enable6DofModule(bool enable);

		[PreserveSig]
		[Token(Token = "0x600134B")]
		[Address(RVA = "0x992B94", Offset = "0x992B94", VA = "0x992B94")]
		private static extern int Pvr_OptionalResetSensor(int index, int resetRot, int resetPos);

		[PreserveSig]
		[Token(Token = "0x600134C")]
		[Address(RVA = "0x992C48", Offset = "0x992C48", VA = "0x992C48")]
		private static extern int Pvr_Init(int index);

		[PreserveSig]
		[Token(Token = "0x600134D")]
		[Address(RVA = "0x992CE8", Offset = "0x992CE8", VA = "0x992CE8")]
		private static extern int Pvr_StartSensor(int index);

		[PreserveSig]
		[Token(Token = "0x600134E")]
		[Address(RVA = "0x992D88", Offset = "0x992D88", VA = "0x992D88")]
		private static extern int Pvr_StopSensor(int index);

		[PreserveSig]
		[Token(Token = "0x600134F")]
		[Address(RVA = "0x992E28", Offset = "0x992E28", VA = "0x992E28")]
		private static extern int Pvr_ResetSensor(int index);

		[PreserveSig]
		[Token(Token = "0x6001350")]
		[Address(RVA = "0x992EC8", Offset = "0x992EC8", VA = "0x992EC8")]
		private static extern int Pvr_ResetSensorAll(int index);

		[PreserveSig]
		[Token(Token = "0x6001351")]
		[Address(RVA = "0x992F68", Offset = "0x992F68", VA = "0x992F68")]
		private static extern int Pvr_GetSensorState(int index, ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz);

		[PreserveSig]
		[Token(Token = "0x6001352")]
		[Address(RVA = "0x993060", Offset = "0x993060", VA = "0x993060")]
		private static extern int Pvr_GetMainSensorState(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber);

		[PreserveSig]
		[Token(Token = "0x6001353")]
		[Address(RVA = "0x993160", Offset = "0x993160", VA = "0x993160")]
		private static extern int Pvr_GetPsensorState();

		[PreserveSig]
		[Token(Token = "0x6001354")]
		[Address(RVA = "0x9931F0", Offset = "0x9931F0", VA = "0x9931F0")]
		private static extern int Pvr_GetHmdPSensorStatus();

		[PreserveSig]
		[Token(Token = "0x6001355")]
		[Address(RVA = "0x993280", Offset = "0x993280", VA = "0x993280")]
		private static extern int Pvr_GetSensorGyroscope(int index, ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x6001356")]
		[Address(RVA = "0x993348", Offset = "0x993348", VA = "0x993348")]
		private static extern int Pvr_GetSensorMagnet(int index, ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x6001357")]
		[Address(RVA = "0x993410", Offset = "0x993410", VA = "0x993410")]
		private static extern int Pvr_Get6DofSensorQualityStatus();

		[PreserveSig]
		[Token(Token = "0x6001358")]
		[Address(RVA = "0x9934A0", Offset = "0x9934A0", VA = "0x9934A0")]
		private static extern bool Pvr_Get6DofSafePanelFlag();

		[PreserveSig]
		[Token(Token = "0x6001359")]
		[Address(RVA = "0x993538", Offset = "0x993538", VA = "0x993538")]
		private static extern void Pvr_SetReinPosition(float x, float y, float z, float w, float px, float py, float pz, int hand, bool valid, int key);

		[PreserveSig]
		[Token(Token = "0x600135A")]
		[Address(RVA = "0x993648", Offset = "0x993648", VA = "0x993648")]
		private static extern bool Pvr_SetTrackingOriginType(TrackingOrigin trackingOriginType);

		[Token(Token = "0x600135B")]
		[Address(RVA = "0x9936F0", Offset = "0x9936F0", VA = "0x9936F0")]
		public static bool UPvr_Pvr_Get6DofSafePanelFlag()
		{
			return default(bool);
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0x9936F4", Offset = "0x9936F4", VA = "0x9936F4")]
		public static int UPvr_Init(int index)
		{
			return default(int);
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0x9936F8", Offset = "0x9936F8", VA = "0x9936F8")]
		public static void UPvr_InitPsensor()
		{
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0x9938FC", Offset = "0x9938FC", VA = "0x9938FC")]
		public static int UPvr_GetPsensorState()
		{
			return default(int);
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0x993AE8", Offset = "0x993AE8", VA = "0x993AE8")]
		public static int UPvr_GetPSensorStatus()
		{
			return default(int);
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x993AEC", Offset = "0x993AEC", VA = "0x993AEC")]
		public static void UPvr_UnregisterPsensor()
		{
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0x993C68", Offset = "0x993C68", VA = "0x993C68")]
		public static int UPvr_StartSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0x993C6C", Offset = "0x993C6C", VA = "0x993C6C")]
		public static int UPvr_StopSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0x993C70", Offset = "0x993C70", VA = "0x993C70")]
		public static int UPvr_ResetSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0x993CEC", Offset = "0x993CEC", VA = "0x993CEC")]
		public static int UPvr_OptionalResetSensor(int index, int resetRot, int resetPos)
		{
			return default(int);
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0x993CF0", Offset = "0x993CF0", VA = "0x993CF0")]
		public static int UPvr_GetSensorState(int index, ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz)
		{
			return default(int);
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0x993CF4", Offset = "0x993CF4", VA = "0x993CF4")]
		public static int UPvr_GetMainSensorState(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber)
		{
			return default(int);
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0x993D00", Offset = "0x993D00", VA = "0x993D00")]
		public static int UPvr_GetSensorGyroscope(int index, ref float x, ref float y, ref float z)
		{
			return default(int);
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0x993D04", Offset = "0x993D04", VA = "0x993D04")]
		public static int UPvr_GetSensorMagnet(int index, ref float x, ref float y, ref float z)
		{
			return default(int);
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0x993D08", Offset = "0x993D08", VA = "0x993D08")]
		public static int UPvr_Get6DofSensorQualityStatus()
		{
			return default(int);
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0x993D0C", Offset = "0x993D0C", VA = "0x993D0C")]
		public static int UPvr_Enable6DofModule(bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0x9936FC", Offset = "0x9936FC", VA = "0x9936FC")]
		public static void Pvr_InitPsensor()
		{
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0x993F90", Offset = "0x993F90", VA = "0x993F90")]
		public static bool Pvr_IsHead6dofReset()
		{
			return default(bool);
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0x993950", Offset = "0x993950", VA = "0x993950")]
		public static int Pvr_GetAndroidPsensorState()
		{
			return default(int);
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0x993AF0", Offset = "0x993AF0", VA = "0x993AF0")]
		public static void Pvr_UnregisterPsensor()
		{
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0x9941CC", Offset = "0x9941CC", VA = "0x9941CC")]
		public static int UPvr_ResetSensorAll(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0x9941D0", Offset = "0x9941D0", VA = "0x9941D0")]
		public static void UPvr_SetReinPosition(float x, float y, float z, float w, float px, float py, float pz, int hand, bool valid, int key)
		{
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0x994724", Offset = "0x994724", VA = "0x994724")]
		public static bool UPvr_SetTrackingOriginType(TrackingOrigin trackingOriginType)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002A8")]
	public struct Render
	{
		[Token(Token = "0x4001006")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x6001372")]
		[Address(RVA = "0x990B24", Offset = "0x990B24", VA = "0x990B24")]
		private static extern void Pvr_ChangeScreenParameters(string model, int width, int height, double xppi, double yppi, double densityDpi);

		[PreserveSig]
		[Token(Token = "0x6001373")]
		[Address(RVA = "0x990C14", Offset = "0x990C14", VA = "0x990C14")]
		private static extern int Pvr_SetRatio(float midH, float midV);

		[PreserveSig]
		[Token(Token = "0x6001374")]
		[Address(RVA = "0x990CBC", Offset = "0x990CBC", VA = "0x990CBC")]
		private static extern int Pvr_SetPupillaryPoint(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001375")]
		[Address(RVA = "0x990D5C", Offset = "0x990D5C", VA = "0x990D5C")]
		private static extern IntPtr Pvr_GetSupportHMDTypes();

		[PreserveSig]
		[Token(Token = "0x6001376")]
		[Address(RVA = "0x990DEC", Offset = "0x990DEC", VA = "0x990DEC")]
		private static extern void Pvr_SetCurrentHMDType(string type);

		[PreserveSig]
		[Token(Token = "0x6001377")]
		[Address(RVA = "0x990E9C", Offset = "0x990E9C", VA = "0x990E9C")]
		private static extern int Pvr_GetIntConfig(int configsenum, ref int res);

		[PreserveSig]
		[Token(Token = "0x6001378")]
		[Address(RVA = "0x990F48", Offset = "0x990F48", VA = "0x990F48")]
		private static extern int Pvr_GetFloatConfig(int configsenum, ref float res);

		[PreserveSig]
		[Token(Token = "0x6001379")]
		[Address(RVA = "0x990FF4", Offset = "0x990FF4", VA = "0x990FF4")]
		private static extern void Pvr_SetupLayerData(int layerIndex, int sideMask, int textureId, int textureType, int layerFlags, float[] colorScaleAndOffset);

		[PreserveSig]
		[Token(Token = "0x600137A")]
		[Address(RVA = "0x9910DC", Offset = "0x9910DC", VA = "0x9910DC")]
		private static extern void Pvr_SetupLayerCoords(int layerIndex, int sideMask, float[] lowerLeft, float[] lowerRight, float[] upperLeft, float[] upperRight);

		[PreserveSig]
		[Token(Token = "0x600137B")]
		[Address(RVA = "0x9911DC", Offset = "0x9911DC", VA = "0x9911DC")]
		private static extern void Pvr_SetOverlayModelViewMatrix(int overlayType, int overlayShape, int texId, int eyeSide, int layerIndex, bool isHeadLocked, int layerFlags, float[] mvMatrix, float[] modelS, float[] modelR, float[] modelT, float[] cameraR, float[] cameraT, float[] colorScaleAndOffset);

		[PreserveSig]
		[Token(Token = "0x600137C")]
		[Address(RVA = "0x99133C", Offset = "0x99133C", VA = "0x99133C")]
		private static extern bool Pvr_EnableFoveation(bool enable);

		[PreserveSig]
		[Token(Token = "0x600137D")]
		[Address(RVA = "0x9913E4", Offset = "0x9913E4", VA = "0x9913E4")]
		private static extern void Pvr_SetFoveationParameters(int textureId, int previousId, float focalPointX, float focalPointY, float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum);

		[PreserveSig]
		[Token(Token = "0x600137E")]
		[Address(RVA = "0x9914DC", Offset = "0x9914DC", VA = "0x9914DC")]
		private static extern void Pvr_SetFoveationResource(int textureId, int previousId, float focalPointX, float focalPointY);

		[PreserveSig]
		[Token(Token = "0x600137F")]
		[Address(RVA = "0x9915A4", Offset = "0x9915A4", VA = "0x9915A4")]
		private static extern void Pvr_SetFoveationParameters2(float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum);

		[PreserveSig]
		[Token(Token = "0x6001380")]
		[Address(RVA = "0x991668", Offset = "0x991668", VA = "0x991668")]
		private static extern void Pvr_SetFoveationLevel(EFoveationLevel level);

		[PreserveSig]
		[Token(Token = "0x6001381")]
		[Address(RVA = "0x991708", Offset = "0x991708", VA = "0x991708")]
		private static extern EFoveationLevel Pvr_GetFoveationLevel();

		[PreserveSig]
		[Token(Token = "0x6001382")]
		[Address(RVA = "0x991798", Offset = "0x991798", VA = "0x991798")]
		private static extern bool Pvr_GetIntSysProc(string property, ref int res);

		[PreserveSig]
		[Token(Token = "0x6001383")]
		[Address(RVA = "0x991864", Offset = "0x991864", VA = "0x991864")]
		private static extern void Pvr_SetColorspaceType(int colorspaceType);

		[PreserveSig]
		[Token(Token = "0x6001384")]
		[Address(RVA = "0x991904", Offset = "0x991904", VA = "0x991904")]
		private static extern void Pvr_SetCastingColorspaceType(int colorspaceType);

		[PreserveSig]
		[Token(Token = "0x6001385")]
		[Address(RVA = "0x9919A4", Offset = "0x9919A4", VA = "0x9919A4")]
		private static extern IntPtr Pvr_CreateLayerAndroidSurface(int layerType, int layerIndex);

		[PreserveSig]
		[Token(Token = "0x6001386")]
		[Address(RVA = "0x991A54", Offset = "0x991A54", VA = "0x991A54")]
		private static extern IntPtr Pvr_GetLayerAndroidSurface(int layerType, int layerIndex);

		[PreserveSig]
		[Token(Token = "0x6001387")]
		[Address(RVA = "0x991B04", Offset = "0x991B04", VA = "0x991B04")]
		private static extern void Pvr_SetMonoMode(bool openMono);

		[PreserveSig]
		[Token(Token = "0x6001388")]
		[Address(RVA = "0x991BA4", Offset = "0x991BA4", VA = "0x991BA4")]
		private static extern void Pvr_GetStencilMesh(int eye, ref int vertexCount, ref int triangleCount, ref IntPtr vertexData, ref IntPtr indexData);

		[Token(Token = "0x6001389")]
		[Address(RVA = "0x991C74", Offset = "0x991C74", VA = "0x991C74")]
		public static void UPvr_ChangeScreenParameters(string model, int width, int height, double xppi, double yppi, double densityDpi)
		{
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0x991C78", Offset = "0x991C78", VA = "0x991C78")]
		public static int UPvr_SetRatio(float midH, float midV)
		{
			return default(int);
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0x991C7C", Offset = "0x991C7C", VA = "0x991C7C")]
		public static void UPvr_EnableFoveation(bool enable)
		{
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0x991E64", Offset = "0x991E64", VA = "0x991E64")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x4B5EB0", Offset = "0x4B5EB0")]
		public static void UPvr_SetFoveationParameters(int textureId, int previousId, float focalPointX, float focalPointY, float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum)
		{
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0x991E68", Offset = "0x991E68", VA = "0x991E68")]
		public static void UPvr_SetFoveationResource(int textureId, int previousId, float focalPointX, float focalPointY)
		{
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0x991E6C", Offset = "0x991E6C", VA = "0x991E6C")]
		public static void SetFoveatedRenderingLevel(EFoveationLevel level)
		{
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0x991F80", Offset = "0x991F80", VA = "0x991F80")]
		public static EFoveationLevel GetFoveatedRenderingLevel()
		{
			return default(EFoveationLevel);
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0x991F84", Offset = "0x991F84", VA = "0x991F84")]
		public static void SetFoveatedRenderingParameters(Vector2 ffrGainValue, float ffrAreaValue, float ffrMinimumValue)
		{
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0x9920C8", Offset = "0x9920C8", VA = "0x9920C8")]
		public static bool UPvr_GetIntSysProc(string property, ref int res)
		{
			return default(bool);
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0x9920CC", Offset = "0x9920CC", VA = "0x9920CC")]
		public static int UPvr_GetIntConfig(int configsenum, ref int res)
		{
			return default(int);
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0x9920D0", Offset = "0x9920D0", VA = "0x9920D0")]
		public static int UPvr_GetFloatConfig(int configsenum, ref float res)
		{
			return default(int);
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0x9920D4", Offset = "0x9920D4", VA = "0x9920D4")]
		public static string UPvr_GetSupportHMDTypes()
		{
			return null;
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0x992160", Offset = "0x992160", VA = "0x992160")]
		public static void UPvr_SetCurrentHMDType(string type)
		{
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0x992164", Offset = "0x992164", VA = "0x992164")]
		public static void UPvr_SetupLayerData(int layerIndex, int sideMask, int textureId, int textureType, int layerFlags, Vector4 colorScale, Vector4 colorOffset)
		{
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0x992338", Offset = "0x992338", VA = "0x992338")]
		public static void UPvr_SetupLayerCoords(int layerIndex, int sideMask, float[] lowerLeft, float[] lowerRight, float[] upperLeft, float[] upperRight)
		{
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0x99233C", Offset = "0x99233C", VA = "0x99233C")]
		public static void UPvr_SetOverlayModelViewMatrix(int overlayType, int overlayShape, int texId, int eyeSide, int layerIndex, bool isHeadLocked, int layerFlags, Matrix4x4 mvMatrix, Vector3 modelS, Quaternion modelR, Vector3 modelT, Quaternion cameraR, Vector3 cameraT, Vector4 colorScale, Vector4 colorOffset)
		{
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0x992AD8", Offset = "0x992AD8", VA = "0x992AD8")]
		public static void UPvr_SetColorspaceType(int colorspaceType)
		{
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0x992ADC", Offset = "0x992ADC", VA = "0x992ADC")]
		public static void UPvr_SetCastingColorspaceType(int colorspaceType)
		{
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0x992AE0", Offset = "0x992AE0", VA = "0x992AE0")]
		public static IntPtr UPvr_CreateLayerAndroidSurface(int layerType, int layerIndex)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0x992AE4", Offset = "0x992AE4", VA = "0x992AE4")]
		public static IntPtr UPvr_GetLayerAndroidSurface(int layerType, int layerIndex)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0x992AE8", Offset = "0x992AE8", VA = "0x992AE8")]
		public static void UPvr_SetMonoMode(bool openMono)
		{
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0x992AF0", Offset = "0x992AF0", VA = "0x992AF0")]
		public static void UPvr_GetStencilMesh(int eye, ref int vertexCount, ref int triangleCount, ref IntPtr vertexDataPtr, ref IntPtr indexDataPtr)
		{
		}
	}
	[Token(Token = "0x20002A9")]
	public struct System
	{
		[Token(Token = "0x4001007")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x4001008")]
		public const string UnitySDKVersion = "2.8.9.12";

		[PreserveSig]
		[Token(Token = "0x600139F")]
		[Address(RVA = "0x994728", Offset = "0x994728", VA = "0x994728")]
		public static extern void Pvr_SetInitActivity(IntPtr activity, IntPtr vrActivityClass);

		[PreserveSig]
		[Token(Token = "0x60013A0")]
		[Address(RVA = "0x9947D8", Offset = "0x9947D8", VA = "0x9947D8")]
		private static extern IntPtr Pvr_GetSDKVersion();

		[PreserveSig]
		[Token(Token = "0x60013A1")]
		[Address(RVA = "0x994868", Offset = "0x994868", VA = "0x994868")]
		public static extern int Pvr_GetHmdHardwareVersion();

		[PreserveSig]
		[Token(Token = "0x60013A2")]
		[Address(RVA = "0x9948F8", Offset = "0x9948F8", VA = "0x9948F8")]
		public static extern IntPtr Pvr_GetHmdFirmwareVersion();

		[PreserveSig]
		[Token(Token = "0x60013A3")]
		[Address(RVA = "0x994988", Offset = "0x994988", VA = "0x994988")]
		public static extern IntPtr Pvr_GetHmdSerialNumber();

		[PreserveSig]
		[Token(Token = "0x60013A4")]
		[Address(RVA = "0x994A18", Offset = "0x994A18", VA = "0x994A18")]
		public static extern int PVR_GetHmdBatteryStatus();

		[PreserveSig]
		[Token(Token = "0x60013A5")]
		[Address(RVA = "0x994AA8", Offset = "0x994AA8", VA = "0x994AA8")]
		public static extern float PVR_GetHmdBatteryTemperature();

		[PreserveSig]
		[Token(Token = "0x60013A6")]
		[Address(RVA = "0x994B38", Offset = "0x994B38", VA = "0x994B38")]
		public static extern int PVR_SetHmdAudioStatus(bool enable);

		[PreserveSig]
		[Token(Token = "0x60013A7")]
		[Address(RVA = "0x994BD8", Offset = "0x994BD8", VA = "0x994BD8")]
		public static extern bool Pvr_GetEyeTrackingData(ref int leftEyePoseStatus, ref int rightEyePoseStatus, ref int combinedEyePoseStatus, ref float leftEyeGazePointX, ref float leftEyeGazePointY, ref float leftEyeGazePointZ, ref float rightEyeGazePointX, ref float rightEyeGazePointY, ref float rightEyeGazePointZ, ref float combinedEyeGazePointX, ref float combinedEyeGazePointY, ref float combinedEyeGazePointZ, ref float leftEyeGazeVectorX, ref float leftEyeGazeVectorY, ref float leftEyeGazeVectorZ, ref float rightEyeGazeVectorX, ref float rightEyeGazeVectorY, ref float rightEyeGazeVectorZ, ref float combinedEyeGazeVectorX, ref float combinedEyeGazeVectorY, ref float combinedEyeGazeVectorZ, ref float leftEyeOpenness, ref float rightEyeOpenness, ref float leftEyePupilDilation, ref float rightEyePupilDilation, ref float leftEyePositionGuideX, ref float leftEyePositionGuideY, ref float leftEyePositionGuideZ, ref float rightEyePositionGuideX, ref float rightEyePositionGuideY, ref float rightEyePositionGuideZ, ref float foveatedGazeDirectionX, ref float foveatedGazeDirectionY, ref float foveatedGazeDirectionZ, ref int foveatedGazeTrackingState);

		[PreserveSig]
		[Token(Token = "0x60013A8")]
		[Address(RVA = "0x994D30", Offset = "0x994D30", VA = "0x994D30")]
		public static extern bool Pvr_SetTrackingMode(int trackingMode);

		[PreserveSig]
		[Token(Token = "0x60013A9")]
		[Address(RVA = "0x994DD8", Offset = "0x994DD8", VA = "0x994DD8")]
		public static extern int Pvr_GetTrackingMode();

		[PreserveSig]
		[Token(Token = "0x60013AA")]
		[Address(RVA = "0x994E68", Offset = "0x994E68", VA = "0x994E68")]
		public static extern IntPtr GetRenderEventFunc();

		[PreserveSig]
		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x994EF8", Offset = "0x994EF8", VA = "0x994EF8")]
		public static extern void UnityEventData(long data);

		[PreserveSig]
		[Token(Token = "0x60013AC")]
		[Address(RVA = "0x994F98", Offset = "0x994F98", VA = "0x994F98")]
		public static extern bool Pvr_EnableSinglePass(bool enable);

		[PreserveSig]
		[Token(Token = "0x60013AD")]
		[Address(RVA = "0x995040", Offset = "0x995040", VA = "0x995040")]
		public static extern void Pvr_SetAntiAliasing(int antiAliasing);

		[PreserveSig]
		[Token(Token = "0x60013AE")]
		[Address(RVA = "0x9950E0", Offset = "0x9950E0", VA = "0x9950E0")]
		public static extern void Pvr_SinglePassBeforeForwardOpaque();

		[PreserveSig]
		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x995170", Offset = "0x995170", VA = "0x995170")]
		public static extern void Pvr_SetCurrentRenderTexture(uint textureId);

		[PreserveSig]
		[Token(Token = "0x60013B0")]
		[Address(RVA = "0x995210", Offset = "0x995210", VA = "0x995210")]
		public static extern bool Pvr_SetSinglePassDepthBufferWidthHeight(int width, int height);

		[PreserveSig]
		[Token(Token = "0x60013B1")]
		[Address(RVA = "0x9952C8", Offset = "0x9952C8", VA = "0x9952C8")]
		public static extern int PVR_setPerformanceLevels(int cpuLevel, int gpuLevel);

		[PreserveSig]
		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x995378", Offset = "0x995378", VA = "0x995378")]
		public static extern bool Pvr_SetIPD(float distance);

		[PreserveSig]
		[Token(Token = "0x60013B3")]
		[Address(RVA = "0x995424", Offset = "0x995424", VA = "0x995424")]
		public static extern float Pvr_GetIPD();

		[PreserveSig]
		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x9954B4", Offset = "0x9954B4", VA = "0x9954B4")]
		public static extern bool Pvr_SetTrackingIPDEnabled(bool enable);

		[PreserveSig]
		[Token(Token = "0x60013B5")]
		[Address(RVA = "0x99555C", Offset = "0x99555C", VA = "0x99555C")]
		public static extern bool Pvr_GetTrackingIPDEnabled();

		[PreserveSig]
		[Token(Token = "0x60013B6")]
		[Address(RVA = "0x9955F4", Offset = "0x9955F4", VA = "0x9955F4")]
		public static extern bool Pvr_GetEyeTrackingAutoIPD(ref float autoIPD);

		[PreserveSig]
		[Token(Token = "0x60013B7")]
		[Address(RVA = "0x990A94", Offset = "0x990A94", VA = "0x990A94")]
		public static extern int PVR_GetHmdAudioStatus();

		[Token(Token = "0x60013B8")]
		public static bool UPvr_CallStaticMethod<T>(ref T result, AndroidJavaClass jclass, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x993D14", Offset = "0x993D14", VA = "0x993D14")]
		public static bool UPvr_CallStaticMethod(AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60013BA")]
		public static bool UPvr_CallMethod<T>(ref T result, AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0x99569C", Offset = "0x99569C", VA = "0x99569C")]
		public static bool UPvr_CallMethod(AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0x995918", Offset = "0x995918", VA = "0x995918")]
		public static string UPvr_GetSDKVersion()
		{
			return null;
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0x9959AC", Offset = "0x9959AC", VA = "0x9959AC")]
		public static string UPvr_GetUnitySDKVersion()
		{
			return null;
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0x9959F4", Offset = "0x9959F4", VA = "0x9959F4")]
		public static string UPvr_GetDeviceMode()
		{
			return null;
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0x9959FC", Offset = "0x9959FC", VA = "0x9959FC")]
		public static string UPvr_GetDeviceModel()
		{
			return null;
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0x98FD18", Offset = "0x98FD18", VA = "0x98FD18")]
		public static string UPvr_GetDeviceSN()
		{
			return null;
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0x9900D0", Offset = "0x9900D0", VA = "0x9900D0")]
		public static AndroidJavaObject UPvr_GetCurrentActivity()
		{
			return null;
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0x995A04", Offset = "0x995A04", VA = "0x995A04")]
		public static bool UPvr_SetMonoPresentation()
		{
			return default(bool);
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0x995A70", Offset = "0x995A70", VA = "0x995A70")]
		public static bool UPvr_IsPresentationExisted()
		{
			return default(bool);
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x995B00", Offset = "0x995B00", VA = "0x995B00")]
		public static bool UPvr_GetMainActivityPauseStatus()
		{
			return default(bool);
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x995B90", Offset = "0x995B90", VA = "0x995B90")]
		public static void UPvr_Sleep()
		{
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0x995C1C", Offset = "0x995C1C", VA = "0x995C1C")]
		public static bool UPvr_StartHomeKeyReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x995EC4", Offset = "0x995EC4", VA = "0x995EC4")]
		public static bool UPvr_StopHomeKeyReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x99611C", Offset = "0x99611C", VA = "0x99611C")]
		public static void UPvr_StartVRModel()
		{
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x9961A8", Offset = "0x9961A8", VA = "0x9961A8")]
		public static void UPvr_RemovePlatformLogo()
		{
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x996234", Offset = "0x996234", VA = "0x996234")]
		public static void UPvr_ShowPlatformLogo()
		{
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x9962C0", Offset = "0x9962C0", VA = "0x9962C0")]
		public static bool UPvr_IsPicoActivity()
		{
			return default(bool);
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0x9963E0", Offset = "0x9963E0", VA = "0x9963E0")]
		public static void UPvr_StopVRModel()
		{
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x99646C", Offset = "0x99646C", VA = "0x99646C")]
		public static string UPvr_GetCountryCode()
		{
			return null;
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x996590", Offset = "0x996590", VA = "0x996590")]
		public static bool UPvr_SetIPD(float distance)
		{
			return default(bool);
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x996A44", Offset = "0x996A44", VA = "0x996A44")]
		public static float UPvr_GetIPD()
		{
			return default(float);
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x996B04", Offset = "0x996B04", VA = "0x996B04")]
		public static bool UPvr_SetTrackingIPDEnabled(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x996B0C", Offset = "0x996B0C", VA = "0x996B0C")]
		public static bool UPvr_GetTrackingIPDEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x996B10", Offset = "0x996B10", VA = "0x996B10")]
		public static bool UPvr_GetEyeTrackingAutoIPD(ref float autoipd)
		{
			return default(bool);
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x996B14", Offset = "0x996B14", VA = "0x996B14")]
		public static void UPvr_UnityEventData(long data)
		{
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x996B18", Offset = "0x996B18", VA = "0x996B18")]
		public static long UPvr_GetEyeBufferData(int id)
		{
			return default(long);
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x996B98", Offset = "0x996B98", VA = "0x996B98")]
		public static bool UPvr_checkDevice(string packagename)
		{
			return default(bool);
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x996CF8", Offset = "0x996CF8", VA = "0x996CF8")]
		public static int UPvr_GetHmdHardwareVersion()
		{
			return default(int);
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0x996CFC", Offset = "0x996CFC", VA = "0x996CFC")]
		public static string UPvr_GetHmdFirmwareVersion()
		{
			return null;
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0x996D90", Offset = "0x996D90", VA = "0x996D90")]
		public static string UPvr_GetHmdSerialNumber()
		{
			return null;
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0x996E24", Offset = "0x996E24", VA = "0x996E24")]
		public static int UPvr_GetHmdBatteryStatus()
		{
			return default(int);
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x996E28", Offset = "0x996E28", VA = "0x996E28")]
		public static float UPvr_GetHmdBatteryTemperature()
		{
			return default(float);
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0x996E2C", Offset = "0x996E2C", VA = "0x996E2C")]
		public static int UPvr_SetHmdAudioStatus(bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0x996E34", Offset = "0x996E34", VA = "0x996E34")]
		public static int UPvr_GetTrackingMode()
		{
			return default(int);
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0x996E38", Offset = "0x996E38", VA = "0x996E38")]
		public static bool UPvr_setTrackingMode(int trackingMode)
		{
			return default(bool);
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0x996E3C", Offset = "0x996E3C", VA = "0x996E3C")]
		public static bool UPvr_getEyeTrackingData(ref EyeTrackingData trackingData)
		{
			return default(bool);
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0x9970A8", Offset = "0x9970A8", VA = "0x9970A8")]
		public static bool UPvr_getEyeTrackingGazeRay(ref EyeTrackingGazeRay gazeRay)
		{
			return default(bool);
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0x997318", Offset = "0x997318", VA = "0x997318")]
		public static bool UPvr_getEyeTrackingGazeRayWorld(ref EyeTrackingGazeRay gazeRay)
		{
			return default(bool);
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0x99762C", Offset = "0x99762C", VA = "0x99762C")]
		public static Vector3 UPvr_getEyeTrackingPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0x9979B0", Offset = "0x9979B0", VA = "0x9979B0")]
		public static int UPvr_GetPhoneScreenBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0x997AC8", Offset = "0x997AC8", VA = "0x997AC8")]
		public static void UPvr_SetPhoneScreenBrightness(int level)
		{
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x997C38", Offset = "0x997C38", VA = "0x997C38")]
		public static bool UPvr_IsPicoDefaultActivity()
		{
			return default(bool);
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x997F58", Offset = "0x997F58", VA = "0x997F58")]
		public static bool UPvr_EnableSinglePass(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0x997F60", Offset = "0x997F60", VA = "0x997F60")]
		public static void UPvr_SetAntiAliasing(int antiAliasing)
		{
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0x997F64", Offset = "0x997F64", VA = "0x997F64")]
		public static void UPvr_SinglePassBeforeForwardOpaque()
		{
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0x997F68", Offset = "0x997F68", VA = "0x997F68")]
		public static void UPvr_SetCurrentRenderTexture(uint textureId)
		{
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0x997F6C", Offset = "0x997F6C", VA = "0x997F6C")]
		public static bool UPvr_SetSinglePassDepthBufferWidthHeight(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0x997F70", Offset = "0x997F70", VA = "0x997F70")]
		public static int UPVR_setPerformanceLevels(int cpuLevel, int gpuLevel)
		{
			return default(int);
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x997F74", Offset = "0x997F74", VA = "0x997F74")]
		public static int UPvr_GetColorRes(string name)
		{
			return default(int);
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x998168", Offset = "0x998168", VA = "0x998168")]
		public static int UPvr_GetConfigInt(string name)
		{
			return default(int);
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x99835C", Offset = "0x99835C", VA = "0x99835C")]
		public static string UPvr_GetConfigString(string name)
		{
			return null;
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x998558", Offset = "0x998558", VA = "0x998558")]
		public static string UPvr_GetDrawableLocation(string name)
		{
			return null;
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x998754", Offset = "0x998754", VA = "0x998754")]
		public static int UPvr_GetTextSize(string name)
		{
			return default(int);
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x998948", Offset = "0x998948", VA = "0x998948")]
		public static string UPvr_GetLangString(string name)
		{
			return null;
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0x998B44", Offset = "0x998B44", VA = "0x998B44")]
		public static string UPvr_GetStringValue(string id, int type)
		{
			return null;
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0x998DB8", Offset = "0x998DB8", VA = "0x998DB8")]
		public static int UPvr_GetIntValue(string id, int type)
		{
			return default(int);
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x999024", Offset = "0x999024", VA = "0x999024")]
		public static float UPvr_GetFloatValue(string id)
		{
			return default(float);
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x999218", Offset = "0x999218", VA = "0x999218")]
		public static string UPvr_GetObjectOrArray(string id, int type)
		{
			return null;
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x99948C", Offset = "0x99948C", VA = "0x99948C")]
		public static int UPvr_GetCharSpace(string id)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002AA")]
	public struct BoundarySystem
	{
		[Token(Token = "0x20004BF")]
		public enum BoundaryType
		{
			[Token(Token = "0x4001B4A")]
			OuterBoundary,
			[Token(Token = "0x4001B4B")]
			PlayArea
		}

		[Token(Token = "0x20004C0")]
		public struct BoundaryTestResult
		{
			[Token(Token = "0x4001B4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool IsTriggering;

			[Token(Token = "0x4001B4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float ClosestDistance;

			[Token(Token = "0x4001B4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 ClosestPoint;

			[Token(Token = "0x4001B4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 ClosestPointNormal;
		}

		[Token(Token = "0x20004C1")]
		public enum BoundaryTrackingNode
		{
			[Token(Token = "0x4001B51")]
			HandLeft,
			[Token(Token = "0x4001B52")]
			HandRight,
			[Token(Token = "0x4001B53")]
			Head
		}

		[Token(Token = "0x20004C2")]
		public enum BoundaryTrackingState
		{
			[Token(Token = "0x4001B55")]
			PVR_NOREASON,
			[Token(Token = "0x4001B56")]
			PVRRELOCATION_IN_PROGRESS,
			[Token(Token = "0x4001B57")]
			PVRLOW_FEATURE_COUNT_ERROR,
			[Token(Token = "0x4001B58")]
			PVRLOW_LIGHT_ERROR,
			[Token(Token = "0x4001B59")]
			PVRBRIGHT_LIGHT_ERROR,
			[Token(Token = "0x4001B5A")]
			PVRSTEREO_CAMERA_CALIBRATION_ERROR
		}

		[Token(Token = "0x4001009")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x8B2648", Offset = "0x8B2648", VA = "0x8B2648")]
		private static extern float Pvr_GetFloorHeight();

		[PreserveSig]
		[Token(Token = "0x60013F7")]
		[Address(RVA = "0x8B26D8", Offset = "0x8B26D8", VA = "0x8B26D8")]
		private static extern int Pvr_GetSeeThroughState();

		[PreserveSig]
		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x8B2768", Offset = "0x8B2768", VA = "0x8B2768")]
		private static extern void Pvr_BoundarySetSTBackground(bool value);

		[PreserveSig]
		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x8B2808", Offset = "0x8B2808", VA = "0x8B2808")]
		private static extern int Pvr_GetTrackingState();

		[PreserveSig]
		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x8B2898", Offset = "0x8B2898", VA = "0x8B2898")]
		private static extern bool Pvr_GetFrameRateLimit();

		[PreserveSig]
		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x8B2930", Offset = "0x8B2930", VA = "0x8B2930")]
		private static extern bool Pvr_IsBoundaryEnable();

		[PreserveSig]
		[Token(Token = "0x60013FC")]
		[Address(RVA = "0x8B29C8", Offset = "0x8B29C8", VA = "0x8B29C8")]
		private static extern bool Pvr_BoundaryGetConfigured();

		[PreserveSig]
		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x8B2A60", Offset = "0x8B2A60", VA = "0x8B2A60")]
		private static extern bool Pvr_BoundaryTestNode(int node, bool isPlayArea, ref bool isTriggering, ref float closestDistance, ref float px, ref float py, ref float pz, ref float nx, ref float ny, ref float nz);

		[PreserveSig]
		[Token(Token = "0x60013FE")]
		[Address(RVA = "0x8B2B80", Offset = "0x8B2B80", VA = "0x8B2B80")]
		private static extern bool Pvr_BoundaryTestPoint(float x, float y, float z, bool isPlayArea, ref bool isTriggering, ref float closestDistance, ref float px, ref float py, ref float pz, ref float nx, ref float ny, ref float nz);

		[PreserveSig]
		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x8B2CC8", Offset = "0x8B2CC8", VA = "0x8B2CC8")]
		private static extern int Pvr_BoundaryGetGeometry(out IntPtr handle, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x6001400")]
		[Address(RVA = "0x8B2D74", Offset = "0x8B2D74", VA = "0x8B2D74")]
		private static extern int Pvr_BoundaryGetDimensions(ref float x, ref float y, ref float z, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x6001401")]
		[Address(RVA = "0x8B2E3C", Offset = "0x8B2E3C", VA = "0x8B2E3C")]
		private static extern bool Pvr_BoundaryGetEnabled();

		[PreserveSig]
		[Token(Token = "0x6001402")]
		[Address(RVA = "0x8B2ED4", Offset = "0x8B2ED4", VA = "0x8B2ED4")]
		private static extern void Pvr_BoundarySetVisible(bool value);

		[PreserveSig]
		[Token(Token = "0x6001403")]
		[Address(RVA = "0x8B2F74", Offset = "0x8B2F74", VA = "0x8B2F74")]
		private static extern bool Pvr_BoundaryGetVisible();

		[PreserveSig]
		[Token(Token = "0x6001404")]
		[Address(RVA = "0x8B300C", Offset = "0x8B300C", VA = "0x8B300C")]
		private static extern bool Pvr_EnableLWRP(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001405")]
		[Address(RVA = "0x8B30B4", Offset = "0x8B30B4", VA = "0x8B30B4")]
		private static extern bool Pvr_SetViewportSize(int w, int h);

		[PreserveSig]
		[Token(Token = "0x6001406")]
		[Address(RVA = "0x8B316C", Offset = "0x8B316C", VA = "0x8B316C")]
		private static extern void Pvr_BoundarySetSeeThroughVisible(bool value);

		[PreserveSig]
		[Token(Token = "0x6001407")]
		[Address(RVA = "0x8B320C", Offset = "0x8B320C", VA = "0x8B320C")]
		private static extern void PVR_SetCameraImageRect(int width, int height);

		[PreserveSig]
		[Token(Token = "0x6001408")]
		[Address(RVA = "0x8B32BC", Offset = "0x8B32BC", VA = "0x8B32BC")]
		private static extern void Pvr_SetGuardianSystemDisable(bool value);

		[PreserveSig]
		[Token(Token = "0x6001409")]
		[Address(RVA = "0x8B335C", Offset = "0x8B335C", VA = "0x8B335C")]
		private static extern int Pvr_GetDialogState();

		[Token(Token = "0x600140A")]
		[Address(RVA = "0x8B33EC", Offset = "0x8B33EC", VA = "0x8B33EC")]
		public static float UPvr_GetFloorHeight()
		{
			return default(float);
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0x8B33F0", Offset = "0x8B33F0", VA = "0x8B33F0")]
		public static int UPvr_GetSeeThroughState()
		{
			return default(int);
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0x8B33F4", Offset = "0x8B33F4", VA = "0x8B33F4")]
		public static void UPvr_EnableSeeThroughManual(bool enable)
		{
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0x8B33FC", Offset = "0x8B33FC", VA = "0x8B33FC")]
		public static BoundaryTrackingState UPvr_GetTrackingState()
		{
			return default(BoundaryTrackingState);
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0x8B3400", Offset = "0x8B3400", VA = "0x8B3400")]
		public static bool UPvr_GetFrameRateLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0x8B3404", Offset = "0x8B3404", VA = "0x8B3404")]
		public static bool UPvr_IsBoundaryEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0x8B3408", Offset = "0x8B3408", VA = "0x8B3408")]
		public static bool UPvr_BoundaryGetConfigured()
		{
			return default(bool);
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0x8B340C", Offset = "0x8B340C", VA = "0x8B340C")]
		public static BoundaryTestResult UPvr_BoundaryTestNode(BoundaryTrackingNode node, BoundaryType boundaryType)
		{
			return default(BoundaryTestResult);
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0x8B3550", Offset = "0x8B3550", VA = "0x8B3550")]
		public static BoundaryTestResult UPvr_BoundaryTestPoint(Vector3 point, BoundaryType boundaryType)
		{
			return default(BoundaryTestResult);
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0x8B36A0", Offset = "0x8B36A0", VA = "0x8B36A0")]
		public static Vector3[] UPvr_BoundaryGetGeometry(BoundaryType boundaryType)
		{
			return null;
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0x8B38F8", Offset = "0x8B38F8", VA = "0x8B38F8")]
		public static Vector3 UPvr_BoundaryGetDimensions(BoundaryType boundaryType)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0x8B3954", Offset = "0x8B3954", VA = "0x8B3954")]
		public static bool UPvr_BoundaryGetEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0x8B3958", Offset = "0x8B3958", VA = "0x8B3958")]
		public static void UPvr_BoundarySetVisible(bool value)
		{
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0x8B3960", Offset = "0x8B3960", VA = "0x8B3960")]
		public static bool UPvr_BoundaryGetVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0x8B3964", Offset = "0x8B3964", VA = "0x8B3964")]
		public static bool UPvr_EnableLWRP(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0x8B396C", Offset = "0x8B396C", VA = "0x8B396C")]
		public static bool UPvr_SetViewportSize(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0x8B3970", Offset = "0x8B3970", VA = "0x8B3970")]
		public static void UPvr_StartCameraFrame()
		{
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0x8B3AB8", Offset = "0x8B3AB8", VA = "0x8B3AB8")]
		public static void UPvr_StopCameraFrame()
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0x8B3C00", Offset = "0x8B3C00", VA = "0x8B3C00")]
		public static void UPvr_BoundaryGetSeeThroughData(int cameraIndex, RenderTexture renderTexture)
		{
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0x8B3DF4", Offset = "0x8B3DF4", VA = "0x8B3DF4")]
		public static void UPvr_BoundarySetCameraImageRect(int width, int height)
		{
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0x8B3F30", Offset = "0x8B3F30", VA = "0x8B3F30")]
		public static void UPvr_BoundarySetSeeThroughVisible(bool value)
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0x8B4058", Offset = "0x8B4058", VA = "0x8B4058")]
		public static void UPvr_SetGuardianSystemDisable(bool value)
		{
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0x8B4180", Offset = "0x8B4180", VA = "0x8B4180")]
		public static int UPvr_GetDialogState()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002AB")]
	public struct PlatformSettings
	{
		[Token(Token = "0x6001421")]
		[Address(RVA = "0x98FADC", Offset = "0x98FADC", VA = "0x98FADC")]
		public static Pvr_UnitySDKPlatformSetting.simulationType UPvr_IsCurrentDeviceValid()
		{
			return default(Pvr_UnitySDKPlatformSetting.simulationType);
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0x98FDCC", Offset = "0x98FDCC", VA = "0x98FDCC")]
		public static bool UPvr_AppEntitlementCheck(string appid)
		{
			return default(bool);
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x99015C", Offset = "0x99015C", VA = "0x99015C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x4B5EE8", Offset = "0x4B5EE8")]
		public static bool UPvr_KeyEntitlementCheck(string publicKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0x990460", Offset = "0x990460", VA = "0x990460")]
		public static int UPvr_AppEntitlementCheckExtra(string appid)
		{
			return default(int);
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0x990778", Offset = "0x990778", VA = "0x990778")]
		public static int UPvr_KeyEntitlementCheckExtra(string publicKey)
		{
			return default(int);
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0x990A90", Offset = "0x990A90", VA = "0x990A90")]
		public static int UPvr_GetHmdAudioStatus()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002AC")]
	public enum DeviceCommand
	{
		[Token(Token = "0x400100B")]
		SET_PICO_NEO_HMD_BRIGHTNESS = 12,
		[Token(Token = "0x400100C")]
		SET_PICO_NEO_HMD_SLEEPDELAY
	}
	[Token(Token = "0x20002AD")]
	public enum BrightnessLevel
	{
		[Token(Token = "0x400100E")]
		VR_BRIGHTNESS_LEVEL_MIN = 1,
		[Token(Token = "0x400100F")]
		VR_BRIGHTNESS_LEVEL_MAX = 100,
		[Token(Token = "0x4001010")]
		VR_BRIGHTNESS_LEVEL_DOWN = 1000,
		[Token(Token = "0x4001011")]
		VR_BRIGHTNESS_LEVEL_UP = 1001,
		[Token(Token = "0x4001012")]
		VR_BRIGHTNESS_LEVEL_SCREEN_OFF = -100
	}
	[Token(Token = "0x20002AE")]
	public struct VolumePowerBrightness
	{
		[Token(Token = "0x4001013")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AndroidJavaObject activity;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AndroidJavaClass javaSysActivityClass;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaClass batteryjavaVrActivityClass;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass volumejavaVrActivityClass;

		[PreserveSig]
		[Token(Token = "0x6001427")]
		[Address(RVA = "0x99B388", Offset = "0x99B388", VA = "0x99B388")]
		public static extern void Pvr_SetInitActivity(IntPtr activity, IntPtr vrActivityClass);

		[PreserveSig]
		[Token(Token = "0x6001428")]
		[Address(RVA = "0x99B438", Offset = "0x99B438", VA = "0x99B438")]
		private static extern bool Pvr_IsHmdExist();

		[PreserveSig]
		[Token(Token = "0x6001429")]
		[Address(RVA = "0x99B4D0", Offset = "0x99B4D0", VA = "0x99B4D0")]
		private static extern int Pvr_GetHmdScreenBrightness();

		[PreserveSig]
		[Token(Token = "0x600142A")]
		[Address(RVA = "0x99B560", Offset = "0x99B560", VA = "0x99B560")]
		private static extern bool Pvr_SetHmdScreenBrightness(int brightness);

		[Token(Token = "0x600142B")]
		[Address(RVA = "0x99B608", Offset = "0x99B608", VA = "0x99B608")]
		public static bool UPvr_IsHmdExist()
		{
			return default(bool);
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0x99B60C", Offset = "0x99B60C", VA = "0x99B60C")]
		public static int UPvr_GetHmdScreenBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0x99B610", Offset = "0x99B610", VA = "0x99B610")]
		public static bool UPvr_SetHmdScreenBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0x99B614", Offset = "0x99B614", VA = "0x99B614")]
		public static bool UPvr_SetCommonBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0x99B8C0", Offset = "0x99B8C0", VA = "0x99B8C0")]
		public static int UPvr_GetCommonBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0x99BAF4", Offset = "0x99BAF4", VA = "0x99BAF4")]
		public static int[] UPvr_GetScreenBrightnessLevel()
		{
			return null;
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0x99BC84", Offset = "0x99BC84", VA = "0x99BC84")]
		public static void UPvr_SetScreenBrightnessLevel(int vrBrightness, int level)
		{
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0x99BED4", Offset = "0x99BED4", VA = "0x99BED4")]
		public static bool UPvr_SetDevicePropForUser(DeviceCommand deviceid, string number)
		{
			return default(bool);
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0x99C05C", Offset = "0x99C05C", VA = "0x99C05C")]
		public static string UPvr_GetDevicePropForUser(DeviceCommand deviceid)
		{
			return null;
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0x99C1A0", Offset = "0x99C1A0", VA = "0x99C1A0")]
		public static bool UPvr_InitBatteryClass()
		{
			return default(bool);
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0x99C3B4", Offset = "0x99C3B4", VA = "0x99C3B4")]
		public static bool UPvr_InitBatteryVolClass()
		{
			return default(bool);
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0x99C6A8", Offset = "0x99C6A8", VA = "0x99C6A8")]
		public static bool UPvr_StartBatteryReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0x99C8FC", Offset = "0x99C8FC", VA = "0x99C8FC")]
		public static bool UPvr_StopBatteryReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0x99B64C", Offset = "0x99B64C", VA = "0x99B64C")]
		public static bool UPvr_SetBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0x99B8E0", Offset = "0x99B8E0", VA = "0x99B8E0")]
		public static int UPvr_GetCurrentBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0x99BAF8", Offset = "0x99BAF8", VA = "0x99BAF8")]
		public static int[] Pvr_GetScreenBrightnessLevel()
		{
			return null;
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0x99BC88", Offset = "0x99BC88", VA = "0x99BC88")]
		public static void Pvr_SetScreenBrightnessLevel(int vrBrightness, int level)
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0x99CB00", Offset = "0x99CB00", VA = "0x99CB00")]
		public static bool UPvr_StartAudioReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0x99CD54", Offset = "0x99CD54", VA = "0x99CD54")]
		public static bool UPvr_StopAudioReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0x99CF58", Offset = "0x99CF58", VA = "0x99CF58")]
		public static int UPvr_GetMaxVolumeNumber()
		{
			return default(int);
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0x99D0D0", Offset = "0x99D0D0", VA = "0x99D0D0")]
		public static int UPvr_GetCurrentVolumeNumber()
		{
			return default(int);
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0x99D248", Offset = "0x99D248", VA = "0x99D248")]
		public static bool UPvr_VolumeUp()
		{
			return default(bool);
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0x99D3A8", Offset = "0x99D3A8", VA = "0x99D3A8")]
		public static bool UPvr_VolumeDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0x99D508", Offset = "0x99D508", VA = "0x99D508")]
		public static bool UPvr_SetVolumeNum(int volume)
		{
			return default(bool);
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0x99D6EC", Offset = "0x99D6EC", VA = "0x99D6EC")]
		public static bool UPvr_SetAudio(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0x99D6F4", Offset = "0x99D6F4", VA = "0x99D6F4")]
		public static bool UPvr_SetBattery(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0x99C060", Offset = "0x99C060", VA = "0x99C060")]
		private static string getDevicePropForUser(DeviceCommand deviceid)
		{
			return null;
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0x99BED8", Offset = "0x99BED8", VA = "0x99BED8")]
		private static bool setDevicePropForUser(DeviceCommand deviceid, string number)
		{
			return default(bool);
		}
	}
}
namespace Pvr_UnitySDKAPI.Achievement
{
	[Token(Token = "0x20002AF")]
	public sealed class AchievementCore
	{
		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool IsPlatformInitialized;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool LogMessages;

		[Token(Token = "0x6001447")]
		[Address(RVA = "0x8ABE14", Offset = "0x8ABE14", VA = "0x8ABE14")]
		public static bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0x8ABE7C", Offset = "0x8ABE7C", VA = "0x8ABE7C")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0x8ABE80", Offset = "0x8ABE80", VA = "0x8ABE80")]
		public static void RegisterNetwork()
		{
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0x8AC038", Offset = "0x8AC038", VA = "0x8AC038")]
		public static void UnRegisterNetwork()
		{
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0x8AC134", Offset = "0x8AC134", VA = "0x8AC134")]
		public AchievementCore()
		{
		}
	}
	[Token(Token = "0x20002B0")]
	public static class Achievements
	{
		[Token(Token = "0x600144D")]
		[Address(RVA = "0x8AC19C", Offset = "0x8AC19C", VA = "0x8AC19C")]
		public static Pvr_Request<Pvr_AchievementUpdate> Init()
		{
			return null;
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0x8AC694", Offset = "0x8AC694", VA = "0x8AC694")]
		public static Pvr_Request<Pvr_AchievementUpdate> AddCount(string name, long count)
		{
			return null;
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0x8AC944", Offset = "0x8AC944", VA = "0x8AC944")]
		public static Pvr_Request<Pvr_AchievementUpdate> AddFields(string name, string fields)
		{
			return null;
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0x8ACBD4", Offset = "0x8ACBD4", VA = "0x8ACBD4")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetAllDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0x8ACE50", Offset = "0x8ACE50", VA = "0x8ACE50")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetAllProgress()
		{
			return null;
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0x8AD028", Offset = "0x8AD028", VA = "0x8AD028")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetDefinitionsByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0x8AD2A4", Offset = "0x8AD2A4", VA = "0x8AD2A4")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetProgressByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0x8AD4D0", Offset = "0x8AD4D0", VA = "0x8AD4D0")]
		public static Pvr_Request<Pvr_AchievementUpdate> Unlock(string name)
		{
			return null;
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0x8AD6FC", Offset = "0x8AD6FC", VA = "0x8AD6FC")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetNextAchievementDefinitionListPage(Pvr_AchievementDefinitionList list)
		{
			return null;
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0x8ADAD8", Offset = "0x8ADAD8", VA = "0x8ADAD8")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetNextAchievementProgressListPage(Pvr_AchievementProgressList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20002B1")]
	public enum AchievementType
	{
		[Token(Token = "0x400101B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4AD9BC", Offset = "0x4AD9BC")]
		Unknown,
		[Token(Token = "0x400101C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4AD9F4", Offset = "0x4AD9F4")]
		Simple,
		[Token(Token = "0x400101D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4ADA2C", Offset = "0x4ADA2C")]
		Bitfield,
		[Token(Token = "0x400101E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4ADA64", Offset = "0x4ADA64")]
		Count
	}
	[Token(Token = "0x20002B2")]
	public class Pvr_AchievementAPI
	{
		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaClass achievementAPI;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaClass definitionArrayHandle;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass definitionHandle;

		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaClass progressArrayHandle;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaClass progressHandle;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AndroidJavaClass updateHandle;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AndroidJavaObject errorHandle;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static AndroidJavaObject unityInterface;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static string openId;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string accessToken;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static string appId;

		[Token(Token = "0x6001457")]
		[Address(RVA = "0x8AC260", Offset = "0x8AC260", VA = "0x8AC260")]
		internal static long Init()
		{
			return default(long);
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0x8ABEDC", Offset = "0x8ABEDC", VA = "0x8ABEDC")]
		internal static void RegisterNetwork()
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0x8AC094", Offset = "0x8AC094", VA = "0x8AC094")]
		internal static void UnRegisterNetwork()
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0x8AE4CC", Offset = "0x8AE4CC", VA = "0x8AE4CC")]
		internal static AndroidJavaObject PopMessage()
		{
			return null;
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0x8AE574", Offset = "0x8AE574", VA = "0x8AE574")]
		internal static string pvr_Error_GetMessage(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0x8AE680", Offset = "0x8AE680", VA = "0x8AE680")]
		internal static int pvr_Error_GetHttpCode(AndroidJavaObject popMessage)
		{
			return default(int);
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0x8AE78C", Offset = "0x8AE78C", VA = "0x8AE78C")]
		internal static int pvr_Error_GetCode(AndroidJavaObject popMessage)
		{
			return default(int);
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0x8AC770", Offset = "0x8AC770", VA = "0x8AC770")]
		internal static long pvr_Achievements_AddCount(string name, long count)
		{
			return default(long);
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0x8ACA20", Offset = "0x8ACA20", VA = "0x8ACA20")]
		internal static long pvr_Achievements_AddFields(string name, string fields)
		{
			return default(long);
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0x8ACC98", Offset = "0x8ACC98", VA = "0x8ACC98")]
		internal static long pvr_Achievements_GetAllDefinitions()
		{
			return default(long);
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0x8ACF14", Offset = "0x8ACF14", VA = "0x8ACF14")]
		internal static long pvr_Achievements_GetAllProgress()
		{
			return default(long);
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0x8AD0F4", Offset = "0x8AD0F4", VA = "0x8AD0F4")]
		internal static long pvr_Achievements_GetDefinitionsByName(string[] names, int v)
		{
			return default(long);
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0x8AD370", Offset = "0x8AD370", VA = "0x8AD370")]
		internal static long pvr_Achievements_GetProgressByName(string[] names, int v)
		{
			return default(long);
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0x8AD59C", Offset = "0x8AD59C", VA = "0x8AD59C")]
		internal static long pvr_Achievements_Unlock(string name)
		{
			return default(long);
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0x8AD850", Offset = "0x8AD850", VA = "0x8AD850")]
		internal static long pvr_HTTP_GetWithMessageType(string nextUrl, Pvr_Message.MessageType messageType)
		{
			return default(long);
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0x8AE898", Offset = "0x8AE898", VA = "0x8AE898")]
		internal static long pvr_Message_GetType(AndroidJavaObject popMessage)
		{
			return default(long);
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0x8AE964", Offset = "0x8AE964", VA = "0x8AE964")]
		internal static bool pvr_Message_IsError(AndroidJavaObject popMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0x8AE9E4", Offset = "0x8AE9E4", VA = "0x8AE9E4")]
		internal static long pvr_Message_GetRequestID(AndroidJavaObject popMessage)
		{
			return default(long);
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0x8AE44C", Offset = "0x8AE44C", VA = "0x8AE44C")]
		internal static string pvr_Message_GetString(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0x8AEA64", Offset = "0x8AEA64", VA = "0x8AEA64")]
		internal static bool pvr_AchievementUpdate_GetJustUnlocked(AndroidJavaObject popMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0x8AEB70", Offset = "0x8AEB70", VA = "0x8AEB70")]
		internal static string pvr_AchievementUpdate_GetName(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x8AEC7C", Offset = "0x8AEC7C", VA = "0x8AEC7C")]
		internal static int pvr_AchievementProgressArray_GetSize(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0x8AED88", Offset = "0x8AED88", VA = "0x8AED88")]
		internal static AndroidJavaObject pvr_AchievementProgressArray_GetElement(AndroidJavaObject msg, int index)
		{
			return null;
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x8AEF08", Offset = "0x8AEF08", VA = "0x8AEF08")]
		internal static string pvr_AchievementProgressArray_GetNextUrl(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x8AF014", Offset = "0x8AF014", VA = "0x8AF014")]
		internal static string pvr_AchievementProgress_GetBitfield(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0x8AF120", Offset = "0x8AF120", VA = "0x8AF120")]
		internal static long pvr_AchievementProgress_GetCount(AndroidJavaObject msg)
		{
			return default(long);
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0x8AF22C", Offset = "0x8AF22C", VA = "0x8AF22C")]
		internal static bool pvr_AchievementProgress_GetIsUnlocked(AndroidJavaObject msg)
		{
			return default(bool);
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x8AF338", Offset = "0x8AF338", VA = "0x8AF338")]
		internal static string pvr_AchievementProgress_GetName(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x8AF444", Offset = "0x8AF444", VA = "0x8AF444")]
		internal static DateTime pvr_AchievementProgress_GetUnlockTime(AndroidJavaObject msg)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0x8AF58C", Offset = "0x8AF58C", VA = "0x8AF58C")]
		internal static DateTime DateTimeFromNative(long seconds_since_the_one_true_epoch)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x8AF5FC", Offset = "0x8AF5FC", VA = "0x8AF5FC")]
		internal static int pvr_AchievementDefinitionArray_GetSize(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0x8AF708", Offset = "0x8AF708", VA = "0x8AF708")]
		internal static AndroidJavaObject pvr_AchievementDefinitionArray_GetElement(AndroidJavaObject msg, int index)
		{
			return null;
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x8AF888", Offset = "0x8AF888", VA = "0x8AF888")]
		internal static string pvr_AchievementDefinitionArray_GetNextUrl(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0x8AF994", Offset = "0x8AF994", VA = "0x8AF994")]
		internal static AchievementType pvr_AchievementDefinition_GetType(AndroidJavaObject msg)
		{
			return default(AchievementType);
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0x8AFAEC", Offset = "0x8AFAEC", VA = "0x8AFAEC")]
		internal static string pvr_AchievementDefinition_GetName(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0x8AFBF8", Offset = "0x8AFBF8", VA = "0x8AFBF8")]
		internal static int pvr_AchievementDefinition_GetBitfieldLength(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x8AFD04", Offset = "0x8AFD04", VA = "0x8AFD04")]
		internal static long pvr_AchievementDefinition_GetTarget(AndroidJavaObject msg)
		{
			return default(long);
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x8AFE10", Offset = "0x8AFE10", VA = "0x8AFE10")]
		internal static string pvr_AchievementDefinition_GetTitle(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0x8AFF1C", Offset = "0x8AFF1C", VA = "0x8AFF1C")]
		internal static string pvr_AchievementDefinition_GetUnlockedDescription(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0x8B0028", Offset = "0x8B0028", VA = "0x8B0028")]
		internal static string pvr_AchievementDefinition_GetLockedIcon(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0x8B0134", Offset = "0x8B0134", VA = "0x8B0134")]
		internal static bool pvr_AchievementDefinition_GetIsSecrect(AndroidJavaObject msg)
		{
			return default(bool);
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0x8B0240", Offset = "0x8B0240", VA = "0x8B0240")]
		internal static string pvr_AchievementDefinition_GetUnlockedIcon(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0x8B034C", Offset = "0x8B034C", VA = "0x8B034C")]
		internal static string pvr_AchievementDefinition_GetDescription(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0x8B0458", Offset = "0x8B0458", VA = "0x8B0458")]
		public Pvr_AchievementAPI()
		{
		}
	}
	[Token(Token = "0x20002B3")]
	public class Pvr_AchievementDefinition
	{
		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly AchievementType Type;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly int BitfieldLength;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly long Target;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Title;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly string Description;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string UnlockedDescription;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string UnlockedIcon;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly string LockedIcon;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public readonly bool IsSecrect;

		[Token(Token = "0x6001484")]
		[Address(RVA = "0x8B0678", Offset = "0x8B0678", VA = "0x8B0678")]
		public Pvr_AchievementDefinition(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20002B4")]
	public class Pvr_AchievementDefinitionList : Pvr_DeserializableList<Pvr_AchievementDefinition>
	{
		[Token(Token = "0x6001485")]
		[Address(RVA = "0x8ADD7C", Offset = "0x8ADD7C", VA = "0x8ADD7C")]
		public Pvr_AchievementDefinitionList(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20002B5")]
	public class Pvr_AchievementProgress
	{
		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bitfield;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly long Count;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsUnlocked;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Name;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly DateTime UnlockTime;

		[Token(Token = "0x6001486")]
		[Address(RVA = "0x8B076C", Offset = "0x8B076C", VA = "0x8B076C")]
		public Pvr_AchievementProgress(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20002B6")]
	public class Pvr_AchievementProgressList : Pvr_DeserializableList<Pvr_AchievementProgress>
	{
		[Token(Token = "0x6001487")]
		[Address(RVA = "0x8AE010", Offset = "0x8AE010", VA = "0x8AE010")]
		public Pvr_AchievementProgressList(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20002B7")]
	public class Pvr_AchievementUpdate
	{
		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool JustUnlocked;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x6001488")]
		[Address(RVA = "0x8AE2A4", Offset = "0x8AE2A4", VA = "0x8AE2A4")]
		public Pvr_AchievementUpdate(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20002B8")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x4A8868", Offset = "0x4A8868")]
	public class Pvr_DeserializableList<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<T> data;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string nextUrl;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string previousUrl;

		[Token(Token = "0x170000F3")]
		public int Count
		{
			[Token(Token = "0x6001489")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000F4")]
		private bool System.Collections.Generic.ICollection<T>.IsReadOnly
		{
			[Token(Token = "0x600148A")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F5")]
		public T Item
		{
			[Token(Token = "0x600148C")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x600148D")]
			set
			{
			}
		}

		[Token(Token = "0x170000F6")]
		public bool HasNextPage
		{
			[Token(Token = "0x6001498")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F7")]
		public bool HasPreviousPage
		{
			[Token(Token = "0x6001499")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F8")]
		public string NextUrl
		{
			[Token(Token = "0x600149A")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F9")]
		public string PreviousUrl
		{
			[Token(Token = "0x600149B")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600148B")]
		public int IndexOf(T obj)
		{
			return default(int);
		}

		[Token(Token = "0x600148E")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x600148F")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001490")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001491")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6001492")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001493")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x6001494")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001495")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x6001496")]
		private IEnumerator GetEnumerator1()
		{
			return null;
		}

		[Token(Token = "0x6001497")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600149C")]
		public Pvr_DeserializableList()
		{
		}
	}
	[Token(Token = "0x20002B9")]
	public static class Pvr_Callback
	{
		[Token(Token = "0x20004C3")]
		private class RequestCallback
		{
			[Token(Token = "0x4001B5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Pvr_Message.Callback messageCallback;

			[Token(Token = "0x6001F0C")]
			[Address(RVA = "0x8B0E9C", Offset = "0x8B0E9C", VA = "0x8B0E9C")]
			public RequestCallback()
			{
			}

			[Token(Token = "0x6001F0D")]
			[Address(RVA = "0x8B0EA4", Offset = "0x8B0EA4", VA = "0x8B0EA4")]
			public RequestCallback(Pvr_Message.Callback callback)
			{
			}

			[Token(Token = "0x6001F0E")]
			[Address(RVA = "0x8B0ED0", Offset = "0x8B0ED0", VA = "0x8B0ED0", Slot = "4")]
			public virtual void HandleMessage(Pvr_Message msg)
			{
			}
		}

		[Token(Token = "0x20004C4")]
		private sealed class RequestCallback<T> : RequestCallback
		{
			[Token(Token = "0x4001B5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Pvr_Message<T>.Callback callback;

			[Token(Token = "0x6001F0F")]
			public RequestCallback(Pvr_Message<T>.Callback callback)
			{
			}

			[Token(Token = "0x6001F10")]
			public override void HandleMessage(Pvr_Message msg)
			{
			}
		}

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<long, Request> requestIDsToRequests;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<Pvr_Message.MessageType, RequestCallback> notificationCallbacks;

		[Token(Token = "0x600149D")]
		[Address(RVA = "0x8B0824", Offset = "0x8B0824", VA = "0x8B0824")]
		internal static void AddRequest(Request request)
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0x8B09BC", Offset = "0x8B09BC", VA = "0x8B09BC")]
		internal static void RunCallbacks()
		{
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0x8B0CA0", Offset = "0x8B0CA0", VA = "0x8B0CA0")]
		internal static void RunLimitedCallbacks(uint limit)
		{
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0x8B0D38", Offset = "0x8B0D38", VA = "0x8B0D38")]
		internal static void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0x8B0A98", Offset = "0x8B0A98", VA = "0x8B0A98")]
		internal static void HandleMessage(Pvr_Message msg)
		{
		}
	}
	[Token(Token = "0x20002BA")]
	public class Pvr_CallbackRunner : MonoBehaviour
	{
		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsPersistantBetweenSceneLoads;

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0x8B1614", Offset = "0x8B1614", VA = "0x8B1614")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x8B1710", Offset = "0x8B1710", VA = "0x8B1710")]
		private void Update()
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x8B179C", Offset = "0x8B179C", VA = "0x8B179C")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x8B17F8", Offset = "0x8B17F8", VA = "0x8B17F8")]
		public Pvr_CallbackRunner()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	public abstract class Pvr_Message<T> : Pvr_Message
	{
		[Token(Token = "0x20004C5")]
		public new delegate void Callback(Pvr_Message<T> message);

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T data;

		[Token(Token = "0x170000FA")]
		public T Data
		{
			[Token(Token = "0x60014A8")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x60014A7")]
		public Pvr_Message(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x60014A9")]
		protected abstract T GetDataFromMessage(AndroidJavaObject msg);
	}
	[Token(Token = "0x20002BC")]
	public class Pvr_Message
	{
		[Token(Token = "0x20004C6")]
		public delegate void Callback(Pvr_Message message);

		[Token(Token = "0x20004C7")]
		public enum MessageType : uint
		{
			[Token(Token = "0x4001B5E")]
			Unknown = 0u,
			[Token(Token = "0x4001B5F")]
			Achievements_AddCount = 65495601u,
			[Token(Token = "0x4001B60")]
			Achievements_AddFields = 346693929u,
			[Token(Token = "0x4001B61")]
			Achievements_GetAllDefinitions = 64177549u,
			[Token(Token = "0x4001B62")]
			Achievements_GetAllProgress = 1335877149u,
			[Token(Token = "0x4001B63")]
			Achievements_GetDefinitionsByName = 1653670332u,
			[Token(Token = "0x4001B64")]
			Achievements_GetNextAchievementDefinitionArrayPage = 712888917u,
			[Token(Token = "0x4001B65")]
			Achievements_GetNextAchievementProgressArrayPage = 792913703u,
			[Token(Token = "0x4001B66")]
			Achievements_GetProgressByName = 354837425u,
			[Token(Token = "0x4001B67")]
			Achievements_Unlock = 1497156573u,
			[Token(Token = "0x4001B68")]
			Achievements_WriteAchievementProgress = 121027549u,
			[Token(Token = "0x4001B69")]
			Achievements_VerifyAccessToken = 53284924u
		}

		[Token(Token = "0x20004C8")]
		internal delegate Pvr_Message ExtraMessageTypesHandler(AndroidJavaObject messageHandle, MessageType message_type);

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MessageType type;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private long requestID;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Error error;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4ADA9C", Offset = "0x4ADA9C")]
		private static ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField;

		[Token(Token = "0x170000FB")]
		public MessageType Type
		{
			[Token(Token = "0x60014AB")]
			[Address(RVA = "0x8B0DF0", Offset = "0x8B0DF0", VA = "0x8B0DF0")]
			get
			{
				return default(MessageType);
			}
		}

		[Token(Token = "0x170000FC")]
		public bool IsError
		{
			[Token(Token = "0x60014AC")]
			[Address(RVA = "0x8B19F8", Offset = "0x8B19F8", VA = "0x8B19F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000FD")]
		public long RequestID
		{
			[Token(Token = "0x60014AD")]
			[Address(RVA = "0x8B0DE8", Offset = "0x8B0DE8", VA = "0x8B0DE8")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x170000FE")]
		internal static ExtraMessageTypesHandler HandleExtraMessageTypes
		{
			[Token(Token = "0x60014B6")]
			[Address(RVA = "0x8B1C24", Offset = "0x8B1C24", VA = "0x8B1C24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B5F30", Offset = "0x4B5F30")]
			private get
			{
				return null;
			}
			[Token(Token = "0x60014B5")]
			[Address(RVA = "0x8B1BD0", Offset = "0x8B1BD0", VA = "0x8B1BD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B5F20", Offset = "0x4B5F20")]
			set
			{
			}
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x8B1808", Offset = "0x8B1808", VA = "0x8B1808")]
		public Pvr_Message(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0x8B1A08", Offset = "0x8B1A08", VA = "0x8B1A08", Slot = "4")]
		public virtual Error GetError()
		{
			return null;
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x8B1A10", Offset = "0x8B1A10", VA = "0x8B1A10", Slot = "5")]
		public virtual Pvr_AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0x8B1A18", Offset = "0x8B1A18", VA = "0x8B1A18", Slot = "6")]
		public virtual Pvr_AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x8B1A20", Offset = "0x8B1A20", VA = "0x8B1A20", Slot = "7")]
		public virtual Pvr_AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0x8B1A28", Offset = "0x8B1A28", VA = "0x8B1A28", Slot = "8")]
		public virtual string GetString()
		{
			return null;
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0x8B1A30", Offset = "0x8B1A30", VA = "0x8B1A30")]
		internal static Pvr_Message ParseMessageHandle(AndroidJavaObject messageHandle)
		{
			return null;
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0x8B0A38", Offset = "0x8B0A38", VA = "0x8B0A38")]
		public static Pvr_Message PopMessage()
		{
			return null;
		}
	}
	[Token(Token = "0x20002BD")]
	public class MessageWithAchievementDefinitions : Pvr_Message<Pvr_AchievementDefinitionList>
	{
		[Token(Token = "0x60014B7")]
		[Address(RVA = "0x8ADC6C", Offset = "0x8ADC6C", VA = "0x8ADC6C")]
		public MessageWithAchievementDefinitions(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0x8ADCCC", Offset = "0x8ADCCC", VA = "0x8ADCCC", Slot = "5")]
		public override Pvr_AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0x8ADD1C", Offset = "0x8ADD1C", VA = "0x8ADD1C", Slot = "9")]
		protected override Pvr_AchievementDefinitionList GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x20002BE")]
	public class MessageWithAchievementProgressList : Pvr_Message<Pvr_AchievementProgressList>
	{
		[Token(Token = "0x60014BA")]
		[Address(RVA = "0x8ADF00", Offset = "0x8ADF00", VA = "0x8ADF00")]
		public MessageWithAchievementProgressList(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x8ADF60", Offset = "0x8ADF60", VA = "0x8ADF60", Slot = "6")]
		public override Pvr_AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x8ADFB0", Offset = "0x8ADFB0", VA = "0x8ADFB0", Slot = "9")]
		protected override Pvr_AchievementProgressList GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x20002BF")]
	public class MessageWithAchievementUpdate : Pvr_Message<Pvr_AchievementUpdate>
	{
		[Token(Token = "0x60014BD")]
		[Address(RVA = "0x8AE194", Offset = "0x8AE194", VA = "0x8AE194")]
		public MessageWithAchievementUpdate(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x8AE1F4", Offset = "0x8AE1F4", VA = "0x8AE1F4", Slot = "7")]
		public override Pvr_AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x8AE244", Offset = "0x8AE244", VA = "0x8AE244", Slot = "9")]
		protected override Pvr_AchievementUpdate GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x20002C0")]
	public class MessageWithString : Pvr_Message<string>
	{
		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x8AE338", Offset = "0x8AE338", VA = "0x8AE338")]
		public MessageWithString(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0x8AE398", Offset = "0x8AE398", VA = "0x8AE398", Slot = "8")]
		public override string GetString()
		{
			return null;
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0x8AE3E8", Offset = "0x8AE3E8", VA = "0x8AE3E8", Slot = "9")]
		protected override string GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x20002C1")]
	public class Error
	{
		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int Code;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int HttpCode;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Message;

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0x8ADC2C", Offset = "0x8ADC2C", VA = "0x8ADC2C")]
		public Error(int code, string message, int httpCode)
		{
		}
	}
	[Token(Token = "0x20002C2")]
	public sealed class Pvr_Request<T> : Request
	{
		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Pvr_Message<T>.Callback callback_;

		[Token(Token = "0x60014C4")]
		public Pvr_Request(long requestID)
		{
		}

		[Token(Token = "0x60014C5")]
		public Pvr_Request<T> OnComplete(Pvr_Message<T>.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x60014C6")]
		public override void HandleMessage(Pvr_Message msg)
		{
		}
	}
	[Token(Token = "0x20002C3")]
	public class Request
	{
		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Pvr_Message.Callback callback_;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4ADAAC", Offset = "0x4ADAAC")]
		private long <RequestID>k__BackingField;

		[Token(Token = "0x170000FF")]
		public long RequestID
		{
			[Token(Token = "0x60014C8")]
			[Address(RVA = "0x8B09B4", Offset = "0x8B09B4", VA = "0x8B09B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B5F40", Offset = "0x4B5F40")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x60014C9")]
			[Address(RVA = "0x8B2528", Offset = "0x8B2528", VA = "0x8B2528")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B5F50", Offset = "0x4B5F50")]
			set
			{
			}
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0x8B24FC", Offset = "0x8B24FC", VA = "0x8B24FC")]
		public Request(long requestID)
		{
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0x8B2530", Offset = "0x8B2530", VA = "0x8B2530")]
		public Request OnComplete(Pvr_Message.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x8B25AC", Offset = "0x8B25AC", VA = "0x8B25AC", Slot = "4")]
		public virtual void HandleMessage(Pvr_Message msg)
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x8B1718", Offset = "0x8B1718", VA = "0x8B1718")]
		public static void RunCallbacks(uint limit = 0u)
		{
		}
	}
}
namespace PlaygroundSplines
{
	[Token(Token = "0x20002C4")]
	[ExecuteInEditMode]
	public class PlaygroundSpline : MonoBehaviour
	{
		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<Vector3> points;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<BezierControlPointMode> modes;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool loop;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public List<TransformNode> transformNodes;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public bool reverse;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public float timeOffset;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Vector3 positionOffset;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public Transform splineTransform;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Matrix4x4 splineTransformMx;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public List<Transform> usedBy;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public float fixedVelocityOnNewNode;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[HideInInspector]
		public bool moveTransformsAsBeziers;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
		[HideInInspector]
		public bool exportWithNodeStructure;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool drawSplinePreviews;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA6")]
		[HideInInspector]
		public bool drawGizmo;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public float bezierWidth;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 previousPosition;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Quaternion previousRotation;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 previousScale;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private bool isReady;

		[Token(Token = "0x17000100")]
		public bool Loop
		{
			[Token(Token = "0x60014D1")]
			[Address(RVA = "0x66316C", Offset = "0x66316C", VA = "0x66316C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014D2")]
			[Address(RVA = "0x663174", Offset = "0x663174", VA = "0x663174")]
			set
			{
			}
		}

		[Token(Token = "0x17000101")]
		public int ControlPointCount
		{
			[Token(Token = "0x60014D3")]
			[Address(RVA = "0x6637E8", Offset = "0x6637E8", VA = "0x6637E8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000102")]
		public int NodeCount
		{
			[Token(Token = "0x60014E0")]
			[Address(RVA = "0x663298", Offset = "0x663298", VA = "0x663298")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x662F9C", Offset = "0x662F9C", VA = "0x662F9C")]
		public bool IsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0x662FA4", Offset = "0x662FA4", VA = "0x662FA4")]
		public bool AddUser(Transform thisTransform)
		{
			return default(bool);
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x663050", Offset = "0x663050", VA = "0x663050")]
		public bool RemoveUser(Transform thisTransform)
		{
			return default(bool);
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0x6630FC", Offset = "0x6630FC", VA = "0x6630FC")]
		public bool HasUser(Transform thisTransform)
		{
			return default(bool);
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0x663848", Offset = "0x663848", VA = "0x663848")]
		public Vector3 GetControlPoint(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0x663944", Offset = "0x663944", VA = "0x663944")]
		public void SetControlPoint(int index, Vector3 point, Vector3 offset)
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0x663318", Offset = "0x663318", VA = "0x663318")]
		public void SetControlPoint(int index, Vector3 point)
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x663F38", Offset = "0x663F38", VA = "0x663F38")]
		public void SetPoints(Vector3[] vectors)
		{
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0x663B38", Offset = "0x663B38", VA = "0x663B38")]
		public bool PointHasTransform(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0x6642D4", Offset = "0x6642D4", VA = "0x6642D4")]
		public void TranslateSpline(Vector3 translation)
		{
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0x664438", Offset = "0x664438", VA = "0x664438")]
		public Vector3 GetTransformPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x664444", Offset = "0x664444", VA = "0x664444")]
		public Quaternion GetTransformRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0x664450", Offset = "0x664450", VA = "0x664450")]
		public Vector3 GetTransformScale()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x66445C", Offset = "0x66445C", VA = "0x66445C")]
		public BezierControlPointMode GetControlPointMode(int index)
		{
			return default(BezierControlPointMode);
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x6644E4", Offset = "0x6644E4", VA = "0x6644E4")]
		public void SetControlPointMode(int index, BezierControlPointMode mode)
		{
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x663BD4", Offset = "0x663BD4", VA = "0x663BD4")]
		private void EnforceMode(int index)
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x66464C", Offset = "0x66464C", VA = "0x66464C")]
		public Vector3 GetPoint(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0x664964", Offset = "0x664964", VA = "0x664964")]
		public Vector3 GetVelocity(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0x66384C", Offset = "0x66384C", VA = "0x66384C")]
		public Vector3 GetPoint(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x66486C", Offset = "0x66486C", VA = "0x66486C")]
		public Vector3 GetInversePoint(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x664B88", Offset = "0x664B88", VA = "0x664B88")]
		public Vector3 GetPointWorldSpace(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x663A08", Offset = "0x663A08", VA = "0x663A08")]
		private void SetPoint(int index, Vector3 position)
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x664DD4", Offset = "0x664DD4", VA = "0x664DD4")]
		private void TranslatePoint(int index, Vector3 translation)
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0x6650D4", Offset = "0x6650D4", VA = "0x6650D4")]
		private float CPOB(Vector3 aP, float aStart, float aEnd, int aSteps)
		{
			return default(float);
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x665258", Offset = "0x665258", VA = "0x665258")]
		public float ClosestTimeFromPoint(Vector3 aP)
		{
			return default(float);
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x6652E4", Offset = "0x6652E4", VA = "0x6652E4")]
		public Vector3 ClosestPointFromPosition(Vector3 aP)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x665308", Offset = "0x665308", VA = "0x665308")]
		public Vector3 GetDirection(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x665400", Offset = "0x665400", VA = "0x665400")]
		public void AddNode()
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x665484", Offset = "0x665484", VA = "0x665484")]
		public void AddNode(int index)
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x665AB8", Offset = "0x665AB8", VA = "0x665AB8")]
		public void RemoveFirst()
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x665CAC", Offset = "0x665CAC", VA = "0x665CAC")]
		public void RemoveLast()
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x665AC0", Offset = "0x665AC0", VA = "0x665AC0")]
		public void RemoveNode(int index)
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x665D30", Offset = "0x665D30", VA = "0x665D30")]
		public void ReverseAllNodes()
		{
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x665DD8", Offset = "0x665DD8", VA = "0x665DD8")]
		public void SwapNodes(int from, int to)
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x6661F4", Offset = "0x6661F4", VA = "0x6661F4")]
		public Transform[] ExportToTransforms()
		{
			return null;
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x666854", Offset = "0x666854", VA = "0x666854")]
		public Vector3[] ExportToVector3()
		{
			return null;
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x6669E0", Offset = "0x6669E0", VA = "0x6669E0")]
		public void Reset()
		{
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x666CE8", Offset = "0x666CE8", VA = "0x666CE8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x667000", Offset = "0x667000", VA = "0x667000")]
		private void Update()
		{
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0x666D18", Offset = "0x666D18", VA = "0x666D18")]
		private void SetMatrix()
		{
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x667208", Offset = "0x667208", VA = "0x667208")]
		public PlaygroundSpline()
		{
		}
	}
	[Token(Token = "0x20002C5")]
	public static class Bezier
	{
		[Token(Token = "0x60014FB")]
		[Address(RVA = "0x66287C", Offset = "0x66287C", VA = "0x66287C")]
		public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0x662A08", Offset = "0x662A08", VA = "0x662A08")]
		public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0x662B64", Offset = "0x662B64", VA = "0x662B64")]
		public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0x662D5C", Offset = "0x662D5C", VA = "0x662D5C")]
		public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x20002C6")]
	public class TransformNode
	{
		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enabled;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform transform;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isAvailable;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 position;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 inversePosition;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 previousPosition;

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0x6670D4", Offset = "0x6670D4", VA = "0x6670D4")]
		public bool Update(Transform splineTransform)
		{
			return default(bool);
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0x6642B4", Offset = "0x6642B4", VA = "0x6642B4")]
		public bool IsAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0x664B70", Offset = "0x664B70", VA = "0x664B70")]
		public Vector3 GetPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0x664B7C", Offset = "0x664B7C", VA = "0x664B7C")]
		public Vector3 GetInvsersePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0x664D08", Offset = "0x664D08", VA = "0x664D08")]
		public void SetPosition(Vector3 newPosition)
		{
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0x664F8C", Offset = "0x664F8C", VA = "0x664F8C")]
		public void Translate(Vector3 translation)
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0x668494", Offset = "0x668494", VA = "0x668494")]
		public Vector3 GetPositionDelta()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0x665AB0", Offset = "0x665AB0", VA = "0x665AB0")]
		public TransformNode()
		{
		}
	}
	[Token(Token = "0x20002C7")]
	public enum SplineMode
	{
		[Token(Token = "0x4001067")]
		Vector3,
		[Token(Token = "0x4001068")]
		Transform
	}
	[Token(Token = "0x20002C8")]
	public enum BezierControlPointMode
	{
		[Token(Token = "0x400106A")]
		Aligned,
		[Token(Token = "0x400106B")]
		Mirrored,
		[Token(Token = "0x400106C")]
		Free
	}
	[Token(Token = "0x20002C9")]
	[ExecuteInEditMode]
	public class PlaygroundSplineMesh : MonoBehaviour
	{
		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlaygroundSpline spline;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4ADBAC", Offset = "0x4ADBAC")]
		public int points;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4ADBC8", Offset = "0x4ADBC8")]
		public float width;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool noise;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4ADBE8", Offset = "0x4ADBE8")]
		public float noiseStrength;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2 noiseScale;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool noiseDistribution;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve noiseDistributionL;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve noiseDistributionR;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool followSurface;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool followSurfaceRotation;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float surfaceOffset;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 meshUpDirection;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 surfaceDirection;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int prevPoints;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float prevWidth;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool prevNoise;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float prevNoiseStrength;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector2 prevNoiseScale;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool prevNoiseDistribution;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool prevFollowSurface;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		private bool prevFollowSurfaceRotation;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float prevSurfaceOffset;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 prevMeshUpDirection;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 prevSurfaceDirection;

		[Token(Token = "0x6001507")]
		[Address(RVA = "0x66735C", Offset = "0x66735C", VA = "0x66735C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0x668104", Offset = "0x668104", VA = "0x668104")]
		private void Update()
		{
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0x6681AC", Offset = "0x6681AC", VA = "0x6681AC")]
		private bool NeedsUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0x6680A8", Offset = "0x6680A8", VA = "0x6680A8")]
		private void SetVals()
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0x667518", Offset = "0x667518", VA = "0x667518")]
		private void SetAnimationCurveVals(ref AnimationCurve curve)
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0x66764C", Offset = "0x66764C", VA = "0x66764C")]
		public void BuildSplineMesh(PlaygroundSpline spline, int points, float width)
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0x6683C0", Offset = "0x6683C0", VA = "0x6683C0")]
		public PlaygroundSplineMesh()
		{
		}
	}
}
namespace ParticlePlayground
{
	[Token(Token = "0x20002CA")]
	public class PlaygroundFollow : MonoBehaviour
	{
		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlaygroundParticlesC particles;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject referenceObject;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float followerLifetime;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int cacheSize;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool sendEvents;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TrailRenderer referenceTrailRenderer;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float trailTime;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<PlaygroundFollower> followers;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<PlaygroundFollower> waitingFollowers;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private PlaygroundFollower[] referenceObjectsCache;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private PlaygroundFollower[] queue;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int cacheIndex;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private PlaygroundEventC birthEvent;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private PlaygroundEventC deathEvent;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Transform followerParent;

		[Token(Token = "0x14000029")]
		public event OnPlaygroundFollower followerEventBirth
		{
			[Token(Token = "0x600150E")]
			[Address(RVA = "0x5E8F68", Offset = "0x5E8F68", VA = "0x5E8F68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B5F60", Offset = "0x4B5F60")]
			add
			{
			}
			[Token(Token = "0x600150F")]
			[Address(RVA = "0x5E9054", Offset = "0x5E9054", VA = "0x5E9054")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B5F70", Offset = "0x4B5F70")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002A")]
		public event OnPlaygroundFollower followerEventDeath
		{
			[Token(Token = "0x6001510")]
			[Address(RVA = "0x5E9140", Offset = "0x5E9140", VA = "0x5E9140")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B5F80", Offset = "0x4B5F80")]
			add
			{
			}
			[Token(Token = "0x6001511")]
			[Address(RVA = "0x5E922C", Offset = "0x5E922C", VA = "0x5E922C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B5F90", Offset = "0x4B5F90")]
			remove
			{
			}
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0x5E9318", Offset = "0x5E9318", VA = "0x5E9318")]
		private void Start()
		{
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0x5E9A80", Offset = "0x5E9A80", VA = "0x5E9A80")]
		private void OnParticleDidBirth(PlaygroundEventParticle particle)
		{
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0x5E9B64", Offset = "0x5E9B64", VA = "0x5E9B64")]
		private void OnParticleDidDie(PlaygroundEventParticle particle)
		{
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0x5E9C08", Offset = "0x5E9C08", VA = "0x5E9C08")]
		private int GetFollowerWithId(int particleId)
		{
			return default(int);
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0x5E9D30", Offset = "0x5E9D30", VA = "0x5E9D30")]
		private void Update()
		{
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0x5E9DC4", Offset = "0x5E9DC4", VA = "0x5E9DC4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0x5E9DC8", Offset = "0x5E9DC8", VA = "0x5E9DC8")]
		private void UpdateFollowers()
		{
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0x5EA38C", Offset = "0x5EA38C", VA = "0x5EA38C")]
		private void AddFollower(PlaygroundFollower follower, int i)
		{
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0x5EA1A0", Offset = "0x5EA1A0", VA = "0x5EA1A0")]
		private void RemoveFollower(int i)
		{
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0x5EAB80", Offset = "0x5EAB80", VA = "0x5EAB80")]
		private void NextCacheIndex()
		{
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0x5EABCC", Offset = "0x5EABCC", VA = "0x5EABCC")]
		public PlaygroundFollower GetActiveFollower(int index)
		{
			return null;
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0x5EACA0", Offset = "0x5EACA0", VA = "0x5EACA0")]
		public PlaygroundFollower GetCachedFollower(int index)
		{
			return null;
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0x5EAD6C", Offset = "0x5EAD6C", VA = "0x5EAD6C")]
		public int GetActiveFollowersCount()
		{
			return default(int);
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0x5EADCC", Offset = "0x5EADCC", VA = "0x5EADCC")]
		public int GetCachedFollowersCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0x5EADF8", Offset = "0x5EADF8", VA = "0x5EADF8")]
		public PlaygroundFollow()
		{
		}
	}
	[Token(Token = "0x20002CB")]
	public class PlaygroundFollower
	{
		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enabled;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float lifetime;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform transform;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject gameObject;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TrailRenderer trailRenderer;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int particleId;

		[Token(Token = "0x6001521")]
		[Address(RVA = "0x5E9A18", Offset = "0x5E9A18", VA = "0x5E9A18")]
		public PlaygroundFollower(Transform setTransform, GameObject setGameObject, TrailRenderer setTrailRenderer, float setLifetime, int setParticleId)
		{
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0x5EAAE8", Offset = "0x5EAAE8", VA = "0x5EAAE8")]
		public PlaygroundFollower Clone()
		{
			return null;
		}
	}
	[Token(Token = "0x20002CC")]
	public delegate void OnPlaygroundFollower(PlaygroundFollower follower);
	[Token(Token = "0x20002CD")]
	public class PlaygroundMultiRecorder : MonoBehaviour
	{
		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlaygroundRecorder[] playgroundRecorders;

		[Token(Token = "0x6001527")]
		[Address(RVA = "0x5EAF9C", Offset = "0x5EAF9C", VA = "0x5EAF9C")]
		public void StartRecording(float frameIntervalInSeconds)
		{
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0x5EB048", Offset = "0x5EB048", VA = "0x5EB048")]
		public void StartRecording(float recordingLength, float frameIntervalInSeconds)
		{
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0x5EB0FC", Offset = "0x5EB0FC", VA = "0x5EB0FC")]
		public void RecordOneFrame()
		{
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0x5EB198", Offset = "0x5EB198", VA = "0x5EB198")]
		public void InsertOneFrame(int frame)
		{
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0x5EB248", Offset = "0x5EB248", VA = "0x5EB248")]
		public void StopRecording()
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x5EB2E4", Offset = "0x5EB2E4", VA = "0x5EB2E4")]
		public void ClearRecording()
		{
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0x5EB380", Offset = "0x5EB380", VA = "0x5EB380")]
		public void Play(float speed)
		{
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0x5EB42C", Offset = "0x5EB42C", VA = "0x5EB42C")]
		public void Play(float fromNormalizedTime, float speed, bool repeat)
		{
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0x5EB4F0", Offset = "0x5EB4F0", VA = "0x5EB4F0")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x5EB58C", Offset = "0x5EB58C", VA = "0x5EB58C")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x5EB628", Offset = "0x5EB628", VA = "0x5EB628")]
		public void Scrub(float normalizedTime)
		{
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0x5EB6D4", Offset = "0x5EB6D4", VA = "0x5EB6D4")]
		public PlaygroundMultiRecorder()
		{
		}
	}
	[Token(Token = "0x20002CE")]
	[ExecuteInEditMode]
	public class PlaygroundRecorder : MonoBehaviour
	{
		[Token(Token = "0x20004C9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A947C", Offset = "0x4A947C")]
		private sealed class <>c__DisplayClass54_0
		{
			[Token(Token = "0x4001B6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlaygroundRecorder <>4__this;

			[Token(Token = "0x4001B6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float normalizedTime;

			[Token(Token = "0x6001F1D")]
			[Address(RVA = "0x6F9B10", Offset = "0x6F9B10", VA = "0x6F9B10")]
			public <>c__DisplayClass54_0()
			{
			}

			[Token(Token = "0x6001F1E")]
			[Address(RVA = "0x6FC694", Offset = "0x6FC694", VA = "0x6FC694")]
			internal void <Scrub>b__0()
			{
			}
		}

		[Token(Token = "0x20004CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A948C", Offset = "0x4A948C")]
		private sealed class <>c__DisplayClass58_0
		{
			[Token(Token = "0x4001B6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlaygroundRecorder <>4__this;

			[Token(Token = "0x4001B6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float normalizedTime;

			[Token(Token = "0x6001F1F")]
			[Address(RVA = "0x6FB0A8", Offset = "0x6FB0A8", VA = "0x6FB0A8")]
			public <>c__DisplayClass58_0()
			{
			}

			[Token(Token = "0x6001F20")]
			[Address(RVA = "0x6FC770", Offset = "0x6FC770", VA = "0x6FC770")]
			internal void <SetParticleSystemAsRecording>b__0()
			{
			}
		}

		[Token(Token = "0x20004CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A949C", Offset = "0x4A949C")]
		private sealed class <StartRecordingInternal>d__65 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlaygroundRecorder <>4__this;

			[Token(Token = "0x4001B71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float keyframeInterval;

			[Token(Token = "0x4001B72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float recordingLength;

			[Token(Token = "0x17000260")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F24")]
				[Address(RVA = "0x6FCE28", Offset = "0x6FCE28", VA = "0x6FCE28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000261")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F26")]
				[Address(RVA = "0x6FCE98", Offset = "0x6FCE98", VA = "0x6FCE98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F21")]
			[Address(RVA = "0x6FC514", Offset = "0x6FC514", VA = "0x6FC514")]
			[DebuggerHidden]
			public <StartRecordingInternal>d__65(int <>1__state)
			{
			}

			[Token(Token = "0x6001F22")]
			[Address(RVA = "0x6FCCE4", Offset = "0x6FCCE4", VA = "0x6FCCE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F23")]
			[Address(RVA = "0x6FCCE8", Offset = "0x6FCCE8", VA = "0x6FCCE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F25")]
			[Address(RVA = "0x6FCE30", Offset = "0x6FCE30", VA = "0x6FCE30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A94AC", Offset = "0x4A94AC")]
		private sealed class <RecordInternal>d__66 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlaygroundRecorder <>4__this;

			[Token(Token = "0x4001B76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float keyframeInterval;

			[Token(Token = "0x17000262")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F2A")]
				[Address(RVA = "0x6FCC6C", Offset = "0x6FCC6C", VA = "0x6FCC6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000263")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F2C")]
				[Address(RVA = "0x6FCCDC", Offset = "0x6FCCDC", VA = "0x6FCCDC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F27")]
			[Address(RVA = "0x6FC540", Offset = "0x6FC540", VA = "0x6FC540")]
			[DebuggerHidden]
			public <RecordInternal>d__66(int <>1__state)
			{
			}

			[Token(Token = "0x6001F28")]
			[Address(RVA = "0x6FCB38", Offset = "0x6FCB38", VA = "0x6FCB38", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F29")]
			[Address(RVA = "0x6FCB3C", Offset = "0x6FCB3C", VA = "0x6FCB3C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F2B")]
			[Address(RVA = "0x6FCC74", Offset = "0x6FCC74", VA = "0x6FCC74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A94BC", Offset = "0x4A94BC")]
		private sealed class <Playback>d__67 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlaygroundRecorder <>4__this;

			[Token(Token = "0x17000264")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F30")]
				[Address(RVA = "0x6FCAC0", Offset = "0x6FCAC0", VA = "0x6FCAC0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000265")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F32")]
				[Address(RVA = "0x6FCB30", Offset = "0x6FCB30", VA = "0x6FCB30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F2D")]
			[Address(RVA = "0x6FC56C", Offset = "0x6FC56C", VA = "0x6FC56C")]
			[DebuggerHidden]
			public <Playback>d__67(int <>1__state)
			{
			}

			[Token(Token = "0x6001F2E")]
			[Address(RVA = "0x6FCA00", Offset = "0x6FCA00", VA = "0x6FCA00", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F2F")]
			[Address(RVA = "0x6FCA04", Offset = "0x6FCA04", VA = "0x6FCA04", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F31")]
			[Address(RVA = "0x6FCAC8", Offset = "0x6FCAC8", VA = "0x6FCAC8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A94CC", Offset = "0x4A94CC")]
		private sealed class <PlayRecordedFrames>d__68 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float fromNormalizedTime;

			[Token(Token = "0x4001B7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PlaygroundRecorder <>4__this;

			[Token(Token = "0x4001B7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <t>5__2;

			[Token(Token = "0x17000266")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F36")]
				[Address(RVA = "0x6FC988", Offset = "0x6FC988", VA = "0x6FC988", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000267")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F38")]
				[Address(RVA = "0x6FC9F8", Offset = "0x6FC9F8", VA = "0x6FC9F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F33")]
			[Address(RVA = "0x6FC598", Offset = "0x6FC598", VA = "0x6FC598")]
			[DebuggerHidden]
			public <PlayRecordedFrames>d__68(int <>1__state)
			{
			}

			[Token(Token = "0x6001F34")]
			[Address(RVA = "0x6FC84C", Offset = "0x6FC84C", VA = "0x6FC84C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F35")]
			[Address(RVA = "0x6FC850", Offset = "0x6FC850", VA = "0x6FC850", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F37")]
			[Address(RVA = "0x6FC990", Offset = "0x6FC990", VA = "0x6FC990", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool multithreading;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float keyframeInterval;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float playbackSpeed;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float playHead;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool loopPlayback;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool fadeIn;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool sizeIn;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool skipInterpolationOnEndFrames;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool localSpaceOnPlayback;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public PlaygroundParticlesC playgroundSystem;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public PlaygroundRecorderData recorderData;

		[NonSerialized]
		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<RecordedFrame> recordedFrames;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _inPlayback;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool _isReplaying;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		private bool _isRecording;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		private bool _hasRecorderData;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool _hasPlaygroundSystem;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		private bool _hasEditedRecordData;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _recordingStarted;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _lastRecordedFrameTime;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _recordingStartFrame;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int _recordingEndFrame;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ParticleSystem.Particle[] _playbackParticles;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ParticleSystemSimulationSpace _previousSimulationSpace;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private object locker;

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x6F836C", Offset = "0x6F836C", VA = "0x6F836C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x6F86E4", Offset = "0x6F86E4", VA = "0x6F86E4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x6F8730", Offset = "0x6F8730", VA = "0x6F8730")]
		public bool HasRecordedFrames()
		{
			return default(bool);
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x6F8790", Offset = "0x6F8790", VA = "0x6F8790")]
		public bool IsRecording()
		{
			return default(bool);
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x6F8798", Offset = "0x6F8798", VA = "0x6F8798")]
		public bool IsReplaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x6F87A0", Offset = "0x6F87A0", VA = "0x6F87A0")]
		public bool IsInPlayback()
		{
			return default(bool);
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x6F87A8", Offset = "0x6F87A8", VA = "0x6F87A8")]
		public int FrameCount()
		{
			return default(int);
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x6F8838", Offset = "0x6F8838", VA = "0x6F8838")]
		public int GetFrameAtTime(float normalizedTime)
		{
			return default(int);
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x6F8954", Offset = "0x6F8954", VA = "0x6F8954")]
		public float GetFloatingFrameAtTime(float normalizedTime)
		{
			return default(float);
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x6F8A24", Offset = "0x6F8A24", VA = "0x6F8A24")]
		public float GetTimeAtFrame(int frame)
		{
			return default(float);
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x6F8B00", Offset = "0x6F8B00", VA = "0x6F8B00")]
		public float GetKeyframeIntervalAtFrame(int frame)
		{
			return default(float);
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0x6F8BB8", Offset = "0x6F8BB8", VA = "0x6F8BB8")]
		public float RecordingStarted()
		{
			return default(float);
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0x6F8BC0", Offset = "0x6F8BC0", VA = "0x6F8BC0")]
		public float GetLastRecordedFrameTime()
		{
			return default(float);
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0x6F8BC8", Offset = "0x6F8BC8", VA = "0x6F8BC8")]
		public void StartRecording()
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0x6F8F0C", Offset = "0x6F8F0C", VA = "0x6F8F0C")]
		public void StartRecording(float keyframeInterval)
		{
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0x6F8F14", Offset = "0x6F8F14", VA = "0x6F8F14")]
		public void StartRecording(float recordingLength, float keyframeInterval)
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x6F9074", Offset = "0x6F9074", VA = "0x6F9074")]
		public void RecordOneFrame()
		{
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0x6F91B8", Offset = "0x6F91B8", VA = "0x6F91B8")]
		public void InsertOneFrame(int frame, FrameType frameType = FrameType.Middle)
		{
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0x6F8CAC", Offset = "0x6F8CAC", VA = "0x6F8CAC")]
		public void StopRecording()
		{
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0x6F92F4", Offset = "0x6F92F4", VA = "0x6F92F4")]
		public void ClearRecording()
		{
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0x6F945C", Offset = "0x6F945C", VA = "0x6F945C")]
		public void Play()
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0x6F959C", Offset = "0x6F959C", VA = "0x6F959C")]
		public void Play(float speed)
		{
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0x6F9468", Offset = "0x6F9468", VA = "0x6F9468")]
		public void Play(float fromNormalizedTime, float speed, bool repeat)
		{
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0x6F97C4", Offset = "0x6F97C4", VA = "0x6F97C4")]
		public void Pause()
		{
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0x6F9824", Offset = "0x6F9824", VA = "0x6F9824")]
		public void Stop()
		{
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0x6F98E0", Offset = "0x6F98E0", VA = "0x6F98E0")]
		public void StopAndSerialize()
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x6F9958", Offset = "0x6F9958", VA = "0x6F9958")]
		public void Serialize()
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0x6F85F0", Offset = "0x6F85F0", VA = "0x6F85F0")]
		public void Load()
		{
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0x6F84D0", Offset = "0x6F84D0", VA = "0x6F84D0")]
		public void LoadAsync()
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x6F99D0", Offset = "0x6F99D0", VA = "0x6F99D0")]
		public void Scrub(float normalizedTime)
		{
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0x6FACC4", Offset = "0x6FACC4", VA = "0x6FACC4")]
		public bool Trim(float leftTime, float rightTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0x6FAE50", Offset = "0x6FAE50", VA = "0x6FAE50")]
		public void TrimInner(float leftTime, float rightTime)
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x6FAF3C", Offset = "0x6FAF3C", VA = "0x6FAF3C")]
		public void SetParticleSystemAsCurrentPlayback()
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x6FAF44", Offset = "0x6FAF44", VA = "0x6FAF44")]
		public void SetParticleSystemAsRecording(float normalizedTime)
		{
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0x6F9078", Offset = "0x6F9078", VA = "0x6F9078")]
		private void RecFrame()
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0x6F91BC", Offset = "0x6F91BC", VA = "0x6F91BC")]
		private void InsertRecFrame(int frame, FrameType frameType)
		{
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0x6F95B8", Offset = "0x6F95B8", VA = "0x6F95B8")]
		private void StartPlayback()
		{
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0x6F9420", Offset = "0x6F9420", VA = "0x6F9420")]
		private void StopPlayback()
		{
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0x6F9B18", Offset = "0x6F9B18", VA = "0x6F9B18")]
		private void ScrubInternal(float normalizedTime)
		{
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0x6FB0B0", Offset = "0x6FB0B0", VA = "0x6FB0B0")]
		private void SetParticleSystemAsRecordingInternal(float normalizedTime)
		{
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0x6F8FC8", Offset = "0x6F8FC8", VA = "0x6F8FC8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B5FA0", Offset = "0x4B5FA0")]
		private IEnumerator StartRecordingInternal(float recordingLength, float keyframeInterval)
		{
			return null;
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0x6F8E74", Offset = "0x6F8E74", VA = "0x6F8E74")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B6004", Offset = "0x4B6004")]
		private IEnumerator RecordInternal(float keyframeInterval)
		{
			return null;
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0x6FC4A0", Offset = "0x6FC4A0", VA = "0x6FC4A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B6068", Offset = "0x4B6068")]
		private IEnumerator Playback()
		{
			return null;
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0x6F972C", Offset = "0x6F972C", VA = "0x6F972C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B60CC", Offset = "0x4B60CC")]
		private IEnumerator PlayRecordedFrames(float fromNormalizedTime)
		{
			return null;
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0x6FC5C4", Offset = "0x6FC5C4", VA = "0x6FC5C4")]
		public PlaygroundRecorder()
		{
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0x6FC650", Offset = "0x6FC650", VA = "0x6FC650")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B6130", Offset = "0x4B6130")]
		private void <LoadAsync>b__53_0()
		{
		}
	}
	[Token(Token = "0x20002CF")]
	public struct PlaybackParticle
	{
		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public Vector3 position;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[HideInInspector]
		public Vector3 velocity;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public float rotation;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public float size;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public float lifetime;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public float startLifetime;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public float playgroundLife;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public float playgroundStartLifetime;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public float playgroundEndLifetime;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public float playgroundLifetimeSubtraction;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Color32 color;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public Vector3 sourcePosition;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public float startingSize;

		[Token(Token = "0x6001561")]
		[Address(RVA = "0x507800", Offset = "0x507800", VA = "0x507800")]
		public PlaybackParticle(Vector3 position, Vector3 velocity, float rotation, float size, float lifetime, float startLifetime, float playgroundLife, float playgroundStartLifetime, float playgroundEndLifetime, float playgroundLifetimeSubtraction, Color32 color, Vector3 sourcePosition, float startingSize)
		{
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0x507850", Offset = "0x507850", VA = "0x507850")]
		public ParticleSystem.Particle CloneAsParticle(bool includeVelocity = false)
		{
			return default(ParticleSystem.Particle);
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0x50785C", Offset = "0x50785C", VA = "0x50785C")]
		public SerializedParticle CloneAsSerializedParticle()
		{
			return null;
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0x507864", Offset = "0x507864", VA = "0x507864")]
		public PlaybackParticle Clone()
		{
			return default(PlaybackParticle);
		}
	}
	[Token(Token = "0x20002D0")]
	public enum FrameType
	{
		[Token(Token = "0x40010C5")]
		Start,
		[Token(Token = "0x40010C6")]
		Middle,
		[Token(Token = "0x40010C7")]
		End
	}
	[Token(Token = "0x20002D1")]
	public class PlaygroundCompression
	{
		[Token(Token = "0x6001565")]
		[Address(RVA = "0x5E86B0", Offset = "0x5E86B0", VA = "0x5E86B0")]
		public static byte[] SerializeAndCompress(object obj)
		{
			return null;
		}

		[Token(Token = "0x6001566")]
		public static T DecompressAndDeserialize<T>(byte[] data)
		{
			return (T)null;
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0x5E89A0", Offset = "0x5E89A0", VA = "0x5E89A0")]
		public PlaygroundCompression()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002D2")]
	public class RecordedFrame
	{
		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public PlaybackParticle[] particles;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public float timeStamp;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public float keyframeInterval;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public FrameType frameType;

		[Token(Token = "0x6001568")]
		[Address(RVA = "0x700A6C", Offset = "0x700A6C", VA = "0x700A6C")]
		public RecordedFrame()
		{
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0x6FBDE8", Offset = "0x6FBDE8", VA = "0x6FBDE8")]
		public RecordedFrame(PlaygroundParticlesC playgroundParticles, float keyframeInterval)
		{
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0x700A7C", Offset = "0x700A7C", VA = "0x700A7C")]
		public RecordedFrame Clone()
		{
			return null;
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0x6FC360", Offset = "0x6FC360", VA = "0x6FC360")]
		public ParticleSystem.Particle[] CloneAsParticles()
		{
			return null;
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0x700BD0", Offset = "0x700BD0", VA = "0x700BD0")]
		public SerializedFrame CloneAsSerializedFrame()
		{
			return null;
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0x700CC0", Offset = "0x700CC0", VA = "0x700CC0")]
		public SerializedParticle[] CloneAsSerializedParticles()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20002D3")]
	public class SerializedFrame
	{
		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SerializedParticle[] serializedParticles;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timeStamp;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float keyframeInterval;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FrameType frameType;

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x700DF4", Offset = "0x700DF4", VA = "0x700DF4")]
		public RecordedFrame CloneAsRecordedFrame()
		{
			return null;
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0x700ED4", Offset = "0x700ED4", VA = "0x700ED4")]
		public PlaybackParticle[] CloneAsPlaybackParticles()
		{
			return null;
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0x700CB0", Offset = "0x700CB0", VA = "0x700CB0")]
		public SerializedFrame()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002D4")]
	public class SerializedParticle
	{
		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 position;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 velocity;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float rotation;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float size;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float lifetime;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float startLifetime;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float playgroundLife;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float playgroundStartLifetime;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float playgroundEndLifetime;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float playgroundLifetimeSubtraction;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color32 color;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 sourcePosition;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float startingSize;

		[Token(Token = "0x6001571")]
		[Address(RVA = "0x701124", Offset = "0x701124", VA = "0x701124")]
		public SerializedParticle(Vector3 position, Vector3 velocity, float rotation, float size, float lifetime, float startLifetime, float playgroundLife, float playgroundStartLifetime, float playgroundEndLifetime, float playgroundLifetimeSubtraction, Color32 color, Vector3 sourcePosition, float startingSize)
		{
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0x701020", Offset = "0x701020", VA = "0x701020")]
		public PlaybackParticle CloneAsPlaybackParticle()
		{
			return default(PlaybackParticle);
		}
	}
	[Serializable]
	[Token(Token = "0x20002D5")]
	public class ParticlePlaygroundTrail
	{
		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public bool update;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public GameObject trailGameObject;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Transform trailTransform;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public MeshRenderer trailRenderer;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public MeshFilter trailMeshFilter;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Mesh trailMesh;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public int particleId;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public int minPointCache;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public int maxPointCache;

		[NonSerialized]
		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<TrailPoint> trailPoints;

		[NonSerialized]
		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3[] meshVerticesCache;

		[NonSerialized]
		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3[] meshNormalsCache;

		[NonSerialized]
		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector2[] meshUvsCache;

		[NonSerialized]
		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int[] meshTrianglesCache;

		[NonSerialized]
		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Color32[] meshColorsCache;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _pointCache;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int _birthIterator;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _deathIterator;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float _particleTime;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 _particlePosition;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 _previousParticlePosition;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 _particleDirection;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Vector3 _lastAddedPointPosition;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3 _lastAddedPointDirection;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private bool _isDead;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		private bool _isReady;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float _timeCached;

		[Token(Token = "0x6001573")]
		[Address(RVA = "0x5C6188", Offset = "0x5C6188", VA = "0x5C6188")]
		public ParticlePlaygroundTrail()
		{
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0x5C6320", Offset = "0x5C6320", VA = "0x5C6320")]
		public ParticlePlaygroundTrail(int pointCache)
		{
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0x5C621C", Offset = "0x5C621C", VA = "0x5C621C")]
		public void UpdateCache()
		{
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0x5C63FC", Offset = "0x5C63FC", VA = "0x5C63FC")]
		public void UpdateMesh()
		{
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0x5C64EC", Offset = "0x5C64EC", VA = "0x5C64EC")]
		public void RecalculateBounds()
		{
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0x5C651C", Offset = "0x5C651C", VA = "0x5C651C")]
		public void ClearMesh()
		{
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0x5C65D0", Offset = "0x5C65D0", VA = "0x5C65D0")]
		public void SetFirstPoint(Vector3 pos, Vector3 dir, float startWidth, float lifetime, float creationTime)
		{
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0x5C6770", Offset = "0x5C6770", VA = "0x5C6770")]
		public void SetLastPoint(Vector3 pos, Vector3 dir, float startWidth, float lifetime, float creationTime)
		{
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0x5C665C", Offset = "0x5C665C", VA = "0x5C665C")]
		public void AddPoint(Vector3 position, float width, float lifetime, float creationTime)
		{
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0x5C6CE8", Offset = "0x5C6CE8", VA = "0x5C6CE8")]
		public void AddPoint(Vector3 position, Vector3 velocity, float width, float lifetime, float creationTime)
		{
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0x5C67BC", Offset = "0x5C67BC", VA = "0x5C67BC")]
		private void AddPoint(Vector3 position)
		{
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0x5C6E78", Offset = "0x5C6E78", VA = "0x5C6E78")]
		public void RemovePoint(int index)
		{
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0x5C703C", Offset = "0x5C703C", VA = "0x5C703C")]
		public void SetColor(int index, Color32 color)
		{
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0x5C6E68", Offset = "0x5C6E68", VA = "0x5C6E68")]
		public void NextPoint()
		{
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0x5C70E0", Offset = "0x5C70E0", VA = "0x5C70E0")]
		public float GetParticleTime()
		{
			return default(float);
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0x5C70E8", Offset = "0x5C70E8", VA = "0x5C70E8")]
		public void SetParticleTime(float time)
		{
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0x5C70F0", Offset = "0x5C70F0", VA = "0x5C70F0")]
		public Vector3 GetParticlePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0x5C70FC", Offset = "0x5C70FC", VA = "0x5C70FC")]
		public void SetParticlePosition(Vector3 position)
		{
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0x5C71F8", Offset = "0x5C71F8", VA = "0x5C71F8")]
		public void SetParticleDirection(Vector3 direction)
		{
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0x5C7204", Offset = "0x5C7204", VA = "0x5C7204")]
		public Vector3 GetLastAddedPointPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0x5C7210", Offset = "0x5C7210", VA = "0x5C7210")]
		public Vector3 GetParticleDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0x5C721C", Offset = "0x5C721C", VA = "0x5C721C")]
		public Vector3 GetLastAddedPointDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0x5C7228", Offset = "0x5C7228", VA = "0x5C7228")]
		public float GetPathDeviation()
		{
			return default(float);
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x5C72CC", Offset = "0x5C72CC", VA = "0x5C72CC")]
		public int GetBirthIterator()
		{
			return default(int);
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0x5C72D4", Offset = "0x5C72D4", VA = "0x5C72D4")]
		public int GetDeathIterator()
		{
			return default(int);
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0x5C72DC", Offset = "0x5C72DC", VA = "0x5C72DC")]
		public int GetPointCache()
		{
			return default(int);
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0x5C72E4", Offset = "0x5C72E4", VA = "0x5C72E4")]
		public float TimeCached()
		{
			return default(float);
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0x5C72EC", Offset = "0x5C72EC", VA = "0x5C72EC")]
		public bool CanRemovePoint(int point)
		{
			return default(bool);
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0x5C7374", Offset = "0x5C7374", VA = "0x5C7374")]
		public bool CanRemoveTrail()
		{
			return default(bool);
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0x5C7468", Offset = "0x5C7468", VA = "0x5C7468")]
		public void WakeUp()
		{
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0x5C67B0", Offset = "0x5C67B0", VA = "0x5C67B0")]
		public void Die()
		{
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0x5C7470", Offset = "0x5C7470", VA = "0x5C7470")]
		public bool IsDead()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002D6")]
	public class TrailPoint
	{
		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 position;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 velocity;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float lifetime;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float startLifetime;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float width;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool _canRemove;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _lastTimeUpdated;

		[Token(Token = "0x6001593")]
		[Address(RVA = "0x706D6C", Offset = "0x706D6C", VA = "0x706D6C")]
		public TrailPoint(Vector3 position, float startLifetime, float creationTime)
		{
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0x706DD0", Offset = "0x706DD0", VA = "0x706DD0")]
		public TrailPoint(Vector3 position, float startLifetime, float width, float creationTime)
		{
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0x706E38", Offset = "0x706E38", VA = "0x706E38")]
		public TrailPoint(Vector3 position, Vector3 velocity, float startLifetime, float width, float creationTime)
		{
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0x700304", Offset = "0x700304", VA = "0x700304")]
		public void Update(float updateTime, float width)
		{
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0x7002F0", Offset = "0x7002F0", VA = "0x7002F0")]
		public float GetNormalizedLifetime()
		{
			return default(float);
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0x7002E8", Offset = "0x7002E8", VA = "0x7002E8")]
		public bool CanRemove()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002D7")]
	[ExecuteInEditMode]
	public class PlaygroundTrails : MonoBehaviour
	{
		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public PlaygroundParticlesC playgroundSystem;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Material material;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Gradient lifetimeColor;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public AnimationCurve pointArrayAlpha;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public TrailColorMode colorMode;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public TrailUvMode uvMode;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public TrailRenderMode renderMode;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public Transform billboardTransform;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public Vector3 customRenderScale;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		public bool receiveShadows;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public ShadowCastingMode shadowCastingMode;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[HideInInspector]
		public float time;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimationCurve timeWidth;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float widthScale;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float minVertexDistance;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float maxVertexDistance;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float maxPathDeviation;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool createPointsOnCollision;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int maxPoints;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool createFirstPointOnParticleBirth;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		public bool createLastPointOnParticleDeath;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		public bool multithreading;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public PlaygroundEventC birthEvent;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public PlaygroundEventC deathEvent;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public PlaygroundEventC collisionEvent;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private List<ParticlePlaygroundTrail> _trails;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Transform _parentTransform;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private GameObject _parentGameObject;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Material _materialCache;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float _calculationStartTime;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int _currentParticleCount;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float _currentParticleMinLifetime;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float _currentParticleMaxLifetime;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool _localSpace;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector3 _billboardTransformPosition;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private object _locker;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool _isDoneThread;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Matrix4x4 _localMatrix;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private readonly Queue<TrailParticleInfo> _birthQueue;

		[Token(Token = "0x6001599")]
		[Address(RVA = "0x6FD38C", Offset = "0x6FD38C", VA = "0x6FD38C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0x6FDAC8", Offset = "0x6FDAC8", VA = "0x6FDAC8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0x6FDED0", Offset = "0x6FDED0", VA = "0x6FDED0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0x6FDEF4", Offset = "0x6FDEF4", VA = "0x6FDEF4")]
		private void Update()
		{
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0x6FF904", Offset = "0x6FF904", VA = "0x6FF904")]
		private void OnParticleBirthEvent(PlaygroundEventParticle particle)
		{
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0x6FF9F8", Offset = "0x6FF9F8", VA = "0x6FF9F8")]
		private void OnParticleDeathEvent(PlaygroundEventParticle particle)
		{
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0x6FFD10", Offset = "0x6FFD10", VA = "0x6FFD10")]
		private void OnParticleCollisionEvent(PlaygroundEventParticle particle)
		{
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0x6FFF94", Offset = "0x6FFF94", VA = "0x6FFF94")]
		public PlaygroundEventC GetBirthEvent()
		{
			return null;
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0x6FFF9C", Offset = "0x6FFF9C", VA = "0x6FFF9C")]
		public PlaygroundEventC GetDeathEvent()
		{
			return null;
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0x6FFFA4", Offset = "0x6FFFA4", VA = "0x6FFFA4")]
		public PlaygroundEventC GetCollisionEvent()
		{
			return null;
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0x6FD6F0", Offset = "0x6FD6F0", VA = "0x6FD6F0")]
		public void AddRequiredParticleEvents()
		{
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0x6FDD78", Offset = "0x6FDD78", VA = "0x6FDD78")]
		public void RemoveRequiredEvents()
		{
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0x6FFFAC", Offset = "0x6FFFAC", VA = "0x6FFFAC")]
		public PlaygroundEventC GetEventFromType(EVENTTYPEC eventType)
		{
			return null;
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0x6FD9B0", Offset = "0x6FD9B0", VA = "0x6FD9B0")]
		public Keyframe[] DefaultWidthKeys()
		{
			return null;
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0x6FE678", Offset = "0x6FE678", VA = "0x6FE678")]
		public void SetMaterial(Material material)
		{
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0x6FFCC0", Offset = "0x6FFCC0", VA = "0x6FFCC0")]
		public float EvaluateWidth(float normalizedTime)
		{
			return default(float);
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0x7000D0", Offset = "0x7000D0", VA = "0x7000D0")]
		public Color32 EvaluateColor(float normalizedTime)
		{
			return default(Color32);
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0x700120", Offset = "0x700120", VA = "0x700120")]
		public Color32 EvaluateColor(int trailIndex, int trailPointIndex)
		{
			return default(Color32);
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0x6FE8F0", Offset = "0x6FE8F0", VA = "0x6FE8F0")]
		public void AddTrail(TrailParticleInfo particleInfo)
		{
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0x6FFBB0", Offset = "0x6FFBB0", VA = "0x6FFBB0")]
		public int GetOldestTrailWithParticleId(int particleId)
		{
			return default(int);
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0x6FFE88", Offset = "0x6FFE88", VA = "0x6FFE88")]
		public int GetNewestTrailWithParticleId(int particleId)
		{
			return default(int);
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x7001EC", Offset = "0x7001EC", VA = "0x7001EC")]
		public Transform GetParentTransform()
		{
			return null;
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x7001F4", Offset = "0x7001F4", VA = "0x7001F4")]
		public GameObject GetParentGameObject()
		{
			return null;
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x7001FC", Offset = "0x7001FC", VA = "0x7001FC")]
		public void StopTrail(int trailNumber)
		{
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x700298", Offset = "0x700298", VA = "0x700298")]
		public void StopOldestTrailWithParticleId(int particleId)
		{
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0x7002C0", Offset = "0x7002C0", VA = "0x7002C0")]
		public void StopNewestTrailWithParticleId(int particleId)
		{
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0x6FD594", Offset = "0x6FD594", VA = "0x6FD594")]
		public void ResetTrails()
		{
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0x6FE7EC", Offset = "0x6FE7EC", VA = "0x6FE7EC")]
		public void RemoveTrail(int index)
		{
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0x6FDAEC", Offset = "0x6FDAEC", VA = "0x6FDAEC")]
		public void DestroyAllTrails()
		{
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0x6FEE18", Offset = "0x6FEE18", VA = "0x6FEE18")]
		private void CalculateTrail()
		{
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0x700338", Offset = "0x700338", VA = "0x700338")]
		public PlaygroundTrails()
		{
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0x700470", Offset = "0x700470", VA = "0x700470")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B6140", Offset = "0x4B6140")]
		private void <Update>b__42_0()
		{
		}
	}
	[Token(Token = "0x20002D8")]
	public enum TrailRenderMode
	{
		[Token(Token = "0x4001127")]
		Billboard,
		[Token(Token = "0x4001128")]
		Horizontal,
		[Token(Token = "0x4001129")]
		Vertical,
		[Token(Token = "0x400112A")]
		CustomRenderScale
	}
	[Token(Token = "0x20002D9")]
	public enum TrailColorMode
	{
		[Token(Token = "0x400112C")]
		Lifetime,
		[Token(Token = "0x400112D")]
		PointArray
	}
	[Token(Token = "0x20002DA")]
	public enum TrailUvMode
	{
		[Token(Token = "0x400112F")]
		Lifetime,
		[Token(Token = "0x4001130")]
		PointArray
	}
	[Token(Token = "0x20002DB")]
	public struct TrailParticleInfo
	{
		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int particleId;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 position;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 velocity;

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x5082CC", Offset = "0x5082CC", VA = "0x5082CC")]
		public TrailParticleInfo(int particleId, Vector3 position, Vector3 velocity)
		{
		}
	}
	[Token(Token = "0x20002DC")]
	[ExecuteInEditMode]
	public class PlaygroundC : MonoBehaviour
	{
		[Token(Token = "0x20004CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A94DC", Offset = "0x4A94DC")]
		private sealed class <InitializePlayground>d__159 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlaygroundC <>4__this;

			[Token(Token = "0x17000268")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F3C")]
				[Address(RVA = "0x5E7B18", Offset = "0x5E7B18", VA = "0x5E7B18", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000269")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F3E")]
				[Address(RVA = "0x5E7B88", Offset = "0x5E7B88", VA = "0x5E7B88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F39")]
			[Address(RVA = "0x5D41F0", Offset = "0x5D41F0", VA = "0x5D41F0")]
			[DebuggerHidden]
			public <InitializePlayground>d__159(int <>1__state)
			{
			}

			[Token(Token = "0x6001F3A")]
			[Address(RVA = "0x5E741C", Offset = "0x5E741C", VA = "0x5E741C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F3B")]
			[Address(RVA = "0x5E7420", Offset = "0x5E7420", VA = "0x5E7420", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F3D")]
			[Address(RVA = "0x5E7B20", Offset = "0x5E7B20", VA = "0x5E7B20", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int meshQuantity;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static int particlesQuantity;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float version;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string specialVersion;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static float globalTime;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static float lastTimeUpdated;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static float globalDeltaTime;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static float globalTimescale;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Vector3 initialTargetPosition;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public static int skinnedUpdateRate;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static bool triggerSceneRepaint;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public static float collisionSleepVelocity;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static int unsafeAutomaticThreadFrames;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static Plane[] frustumPlanes;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static bool particleEventBirthInitialized;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static bool particleEventDeathInitialized;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static bool particleEventCollisionInitialized;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private static bool particleEventTimeInitialized;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public static PlaygroundC reference;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public static Transform referenceTransform;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public static GameObject referenceGameObject;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<PlaygroundParticlesC> particleSystems;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public List<ManipulatorObjectC> manipulators;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public int paintMaxPositions;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public bool calculate;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public PIXELMODEC pixelFilterMode;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public bool autoGroup;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		[HideInInspector]
		public bool buildZeroAlphaPixels;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		[HideInInspector]
		public bool drawGizmos;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
		[HideInInspector]
		public bool drawSourcePositions;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public bool showShuriken;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[HideInInspector]
		public bool paintToolbox;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public float collisionPlaneScale;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public bool showSnapshotsInHierarchy;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[HideInInspector]
		public bool drawWireframe;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		[HideInInspector]
		public bool drawSplinePreview;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		[HideInInspector]
		public bool globalTimeScale;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public ThreadPoolMethod threadPoolMethod;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public ThreadMethod threadMethod;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		public ThreadMethodComponent skinnedMeshThreadMethod;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public ThreadMethodComponent turbulenceThreadMethod;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public int maxThreads;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public static PlaygroundQueue<Action> playgroundPool;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isDoneThread;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool isDoneThreadLocal;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool isDoneThreadSkinned;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		private bool isDoneThreadTurbulence;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int threads;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int _prevMaxThreadCount;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private static int processorCount;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private static int activeThreads;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private static bool hasReference;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		private static bool hasPlaygroundPool;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private static System.Random random;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private static object locker;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private object lockerLocal;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int frameCount;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool isReady;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		private bool hasActiveParticleSystems;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
		private bool hasLocalNoThreads;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x77")]
		private bool hasLocalOnePerSystem;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool hasLocalOneForAll;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool hasActiveSkinnedMeshes;

		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		private bool hasActiveTurbulence;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
		private bool isFirstUnsafeAutomaticFrames;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int threadAggregatorRuns;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<int> activeSystems;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private ThreadMethod previousThreadMethod;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private ThreadMethodComponent previousSkinnedMeshThreadMethod;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ThreadMethodComponent previousTurbulenceThreadMethod;

		[Token(Token = "0x1400002B")]
		public static event OnPlaygroundParticle particleEventBirth
		{
			[Token(Token = "0x60015BA")]
			[Address(RVA = "0x5CAE9C", Offset = "0x5CAE9C", VA = "0x5CAE9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B6150", Offset = "0x4B6150")]
			add
			{
			}
			[Token(Token = "0x60015BB")]
			[Address(RVA = "0x5CAFCC", Offset = "0x5CAFCC", VA = "0x5CAFCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B6160", Offset = "0x4B6160")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002C")]
		public static event OnPlaygroundParticle particleEventDeath
		{
			[Token(Token = "0x60015BC")]
			[Address(RVA = "0x5CB0FC", Offset = "0x5CB0FC", VA = "0x5CB0FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B6170", Offset = "0x4B6170")]
			add
			{
			}
			[Token(Token = "0x60015BD")]
			[Address(RVA = "0x5CB22C", Offset = "0x5CB22C", VA = "0x5CB22C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B6180", Offset = "0x4B6180")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002D")]
		public static event OnPlaygroundParticle particleEventCollision
		{
			[Token(Token = "0x60015BE")]
			[Address(RVA = "0x5CB35C", Offset = "0x5CB35C", VA = "0x5CB35C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B6190", Offset = "0x4B6190")]
			add
			{
			}
			[Token(Token = "0x60015BF")]
			[Address(RVA = "0x5CB48C", Offset = "0x5CB48C", VA = "0x5CB48C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B61A0", Offset = "0x4B61A0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002E")]
		public static event OnPlaygroundParticle particleEventTime
		{
			[Token(Token = "0x60015C0")]
			[Address(RVA = "0x5CB5BC", Offset = "0x5CB5BC", VA = "0x5CB5BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B61B0", Offset = "0x4B61B0")]
			add
			{
			}
			[Token(Token = "0x60015C1")]
			[Address(RVA = "0x5CB6EC", Offset = "0x5CB6EC", VA = "0x5CB6EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B61C0", Offset = "0x4B61C0")]
			remove
			{
			}
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0x5CB81C", Offset = "0x5CB81C", VA = "0x5CB81C")]
		public static void SendParticleEventBirth(PlaygroundEventParticle eventParticle)
		{
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0x5CB8D0", Offset = "0x5CB8D0", VA = "0x5CB8D0")]
		public static void SendParticleEventDeath(PlaygroundEventParticle eventParticle)
		{
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0x5CB984", Offset = "0x5CB984", VA = "0x5CB984")]
		public static void SendParticleEventCollision(PlaygroundEventParticle eventParticle)
		{
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0x5CBA38", Offset = "0x5CBA38", VA = "0x5CBA38")]
		public static void SendParticleEventTime(PlaygroundEventParticle eventParticle)
		{
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0x5CBAEC", Offset = "0x5CBAEC", VA = "0x5CBAEC")]
		public static PlaygroundParticlesC Particle()
		{
			return null;
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0x5CBC6C", Offset = "0x5CBC6C", VA = "0x5CBC6C")]
		public static PlaygroundParticlesC ParticleNew()
		{
			return null;
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0x5CC7F8", Offset = "0x5CC7F8", VA = "0x5CC7F8")]
		public static PlaygroundParticlesC Particle(Texture2D image, string name, Vector3 position, Quaternion rotation, Vector3 offset, float particleSize, float scale, Material material)
		{
			return null;
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0x5CCCC8", Offset = "0x5CCCC8", VA = "0x5CCCC8")]
		public static PlaygroundParticlesC Particle(Texture2D image)
		{
			return null;
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0x5CCEFC", Offset = "0x5CCEFC", VA = "0x5CCEFC")]
		public static PlaygroundParticlesC Particle(Texture2D[] images, string name, Vector3 position, Quaternion rotation, Vector3 offset, float particleSize, float scale, Material material)
		{
			return null;
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0x5CCF18", Offset = "0x5CCF18", VA = "0x5CCF18")]
		public static PlaygroundParticlesC Particle(Texture2D[] images)
		{
			return null;
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0x5CD0E0", Offset = "0x5CD0E0", VA = "0x5CD0E0")]
		public static PlaygroundParticlesC Particle(Mesh mesh, Texture2D texture, string name, Vector3 position, Quaternion rotation, float particleScale, Vector3 offset, Material material)
		{
			return null;
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0x5CD2D8", Offset = "0x5CD2D8", VA = "0x5CD2D8")]
		public static PlaygroundParticlesC Particle(Mesh mesh, Texture2D texture)
		{
			return null;
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0x5CD5CC", Offset = "0x5CD5CC", VA = "0x5CD5CC")]
		public static PlaygroundParticlesC Particle(Mesh[] meshes, Texture2D[] textures, string name, Vector3 position, Quaternion rotation, float particleScale, Vector3[] offsets, Material material)
		{
			return null;
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0x5CD5F0", Offset = "0x5CD5F0", VA = "0x5CD5F0")]
		public static PlaygroundParticlesC Particle(Mesh[] meshes, Texture2D[] textures)
		{
			return null;
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0x5CD7DC", Offset = "0x5CD7DC", VA = "0x5CD7DC")]
		public static int Emit(PlaygroundParticlesC playgroundParticles)
		{
			return default(int);
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0x5CD8F0", Offset = "0x5CD8F0", VA = "0x5CD8F0")]
		public static int Emit(PlaygroundParticlesC playgroundParticles, Vector3 position, Vector3 normal, Color color)
		{
			return default(int);
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0x5CD998", Offset = "0x5CD998", VA = "0x5CD998")]
		public static void Emit(PlaygroundParticlesC playgroundParticles, bool setEmission)
		{
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0x5CDACC", Offset = "0x5CDACC", VA = "0x5CDACC")]
		public static void GetPosition(SkinnedWorldObject particleStateWorldObject, bool updateNormals)
		{
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0x5CDE88", Offset = "0x5CDE88", VA = "0x5CDE88")]
		public static void GetPosition(Vector3[] vertices, WorldObject particleStateWorldObject)
		{
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0x5CDF80", Offset = "0x5CDF80", VA = "0x5CDF80")]
		public static void GetNormals(Vector3[] normals, WorldObject particleStateWorldObject)
		{
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0x5CDFC4", Offset = "0x5CDFC4", VA = "0x5CDFC4")]
		public static void SetAlpha(PlaygroundParticlesC playgroundParticles, float alpha)
		{
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0x5CE060", Offset = "0x5CE060", VA = "0x5CE060")]
		public static void SetSize(PlaygroundParticlesC playgroundParticles, float size)
		{
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0x5CE15C", Offset = "0x5CE15C", VA = "0x5CE15C")]
		public static void Translate(PlaygroundParticlesC playgroundParticles, Vector3 direction)
		{
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0x5CE2A8", Offset = "0x5CE2A8", VA = "0x5CE2A8")]
		public static void Add(PlaygroundParticlesC playgroundParticles, ParticleStateC state)
		{
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0x5CE33C", Offset = "0x5CE33C", VA = "0x5CE33C")]
		public static void Add(PlaygroundParticlesC playgroundParticles, Texture2D image, float scale, Vector3 offset, string stateName)
		{
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0x5CE4AC", Offset = "0x5CE4AC", VA = "0x5CE4AC")]
		public static void Add(PlaygroundParticlesC playgroundParticles, Texture2D image, float scale, Vector3 offset, string stateName, Transform stateTransform)
		{
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0x5CE4B0", Offset = "0x5CE4B0", VA = "0x5CE4B0")]
		public static void Add(PlaygroundParticlesC playgroundParticles, Texture2D image, Texture2D depthmap, float depthmapStrength, float scale, Vector3 offset, string stateName)
		{
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x5CE714", Offset = "0x5CE714", VA = "0x5CE714")]
		public static void Add(PlaygroundParticlesC playgroundParticles, Texture2D image, Texture2D depthmap, float depthmapStrength, float scale, Vector3 offset, string stateName, Transform stateTransform)
		{
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x5CE718", Offset = "0x5CE718", VA = "0x5CE718")]
		public static void Add(PlaygroundParticlesC playgroundParticles, Mesh mesh, float scale, Vector3 offset, string stateName)
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x5CE724", Offset = "0x5CE724", VA = "0x5CE724")]
		public static void Add(PlaygroundParticlesC playgroundParticles, Mesh mesh, float scale, Vector3 offset, string stateName, Transform stateTransform)
		{
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x5CE72C", Offset = "0x5CE72C", VA = "0x5CE72C")]
		public static void Add(PlaygroundParticlesC playgroundParticles, Mesh mesh, Texture2D texture, float scale, Vector3 offset, string stateName)
		{
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0x5CE738", Offset = "0x5CE738", VA = "0x5CE738")]
		public static void Add(PlaygroundParticlesC playgroundParticles, Mesh mesh, Texture2D texture, float scale, Vector3 offset, string stateName, Transform stateTransform)
		{
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0x5CE740", Offset = "0x5CE740", VA = "0x5CE740")]
		public static PlaygroundColliderC AddCollider(PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x5CE7EC", Offset = "0x5CE7EC", VA = "0x5CE7EC")]
		public static PlaygroundColliderC AddCollider(PlaygroundParticlesC playgroundParticles, Transform transform)
		{
			return null;
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x5CE8A4", Offset = "0x5CE8A4", VA = "0x5CE8A4")]
		public static void SetParticleCount(PlaygroundParticlesC playgroundParticles, int amount)
		{
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0x5CECDC", Offset = "0x5CECDC", VA = "0x5CECDC")]
		public static void SetLifetime(PlaygroundParticlesC playgroundParticles, float time)
		{
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x5CEFA4", Offset = "0x5CEFA4", VA = "0x5CEFA4")]
		public static void SetMaterial(PlaygroundParticlesC playgroundParticles, Material particleMaterial)
		{
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0x5CEFEC", Offset = "0x5CEFEC", VA = "0x5CEFEC")]
		public static void Destroy(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x5CF070", Offset = "0x5CF070", VA = "0x5CF070")]
		public static WorldObject WorldObject(Transform meshTransform)
		{
			return null;
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x5CF1DC", Offset = "0x5CF1DC", VA = "0x5CF1DC")]
		public static SkinnedWorldObject SkinnedWorldObject(Transform meshTransform)
		{
			return null;
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x5CF348", Offset = "0x5CF348", VA = "0x5CF348")]
		public static ManipulatorObjectC ManipulatorObject(MANIPULATORTYPEC type, LayerMask affects, Transform manipulatorTransform, float size, float strength)
		{
			return null;
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0x5CF5A8", Offset = "0x5CF5A8", VA = "0x5CF5A8")]
		public static ManipulatorObjectC ManipulatorObject(Transform manipulatorTransform)
		{
			return null;
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0x5CF5E8", Offset = "0x5CF5E8", VA = "0x5CF5E8")]
		public static ManipulatorObjectC ManipulatorObject(MANIPULATORTYPEC type, LayerMask affects, Transform manipulatorTransform, float size, float strength, PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x5CF5F0", Offset = "0x5CF5F0", VA = "0x5CF5F0")]
		public static ManipulatorObjectC ManipulatorObject(Transform manipulatorTransform, PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0x5CF634", Offset = "0x5CF634", VA = "0x5CF634")]
		public static ManipulatorObjectC GetManipulator(int i)
		{
			return null;
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0x5CF814", Offset = "0x5CF814", VA = "0x5CF814")]
		public static ManipulatorObjectC GetManipulator(int i, PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0x5CF954", Offset = "0x5CF954", VA = "0x5CF954")]
		public static List<PlaygroundEventParticle> GetManipulatorParticles(int manipulator, PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0x5D0F6C", Offset = "0x5D0F6C", VA = "0x5D0F6C")]
		public static List<PlaygroundEventParticle> GetManipulatorParticles(int manipulator)
		{
			return null;
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0x5D140C", Offset = "0x5D140C", VA = "0x5D140C")]
		public static Transform CreateTransform()
		{
			return null;
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0x5D1484", Offset = "0x5D1484", VA = "0x5D1484")]
		public static Transform CreatePlaygroundTransform(PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0x5D1758", Offset = "0x5D1758", VA = "0x5D1758")]
		public static PlaygroundSpline CreateSpline()
		{
			return null;
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0x5D191C", Offset = "0x5D191C", VA = "0x5D191C")]
		public static PlaygroundSpline CreateSpline(PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0x5D1C28", Offset = "0x5D1C28", VA = "0x5D1C28")]
		public static PlaygroundSpline CreateSpline(ManipulatorPropertyC manipulatorProperty)
		{
			return null;
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0x5D1CB8", Offset = "0x5D1CB8", VA = "0x5D1CB8")]
		public static PlaygroundEventC CreateEvent()
		{
			return null;
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0x5D1D64", Offset = "0x5D1D64", VA = "0x5D1D64")]
		public static PlaygroundEventC CreateEvent(PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0x5D1EC4", Offset = "0x5D1EC4", VA = "0x5D1EC4")]
		public static PlaygroundEventC GetEvent(int i, PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0x5D2004", Offset = "0x5D2004", VA = "0x5D2004")]
		public static void RemoveEvent(int i, PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0x5D2308", Offset = "0x5D2308", VA = "0x5D2308")]
		public static PlaygroundParticlesC GetParticles(int i)
		{
			return null;
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0x5D2528", Offset = "0x5D2528", VA = "0x5D2528")]
		public static ParticleProjectionC ParticleProjection(PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0x5D2608", Offset = "0x5D2608", VA = "0x5D2608")]
		public static PaintObjectC PaintObject(PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0x5D26B4", Offset = "0x5D26B4", VA = "0x5D26B4")]
		public static int Paint(PlaygroundParticlesC playgroundParticles, Vector3 position, Vector3 normal, Transform parent, Color32 color)
		{
			return default(int);
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0x5D2750", Offset = "0x5D2750", VA = "0x5D2750")]
		public static void Paint(PaintObjectC paintObject, Vector3 position, Vector3 normal, Transform parent, Color32 color)
		{
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0x5D27DC", Offset = "0x5D27DC", VA = "0x5D27DC")]
		public static bool Erase(PlaygroundParticlesC playgroundParticles, Vector3 position, float radius)
		{
			return default(bool);
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0x5D2848", Offset = "0x5D2848", VA = "0x5D2848")]
		public static bool Erase(PaintObjectC paintObject, Vector3 position, float radius)
		{
			return default(bool);
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0x5D28A4", Offset = "0x5D28A4", VA = "0x5D28A4")]
		public static bool Erase(PlaygroundParticlesC playgroundParticles, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0x5D28E8", Offset = "0x5D28E8", VA = "0x5D28E8")]
		public static void ClearPaint(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0x5D2924", Offset = "0x5D2924", VA = "0x5D2924")]
		public static int GetPaintPositionLength(PlaygroundParticlesC playgroundParticles)
		{
			return default(int);
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0x5D295C", Offset = "0x5D295C", VA = "0x5D295C")]
		public static void SetInitialTargetPosition(PlaygroundParticlesC playgroundParticles, Vector3 position)
		{
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0x5D2C34", Offset = "0x5D2C34", VA = "0x5D2C34")]
		public static void Emission(PlaygroundParticlesC playgroundParticles, bool emit)
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0x5D2D78", Offset = "0x5D2D78", VA = "0x5D2D78")]
		public static void Emission(PlaygroundParticlesC playgroundParticles, bool emit, bool restEmission)
		{
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0x5D2D84", Offset = "0x5D2D84", VA = "0x5D2D84")]
		public static void Clear(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0x5D2E9C", Offset = "0x5D2E9C", VA = "0x5D2E9C")]
		public static void RefreshScatter(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0x5D3150", Offset = "0x5D3150", VA = "0x5D3150")]
		public static PlaygroundParticlesC InstantiatePreset(string presetName)
		{
			return null;
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0x5D351C", Offset = "0x5D351C", VA = "0x5D351C")]
		public static PlaygroundParticlesC InstantiatePreset(string categoryName, string presetName)
		{
			return null;
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0x5D35B0", Offset = "0x5D35B0", VA = "0x5D35B0")]
		public static bool HasReference()
		{
			return default(bool);
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0x5D3618", Offset = "0x5D3618", VA = "0x5D3618")]
		public static bool HasPlaygroundPool()
		{
			return default(bool);
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0x5D3680", Offset = "0x5D3680", VA = "0x5D3680")]
		public bool IsDoneThread()
		{
			return default(bool);
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0x5D3688", Offset = "0x5D3688", VA = "0x5D3688")]
		public bool IsDoneThreadTurbulence()
		{
			return default(bool);
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0x5D3690", Offset = "0x5D3690", VA = "0x5D3690")]
		public bool IsDoneThreadSkinnedMeshes()
		{
			return default(bool);
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0x5D3698", Offset = "0x5D3698", VA = "0x5D3698")]
		public bool IsFirstUnsafeAutomaticFrames()
		{
			return default(bool);
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0x5D36A0", Offset = "0x5D36A0", VA = "0x5D36A0")]
		public bool HasEnabledGlobalManipulators()
		{
			return default(bool);
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0x5C7A94", Offset = "0x5C7A94", VA = "0x5C7A94")]
		public static Color32[] GetPixels(Texture2D image)
		{
			return null;
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0x5D383C", Offset = "0x5D383C", VA = "0x5D383C")]
		public static Vector3 Offset(PLAYGROUNDORIGINC origin, int imageWidth, int imageHeight, float meshScale)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0x5D39B0", Offset = "0x5D39B0", VA = "0x5D39B0")]
		public static Vector3[] RandomVector3(int length, Vector3 min, Vector3 max)
		{
			return null;
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0x5D3BF4", Offset = "0x5D3BF4", VA = "0x5D3BF4")]
		public static float[] RandomFloat(int length, float min, float max)
		{
			return null;
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0x5D3D1C", Offset = "0x5D3D1C", VA = "0x5D3D1C")]
		public static void ShuffleArray(float[] arr)
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0x5D3E80", Offset = "0x5D3E80", VA = "0x5D3E80")]
		public static void ShuffleArray(int[] arr)
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0x5D3FE4", Offset = "0x5D3FE4", VA = "0x5D3FE4")]
		public static int Largest(int[] compare)
		{
			return default(int);
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0x5D4060", Offset = "0x5D4060", VA = "0x5D4060")]
		public static int CountZeroAlphasInTexture(Texture2D image)
		{
			return default(int);
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0x5CBB74", Offset = "0x5CBB74", VA = "0x5CBB74")]
		public static GameObject ResourceInstantiate(string n)
		{
			return null;
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0x5D40F4", Offset = "0x5D40F4", VA = "0x5D40F4")]
		public static void TimeReset()
		{
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0x5D417C", Offset = "0x5D417C", VA = "0x5D417C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B61D0", Offset = "0x4B61D0")]
		public IEnumerator InitializePlayground()
		{
			return null;
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0x5D421C", Offset = "0x5D421C", VA = "0x5D421C")]
		public static bool IsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0x5D4294", Offset = "0x5D4294", VA = "0x5D4294")]
		public static void SetTime()
		{
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0x5D43F4", Offset = "0x5D43F4", VA = "0x5D43F4")]
		public static void SetMaxThreads(int threadCount)
		{
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0x5D4690", Offset = "0x5D4690", VA = "0x5D4690")]
		private static void CheckEvents()
		{
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0x5D4740", Offset = "0x5D4740", VA = "0x5D4740")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0x5D47F4", Offset = "0x5D47F4", VA = "0x5D47F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0x5D4850", Offset = "0x5D4850", VA = "0x5D4850")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0x5D980C", Offset = "0x5D980C", VA = "0x5D980C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0x5D9BF8", Offset = "0x5D9BF8", VA = "0x5D9BF8")]
		public static int ActiveThreads()
		{
			return default(int);
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0x5D9C60", Offset = "0x5D9C60", VA = "0x5D9C60")]
		public static int ProcessorCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0x5D8410", Offset = "0x5D8410", VA = "0x5D8410")]
		private void ThreadAggregator()
		{
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0x5E5194", Offset = "0x5E5194", VA = "0x5E5194")]
		public static void RunAsync(Action a, ThreadPoolMethod threadPoolMethod)
		{
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0x5D9CC8", Offset = "0x5D9CC8", VA = "0x5D9CC8")]
		public static void RunAsync(Action a)
		{
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0x5E5300", Offset = "0x5E5300", VA = "0x5E5300")]
		public static void RunAsyncPlaygroundPool(Action a)
		{
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0x5E54B8", Offset = "0x5E54B8", VA = "0x5E54B8")]
		private static void RunAction(object a)
		{
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0x5E5644", Offset = "0x5E5644", VA = "0x5E5644")]
		public PlaygroundC()
		{
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0x5E58EC", Offset = "0x5E58EC", VA = "0x5E58EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B6234", Offset = "0x4B6234")]
		private void <ThreadAggregator>b__184_0()
		{
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0x5E5A48", Offset = "0x5E5A48", VA = "0x5E5A48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B6244", Offset = "0x4B6244")]
		private void <ThreadAggregator>b__184_1()
		{
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0x5E7004", Offset = "0x5E7004", VA = "0x5E7004")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B6254", Offset = "0x4B6254")]
		private void <ThreadAggregator>b__184_2()
		{
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0x5E7228", Offset = "0x5E7228", VA = "0x5E7228")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B6264", Offset = "0x4B6264")]
		private void <ThreadAggregator>b__184_3()
		{
		}
	}
	[Token(Token = "0x20002DD")]
	public class PlaygroundQueue<T> : IDisposable where T : class
	{
		[Serializable]
		[Token(Token = "0x20004D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A94EC", Offset = "0x4A94EC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001B82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001B83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Action<Thread> <>9__12_1;

			[Token(Token = "0x6001F40")]
			public <>c()
			{
			}

			[Token(Token = "0x6001F41")]
			internal void <Dispose>b__12_1(Thread thread)
			{
			}
		}

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly object _locker;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<Thread> _workers;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Queue<T> _taskQueue;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action<T> _dequeueAction;

		[Token(Token = "0x6001633")]
		public PlaygroundQueue(int workerCount, Action<T> dequeueAction)
		{
		}

		[Token(Token = "0x6001634")]
		public bool HasPool()
		{
			return default(bool);
		}

		[Token(Token = "0x6001635")]
		public bool HasTasks()
		{
			return default(bool);
		}

		[Token(Token = "0x6001636")]
		public int ThreadPoolCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001637")]
		public int TaskCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001638")]
		public void SetThreadPool(int amount)
		{
		}

		[Token(Token = "0x6001639")]
		public void EnqueueTask(T task)
		{
		}

		[Token(Token = "0x600163A")]
		private void Consume()
		{
		}

		[Token(Token = "0x600163B")]
		public void Dispose()
		{
		}

		[Token(Token = "0x600163C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B6274", Offset = "0x4B6274")]
		private void <Dispose>b__12_0(Thread thread)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002DE")]
	public class PaintObjectC
	{
		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public List<PaintPositionC> paintPositions;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public int positionLength;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public Vector3 lastPaintPosition;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public COLLISIONTYPEC collisionType;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float minDepth;

		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float maxDepth;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float spacing;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LayerMask layerMask;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PlaygroundBrushC brush;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool exceedMaxStopsPaint;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool initialized;

		[Token(Token = "0x600163D")]
		[Address(RVA = "0x650070", Offset = "0x650070", VA = "0x650070")]
		public void Initialize()
		{
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0x650138", Offset = "0x650138", VA = "0x650138")]
		public bool Paint(Ray ray, Color32 color)
		{
			return default(bool);
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0x6504AC", Offset = "0x6504AC", VA = "0x6504AC")]
		public int Paint(Vector3 pos, Vector3 norm, Transform parent, Color32 color)
		{
			return default(int);
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0x650748", Offset = "0x650748", VA = "0x650748")]
		public bool Erase(Vector3 pos, float radius)
		{
			return default(bool);
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0x650904", Offset = "0x650904", VA = "0x650904")]
		public bool Erase(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0x6509BC", Offset = "0x6509BC", VA = "0x6509BC")]
		public Vector3 GetPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0x650A50", Offset = "0x650A50", VA = "0x650A50")]
		public Color32 GetColor(int index)
		{
			return default(Color32);
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0x650AE0", Offset = "0x650AE0", VA = "0x650AE0")]
		public Vector3 GetNormal(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0x650B74", Offset = "0x650B74", VA = "0x650B74")]
		public Transform GetParent(int index)
		{
			return null;
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0x650C04", Offset = "0x650C04", VA = "0x650C04")]
		public Quaternion GetRotation(int index)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0x650C98", Offset = "0x650C98", VA = "0x650C98")]
		public void Update()
		{
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0x650D98", Offset = "0x650D98", VA = "0x650D98")]
		public void Update(int thisPosition)
		{
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0x650F6C", Offset = "0x650F6C", VA = "0x650F6C")]
		public void RemoveNonParented()
		{
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0x651094", Offset = "0x651094", VA = "0x651094")]
		public bool RemoveNonParented(int thisPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0x65118C", Offset = "0x65118C", VA = "0x65118C")]
		public void ClearPaint()
		{
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0x6511F8", Offset = "0x6511F8", VA = "0x6511F8")]
		public PaintObjectC Clone()
		{
			return null;
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0x6513E0", Offset = "0x6513E0", VA = "0x6513E0")]
		public PaintObjectC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002DF")]
	public class PaintPositionC
	{
		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 position;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color32 color;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform parent;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 initialPosition;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 initialNormal;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Quaternion parentRotation;

		[Token(Token = "0x600164E")]
		[Address(RVA = "0x5C6180", Offset = "0x5C6180", VA = "0x5C6180")]
		public PaintPositionC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E0")]
	public class PlaygroundBrushC
	{
		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D texture;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float scale;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public BRUSHDETAILC detail;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float distance;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Color32[] color;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public int colorLength;

		[Token(Token = "0x600164F")]
		[Address(RVA = "0x5CAC0C", Offset = "0x5CAC0C", VA = "0x5CAC0C")]
		public void SetTexture(Texture2D newTexture)
		{
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0x5CAC14", Offset = "0x5CAC14", VA = "0x5CAC14")]
		public void Construct()
		{
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0x5CAC90", Offset = "0x5CAC90", VA = "0x5CAC90")]
		public Color32 GetColor(int index)
		{
			return default(Color32);
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0x5CACEC", Offset = "0x5CACEC", VA = "0x5CACEC")]
		public void SetColor(Color32 c, int index)
		{
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0x5CAD4C", Offset = "0x5CAD4C", VA = "0x5CAD4C")]
		public PlaygroundBrushC Clone()
		{
			return null;
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0x5CAE7C", Offset = "0x5CAE7C", VA = "0x5CAE7C")]
		public PlaygroundBrushC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E1")]
	public class ParticleStateC
	{
		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Color32[] color;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3[] position;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3[] normals;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture2D stateTexture;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture2D stateDepthmap;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float stateDepthmapStrength;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Mesh stateMesh;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string stateName;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float stateScale;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 stateOffset;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform stateTransform;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Matrix4x4 stateTransformMx;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public ScaleMethod stateScaleMethod;

		[NonSerialized]
		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public bool initialized;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public int colorLength;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[HideInInspector]
		public int positionLength;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public bool applyChromaKey;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[HideInInspector]
		public Color32 chromaKey;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public float chromaKeySpread;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool isInitializing;

		[Token(Token = "0x6001655")]
		[Address(RVA = "0x5C8CFC", Offset = "0x5C8CFC", VA = "0x5C8CFC")]
		public bool IsInitializing()
		{
			return default(bool);
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0x5C8D04", Offset = "0x5C8D04", VA = "0x5C8D04")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0x5C9DB0", Offset = "0x5C9DB0", VA = "0x5C9DB0")]
		public void UpdateMatrix(bool isLocal)
		{
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0x5C8F4C", Offset = "0x5C8F4C", VA = "0x5C8F4C")]
		public void ConstructParticles(Texture2D image, float scale, Vector3 offset, string newStateName, Transform newStateTransform)
		{
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0x5C9810", Offset = "0x5C9810", VA = "0x5C9810")]
		public void ConstructParticles(Mesh mesh, Texture2D texture, float scale, Vector3 offset, string newStateName, Transform newStateTransform)
		{
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0x5C9B50", Offset = "0x5C9B50", VA = "0x5C9B50")]
		public void ConstructParticles(Mesh mesh, float scale, Vector3 offset, string newStateName, Transform newStateTransform)
		{
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0x5C9F50", Offset = "0x5C9F50", VA = "0x5C9F50")]
		public Color32 GetColor(int index)
		{
			return default(Color32);
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0x5C9FB8", Offset = "0x5C9FB8", VA = "0x5C9FB8")]
		public Vector3 GetPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0x5CA0D0", Offset = "0x5CA0D0", VA = "0x5CA0D0")]
		public Vector3 GetLocalPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0x5CA1F8", Offset = "0x5CA1F8", VA = "0x5CA1F8")]
		public Vector3 GetNormal(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0x5CA270", Offset = "0x5CA270", VA = "0x5CA270")]
		public Vector3 GetLocalNormal(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0x5CA300", Offset = "0x5CA300", VA = "0x5CA300")]
		public Color32[] GetColors()
		{
			return null;
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0x5CA368", Offset = "0x5CA368", VA = "0x5CA368")]
		public Vector3[] GetPositions()
		{
			return null;
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0x5CA3D0", Offset = "0x5CA3D0", VA = "0x5CA3D0")]
		public Vector3[] GetNormals()
		{
			return null;
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0x5CA438", Offset = "0x5CA438", VA = "0x5CA438")]
		public void SetColor(int index, Color32 c)
		{
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0x5CA498", Offset = "0x5CA498", VA = "0x5CA498")]
		public void SetPosition(int index, Vector3 v)
		{
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0x5CA510", Offset = "0x5CA510", VA = "0x5CA510")]
		public void SetNormal(int index, Vector3 v)
		{
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0x5CA588", Offset = "0x5CA588", VA = "0x5CA588")]
		public Vector3 GetParentedPosition(int thisPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0x5CA6BC", Offset = "0x5CA6BC", VA = "0x5CA6BC")]
		public ParticleStateC Clone()
		{
			return null;
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0x5CA894", Offset = "0x5CA894", VA = "0x5CA894")]
		public ParticleStateC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E2")]
	public class ParticleProjectionC
	{
		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		private Color32[] sourceColors;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		private Vector3[] sourcePositions;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		private Vector3[] targetPositions;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		private Vector3[] targetNormals;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		private bool[] hasProjected;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		private Transform[] targetParents;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Texture2D projectionTexture;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector2 projectionOrigin;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform projectionTransform;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Matrix4x4 projectionMatrix;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Vector3 projectionPosition;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public Vector3 projectionDirection;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Quaternion projectionRotation;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float projectionDistance;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float projectionScale;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public LayerMask projectionMask;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public COLLISIONTYPEC collisionType;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float minDepth;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float maxDepth;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float surfaceOffset;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public bool liveUpdate;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		public bool hasRefreshed;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDE")]
		[HideInInspector]
		public bool initialized;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public int colorLength;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[HideInInspector]
		public int positionLength;

		[Token(Token = "0x6001669")]
		[Address(RVA = "0x5C7478", Offset = "0x5C7478", VA = "0x5C7478")]
		public void Initialize()
		{
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0x5C7540", Offset = "0x5C7540", VA = "0x5C7540")]
		public void Construct(Texture2D image, Transform transform)
		{
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0x5C7934", Offset = "0x5C7934", VA = "0x5C7934")]
		public void UpdateSource()
		{
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0x5C7A4C", Offset = "0x5C7A4C", VA = "0x5C7A4C")]
		public void Update()
		{
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0x5C7D50", Offset = "0x5C7D50", VA = "0x5C7D50")]
		public void Update(int index)
		{
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0x5C8450", Offset = "0x5C8450", VA = "0x5C8450")]
		public Color32 GetColor(int index)
		{
			return default(Color32);
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0x5C84AC", Offset = "0x5C84AC", VA = "0x5C84AC")]
		public Vector3 GetPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0x5C8510", Offset = "0x5C8510", VA = "0x5C8510")]
		public Vector3 GetNormal(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0x5C8574", Offset = "0x5C8574", VA = "0x5C8574")]
		public Transform GetParent(int index)
		{
			return null;
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0x5C85D0", Offset = "0x5C85D0", VA = "0x5C85D0")]
		public bool HasProjection(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0x5C862C", Offset = "0x5C862C", VA = "0x5C862C")]
		public ParticleProjectionC Clone()
		{
			return null;
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0x5C8CA4", Offset = "0x5C8CA4", VA = "0x5C8CA4")]
		public ParticleProjectionC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E3")]
	public class Vector3AnimationCurveC
	{
		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve x;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve y;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve z;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float xRepeat;

		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float yRepeat;

		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float zRepeat;

		[Token(Token = "0x6001675")]
		[Address(RVA = "0x706EC0", Offset = "0x706EC0", VA = "0x706EC0")]
		public Vector3 Evaluate(float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0x706EC8", Offset = "0x706EC8", VA = "0x706EC8")]
		public Vector3 Evaluate(float time, float scale)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0x707010", Offset = "0x707010", VA = "0x707010")]
		public bool HasKeys()
		{
			return default(bool);
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0x707184", Offset = "0x707184", VA = "0x707184")]
		public void SetKeyValues(int key, float value)
		{
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0x7071E4", Offset = "0x7071E4", VA = "0x7071E4")]
		public void SetKeyValues(int key, Vector3 value, float inTangent, float outTangent)
		{
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0x70757C", Offset = "0x70757C", VA = "0x70757C")]
		public void Reset()
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0x7076B0", Offset = "0x7076B0", VA = "0x7076B0")]
		public void Reset1()
		{
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0x707840", Offset = "0x707840", VA = "0x707840")]
		public void ResetWithMidKey()
		{
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0x7070CC", Offset = "0x7070CC", VA = "0x7070CC")]
		public void CheckNull()
		{
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0x7079A0", Offset = "0x7079A0", VA = "0x7079A0")]
		public Vector3AnimationCurveC Clone()
		{
			return null;
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0x707B0C", Offset = "0x707B0C", VA = "0x707B0C")]
		public Vector3AnimationCurveC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E4")]
	public class WorldObjectBaseC
	{
		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject gameObject;

		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Transform transform;

		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Rigidbody rigidbody;

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public MeshFilter meshFilter;

		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public Mesh mesh;

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Vector3[] vertexPositions;

		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Vector3[] normals;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public bool updateNormals;

		[NonSerialized]
		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int cachedId;

		[NonSerialized]
		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool initialized;

		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public Matrix4x4 transformMatrix;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[HideInInspector]
		public ScaleMethod scaleMethod;

		[Token(Token = "0x6001680")]
		[Address(RVA = "0x707EE8", Offset = "0x707EE8", VA = "0x707EE8")]
		public void UpdateMatrix(bool isLocal)
		{
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0x706D54", Offset = "0x706D54", VA = "0x706D54")]
		public WorldObjectBaseC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E5")]
	public class WorldObject : WorldObjectBaseC
	{
		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public Renderer renderer;

		[Token(Token = "0x6001682")]
		[Address(RVA = "0x707B24", Offset = "0x707B24", VA = "0x707B24")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0x707CF8", Offset = "0x707CF8", VA = "0x707CF8")]
		public void Update()
		{
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0x707DB8", Offset = "0x707DB8", VA = "0x707DB8")]
		public WorldObject Clone()
		{
			return null;
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0x707EE0", Offset = "0x707EE0", VA = "0x707EE0")]
		public WorldObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E6")]
	public class SkinnedWorldObject : WorldObjectBaseC
	{
		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int downResolution;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public SkinnedMeshRenderer renderer;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Transform[] boneTransforms;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private BoneWeight[] weights;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Matrix4x4[] bindPoses;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Matrix4x4[] boneMatrices;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3[] vertices;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Vector3[] localVertices;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		public bool isDoneThread;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Mesh bakedMesh;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Matrix4x4 vertexMatrix;

		[Token(Token = "0x6001686")]
		[Address(RVA = "0x705F30", Offset = "0x705F30", VA = "0x705F30")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0x7066BC", Offset = "0x7066BC", VA = "0x7066BC")]
		public void MeshUpdate()
		{
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0x706738", Offset = "0x706738", VA = "0x706738")]
		public void BoneUpdate()
		{
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0x7061B0", Offset = "0x7061B0", VA = "0x7061B0")]
		public void Update()
		{
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0x706B48", Offset = "0x706B48", VA = "0x706B48")]
		public void UpdateOnNewThread()
		{
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0x706BF4", Offset = "0x706BF4", VA = "0x706BF4")]
		public SkinnedWorldObject Clone()
		{
			return null;
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0x706D40", Offset = "0x706D40", VA = "0x706D40")]
		public SkinnedWorldObject()
		{
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0x706D5C", Offset = "0x706D5C", VA = "0x706D5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B6284", Offset = "0x4B6284")]
		private void <UpdateOnNewThread>b__15_0()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E7")]
	public class ManipulatorObjectC
	{
		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MANIPULATORTYPEC type;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ManipulatorPropertyC property;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<ManipulatorPropertyC> properties;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LayerMask affects;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PlaygroundTransformC transform;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MANIPULATORSHAPEC shape;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float size;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Bounds bounds;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float strength;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float strengthSmoothing;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float strengthDistanceEffect;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool applyParticleLifetimeStrength;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimationCurve particleLifetimeStrength;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool enabled;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool inverseBounds;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int manipulatorId;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool applyLifetimeFilter;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float lifetimeFilterMinimum;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float lifetimeFilterMaximum;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool applyParticleFilter;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float particleFilterMinimum;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float particleFilterMaximum;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public PlaygroundAxisConstraintsC axisConstraints;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool unfolded;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool trackParticles;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public TrackingMethod trackingMethod;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool sendEventEnter;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		public bool sendEventExit;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		public bool sendEventBirth;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
		public bool sendEventDeath;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public bool sendEventCollision;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
		public bool sendEventsUnfolded;

		[NonSerialized]
		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public List<ManipulatorParticle> particles;

		[NonSerialized]
		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public List<ManipulatorParticle> nonAffectedParticles;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public PlaygroundEventParticle manipulatorEventParticle;

		[NonSerialized]
		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool initializedEventEnter;

		[NonSerialized]
		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
		private bool initializedEventExit;

		[NonSerialized]
		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEA")]
		private bool initializedEventBirth;

		[NonSerialized]
		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEB")]
		private bool initializedEventDeath;

		[NonSerialized]
		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private bool initializedEventCollision;

		[Token(Token = "0x1400002F")]
		public event OnPlaygroundParticle particleEventEnter
		{
			[Token(Token = "0x600168E")]
			[Address(RVA = "0x649ECC", Offset = "0x649ECC", VA = "0x649ECC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B6294", Offset = "0x4B6294")]
			add
			{
			}
			[Token(Token = "0x600168F")]
			[Address(RVA = "0x649FB8", Offset = "0x649FB8", VA = "0x649FB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B62A4", Offset = "0x4B62A4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000030")]
		public event OnPlaygroundParticle particleEventExit
		{
			[Token(Token = "0x6001690")]
			[Address(RVA = "0x64A0A4", Offset = "0x64A0A4", VA = "0x64A0A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B62B4", Offset = "0x4B62B4")]
			add
			{
			}
			[Token(Token = "0x6001691")]
			[Address(RVA = "0x64A190", Offset = "0x64A190", VA = "0x64A190")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B62C4", Offset = "0x4B62C4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000031")]
		public event OnPlaygroundParticle particleEventBirth
		{
			[Token(Token = "0x6001692")]
			[Address(RVA = "0x64A27C", Offset = "0x64A27C", VA = "0x64A27C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B62D4", Offset = "0x4B62D4")]
			add
			{
			}
			[Token(Token = "0x6001693")]
			[Address(RVA = "0x64A368", Offset = "0x64A368", VA = "0x64A368")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B62E4", Offset = "0x4B62E4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000032")]
		public event OnPlaygroundParticle particleEventDeath
		{
			[Token(Token = "0x6001694")]
			[Address(RVA = "0x64A454", Offset = "0x64A454", VA = "0x64A454")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B62F4", Offset = "0x4B62F4")]
			add
			{
			}
			[Token(Token = "0x6001695")]
			[Address(RVA = "0x64A540", Offset = "0x64A540", VA = "0x64A540")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B6304", Offset = "0x4B6304")]
			remove
			{
			}
		}

		[Token(Token = "0x14000033")]
		public event OnPlaygroundParticle particleEventCollision
		{
			[Token(Token = "0x6001696")]
			[Address(RVA = "0x64A62C", Offset = "0x64A62C", VA = "0x64A62C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B6314", Offset = "0x4B6314")]
			add
			{
			}
			[Token(Token = "0x6001697")]
			[Address(RVA = "0x64A718", Offset = "0x64A718", VA = "0x64A718")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B6324", Offset = "0x4B6324")]
			remove
			{
			}
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0x64A804", Offset = "0x64A804", VA = "0x64A804")]
		public bool Contains(Vector3 position, Vector3 mPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0x64AAA8", Offset = "0x64AAA8", VA = "0x64AAA8")]
		public void SendParticleEventEnter()
		{
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0x64B21C", Offset = "0x64B21C", VA = "0x64B21C")]
		public void SendParticleEventExit()
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0x64B25C", Offset = "0x64B25C", VA = "0x64B25C")]
		public void SendParticleEventBirth()
		{
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0x64B29C", Offset = "0x64B29C", VA = "0x64B29C")]
		public void SendParticleEventDeath()
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0x64B2DC", Offset = "0x64B2DC", VA = "0x64B2DC")]
		public void SendParticleEventCollision()
		{
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0x64B31C", Offset = "0x64B31C", VA = "0x64B31C")]
		public PlaygroundEventParticle GetParticle(int index)
		{
			return null;
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0x64B434", Offset = "0x64B434", VA = "0x64B434")]
		public PlaygroundEventParticle GetParticle(int particleSystemId, int particleId)
		{
			return null;
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0x64B524", Offset = "0x64B524", VA = "0x64B524")]
		public List<PlaygroundEventParticle> GetParticles()
		{
			return null;
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0x64B71C", Offset = "0x64B71C", VA = "0x64B71C")]
		public bool ContainsParticle(int particleSystemId, int particleId)
		{
			return default(bool);
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0x64B898", Offset = "0x64B898", VA = "0x64B898")]
		public bool IsSameId(int compareId)
		{
			return default(bool);
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0x64B8A8", Offset = "0x64B8A8", VA = "0x64B8A8")]
		public bool AddParticle(int particleSystemId, int particleId)
		{
			return default(bool);
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0x64BAC4", Offset = "0x64BAC4", VA = "0x64BAC4")]
		public bool RemoveParticle(int particleSystemId, int particleId)
		{
			return default(bool);
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0x64BCC8", Offset = "0x64BCC8", VA = "0x64BCC8")]
		public void KillAllParticles()
		{
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0x64BEA0", Offset = "0x64BEA0", VA = "0x64BEA0")]
		public bool ContainsNonAffectedParticle(int particleSystemId, int particleId)
		{
			return default(bool);
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0x64BFBC", Offset = "0x64BFBC", VA = "0x64BFBC")]
		public void AddNonAffectedParticle(int particleSystemId, int particleId)
		{
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0x64C050", Offset = "0x64C050", VA = "0x64C050")]
		public bool RemoveNonAffectedParticle(int particleSystemId, int particleId)
		{
			return default(bool);
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0x64C194", Offset = "0x64C194", VA = "0x64C194")]
		public bool LifetimeFilter(float life, float total)
		{
			return default(bool);
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0x64C1CC", Offset = "0x64C1CC", VA = "0x64C1CC")]
		public bool ParticleFilter(int p, int total)
		{
			return default(bool);
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0x64C20C", Offset = "0x64C20C", VA = "0x64C20C")]
		public void Update()
		{
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0x64CF9C", Offset = "0x64CF9C", VA = "0x64CF9C")]
		public void SetTransform(Transform transform)
		{
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0x64CFD4", Offset = "0x64CFD4", VA = "0x64CFD4")]
		public void SetLocalTargetsPosition(Transform otherTransform)
		{
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0x64D18C", Offset = "0x64D18C", VA = "0x64D18C")]
		public ManipulatorObjectC Clone()
		{
			return null;
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0x64D438", Offset = "0x64D438", VA = "0x64D438")]
		public ManipulatorObjectC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E8")]
	public class ManipulatorPropertyC
	{
		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MANIPULATORPROPERTYTYPEC type;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public MANIPULATORPROPERTYTRANSITIONC transition;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MathManipulatorProperty mathProperty;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 velocity;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 localVelocity;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color color;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Gradient lifetimeColor;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float size;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<PlaygroundTransformC> targets;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int targetPointer;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public WorldObject meshTarget;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SkinnedWorldObject skinnedMeshTarget;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool meshTargetIsProcedural;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Matrix4x4 meshTargetMatrix;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public ParticleStateC stateTarget;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public PlaygroundSpline splineTarget;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public SPLINETARGETMETHOD splineTargetMethod;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float splineTimeOffset;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool splineTargetIsReady;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		public bool useLocalRotation;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
		public bool onlyColorInRange;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDB")]
		public bool keepColorAlphas;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public bool onlyPositionInRange;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		public bool onlySizeInRange;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float zeroVelocityStrength;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public float strength;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public bool unfolded;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public TARGETSORTINGC targetSorting;

		[NonSerialized]
		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public int[] targetSortingList;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private TARGETSORTINGC previousTargetSorting;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public TURBULENCETYPE turbulenceType;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public float turbulenceTimeScale;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public float turbulenceScale;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public bool turbulenceApplyLifetimeStrength;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public AnimationCurve turbulenceLifetimeStrength;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public SimplexNoise turbulenceSimplex;

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0x64C5F8", Offset = "0x64C5F8", VA = "0x64C5F8")]
		public void Update()
		{
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0x64CF00", Offset = "0x64CF00", VA = "0x64CF00")]
		public void UpdateMathProperty(Vector3 manipulatorPosition)
		{
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0x64DB6C", Offset = "0x64DB6C", VA = "0x64DB6C")]
		public void UpdateMeshTarget()
		{
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0x64DE64", Offset = "0x64DE64", VA = "0x64DE64")]
		public void UpdateSkinnedMeshTarget()
		{
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0x64DFE4", Offset = "0x64DFE4", VA = "0x64DFE4")]
		public void SetMeshTarget(GameObject gameObject)
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0x64E014", Offset = "0x64E014", VA = "0x64E014")]
		public void SetSkinnedMeshTarget(GameObject gameObject)
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0x64E044", Offset = "0x64E044", VA = "0x64E044")]
		public bool SplineTargetIsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0x64DB9C", Offset = "0x64DB9C", VA = "0x64DB9C")]
		public void TargetSorting()
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0x64CE38", Offset = "0x64CE38", VA = "0x64CE38")]
		public void SetLocalVelocity(Quaternion rotation, Vector3 newVelocity)
		{
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0x64D0BC", Offset = "0x64D0BC", VA = "0x64D0BC")]
		public void SetLocalTargetsPosition(Transform otherTransform)
		{
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0x64E04C", Offset = "0x64E04C", VA = "0x64E04C")]
		public bool UpdateTarget(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0x64D69C", Offset = "0x64D69C", VA = "0x64D69C")]
		public ManipulatorPropertyC Clone()
		{
			return null;
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0x64DA00", Offset = "0x64DA00", VA = "0x64DA00")]
		public ManipulatorPropertyC()
		{
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0x64E160", Offset = "0x64E160", VA = "0x64E160")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B6334", Offset = "0x4B6334")]
		private void <Update>b__36_0()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E9")]
	public class MathManipulatorProperty
	{
		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MATHMANIPULATORTYPE type;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public MATHMANIPULATORPROPERTY property;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MATHMANIPULATORCLAMP clamp;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float clampCeil;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float clampFloor;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float value;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 value3;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float rate;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 rate3;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 value3Position;

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0x64DF30", Offset = "0x64DF30", VA = "0x64DF30")]
		public void Update(Vector3 position)
		{
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0x64E190", Offset = "0x64E190", VA = "0x64E190")]
		public Vector3 Evaluate(Vector3 inValue, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0x64E898", Offset = "0x64E898", VA = "0x64E898")]
		public Vector3 EvaluatePosition(Vector3 inValue, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0x64ED18", Offset = "0x64ED18", VA = "0x64ED18")]
		public float Evaluate(float inValue, float time)
		{
			return default(float);
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0x64EF08", Offset = "0x64EF08", VA = "0x64EF08")]
		private float Clamp(float val)
		{
			return default(float);
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0x64E75C", Offset = "0x64E75C", VA = "0x64E75C")]
		private Vector3 Clamp(Vector3 val)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0x64EBF4", Offset = "0x64EBF4", VA = "0x64EBF4")]
		private Vector3 ClampPosition(Vector3 val)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0x64E864", Offset = "0x64E864", VA = "0x64E864")]
		private float ClampOut(float val)
		{
			return default(float);
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0x64E878", Offset = "0x64E878", VA = "0x64E878")]
		private Vector3 ClampOut(Vector3 val)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0x64EFB0", Offset = "0x64EFB0", VA = "0x64EFB0")]
		public MathManipulatorProperty Clone()
		{
			return null;
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0x64DE94", Offset = "0x64DE94", VA = "0x64DE94")]
		public MathManipulatorProperty()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002EA")]
	public class ManipulatorParticle
	{
		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int particleSystemId;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int particleId;

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0x64BA8C", Offset = "0x64BA8C", VA = "0x64BA8C")]
		public ManipulatorParticle(int setParticleSystemId, int setParticleId)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002EB")]
	public class PlaygroundTransformC
	{
		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int instanceID;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool available;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 position;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 localPosition;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 previousPosition;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 forward;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 up;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 right;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Quaternion rotation;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Quaternion inverseRotation;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public ScaleMethod scaleMethod;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Vector3 localScale;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Vector3 lossyScale;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public Matrix4x4 transformMatrix;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public bool unfolded;

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0x70055C", Offset = "0x70055C", VA = "0x70055C")]
		public bool Update()
		{
			return default(bool);
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0x700724", Offset = "0x700724", VA = "0x700724")]
		public void UpdateMatrix()
		{
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0x7007A0", Offset = "0x7007A0", VA = "0x7007A0")]
		public bool IsSameAs(Transform comparer)
		{
			return default(bool);
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0x70081C", Offset = "0x70081C", VA = "0x70081C")]
		public void SetZeroRotation()
		{
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0x6FD098", Offset = "0x6FD098", VA = "0x6FD098")]
		public void SetFromTransform(Transform otherTransform)
		{
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0x6FCEA8", Offset = "0x6FCEA8", VA = "0x6FCEA8")]
		public void GetFromTransform(Transform otherTransform)
		{
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0x70088C", Offset = "0x70088C", VA = "0x70088C")]
		public void SetLocalPosition(Transform otherTransform)
		{
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0x700920", Offset = "0x700920", VA = "0x700920")]
		public void SetPostitionAsLocal()
		{
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0x700934", Offset = "0x700934", VA = "0x700934")]
		public int GetInstanceID()
		{
			return default(int);
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0x70093C", Offset = "0x70093C", VA = "0x70093C")]
		public PlaygroundTransformC Clone()
		{
			return null;
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0x6FD090", Offset = "0x6FD090", VA = "0x6FD090")]
		public PlaygroundTransformC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002EC")]
	public class PlaygroundColliderC
	{
		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enabled;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform transform;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Plane plane;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 offset;

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0x5E83F8", Offset = "0x5E83F8", VA = "0x5E83F8")]
		public void UpdatePlane()
		{
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0x5E8570", Offset = "0x5E8570", VA = "0x5E8570")]
		public PlaygroundColliderC Clone()
		{
			return null;
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0x5CE7DC", Offset = "0x5CE7DC", VA = "0x5CE7DC")]
		public PlaygroundColliderC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002ED")]
	public class PlaygroundAxisConstraintsC
	{
		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool x;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool y;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool z;

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0x5CAB28", Offset = "0x5CAB28", VA = "0x5CAB28")]
		public bool HasConstraints()
		{
			return default(bool);
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0x5CAB50", Offset = "0x5CAB50", VA = "0x5CAB50")]
		public PlaygroundAxisConstraintsC Clone()
		{
			return null;
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0x5CAC04", Offset = "0x5CAC04", VA = "0x5CAC04")]
		public PlaygroundAxisConstraintsC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002EE")]
	public class PlaygroundGradientC
	{
		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Gradient gradient;

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0x5EAEA0", Offset = "0x5EAEA0", VA = "0x5EAEA0")]
		public void CopyTo(PlaygroundGradientC copy)
		{
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0x5EAF34", Offset = "0x5EAF34", VA = "0x5EAF34")]
		public PlaygroundGradientC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002EF")]
	public class PlaygroundEventC
	{
		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enabled;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool sendToManager;

		[NonSerialized]
		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool initializedTarget;

		[NonSerialized]
		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool initializedEvent;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlaygroundParticlesC target;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EVENTBROADCASTC broadcastType;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public EVENTTYPEC eventType;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public EVENTINHERITANCEC eventInheritancePosition;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public EVENTINHERITANCEC eventInheritanceVelocity;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public EVENTINHERITANCEC eventInheritanceColor;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 eventPosition;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 eventVelocity;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Color32 eventColor;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float eventTime;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float collisionThreshold;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float velocityMultiplier;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float timer;

		[Token(Token = "0x14000034")]
		public event OnPlaygroundParticle particleEvent
		{
			[Token(Token = "0x60016DD")]
			[Address(RVA = "0x5E89A8", Offset = "0x5E89A8", VA = "0x5E89A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B6344", Offset = "0x4B6344")]
			add
			{
			}
			[Token(Token = "0x60016DE")]
			[Address(RVA = "0x5E8A94", Offset = "0x5E8A94", VA = "0x5E8A94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B6354", Offset = "0x4B6354")]
			remove
			{
			}
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0x5E8B80", Offset = "0x5E8B80", VA = "0x5E8B80")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0x5E8CA4", Offset = "0x5E8CA4", VA = "0x5E8CA4")]
		public bool UpdateTime()
		{
			return default(bool);
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0x5E8D38", Offset = "0x5E8D38", VA = "0x5E8D38")]
		public void SetTimer(float newTime)
		{
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0x5E8D40", Offset = "0x5E8D40", VA = "0x5E8D40")]
		public void SendParticleEvent(PlaygroundEventParticle eventParticle)
		{
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0x5E8D8C", Offset = "0x5E8D8C", VA = "0x5E8D8C")]
		public PlaygroundEventC Clone()
		{
			return null;
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0x5D1D10", Offset = "0x5D1D10", VA = "0x5D1D10")]
		public PlaygroundEventC()
		{
		}
	}
	[Token(Token = "0x20002F0")]
	public enum MANIPULATORTYPEC
	{
		[Token(Token = "0x400126C")]
		None,
		[Token(Token = "0x400126D")]
		Attractor,
		[Token(Token = "0x400126E")]
		AttractorGravitational,
		[Token(Token = "0x400126F")]
		Repellent,
		[Token(Token = "0x4001270")]
		Property,
		[Token(Token = "0x4001271")]
		Combined,
		[Token(Token = "0x4001272")]
		Vortex
	}
	[Token(Token = "0x20002F1")]
	public enum MANIPULATORPROPERTYTYPEC
	{
		[Token(Token = "0x4001274")]
		None,
		[Token(Token = "0x4001275")]
		Color,
		[Token(Token = "0x4001276")]
		Velocity,
		[Token(Token = "0x4001277")]
		AdditiveVelocity,
		[Token(Token = "0x4001278")]
		Size,
		[Token(Token = "0x4001279")]
		Target,
		[Token(Token = "0x400127A")]
		Death,
		[Token(Token = "0x400127B")]
		Attractor,
		[Token(Token = "0x400127C")]
		Gravitational,
		[Token(Token = "0x400127D")]
		Repellent,
		[Token(Token = "0x400127E")]
		LifetimeColor,
		[Token(Token = "0x400127F")]
		Vortex,
		[Token(Token = "0x4001280")]
		MeshTarget,
		[Token(Token = "0x4001281")]
		SkinnedMeshTarget,
		[Token(Token = "0x4001282")]
		Turbulence,
		[Token(Token = "0x4001283")]
		StateTarget,
		[Token(Token = "0x4001284")]
		SplineTarget,
		[Token(Token = "0x4001285")]
		Math
	}
	[Token(Token = "0x20002F2")]
	public enum MATHMANIPULATORTYPE
	{
		[Token(Token = "0x4001287")]
		Sin,
		[Token(Token = "0x4001288")]
		Cos,
		[Token(Token = "0x4001289")]
		Lerp,
		[Token(Token = "0x400128A")]
		Add,
		[Token(Token = "0x400128B")]
		Subtract
	}
	[Token(Token = "0x20002F3")]
	public enum MATHMANIPULATORPROPERTY
	{
		[Token(Token = "0x400128D")]
		Size,
		[Token(Token = "0x400128E")]
		Rotation,
		[Token(Token = "0x400128F")]
		Velocity,
		[Token(Token = "0x4001290")]
		Position
	}
	[Token(Token = "0x20002F4")]
	public enum MATHMANIPULATORCLAMP
	{
		[Token(Token = "0x4001292")]
		None,
		[Token(Token = "0x4001293")]
		ClampInValue,
		[Token(Token = "0x4001294")]
		ClampOutValue
	}
	[Token(Token = "0x20002F5")]
	public enum MANIPULATORPROPERTYTRANSITIONC
	{
		[Token(Token = "0x4001296")]
		None,
		[Token(Token = "0x4001297")]
		Lerp,
		[Token(Token = "0x4001298")]
		Linear
	}
	[Token(Token = "0x20002F6")]
	public enum MANIPULATORSHAPEC
	{
		[Token(Token = "0x400129A")]
		Sphere,
		[Token(Token = "0x400129B")]
		Box,
		[Token(Token = "0x400129C")]
		Infinite
	}
	[Token(Token = "0x20002F7")]
	public enum PLAYGROUNDORIGINC
	{
		[Token(Token = "0x400129E")]
		TopLeft,
		[Token(Token = "0x400129F")]
		TopCenter,
		[Token(Token = "0x40012A0")]
		TopRight,
		[Token(Token = "0x40012A1")]
		MiddleLeft,
		[Token(Token = "0x40012A2")]
		MiddleCenter,
		[Token(Token = "0x40012A3")]
		MiddleRight,
		[Token(Token = "0x40012A4")]
		BottomLeft,
		[Token(Token = "0x40012A5")]
		BottomCenter,
		[Token(Token = "0x40012A6")]
		BottomRight
	}
	[Token(Token = "0x20002F8")]
	public enum PIXELMODEC
	{
		[Token(Token = "0x40012A8")]
		Bilinear,
		[Token(Token = "0x40012A9")]
		Pixel32
	}
	[Token(Token = "0x20002F9")]
	public enum COLORSOURCEC
	{
		[Token(Token = "0x40012AB")]
		Source,
		[Token(Token = "0x40012AC")]
		LifetimeColor,
		[Token(Token = "0x40012AD")]
		LifetimeColors
	}
	[Token(Token = "0x20002FA")]
	public enum COLORMETHOD
	{
		[Token(Token = "0x40012AF")]
		Lifetime,
		[Token(Token = "0x40012B0")]
		ParticleArray
	}
	[Token(Token = "0x20002FB")]
	public enum OVERFLOWMODEC
	{
		[Token(Token = "0x40012B2")]
		SourceTransform,
		[Token(Token = "0x40012B3")]
		World,
		[Token(Token = "0x40012B4")]
		SourcePoint
	}
	[Token(Token = "0x20002FC")]
	public enum TRANSITIONTYPEC
	{
		[Token(Token = "0x40012B6")]
		Linear,
		[Token(Token = "0x40012B7")]
		EaseIn,
		[Token(Token = "0x40012B8")]
		EaseOut
	}
	[Token(Token = "0x20002FD")]
	public enum INDIVIDUALTRANSITIONTYPEC
	{
		[Token(Token = "0x40012BA")]
		Inherit,
		[Token(Token = "0x40012BB")]
		Linear,
		[Token(Token = "0x40012BC")]
		EaseIn,
		[Token(Token = "0x40012BD")]
		EaseOut
	}
	[Token(Token = "0x20002FE")]
	public enum LERPTYPEC
	{
		[Token(Token = "0x40012BF")]
		PositionColor,
		[Token(Token = "0x40012C0")]
		Position,
		[Token(Token = "0x40012C1")]
		Color
	}
	[Token(Token = "0x20002FF")]
	public enum SOURCEC
	{
		[Token(Token = "0x40012C3")]
		State,
		[Token(Token = "0x40012C4")]
		Transform,
		[Token(Token = "0x40012C5")]
		WorldObject,
		[Token(Token = "0x40012C6")]
		SkinnedWorldObject,
		[Token(Token = "0x40012C7")]
		Script,
		[Token(Token = "0x40012C8")]
		Paint,
		[Token(Token = "0x40012C9")]
		Projection,
		[Token(Token = "0x40012CA")]
		Spline
	}
	[Token(Token = "0x2000300")]
	public enum SOURCEBIRTHMETHOD
	{
		[Token(Token = "0x40012CC")]
		BirthPositions,
		[Token(Token = "0x40012CD")]
		ParticlePositions
	}
	[Token(Token = "0x2000301")]
	public enum ScaleMethod
	{
		[Token(Token = "0x40012CF")]
		Local,
		[Token(Token = "0x40012D0")]
		Lossy
	}
	[Token(Token = "0x2000302")]
	public enum SORTINGC
	{
		[Token(Token = "0x40012D2")]
		Scrambled,
		[Token(Token = "0x40012D3")]
		ScrambledLinear,
		[Token(Token = "0x40012D4")]
		Burst,
		[Token(Token = "0x40012D5")]
		Linear,
		[Token(Token = "0x40012D6")]
		Reversed,
		[Token(Token = "0x40012D7")]
		NearestNeighbor,
		[Token(Token = "0x40012D8")]
		NearestNeighborReversed,
		[Token(Token = "0x40012D9")]
		Custom
	}
	[Token(Token = "0x2000303")]
	public enum BRUSHDETAILC
	{
		[Token(Token = "0x40012DB")]
		Perfect,
		[Token(Token = "0x40012DC")]
		High,
		[Token(Token = "0x40012DD")]
		Medium,
		[Token(Token = "0x40012DE")]
		Low
	}
	[Token(Token = "0x2000304")]
	public enum COLLISIONTYPEC
	{
		[Token(Token = "0x40012E0")]
		Physics3D,
		[Token(Token = "0x40012E1")]
		Physics2D
	}
	[Token(Token = "0x2000305")]
	public enum VELOCITYBENDINGTYPEC
	{
		[Token(Token = "0x40012E3")]
		SourcePosition,
		[Token(Token = "0x40012E4")]
		ParticleDeltaPosition
	}
	[Token(Token = "0x2000306")]
	public enum TARGETSORTINGC
	{
		[Token(Token = "0x40012E6")]
		Scrambled,
		[Token(Token = "0x40012E7")]
		Linear,
		[Token(Token = "0x40012E8")]
		Reversed
	}
	[Token(Token = "0x2000307")]
	public enum MASKSORTINGC
	{
		[Token(Token = "0x40012EA")]
		Linear,
		[Token(Token = "0x40012EB")]
		Reversed,
		[Token(Token = "0x40012EC")]
		Scrambled
	}
	[Token(Token = "0x2000308")]
	public enum NEARESTNEIGHBORORIGINMETHOD
	{
		[Token(Token = "0x40012EE")]
		SourcePoint,
		[Token(Token = "0x40012EF")]
		Vector3,
		[Token(Token = "0x40012F0")]
		Transform
	}
	[Token(Token = "0x2000309")]
	public enum SPLINETARGETMETHOD
	{
		[Token(Token = "0x40012F2")]
		SplineTime,
		[Token(Token = "0x40012F3")]
		ParticleTime
	}
	[Token(Token = "0x200030A")]
	public enum MINMAXVECTOR3METHOD
	{
		[Token(Token = "0x40012F5")]
		Rectangular,
		[Token(Token = "0x40012F6")]
		RectangularLinear,
		[Token(Token = "0x40012F7")]
		Spherical,
		[Token(Token = "0x40012F8")]
		SphericalLinear
	}
	[Token(Token = "0x200030B")]
	public enum EVENTTYPEC
	{
		[Token(Token = "0x40012FA")]
		Birth,
		[Token(Token = "0x40012FB")]
		Death,
		[Token(Token = "0x40012FC")]
		Collision,
		[Token(Token = "0x40012FD")]
		Time
	}
	[Token(Token = "0x200030C")]
	public enum EVENTBROADCASTC
	{
		[Token(Token = "0x40012FF")]
		Target,
		[Token(Token = "0x4001300")]
		EventListeners,
		[Token(Token = "0x4001301")]
		Both
	}
	[Token(Token = "0x200030D")]
	public enum EVENTINHERITANCEC
	{
		[Token(Token = "0x4001303")]
		User,
		[Token(Token = "0x4001304")]
		Particle,
		[Token(Token = "0x4001305")]
		Source
	}
	[Token(Token = "0x200030E")]
	public enum TURBULENCETYPE
	{
		[Token(Token = "0x4001307")]
		None,
		[Token(Token = "0x4001308")]
		Simplex,
		[Token(Token = "0x4001309")]
		Perlin
	}
	[Token(Token = "0x200030F")]
	public enum VALUEMETHOD
	{
		[Token(Token = "0x400130B")]
		Constant,
		[Token(Token = "0x400130C")]
		RandomBetweenTwoValues
	}
	[Token(Token = "0x2000310")]
	public enum ONDONE
	{
		[Token(Token = "0x400130E")]
		Inactivate,
		[Token(Token = "0x400130F")]
		Destroy
	}
	[Token(Token = "0x2000311")]
	public enum ThreadPoolMethod
	{
		[Token(Token = "0x4001311")]
		ThreadPool,
		[Token(Token = "0x4001312")]
		PlaygroundPool
	}
	[Token(Token = "0x2000312")]
	public enum ThreadMethod
	{
		[Token(Token = "0x4001314")]
		NoThreads,
		[Token(Token = "0x4001315")]
		OnePerSystem,
		[Token(Token = "0x4001316")]
		OneForAll,
		[Token(Token = "0x4001317")]
		Automatic
	}
	[Token(Token = "0x2000313")]
	public enum ThreadMethodLocal
	{
		[Token(Token = "0x4001319")]
		Inherit,
		[Token(Token = "0x400131A")]
		NoThreads,
		[Token(Token = "0x400131B")]
		OnePerSystem,
		[Token(Token = "0x400131C")]
		OneForAll
	}
	[Token(Token = "0x2000314")]
	public enum ThreadMethodComponent
	{
		[Token(Token = "0x400131E")]
		InsideParticleCalculation,
		[Token(Token = "0x400131F")]
		OnePerSystem,
		[Token(Token = "0x4001320")]
		OneForAll
	}
	[Token(Token = "0x2000315")]
	public enum TrackingMethod
	{
		[Token(Token = "0x4001322")]
		ManipulatorId,
		[Token(Token = "0x4001323")]
		ParticleId
	}
	[Token(Token = "0x2000316")]
	public static class AnimationCurveExtensions
	{
		[Token(Token = "0x60016E5")]
		[Address(RVA = "0x648DF0", Offset = "0x648DF0", VA = "0x648DF0")]
		public static void Reset(this AnimationCurve animationCurve)
		{
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0x648EB4", Offset = "0x648EB4", VA = "0x648EB4")]
		public static void Reset1(this AnimationCurve animationCurve)
		{
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0x648FD8", Offset = "0x648FD8", VA = "0x648FD8")]
		public static void Reset01(this AnimationCurve animationCurve)
		{
		}
	}
	[Token(Token = "0x2000317")]
	public delegate void OnPlaygroundParticle(PlaygroundEventParticle particle);
	[Token(Token = "0x2000318")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4A8900", Offset = "0x4A8900")]
	[ExecuteInEditMode]
	public class PlaygroundParticlesC : MonoBehaviour
	{
		[Token(Token = "0x20004D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A94FC", Offset = "0x4A94FC")]
		private sealed class <>c__DisplayClass365_0
		{
			[Token(Token = "0x4001B84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4001B85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public BoneWeight[] weights;

			[Token(Token = "0x4001B86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Matrix4x4[] boneMatrices;

			[Token(Token = "0x4001B87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3[] vertices;

			[Token(Token = "0x4001B88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SkinnedWorldObject particleStateWorldObject;

			[Token(Token = "0x6001F42")]
			[Address(RVA = "0x6F2394", Offset = "0x6F2394", VA = "0x6F2394")]
			public <>c__DisplayClass365_0()
			{
			}

			[Token(Token = "0x6001F43")]
			[Address(RVA = "0x6F239C", Offset = "0x6F239C", VA = "0x6F239C")]
			internal void <GetPosition>b__0()
			{
			}
		}

		[Token(Token = "0x20004D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A950C", Offset = "0x4A950C")]
		private sealed class <>c__DisplayClass384_0
		{
			[Token(Token = "0x4001B89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlaygroundParticlesC playgroundParticles;

			[Token(Token = "0x4001B8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SORTINGC sorting;

			[Token(Token = "0x4001B8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float time;

			[Token(Token = "0x6001F44")]
			[Address(RVA = "0x6F2750", Offset = "0x6F2750", VA = "0x6F2750")]
			public <>c__DisplayClass384_0()
			{
			}

			[Token(Token = "0x6001F45")]
			[Address(RVA = "0x6F2758", Offset = "0x6F2758", VA = "0x6F2758")]
			internal void <SetLifetime>b__0()
			{
			}
		}

		[Token(Token = "0x20004D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A951C", Offset = "0x4A951C")]
		private sealed class <>c__DisplayClass396_0
		{
			[Token(Token = "0x4001B8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlaygroundParticlesC playgroundParticles;

			[Token(Token = "0x4001B8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int amount;

			[Token(Token = "0x6001F46")]
			[Address(RVA = "0x6F2770", Offset = "0x6F2770", VA = "0x6F2770")]
			public <>c__DisplayClass396_0()
			{
			}

			[Token(Token = "0x6001F47")]
			[Address(RVA = "0x6F2778", Offset = "0x6F2778", VA = "0x6F2778")]
			internal void <SetParticleCount>b__0()
			{
			}
		}

		[Token(Token = "0x20004D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A952C", Offset = "0x4A952C")]
		private sealed class <>c__DisplayClass403_0
		{
			[Token(Token = "0x4001B8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlaygroundParticlesC playgroundParticles;

			[Token(Token = "0x4001B8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool callRestEmission;

			[Token(Token = "0x6001F48")]
			[Address(RVA = "0x6F278C", Offset = "0x6F278C", VA = "0x6F278C")]
			public <>c__DisplayClass403_0()
			{
			}

			[Token(Token = "0x6001F49")]
			[Address(RVA = "0x6F2794", Offset = "0x6F2794", VA = "0x6F2794")]
			internal void <Emission>b__0()
			{
			}
		}

		[Token(Token = "0x20004D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A953C", Offset = "0x4A953C")]
		private sealed class <>c__DisplayClass408_0
		{
			[Token(Token = "0x4001B90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlaygroundParticlesC playgroundParticles;

			[Token(Token = "0x6001F4A")]
			[Address(RVA = "0x6F2914", Offset = "0x6F2914", VA = "0x6F2914")]
			public <>c__DisplayClass408_0()
			{
			}

			[Token(Token = "0x6001F4B")]
			[Address(RVA = "0x6F291C", Offset = "0x6F291C", VA = "0x6F291C")]
			internal void <NewCalculatedThread>b__0()
			{
			}
		}

		[Token(Token = "0x20004D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A954C", Offset = "0x4A954C")]
		private sealed class <>c__DisplayClass409_0
		{
			[Token(Token = "0x4001B91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlaygroundParticlesC[] playgroundParticles;

			[Token(Token = "0x6001F4C")]
			[Address(RVA = "0x6F297C", Offset = "0x6F297C", VA = "0x6F297C")]
			public <>c__DisplayClass409_0()
			{
			}

			[Token(Token = "0x6001F4D")]
			[Address(RVA = "0x6F2984", Offset = "0x6F2984", VA = "0x6F2984")]
			internal void <NewCalculatedThread>b__0()
			{
			}
		}

		[Token(Token = "0x20004D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A955C", Offset = "0x4A955C")]
		private sealed class <>c__DisplayClass412_0
		{
			[Token(Token = "0x4001B92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlaygroundParticlesC playgroundParticles;

			[Token(Token = "0x6001F4E")]
			[Address(RVA = "0x6F2B5C", Offset = "0x6F2B5C", VA = "0x6F2B5C")]
			public <>c__DisplayClass412_0()
			{
			}

			[Token(Token = "0x6001F4F")]
			[Address(RVA = "0x6F2B64", Offset = "0x6F2B64", VA = "0x6F2B64")]
			internal void <ThreadedCalculations>b__0()
			{
			}
		}

		[Token(Token = "0x20004D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A956C", Offset = "0x4A956C")]
		private sealed class <SaveAsynchronousRoutine>d__448 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlaygroundParticlesC <>4__this;

			[Token(Token = "0x4001B96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string saveName;

			[Token(Token = "0x4001B97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private PlaygroundSave <data>5__2;

			[Token(Token = "0x1700026A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F53")]
				[Address(RVA = "0x6F7D20", Offset = "0x6F7D20", VA = "0x6F7D20", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700026B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F55")]
				[Address(RVA = "0x6F7D90", Offset = "0x6F7D90", VA = "0x6F7D90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F50")]
			[Address(RVA = "0x6F777C", Offset = "0x6F777C", VA = "0x6F777C")]
			[DebuggerHidden]
			public <SaveAsynchronousRoutine>d__448(int <>1__state)
			{
			}

			[Token(Token = "0x6001F51")]
			[Address(RVA = "0x6F77A8", Offset = "0x6F77A8", VA = "0x6F77A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F52")]
			[Address(RVA = "0x6F77AC", Offset = "0x6F77AC", VA = "0x6F77AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F54")]
			[Address(RVA = "0x6F7D28", Offset = "0x6F7D28", VA = "0x6F7D28", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A957C", Offset = "0x4A957C")]
		private sealed class <LoadRoutine>d__454 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlaygroundParticlesC <>4__this;

			[Token(Token = "0x4001B9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int loadPointer;

			[Token(Token = "0x4001B9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int mask;

			[Token(Token = "0x4001B9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <prevParticleCount>5__2;

			[Token(Token = "0x1700026C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F59")]
				[Address(RVA = "0x6F5BBC", Offset = "0x6F5BBC", VA = "0x6F5BBC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700026D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F5B")]
				[Address(RVA = "0x6F5C2C", Offset = "0x6F5C2C", VA = "0x6F5C2C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F56")]
			[Address(RVA = "0x6F4874", Offset = "0x6F4874", VA = "0x6F4874")]
			[DebuggerHidden]
			public <LoadRoutine>d__454(int <>1__state)
			{
			}

			[Token(Token = "0x6001F57")]
			[Address(RVA = "0x6F48A0", Offset = "0x6F48A0", VA = "0x6F48A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F58")]
			[Address(RVA = "0x6F48A4", Offset = "0x6F48A4", VA = "0x6F48A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F5A")]
			[Address(RVA = "0x6F5BC4", Offset = "0x6F5BC4", VA = "0x6F5BC4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A958C", Offset = "0x4A958C")]
		private sealed class <>c__DisplayClass456_0
		{
			[Token(Token = "0x4001B9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] transitionPosition;

			[Token(Token = "0x4001B9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int loadParticleCount;

			[Token(Token = "0x4001BA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Color32[] transitionColor;

			[Token(Token = "0x4001BA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float[] transitionSize;

			[Token(Token = "0x4001BA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float[] transitionRotation;

			[Token(Token = "0x4001BA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public PlaygroundParticlesC <>4__this;

			[Token(Token = "0x4001BA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public INDIVIDUALTRANSITIONTYPEC thisSnapshotTransition;

			[Token(Token = "0x4001BA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float transitionStartTime;

			[Token(Token = "0x4001BA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int loadPointer;

			[Token(Token = "0x4001BA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public PlaygroundCache loadSnapshotData;

			[Token(Token = "0x4001BA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public bool liveParticles;

			[Token(Token = "0x4001BA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Color transparent;

			[Token(Token = "0x4001BAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public int transitionParticleCount;

			[Token(Token = "0x6001F5C")]
			[Address(RVA = "0x6F2D54", Offset = "0x6F2D54", VA = "0x6F2D54")]
			public <>c__DisplayClass456_0()
			{
			}
		}

		[Token(Token = "0x20004DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A959C", Offset = "0x4A959C")]
		private sealed class <>c__DisplayClass456_1
		{
			[Token(Token = "0x4001BAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isResizing;

			[Token(Token = "0x4001BAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass456_0 CS$<>8__locals1;

			[Token(Token = "0x6001F5D")]
			[Address(RVA = "0x6F2D5C", Offset = "0x6F2D5C", VA = "0x6F2D5C")]
			public <>c__DisplayClass456_1()
			{
			}

			[Token(Token = "0x6001F5E")]
			[Address(RVA = "0x6F2D64", Offset = "0x6F2D64", VA = "0x6F2D64")]
			internal void <LoadTransition>b__0()
			{
			}
		}

		[Token(Token = "0x20004DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A95AC", Offset = "0x4A95AC")]
		private sealed class <>c__DisplayClass456_2
		{
			[Token(Token = "0x4001BAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float currentTime;

			[Token(Token = "0x4001BAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass456_0 CS$<>8__locals2;

			[Token(Token = "0x6001F5F")]
			[Address(RVA = "0x6F316C", Offset = "0x6F316C", VA = "0x6F316C")]
			public <>c__DisplayClass456_2()
			{
			}

			[Token(Token = "0x6001F60")]
			[Address(RVA = "0x6F3174", Offset = "0x6F3174", VA = "0x6F3174")]
			internal void <LoadTransition>b__1()
			{
			}
		}

		[Token(Token = "0x20004DD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A95BC", Offset = "0x4A95BC")]
		private sealed class <LoadTransition>d__456 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlaygroundParticlesC <>4__this;

			[Token(Token = "0x4001BB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int loadPointer;

			[Token(Token = "0x4001BB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass456_0 <>8__1;

			[Token(Token = "0x4001BB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass456_1 <>8__2;

			[Token(Token = "0x4001BB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private <>c__DisplayClass456_2 <>8__3;

			[Token(Token = "0x4001BB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <loadParticleLifetime>5__2;

			[Token(Token = "0x4001BB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private bool <firstFrameDone>5__3;

			[Token(Token = "0x4001BB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int <currentParticleCount>5__4;

			[Token(Token = "0x4001BB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private float <initPosY>5__5;

			[Token(Token = "0x1700026E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F64")]
				[Address(RVA = "0x6F7084", Offset = "0x6F7084", VA = "0x6F7084", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700026F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F66")]
				[Address(RVA = "0x6F70F4", Offset = "0x6F70F4", VA = "0x6F70F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F61")]
			[Address(RVA = "0x6F5C34", Offset = "0x6F5C34", VA = "0x6F5C34")]
			[DebuggerHidden]
			public <LoadTransition>d__456(int <>1__state)
			{
			}

			[Token(Token = "0x6001F62")]
			[Address(RVA = "0x6F5C60", Offset = "0x6F5C60", VA = "0x6F5C60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F63")]
			[Address(RVA = "0x6F5C64", Offset = "0x6F5C64", VA = "0x6F5C64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F65")]
			[Address(RVA = "0x6F708C", Offset = "0x6F708C", VA = "0x6F708C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A95CC", Offset = "0x4A95CC")]
		private sealed class <YieldedRefresh>d__461 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlaygroundParticlesC <>4__this;

			[Token(Token = "0x4001BBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <okToLoadFromStart>5__2;

			[Token(Token = "0x17000270")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F6A")]
				[Address(RVA = "0x6F82F4", Offset = "0x6F82F4", VA = "0x6F82F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000271")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F6C")]
				[Address(RVA = "0x6F8364", Offset = "0x6F8364", VA = "0x6F8364", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F67")]
			[Address(RVA = "0x6F7D98", Offset = "0x6F7D98", VA = "0x6F7D98")]
			[DebuggerHidden]
			public <YieldedRefresh>d__461(int <>1__state)
			{
			}

			[Token(Token = "0x6001F68")]
			[Address(RVA = "0x6F7DC4", Offset = "0x6F7DC4", VA = "0x6F7DC4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F69")]
			[Address(RVA = "0x6F7DC8", Offset = "0x6F7DC8", VA = "0x6F7DC8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F6B")]
			[Address(RVA = "0x6F82FC", Offset = "0x6F82FC", VA = "0x6F82FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A95DC", Offset = "0x4A95DC")]
		private sealed class <>c__DisplayClass462_0
		{
			[Token(Token = "0x4001BBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlaygroundParticlesC <>4__this;

			[Token(Token = "0x4001BBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float time;

			[Token(Token = "0x4001BC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int resolution;

			[Token(Token = "0x4001BC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int currentCycles;

			[Token(Token = "0x4001BC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool isPrewarmingAsync;

			[Token(Token = "0x6001F6D")]
			[Address(RVA = "0x6F4090", Offset = "0x6F4090", VA = "0x6F4090")]
			public <>c__DisplayClass462_0()
			{
			}

			[Token(Token = "0x6001F6E")]
			[Address(RVA = "0x6F4098", Offset = "0x6F4098", VA = "0x6F4098")]
			internal void <Prewarm>b__0()
			{
			}
		}

		[Token(Token = "0x20004E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A95EC", Offset = "0x4A95EC")]
		private sealed class <Prewarm>d__462 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlaygroundParticlesC <>4__this;

			[Token(Token = "0x4001BC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float time;

			[Token(Token = "0x4001BC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int resolution;

			[Token(Token = "0x4001BC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass462_0 <>8__1;

			[Token(Token = "0x4001BC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <storedLocalTime>5__2;

			[Token(Token = "0x17000272")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F72")]
				[Address(RVA = "0x6F7704", Offset = "0x6F7704", VA = "0x6F7704", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000273")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F74")]
				[Address(RVA = "0x6F7774", Offset = "0x6F7774", VA = "0x6F7774", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F6F")]
			[Address(RVA = "0x6F70FC", Offset = "0x6F70FC", VA = "0x6F70FC")]
			[DebuggerHidden]
			public <Prewarm>d__462(int <>1__state)
			{
			}

			[Token(Token = "0x6001F70")]
			[Address(RVA = "0x6F7128", Offset = "0x6F7128", VA = "0x6F7128", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F71")]
			[Address(RVA = "0x6F712C", Offset = "0x6F712C", VA = "0x6F712C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F73")]
			[Address(RVA = "0x6F770C", Offset = "0x6F770C", VA = "0x6F770C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A95FC", Offset = "0x4A95FC")]
		private sealed class <Boot>d__466 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlaygroundParticlesC <>4__this;

			[Token(Token = "0x17000274")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F78")]
				[Address(RVA = "0x6F47FC", Offset = "0x6F47FC", VA = "0x6F47FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000275")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F7A")]
				[Address(RVA = "0x6F486C", Offset = "0x6F486C", VA = "0x6F486C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F75")]
			[Address(RVA = "0x6F4230", Offset = "0x6F4230", VA = "0x6F4230")]
			[DebuggerHidden]
			public <Boot>d__466(int <>1__state)
			{
			}

			[Token(Token = "0x6001F76")]
			[Address(RVA = "0x6F425C", Offset = "0x6F425C", VA = "0x6F425C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F77")]
			[Address(RVA = "0x6F4260", Offset = "0x6F4260", VA = "0x6F4260", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F79")]
			[Address(RVA = "0x6F4804", Offset = "0x6F4804", VA = "0x6F4804", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public SOURCEC source;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public int activeState;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool emit;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[HideInInspector]
		public bool loop;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[HideInInspector]
		public bool clearParticlesOnEmissionStop;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		[HideInInspector]
		public bool disableOnDone;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public ONDONE disableOnDoneRoutine;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public int updateRate;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public bool calculate;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[HideInInspector]
		public bool calculateDeltaMovement;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public float deltaMovementStrength;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public float minDeltaMovementStrength;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public VALUEMETHOD deltaMovementStrengthValueMethod;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public bool worldObjectUpdateVertices;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[HideInInspector]
		public bool worldObjectUpdateNormals;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public NEARESTNEIGHBORORIGINMETHOD nearestNeighborOriginMethod;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public int nearestNeighborOrigin;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public Vector3 nearestNeighborOriginVector3;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform nearestNeighborOriginTransform;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int particleCount;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[HideInInspector]
		public float emissionRate;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public OVERFLOWMODEC overflowMode;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[HideInInspector]
		public Vector3 overflowOffset;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public bool applySourceScatter;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[HideInInspector]
		public Vector3 sourceScatterMin;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public Vector3 sourceScatterMax;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[HideInInspector]
		public Vector3 scatterScale;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public MINMAXVECTOR3METHOD sourceScatterMethod;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[HideInInspector]
		public SORTINGC sorting;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public AnimationCurve lifetimeSorting;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public float sizeMin;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[HideInInspector]
		public float sizeMax;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public float scale;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[HideInInspector]
		public float initialRotationMin;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public float initialRotationMax;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[HideInInspector]
		public float rotationSpeedMin;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public float rotationSpeedMax;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[HideInInspector]
		public bool rotateTowardsDirection;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public Vector3 rotationNormal;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[HideInInspector]
		public VALUEMETHOD lifetimeValueMethod;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public float lifetime;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[HideInInspector]
		public float lifetimeMin;

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[HideInInspector]
		public float lifetimeOffset;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[HideInInspector]
		public float lifetimeEmission;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		public float minShurikenLifetime;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[HideInInspector]
		public bool applyLifetimeSize;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[HideInInspector]
		public AnimationCurve lifetimeSize;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[HideInInspector]
		public bool applyParticleArraySize;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[HideInInspector]
		public AnimationCurve particleArraySize;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[HideInInspector]
		public bool transitionBackToSource;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[HideInInspector]
		public AnimationCurve transitionBackToSourceAmount;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[HideInInspector]
		public bool onlySourcePositioning;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
		[HideInInspector]
		public bool onlyLifetimePositioning;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[HideInInspector]
		public Vector3AnimationCurveC lifetimePositioning;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[HideInInspector]
		public bool applyLifetimePositioningTimeScale;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
		[HideInInspector]
		public bool applyLifetimePositioningPositionScale;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[HideInInspector]
		public AnimationCurve lifetimePositioningTimeScale;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[HideInInspector]
		public AnimationCurve lifetimePositioningPositionScale;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[HideInInspector]
		public float lifetimePositioningScale;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[HideInInspector]
		public bool lifetimePositioningUsesSourceDirection;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14D")]
		[HideInInspector]
		public bool applyLifetimeVelocity;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[HideInInspector]
		public Vector3AnimationCurveC lifetimeVelocity;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[HideInInspector]
		public float lifetimeVelocityScale;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		[HideInInspector]
		public bool applyInitialVelocity;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[HideInInspector]
		public Vector3 initialVelocityMin;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[HideInInspector]
		public Vector3 initialVelocityMax;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[HideInInspector]
		public MINMAXVECTOR3METHOD initialVelocityMethod;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		[HideInInspector]
		public bool applyInitialLocalVelocity;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[HideInInspector]
		public Vector3 initialLocalVelocityMin;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		[HideInInspector]
		public Vector3 initialLocalVelocityMax;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[HideInInspector]
		public MINMAXVECTOR3METHOD initialLocalVelocityMethod;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		[HideInInspector]
		public bool applyInitialVelocityShape;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[HideInInspector]
		public Vector3AnimationCurveC initialVelocityShape;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[HideInInspector]
		public float initialVelocityShapeScale;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		[HideInInspector]
		public bool applyVelocityBending;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[HideInInspector]
		public Vector3 velocityBending;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		[HideInInspector]
		public VELOCITYBENDINGTYPEC velocityBendingType;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[HideInInspector]
		public Vector3 gravity;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		[HideInInspector]
		public float maxVelocity;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[HideInInspector]
		public PlaygroundAxisConstraintsC axisConstraints;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[HideInInspector]
		public float damping;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		[HideInInspector]
		public float velocityScale;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[HideInInspector]
		public Gradient lifetimeColor;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[HideInInspector]
		public List<PlaygroundGradientC> lifetimeColors;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[HideInInspector]
		public COLORSOURCEC colorSource;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		[HideInInspector]
		public bool sourceUsesLifetimeAlpha;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[HideInInspector]
		public COLORMETHOD colorMethod;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		[HideInInspector]
		public bool arrayColorUsesAlpha;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[HideInInspector]
		public Gradient arrayColorAlpha;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[HideInInspector]
		public bool applyLocalSpaceMovementCompensation;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x209")]
		[HideInInspector]
		public bool applyRandomSizeOnRebirth;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20A")]
		[HideInInspector]
		public bool applyRandomInitialVelocityOnRebirth;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20B")]
		[HideInInspector]
		public bool applyRandomRotationOnRebirth;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		[HideInInspector]
		public bool applyRandomScatterOnRebirth;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20D")]
		[HideInInspector]
		public bool applyInitialColorOnRebirth;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20E")]
		[HideInInspector]
		public bool applyRandomLifetimeOnRebirth;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20F")]
		[HideInInspector]
		public bool applyDeltaOnRebirth;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[HideInInspector]
		public bool calculateManipulatorOnRebirth;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x211")]
		[HideInInspector]
		public bool pauseCalculationWhenInvisible;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x212")]
		[HideInInspector]
		public bool calculationTriggerSizeGizmo;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[HideInInspector]
		public Transform calculationTriggerTransform;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[HideInInspector]
		public Vector3 calculationTriggerSize;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		[HideInInspector]
		public Vector3 calculationTriggerOffset;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[HideInInspector]
		public bool forceVisibilityWhenOutOfFrustrum;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x239")]
		[HideInInspector]
		public bool syncPositionsOnMainThread;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23A")]
		[HideInInspector]
		public bool applyLockPosition;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23B")]
		[HideInInspector]
		public bool applyLockRotation;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		[HideInInspector]
		public bool applyLockScale;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23D")]
		[HideInInspector]
		public bool lockPositionIsLocal;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23E")]
		[HideInInspector]
		public bool lockRotationIsLocal;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[HideInInspector]
		public Vector3 lockPosition;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		[HideInInspector]
		public Vector3 lockRotation;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[HideInInspector]
		public Vector3 lockScale;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		[HideInInspector]
		public bool applyMovementCompensationLifetimeStrength;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		[HideInInspector]
		public AnimationCurve movementCompensationLifetimeStrength;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		[HideInInspector]
		public bool applyParticleMask;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		[HideInInspector]
		public int particleMask;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		[HideInInspector]
		public float particleMaskTime;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		[HideInInspector]
		public MASKSORTINGC particleMaskSorting;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		[HideInInspector]
		public float stretchSpeed;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		[HideInInspector]
		public bool applyStretchStartDirection;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		[HideInInspector]
		public Vector3 stretchStartDirection;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		[HideInInspector]
		public bool applyLifetimeStretching;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		[HideInInspector]
		public AnimationCurve stretchLifetime;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		[HideInInspector]
		public ThreadMethodLocal threadMethod;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		[HideInInspector]
		public bool multithreadedStartup;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		[HideInInspector]
		public int scriptedEmissionIndex;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		[HideInInspector]
		public Vector3 scriptedEmissionPosition;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		[HideInInspector]
		public Vector3 scriptedEmissionVelocity;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
		[HideInInspector]
		public Color scriptedEmissionColor;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		[HideInInspector]
		private float scriptedLifetime;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		[HideInInspector]
		public bool collision;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D9")]
		[HideInInspector]
		public bool affectRigidbodies;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DA")]
		[HideInInspector]
		public bool inverseRigidbodyCollision;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		[HideInInspector]
		public float mass;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		[HideInInspector]
		public float collisionRadius;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
		[HideInInspector]
		public LayerMask collisionMask;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		[HideInInspector]
		public List<Transform> collisionExclusion;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		[HideInInspector]
		public float lifetimeLoss;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
		[HideInInspector]
		public float bounciness;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		[HideInInspector]
		public Vector3 bounceRandomMin;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
		[HideInInspector]
		public Vector3 bounceRandomMax;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		[HideInInspector]
		public List<PlaygroundColliderC> colliders;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		[HideInInspector]
		public COLLISIONTYPEC collisionType;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
		[HideInInspector]
		public float minCollisionDepth;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		[HideInInspector]
		public float maxCollisionDepth;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
		[HideInInspector]
		public bool stickyCollisions;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		[HideInInspector]
		public float stickyCollisionsSurfaceOffset;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		[HideInInspector]
		public LayerMask stickyCollisionsMask;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		[HideInInspector]
		public bool collisionPrecision;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x331")]
		[HideInInspector]
		public bool forceCollisionCaching;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x332")]
		[HideInInspector]
		public bool maskedParticlesBypassCollision;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		public List<ParticleStateC> states;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		[HideInInspector]
		public List<PlaygroundSpline> splines;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		[HideInInspector]
		public float splineTimeOffset;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34C")]
		[HideInInspector]
		public bool treatAsOneSpline;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		private int splineIndex;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		[HideInInspector]
		public WorldObject worldObject;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		[HideInInspector]
		public SkinnedWorldObject skinnedWorldObject;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		[HideInInspector]
		public bool forceSkinnedMeshUpdateOnMainThread;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		[HideInInspector]
		public Transform sourceTransform;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		[HideInInspector]
		public List<PlaygroundTransformC> sourceTransforms;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		[HideInInspector]
		public bool treatAsOneTransform;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x384")]
		private int transformIndex;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		[HideInInspector]
		public PlaygroundParticlesC otherParticleSource;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		[HideInInspector]
		public SOURCEBIRTHMETHOD otherParticleSourceMethod;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		[HideInInspector]
		public PaintObjectC paint;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		[HideInInspector]
		public ParticleProjectionC projection;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
		public List<ManipulatorObjectC> manipulators;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		[HideInInspector]
		public List<PlaygroundEventC> events;

		[NonSerialized]
		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
		public PlaygroundCache playgroundCache;

		[NonSerialized]
		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		public ParticleSystem.Particle[] particleCache;

		[NonSerialized]
		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
		public CollisionCache collisionCache;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
		[HideInInspector]
		public List<PlaygroundSave> snapshots;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
		[HideInInspector]
		public bool loadFromStart;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3DC")]
		[HideInInspector]
		public int loadFrom;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
		[HideInInspector]
		public bool loadTransition;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E4")]
		[HideInInspector]
		public TRANSITIONTYPEC loadTransitionType;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
		[HideInInspector]
		public float loadTransitionTime;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
		[HideInInspector]
		public PlaygroundCache snapshotData;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
		[HideInInspector]
		public float timeOfSnapshot;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3FC")]
		public bool isSnapshot;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
		[HideInInspector]
		public ParticleSystem shurikenParticleSystem;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
		[HideInInspector]
		public int particleSystemId;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
		[HideInInspector]
		public GameObject particleSystemGameObject;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
		[HideInInspector]
		public Transform particleSystemTransform;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
		[HideInInspector]
		public Renderer particleSystemRenderer;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
		[HideInInspector]
		public ParticleSystemRenderer particleSystemRenderer2;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
		[HideInInspector]
		public List<PlaygroundParticlesC> eventControlledBy;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
		private SimplexNoise turbulenceSimplex;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
		[HideInInspector]
		public TURBULENCETYPE turbulenceType;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x444")]
		[HideInInspector]
		public float turbulenceStrength;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
		[HideInInspector]
		public float turbulenceScale;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44C")]
		[HideInInspector]
		public float turbulenceTimeScale;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
		[HideInInspector]
		public bool turbulenceApplyLifetimeStrength;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
		[HideInInspector]
		public AnimationCurve turbulenceLifetimeStrength;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
		[HideInInspector]
		public bool prewarm;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x464")]
		[HideInInspector]
		public float prewarmTime;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x468")]
		[HideInInspector]
		public int prewarmCycles;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46C")]
		[HideInInspector]
		public float particleTimescale;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
		private int thisLayer;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x474")]
		private bool isPrewarming;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x475")]
		private bool inTransition;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
		private int previousParticleCount;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47C")]
		private float previousEmissionRate;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x480")]
		private bool renderModeStretch;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x484")]
		private float previousSizeMin;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
		private float previousSizeMax;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48C")]
		private float previousInitialRotationMin;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
		private float previousInitialRotationMax;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x494")]
		private float previousRotationSpeedMin;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
		private float previousRotationSpeedMax;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49C")]
		private Vector3 previousVelocityMin;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
		private Vector3 previousVelocityMax;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B4")]
		private Vector3 previousLocalVelocityMin;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C0")]
		private Vector3 previousLocalVelocityMax;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4CC")]
		private MINMAXVECTOR3METHOD previousLocalVelocityMethod;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D0")]
		private MINMAXVECTOR3METHOD previousVelocityMethod;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D4")]
		private SORTINGC previousSorting;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D8")]
		private int previousNearestNeighborOrigin;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4DC")]
		private NEARESTNEIGHBORORIGINMETHOD previousNearestNeighborOriginMethod;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E0")]
		private Vector3 previousNearestNeighborOriginVector3;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F0")]
		private Transform previousNearestNeighborOriginTransform;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F8")]
		private Vector3 nearestNeighborOriginTransformPosition;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x504")]
		private MASKSORTINGC previousMaskSorting;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x508")]
		private VALUEMETHOD previousLifetimeValueMethod;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50C")]
		private float previousLifetime;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x510")]
		private float previousLifetimeMin;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x514")]
		private float previousLifetimeEmission;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x518")]
		private bool previousEmission;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x519")]
		private bool previousLoop;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51C")]
		private float emissionStopped;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x520")]
		private bool queueEmissionHalt;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x521")]
		private bool hasEmitted;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x524")]
		private int lifetimeColorId;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x528")]
		private System.Random internalRandom01;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x530")]
		private float lastTimeUpdated;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x538")]
		private PlaygroundEventParticle eventParticle;

		[NonSerialized]
		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x540")]
		public bool cameFromNonCalculatedFrame;

		[NonSerialized]
		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x541")]
		public bool cameFromNonEmissionFrame;

		[NonSerialized]
		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x544")]
		public float localTime;

		[NonSerialized]
		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x548")]
		public float localDeltaTime;

		[NonSerialized]
		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54C")]
		public int previousActiveState;

		[NonSerialized]
		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x550")]
		public float simulationStarted;

		[NonSerialized]
		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x554")]
		public bool inPlayback;

		[NonSerialized]
		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x555")]
		public bool loopExceeded;

		[NonSerialized]
		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x558")]
		public int loopExceededOnParticle;

		[NonSerialized]
		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55C")]
		public bool isReadyForThreadedCalculations;

		[NonSerialized]
		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55D")]
		public bool hasActiveParticles;

		[NonSerialized]
		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55E")]
		public bool isDoneThread;

		[NonSerialized]
		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55F")]
		public bool threadHadNoActiveParticles;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x560")]
		private bool hasEventManipulatorLocal;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x561")]
		private bool hasEventManipulatorGlobal;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x562")]
		private bool hasSeveralManipulatorEvents;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x563")]
		private bool hasGlobalAffectingManipulators;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x564")]
		private Quaternion particleSystemRotation;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x574")]
		private Quaternion particleSystemInverseRotation;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x584")]
		private int psTransformNum;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x588")]
		private Vector3 manipulatorFix;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x598")]
		private PlaygroundParticlesC thisInstance;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A0")]
		private float t;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A4")]
		private bool cancelDeltaPositioningOnSync;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A8")]
		private Quaternion stCompensationRot;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B8")]
		private Quaternion stCompensationRotPrev;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C8")]
		private Quaternion stRot;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D8")]
		private Vector3 stDir;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E4")]
		private bool localSpace;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E5")]
		private bool overflow;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E6")]
		private bool skinnedWorldObjectReady;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E7")]
		private bool stateReadyForTextureColor;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E8")]
		private int manipulatorEventCount;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5EC")]
		private bool hasEvent;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5ED")]
		private bool hasTimerEvent;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5EE")]
		private bool hasCollisionCache;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F0")]
		private int reportUpdateStepper;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F4")]
		private bool isReportingBadUpdateRate;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F5")]
		private bool isSettingLifetime;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F6")]
		private bool isSettingParticleTime;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F7")]
		private bool isSettingParticleCount;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F8")]
		private bool prevLoop;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5FC")]
		private SOURCEC prevSource;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x600")]
		private float realSimulationTime;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x604")]
		private bool isSaving;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x605")]
		private bool isLoading;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x606")]
		private bool transitionAvailable;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x607")]
		private bool abortTransition;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x608")]
		private bool isYieldRefreshing;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x609")]
		private bool initialized;

		[Token(Token = "0x17000103")]
		public bool IsDoneThread
		{
			[Token(Token = "0x6001706")]
			[Address(RVA = "0x5F069C", Offset = "0x5F069C", VA = "0x5F069C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001707")]
			[Address(RVA = "0x5E721C", Offset = "0x5E721C", VA = "0x5E721C")]
			set
			{
			}
		}

		[Token(Token = "0x17000104")]
		public float LastTimeUpdated
		{
			[Token(Token = "0x600171A")]
			[Address(RVA = "0x5F0F94", Offset = "0x5F0F94", VA = "0x5F0F94")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600171B")]
			[Address(RVA = "0x5F0F9C", Offset = "0x5F0F9C", VA = "0x5F0F9C")]
			set
			{
			}
		}

		[Token(Token = "0x17000105")]
		public float LocalDeltaTime
		{
			[Token(Token = "0x600171C")]
			[Address(RVA = "0x5F0FA4", Offset = "0x5F0FA4", VA = "0x5F0FA4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600171D")]
			[Address(RVA = "0x5F0FAC", Offset = "0x5F0FAC", VA = "0x5F0FAC")]
			set
			{
			}
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0x5EB6DC", Offset = "0x5EB6DC", VA = "0x5EB6DC")]
		public void CopyTo(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0x5EC918", Offset = "0x5EC918", VA = "0x5EC918")]
		public void CopySaveDataTo(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0x5CD9C8", Offset = "0x5CD9C8", VA = "0x5CD9C8")]
		public void Emit(bool setEmission)
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0x5ECAE4", Offset = "0x5ECAE4", VA = "0x5ECAE4")]
		public int Emit()
		{
			return default(int);
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0x5ED010", Offset = "0x5ED010", VA = "0x5ED010")]
		public int Emit(Vector3 givePosition)
		{
			return default(int);
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0x5ED0A8", Offset = "0x5ED0A8", VA = "0x5ED0A8")]
		public int Emit(Vector3 givePosition, Vector3 giveVelocity)
		{
			return default(int);
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0x5CD8C0", Offset = "0x5CD8C0", VA = "0x5CD8C0")]
		public int Emit(Vector3 givePosition, Vector3 giveVelocity, Color32 giveColor)
		{
			return default(int);
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0x5ED140", Offset = "0x5ED140", VA = "0x5ED140")]
		public void Emit(int quantity)
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0x5ED1E4", Offset = "0x5ED1E4", VA = "0x5ED1E4")]
		public void Emit(int quantity, Vector3 givePosition, Vector3 randomVelocityMin, Vector3 randomVelocityMax, Color32 giveColor)
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0x5ED478", Offset = "0x5ED478", VA = "0x5ED478")]
		public void Emit(int quantity, Vector3 randomPositionMin, Vector3 randomPositionMax, Vector3 randomVelocityMin, Vector3 randomVelocityMax, Color32 giveColor)
		{
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0x5ED65C", Offset = "0x5ED65C", VA = "0x5ED65C")]
		public int Emit(float giveLifetime)
		{
			return default(int);
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0x5ED700", Offset = "0x5ED700", VA = "0x5ED700")]
		public int Emit(Vector3 givePosition, float giveLifetime)
		{
			return default(int);
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0x5ED7A4", Offset = "0x5ED7A4", VA = "0x5ED7A4")]
		public int Emit(Vector3 givePosition, Vector3 giveVelocity, float giveLifetime)
		{
			return default(int);
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0x5ED844", Offset = "0x5ED844", VA = "0x5ED844")]
		public int Emit(Vector3 givePosition, Vector3 giveVelocity, float giveLifetime, Color32 giveColor)
		{
			return default(int);
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0x5ED880", Offset = "0x5ED880", VA = "0x5ED880")]
		public void ThreadSafeEmit(Vector3 givePosition, Vector3 giveVelocity, Color32 giveColor)
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0x5ED888", Offset = "0x5ED888", VA = "0x5ED888")]
		public void ThreadSafeEmit(int quantity, Vector3 givePosition, Vector3 randomVelocityMin, Vector3 randomVelocityMax, Color32 giveColor)
		{
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0x5ECB7C", Offset = "0x5ECB7C", VA = "0x5ECB7C")]
		private void EmitProcedure(Vector3 givePosition, Vector3 giveVelocity, Color32 giveColor)
		{
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0x5D8390", Offset = "0x5D8390", VA = "0x5D8390")]
		public bool IsAlive()
		{
			return default(bool);
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0x5F068C", Offset = "0x5F068C", VA = "0x5F068C")]
		public bool IsLocalSpace()
		{
			return default(bool);
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0x5D5C04", Offset = "0x5D5C04", VA = "0x5D5C04")]
		public bool InTransition()
		{
			return default(bool);
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0x5D5C0C", Offset = "0x5D5C0C", VA = "0x5D5C0C")]
		public bool IsLoading()
		{
			return default(bool);
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0x5F0694", Offset = "0x5F0694", VA = "0x5F0694")]
		public bool IsSaving()
		{
			return default(bool);
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0x5D8E8C", Offset = "0x5D8E8C", VA = "0x5D8E8C")]
		public bool IsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0x5D5BCC", Offset = "0x5D5BCC", VA = "0x5D5BCC")]
		public bool Initialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0x5D5BFC", Offset = "0x5D5BFC", VA = "0x5D5BFC")]
		public bool IsYieldRefreshing()
		{
			return default(bool);
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0x5D5C1C", Offset = "0x5D5C1C", VA = "0x5D5C1C")]
		public bool IsSettingParticleTime()
		{
			return default(bool);
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0x5D83B0", Offset = "0x5D83B0", VA = "0x5D83B0")]
		public bool IsSkinnedWorldObjectReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0x5D83D4", Offset = "0x5D83D4", VA = "0x5D83D4")]
		public bool HasTurbulence()
		{
			return default(bool);
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0x5F06A4", Offset = "0x5F06A4", VA = "0x5F06A4")]
		public bool HasOverflow()
		{
			return default(bool);
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0x5F06AC", Offset = "0x5F06AC", VA = "0x5F06AC")]
		public bool HasGlobalManipulator()
		{
			return default(bool);
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0x5F06B4", Offset = "0x5F06B4", VA = "0x5F06B4")]
		public bool HasCollisionCache()
		{
			return default(bool);
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0x5F06BC", Offset = "0x5F06BC", VA = "0x5F06BC")]
		public bool HasCollided(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0x5F074C", Offset = "0x5F074C", VA = "0x5F074C")]
		public Vector3 GetCollisionPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0x5F0838", Offset = "0x5F0838", VA = "0x5F0838")]
		public Vector3 GetCollisionNormal(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0x5F0924", Offset = "0x5F0924", VA = "0x5F0924")]
		public Vector3 GetStickyPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0x5F0A10", Offset = "0x5F0A10", VA = "0x5F0A10")]
		public void SetSticky(int index, Vector3 position, Vector3 normal, float offset, Transform parent)
		{
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0x5F0B50", Offset = "0x5F0B50", VA = "0x5F0B50")]
		public void UpdateSticky(int index)
		{
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0x5F0D70", Offset = "0x5F0D70", VA = "0x5F0D70")]
		public void ClearCollisions()
		{
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0x5F0DAC", Offset = "0x5F0DAC", VA = "0x5F0DAC")]
		public void ClearCollisions(int index)
		{
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0x5F0E0C", Offset = "0x5F0E0C", VA = "0x5F0E0C")]
		public Transform GetCollisionTransform(int index)
		{
			return null;
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0x5F0E9C", Offset = "0x5F0E9C", VA = "0x5F0E9C")]
		public int GetLayer()
		{
			return default(int);
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0x5F0EA4", Offset = "0x5F0EA4", VA = "0x5F0EA4")]
		public void SetRandomSeed(int seed)
		{
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0x5F0F14", Offset = "0x5F0F14", VA = "0x5F0F14")]
		public bool IsReportingBadUpdateRate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0x5E5E88", Offset = "0x5E5E88", VA = "0x5E5E88")]
		public float GetDeltaTime()
		{
			return default(float);
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0x5E5E1C", Offset = "0x5E5E1C", VA = "0x5E5E1C")]
		public SimplexNoise GetSimplex()
		{
			return null;
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0x5F0FB8", Offset = "0x5F0FB8", VA = "0x5F0FB8")]
		public void Kill(int p)
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0x5F1224", Offset = "0x5F1224", VA = "0x5F1224")]
		public void KillAndSendManipulatorDeathEvents(int p)
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0x5F19CC", Offset = "0x5F19CC", VA = "0x5F19CC")]
		public void SetNoForce(int p, bool noForce)
		{
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0x5F1A40", Offset = "0x5F1A40", VA = "0x5F1A40")]
		public bool NoForce(int p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0x5F1AA4", Offset = "0x5F1AA4", VA = "0x5F1AA4")]
		public void Translate(int p, Vector3 translation)
		{
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0x5F1D00", Offset = "0x5F1D00", VA = "0x5F1D00")]
		public void ParticlePosition(int p, Vector3 position)
		{
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0x5F1EF0", Offset = "0x5F1EF0", VA = "0x5F1EF0")]
		public void ParticleColor(int p, Color32 color)
		{
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0x5F207C", Offset = "0x5F207C", VA = "0x5F207C")]
		private void SetParticleColorInternal(int index, Color32 color)
		{
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0x5F20E8", Offset = "0x5F20E8", VA = "0x5F20E8")]
		private Color32 GetParticleColorInternal(int index)
		{
			return default(Color32);
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0x5F214C", Offset = "0x5F214C", VA = "0x5F214C")]
		public void ParticleSize(int p, float size)
		{
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0x5F22CC", Offset = "0x5F22CC", VA = "0x5F22CC")]
		public void ParticleVelocity(int p, Vector3 velocity)
		{
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0x5F23DC", Offset = "0x5F23DC", VA = "0x5F23DC")]
		public void PositionToTransformPoint(int p, Vector3 position, Transform targetTransform)
		{
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0x5F24A0", Offset = "0x5F24A0", VA = "0x5F24A0")]
		public void PositionToInverseTransformPoint(int p, Vector3 position, Transform targetTransform)
		{
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0x5F2564", Offset = "0x5F2564", VA = "0x5F2564")]
		public Vector3 GetParticlePosition(int p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0x5F25D0", Offset = "0x5F25D0", VA = "0x5F25D0")]
		public Vector3 GetSourcePosition(int p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0x5F263C", Offset = "0x5F263C", VA = "0x5F263C")]
		public void SetHasActiveParticles()
		{
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0x5F264C", Offset = "0x5F264C", VA = "0x5F264C")]
		public bool HasSeveralManipulatorEvents()
		{
			return default(bool);
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0x5F2654", Offset = "0x5F2654", VA = "0x5F2654")]
		public void ProtectParticleFromManipulator(int particle, ManipulatorObjectC manipulator)
		{
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0x5F2708", Offset = "0x5F2708", VA = "0x5F2708")]
		public void RemoveParticleProtection(int particle)
		{
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0x5D5BF4", Offset = "0x5D5BF4", VA = "0x5D5BF4")]
		public bool IsSettingLifetime()
		{
			return default(bool);
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0x5D5C14", Offset = "0x5D5C14", VA = "0x5D5C14")]
		public bool IsPrewarming()
		{
			return default(bool);
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0x5F276C", Offset = "0x5F276C", VA = "0x5F276C")]
		public bool IsParticleInsideManipulator(int particleId, ManipulatorObjectC manipulator)
		{
			return default(bool);
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0x5F2860", Offset = "0x5F2860", VA = "0x5F2860")]
		public int GetSplineIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0x5F2868", Offset = "0x5F2868", VA = "0x5F2868")]
		public int GetTransformIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0x5F2870", Offset = "0x5F2870", VA = "0x5F2870")]
		public void RefreshMaskSorting()
		{
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0x5F2B40", Offset = "0x5F2B40", VA = "0x5F2B40")]
		public void RefreshMaskSorting(int[] maskSortingArray)
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0x5CC930", Offset = "0x5CC930", VA = "0x5CC930")]
		public static PlaygroundParticlesC CreatePlaygroundParticles(Texture2D[] images, string name, Vector3 position, Quaternion rotation, Vector3 offset, float particleSize, float scale, Material material)
		{
			return null;
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0x5CC2E4", Offset = "0x5CC2E4", VA = "0x5CC2E4")]
		public static void OnCreatePlaygroundParticles(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0x5CBE50", Offset = "0x5CBE50", VA = "0x5CBE50")]
		public static PlaygroundParticlesC CreateParticleObject(string name, Vector3 position, Quaternion rotation, float particleSize, Material material)
		{
			return null;
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0x5CF074", Offset = "0x5CF074", VA = "0x5CF074")]
		public static WorldObject NewWorldObject(Transform meshTransform)
		{
			return null;
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0x5CF1E0", Offset = "0x5CF1E0", VA = "0x5CF1E0")]
		public static SkinnedWorldObject NewSkinnedWorldObject(Transform meshTransform)
		{
			return null;
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0x5F2DA0", Offset = "0x5F2DA0", VA = "0x5F2DA0")]
		public static SkinnedWorldObject NewSkinnedWorldObject(Transform meshTransform, int downResolution)
		{
			return null;
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0x5D260C", Offset = "0x5D260C", VA = "0x5D260C")]
		public static PaintObjectC NewPaintObject(PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0x5D252C", Offset = "0x5D252C", VA = "0x5D252C")]
		public static ParticleProjectionC NewProjectionObject(PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0x5CF354", Offset = "0x5CF354", VA = "0x5CF354")]
		public static ManipulatorObjectC NewManipulatorObject(MANIPULATORTYPEC type, LayerMask affects, Transform manipulatorTransform, float size, float strength, PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0x5CDAD4", Offset = "0x5CDAD4", VA = "0x5CDAD4")]
		public static void GetPosition(SkinnedWorldObject particleStateWorldObject, bool updateNormals)
		{
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0x5CDE8C", Offset = "0x5CDE8C", VA = "0x5CDE8C")]
		public static void GetPosition(Vector3[] v3, WorldObject particleStateWorldObject)
		{
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0x5F2DD4", Offset = "0x5F2DD4", VA = "0x5F2DD4")]
		public static void GetProceduralPosition(Vector3[] v3, WorldObject particleStateWorldObject)
		{
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0x5CDF84", Offset = "0x5CDF84", VA = "0x5CDF84")]
		public static void GetNormals(Vector3[] v3, WorldObject particleStateWorldObject)
		{
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0x5CE064", Offset = "0x5CE064", VA = "0x5CE064")]
		public static void SetSize(PlaygroundParticlesC playgroundParticles, float size)
		{
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0x5F2FF8", Offset = "0x5F2FF8", VA = "0x5F2FF8")]
		public void RefreshSystemRandom()
		{
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0x5F3058", Offset = "0x5F3058", VA = "0x5F3058")]
		public static void SetSizeRandom(PlaygroundParticlesC playgroundParticles, float sizeMinimum, float sizeMaximum)
		{
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0x5F30F0", Offset = "0x5F30F0", VA = "0x5F30F0")]
		public static void SetRotationRandom(PlaygroundParticlesC playgroundParticles, float rotationMinimum, float rotationMaximum)
		{
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0x5F3258", Offset = "0x5F3258", VA = "0x5F3258")]
		public static void SetInitialRotationRandom(PlaygroundParticlesC playgroundParticles, float rotationMinimum, float rotationMaximum)
		{
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0x5F33C0", Offset = "0x5F33C0", VA = "0x5F33C0")]
		public static void SetVelocityRandom(PlaygroundParticlesC playgroundParticles, Vector3 velocityMinimum, Vector3 velocityMaximum)
		{
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0x5F39EC", Offset = "0x5F39EC", VA = "0x5F39EC")]
		public static void SetLocalVelocityRandom(PlaygroundParticlesC playgroundParticles, Vector3 velocityMinimum, Vector3 velocityMaximum)
		{
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0x5CEFA8", Offset = "0x5CEFA8", VA = "0x5CEFA8")]
		public static void SetMaterial(PlaygroundParticlesC playgroundParticles, Material particleMaterial)
		{
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0x5CDFC8", Offset = "0x5CDFC8", VA = "0x5CDFC8")]
		public static void SetAlpha(PlaygroundParticlesC playgroundParticles, float alpha)
		{
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0x5CE160", Offset = "0x5CE160", VA = "0x5CE160")]
		public static void Translate(PlaygroundParticlesC playgroundParticles, Vector3 direction)
		{
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0x5CE2AC", Offset = "0x5CE2AC", VA = "0x5CE2AC")]
		public static void Add(PlaygroundParticlesC playgroundParticles, ParticleStateC state)
		{
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0x5CE344", Offset = "0x5CE344", VA = "0x5CE344")]
		public static void Add(PlaygroundParticlesC playgroundParticles, Texture2D image, float scale, Vector3 offset, string stateName, Transform stateTransform)
		{
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0x5CE4B8", Offset = "0x5CE4B8", VA = "0x5CE4B8")]
		public static void Add(PlaygroundParticlesC playgroundParticles, Texture2D image, Texture2D depthmap, float depthmapStrength, float scale, Vector3 offset, string stateName, Transform stateTransform)
		{
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0x5CEFF0", Offset = "0x5CEFF0", VA = "0x5CEFF0")]
		public static void Destroy(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0x5CED18", Offset = "0x5CED18", VA = "0x5CED18")]
		public static void SetLifetime(PlaygroundParticlesC playgroundParticles, SORTINGC sorting, float time)
		{
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0x5F3D1C", Offset = "0x5F3D1C", VA = "0x5F3D1C")]
		public static void SetLifetimeAsyncFriendly(PlaygroundParticlesC playgroundParticles, SORTINGC sorting, float time)
		{
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0x5F5058", Offset = "0x5F5058", VA = "0x5F5058")]
		public static void SetLifetimeSubtraction(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0x5F5968", Offset = "0x5F5968", VA = "0x5F5968")]
		public static void SetEmissionRate(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0x5F5280", Offset = "0x5F5280", VA = "0x5F5280")]
		public static void SetParticleTimeNow(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0x5F5E84", Offset = "0x5F5E84", VA = "0x5F5E84")]
		public static void SetParticleTimeNowWithRestEmission(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0x5F608C", Offset = "0x5F608C", VA = "0x5F608C")]
		public static Color32 GetColorAtLifetime(PlaygroundParticlesC playgroundParticles, float time)
		{
			return default(Color32);
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0x5F6100", Offset = "0x5F6100", VA = "0x5F6100")]
		public static void SetColorAtLifetime(PlaygroundParticlesC playgroundParticles, float time)
		{
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0x5F6210", Offset = "0x5F6210", VA = "0x5F6210")]
		public static void SetColorWithLifetimeSorting(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0x5D5BEC", Offset = "0x5D5BEC", VA = "0x5D5BEC")]
		public bool IsSettingParticleCount()
		{
			return default(bool);
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0x5CE8A8", Offset = "0x5CE8A8", VA = "0x5CE8A8")]
		public static void SetParticleCount(PlaygroundParticlesC playgroundParticles, int amount)
		{
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0x5F6350", Offset = "0x5F6350", VA = "0x5F6350")]
		private static void SetParticleCountAsyncFriendly(PlaygroundParticlesC playgroundParticles, int amount)
		{
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0x5D5C24", Offset = "0x5D5C24", VA = "0x5D5C24")]
		public bool UpdateSystem()
		{
			return default(bool);
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0x5D8EAC", Offset = "0x5D8EAC", VA = "0x5D8EAC")]
		public void UpdateShuriken()
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0x5D2964", Offset = "0x5D2964", VA = "0x5D2964")]
		public static void SetInitialTargetPosition(PlaygroundParticlesC playgroundParticles, Vector3 position, bool refreshParticleSystem)
		{
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0x5D2C40", Offset = "0x5D2C40", VA = "0x5D2C40")]
		public static void Emission(PlaygroundParticlesC playgroundParticles, bool emission, bool callRestEmission)
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0x5FC1A0", Offset = "0x5FC1A0", VA = "0x5FC1A0")]
		public static float SignedAngle(Vector3 a, Vector3 b, Vector3 n)
		{
			return default(float);
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0x5FC300", Offset = "0x5FC300", VA = "0x5FC300")]
		public static Vector3 RandomVector3(System.Random random, Vector3 v1, Vector3 v2)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0x5D6404", Offset = "0x5D6404", VA = "0x5D6404")]
		public bool PrepareThreadedCalculations()
		{
			return default(bool);
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0x5E4E18", Offset = "0x5E4E18", VA = "0x5E4E18")]
		public static void NewCalculatedThread(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0x5E4F88", Offset = "0x5E4F88", VA = "0x5E4F88")]
		public static void NewCalculatedThread(PlaygroundParticlesC[] playgroundParticles)
		{
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0x5FC304", Offset = "0x5FC304", VA = "0x5FC304")]
		private Color32 GetParticleColor(int p, float normalizedLife, float normalizedP)
		{
			return default(Color32);
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0x5FA964", Offset = "0x5FA964", VA = "0x5FA964")]
		private void SetSourcePosition(int p)
		{
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0x5D9E74", Offset = "0x5D9E74", VA = "0x5D9E74")]
		public static void ThreadedCalculations(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0x5FD1C8", Offset = "0x5FD1C8", VA = "0x5FD1C8")]
		public static void SendDeathEvents(PlaygroundParticlesC playgroundParticles, int p)
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0x5E5E90", Offset = "0x5E5E90", VA = "0x5E5E90")]
		public static void Turbulence(PlaygroundParticlesC playgroundParticles, SimplexNoise turbulenceSimplex, int p, float t, TURBULENCETYPE turbulenceType, float turbulenceTimeScale, float turbulenceScale, float turbulenceStrength, bool turbulenceApplyLifetimeStrength, AnimationCurve turbulenceLifetimeStrength)
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0x5FEAFC", Offset = "0x5FEAFC", VA = "0x5FEAFC")]
		public void CalculateCollisions()
		{
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0x5F74A0", Offset = "0x5F74A0", VA = "0x5F74A0")]
		public static void Collisions(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0x5FC88C", Offset = "0x5FC88C", VA = "0x5FC88C")]
		public static Vector3 GetOverflow2(Vector3 overflow, int currentVal, int maxVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0x5FC8D4", Offset = "0x5FC8D4", VA = "0x5FC8D4")]
		public static Vector3 GetOverflow2(Vector3 overflow, Vector3 direction, int currentVal, int maxVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0x5FC928", Offset = "0x5FC928", VA = "0x5FC928")]
		public static Vector3 Vector3Scale(Vector3 v1, Vector3 v2)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0x5FD7C4", Offset = "0x5FD7C4", VA = "0x5FD7C4")]
		public static void CalculateManipulator(PlaygroundParticlesC playgroundParticles, ManipulatorObjectC thisManipulator, int p, float t, float life, Vector3 particlePosition, Vector3 manipulatorPosition, bool localSpace)
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0x5FEB28", Offset = "0x5FEB28", VA = "0x5FEB28")]
		public static void PropertyManipulator(PlaygroundParticlesC playgroundParticles, ManipulatorObjectC thisManipulator, ManipulatorPropertyC thisManipulatorProperty, float manipulatorStrength, int p, float t, Vector3 particlePosition, Vector3 manipulatorPosition, float manipulatorDistance, bool localSpace, bool contains)
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0x5D2EC4", Offset = "0x5D2EC4", VA = "0x5D2EC4")]
		public void RefreshScatter()
		{
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0x5D3BA0", Offset = "0x5D3BA0", VA = "0x5D3BA0")]
		public static float RandomRange(System.Random random, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0x5ED380", Offset = "0x5ED380", VA = "0x5ED380")]
		public static Vector3 RandomRange(System.Random random, Vector3 min, Vector3 max)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0x5F36F0", Offset = "0x5F36F0", VA = "0x5F36F0")]
		public static Vector3 RandomRangeSpherical(System.Random random, float min, float max)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0x5F3870", Offset = "0x5F3870", VA = "0x5F3870")]
		public static Vector3 RandomRangeSpherical(System.Random random, float min, float max, float step)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0x604DEC", Offset = "0x604DEC", VA = "0x604DEC")]
		public static Vector3 RandomRangeSpherical(System.Random random, float min, float max, float sectorA, float sectorB)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0x604F90", Offset = "0x604F90", VA = "0x604F90")]
		public static Vector3 RandomRangeSpherical(System.Random random, float min, float max, float sectorA, float sectorB, float step)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0x5F2CA0", Offset = "0x5F2CA0", VA = "0x5F2CA0")]
		public static float[] RandomFloat(int length, float min, float max, System.Random random)
		{
			return null;
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0x5FC968", Offset = "0x5FC968", VA = "0x5FC968")]
		public void InactivateParticle(int particleId)
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0x5ECA4C", Offset = "0x5ECA4C", VA = "0x5ECA4C")]
		public void InactivateParticles()
		{
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0x5EDA1C", Offset = "0x5EDA1C", VA = "0x5EDA1C")]
		public static void Rebirth(PlaygroundParticlesC playgroundParticles, int p, System.Random random)
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0x5FD12C", Offset = "0x5FD12C", VA = "0x5FD12C")]
		private void SendEvent(EVENTTYPEC eventType, int p)
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0x605C70", Offset = "0x605C70", VA = "0x605C70")]
		private void SendEvent(EVENTTYPEC eventType, int p, Vector3 preEventVelocity)
		{
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0x5FEB04", Offset = "0x5FEB04", VA = "0x5FEB04")]
		private void SendEvent(EVENTTYPEC eventType, int p, Vector3 preEventVelocity, Transform collisionTransform)
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0x5FEB10", Offset = "0x5FEB10", VA = "0x5FEB10")]
		private void SendEvent(EVENTTYPEC eventType, int p, Vector3 preEventVelocity, Transform collisionTransform, Collider collisionCollider)
		{
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0x5FEB18", Offset = "0x5FEB18", VA = "0x5FEB18")]
		private void SendEvent(EVENTTYPEC eventType, int p, Vector3 preEventVelocity, Transform collisionTransform, Collider2D collisionCollider2D)
		{
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0x605130", Offset = "0x605130", VA = "0x605130")]
		private void SendEvent(EVENTTYPEC eventType, int p, Vector3 preEventVelocity, Transform collisionTransform, Collider collisionCollider, Collider2D collisionCollider2D)
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0x5CFBC0", Offset = "0x5CFBC0", VA = "0x5CFBC0")]
		public bool UpdateEventParticle(PlaygroundEventParticle eParticle, int p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0x605C80", Offset = "0x605C80", VA = "0x605C80")]
		public void RemoveState(int i)
		{
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0x5D2D88", Offset = "0x5D2D88", VA = "0x5D2D88")]
		public static void Clear(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0x605D70", Offset = "0x605D70", VA = "0x605D70")]
		public void Save()
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0x606138", Offset = "0x606138", VA = "0x606138")]
		public void Save(string saveName)
		{
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0x6061EC", Offset = "0x6061EC", VA = "0x6061EC")]
		public void SaveAsynchronous()
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0x606398", Offset = "0x606398", VA = "0x606398")]
		public void SaveAsynchronous(string saveName)
		{
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0x605E74", Offset = "0x605E74", VA = "0x605E74")]
		private void SaveRoutine(string saveName)
		{
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0x606300", Offset = "0x606300", VA = "0x606300")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B6394", Offset = "0x4B6394")]
		private IEnumerator SaveAsynchronousRoutine(string saveName)
		{
			return null;
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0x60645C", Offset = "0x60645C", VA = "0x60645C")]
		public void Load(int loadPointer)
		{
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0x606608", Offset = "0x606608", VA = "0x606608")]
		public void Load(string loadName)
		{
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0x6067BC", Offset = "0x6067BC", VA = "0x6067BC")]
		public void LoadAndApplyMask(int loadPointer, int loadMask)
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0x606558", Offset = "0x606558", VA = "0x606558")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B63F8", Offset = "0x4B63F8")]
		private IEnumerator LoadRoutine(int loadPointer, int mask)
		{
			return null;
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0x6068C8", Offset = "0x6068C8", VA = "0x6068C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B645C", Offset = "0x4B645C")]
		private IEnumerator LoadTransition(int loadPointer)
		{
			return null;
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0x606960", Offset = "0x606960", VA = "0x606960")]
		private float TransitionType(INDIVIDUALTRANSITIONTYPEC thisTransitionType, float t)
		{
			return default(float);
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0x606A5C", Offset = "0x606A5C", VA = "0x606A5C")]
		private void CheckReferences()
		{
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0x606D58", Offset = "0x606D58", VA = "0x606D58")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B64C0", Offset = "0x4B64C0")]
		public IEnumerator YieldedRefresh()
		{
			return null;
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0x606DCC", Offset = "0x606DCC", VA = "0x606DCC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B6524", Offset = "0x4B6524")]
		private IEnumerator Prewarm(float time, int resolution)
		{
			return null;
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0x606E84", Offset = "0x606E84", VA = "0x606E84")]
		private void PrewarmStepper(float time, int resolution)
		{
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0x606FC0", Offset = "0x606FC0", VA = "0x606FC0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0x5F6D8C", Offset = "0x5F6D8C", VA = "0x5F6D8C")]
		public void Start()
		{
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0x5F6D18", Offset = "0x5F6D18", VA = "0x5F6D18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B6588", Offset = "0x4B6588")]
		public IEnumerator Boot()
		{
			return null;
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0x607254", Offset = "0x607254", VA = "0x607254")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0x607570", Offset = "0x607570", VA = "0x607570")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0x607578", Offset = "0x607578", VA = "0x607578")]
		public PlaygroundParticlesC()
		{
		}
	}
	[Token(Token = "0x2000319")]
	public class MeshParticles : PlaygroundParticlesC
	{
		[Token(Token = "0x600179F")]
		[Address(RVA = "0x64F10C", Offset = "0x64F10C", VA = "0x64F10C")]
		public static PlaygroundParticlesC CreateMeshParticles(Mesh[] meshes, Texture2D[] textures, Texture2D[] heightMap, string name, Vector3 position, Quaternion rotation, float particleScale, Vector3[] offsets, Material material)
		{
			return null;
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0x64F5E4", Offset = "0x64F5E4", VA = "0x64F5E4")]
		public static void Add(PlaygroundParticlesC meshParticles, Mesh mesh, float scale, Vector3 offset, string stateName, Transform stateTransform)
		{
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0x64F744", Offset = "0x64F744", VA = "0x64F744")]
		public static void Add(PlaygroundParticlesC meshParticles, Mesh mesh, Texture2D texture, float scale, Vector3 offset, string stateName, Transform stateTransform)
		{
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0x64F8B4", Offset = "0x64F8B4", VA = "0x64F8B4")]
		public MeshParticles()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200031A")]
	public class PlaygroundSave
	{
		[Token(Token = "0x20004E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A960C", Offset = "0x4A960C")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4001BCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlaygroundSave <>4__this;

			[Token(Token = "0x4001BCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PlaygroundParticlesC loadTo;

			[Token(Token = "0x6001F7B")]
			[Address(RVA = "0x6FCEA0", Offset = "0x6FCEA0", VA = "0x6FCEA0")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6001F7C")]
			[Address(RVA = "0x6FD1B8", Offset = "0x6FD1B8", VA = "0x6FD1B8")]
			internal void <Load>b__0()
			{
			}
		}

		[Token(Token = "0x20004E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A961C", Offset = "0x4A961C")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4001BCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlaygroundParticlesC playgroundParticles;

			[Token(Token = "0x4001BD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PlaygroundSave <>4__this;

			[Token(Token = "0x6001F7D")]
			[Address(RVA = "0x6FD0A0", Offset = "0x6FD0A0", VA = "0x6FD0A0")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6001F7E")]
			[Address(RVA = "0x6FD2D0", Offset = "0x6FD2D0", VA = "0x6FD2D0")]
			internal void <SaveAsync>b__0()
			{
			}
		}

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string name;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public float time;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public float lifetime;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public int particleCount;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public float version;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public PlaygroundParticlesC settings;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public PlaygroundTransformC transform;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Material material;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public int loadMode;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public bool loadTransform;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		[HideInInspector]
		public bool loadMaterial;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		[HideInInspector]
		public bool setMaterialAfterTransition;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public float transitionMultiplier;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		public INDIVIDUALTRANSITIONTYPEC transitionType;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public bool unfolded;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool isLoading;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool isSaving;

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0x6F5BB4", Offset = "0x6F5BB4", VA = "0x6F5BB4")]
		public bool IsLoading()
		{
			return default(bool);
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x6F7D18", Offset = "0x6F7D18", VA = "0x6F7D18")]
		public bool IsSaving()
		{
			return default(bool);
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0x6F5990", Offset = "0x6F5990", VA = "0x6F5990")]
		public void Load(PlaygroundParticlesC loadTo)
		{
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0x6FCF5C", Offset = "0x6FCF5C", VA = "0x6FCF5C")]
		public void Save(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0x6F7B5C", Offset = "0x6F7B5C", VA = "0x6F7B5C")]
		public void SaveAsync(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0x6FD0A8", Offset = "0x6FD0A8", VA = "0x6FD0A8")]
		public PlaygroundSave Clone()
		{
			return null;
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0x6F7B3C", Offset = "0x6F7B3C", VA = "0x6F7B3C")]
		public PlaygroundSave()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200031B")]
	public class PlaygroundEventParticle
	{
		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public float initialSize;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[HideInInspector]
		public float size;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public float rotation;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public float life;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public float totalLifetime;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public float birth;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public float birthDelay;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public float death;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public bool emission;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[HideInInspector]
		public bool rebirth;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public float lifetimeOffset;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Vector3 velocity;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public Vector3 initialVelocity;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public Vector3 initialLocalVelocity;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		public Vector3 position;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Vector3 targetPosition;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[HideInInspector]
		public Vector3 targetDirection;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public Vector3 previousTargetPosition;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[HideInInspector]
		public Vector3 previousParticlePosition;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public Vector3 collisionParticlePosition;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[HideInInspector]
		public Vector3 localSpaceMovementCompensation;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public Vector3 scatterPosition;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[HideInInspector]
		public float initialRotation;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public float rotationSpeed;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[HideInInspector]
		public Color32 color;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public Color32 scriptedColor;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[HideInInspector]
		public Color32 initialColor;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public int lifetimeColorId;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[HideInInspector]
		public bool noForce;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
		[HideInInspector]
		public bool isNonBirthed;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD6")]
		[HideInInspector]
		public bool isFirstLoop;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		public int particleId;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[HideInInspector]
		public int particleSystemId;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public int manipulatorId;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[HideInInspector]
		public bool changedByProperty;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
		[HideInInspector]
		public bool changedByPropertyColor;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE6")]
		[HideInInspector]
		public bool changedByPropertyColorLerp;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE7")]
		[HideInInspector]
		public bool changedByPropertyColorKeepAlpha;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[HideInInspector]
		public bool changedByPropertySize;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
		[HideInInspector]
		public bool changedByPropertyTarget;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEA")]
		[HideInInspector]
		public bool changedByPropertyDeath;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[HideInInspector]
		public int propertyTarget;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		public int propertyId;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[HideInInspector]
		public int propertyColorId;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[HideInInspector]
		public int excludeFromManipulatorId;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[HideInInspector]
		public bool isMasked;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[HideInInspector]
		public float maskAlpha;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[HideInInspector]
		public Transform collisionTransform;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[HideInInspector]
		public Collider collisionCollider;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[HideInInspector]
		public Collider2D collisionCollider2D;

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0x5D0A0C", Offset = "0x5D0A0C", VA = "0x5D0A0C")]
		public PlaygroundEventParticle Clone()
		{
			return null;
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0x5CFBB8", Offset = "0x5CFBB8", VA = "0x5CFBB8")]
		public PlaygroundEventParticle()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200031C")]
	public class PlaygroundCache
	{
		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public float[] initialSize;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public float[] size;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public float[] rotation;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public float[] life;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public float[] lifetimeSubtraction;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public float[] birth;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float[] birthDelay;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public float[] death;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public bool[] emission;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public bool[] rebirth;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public float[] lifetimeOffset;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Vector3[] velocity;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Vector3[] initialVelocity;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public Vector3[] initialLocalVelocity;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public Vector3[] position;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public Vector3[] targetPosition;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public Vector3[] targetDirection;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public Vector3[] previousTargetPosition;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public Vector3[] previousParticlePosition;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public Vector3[] collisionParticlePosition;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public Vector3[] localSpaceMovementCompensation;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public Vector3[] scatterPosition;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public float[] initialRotation;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public float[] rotationSpeed;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public Color32[] color;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		public Color32[] scriptedColor;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public Color32[] initialColor;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[HideInInspector]
		public int[] lifetimeColorId;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		public bool[] noForce;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[HideInInspector]
		public bool[] isNonBirthed;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[HideInInspector]
		public bool[] isFirstLoop;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[HideInInspector]
		public bool[] simulate;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[HideInInspector]
		public bool[] isCalculatedThisFrame;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[HideInInspector]
		public bool[] changedByProperty;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[HideInInspector]
		public bool[] changedByPropertyColor;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[HideInInspector]
		public bool[] changedByPropertyColorLerp;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[HideInInspector]
		public bool[] changedByPropertyColorKeepAlpha;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[HideInInspector]
		public bool[] changedByPropertySize;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[HideInInspector]
		public bool[] changedByPropertyTarget;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[HideInInspector]
		public bool[] changedByPropertyDeath;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[HideInInspector]
		public int[] propertyTarget;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[HideInInspector]
		public int[] propertyId;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[HideInInspector]
		public int[] propertyColorId;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[HideInInspector]
		public int[] manipulatorId;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[HideInInspector]
		public int[] excludeFromManipulatorId;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[HideInInspector]
		public float[] lifetimeLoss;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[HideInInspector]
		public bool[] isMasked;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[HideInInspector]
		public float[] maskAlpha;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[HideInInspector]
		public int[] maskSorting;

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0x5E7B90", Offset = "0x5E7B90", VA = "0x5E7B90")]
		public PlaygroundCache Clone()
		{
			return null;
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x5E83F0", Offset = "0x5E83F0", VA = "0x5E83F0")]
		public PlaygroundCache()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200031D")]
	public class CollisionCache
	{
		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public bool[] hasCollided;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Vector3[] collisionPosition;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Vector3[] collisionNormal;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Transform[] collisionTransform;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public GameObject[] collisionGameObject;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Vector3[] collisionTransformPosition;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Vector3[] stickyPosition;

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0x6490FC", Offset = "0x6490FC", VA = "0x6490FC")]
		public CollisionCache(int amount)
		{
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x6491E8", Offset = "0x6491E8", VA = "0x6491E8")]
		public void Set(int index, Vector3 position, Vector3 normal, Transform transform)
		{
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x6493F4", Offset = "0x6493F4", VA = "0x6493F4")]
		public void SetSticky(int index, Vector3 position, Vector3 normal, float offset, Transform transform)
		{
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0x64973C", Offset = "0x64973C", VA = "0x64973C")]
		public void UpdateStickyPosition(int index)
		{
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0x6499DC", Offset = "0x6499DC", VA = "0x6499DC")]
		public void Reset(int index)
		{
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0x649A68", Offset = "0x649A68", VA = "0x649A68")]
		public void ClearCollisions()
		{
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0x649AEC", Offset = "0x649AEC", VA = "0x649AEC")]
		public CollisionCache Clone()
		{
			return null;
		}
	}
	[Token(Token = "0x200031E")]
	public class SimplexNoise
	{
		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int[][] grad3;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int[][] grad4;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int[] p;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int[] perm;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static int[][] simplex;

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0x701230", Offset = "0x701230", VA = "0x701230")]
		static SimplexNoise()
		{
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0x7040C0", Offset = "0x7040C0", VA = "0x7040C0")]
		private static int fastfloor(double x)
		{
			return default(int);
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0x7040D4", Offset = "0x7040D4", VA = "0x7040D4")]
		private static double dot(int[] g, double x, double y)
		{
			return default(double);
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0x704158", Offset = "0x704158", VA = "0x704158")]
		private static double dot(int[] g, double x, double y, double z)
		{
			return default(double);
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0x70421C", Offset = "0x70421C", VA = "0x70421C")]
		private static double dot(int[] g, double x, double y, double z, double w)
		{
			return default(double);
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0x704310", Offset = "0x704310", VA = "0x704310")]
		public double noise(double xin, double yin, double zin)
		{
			return default(double);
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0x704C2C", Offset = "0x704C2C", VA = "0x704C2C")]
		public double noise(double x, double y, double z, double w)
		{
			return default(double);
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0x705F28", Offset = "0x705F28", VA = "0x705F28")]
		public SimplexNoise()
		{
		}
	}
}
namespace DigitalOpus.MB.Core
{
	[Token(Token = "0x200031F")]
	public static class MB_TGAWriter
	{
		[Token(Token = "0x60017BD")]
		[Address(RVA = "0xB2A6E4", Offset = "0xB2A6E4", VA = "0xB2A6E4")]
		public static void Write(Color[] pixels, int width, int height, string path)
		{
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0xB2A74C", Offset = "0xB2A74C", VA = "0xB2A74C")]
		public static void Write(Color[] pixels, int width, int height, Stream output)
		{
		}
	}
	[Token(Token = "0x2000320")]
	public class MB_Utility
	{
		[Token(Token = "0x20004E4")]
		public struct MeshAnalysisResult
		{
			[Token(Token = "0x4001BD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Rect uvRect;

			[Token(Token = "0x4001BD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool hasOutOfBoundsUVs;

			[Token(Token = "0x4001BD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool hasOverlappingSubmeshVerts;

			[Token(Token = "0x4001BD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
			public bool hasOverlappingSubmeshTris;

			[Token(Token = "0x4001BD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
			public bool hasUVs;

			[Token(Token = "0x4001BD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float submeshArea;
		}

		[Token(Token = "0x20004E5")]
		private class MB_Triangle
		{
			[Token(Token = "0x4001BD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int submeshIdx;

			[Token(Token = "0x4001BD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int[] vs;

			[Token(Token = "0x6001F7F")]
			[Address(RVA = "0x711E54", Offset = "0x711E54", VA = "0x711E54")]
			public bool isSame(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6001F80")]
			[Address(RVA = "0x712080", Offset = "0x712080", VA = "0x712080")]
			public bool sharesVerts(MB_Triangle obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6001F81")]
			[Address(RVA = "0x711CCC", Offset = "0x711CCC", VA = "0x711CCC")]
			public void Initialize(int[] ts, int idx, int sIdx)
			{
			}

			[Token(Token = "0x6001F82")]
			[Address(RVA = "0x711C6C", Offset = "0x711C6C", VA = "0x711C6C")]
			public MB_Triangle()
			{
			}
		}

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool DO_INTEGRITY_CHECKS;

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0x710028", Offset = "0x710028", VA = "0x710028")]
		public static Texture2D createTextureCopy(Texture2D source)
		{
			return null;
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0x71011C", Offset = "0x71011C", VA = "0x71011C")]
		public static bool ArrayBIsSubsetOfA(object[] a, object[] b)
		{
			return default(bool);
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0x7101F0", Offset = "0x7101F0", VA = "0x7101F0")]
		public static Material[] GetGOMaterials(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x7108B0", Offset = "0x7108B0", VA = "0x7108B0")]
		public static Mesh GetMesh(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x710A20", Offset = "0x710A20", VA = "0x710A20")]
		public static void SetMesh(GameObject go, Mesh m)
		{
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0x710B98", Offset = "0x710B98", VA = "0x710B98")]
		public static Renderer GetRenderer(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0x710CCC", Offset = "0x710CCC", VA = "0x710CCC")]
		public static void DisableRendererInSource(GameObject go)
		{
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0x710E2C", Offset = "0x710E2C", VA = "0x710E2C")]
		public static bool hasOutOfBoundsUVs(Mesh m, ref Rect uvBounds)
		{
			return default(bool);
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0x710EC8", Offset = "0x710EC8", VA = "0x710EC8")]
		public static bool hasOutOfBoundsUVs(Mesh m, ref MeshAnalysisResult putResultHere, int submeshIndex = -1, int uvChannel = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0x711028", Offset = "0x711028", VA = "0x711028")]
		public static bool hasOutOfBoundsUVs(Vector2[] uvs, Mesh m, ref MeshAnalysisResult putResultHere, int submeshIndex = -1)
		{
			return default(bool);
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0x71153C", Offset = "0x71153C", VA = "0x71153C")]
		public static void setSolidColor(Texture2D t, Color c)
		{
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0x711624", Offset = "0x711624", VA = "0x711624")]
		public static Texture2D resampleTexture(Texture2D source, int newWidth, int newHeight)
		{
			return null;
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0x7117FC", Offset = "0x7117FC", VA = "0x7117FC")]
		public static bool AreAllSharedMaterialsDistinct(Material[] sharedMaterials)
		{
			return default(bool);
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0x711924", Offset = "0x711924", VA = "0x711924")]
		public static int doSubmeshesShareVertsOrTris(Mesh m, ref MeshAnalysisResult mar)
		{
			return default(int);
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x712480", Offset = "0x712480", VA = "0x712480")]
		public static bool GetBounds(GameObject go, out Bounds b)
		{
			return default(bool);
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0x7126FC", Offset = "0x7126FC", VA = "0x7126FC")]
		public static void Destroy(UnityEngine.Object o)
		{
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x7127A0", Offset = "0x7127A0", VA = "0x7127A0")]
		public MB_Utility()
		{
		}
	}
	[Token(Token = "0x2000321")]
	public delegate void ProgressUpdateDelegate(string msg, float progress);
	[Token(Token = "0x2000322")]
	public delegate bool ProgressUpdateCancelableDelegate(string msg, float progress);
	[Token(Token = "0x2000323")]
	public enum MB_ObjsToCombineTypes
	{
		[Token(Token = "0x40014C6")]
		prefabOnly,
		[Token(Token = "0x40014C7")]
		sceneObjOnly,
		[Token(Token = "0x40014C8")]
		dontCare
	}
	[Token(Token = "0x2000324")]
	public enum MB_OutputOptions
	{
		[Token(Token = "0x40014CA")]
		bakeIntoPrefab,
		[Token(Token = "0x40014CB")]
		bakeMeshsInPlace,
		[Token(Token = "0x40014CC")]
		bakeTextureAtlasesOnly,
		[Token(Token = "0x40014CD")]
		bakeIntoSceneObject
	}
	[Token(Token = "0x2000325")]
	public enum MB_RenderType
	{
		[Token(Token = "0x40014CF")]
		meshRenderer,
		[Token(Token = "0x40014D0")]
		skinnedMeshRenderer
	}
	[Token(Token = "0x2000326")]
	public enum MB2_OutputOptions
	{
		[Token(Token = "0x40014D2")]
		bakeIntoSceneObject,
		[Token(Token = "0x40014D3")]
		bakeMeshAssetsInPlace,
		[Token(Token = "0x40014D4")]
		bakeIntoPrefab
	}
	[Token(Token = "0x2000327")]
	public enum MB2_LightmapOptions
	{
		[Token(Token = "0x40014D6")]
		preserve_current_lightmapping,
		[Token(Token = "0x40014D7")]
		ignore_UV2,
		[Token(Token = "0x40014D8")]
		copy_UV2_unchanged,
		[Token(Token = "0x40014D9")]
		generate_new_UV2_layout,
		[Token(Token = "0x40014DA")]
		copy_UV2_unchanged_to_separate_rects
	}
	[Token(Token = "0x2000328")]
	public enum MB2_PackingAlgorithmEnum
	{
		[Token(Token = "0x40014DC")]
		UnitysPackTextures,
		[Token(Token = "0x40014DD")]
		MeshBakerTexturePacker,
		[Token(Token = "0x40014DE")]
		MeshBakerTexturePacker_Fast,
		[Token(Token = "0x40014DF")]
		MeshBakerTexturePacker_Horizontal,
		[Token(Token = "0x40014E0")]
		MeshBakerTexturePacker_Vertical
	}
	[Token(Token = "0x2000329")]
	public enum MB_TextureTilingTreatment
	{
		[Token(Token = "0x40014E2")]
		none,
		[Token(Token = "0x40014E3")]
		considerUVs,
		[Token(Token = "0x40014E4")]
		edgeToEdgeX,
		[Token(Token = "0x40014E5")]
		edgeToEdgeY,
		[Token(Token = "0x40014E6")]
		edgeToEdgeXY,
		[Token(Token = "0x40014E7")]
		unknown
	}
	[Token(Token = "0x200032A")]
	public enum MB2_ValidationLevel
	{
		[Token(Token = "0x40014E9")]
		none,
		[Token(Token = "0x40014EA")]
		quick,
		[Token(Token = "0x40014EB")]
		robust
	}
	[Token(Token = "0x200032B")]
	public interface MB2_EditorMethodsInterface
	{
		[Token(Token = "0x60017D9")]
		void Clear();

		[Token(Token = "0x60017DA")]
		void RestoreReadFlagsAndFormats(ProgressUpdateDelegate progressInfo);

		[Token(Token = "0x60017DB")]
		void SetReadWriteFlag(Texture2D tx, bool isReadable, bool addToList);

		[Token(Token = "0x60017DC")]
		void AddTextureFormat(Texture2D tx, bool isNormalMap);

		[Token(Token = "0x60017DD")]
		void SaveAtlasToAssetDatabase(Texture2D atlas, ShaderTextureProperty texPropertyName, int atlasNum, Material resMat);

		[Token(Token = "0x60017DE")]
		bool IsNormalMap(Texture2D tx);

		[Token(Token = "0x60017DF")]
		string GetPlatformString();

		[Token(Token = "0x60017E0")]
		void SetTextureSize(Texture2D tx, int size);

		[Token(Token = "0x60017E1")]
		bool IsCompressed(Texture2D tx);

		[Token(Token = "0x60017E2")]
		void CheckBuildSettings(long estimatedAtlasSize);

		[Token(Token = "0x60017E3")]
		bool CheckPrefabTypes(MB_ObjsToCombineTypes prefabType, List<GameObject> gos);

		[Token(Token = "0x60017E4")]
		bool ValidateSkinnedMeshes(List<GameObject> mom);

		[Token(Token = "0x60017E5")]
		void CommitChangesToAssets();

		[Token(Token = "0x60017E6")]
		void OnPreTextureBake();

		[Token(Token = "0x60017E7")]
		void OnPostTextureBake();

		[Token(Token = "0x60017E8")]
		void Destroy(UnityEngine.Object o);
	}
	[Token(Token = "0x200032C")]
	public enum MB2_LogLevel
	{
		[Token(Token = "0x40014ED")]
		none,
		[Token(Token = "0x40014EE")]
		error,
		[Token(Token = "0x40014EF")]
		warn,
		[Token(Token = "0x40014F0")]
		info,
		[Token(Token = "0x40014F1")]
		debug,
		[Token(Token = "0x40014F2")]
		trace
	}
	[Token(Token = "0x200032D")]
	public class MB2_Log
	{
		[Token(Token = "0x60017E9")]
		[Address(RVA = "0x6E1D50", Offset = "0x6E1D50", VA = "0x6E1D50")]
		public static void Log(MB2_LogLevel l, string msg, MB2_LogLevel currentThreshold)
		{
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0x6E1F60", Offset = "0x6E1F60", VA = "0x6E1F60")]
		public static string Error(string msg, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0x6E203C", Offset = "0x6E203C", VA = "0x6E203C")]
		public static string Warn(string msg, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0x6E2118", Offset = "0x6E2118", VA = "0x6E2118")]
		public static string Info(string msg, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0x6E21F4", Offset = "0x6E21F4", VA = "0x6E21F4")]
		public static string LogDebug(string msg, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0x6E22D0", Offset = "0x6E22D0", VA = "0x6E22D0")]
		public static string Trace(string msg, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0x6E23AC", Offset = "0x6E23AC", VA = "0x6E23AC")]
		public MB2_Log()
		{
		}
	}
	[Token(Token = "0x200032E")]
	public class ObjectLog
	{
		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int pos;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string[] logMessages;

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0x713310", Offset = "0x713310", VA = "0x713310")]
		private void _CacheLogMessage(string msg)
		{
		}

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0x7133DC", Offset = "0x7133DC", VA = "0x7133DC")]
		public ObjectLog(short bufferSize)
		{
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0x713450", Offset = "0x713450", VA = "0x713450")]
		public void Log(MB2_LogLevel l, string msg, MB2_LogLevel currentThreshold)
		{
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0x71348C", Offset = "0x71348C", VA = "0x71348C")]
		public void Error(string msg, params object[] args)
		{
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0x7134C0", Offset = "0x7134C0", VA = "0x7134C0")]
		public void Warn(string msg, params object[] args)
		{
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0x7134F4", Offset = "0x7134F4", VA = "0x7134F4")]
		public void Info(string msg, params object[] args)
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0x713528", Offset = "0x713528", VA = "0x713528")]
		public void LogDebug(string msg, params object[] args)
		{
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0x71355C", Offset = "0x71355C", VA = "0x71355C")]
		public void Trace(string msg, params object[] args)
		{
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0x713590", Offset = "0x713590", VA = "0x713590")]
		public string Dump()
		{
			return null;
		}
	}
	[Token(Token = "0x200032F")]
	public interface MBVersionInterface
	{
		[Token(Token = "0x60017F9")]
		string version();

		[Token(Token = "0x60017FA")]
		int GetMajorVersion();

		[Token(Token = "0x60017FB")]
		int GetMinorVersion();

		[Token(Token = "0x60017FC")]
		bool GetActive(GameObject go);

		[Token(Token = "0x60017FD")]
		void SetActive(GameObject go, bool isActive);

		[Token(Token = "0x60017FE")]
		void SetActiveRecursively(GameObject go, bool isActive);

		[Token(Token = "0x60017FF")]
		UnityEngine.Object[] FindSceneObjectsOfType(Type t);

		[Token(Token = "0x6001800")]
		bool IsRunningAndMeshNotReadWriteable(Mesh m);

		[Token(Token = "0x6001801")]
		Vector2[] GetMeshUV3orUV4(Mesh m, bool get3, MB2_LogLevel LOG_LEVEL);

		[Token(Token = "0x6001802")]
		void MeshClear(Mesh m, bool t);

		[Token(Token = "0x6001803")]
		void MeshAssignUV3(Mesh m, Vector2[] uv3s);

		[Token(Token = "0x6001804")]
		void MeshAssignUV4(Mesh m, Vector2[] uv4s);

		[Token(Token = "0x6001805")]
		Vector4 GetLightmapTilingOffset(Renderer r);

		[Token(Token = "0x6001806")]
		Transform[] GetBones(Renderer r);

		[Token(Token = "0x6001807")]
		void OptimizeMesh(Mesh m);

		[Token(Token = "0x6001808")]
		int GetBlendShapeFrameCount(Mesh m, int shapeIndex);

		[Token(Token = "0x6001809")]
		float GetBlendShapeFrameWeight(Mesh m, int shapeIndex, int frameIndex);

		[Token(Token = "0x600180A")]
		void GetBlendShapeFrameVertices(Mesh m, int shapeIndex, int frameIndex, Vector3[] vs, Vector3[] ns, Vector3[] ts);

		[Token(Token = "0x600180B")]
		void ClearBlendShapes(Mesh m);

		[Token(Token = "0x600180C")]
		void AddBlendShapeFrame(Mesh m, string nm, float wt, Vector3[] vs, Vector3[] ns, Vector3[] ts);

		[Token(Token = "0x600180D")]
		int MaxMeshVertexCount();

		[Token(Token = "0x600180E")]
		void SetMeshIndexFormatAndClearMesh(Mesh m, int numVerts, bool vertices, bool justClearTriangles);
	}
	[Token(Token = "0x2000330")]
	public class MBVersion
	{
		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static MBVersionInterface _MBVersion;

		[Token(Token = "0x600180F")]
		[Address(RVA = "0xB283FC", Offset = "0xB283FC", VA = "0xB283FC")]
		private static MBVersionInterface _CreateMBVersionConcrete()
		{
			return null;
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0xB284F4", Offset = "0xB284F4", VA = "0xB284F4")]
		public static string version()
		{
			return null;
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0xB0B8F0", Offset = "0xB0B8F0", VA = "0xB0B8F0")]
		public static int GetMajorVersion()
		{
			return default(int);
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0xB0B9DC", Offset = "0xB0B9DC", VA = "0xB0B9DC")]
		public static int GetMinorVersion()
		{
			return default(int);
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0xB285DC", Offset = "0xB285DC", VA = "0xB285DC")]
		public static bool GetActive(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0xB286D8", Offset = "0xB286D8", VA = "0xB286D8")]
		public static void SetActive(GameObject go, bool isActive)
		{
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0xB287DC", Offset = "0xB287DC", VA = "0xB287DC")]
		public static void SetActiveRecursively(GameObject go, bool isActive)
		{
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0xB288E0", Offset = "0xB288E0", VA = "0xB288E0")]
		public static UnityEngine.Object[] FindSceneObjectsOfType(Type t)
		{
			return null;
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0xB289DC", Offset = "0xB289DC", VA = "0xB289DC")]
		public static bool IsRunningAndMeshNotReadWriteable(Mesh m)
		{
			return default(bool);
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0xB28AD8", Offset = "0xB28AD8", VA = "0xB28AD8")]
		public static Vector2[] GetMeshUV3orUV4(Mesh m, bool get3, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0xB28BEC", Offset = "0xB28BEC", VA = "0xB28BEC")]
		public static void MeshClear(Mesh m, bool t)
		{
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0xB28CF0", Offset = "0xB28CF0", VA = "0xB28CF0")]
		public static void MeshAssignUV3(Mesh m, Vector2[] uv3s)
		{
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0xB28DF4", Offset = "0xB28DF4", VA = "0xB28DF4")]
		public static void MeshAssignUV4(Mesh m, Vector2[] uv4s)
		{
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0xB28EF8", Offset = "0xB28EF8", VA = "0xB28EF8")]
		public static Vector4 GetLightmapTilingOffset(Renderer r)
		{
			return default(Vector4);
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0xB28FF4", Offset = "0xB28FF4", VA = "0xB28FF4")]
		public static Transform[] GetBones(Renderer r)
		{
			return null;
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0xB290F0", Offset = "0xB290F0", VA = "0xB290F0")]
		public static void OptimizeMesh(Mesh m)
		{
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0xB291EC", Offset = "0xB291EC", VA = "0xB291EC")]
		public static int GetBlendShapeFrameCount(Mesh m, int shapeIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0xB292F0", Offset = "0xB292F0", VA = "0xB292F0")]
		public static float GetBlendShapeFrameWeight(Mesh m, int shapeIndex, int frameIndex)
		{
			return default(float);
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0xB29404", Offset = "0xB29404", VA = "0xB29404")]
		public static void GetBlendShapeFrameVertices(Mesh m, int shapeIndex, int frameIndex, Vector3[] vs, Vector3[] ns, Vector3[] ts)
		{
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0xB29538", Offset = "0xB29538", VA = "0xB29538")]
		public static void ClearBlendShapes(Mesh m)
		{
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0xB29634", Offset = "0xB29634", VA = "0xB29634")]
		public static void AddBlendShapeFrame(Mesh m, string nm, float wt, Vector3[] vs, Vector3[] ns, Vector3[] ts)
		{
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0xB29770", Offset = "0xB29770", VA = "0xB29770")]
		public static int MaxMeshVertexCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0xB2985C", Offset = "0xB2985C", VA = "0xB2985C")]
		public static void SetMeshIndexFormatAndClearMesh(Mesh m, int numVerts, bool vertices, bool justClearTriangles)
		{
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0xB29978", Offset = "0xB29978", VA = "0xB29978")]
		public MBVersion()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000331")]
	public class MB3_AgglomerativeClustering
	{
		[Serializable]
		[Token(Token = "0x20004E6")]
		public class ClusterNode
		{
			[Token(Token = "0x4001BD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public item_s leaf;

			[Token(Token = "0x4001BDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ClusterNode cha;

			[Token(Token = "0x4001BDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ClusterNode chb;

			[Token(Token = "0x4001BDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int height;

			[Token(Token = "0x4001BDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float distToMergedCentroid;

			[Token(Token = "0x4001BDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 centroid;

			[Token(Token = "0x4001BDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int[] leafs;

			[Token(Token = "0x4001BE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int idx;

			[Token(Token = "0x4001BE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public bool isUnclustered;

			[Token(Token = "0x6001F83")]
			[Address(RVA = "0x6ED29C", Offset = "0x6ED29C", VA = "0x6ED29C")]
			public ClusterNode(item_s ii, int index)
			{
			}

			[Token(Token = "0x6001F84")]
			[Address(RVA = "0x6ED888", Offset = "0x6ED888", VA = "0x6ED888")]
			public ClusterNode(ClusterNode a, ClusterNode b, int index, int h, float dist, ClusterNode[] clusters)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004E7")]
		public class item_s
		{
			[Token(Token = "0x4001BE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject go;

			[Token(Token = "0x4001BE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 coord;

			[Token(Token = "0x6001F85")]
			[Address(RVA = "0x6EDD7C", Offset = "0x6EDD7C", VA = "0x6EDD7C")]
			public item_s()
			{
			}
		}

		[Token(Token = "0x20004E8")]
		public class ClusterDistance
		{
			[Token(Token = "0x4001BE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ClusterNode a;

			[Token(Token = "0x4001BE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ClusterNode b;

			[Token(Token = "0x6001F86")]
			[Address(RVA = "0x6EDB80", Offset = "0x6EDB80", VA = "0x6EDB80")]
			public ClusterDistance(ClusterNode aa, ClusterNode bb)
			{
			}
		}

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<item_s> items;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ClusterNode[] clusters;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool wasCanceled;

		[Token(Token = "0x40014F9")]
		private const int MAX_PRIORITY_Q_SIZE = 2048;

		[Token(Token = "0x6001827")]
		[Address(RVA = "0x6EBA7C", Offset = "0x6EBA7C", VA = "0x6EBA7C")]
		private float euclidean_distance(Vector3 a, Vector3 b)
		{
			return default(float);
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0x6EBB24", Offset = "0x6EBB24", VA = "0x6EBB24")]
		public bool agglomerate(ProgressUpdateCancelableDelegate progFunc)
		{
			return default(bool);
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0x6ED368", Offset = "0x6ED368", VA = "0x6ED368")]
		private float _RefillPriorityQWithSome(PriorityQueue<float, ClusterDistance> pq, List<ClusterNode> unclustered, ClusterNode[] clusters, ProgressUpdateCancelableDelegate progFunc)
		{
			return default(float);
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0x6EDBB8", Offset = "0x6EDBB8", VA = "0x6EDBB8")]
		public int TestRun(List<GameObject> gos)
		{
			return default(int);
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0x6EDD84", Offset = "0x6EDD84", VA = "0x6EDD84")]
		public static void Main()
		{
		}

		[Token(Token = "0x600182C")]
		public static T NthSmallestElement<T>(List<T> array, int n) where T : IComparable<T>
		{
			return (T)null;
		}

		[Token(Token = "0x600182D")]
		private static List<T> QuickSelectSmallest<T>(List<T> input, int n) where T : IComparable<T>
		{
			return null;
		}

		[Token(Token = "0x600182E")]
		private static int QuickSelectPartition<T>(List<T> array, int startIndex, int endIndex, int pivotIndex) where T : IComparable<T>
		{
			return default(int);
		}

		[Token(Token = "0x600182F")]
		private static void Swap<T>(List<T> array, int index1, int index2)
		{
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0x6EDEA8", Offset = "0x6EDEA8", VA = "0x6EDEA8")]
		public MB3_AgglomerativeClustering()
		{
		}
	}
	[Token(Token = "0x2000332")]
	public class MB3_CopyBoneWeights
	{
		[Token(Token = "0x6001831")]
		[Address(RVA = "0x6EDF20", Offset = "0x6EDF20", VA = "0x6EDF20")]
		public static void CopyBoneWeightsFromSeamMeshToOtherMeshes(float radius, Mesh seamMesh, Mesh[] targetMeshes)
		{
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0x6EEBAC", Offset = "0x6EEBAC", VA = "0x6EEBAC")]
		public MB3_CopyBoneWeights()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000333")]
	public abstract class MB3_MeshCombiner
	{
		[Token(Token = "0x20004E9")]
		public delegate void GenerateUV2Delegate(Mesh m, float hardAngle, float packMargin);

		[Token(Token = "0x20004EA")]
		public class MBBlendShapeKey
		{
			[Token(Token = "0x4001BE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int gameObjecID;

			[Token(Token = "0x4001BE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int blendShapeIndexInSrc;

			[Token(Token = "0x6001F8B")]
			[Address(RVA = "0xAB38FC", Offset = "0xAB38FC", VA = "0xAB38FC")]
			public MBBlendShapeKey(int srcSkinnedMeshRenderGameObjectID, int blendShapeIndexInSource)
			{
			}

			[Token(Token = "0x6001F8C")]
			[Address(RVA = "0xAB3934", Offset = "0xAB3934", VA = "0xAB3934", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6001F8D")]
			[Address(RVA = "0xAB39E0", Offset = "0xAB39E0", VA = "0xAB39E0", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}
		}

		[Token(Token = "0x20004EB")]
		public class MBBlendShapeValue
		{
			[Token(Token = "0x4001BE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject combinedMeshGameObject;

			[Token(Token = "0x4001BE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int blendShapeIndex;

			[Token(Token = "0x6001F8E")]
			[Address(RVA = "0xAB39FC", Offset = "0xAB39FC", VA = "0xAB39FC")]
			public MBBlendShapeValue()
			{
			}
		}

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		protected MB2_LogLevel _LOG_LEVEL;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		protected MB2_ValidationLevel _validationLevel;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected string _name;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected MB2_TextureBakeResults _textureBakeResults;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected GameObject _resultSceneObject;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Renderer _targetRenderer;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected MB_RenderType _renderType;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		protected MB2_OutputOptions _outputOption;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected MB2_LightmapOptions _lightmapOption;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		protected bool _doNorm;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		[SerializeField]
		protected bool _doTan;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		[SerializeField]
		protected bool _doCol;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
		[SerializeField]
		protected bool _doUV;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected bool _doUV3;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[SerializeField]
		protected bool _doUV4;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		[SerializeField]
		protected bool _doBlendShapes;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		[SerializeField]
		protected bool _recenterVertsToBoundsCenter;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		public bool _optimizeAfterBake;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public float uv2UnwrappingParamsHardAngle;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		public float uv2UnwrappingParamsPackMargin;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected bool _usingTemporaryTextureBakeResult;

		[Token(Token = "0x17000106")]
		public static bool EVAL_VERSION
		{
			[Token(Token = "0x6001833")]
			[Address(RVA = "0xAB2748", Offset = "0xAB2748", VA = "0xAB2748")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000107")]
		public virtual MB2_LogLevel LOG_LEVEL
		{
			[Token(Token = "0x6001834")]
			[Address(RVA = "0xAB2750", Offset = "0xAB2750", VA = "0xAB2750", Slot = "4")]
			get
			{
				return default(MB2_LogLevel);
			}
			[Token(Token = "0x6001835")]
			[Address(RVA = "0xAB2758", Offset = "0xAB2758", VA = "0xAB2758", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000108")]
		public virtual MB2_ValidationLevel validationLevel
		{
			[Token(Token = "0x6001836")]
			[Address(RVA = "0xAB2760", Offset = "0xAB2760", VA = "0xAB2760", Slot = "6")]
			get
			{
				return default(MB2_ValidationLevel);
			}
			[Token(Token = "0x6001837")]
			[Address(RVA = "0xAB2768", Offset = "0xAB2768", VA = "0xAB2768", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000109")]
		public string name
		{
			[Token(Token = "0x6001838")]
			[Address(RVA = "0xAB2770", Offset = "0xAB2770", VA = "0xAB2770")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001839")]
			[Address(RVA = "0xAB2778", Offset = "0xAB2778", VA = "0xAB2778")]
			set
			{
			}
		}

		[Token(Token = "0x1700010A")]
		public virtual MB2_TextureBakeResults textureBakeResults
		{
			[Token(Token = "0x600183A")]
			[Address(RVA = "0xAB2780", Offset = "0xAB2780", VA = "0xAB2780", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600183B")]
			[Address(RVA = "0xAB2788", Offset = "0xAB2788", VA = "0xAB2788", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x1700010B")]
		public virtual GameObject resultSceneObject
		{
			[Token(Token = "0x600183C")]
			[Address(RVA = "0xAB2790", Offset = "0xAB2790", VA = "0xAB2790", Slot = "10")]
			get
			{
				return null;
			}
			[Token(Token = "0x600183D")]
			[Address(RVA = "0xAB2798", Offset = "0xAB2798", VA = "0xAB2798", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x1700010C")]
		public virtual Renderer targetRenderer
		{
			[Token(Token = "0x600183E")]
			[Address(RVA = "0xAB27A0", Offset = "0xAB27A0", VA = "0xAB27A0", Slot = "12")]
			get
			{
				return null;
			}
			[Token(Token = "0x600183F")]
			[Address(RVA = "0xAB27A8", Offset = "0xAB27A8", VA = "0xAB27A8", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x1700010D")]
		public virtual MB_RenderType renderType
		{
			[Token(Token = "0x6001840")]
			[Address(RVA = "0xAB2894", Offset = "0xAB2894", VA = "0xAB2894", Slot = "14")]
			get
			{
				return default(MB_RenderType);
			}
			[Token(Token = "0x6001841")]
			[Address(RVA = "0xAB289C", Offset = "0xAB289C", VA = "0xAB289C", Slot = "15")]
			set
			{
			}
		}

		[Token(Token = "0x1700010E")]
		public virtual MB2_OutputOptions outputOption
		{
			[Token(Token = "0x6001842")]
			[Address(RVA = "0xAB28A4", Offset = "0xAB28A4", VA = "0xAB28A4", Slot = "16")]
			get
			{
				return default(MB2_OutputOptions);
			}
			[Token(Token = "0x6001843")]
			[Address(RVA = "0xAB28AC", Offset = "0xAB28AC", VA = "0xAB28AC", Slot = "17")]
			set
			{
			}
		}

		[Token(Token = "0x1700010F")]
		public virtual MB2_LightmapOptions lightmapOption
		{
			[Token(Token = "0x6001844")]
			[Address(RVA = "0xAB28B4", Offset = "0xAB28B4", VA = "0xAB28B4", Slot = "18")]
			get
			{
				return default(MB2_LightmapOptions);
			}
			[Token(Token = "0x6001845")]
			[Address(RVA = "0xAB28BC", Offset = "0xAB28BC", VA = "0xAB28BC", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x17000110")]
		public virtual bool doNorm
		{
			[Token(Token = "0x6001846")]
			[Address(RVA = "0xAB28C4", Offset = "0xAB28C4", VA = "0xAB28C4", Slot = "20")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001847")]
			[Address(RVA = "0xAB28CC", Offset = "0xAB28CC", VA = "0xAB28CC", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x17000111")]
		public virtual bool doTan
		{
			[Token(Token = "0x6001848")]
			[Address(RVA = "0xAB28D8", Offset = "0xAB28D8", VA = "0xAB28D8", Slot = "22")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001849")]
			[Address(RVA = "0xAB28E0", Offset = "0xAB28E0", VA = "0xAB28E0", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x17000112")]
		public virtual bool doCol
		{
			[Token(Token = "0x600184A")]
			[Address(RVA = "0xAB28EC", Offset = "0xAB28EC", VA = "0xAB28EC", Slot = "24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600184B")]
			[Address(RVA = "0xAB28F4", Offset = "0xAB28F4", VA = "0xAB28F4", Slot = "25")]
			set
			{
			}
		}

		[Token(Token = "0x17000113")]
		public virtual bool doUV
		{
			[Token(Token = "0x600184C")]
			[Address(RVA = "0xAB2900", Offset = "0xAB2900", VA = "0xAB2900", Slot = "26")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600184D")]
			[Address(RVA = "0xAB2908", Offset = "0xAB2908", VA = "0xAB2908", Slot = "27")]
			set
			{
			}
		}

		[Token(Token = "0x17000114")]
		public virtual bool doUV1
		{
			[Token(Token = "0x600184E")]
			[Address(RVA = "0xAB2914", Offset = "0xAB2914", VA = "0xAB2914", Slot = "28")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600184F")]
			[Address(RVA = "0xAB291C", Offset = "0xAB291C", VA = "0xAB291C", Slot = "29")]
			set
			{
			}
		}

		[Token(Token = "0x17000115")]
		public virtual bool doUV3
		{
			[Token(Token = "0x6001851")]
			[Address(RVA = "0xAB2944", Offset = "0xAB2944", VA = "0xAB2944", Slot = "31")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001852")]
			[Address(RVA = "0xAB294C", Offset = "0xAB294C", VA = "0xAB294C", Slot = "32")]
			set
			{
			}
		}

		[Token(Token = "0x17000116")]
		public virtual bool doUV4
		{
			[Token(Token = "0x6001853")]
			[Address(RVA = "0xAB2958", Offset = "0xAB2958", VA = "0xAB2958", Slot = "33")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001854")]
			[Address(RVA = "0xAB2960", Offset = "0xAB2960", VA = "0xAB2960", Slot = "34")]
			set
			{
			}
		}

		[Token(Token = "0x17000117")]
		public virtual bool doBlendShapes
		{
			[Token(Token = "0x6001855")]
			[Address(RVA = "0xAB296C", Offset = "0xAB296C", VA = "0xAB296C", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001856")]
			[Address(RVA = "0xAB2974", Offset = "0xAB2974", VA = "0xAB2974", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x17000118")]
		public virtual bool recenterVertsToBoundsCenter
		{
			[Token(Token = "0x6001857")]
			[Address(RVA = "0xAB2980", Offset = "0xAB2980", VA = "0xAB2980", Slot = "37")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001858")]
			[Address(RVA = "0xAB2988", Offset = "0xAB2988", VA = "0xAB2988", Slot = "38")]
			set
			{
			}
		}

		[Token(Token = "0x17000119")]
		public bool optimizeAfterBake
		{
			[Token(Token = "0x6001859")]
			[Address(RVA = "0xAB2994", Offset = "0xAB2994", VA = "0xAB2994")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600185A")]
			[Address(RVA = "0xAB299C", Offset = "0xAB299C", VA = "0xAB299C")]
			set
			{
			}
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0xAB2920", Offset = "0xAB2920", VA = "0xAB2920", Slot = "30")]
		public virtual bool doUV2()
		{
			return default(bool);
		}

		[Token(Token = "0x600185B")]
		public abstract int GetLightmapIndex();

		[Token(Token = "0x600185C")]
		public abstract void ClearBuffers();

		[Token(Token = "0x600185D")]
		public abstract void ClearMesh();

		[Token(Token = "0x600185E")]
		public abstract void DestroyMesh();

		[Token(Token = "0x600185F")]
		public abstract void DestroyMeshEditor(MB2_EditorMethodsInterface editorMethods);

		[Token(Token = "0x6001860")]
		public abstract List<GameObject> GetObjectsInCombined();

		[Token(Token = "0x6001861")]
		public abstract int GetNumObjectsInCombined();

		[Token(Token = "0x6001862")]
		public abstract int GetNumVerticesFor(GameObject go);

		[Token(Token = "0x6001863")]
		public abstract int GetNumVerticesFor(int instanceID);

		[Token(Token = "0x6001864")]
		public abstract Dictionary<MBBlendShapeKey, MBBlendShapeValue> BuildSourceBlendShapeToCombinedIndexMap();

		[Token(Token = "0x6001865")]
		[Address(RVA = "0xAB29A8", Offset = "0xAB29A8", VA = "0xAB29A8", Slot = "49")]
		public virtual void Apply()
		{
		}

		[Token(Token = "0x6001866")]
		public abstract void Apply(GenerateUV2Delegate uv2GenerationMethod);

		[Token(Token = "0x6001867")]
		public abstract void Apply(bool triangles, bool vertices, bool normals, bool tangents, bool uvs, bool uv2, bool uv3, bool uv4, bool colors, bool bones = false, bool blendShapeFlag = false, [Optional] GenerateUV2Delegate uv2GenerationMethod);

		[Token(Token = "0x6001868")]
		public abstract void UpdateGameObjects(GameObject[] gos, bool recalcBounds = true, bool updateVertices = true, bool updateNormals = true, bool updateTangents = true, bool updateUV = false, bool updateUV2 = false, bool updateUV3 = false, bool updateUV4 = false, bool updateColors = false, bool updateSkinningInfo = false);

		[Token(Token = "0x6001869")]
		public abstract bool AddDeleteGameObjects(GameObject[] gos, GameObject[] deleteGOs, bool disableRendererInSource = true);

		[Token(Token = "0x600186A")]
		public abstract bool AddDeleteGameObjectsByID(GameObject[] gos, int[] deleteGOinstanceIDs, bool disableRendererInSource);

		[Token(Token = "0x600186B")]
		public abstract bool CombinedMeshContains(GameObject go);

		[Token(Token = "0x600186C")]
		public abstract void UpdateSkinnedMeshApproximateBounds();

		[Token(Token = "0x600186D")]
		public abstract void UpdateSkinnedMeshApproximateBoundsFromBones();

		[Token(Token = "0x600186E")]
		public abstract void CheckIntegrity();

		[Token(Token = "0x600186F")]
		public abstract void UpdateSkinnedMeshApproximateBoundsFromBounds();

		[Token(Token = "0x6001870")]
		[Address(RVA = "0xAB29BC", Offset = "0xAB29BC", VA = "0xAB29BC")]
		public static void UpdateSkinnedMeshApproximateBoundsFromBonesStatic(Transform[] bs, SkinnedMeshRenderer smr)
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0xAB2D6C", Offset = "0xAB2D6C", VA = "0xAB2D6C")]
		public static void UpdateSkinnedMeshApproximateBoundsFromBoundsStatic(List<GameObject> objectsInCombined, SkinnedMeshRenderer smr)
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0xAB2F6C", Offset = "0xAB2F6C", VA = "0xAB2F6C", Slot = "60")]
		protected virtual bool _CreateTemporaryTextrueBakeResult(GameObject[] gos, List<Material> matsOnTargetRenderer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001873")]
		public abstract List<Material> GetMaterialsOnTargetRenderer();

		[Token(Token = "0x6001874")]
		[Address(RVA = "0xAB3034", Offset = "0xAB3034", VA = "0xAB3034")]
		protected MB3_MeshCombiner()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000334")]
	public class MB3_MeshCombinerSingle : MB3_MeshCombiner
	{
		[Serializable]
		[Token(Token = "0x20004EC")]
		public class SerializableIntArray
		{
			[Token(Token = "0x4001BEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int[] data;

			[Token(Token = "0x6001F8F")]
			[Address(RVA = "0xAB56D4", Offset = "0xAB56D4", VA = "0xAB56D4")]
			public SerializableIntArray()
			{
			}

			[Token(Token = "0x6001F90")]
			[Address(RVA = "0xAB4CDC", Offset = "0xAB4CDC", VA = "0xAB4CDC")]
			public SerializableIntArray(int len)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004ED")]
		public class MB_DynamicGameObject : IComparable<MB_DynamicGameObject>
		{
			[Token(Token = "0x4001BEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int instanceID;

			[Token(Token = "0x4001BEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string name;

			[Token(Token = "0x4001BED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int vertIdx;

			[Token(Token = "0x4001BEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int blendShapeIdx;

			[Token(Token = "0x4001BEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int numVerts;

			[Token(Token = "0x4001BF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int numBlendShapes;

			[Token(Token = "0x4001BF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int[] indexesOfBonesUsed;

			[Token(Token = "0x4001BF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int lightmapIndex;

			[Token(Token = "0x4001BF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector4 lightmapTilingOffset;

			[Token(Token = "0x4001BF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public Vector3 meshSize;

			[Token(Token = "0x4001BF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public bool show;

			[Token(Token = "0x4001BF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
			public bool invertTriangles;

			[Token(Token = "0x4001BF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public int[] submeshTriIdxs;

			[Token(Token = "0x4001BF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public int[] submeshNumTris;

			[Token(Token = "0x4001BF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public int[] targetSubmeshIdxs;

			[Token(Token = "0x4001BFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Rect[] uvRects;

			[Token(Token = "0x4001BFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Rect[] encapsulatingRect;

			[Token(Token = "0x4001BFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public Rect[] sourceMaterialTiling;

			[Token(Token = "0x4001BFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Rect[] obUVRects;

			[Token(Token = "0x4001BFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public bool _beingDeleted;

			[Token(Token = "0x4001BFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			public int _triangleIdxAdjustment;

			[NonSerialized]
			[Token(Token = "0x4001C00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public SerializableIntArray[] _tmpSubmeshTris;

			[NonSerialized]
			[Token(Token = "0x4001C01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public Transform[] _tmpCachedBones;

			[NonSerialized]
			[Token(Token = "0x4001C02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public Matrix4x4[] _tmpCachedBindposes;

			[NonSerialized]
			[Token(Token = "0x4001C03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public BoneWeight[] _tmpCachedBoneWeights;

			[NonSerialized]
			[Token(Token = "0x4001C04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public int[] _tmpIndexesOfSourceBonesUsed;

			[Token(Token = "0x6001F91")]
			[Address(RVA = "0xAC8900", Offset = "0xAC8900", VA = "0xAC8900", Slot = "4")]
			public int CompareTo(MB_DynamicGameObject b)
			{
				return default(int);
			}

			[Token(Token = "0x6001F92")]
			[Address(RVA = "0xABC818", Offset = "0xABC818", VA = "0xABC818")]
			public MB_DynamicGameObject()
			{
			}
		}

		[Token(Token = "0x20004EE")]
		public class MeshChannels
		{
			[Token(Token = "0x4001C05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] vertices;

			[Token(Token = "0x4001C06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3[] normals;

			[Token(Token = "0x4001C07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector4[] tangents;

			[Token(Token = "0x4001C08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector2[] uv0raw;

			[Token(Token = "0x4001C09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector2[] uv0modified;

			[Token(Token = "0x4001C0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector2[] uv2;

			[Token(Token = "0x4001C0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector2[] uv3;

			[Token(Token = "0x4001C0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Vector2[] uv4;

			[Token(Token = "0x4001C0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Color[] colors;

			[Token(Token = "0x4001C0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public BoneWeight[] boneWeights;

			[Token(Token = "0x4001C0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Matrix4x4[] bindPoses;

			[Token(Token = "0x4001C10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public int[] triangles;

			[Token(Token = "0x4001C11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public MBBlendShape[] blendShapes;

			[Token(Token = "0x6001F93")]
			[Address(RVA = "0xAC8934", Offset = "0xAC8934", VA = "0xAC8934")]
			public MeshChannels()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004EF")]
		public class MBBlendShapeFrame
		{
			[Token(Token = "0x4001C12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float frameWeight;

			[Token(Token = "0x4001C13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3[] vertices;

			[Token(Token = "0x4001C14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3[] normals;

			[Token(Token = "0x4001C15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3[] tangents;

			[Token(Token = "0x6001F94")]
			[Address(RVA = "0xAC88F8", Offset = "0xAC88F8", VA = "0xAC88F8")]
			public MBBlendShapeFrame()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004F0")]
		public class MBBlendShape
		{
			[Token(Token = "0x4001C16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int gameObjectID;

			[Token(Token = "0x4001C17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string name;

			[Token(Token = "0x4001C18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int indexInSource;

			[Token(Token = "0x4001C19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MBBlendShapeFrame[] frames;

			[Token(Token = "0x6001F95")]
			[Address(RVA = "0xAC88F0", Offset = "0xAC88F0", VA = "0xAC88F0")]
			public MBBlendShape()
			{
			}
		}

		[Token(Token = "0x20004F1")]
		public class MeshChannelsCache
		{
			[Token(Token = "0x4001C1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private MB3_MeshCombinerSingle mc;

			[Token(Token = "0x4001C1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			protected Dictionary<int, MeshChannels> meshID2MeshChannels;

			[Token(Token = "0x4001C1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Vector2 _HALF_UV;

			[Token(Token = "0x6001F96")]
			[Address(RVA = "0xABC76C", Offset = "0xABC76C", VA = "0xABC76C")]
			public MeshChannelsCache(MB3_MeshCombinerSingle mcs)
			{
			}

			[Token(Token = "0x6001F97")]
			[Address(RVA = "0xABD8A8", Offset = "0xABD8A8", VA = "0xABD8A8")]
			internal Vector3[] GetVertices(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6001F98")]
			[Address(RVA = "0xABDA14", Offset = "0xABDA14", VA = "0xABDA14")]
			internal Vector3[] GetNormals(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6001F99")]
			[Address(RVA = "0xABDB74", Offset = "0xABDB74", VA = "0xABDB74")]
			internal Vector4[] GetTangents(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6001F9A")]
			[Address(RVA = "0xAB5B94", Offset = "0xAB5B94", VA = "0xAB5B94")]
			internal Vector2[] GetUv0Raw(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6001F9B")]
			[Address(RVA = "0xAC8F90", Offset = "0xAC8F90", VA = "0xAC8F90")]
			internal Vector2[] GetUv0Modified(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6001F9C")]
			[Address(RVA = "0xAC0270", Offset = "0xAC0270", VA = "0xAC0270")]
			internal Vector2[] GetUv2(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6001F9D")]
			[Address(RVA = "0xABE730", Offset = "0xABE730", VA = "0xABE730")]
			internal Vector2[] GetUv3(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6001F9E")]
			[Address(RVA = "0xABE8B8", Offset = "0xABE8B8", VA = "0xABE8B8")]
			internal Vector2[] GetUv4(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6001F9F")]
			[Address(RVA = "0xABEA40", Offset = "0xABEA40", VA = "0xABEA40")]
			internal Color[] GetColors(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6001FA0")]
			[Address(RVA = "0xAC8174", Offset = "0xAC8174", VA = "0xAC8174")]
			internal Matrix4x4[] GetBindposes(Renderer r)
			{
				return null;
			}

			[Token(Token = "0x6001FA1")]
			[Address(RVA = "0xAC50E8", Offset = "0xAC50E8", VA = "0xAC50E8")]
			internal BoneWeight[] GetBoneWeights(Renderer r, int numVertsInMeshBeingAdded)
			{
				return null;
			}

			[Token(Token = "0x6001FA2")]
			[Address(RVA = "0xAC9970", Offset = "0xAC9970", VA = "0xAC9970")]
			internal int[] GetTriangles(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6001FA3")]
			[Address(RVA = "0xABEBA0", Offset = "0xABEBA0", VA = "0xABEBA0")]
			internal MBBlendShape[] GetBlendShapes(Mesh m, int gameObjectID)
			{
				return null;
			}

			[Token(Token = "0x6001FA4")]
			[Address(RVA = "0xAC934C", Offset = "0xAC934C", VA = "0xAC934C")]
			private Color[] _getMeshColors(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6001FA5")]
			[Address(RVA = "0xAC893C", Offset = "0xAC893C", VA = "0xAC893C")]
			private Vector3[] _getMeshNormals(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6001FA6")]
			[Address(RVA = "0xAC8B50", Offset = "0xAC8B50", VA = "0xAC8B50")]
			private Vector4[] _getMeshTangents(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6001FA7")]
			[Address(RVA = "0xAC8D98", Offset = "0xAC8D98", VA = "0xAC8D98")]
			private Vector2[] _getMeshUVs(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6001FA8")]
			[Address(RVA = "0xAC90E0", Offset = "0xAC90E0", VA = "0xAC90E0")]
			private Vector2[] _getMeshUV2s(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6001FA9")]
			[Address(RVA = "0xAC9568", Offset = "0xAC9568", VA = "0xAC9568")]
			public static Matrix4x4[] _getBindPoses(Renderer r)
			{
				return null;
			}

			[Token(Token = "0x6001FAA")]
			[Address(RVA = "0xAC9748", Offset = "0xAC9748", VA = "0xAC9748")]
			public static BoneWeight[] _getBoneWeights(Renderer r, int numVertsInMeshBeingAdded)
			{
				return null;
			}

			[Token(Token = "0x6001FAB")]
			[Address(RVA = "0xAC9ADC", Offset = "0xAC9ADC", VA = "0xAC9ADC")]
			private void _generateTangents(int[] triangles, Vector3[] verts, Vector2[] uvs, Vector3[] normals, Vector4[] outTangents)
			{
			}
		}

		[Token(Token = "0x20004F2")]
		public struct BoneAndBindpose
		{
			[Token(Token = "0x4001C1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Transform bone;

			[Token(Token = "0x4001C1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Matrix4x4 bindPose;

			[Token(Token = "0x6001FAC")]
			[Address(RVA = "0x511444", Offset = "0x511444", VA = "0x511444")]
			public BoneAndBindpose(Transform t, Matrix4x4 bp)
			{
			}

			[Token(Token = "0x6001FAD")]
			[Address(RVA = "0x511490", Offset = "0x511490", VA = "0x511490", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6001FAE")]
			[Address(RVA = "0x511498", Offset = "0x511498", VA = "0x511498", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}
		}

		[Token(Token = "0x20004F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A962C", Offset = "0x4A962C")]
		private sealed class <>c__DisplayClass56_0
		{
			[Token(Token = "0x4001C1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject[] _goToAdd;

			[Token(Token = "0x6001FAF")]
			[Address(RVA = "0xABC198", Offset = "0xABC198", VA = "0xABC198")]
			public <>c__DisplayClass56_0()
			{
			}
		}

		[Token(Token = "0x20004F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A963C", Offset = "0x4A963C")]
		private sealed class <>c__DisplayClass56_1
		{
			[Token(Token = "0x4001C20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4001C21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass56_0 CS$<>8__locals1;

			[Token(Token = "0x6001FB0")]
			[Address(RVA = "0xABC810", Offset = "0xABC810", VA = "0xABC810")]
			public <>c__DisplayClass56_1()
			{
			}

			[Token(Token = "0x6001FB1")]
			[Address(RVA = "0xAC867C", Offset = "0xAC867C", VA = "0xAC867C")]
			internal bool <_addToCombined>b__0(int o)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		protected List<GameObject> objectsInCombinedMesh;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private int lightmapIndex;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private List<MB_DynamicGameObject> mbDynamicObjectsInCombinedMesh;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<int, MB_DynamicGameObject> _instance2combined_map;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Vector3[] verts;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Vector3[] normals;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Vector4[] tangents;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Vector2[] uvs;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Vector2[] uv2s;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Vector2[] uv3s;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Vector2[] uv4s;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Color[] colors;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Matrix4x4[] bindPoses;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Transform[] bones;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		internal MBBlendShape[] blendShapes;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		internal MBBlendShape[] blendShapesInCombined;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private SerializableIntArray[] submeshTris;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Mesh _mesh;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private BoneWeight[] boneWeights;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private GameObject[] empty;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private int[] emptyIDs;

		[Token(Token = "0x1700011A")]
		public override MB2_TextureBakeResults textureBakeResults
		{
			[Token(Token = "0x6001875")]
			[Address(RVA = "0xAB3A04", Offset = "0xAB3A04", VA = "0xAB3A04", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x1700011B")]
		public override MB_RenderType renderType
		{
			[Token(Token = "0x6001876")]
			[Address(RVA = "0xAB3B34", Offset = "0xAB3B34", VA = "0xAB3B34", Slot = "15")]
			set
			{
			}
		}

		[Token(Token = "0x1700011C")]
		public override GameObject resultSceneObject
		{
			[Token(Token = "0x6001877")]
			[Address(RVA = "0xAB3BF8", Offset = "0xAB3BF8", VA = "0xAB3BF8", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0xAB3CF4", Offset = "0xAB3CF4", VA = "0xAB3CF4")]
		private MB_DynamicGameObject instance2Combined_MapGet(int gameObjectID)
		{
			return null;
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0xAB3D64", Offset = "0xAB3D64", VA = "0xAB3D64")]
		private void instance2Combined_MapAdd(int gameObjectID, MB_DynamicGameObject dgo)
		{
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0xAB3DDC", Offset = "0xAB3DDC", VA = "0xAB3DDC")]
		private void instance2Combined_MapRemove(int gameObjectID)
		{
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0xAB3E4C", Offset = "0xAB3E4C", VA = "0xAB3E4C")]
		private bool instance2Combined_MapTryGetValue(int gameObjectID, out MB_DynamicGameObject dgo)
		{
			return default(bool);
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0xAB3EC4", Offset = "0xAB3EC4", VA = "0xAB3EC4")]
		private int instance2Combined_MapCount()
		{
			return default(int);
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0xAB3F24", Offset = "0xAB3F24", VA = "0xAB3F24")]
		private void instance2Combined_MapClear()
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0xAB3F84", Offset = "0xAB3F84", VA = "0xAB3F84")]
		private bool instance2Combined_MapContainsKey(int gameObjectID)
		{
			return default(bool);
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0xAB3FF4", Offset = "0xAB3FF4", VA = "0xAB3FF4", Slot = "45")]
		public override int GetNumObjectsInCombined()
		{
			return default(int);
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0xAB4054", Offset = "0xAB4054", VA = "0xAB4054", Slot = "44")]
		public override List<GameObject> GetObjectsInCombined()
		{
			return null;
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0xAB40E4", Offset = "0xAB40E4", VA = "0xAB40E4")]
		public Mesh GetMesh()
		{
			return null;
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0xAB4188", Offset = "0xAB4188", VA = "0xAB4188")]
		public void SetMesh(Mesh m)
		{
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0xAB4190", Offset = "0xAB4190", VA = "0xAB4190")]
		public Transform[] GetBones()
		{
			return null;
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0xAB4198", Offset = "0xAB4198", VA = "0xAB4198", Slot = "39")]
		public override int GetLightmapIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0xAB41F0", Offset = "0xAB41F0", VA = "0xAB41F0", Slot = "46")]
		public override int GetNumVerticesFor(GameObject go)
		{
			return default(int);
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0xAB423C", Offset = "0xAB423C", VA = "0xAB423C", Slot = "47")]
		public override int GetNumVerticesFor(int instanceID)
		{
			return default(int);
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0xAB4280", Offset = "0xAB4280", VA = "0xAB4280", Slot = "48")]
		public override Dictionary<MBBlendShapeKey, MBBlendShapeValue> BuildSourceBlendShapeToCombinedIndexMap()
		{
			return null;
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0xAB4468", Offset = "0xAB4468", VA = "0xAB4468")]
		private void _initialize(int numResultMats)
		{
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0xAB4D4C", Offset = "0xAB4D4C", VA = "0xAB4D4C")]
		private bool _collectMaterialTriangles(Mesh m, MB_DynamicGameObject dgo, Material[] sharedMaterials, OrderedDictionary sourceMats2submeshIdx_map)
		{
			return default(bool);
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0xAB56DC", Offset = "0xAB56DC", VA = "0xAB56DC")]
		private bool _collectOutOfBoundsUVRects2(Mesh m, MB_DynamicGameObject dgo, Material[] sharedMaterials, OrderedDictionary sourceMats2submeshIdx_map, Dictionary<int, MB_Utility.MeshAnalysisResult[]> meshAnalysisResults, MeshChannelsCache meshChannelCache)
		{
			return default(bool);
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0xAB5CF4", Offset = "0xAB5CF4", VA = "0xAB5CF4")]
		private bool _validateTextureBakeResults()
		{
			return default(bool);
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0xAB5E84", Offset = "0xAB5E84", VA = "0xAB5E84")]
		private bool _validateMeshFlags()
		{
			return default(bool);
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0xAB60D0", Offset = "0xAB60D0", VA = "0xAB60D0")]
		private bool _showHide(GameObject[] goToShow, GameObject[] goToHide)
		{
			return default(bool);
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0xAB6468", Offset = "0xAB6468", VA = "0xAB6468")]
		private bool _addToCombined(GameObject[] goToAdd, int[] goToDelete, bool disableRendererInSource)
		{
			return default(bool);
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0xABDCD4", Offset = "0xABDCD4", VA = "0xABDCD4")]
		private void _copyAndAdjustUVsFromMesh(MB_DynamicGameObject dgo, Mesh mesh, int vertsIdx, MeshChannelsCache meshChannelsCache)
		{
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0xABE450", Offset = "0xABE450", VA = "0xABE450")]
		private void _copyAndAdjustUV2FromMesh(MB_DynamicGameObject dgo, Mesh mesh, int vertsIdx, MeshChannelsCache meshChannelsCache)
		{
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0xAC03D0", Offset = "0xAC03D0", VA = "0xAC03D0", Slot = "56")]
		public override void UpdateSkinnedMeshApproximateBounds()
		{
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0xAC03E0", Offset = "0xAC03E0", VA = "0xAC03E0", Slot = "57")]
		public override void UpdateSkinnedMeshApproximateBoundsFromBones()
		{
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0xAC0700", Offset = "0xAC0700", VA = "0xAC0700", Slot = "59")]
		public override void UpdateSkinnedMeshApproximateBoundsFromBounds()
		{
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0xAC0A48", Offset = "0xAC0A48", VA = "0xAC0A48")]
		private int _getNumBones(Renderer r)
		{
			return default(int);
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0xAC0B74", Offset = "0xAC0B74", VA = "0xAC0B74")]
		private Transform[] _getBones(Renderer r)
		{
			return null;
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0xAC0B80", Offset = "0xAC0B80", VA = "0xAC0B80", Slot = "50")]
		public override void Apply(GenerateUV2Delegate uv2GenerationMethod)
		{
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0xAC0C88", Offset = "0xAC0C88", VA = "0xAC0C88", Slot = "62")]
		public virtual void ApplyShowHide()
		{
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0xAC1C10", Offset = "0xAC1C10", VA = "0xAC1C10", Slot = "51")]
		public override void Apply(bool triangles, bool vertices, bool normals, bool tangents, bool uvs, bool uv2, bool uv3, bool uv4, bool colors, bool bones = false, bool blendShapesFlag = false, [Optional] GenerateUV2Delegate uv2GenerationMethod)
		{
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0xAC1930", Offset = "0xAC1930", VA = "0xAC1930")]
		private int _numNonZeroLengthSubmeshTris(SerializableIntArray[] subTris)
		{
			return default(int);
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0xAC19CC", Offset = "0xAC19CC", VA = "0xAC19CC")]
		private void _updateMaterialsOnTargetRenderer(SerializableIntArray[] subTris, int numNonZeroLengthSubmeshTris)
		{
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0xAC1354", Offset = "0xAC1354", VA = "0xAC1354")]
		public SerializableIntArray[] GetSubmeshTrisWithShowHideApplied()
		{
			return null;
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0xAC4014", Offset = "0xAC4014", VA = "0xAC4014", Slot = "52")]
		public override void UpdateGameObjects(GameObject[] gos, bool recalcBounds = true, bool updateVertices = true, bool updateNormals = true, bool updateTangents = true, bool updateUV = false, bool updateUV2 = false, bool updateUV3 = false, bool updateUV4 = false, bool updateColors = false, bool updateSkinningInfo = false)
		{
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0xAC4060", Offset = "0xAC4060", VA = "0xAC4060")]
		private void _updateGameObjects(GameObject[] gos, bool recalcBounds, bool updateVertices, bool updateNormals, bool updateTangents, bool updateUV, bool updateUV2, bool updateUV3, bool updateUV4, bool updateColors, bool updateSkinningInfo)
		{
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0xAC4378", Offset = "0xAC4378", VA = "0xAC4378")]
		private void _updateGameObject(GameObject go, bool updateVertices, bool updateNormals, bool updateTangents, bool updateUV, bool updateUV2, bool updateUV3, bool updateUV4, bool updateColors, bool updateSkinningInfo, MeshChannelsCache meshChannelCache)
		{
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0xAC52A0", Offset = "0xAC52A0", VA = "0xAC52A0")]
		public bool ShowHideGameObjects(GameObject[] toShow, GameObject[] toHide)
		{
			return default(bool);
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0xAC5390", Offset = "0xAC5390", VA = "0xAC5390", Slot = "53")]
		public override bool AddDeleteGameObjects(GameObject[] gos, GameObject[] deleteGOs, bool disableRendererInSource = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0xAC55C0", Offset = "0xAC55C0", VA = "0xAC55C0", Slot = "54")]
		public override bool AddDeleteGameObjectsByID(GameObject[] gos, int[] deleteGOinstanceIDs, bool disableRendererInSource)
		{
			return default(bool);
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0xAC5D2C", Offset = "0xAC5D2C", VA = "0xAC5D2C", Slot = "55")]
		public override bool CombinedMeshContains(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0xAC5D9C", Offset = "0xAC5D9C", VA = "0xAC5D9C", Slot = "40")]
		public override void ClearBuffers()
		{
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0xAC608C", Offset = "0xAC608C", VA = "0xAC608C", Slot = "41")]
		public override void ClearMesh()
		{
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0xAC6148", Offset = "0xAC6148", VA = "0xAC6148", Slot = "42")]
		public override void DestroyMesh()
		{
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0xAC6264", Offset = "0xAC6264", VA = "0xAC6264", Slot = "43")]
		public override void DestroyMeshEditor(MB2_EditorMethodsInterface editorMethods)
		{
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0xABC1A0", Offset = "0xABC1A0", VA = "0xABC1A0")]
		public bool ValidateTargRendererAndMeshAndResultSceneObj()
		{
			return default(bool);
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0xAC63DC", Offset = "0xAC63DC", VA = "0xAC63DC")]
		internal static Renderer BuildSceneHierarchPreBake(MB3_MeshCombinerSingle mom, GameObject root, Mesh m, bool createNewChild = false, [Optional] GameObject[] objsToBeAdded)
		{
			return null;
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0xAC7264", Offset = "0xAC7264", VA = "0xAC7264")]
		public static void BuildPrefabHierarchy(MB3_MeshCombinerSingle mom, GameObject instantiatedPrefabRoot, Mesh m, bool createNewChild = false, [Optional] GameObject[] objsToBeAdded)
		{
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0xAC6E2C", Offset = "0xAC6E2C", VA = "0xAC6E2C")]
		private static void _ConfigureSceneHierarch(MB3_MeshCombinerSingle mom, GameObject root, MeshRenderer mr, MeshFilter mf, SkinnedMeshRenderer smr, Mesh m, [Optional] GameObject[] objsToBeAdded)
		{
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0xAC5C2C", Offset = "0xAC5C2C", VA = "0xAC5C2C")]
		public void BuildSceneMeshObject([Optional] GameObject[] gos, bool createNewChild = false)
		{
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0xABCF9C", Offset = "0xABCF9C", VA = "0xABCF9C")]
		private bool IsMirrored(Matrix4x4 tm)
		{
			return default(bool);
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0xAC7A1C", Offset = "0xAC7A1C", VA = "0xAC7A1C", Slot = "58")]
		public override void CheckIntegrity()
		{
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0xAC3F1C", Offset = "0xAC3F1C", VA = "0xAC3F1C")]
		private void _ZeroArray(Vector3[] arr, int idx, int length)
		{
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0xABC524", Offset = "0xABC524", VA = "0xABC524")]
		private List<MB_DynamicGameObject>[] _buildBoneIdx2dgoMap()
		{
			return null;
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0xABC8FC", Offset = "0xABC8FC", VA = "0xABC8FC")]
		private void _CollectBonesToAddForDGO(MB_DynamicGameObject dgo, Dictionary<Transform, int> bone2idx, HashSet<int> boneIdxsToDelete, HashSet<BoneAndBindpose> bonesToAdd, Renderer r, MeshChannelsCache meshChannelCache)
		{
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0xABD140", Offset = "0xABD140", VA = "0xABD140")]
		private void _CopyBonesWeAreKeepingToNewBonesArrayAndAdjustBWIndexes(HashSet<int> boneIdxsToDeleteHS, HashSet<BoneAndBindpose> bonesToAdd, Transform[] nbones, Matrix4x4[] nbindPoses, BoneWeight[] nboneWeights, int totalDeleteVerts)
		{
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0xABF2E0", Offset = "0xABF2E0", VA = "0xABF2E0")]
		private void _AddBonesToNewBonesArrayAndAdjustBWIndexes(MB_DynamicGameObject dgo, Renderer r, int vertsIdx, Transform[] nbones, BoneWeight[] nboneWeights, MeshChannelsCache meshChannelCache)
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0xABFAF0", Offset = "0xABFAF0", VA = "0xABFAF0")]
		private void _copyUV2unchangedToSeparateRects()
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0xAC833C", Offset = "0xAC833C", VA = "0xAC833C", Slot = "61")]
		public override List<Material> GetMaterialsOnTargetRenderer()
		{
			return null;
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0xAC8428", Offset = "0xAC8428", VA = "0xAC8428")]
		public MB3_MeshCombinerSingle()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000335")]
	public class MB3_MultiMeshCombiner : MB3_MeshCombiner
	{
		[Serializable]
		[Token(Token = "0x20004F5")]
		public class CombinedMesh
		{
			[Token(Token = "0x4001C22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MB3_MeshCombinerSingle combinedMesh;

			[Token(Token = "0x4001C23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int extraSpace;

			[Token(Token = "0x4001C24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int numVertsInListToDelete;

			[Token(Token = "0x4001C25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int numVertsInListToAdd;

			[Token(Token = "0x4001C26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<GameObject> gosToAdd;

			[Token(Token = "0x4001C27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<int> gosToDelete;

			[Token(Token = "0x4001C28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<GameObject> gosToUpdate;

			[Token(Token = "0x4001C29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool isDirty;

			[Token(Token = "0x6001FB2")]
			[Address(RVA = "0xACE440", Offset = "0xACE440", VA = "0xACE440")]
			public CombinedMesh(int maxNumVertsInMesh, GameObject resultSceneObject, MB2_LogLevel ll)
			{
			}

			[Token(Token = "0x6001FB3")]
			[Address(RVA = "0xACF560", Offset = "0xACF560", VA = "0xACF560")]
			public bool isEmpty()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameObject[] empty;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int[] emptyIDs;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Dictionary<int, CombinedMesh> obj2MeshCombinerMap;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		public List<CombinedMesh> meshCombiners;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private int _maxVertsInMesh;

		[Token(Token = "0x1700011D")]
		public override MB2_LogLevel LOG_LEVEL
		{
			[Token(Token = "0x60018B6")]
			[Address(RVA = "0xACA300", Offset = "0xACA300", VA = "0xACA300", Slot = "4")]
			get
			{
				return default(MB2_LogLevel);
			}
			[Token(Token = "0x60018B7")]
			[Address(RVA = "0xACA308", Offset = "0xACA308", VA = "0xACA308", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x1700011E")]
		public override MB2_ValidationLevel validationLevel
		{
			[Token(Token = "0x60018B9")]
			[Address(RVA = "0xACA4DC", Offset = "0xACA4DC", VA = "0xACA4DC", Slot = "6")]
			get
			{
				return default(MB2_ValidationLevel);
			}
			[Token(Token = "0x60018B8")]
			[Address(RVA = "0xACA3F0", Offset = "0xACA3F0", VA = "0xACA3F0", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700011F")]
		public int maxVertsInMesh
		{
			[Token(Token = "0x60018BA")]
			[Address(RVA = "0xACA4E4", Offset = "0xACA4E4", VA = "0xACA4E4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018BB")]
			[Address(RVA = "0xACA4EC", Offset = "0xACA4EC", VA = "0xACA4EC")]
			set
			{
			}
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0xACA648", Offset = "0xACA648", VA = "0xACA648", Slot = "45")]
		public override int GetNumObjectsInCombined()
		{
			return default(int);
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0xACA6A8", Offset = "0xACA6A8", VA = "0xACA6A8", Slot = "46")]
		public override int GetNumVerticesFor(GameObject go)
		{
			return default(int);
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0xACA784", Offset = "0xACA784", VA = "0xACA784", Slot = "47")]
		public override int GetNumVerticesFor(int gameObjectID)
		{
			return default(int);
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0xACA844", Offset = "0xACA844", VA = "0xACA844", Slot = "44")]
		public override List<GameObject> GetObjectsInCombined()
		{
			return null;
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0xACA97C", Offset = "0xACA97C", VA = "0xACA97C", Slot = "39")]
		public override int GetLightmapIndex()
		{
			return default(int);
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0xACAA4C", Offset = "0xACAA4C", VA = "0xACAA4C", Slot = "55")]
		public override bool CombinedMeshContains(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0xACAAD8", Offset = "0xACAAD8", VA = "0xACAAD8")]
		private bool _validateTextureBakeResults()
		{
			return default(bool);
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0xACAC68", Offset = "0xACAC68", VA = "0xACAC68", Slot = "50")]
		public override void Apply(GenerateUV2Delegate uv2GenerationMethod)
		{
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0xACADB4", Offset = "0xACADB4", VA = "0xACADB4", Slot = "51")]
		public override void Apply(bool triangles, bool vertices, bool normals, bool tangents, bool uvs, bool uv2, bool uv3, bool uv4, bool colors, bool bones = false, bool blendShapesFlag = false, [Optional] GenerateUV2Delegate uv2GenerationMethod)
		{
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0xACAFD8", Offset = "0xACAFD8", VA = "0xACAFD8", Slot = "56")]
		public override void UpdateSkinnedMeshApproximateBounds()
		{
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0xACB0B8", Offset = "0xACB0B8", VA = "0xACB0B8", Slot = "57")]
		public override void UpdateSkinnedMeshApproximateBoundsFromBones()
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0xACB198", Offset = "0xACB198", VA = "0xACB198", Slot = "59")]
		public override void UpdateSkinnedMeshApproximateBoundsFromBounds()
		{
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0xACB278", Offset = "0xACB278", VA = "0xACB278", Slot = "52")]
		public override void UpdateGameObjects(GameObject[] gos, bool recalcBounds = true, bool updateVertices = true, bool updateNormals = true, bool updateTangents = true, bool updateUV = false, bool updateUV2 = false, bool updateUV3 = false, bool updateUV4 = false, bool updateColors = false, bool updateSkinningInfo = false)
		{
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0xACB75C", Offset = "0xACB75C", VA = "0xACB75C", Slot = "53")]
		public override bool AddDeleteGameObjects(GameObject[] gos, GameObject[] deleteGOs, bool disableRendererInSource = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0xACB98C", Offset = "0xACB98C", VA = "0xACB98C", Slot = "54")]
		public override bool AddDeleteGameObjectsByID(GameObject[] gos, int[] deleteGOinstanceIDs, bool disableRendererInSource = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0xACBF24", Offset = "0xACBF24", VA = "0xACBF24")]
		private bool _validate(GameObject[] gos, int[] deleteGOinstanceIDs)
		{
			return default(bool);
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0xACC6A8", Offset = "0xACC6A8", VA = "0xACC6A8")]
		private void _distributeAmongBakers(GameObject[] gos, int[] deleteGOinstanceIDs)
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0xACD228", Offset = "0xACD228", VA = "0xACD228")]
		private bool _bakeStep1(GameObject[] gos, int[] deleteGOinstanceIDs, bool disableRendererInSource)
		{
			return default(bool);
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0xACE8E4", Offset = "0xACE8E4", VA = "0xACE8E4", Slot = "48")]
		public override Dictionary<MBBlendShapeKey, MBBlendShapeValue> BuildSourceBlendShapeToCombinedIndexMap()
		{
			return null;
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0xACEBA0", Offset = "0xACEBA0", VA = "0xACEBA0", Slot = "40")]
		public override void ClearBuffers()
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0xACECA0", Offset = "0xACECA0", VA = "0xACECA0", Slot = "41")]
		public override void ClearMesh()
		{
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0xACECB0", Offset = "0xACECB0", VA = "0xACECB0", Slot = "42")]
		public override void DestroyMesh()
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0xACEEFC", Offset = "0xACEEFC", VA = "0xACEEFC", Slot = "43")]
		public override void DestroyMeshEditor(MB2_EditorMethodsInterface editorMethods)
		{
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0xACE580", Offset = "0xACE580", VA = "0xACE580")]
		private void _setMBValues(MB3_MeshCombinerSingle targ)
		{
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0xACF198", Offset = "0xACF198", VA = "0xACF198", Slot = "61")]
		public override List<Material> GetMaterialsOnTargetRenderer()
		{
			return null;
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0xACF2F8", Offset = "0xACF2F8", VA = "0xACF2F8", Slot = "58")]
		public override void CheckIntegrity()
		{
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0xACF408", Offset = "0xACF408", VA = "0xACF408")]
		public MB3_MultiMeshCombiner()
		{
		}
	}
	[Token(Token = "0x2000336")]
	public class PriorityQueue<TPriority, TValue> : ICollection<KeyValuePair<TPriority, TValue>>, IEnumerable<KeyValuePair<TPriority, TValue>>, IEnumerable
	{
		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<KeyValuePair<TPriority, TValue>> _baseHeap;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IComparer<TPriority> _comparer;

		[Token(Token = "0x17000120")]
		public bool IsEmpty
		{
			[Token(Token = "0x60018E5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000121")]
		public int Count
		{
			[Token(Token = "0x60018EF")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000122")]
		public bool IsReadOnly
		{
			[Token(Token = "0x60018F1")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60018D8")]
		public PriorityQueue()
		{
		}

		[Token(Token = "0x60018D9")]
		public PriorityQueue(int capacity)
		{
		}

		[Token(Token = "0x60018DA")]
		public PriorityQueue(int capacity, IComparer<TPriority> comparer)
		{
		}

		[Token(Token = "0x60018DB")]
		public PriorityQueue(IComparer<TPriority> comparer)
		{
		}

		[Token(Token = "0x60018DC")]
		public PriorityQueue(IEnumerable<KeyValuePair<TPriority, TValue>> data)
		{
		}

		[Token(Token = "0x60018DD")]
		public PriorityQueue(IEnumerable<KeyValuePair<TPriority, TValue>> data, IComparer<TPriority> comparer)
		{
		}

		[Token(Token = "0x60018DE")]
		public static PriorityQueue<TPriority, TValue> MergeQueues(PriorityQueue<TPriority, TValue> pq1, PriorityQueue<TPriority, TValue> pq2)
		{
			return null;
		}

		[Token(Token = "0x60018DF")]
		public static PriorityQueue<TPriority, TValue> MergeQueues(PriorityQueue<TPriority, TValue> pq1, PriorityQueue<TPriority, TValue> pq2, IComparer<TPriority> comparer)
		{
			return null;
		}

		[Token(Token = "0x60018E0")]
		public void Enqueue(TPriority priority, TValue value)
		{
		}

		[Token(Token = "0x60018E1")]
		public KeyValuePair<TPriority, TValue> Dequeue()
		{
			return default(KeyValuePair<TPriority, TValue>);
		}

		[Token(Token = "0x60018E2")]
		public TValue DequeueValue()
		{
			return (TValue)null;
		}

		[Token(Token = "0x60018E3")]
		public KeyValuePair<TPriority, TValue> Peek()
		{
			return default(KeyValuePair<TPriority, TValue>);
		}

		[Token(Token = "0x60018E4")]
		public TValue PeekValue()
		{
			return (TValue)null;
		}

		[Token(Token = "0x60018E6")]
		private void ExchangeElements(int pos1, int pos2)
		{
		}

		[Token(Token = "0x60018E7")]
		private void Insert(TPriority priority, TValue value)
		{
		}

		[Token(Token = "0x60018E8")]
		private int HeapifyFromEndToBeginning(int pos)
		{
			return default(int);
		}

		[Token(Token = "0x60018E9")]
		private void DeleteRoot()
		{
		}

		[Token(Token = "0x60018EA")]
		private void HeapifyFromBeginningToEnd(int pos)
		{
		}

		[Token(Token = "0x60018EB")]
		public void Add(KeyValuePair<TPriority, TValue> item)
		{
		}

		[Token(Token = "0x60018EC")]
		public void Clear()
		{
		}

		[Token(Token = "0x60018ED")]
		public bool Contains(KeyValuePair<TPriority, TValue> item)
		{
			return default(bool);
		}

		[Token(Token = "0x60018EE")]
		public bool TryFindValue(TPriority item, out TValue foundVersion)
		{
			return default(bool);
		}

		[Token(Token = "0x60018F0")]
		public void CopyTo(KeyValuePair<TPriority, TValue>[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x60018F2")]
		public bool Remove(KeyValuePair<TPriority, TValue> item)
		{
			return default(bool);
		}

		[Token(Token = "0x60018F3")]
		public IEnumerator<KeyValuePair<TPriority, TValue>> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60018F4")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x2000337")]
	public struct DVector2
	{
		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static double epsilon;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double x;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double y;

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0x6E18A4", Offset = "0x6E18A4", VA = "0x6E18A4")]
		public static DVector2 Subtract(DVector2 a, DVector2 b)
		{
			return default(DVector2);
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0x50822C", Offset = "0x50822C", VA = "0x50822C")]
		public DVector2(double xx, double yy)
		{
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0x508234", Offset = "0x508234", VA = "0x508234")]
		public DVector2(DVector2 r)
		{
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0x50823C", Offset = "0x50823C", VA = "0x50823C")]
		public Vector2 GetVector2()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0x508274", Offset = "0x508274", VA = "0x508274")]
		public bool IsContainedIn(DRect r)
		{
			return default(bool);
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0x5082B4", Offset = "0x5082B4", VA = "0x5082B4")]
		public bool IsContainedInWithMargin(DRect r)
		{
			return default(bool);
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0x5082BC", Offset = "0x5082BC", VA = "0x5082BC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0x5082C4", Offset = "0x5082C4", VA = "0x5082C4")]
		public string ToString(string formatS)
		{
			return null;
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0x6E1BA8", Offset = "0x6E1BA8", VA = "0x6E1BA8")]
		public static double Distance(DVector2 a, DVector2 b)
		{
			return default(double);
		}
	}
	[Token(Token = "0x2000338")]
	public struct DRect
	{
		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double x;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double y;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double width;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double height;

		[Token(Token = "0x17000123")]
		public DVector2 minD
		{
			[Token(Token = "0x6001905")]
			[Address(RVA = "0x508128", Offset = "0x508128", VA = "0x508128")]
			get
			{
				return default(DVector2);
			}
		}

		[Token(Token = "0x17000124")]
		public DVector2 maxD
		{
			[Token(Token = "0x6001906")]
			[Address(RVA = "0x508130", Offset = "0x508130", VA = "0x508130")]
			get
			{
				return default(DVector2);
			}
		}

		[Token(Token = "0x17000125")]
		public Vector2 min
		{
			[Token(Token = "0x6001907")]
			[Address(RVA = "0x508144", Offset = "0x508144", VA = "0x508144")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000126")]
		public Vector2 max
		{
			[Token(Token = "0x6001908")]
			[Address(RVA = "0x50817C", Offset = "0x50817C", VA = "0x50817C")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000127")]
		public Vector2 size
		{
			[Token(Token = "0x6001909")]
			[Address(RVA = "0x508184", Offset = "0x508184", VA = "0x508184")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000128")]
		public DVector2 center
		{
			[Token(Token = "0x600190A")]
			[Address(RVA = "0x5081BC", Offset = "0x5081BC", VA = "0x5081BC")]
			get
			{
				return default(DVector2);
			}
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0x5080C8", Offset = "0x5080C8", VA = "0x5080C8")]
		public DRect(Rect r)
		{
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0x5080D0", Offset = "0x5080D0", VA = "0x5080D0")]
		public DRect(Vector2 o, Vector2 s)
		{
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0x5080EC", Offset = "0x5080EC", VA = "0x5080EC")]
		public DRect(DRect r)
		{
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0x5080F8", Offset = "0x5080F8", VA = "0x5080F8")]
		public DRect(float xx, float yy, float w, float h)
		{
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0x508114", Offset = "0x508114", VA = "0x508114")]
		public DRect(double xx, double yy, double w, double h)
		{
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0x508120", Offset = "0x508120", VA = "0x508120")]
		public Rect GetRect()
		{
			return default(Rect);
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0x5081DC", Offset = "0x5081DC", VA = "0x5081DC", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0x6E1464", Offset = "0x6E1464", VA = "0x6E1464")]
		public static bool operator ==(DRect a, DRect b)
		{
			return default(bool);
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0x6E1500", Offset = "0x6E1500", VA = "0x6E1500")]
		public static bool operator !=(DRect a, DRect b)
		{
			return default(bool);
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0x5081E4", Offset = "0x5081E4", VA = "0x5081E4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0x5081EC", Offset = "0x5081EC", VA = "0x5081EC")]
		public void Expand(float amt)
		{
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0x50821C", Offset = "0x50821C", VA = "0x50821C")]
		public bool Encloses(DRect smallToTestIfFits)
		{
			return default(bool);
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0x508224", Offset = "0x508224", VA = "0x508224", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000339")]
	public class MB3_UVTransformUtility
	{
		[Token(Token = "0x6001912")]
		[Address(RVA = "0xB278BC", Offset = "0xB278BC", VA = "0xB278BC")]
		public static void Test()
		{
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0xB27C0C", Offset = "0xB27C0C", VA = "0xB27C0C")]
		public static float TransformX(DRect r, double x)
		{
			return default(float);
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0xB0FEE8", Offset = "0xB0FEE8", VA = "0xB0FEE8")]
		public static DRect CombineTransforms(ref DRect r1, ref DRect r2)
		{
			return default(DRect);
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0xB27C1C", Offset = "0xB27C1C", VA = "0xB27C1C")]
		public static Rect CombineTransforms(ref Rect r1, ref Rect r2)
		{
			return default(Rect);
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0xB0FEC0", Offset = "0xB0FEC0", VA = "0xB0FEC0")]
		public static DRect InverseTransform(ref DRect t)
		{
			return default(DRect);
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0xB0FF44", Offset = "0xB0FF44", VA = "0xB0FF44")]
		public static DRect GetShiftTransformToFitBinA(ref DRect A, ref DRect B)
		{
			return default(DRect);
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0xB12364", Offset = "0xB12364", VA = "0xB12364")]
		public static DRect GetEncapsulatingRectShifted(ref DRect uvRect1, ref DRect willBeIn)
		{
			return default(DRect);
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0xB27D34", Offset = "0xB27D34", VA = "0xB27D34")]
		public static DRect GetEncapsulatingRect(ref DRect uvRect1, ref DRect uvRect2)
		{
			return default(DRect);
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0xB27DD0", Offset = "0xB27DD0", VA = "0xB27DD0")]
		public static bool RectContainsShifted(ref DRect bucket, ref DRect tryFit)
		{
			return default(bool);
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0xB27F1C", Offset = "0xB27F1C", VA = "0xB27F1C")]
		public static bool RectContainsShifted(ref Rect bucket, ref Rect tryFit)
		{
			return default(bool);
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0xB28218", Offset = "0xB28218", VA = "0xB28218")]
		public static bool LineSegmentContainsShifted(float bucketOffset, float bucketLength, float tryFitOffset, float tryFitLength)
		{
			return default(bool);
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0xB28310", Offset = "0xB28310", VA = "0xB28310")]
		public static bool RectContains(ref DRect bigRect, ref DRect smallToTestIfFits)
		{
			return default(bool);
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0xB28088", Offset = "0xB28088", VA = "0xB28088")]
		public static bool RectContains(ref Rect bigRect, ref Rect smallToTestIfFits)
		{
			return default(bool);
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0xB27BB8", Offset = "0xB27BB8", VA = "0xB27BB8")]
		public static Vector2 TransformPoint(ref DRect r, Vector2 p)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0xB283B0", Offset = "0xB283B0", VA = "0xB283B0")]
		public static DVector2 TransformPoint(ref DRect r, DVector2 p)
		{
			return default(DVector2);
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0xB283F4", Offset = "0xB283F4", VA = "0xB283F4")]
		public MB3_UVTransformUtility()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200033A")]
	public struct AtlasPadding
	{
		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int topBottom;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int leftRight;

		[Token(Token = "0x6001922")]
		[Address(RVA = "0x5080B8", Offset = "0x5080B8", VA = "0x5080B8")]
		public AtlasPadding(int p)
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0x5080C0", Offset = "0x5080C0", VA = "0x5080C0")]
		public AtlasPadding(int px, int py)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200033B")]
	public class AtlasPackingResult
	{
		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int atlasX;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int atlasY;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int usedW;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int usedH;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rect[] rects;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AtlasPadding[] padding;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int[] srcImgIdxs;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public object data;

		[Token(Token = "0x6001924")]
		[Address(RVA = "0x6E0BA0", Offset = "0x6E0BA0", VA = "0x6E0BA0")]
		public AtlasPackingResult(AtlasPadding[] pds)
		{
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0x6E0BCC", Offset = "0x6E0BCC", VA = "0x6E0BCC")]
		public void CalcUsedWidthAndHeight()
		{
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0x6E0EB0", Offset = "0x6E0EB0", VA = "0x6E0EB0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200033C")]
	public abstract class MB2_TexturePacker
	{
		[Token(Token = "0x20004F6")]
		internal enum NodeType
		{
			[Token(Token = "0x4001C2B")]
			Container,
			[Token(Token = "0x4001C2C")]
			maxDim,
			[Token(Token = "0x4001C2D")]
			regular
		}

		[Token(Token = "0x20004F7")]
		internal class PixRect
		{
			[Token(Token = "0x4001C2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int x;

			[Token(Token = "0x4001C2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int y;

			[Token(Token = "0x4001C30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int w;

			[Token(Token = "0x4001C31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int h;

			[Token(Token = "0x6001FB4")]
			[Address(RVA = "0x6E3000", Offset = "0x6E3000", VA = "0x6E3000")]
			public PixRect()
			{
			}

			[Token(Token = "0x6001FB5")]
			[Address(RVA = "0x6E3008", Offset = "0x6E3008", VA = "0x6E3008")]
			public PixRect(int xx, int yy, int ww, int hh)
			{
			}

			[Token(Token = "0x6001FB6")]
			[Address(RVA = "0x6E3054", Offset = "0x6E3054", VA = "0x6E3054", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x20004F8")]
		internal class Image
		{
			[Token(Token = "0x4001C32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int imgId;

			[Token(Token = "0x4001C33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int w;

			[Token(Token = "0x4001C34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int h;

			[Token(Token = "0x4001C35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int x;

			[Token(Token = "0x4001C36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int y;

			[Token(Token = "0x6001FB7")]
			[Address(RVA = "0x6E2CA0", Offset = "0x6E2CA0", VA = "0x6E2CA0")]
			public Image(int id, int tw, int th, AtlasPadding padding, int minImageSizeX, int minImageSizeY)
			{
			}

			[Token(Token = "0x6001FB8")]
			[Address(RVA = "0x6E2D70", Offset = "0x6E2D70", VA = "0x6E2D70")]
			public Image(Image im)
			{
			}
		}

		[Token(Token = "0x20004F9")]
		internal class ImgIDComparer : IComparer<Image>
		{
			[Token(Token = "0x6001FB9")]
			[Address(RVA = "0x6E2F94", Offset = "0x6E2F94", VA = "0x6E2F94", Slot = "4")]
			public int Compare(Image x, Image y)
			{
				return default(int);
			}

			[Token(Token = "0x6001FBA")]
			[Address(RVA = "0x6E2FF8", Offset = "0x6E2FF8", VA = "0x6E2FF8")]
			public ImgIDComparer()
			{
			}
		}

		[Token(Token = "0x20004FA")]
		internal class ImageHeightComparer : IComparer<Image>
		{
			[Token(Token = "0x6001FBB")]
			[Address(RVA = "0x6E2EBC", Offset = "0x6E2EBC", VA = "0x6E2EBC", Slot = "4")]
			public int Compare(Image x, Image y)
			{
				return default(int);
			}

			[Token(Token = "0x6001FBC")]
			[Address(RVA = "0x6E2F20", Offset = "0x6E2F20", VA = "0x6E2F20")]
			public ImageHeightComparer()
			{
			}
		}

		[Token(Token = "0x20004FB")]
		internal class ImageWidthComparer : IComparer<Image>
		{
			[Token(Token = "0x6001FBD")]
			[Address(RVA = "0x6E2F28", Offset = "0x6E2F28", VA = "0x6E2F28", Slot = "4")]
			public int Compare(Image x, Image y)
			{
				return default(int);
			}

			[Token(Token = "0x6001FBE")]
			[Address(RVA = "0x6E2F8C", Offset = "0x6E2F8C", VA = "0x6E2F8C")]
			public ImageWidthComparer()
			{
			}
		}

		[Token(Token = "0x20004FC")]
		internal class ImageAreaComparer : IComparer<Image>
		{
			[Token(Token = "0x6001FBF")]
			[Address(RVA = "0x6E2E20", Offset = "0x6E2E20", VA = "0x6E2E20", Slot = "4")]
			public int Compare(Image x, Image y)
			{
				return default(int);
			}

			[Token(Token = "0x6001FC0")]
			[Address(RVA = "0x6E2EB4", Offset = "0x6E2EB4", VA = "0x6E2EB4")]
			public ImageAreaComparer()
			{
			}
		}

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MB2_LogLevel LOG_LEVEL;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool atlasMustBePowerOfTwo;

		[Token(Token = "0x6001927")]
		[Address(RVA = "0x6E23B4", Offset = "0x6E23B4", VA = "0x6E23B4")]
		public static int RoundToNearestPositivePowerOfTwo(int x)
		{
			return default(int);
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0x6E2448", Offset = "0x6E2448", VA = "0x6E2448")]
		public static int CeilToNearestPowerOfTwo(int x)
		{
			return default(int);
		}

		[Token(Token = "0x6001929")]
		public abstract AtlasPackingResult[] GetRects(List<Vector2> imgWidthHeights, int maxDimensionX, int maxDimensionY, int padding);

		[Token(Token = "0x600192A")]
		public abstract AtlasPackingResult[] GetRects(List<Vector2> imgWidthHeights, List<AtlasPadding> paddings, int maxDimensionX, int maxDimensionY, bool doMultiAtlas);

		[Token(Token = "0x600192B")]
		[Address(RVA = "0x6E24D4", Offset = "0x6E24D4", VA = "0x6E24D4")]
		internal bool ScaleAtlasToFitMaxDim(Vector2 rootWH, List<Image> images, int maxDimensionX, int maxDimensionY, AtlasPadding padding, int minImageSizeX, int minImageSizeY, int masterImageSizeX, int masterImageSizeY, ref int outW, ref int outH, out float padX, out float padY, out int newMinSizeX, out int newMinSizeY)
		{
			return default(bool);
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0x6E29C0", Offset = "0x6E29C0", VA = "0x6E29C0")]
		public void normalizeRects(AtlasPackingResult rr, AtlasPadding padding)
		{
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0x6E2C88", Offset = "0x6E2C88", VA = "0x6E2C88")]
		protected MB2_TexturePacker()
		{
		}
	}
	[Token(Token = "0x200033D")]
	public class MB2_TexturePackerRegular : MB2_TexturePacker
	{
		[Token(Token = "0x20004FD")]
		private class ProbeResult
		{
			[Token(Token = "0x4001C37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int w;

			[Token(Token = "0x4001C38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int h;

			[Token(Token = "0x4001C39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int outW;

			[Token(Token = "0x4001C3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int outH;

			[Token(Token = "0x4001C3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Node root;

			[Token(Token = "0x4001C3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool largerOrEqualToMaxDim;

			[Token(Token = "0x4001C3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float efficiency;

			[Token(Token = "0x4001C3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float squareness;

			[Token(Token = "0x4001C3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float totalAtlasArea;

			[Token(Token = "0x4001C40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int numAtlases;

			[Token(Token = "0x6001FC1")]
			[Address(RVA = "0x6E797C", Offset = "0x6E797C", VA = "0x6E797C")]
			public void Set(int ww, int hh, int outw, int outh, Node r, bool fits, float e, float sq)
			{
			}

			[Token(Token = "0x6001FC2")]
			[Address(RVA = "0x6EB950", Offset = "0x6EB950", VA = "0x6EB950")]
			public float GetScore(bool doPowerOfTwoScore)
			{
				return default(float);
			}

			[Token(Token = "0x6001FC3")]
			[Address(RVA = "0x6EBA2C", Offset = "0x6EBA2C", VA = "0x6EBA2C")]
			public void PrintTree()
			{
			}

			[Token(Token = "0x6001FC4")]
			[Address(RVA = "0x6EB948", Offset = "0x6EB948", VA = "0x6EB948")]
			public ProbeResult()
			{
			}
		}

		[Token(Token = "0x20004FE")]
		internal class Node
		{
			[Token(Token = "0x4001C41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal NodeType isFullAtlas;

			[Token(Token = "0x4001C42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Node[] child;

			[Token(Token = "0x4001C43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal PixRect r;

			[Token(Token = "0x4001C44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal Image img;

			[Token(Token = "0x4001C45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private ProbeResult bestRoot;

			[Token(Token = "0x6001FC5")]
			[Address(RVA = "0x6E7128", Offset = "0x6E7128", VA = "0x6E7128")]
			internal Node(NodeType rootType)
			{
			}

			[Token(Token = "0x6001FC6")]
			[Address(RVA = "0x6EB9A0", Offset = "0x6EB9A0", VA = "0x6EB9A0")]
			private bool isLeaf()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FC7")]
			[Address(RVA = "0x6E719C", Offset = "0x6E719C", VA = "0x6E719C")]
			internal Node Insert(Image im, bool handed)
			{
				return null;
			}
		}

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ProbeResult bestRoot;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int atlasY;

		[Token(Token = "0x600192E")]
		[Address(RVA = "0x6E5FF4", Offset = "0x6E5FF4", VA = "0x6E5FF4")]
		private static void printTree(Node r, string spc)
		{
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0x6E6368", Offset = "0x6E6368", VA = "0x6E6368")]
		private static void flattenTree(Node r, List<Image> putHere)
		{
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0x6E650C", Offset = "0x6E650C", VA = "0x6E650C")]
		private static void drawGizmosNode(Node r)
		{
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0x6E6814", Offset = "0x6E6814", VA = "0x6E6814")]
		private static Texture2D createFilledTex(Color c, int w, int h)
		{
			return null;
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0x6E6928", Offset = "0x6E6928", VA = "0x6E6928")]
		public void DrawGizmos()
		{
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0x6E69FC", Offset = "0x6E69FC", VA = "0x6E69FC")]
		private bool ProbeSingleAtlas(Image[] imgsToAdd, int idealAtlasW, int idealAtlasH, float imgArea, int maxAtlasDimX, int maxAtlasDimY, ProbeResult pr)
		{
			return default(bool);
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0x6E7998", Offset = "0x6E7998", VA = "0x6E7998")]
		private bool ProbeMultiAtlas(Image[] imgsToAdd, int idealAtlasW, int idealAtlasH, float imgArea, int maxAtlasDimX, int maxAtlasDimY, ProbeResult pr)
		{
			return default(bool);
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0x6E778C", Offset = "0x6E778C", VA = "0x6E778C")]
		internal void GetExtent(Node r, ref int x, ref int y)
		{
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0x6E7F3C", Offset = "0x6E7F3C", VA = "0x6E7F3C")]
		private int StepWidthHeight(int oldVal, int step, int maxDim)
		{
			return default(int);
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0x6E7F6C", Offset = "0x6E7F6C", VA = "0x6E7F6C", Slot = "4")]
		public override AtlasPackingResult[] GetRects(List<Vector2> imgWidthHeights, int maxDimensionX, int maxDimensionY, int atPadding)
		{
			return null;
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0x6E8080", Offset = "0x6E8080", VA = "0x6E8080", Slot = "5")]
		public override AtlasPackingResult[] GetRects(List<Vector2> imgWidthHeights, List<AtlasPadding> paddings, int maxDimensionX, int maxDimensionY, bool doMultiAtlas)
		{
			return null;
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0x6E9874", Offset = "0x6E9874", VA = "0x6E9874")]
		private AtlasPackingResult _GetRectsSingleAtlas(List<Vector2> imgWidthHeights, List<AtlasPadding> paddings, int maxDimensionX, int maxDimensionY, int minImageSizeX, int minImageSizeY, int masterImageSizeX, int masterImageSizeY, int recursionDepth)
		{
			return null;
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0x6E828C", Offset = "0x6E828C", VA = "0x6E828C")]
		private AtlasPackingResult[] _GetRectsMultiAtlas(List<Vector2> imgWidthHeights, List<AtlasPadding> paddings, int maxDimensionPassedX, int maxDimensionPassedY, int minImageSizeX, int minImageSizeY, int masterImageSizeX, int masterImageSizeY)
		{
			return null;
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0x6EB988", Offset = "0x6EB988", VA = "0x6EB988")]
		public MB2_TexturePackerRegular()
		{
		}
	}
	[Token(Token = "0x200033E")]
	public class MB2_TexturePackerHorizontalVert : MB2_TexturePacker
	{
		[Token(Token = "0x20004FF")]
		public enum TexturePackingOrientation
		{
			[Token(Token = "0x4001C47")]
			horizontal,
			[Token(Token = "0x4001C48")]
			vertical
		}

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TexturePackingOrientation packingOrientation;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool stretchImagesToEdges;

		[Token(Token = "0x600193C")]
		[Address(RVA = "0x6E326C", Offset = "0x6E326C", VA = "0x6E326C", Slot = "4")]
		public override AtlasPackingResult[] GetRects(List<Vector2> imgWidthHeights, int maxDimensionX, int maxDimensionY, int padding)
		{
			return null;
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0x6E3390", Offset = "0x6E3390", VA = "0x6E3390", Slot = "5")]
		public override AtlasPackingResult[] GetRects(List<Vector2> imgWidthHeights, List<AtlasPadding> paddings, int maxDimensionX, int maxDimensionY, bool doMultiAtlas)
		{
			return null;
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0x6E4D28", Offset = "0x6E4D28", VA = "0x6E4D28")]
		private AtlasPackingResult _GetRectsSingleAtlas(List<Vector2> imgWidthHeights, List<AtlasPadding> paddings, int maxDimensionX, int maxDimensionY, int minImageSizeX, int minImageSizeY, int masterImageSizeX, int masterImageSizeY, int recursionDepth)
		{
			return null;
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0x6E35D4", Offset = "0x6E35D4", VA = "0x6E35D4")]
		private AtlasPackingResult[] _GetRectsMultiAtlasVertical(List<Vector2> imgWidthHeights, List<AtlasPadding> paddings, int maxDimensionPassedX, int maxDimensionPassedY, int minImageSizeX, int minImageSizeY, int masterImageSizeX, int masterImageSizeY)
		{
			return null;
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0x6E418C", Offset = "0x6E418C", VA = "0x6E418C")]
		private AtlasPackingResult[] _GetRectsMultiAtlasHorizontal(List<Vector2> imgWidthHeights, List<AtlasPadding> paddings, int maxDimensionPassedX, int maxDimensionPassedY, int minImageSizeX, int minImageSizeY, int masterImageSizeX, int masterImageSizeY)
		{
			return null;
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0x6E5DD0", Offset = "0x6E5DD0", VA = "0x6E5DD0")]
		private Image PopLargestThatFits(List<Image> images, int spaceRemaining, int maxDim, bool emptyAtlas)
		{
			return null;
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0x6E5FD8", Offset = "0x6E5FD8", VA = "0x6E5FD8")]
		public MB2_TexturePackerHorizontalVert()
		{
		}
	}
	[Token(Token = "0x200033F")]
	internal interface MB_ITextureCombinerPacker
	{
		[Token(Token = "0x6001943")]
		IEnumerator ConvertTexturesToReadableFormats(ProgressUpdateDelegate progressInfo, MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult result, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL);

		[Token(Token = "0x6001944")]
		AtlasPackingResult[] CalculateAtlasRectangles(MB3_TextureCombinerPipeline.TexturePipelineData data, bool doMultiAtlas, MB2_LogLevel LOG_LEVEL);

		[Token(Token = "0x6001945")]
		IEnumerator CreateAtlases(ProgressUpdateDelegate progressInfo, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, AtlasPackingResult packedAtlasRects, Texture2D[] atlases, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL);
	}
	[Token(Token = "0x2000340")]
	internal abstract class MB3_TextureCombinerPackerRoot : MB_ITextureCombinerPacker
	{
		[Token(Token = "0x2000500")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A964C", Offset = "0x4A964C")]
		private sealed class <ConvertTexturesToReadableFormats>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MB3_TextureCombinerPipeline.TexturePipelineData data;

			[Token(Token = "0x4001C4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x4001C4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x17000276")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FCB")]
				[Address(RVA = "0xB1E724", Offset = "0xB1E724", VA = "0xB1E724", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000277")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FCD")]
				[Address(RVA = "0xB1E794", Offset = "0xB1E794", VA = "0xB1E794", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FC8")]
			[Address(RVA = "0xB1E3B0", Offset = "0xB1E3B0", VA = "0xB1E3B0")]
			[DebuggerHidden]
			public <ConvertTexturesToReadableFormats>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001FC9")]
			[Address(RVA = "0xB1E3E8", Offset = "0xB1E3E8", VA = "0xB1E3E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FCA")]
			[Address(RVA = "0xB1E3EC", Offset = "0xB1E3EC", VA = "0xB1E3EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FCC")]
			[Address(RVA = "0xB1E72C", Offset = "0xB1E72C", VA = "0xB1E72C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0xB18ECC", Offset = "0xB18ECC", VA = "0xB18ECC")]
		internal static void CreateTemporaryTexturesForAtlas(List<MB_TexSet> distinctMaterialTextures, MB3_TextureCombiner combiner, int propIdx, MB3_TextureCombinerPipeline.TexturePipelineData data)
		{
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0xB19288", Offset = "0xB19288", VA = "0xB19288")]
		public static AtlasPackingResult[] CalculateAtlasRectanglesStatic(MB3_TextureCombinerPipeline.TexturePipelineData data, bool doMultiAtlas, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0xB1E294", Offset = "0xB1E294", VA = "0xB1E294")]
		public static void MakeProceduralTexturesReadable(ProgressUpdateDelegate progressInfo, MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult result, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL)
		{
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0xB1E300", Offset = "0xB1E300", VA = "0xB1E300", Slot = "7")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B65EC", Offset = "0x4B65EC")]
		public virtual IEnumerator ConvertTexturesToReadableFormats(ProgressUpdateDelegate progressInfo, MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult result, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0xB1E3DC", Offset = "0xB1E3DC", VA = "0xB1E3DC", Slot = "8")]
		public virtual AtlasPackingResult[] CalculateAtlasRectangles(MB3_TextureCombinerPipeline.TexturePipelineData data, bool doMultiAtlas, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x600194B")]
		public abstract IEnumerator CreateAtlases(ProgressUpdateDelegate progressInfo, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, AtlasPackingResult packedAtlasRects, Texture2D[] atlases, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL);

		[Token(Token = "0x600194C")]
		[Address(RVA = "0xB16778", Offset = "0xB16778", VA = "0xB16778")]
		protected MB3_TextureCombinerPackerRoot()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000341")]
	public class ShaderTextureProperty
	{
		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isNormalMap;

		[Token(Token = "0x600194D")]
		[Address(RVA = "0x714818", Offset = "0x714818", VA = "0x714818")]
		public ShaderTextureProperty(string n, bool norm)
		{
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0x714858", Offset = "0x714858", VA = "0x714858", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0x71492C", Offset = "0x71492C", VA = "0x71492C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0x714934", Offset = "0x714934", VA = "0x714934")]
		public static string[] GetNames(List<ShaderTextureProperty> props)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000342")]
	public class MB3_TextureCombiner
	{
		[Token(Token = "0x2000501")]
		private class TemporaryTexture
		{
			[Token(Token = "0x4001C4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal string property;

			[Token(Token = "0x4001C4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Texture2D texture;

			[Token(Token = "0x6001FCE")]
			[Address(RVA = "0xB0FC9C", Offset = "0xB0FC9C", VA = "0xB0FC9C")]
			public TemporaryTexture(string prop, Texture2D tex)
			{
			}
		}

		[Token(Token = "0x2000502")]
		public class CombineTexturesIntoAtlasesCoroutineResult
		{
			[Token(Token = "0x4001C50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool success;

			[Token(Token = "0x4001C51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool isFinished;

			[Token(Token = "0x6001FCF")]
			[Address(RVA = "0xB0FC8C", Offset = "0xB0FC8C", VA = "0xB0FC8C")]
			public CombineTexturesIntoAtlasesCoroutineResult()
			{
			}
		}

		[Token(Token = "0x2000503")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A965C", Offset = "0x4A965C")]
		private sealed class <CombineTexturesIntoAtlasesCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CombineTexturesIntoAtlasesCoroutineResult coroutineResult;

			[Token(Token = "0x4001C55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float maxTimePerFrame;

			[Token(Token = "0x4001C56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MB3_TextureCombiner <>4__this;

			[Token(Token = "0x4001C57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x4001C58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public MB_AtlasesAndRects resultAtlasesAndRects;

			[Token(Token = "0x4001C59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Material resultMaterial;

			[Token(Token = "0x4001C5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public List<GameObject> objsToMesh;

			[Token(Token = "0x4001C5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public List<Material> allowedMaterialsFilter;

			[Token(Token = "0x4001C5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x4001C5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public List<AtlasPackingResult> packingResults;

			[Token(Token = "0x4001C5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public bool onlyPackRects;

			[Token(Token = "0x17000278")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FD3")]
				[Address(RVA = "0xB0BAC8", Offset = "0xB0BAC8", VA = "0xB0BAC8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000279")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FD5")]
				[Address(RVA = "0xB0BB38", Offset = "0xB0BB38", VA = "0xB0BB38", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FD0")]
			[Address(RVA = "0xB0B668", Offset = "0xB0B668", VA = "0xB0B668")]
			[DebuggerHidden]
			public <CombineTexturesIntoAtlasesCoroutine>d__68(int <>1__state)
			{
			}

			[Token(Token = "0x6001FD1")]
			[Address(RVA = "0xB0B694", Offset = "0xB0B694", VA = "0xB0B694", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FD2")]
			[Address(RVA = "0xB0B698", Offset = "0xB0B698", VA = "0xB0B698", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FD4")]
			[Address(RVA = "0xB0BAD0", Offset = "0xB0BAD0", VA = "0xB0BAD0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000504")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A966C", Offset = "0x4A966C")]
		private sealed class <_CombineTexturesIntoAtlases>d__69 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MB3_TextureCombiner <>4__this;

			[Token(Token = "0x4001C62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x4001C63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<GameObject> objsToMesh;

			[Token(Token = "0x4001C64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CombineTexturesIntoAtlasesCoroutineResult result;

			[Token(Token = "0x4001C65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x4001C66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Material resultMaterial;

			[Token(Token = "0x4001C67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public List<Material> allowedMaterialsFilter;

			[Token(Token = "0x4001C68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public bool onlyPackRects;

			[Token(Token = "0x4001C69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public List<AtlasPackingResult> atlasPackingResult;

			[Token(Token = "0x4001C6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public MB_AtlasesAndRects resultAtlasesAndRects;

			[Token(Token = "0x4001C6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private Stopwatch <sw>5__2;

			[Token(Token = "0x1700027A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FDA")]
				[Address(RVA = "0xB0D2DC", Offset = "0xB0D2DC", VA = "0xB0D2DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FDC")]
				[Address(RVA = "0xB0D34C", Offset = "0xB0D34C", VA = "0xB0D34C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FD6")]
			[Address(RVA = "0xB0BB40", Offset = "0xB0BB40", VA = "0xB0BB40")]
			[DebuggerHidden]
			public <_CombineTexturesIntoAtlases>d__69(int <>1__state)
			{
			}

			[Token(Token = "0x6001FD7")]
			[Address(RVA = "0xB0BB6C", Offset = "0xB0BB6C", VA = "0xB0BB6C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FD8")]
			[Address(RVA = "0xB0BF04", Offset = "0xB0BF04", VA = "0xB0BF04", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FD9")]
			[Address(RVA = "0xB0BB98", Offset = "0xB0BB98", VA = "0xB0BB98")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001FDB")]
			[Address(RVA = "0xB0D2E4", Offset = "0xB0D2E4", VA = "0xB0D2E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000505")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A967C", Offset = "0x4A967C")]
		private sealed class <__CombineTexturesIntoAtlases>d__71 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MB3_TextureCombiner <>4__this;

			[Token(Token = "0x4001C6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB3_TextureCombinerPipeline.TexturePipelineData data;

			[Token(Token = "0x4001C70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x4001C71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CombineTexturesIntoAtlasesCoroutineResult result;

			[Token(Token = "0x4001C72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x4001C73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public MB_AtlasesAndRects resultAtlasesAndRects;

			[Token(Token = "0x4001C74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private StringBuilder <report>5__2;

			[Token(Token = "0x4001C75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private MB_ITextureCombinerPacker <texturePaker>5__3;

			[Token(Token = "0x1700027C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FE0")]
				[Address(RVA = "0xB0F2F8", Offset = "0xB0F2F8", VA = "0xB0F2F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FE2")]
				[Address(RVA = "0xB0F368", Offset = "0xB0F368", VA = "0xB0F368", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FDD")]
			[Address(RVA = "0xB0D354", Offset = "0xB0D354", VA = "0xB0D354")]
			[DebuggerHidden]
			public <__CombineTexturesIntoAtlases>d__71(int <>1__state)
			{
			}

			[Token(Token = "0x6001FDE")]
			[Address(RVA = "0xB0D380", Offset = "0xB0D380", VA = "0xB0D380", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FDF")]
			[Address(RVA = "0xB0D384", Offset = "0xB0D384", VA = "0xB0D384", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FE1")]
			[Address(RVA = "0xB0F300", Offset = "0xB0F300", VA = "0xB0F300", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000506")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A968C", Offset = "0x4A968C")]
		private sealed class <__RunTexturePacker>d__72 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MB3_TextureCombiner <>4__this;

			[Token(Token = "0x4001C79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB3_TextureCombinerPipeline.TexturePipelineData data;

			[Token(Token = "0x4001C7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CombineTexturesIntoAtlasesCoroutineResult result;

			[Token(Token = "0x4001C7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x4001C7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public List<AtlasPackingResult> packingResult;

			[Token(Token = "0x1700027E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FE6")]
				[Address(RVA = "0xB0FC14", Offset = "0xB0FC14", VA = "0xB0FC14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FE8")]
				[Address(RVA = "0xB0FC84", Offset = "0xB0FC84", VA = "0xB0FC84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FE3")]
			[Address(RVA = "0xB0F370", Offset = "0xB0F370", VA = "0xB0F370")]
			[DebuggerHidden]
			public <__RunTexturePacker>d__72(int <>1__state)
			{
			}

			[Token(Token = "0x6001FE4")]
			[Address(RVA = "0xB0F39C", Offset = "0xB0F39C", VA = "0xB0F39C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FE5")]
			[Address(RVA = "0xB0F3A0", Offset = "0xB0F3A0", VA = "0xB0F3A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FE7")]
			[Address(RVA = "0xB0FC1C", Offset = "0xB0FC1C", VA = "0xB0FC1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MB2_LogLevel LOG_LEVEL;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected MB2_TextureBakeResults _textureBakeResults;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected int _atlasPadding;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		protected int _maxAtlasSize;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected int _maxAtlasWidthOverride;

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		protected int _maxAtlasHeightOverride;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected bool _useMaxAtlasWidthOverride;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		protected bool _useMaxAtlasHeightOverride;

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[SerializeField]
		protected bool _resizePowerOfTwoTextures;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		[SerializeField]
		protected bool _fixOutOfBoundsUVs;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		protected int _maxTilingBakeSize;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected bool _saveAtlasesAsAssets;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		protected MB2_PackingAlgorithmEnum _packingAlgorithm;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected bool _meshBakerTexturePackerForcePowerOfTwo;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected List<ShaderTextureProperty> _customShaderPropNames;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		protected bool _normalizeTexelDensity;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[SerializeField]
		protected bool _considerNonTextureProperties;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<TemporaryTexture> _temporaryTextures;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool _RunCorutineWithoutPauseIsRunning;

		[Token(Token = "0x17000129")]
		public MB2_TextureBakeResults textureBakeResults
		{
			[Token(Token = "0x6001951")]
			[Address(RVA = "0xACF750", Offset = "0xACF750", VA = "0xACF750")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001952")]
			[Address(RVA = "0xACF758", Offset = "0xACF758", VA = "0xACF758")]
			set
			{
			}
		}

		[Token(Token = "0x1700012A")]
		public int atlasPadding
		{
			[Token(Token = "0x6001953")]
			[Address(RVA = "0xACF760", Offset = "0xACF760", VA = "0xACF760")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001954")]
			[Address(RVA = "0xACF768", Offset = "0xACF768", VA = "0xACF768")]
			set
			{
			}
		}

		[Token(Token = "0x1700012B")]
		public int maxAtlasSize
		{
			[Token(Token = "0x6001955")]
			[Address(RVA = "0xACF770", Offset = "0xACF770", VA = "0xACF770")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001956")]
			[Address(RVA = "0xACF778", Offset = "0xACF778", VA = "0xACF778")]
			set
			{
			}
		}

		[Token(Token = "0x1700012C")]
		public virtual int maxAtlasWidthOverride
		{
			[Token(Token = "0x6001957")]
			[Address(RVA = "0xACF780", Offset = "0xACF780", VA = "0xACF780", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001958")]
			[Address(RVA = "0xACF788", Offset = "0xACF788", VA = "0xACF788", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x1700012D")]
		public virtual int maxAtlasHeightOverride
		{
			[Token(Token = "0x6001959")]
			[Address(RVA = "0xACF790", Offset = "0xACF790", VA = "0xACF790", Slot = "6")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600195A")]
			[Address(RVA = "0xACF798", Offset = "0xACF798", VA = "0xACF798", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700012E")]
		public virtual bool useMaxAtlasWidthOverride
		{
			[Token(Token = "0x600195B")]
			[Address(RVA = "0xACF7A0", Offset = "0xACF7A0", VA = "0xACF7A0", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600195C")]
			[Address(RVA = "0xACF7A8", Offset = "0xACF7A8", VA = "0xACF7A8", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x1700012F")]
		public virtual bool useMaxAtlasHeightOverride
		{
			[Token(Token = "0x600195D")]
			[Address(RVA = "0xACF7B4", Offset = "0xACF7B4", VA = "0xACF7B4", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600195E")]
			[Address(RVA = "0xACF7BC", Offset = "0xACF7BC", VA = "0xACF7BC", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x17000130")]
		public bool resizePowerOfTwoTextures
		{
			[Token(Token = "0x600195F")]
			[Address(RVA = "0xACF7C8", Offset = "0xACF7C8", VA = "0xACF7C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001960")]
			[Address(RVA = "0xACF7D0", Offset = "0xACF7D0", VA = "0xACF7D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000131")]
		public bool fixOutOfBoundsUVs
		{
			[Token(Token = "0x6001961")]
			[Address(RVA = "0xACF7DC", Offset = "0xACF7DC", VA = "0xACF7DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001962")]
			[Address(RVA = "0xACF7E4", Offset = "0xACF7E4", VA = "0xACF7E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000132")]
		public int maxTilingBakeSize
		{
			[Token(Token = "0x6001963")]
			[Address(RVA = "0xACF7F0", Offset = "0xACF7F0", VA = "0xACF7F0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001964")]
			[Address(RVA = "0xACF7F8", Offset = "0xACF7F8", VA = "0xACF7F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000133")]
		public bool saveAtlasesAsAssets
		{
			[Token(Token = "0x6001965")]
			[Address(RVA = "0xACF800", Offset = "0xACF800", VA = "0xACF800")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001966")]
			[Address(RVA = "0xACF808", Offset = "0xACF808", VA = "0xACF808")]
			set
			{
			}
		}

		[Token(Token = "0x17000134")]
		public MB2_PackingAlgorithmEnum packingAlgorithm
		{
			[Token(Token = "0x6001967")]
			[Address(RVA = "0xACF814", Offset = "0xACF814", VA = "0xACF814")]
			get
			{
				return default(MB2_PackingAlgorithmEnum);
			}
			[Token(Token = "0x6001968")]
			[Address(RVA = "0xACF81C", Offset = "0xACF81C", VA = "0xACF81C")]
			set
			{
			}
		}

		[Token(Token = "0x17000135")]
		public bool meshBakerTexturePackerForcePowerOfTwo
		{
			[Token(Token = "0x6001969")]
			[Address(RVA = "0xACF824", Offset = "0xACF824", VA = "0xACF824")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600196A")]
			[Address(RVA = "0xACF82C", Offset = "0xACF82C", VA = "0xACF82C")]
			set
			{
			}
		}

		[Token(Token = "0x17000136")]
		public List<ShaderTextureProperty> customShaderPropNames
		{
			[Token(Token = "0x600196B")]
			[Address(RVA = "0xACF838", Offset = "0xACF838", VA = "0xACF838")]
			get
			{
				return null;
			}
			[Token(Token = "0x600196C")]
			[Address(RVA = "0xACF840", Offset = "0xACF840", VA = "0xACF840")]
			set
			{
			}
		}

		[Token(Token = "0x17000137")]
		public bool considerNonTextureProperties
		{
			[Token(Token = "0x600196D")]
			[Address(RVA = "0xACF848", Offset = "0xACF848", VA = "0xACF848")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600196E")]
			[Address(RVA = "0xACF850", Offset = "0xACF850", VA = "0xACF850")]
			set
			{
			}
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0xACF85C", Offset = "0xACF85C", VA = "0xACF85C")]
		public static void RunCorutineWithoutPause(IEnumerator cor, int recursionDepth)
		{
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0xACFBB4", Offset = "0xACFBB4", VA = "0xACFBB4")]
		public bool CombineTexturesIntoAtlases(ProgressUpdateDelegate progressInfo, MB_AtlasesAndRects resultAtlasesAndRects, Material resultMaterial, List<GameObject> objsToMesh, List<Material> allowedMaterialsFilter, [Optional] MB2_EditorMethodsInterface textureEditorMethods, [Optional] List<AtlasPackingResult> packingResults, bool onlyPackRects = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0xACFE44", Offset = "0xACFE44", VA = "0xACFE44")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B6650", Offset = "0x4B6650")]
		public IEnumerator CombineTexturesIntoAtlasesCoroutine(ProgressUpdateDelegate progressInfo, MB_AtlasesAndRects resultAtlasesAndRects, Material resultMaterial, List<GameObject> objsToMesh, List<Material> allowedMaterialsFilter, [Optional] MB2_EditorMethodsInterface textureEditorMethods, [Optional] CombineTexturesIntoAtlasesCoroutineResult coroutineResult, float maxTimePerFrame = 0.01f, [Optional] List<AtlasPackingResult> packingResults, bool onlyPackRects = false)
		{
			return null;
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0xACFCCC", Offset = "0xACFCCC", VA = "0xACFCCC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B66B4", Offset = "0x4B66B4")]
		private IEnumerator _CombineTexturesIntoAtlases(ProgressUpdateDelegate progressInfo, CombineTexturesIntoAtlasesCoroutineResult result, MB_AtlasesAndRects resultAtlasesAndRects, Material resultMaterial, List<GameObject> objsToMesh, List<Material> allowedMaterialsFilter, MB2_EditorMethodsInterface textureEditorMethods, List<AtlasPackingResult> atlasPackingResult, bool onlyPackRects)
		{
			return null;
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0xACFFD0", Offset = "0xACFFD0", VA = "0xACFFD0")]
		private MB3_TextureCombinerPipeline.TexturePipelineData LoadPipelineData(Material resultMaterial, List<ShaderTextureProperty> texPropertyNames, List<GameObject> objsToMesh, List<Material> allowedMaterialsFilter, List<MB_TexSet> distinctMaterialTextures)
		{
			return null;
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0xAD0174", Offset = "0xAD0174", VA = "0xAD0174")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B6718", Offset = "0x4B6718")]
		private IEnumerator __CombineTexturesIntoAtlases(ProgressUpdateDelegate progressInfo, CombineTexturesIntoAtlasesCoroutineResult result, MB_AtlasesAndRects resultAtlasesAndRects, MB3_TextureCombinerPipeline.TexturePipelineData data, MB2_EditorMethodsInterface textureEditorMethods)
		{
			return null;
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0xAD0274", Offset = "0xAD0274", VA = "0xAD0274")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B677C", Offset = "0x4B677C")]
		private IEnumerator __RunTexturePacker(CombineTexturesIntoAtlasesCoroutineResult result, MB3_TextureCombinerPipeline.TexturePipelineData data, MB2_EditorMethodsInterface textureEditorMethods, List<AtlasPackingResult> packingResult)
		{
			return null;
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0xAD0354", Offset = "0xAD0354", VA = "0xAD0354")]
		internal int _getNumTemporaryTextures()
		{
			return default(int);
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0xAD03B4", Offset = "0xAD03B4", VA = "0xAD03B4")]
		public Texture2D _createTemporaryTexture(string propertyName, int w, int h, TextureFormat texFormat, bool mipMaps)
		{
			return null;
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0xAD05B4", Offset = "0xAD05B4", VA = "0xAD05B4")]
		internal Texture2D _createTextureCopy(string propertyName, Texture2D t)
		{
			return null;
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0xAD0780", Offset = "0xAD0780", VA = "0xAD0780")]
		internal Texture2D _resizeTexture(string propertyName, Texture2D t, int w, int h)
		{
			return null;
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0xAD0924", Offset = "0xAD0924", VA = "0xAD0924")]
		internal void _destroyAllTemporaryTextures()
		{
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0xAD0AD8", Offset = "0xAD0AD8", VA = "0xAD0AD8")]
		internal void _destroyTemporaryTextures(string propertyName)
		{
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0xAD0EE0", Offset = "0xAD0EE0", VA = "0xAD0EE0")]
		public void _restoreProceduralMaterials()
		{
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0xAD0EE4", Offset = "0xAD0EE4", VA = "0xAD0EE4")]
		public void SuggestTreatment(List<GameObject> objsToMesh, Material[] resultMaterials, List<ShaderTextureProperty> _customShaderPropNames)
		{
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0xAD2680", Offset = "0xAD2680", VA = "0xAD2680")]
		private string PrintList(List<GameObject> gos)
		{
			return null;
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0xAD2798", Offset = "0xAD2798", VA = "0xAD2798")]
		public MB3_TextureCombiner()
		{
		}
	}
	[Token(Token = "0x2000343")]
	public class MeshBakerMaterialTexture
	{
		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Texture2D _t;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float texelDensity;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static bool readyToBuildAtlases;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private DRect encapsulatingSamplingRect;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AF9B8", Offset = "0x4AF9B8")]
		private DRect <matTilingRect>k__BackingField;

		[Token(Token = "0x17000138")]
		public Texture2D t
		{
			[Token(Token = "0x6001981")]
			[Address(RVA = "0x712C3C", Offset = "0x712C3C", VA = "0x712C3C")]
			set
			{
			}
		}

		[Token(Token = "0x17000139")]
		public DRect matTilingRect
		{
			[Token(Token = "0x6001982")]
			[Address(RVA = "0x71001C", Offset = "0x71001C", VA = "0x71001C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B67E0", Offset = "0x4B67E0")]
			get
			{
				return default(DRect);
			}
			[Token(Token = "0x6001983")]
			[Address(RVA = "0x712C44", Offset = "0x712C44", VA = "0x712C44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B67F0", Offset = "0x4B67F0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700013A")]
		public bool isNull
		{
			[Token(Token = "0x600198A")]
			[Address(RVA = "0x712FB8", Offset = "0x712FB8", VA = "0x712FB8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013B")]
		public int width
		{
			[Token(Token = "0x600198B")]
			[Address(RVA = "0x713028", Offset = "0x713028", VA = "0x713028")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700013C")]
		public int height
		{
			[Token(Token = "0x600198C")]
			[Address(RVA = "0x713100", Offset = "0x713100", VA = "0x713100")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0x712C50", Offset = "0x712C50", VA = "0x712C50")]
		public MeshBakerMaterialTexture()
		{
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0x712C58", Offset = "0x712C58", VA = "0x712C58")]
		public MeshBakerMaterialTexture(Texture tx)
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0x712D5C", Offset = "0x712D5C", VA = "0x712D5C")]
		public MeshBakerMaterialTexture(Texture tx, Vector2 matTilingOffset, Vector2 matTilingScale, float texelDens)
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0x70F858", Offset = "0x70F858", VA = "0x70F858")]
		public DRect GetEncapsulatingSamplingRect()
		{
			return default(DRect);
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0x70F864", Offset = "0x70F864", VA = "0x70F864")]
		public void SetEncapsulatingSamplingRect(MB_TexSet ts, DRect r)
		{
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0x712ECC", Offset = "0x712ECC", VA = "0x712ECC")]
		public Texture2D GetTexture2D()
		{
			return null;
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0x7131D8", Offset = "0x7131D8", VA = "0x7131D8")]
		public string GetTexName()
		{
			return null;
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0x713280", Offset = "0x713280", VA = "0x713280")]
		public bool AreTexturesEqual(MeshBakerMaterialTexture b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000344")]
	public class MatAndTransformToMerged
	{
		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material mat;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AF9C8", Offset = "0x4AF9C8")]
		private DRect <obUVRectIfTilingSame>k__BackingField;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AF9D8", Offset = "0x4AF9D8")]
		private DRect <samplingRectMatAndUVTiling>k__BackingField;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AF9E8", Offset = "0x4AF9E8")]
		private DRect <materialTiling>k__BackingField;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string objName;

		[Token(Token = "0x1700013D")]
		public DRect obUVRectIfTilingSame
		{
			[Token(Token = "0x6001990")]
			[Address(RVA = "0x7127AC", Offset = "0x7127AC", VA = "0x7127AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B6800", Offset = "0x4B6800")]
			get
			{
				return default(DRect);
			}
			[Token(Token = "0x6001991")]
			[Address(RVA = "0x7127B8", Offset = "0x7127B8", VA = "0x7127B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B6810", Offset = "0x4B6810")]
			private set
			{
			}
		}

		[Token(Token = "0x1700013E")]
		public DRect samplingRectMatAndUVTiling
		{
			[Token(Token = "0x6001992")]
			[Address(RVA = "0x7127C4", Offset = "0x7127C4", VA = "0x7127C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B6820", Offset = "0x4B6820")]
			get
			{
				return default(DRect);
			}
			[Token(Token = "0x6001993")]
			[Address(RVA = "0x7127D0", Offset = "0x7127D0", VA = "0x7127D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B6830", Offset = "0x4B6830")]
			private set
			{
			}
		}

		[Token(Token = "0x1700013F")]
		public DRect materialTiling
		{
			[Token(Token = "0x6001994")]
			[Address(RVA = "0x70F93C", Offset = "0x70F93C", VA = "0x70F93C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B6840", Offset = "0x4B6840")]
			get
			{
				return default(DRect);
			}
			[Token(Token = "0x6001995")]
			[Address(RVA = "0x7127DC", Offset = "0x7127DC", VA = "0x7127DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B6850", Offset = "0x4B6850")]
			private set
			{
			}
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0x7127E8", Offset = "0x7127E8", VA = "0x7127E8")]
		public MatAndTransformToMerged(DRect obUVrect, bool fixOutOfBoundsUVs)
		{
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0x7128C4", Offset = "0x7128C4", VA = "0x7128C4")]
		public MatAndTransformToMerged(DRect obUVrect, bool fixOutOfBoundsUVs, Material m)
		{
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0x71284C", Offset = "0x71284C", VA = "0x71284C")]
		private void _init(DRect obUVrect, bool fixOutOfBoundsUVs, Material m)
		{
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0x712934", Offset = "0x712934", VA = "0x712934", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0x712A1C", Offset = "0x712A1C", VA = "0x712A1C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0x712AB8", Offset = "0x712AB8", VA = "0x712AB8")]
		public string GetMaterialName()
		{
			return null;
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0x712B84", Offset = "0x712B84", VA = "0x712B84")]
		public void AssignInitialValuesForMaterialTilingAndSamplingRectMatAndUVTiling(bool allTexturesUseSameMatTiling, DRect matTiling)
		{
		}
	}
	[Token(Token = "0x2000345")]
	public class MatsAndGOs
	{
		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<MatAndTransformToMerged> mats;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GameObject> gos;

		[Token(Token = "0x600199D")]
		[Address(RVA = "0x712C34", Offset = "0x712C34", VA = "0x712C34")]
		public MatsAndGOs()
		{
		}
	}
	[Token(Token = "0x2000346")]
	public class MB_TexSet
	{
		[Token(Token = "0x2000507")]
		private interface PipelineVariation
		{
			[Token(Token = "0x6001FE9")]
			void GetRectsForTextureBakeResults(out Rect allPropsUseSameTiling_encapsulatingSamplingRect, out Rect propsUseDifferntTiling_obUVRect);

			[Token(Token = "0x6001FEA")]
			void SetTilingTreatmentAndAdjustEncapsulatingSamplingRect(MB_TextureTilingTreatment newTilingTreatment);

			[Token(Token = "0x6001FEB")]
			Rect GetMaterialTilingRectForTextureBakerResults(int materialIndex);

			[Token(Token = "0x6001FEC")]
			void AdjustResultMaterialNonTextureProperties(Material resultMaterial, List<ShaderTextureProperty> props);
		}

		[Token(Token = "0x2000508")]
		private class PipelineVariationAllTexturesUseSameMatTiling : PipelineVariation
		{
			[Token(Token = "0x4001C7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private MB_TexSet texSet;

			[Token(Token = "0x6001FED")]
			[Address(RVA = "0x70F498", Offset = "0x70F498", VA = "0x70F498")]
			public PipelineVariationAllTexturesUseSameMatTiling(MB_TexSet ts)
			{
			}

			[Token(Token = "0x6001FEE")]
			[Address(RVA = "0x70F4C4", Offset = "0x70F4C4", VA = "0x70F4C4", Slot = "4")]
			public void GetRectsForTextureBakeResults(out Rect allPropsUseSameTiling_encapsulatingSamplingRect, out Rect propsUseDifferntTiling_obUVRect)
			{
			}

			[Token(Token = "0x6001FEF")]
			[Address(RVA = "0x70F620", Offset = "0x70F620", VA = "0x70F620", Slot = "5")]
			public void SetTilingTreatmentAndAdjustEncapsulatingSamplingRect(MB_TextureTilingTreatment newTilingTreatment)
			{
			}

			[Token(Token = "0x6001FF0")]
			[Address(RVA = "0x70F870", Offset = "0x70F870", VA = "0x70F870", Slot = "6")]
			public Rect GetMaterialTilingRectForTextureBakerResults(int materialIndex)
			{
				return default(Rect);
			}

			[Token(Token = "0x6001FF1")]
			[Address(RVA = "0x70F948", Offset = "0x70F948", VA = "0x70F948", Slot = "7")]
			public void AdjustResultMaterialNonTextureProperties(Material resultMaterial, List<ShaderTextureProperty> props)
			{
			}
		}

		[Token(Token = "0x2000509")]
		private class PipelineVariationSomeTexturesUseDifferentMatTiling : PipelineVariation
		{
			[Token(Token = "0x4001C7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private MB_TexSet texSet;

			[Token(Token = "0x6001FF2")]
			[Address(RVA = "0x70F94C", Offset = "0x70F94C", VA = "0x70F94C")]
			public PipelineVariationSomeTexturesUseDifferentMatTiling(MB_TexSet ts)
			{
			}

			[Token(Token = "0x6001FF3")]
			[Address(RVA = "0x70F978", Offset = "0x70F978", VA = "0x70F978", Slot = "4")]
			public void GetRectsForTextureBakeResults(out Rect allPropsUseSameTiling_encapsulatingSamplingRect, out Rect propsUseDifferntTiling_obUVRect)
			{
			}

			[Token(Token = "0x6001FF4")]
			[Address(RVA = "0x70FAF0", Offset = "0x70FAF0", VA = "0x70FAF0", Slot = "5")]
			public void SetTilingTreatmentAndAdjustEncapsulatingSamplingRect(MB_TextureTilingTreatment newTilingTreatment)
			{
			}

			[Token(Token = "0x6001FF5")]
			[Address(RVA = "0x70FD28", Offset = "0x70FD28", VA = "0x70FD28", Slot = "6")]
			public Rect GetMaterialTilingRectForTextureBakerResults(int materialIndex)
			{
				return default(Rect);
			}

			[Token(Token = "0x6001FF6")]
			[Address(RVA = "0x70FD68", Offset = "0x70FD68", VA = "0x70FD68", Slot = "7")]
			public void AdjustResultMaterialNonTextureProperties(Material resultMaterial, List<ShaderTextureProperty> props)
			{
			}
		}

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MeshBakerMaterialTexture[] ts;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MatsAndGOs matsAndGOs;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AF9F8", Offset = "0x4AF9F8")]
		private bool <allTexturesUseSameMatTiling>k__BackingField;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFA08", Offset = "0x4AFA08")]
		private bool <thisIsOnlyTexSetInAtlas>k__BackingField;

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFA18", Offset = "0x4AFA18")]
		private MB_TextureTilingTreatment <tilingTreatment>k__BackingField;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFA28", Offset = "0x4AFA28")]
		private Vector2 <obUVoffset>k__BackingField;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFA38", Offset = "0x4AFA38")]
		private Vector2 <obUVscale>k__BackingField;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int idealWidth;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int idealHeight;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PipelineVariation pipelineVariation;

		[Token(Token = "0x17000140")]
		public bool allTexturesUseSameMatTiling
		{
			[Token(Token = "0x600199E")]
			[Address(RVA = "0xB12FC4", Offset = "0xB12FC4", VA = "0xB12FC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B6860", Offset = "0x4B6860")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600199F")]
			[Address(RVA = "0xB2ABDC", Offset = "0xB2ABDC", VA = "0xB2ABDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B6870", Offset = "0x4B6870")]
			private set
			{
			}
		}

		[Token(Token = "0x17000141")]
		public bool thisIsOnlyTexSetInAtlas
		{
			[Token(Token = "0x60019A0")]
			[Address(RVA = "0xB27828", Offset = "0xB27828", VA = "0xB27828")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B6880", Offset = "0x4B6880")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019A1")]
			[Address(RVA = "0xB2ABE8", Offset = "0xB2ABE8", VA = "0xB2ABE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B6890", Offset = "0x4B6890")]
			private set
			{
			}
		}

		[Token(Token = "0x17000142")]
		public MB_TextureTilingTreatment tilingTreatment
		{
			[Token(Token = "0x60019A2")]
			[Address(RVA = "0xB12FCC", Offset = "0xB12FCC", VA = "0xB12FCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B68A0", Offset = "0x4B68A0")]
			get
			{
				return default(MB_TextureTilingTreatment);
			}
			[Token(Token = "0x60019A3")]
			[Address(RVA = "0xB2ABF4", Offset = "0xB2ABF4", VA = "0xB2ABF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B68B0", Offset = "0x4B68B0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000143")]
		public Vector2 obUVoffset
		{
			[Token(Token = "0x60019A4")]
			[Address(RVA = "0xB20DC8", Offset = "0xB20DC8", VA = "0xB20DC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B68C0", Offset = "0x4B68C0")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60019A5")]
			[Address(RVA = "0xB2ABFC", Offset = "0xB2ABFC", VA = "0xB2ABFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B68D0", Offset = "0x4B68D0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000144")]
		public Vector2 obUVscale
		{
			[Token(Token = "0x60019A6")]
			[Address(RVA = "0xB20DD0", Offset = "0xB20DD0", VA = "0xB20DD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B68E0", Offset = "0x4B68E0")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60019A7")]
			[Address(RVA = "0xB2AC04", Offset = "0xB2AC04", VA = "0xB2AC04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B68F0", Offset = "0x4B68F0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000145")]
		internal DRect obUVrect
		{
			[Token(Token = "0x60019A8")]
			[Address(RVA = "0xB2AC0C", Offset = "0xB2AC0C", VA = "0xB2AC0C")]
			get
			{
				return default(DRect);
			}
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0xB26404", Offset = "0xB26404", VA = "0xB26404")]
		public MB_TexSet(MeshBakerMaterialTexture[] tss, Vector2 uvOffset, Vector2 uvScale, MB_TextureTilingTreatment treatment)
		{
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0xB22604", Offset = "0xB22604", VA = "0xB22604")]
		internal bool IsEqual(object obj, bool fixOutOfBoundsUVs, MB3_TextureCombinerNonTextureProperties resultMaterialTextureBlender)
		{
			return default(bool);
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0xB1C2B8", Offset = "0xB1C2B8", VA = "0xB1C2B8")]
		public Vector2 GetMaxRawTextureHeightWidth()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0xB2AC48", Offset = "0xB2AC48", VA = "0xB2AC48")]
		private Rect GetEncapsulatingSamplingRectIfTilingSame()
		{
			return default(Rect);
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0xB1251C", Offset = "0xB1251C", VA = "0xB1251C")]
		public void SetEncapsulatingSamplingRectWhenMergingTexSets(DRect newEncapsulatingSamplingRect)
		{
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0xB2AD18", Offset = "0xB2AD18", VA = "0xB2AD18")]
		public void SetEncapsulatingSamplingRectForTesting(int propIdx, DRect newEncapsulatingSamplingRect)
		{
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0xB240F8", Offset = "0xB240F8", VA = "0xB240F8")]
		public void SetEncapsulatingRect(int propIdx, bool considerMeshUVs)
		{
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0xB1E12C", Offset = "0xB1E12C", VA = "0xB1E12C")]
		public void CreateColoredTexToReplaceNull(string propName, int propIdx, bool considerMeshUVs, MB3_TextureCombiner combiner, Color col)
		{
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0xB240EC", Offset = "0xB240EC", VA = "0xB240EC")]
		public void SetThisIsOnlyTexSetInAtlasTrue()
		{
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0xB11A38", Offset = "0xB11A38", VA = "0xB11A38")]
		public void SetAllTexturesUseSameMatTilingTrue()
		{
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0xB2748C", Offset = "0xB2748C", VA = "0xB2748C")]
		public void AdjustResultMaterialNonTextureProperties(Material resultMaterial, List<ShaderTextureProperty> props)
		{
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0xB1C438", Offset = "0xB1C438", VA = "0xB1C438")]
		public void SetTilingTreatmentAndAdjustEncapsulatingSamplingRect(MB_TextureTilingTreatment newTilingTreatment)
		{
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0xB2755C", Offset = "0xB2755C", VA = "0xB2755C")]
		internal void GetRectsForTextureBakeResults(out Rect allPropsUseSameTiling_encapsulatingSamplingRect, out Rect propsUseDifferntTiling_obUVRect)
		{
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0xB27628", Offset = "0xB27628", VA = "0xB27628")]
		internal Rect GetMaterialTilingRectForTextureBakerResults(int materialIndex)
		{
			return default(Rect);
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0xB11AA4", Offset = "0xB11AA4", VA = "0xB11AA4")]
		internal void CalcInitialFullSamplingRects(bool fixOutOfBoundsUVs)
		{
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0xB11DF0", Offset = "0xB11DF0", VA = "0xB11DF0")]
		internal void CalcMatAndUVSamplingRects()
		{
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0xB12014", Offset = "0xB12014", VA = "0xB12014")]
		public bool AllTexturesAreSameForMerge(MB_TexSet other, bool considerNonTextureProperties, MB3_TextureCombinerNonTextureProperties resultMaterialTextureBlender)
		{
			return default(bool);
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0xB2ADC0", Offset = "0xB2ADC0", VA = "0xB2ADC0")]
		internal void DrawRectsToMergeGizmos(Color encC, Color innerC)
		{
		}

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0xB11780", Offset = "0xB11780", VA = "0xB11780")]
		internal string GetDescription()
		{
			return null;
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0xB2B0F0", Offset = "0xB2B0F0", VA = "0xB2B0F0")]
		internal string GetMatSubrectDescriptions()
		{
			return null;
		}
	}
	[Token(Token = "0x2000347")]
	public class MB3_TextureCombinerMerging
	{
		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _considerNonTextureProperties;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MB3_TextureCombinerNonTextureProperties resultMaterialTextureBlender;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool fixOutOfBoundsUVs;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public MB2_LogLevel LOG_LEVEL;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool LOG_LEVEL_TRACE_MERGE_MAT_SUBRECTS;

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0xB0FCD4", Offset = "0xB0FCD4", VA = "0xB0FCD4")]
		public static Rect BuildTransformMeshUV2AtlasRect(bool considerMeshUVs, Rect _atlasRect, Rect _obUVRect, Rect _sourceMaterialTiling, Rect _encapsulatingRect)
		{
			return default(Rect);
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0xB10078", Offset = "0xB10078", VA = "0xB10078")]
		public MB3_TextureCombinerMerging(bool considerNonTextureProps, MB3_TextureCombinerNonTextureProperties resultMaterialTexBlender, bool fixObUVs, MB2_LogLevel logLevel)
		{
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0xB100E4", Offset = "0xB100E4", VA = "0xB100E4")]
		public void MergeOverlappingDistinctMaterialTexturesAndCalcMaterialSubrects(List<MB_TexSet> distinctMaterialTextures)
		{
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0xB125EC", Offset = "0xB125EC", VA = "0xB125EC")]
		public void DoIntegrityCheckMergedEncapsulatingSamplingRects(List<MB_TexSet> distinctMaterialTextures)
		{
		}
	}
	[Token(Token = "0x2000348")]
	public class MB3_TextureCombinerNonTextureProperties
	{
		[Token(Token = "0x200050A")]
		public interface MaterialProperty
		{
			[Token(Token = "0x17000280")]
			string PropertyName
			{
				[Token(Token = "0x6001FF7")]
				get;
				[Token(Token = "0x6001FF8")]
				set;
			}

			[Token(Token = "0x6001FF9")]
			MaterialPropertyValueAveraged GetAverageCalculator();

			[Token(Token = "0x6001FFA")]
			object GetDefaultValue();
		}

		[Token(Token = "0x200050B")]
		public class MaterialPropertyFloat : MaterialProperty
		{
			[Token(Token = "0x4001C7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFB18", Offset = "0x4AFB18")]
			private string <PropertyName>k__BackingField;

			[Token(Token = "0x4001C80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private MaterialPropertyValueAveragedFloat _averageCalc;

			[Token(Token = "0x4001C81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float _defaultValue;

			[Token(Token = "0x17000281")]
			public string PropertyName
			{
				[Token(Token = "0x6001FFB")]
				[Address(RVA = "0xB14A30", Offset = "0xB14A30", VA = "0xB14A30", Slot = "4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9C18", Offset = "0x4B9C18")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001FFC")]
				[Address(RVA = "0xB14A38", Offset = "0xB14A38", VA = "0xB14A38", Slot = "5")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9C28", Offset = "0x4B9C28")]
				set
				{
				}
			}

			[Token(Token = "0x6001FFD")]
			[Address(RVA = "0xB13890", Offset = "0xB13890", VA = "0xB13890")]
			public MaterialPropertyFloat(string name, float defValue)
			{
			}

			[Token(Token = "0x6001FFE")]
			[Address(RVA = "0xB14A48", Offset = "0xB14A48", VA = "0xB14A48", Slot = "6")]
			public MaterialPropertyValueAveraged GetAverageCalculator()
			{
				return null;
			}

			[Token(Token = "0x6001FFF")]
			[Address(RVA = "0xB14A50", Offset = "0xB14A50", VA = "0xB14A50", Slot = "7")]
			public object GetDefaultValue()
			{
				return null;
			}
		}

		[Token(Token = "0x200050C")]
		public class MaterialPropertyColor : MaterialProperty
		{
			[Token(Token = "0x4001C82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4AFB28", Offset = "0x4AFB28")]
			private string <PropertyName>k__BackingField;

			[Token(Token = "0x4001C83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private MaterialPropertyValueAveragedColor _averageCalc;

			[Token(Token = "0x4001C84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Color _defaultValue;

			[Token(Token = "0x17000282")]
			public string PropertyName
			{
				[Token(Token = "0x6002000")]
				[Address(RVA = "0xB149AC", Offset = "0xB149AC", VA = "0xB149AC", Slot = "4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9C38", Offset = "0x4B9C38")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002001")]
				[Address(RVA = "0xB149B4", Offset = "0xB149B4", VA = "0xB149B4", Slot = "5")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9C48", Offset = "0x4B9C48")]
				set
				{
				}
			}

			[Token(Token = "0x6002002")]
			[Address(RVA = "0xB137F0", Offset = "0xB137F0", VA = "0xB137F0")]
			public MaterialPropertyColor(string name, Color defaultVal)
			{
			}

			[Token(Token = "0x6002003")]
			[Address(RVA = "0xB149C4", Offset = "0xB149C4", VA = "0xB149C4", Slot = "6")]
			public MaterialPropertyValueAveraged GetAverageCalculator()
			{
				return null;
			}

			[Token(Token = "0x6002004")]
			[Address(RVA = "0xB149CC", Offset = "0xB149CC", VA = "0xB149CC", Slot = "7")]
			public object GetDefaultValue()
			{
				return null;
			}
		}

		[Token(Token = "0x200050D")]
		public interface MaterialPropertyValueAveraged
		{
			[Token(Token = "0x6002005")]
			void TryGetPropValueFromMaterialAndBlendIntoAverage(Material mat, MaterialProperty property);

			[Token(Token = "0x6002006")]
			object GetAverage();

			[Token(Token = "0x6002007")]
			int NumValues();

			[Token(Token = "0x6002008")]
			void SetAverageValueOrDefaultOnMaterial(Material mat, MaterialProperty property);
		}

		[Token(Token = "0x200050E")]
		public class MaterialPropertyValueAveragedFloat : MaterialPropertyValueAveraged
		{
			[Token(Token = "0x4001C85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float averageVal;

			[Token(Token = "0x4001C86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int numValues;

			[Token(Token = "0x6002009")]
			[Address(RVA = "0xB1503C", Offset = "0xB1503C", VA = "0xB1503C", Slot = "4")]
			public void TryGetPropValueFromMaterialAndBlendIntoAverage(Material mat, MaterialProperty property)
			{
			}

			[Token(Token = "0x600200A")]
			[Address(RVA = "0xB151E4", Offset = "0xB151E4", VA = "0xB151E4", Slot = "5")]
			public object GetAverage()
			{
				return null;
			}

			[Token(Token = "0x600200B")]
			[Address(RVA = "0xB15248", Offset = "0xB15248", VA = "0xB15248", Slot = "6")]
			public int NumValues()
			{
				return default(int);
			}

			[Token(Token = "0x600200C")]
			[Address(RVA = "0xB15250", Offset = "0xB15250", VA = "0xB15250", Slot = "7")]
			public void SetAverageValueOrDefaultOnMaterial(Material mat, MaterialProperty property)
			{
			}

			[Token(Token = "0x600200D")]
			[Address(RVA = "0xB14A40", Offset = "0xB14A40", VA = "0xB14A40")]
			public MaterialPropertyValueAveragedFloat()
			{
			}
		}

		[Token(Token = "0x200050F")]
		public class MaterialPropertyValueAveragedColor : MaterialPropertyValueAveraged
		{
			[Token(Token = "0x4001C87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color averageVal;

			[Token(Token = "0x4001C88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int numValues;

			[Token(Token = "0x600200E")]
			[Address(RVA = "0xB14AB4", Offset = "0xB14AB4", VA = "0xB14AB4", Slot = "4")]
			public void TryGetPropValueFromMaterialAndBlendIntoAverage(Material mat, MaterialProperty property)
			{
			}

			[Token(Token = "0x600200F")]
			[Address(RVA = "0xB14CFC", Offset = "0xB14CFC", VA = "0xB14CFC", Slot = "5")]
			public object GetAverage()
			{
				return null;
			}

			[Token(Token = "0x6002010")]
			[Address(RVA = "0xB14D60", Offset = "0xB14D60", VA = "0xB14D60", Slot = "6")]
			public int NumValues()
			{
				return default(int);
			}

			[Token(Token = "0x6002011")]
			[Address(RVA = "0xB14D68", Offset = "0xB14D68", VA = "0xB14D68", Slot = "7")]
			public void SetAverageValueOrDefaultOnMaterial(Material mat, MaterialProperty property)
			{
			}

			[Token(Token = "0x6002012")]
			[Address(RVA = "0xB149BC", Offset = "0xB149BC", VA = "0xB149BC")]
			public MaterialPropertyValueAveragedColor()
			{
			}
		}

		[Token(Token = "0x2000510")]
		public struct TexPropertyNameColorPair
		{
			[Token(Token = "0x4001C89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x4001C8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Color color;

			[Token(Token = "0x6002013")]
			[Address(RVA = "0x511ED0", Offset = "0x511ED0", VA = "0x511ED0")]
			public TexPropertyNameColorPair(string nm, Color col)
			{
			}
		}

		[Token(Token = "0x2000511")]
		private interface NonTextureProperties
		{
			[Token(Token = "0x6002014")]
			bool NonTexturePropertiesAreEqual(Material a, Material b);

			[Token(Token = "0x6002015")]
			Texture2D TintTextureWithTextureCombiner(Texture2D t, MB_TexSet sourceMaterial, ShaderTextureProperty shaderPropertyName);

			[Token(Token = "0x6002016")]
			void AdjustNonTextureProperties(Material resultMat, List<ShaderTextureProperty> texPropertyNames, List<MB_TexSet> distinctMaterialTextures, MB2_EditorMethodsInterface editorMethods);

			[Token(Token = "0x6002017")]
			Color GetColorForTemporaryTexture(Material matIfBlender, ShaderTextureProperty texProperty);

			[Token(Token = "0x6002018")]
			Color GetColorAsItWouldAppearInAtlasIfNoTexture(Material matIfBlender, ShaderTextureProperty texProperty);
		}

		[Token(Token = "0x2000512")]
		private class NonTexturePropertiesDontBlendProps : NonTextureProperties
		{
			[Token(Token = "0x4001C8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private MB3_TextureCombinerNonTextureProperties _textureProperties;

			[Token(Token = "0x6002019")]
			[Address(RVA = "0xB13918", Offset = "0xB13918", VA = "0xB13918")]
			public NonTexturePropertiesDontBlendProps(MB3_TextureCombinerNonTextureProperties textureProperties)
			{
			}

			[Token(Token = "0x600201A")]
			[Address(RVA = "0xB15F10", Offset = "0xB15F10", VA = "0xB15F10", Slot = "4")]
			public bool NonTexturePropertiesAreEqual(Material a, Material b)
			{
				return default(bool);
			}

			[Token(Token = "0x600201B")]
			[Address(RVA = "0xB15F18", Offset = "0xB15F18", VA = "0xB15F18", Slot = "5")]
			public Texture2D TintTextureWithTextureCombiner(Texture2D t, MB_TexSet sourceMaterial, ShaderTextureProperty shaderPropertyName)
			{
				return null;
			}

			[Token(Token = "0x600201C")]
			[Address(RVA = "0xB15F90", Offset = "0xB15F90", VA = "0xB15F90", Slot = "6")]
			public void AdjustNonTextureProperties(Material resultMat, List<ShaderTextureProperty> texPropertyNames, List<MB_TexSet> distinctMaterialTextures, MB2_EditorMethodsInterface editorMethods)
			{
			}

			[Token(Token = "0x600201D")]
			[Address(RVA = "0xB162B8", Offset = "0xB162B8", VA = "0xB162B8", Slot = "8")]
			public Color GetColorAsItWouldAppearInAtlasIfNoTexture(Material matIfBlender, ShaderTextureProperty texProperty)
			{
				return default(Color);
			}

			[Token(Token = "0x600201E")]
			[Address(RVA = "0xB162C0", Offset = "0xB162C0", VA = "0xB162C0", Slot = "7")]
			public Color GetColorForTemporaryTexture(Material matIfBlender, ShaderTextureProperty texProperty)
			{
				return default(Color);
			}
		}

		[Token(Token = "0x2000513")]
		private class NonTexturePropertiesBlendProps : NonTextureProperties
		{
			[Token(Token = "0x4001C8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private MB3_TextureCombinerNonTextureProperties _textureProperties;

			[Token(Token = "0x4001C8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private TextureBlender resultMaterialTextureBlender;

			[Token(Token = "0x600201F")]
			[Address(RVA = "0xB1447C", Offset = "0xB1447C", VA = "0xB1447C")]
			public NonTexturePropertiesBlendProps(MB3_TextureCombinerNonTextureProperties textureProperties, TextureBlender resultMats)
			{
			}

			[Token(Token = "0x6002020")]
			[Address(RVA = "0xB15510", Offset = "0xB15510", VA = "0xB15510", Slot = "4")]
			public bool NonTexturePropertiesAreEqual(Material a, Material b)
			{
				return default(bool);
			}

			[Token(Token = "0x6002021")]
			[Address(RVA = "0xB155E0", Offset = "0xB155E0", VA = "0xB155E0", Slot = "5")]
			public Texture2D TintTextureWithTextureCombiner(Texture2D t, MB_TexSet sourceMaterial, ShaderTextureProperty shaderPropertyName)
			{
				return null;
			}

			[Token(Token = "0x6002022")]
			[Address(RVA = "0xB15A60", Offset = "0xB15A60", VA = "0xB15A60", Slot = "6")]
			public void AdjustNonTextureProperties(Material resultMat, List<ShaderTextureProperty> texPropertyNames, List<MB_TexSet> distinctMaterialTextures, MB2_EditorMethodsInterface editorMethods)
			{
			}

			[Token(Token = "0x6002023")]
			[Address(RVA = "0xB15C90", Offset = "0xB15C90", VA = "0xB15C90", Slot = "8")]
			public Color GetColorAsItWouldAppearInAtlasIfNoTexture(Material matIfBlender, ShaderTextureProperty texProperty)
			{
				return default(Color);
			}

			[Token(Token = "0x6002024")]
			[Address(RVA = "0xB15E40", Offset = "0xB15E40", VA = "0xB15E40", Slot = "7")]
			public Color GetColorForTemporaryTexture(Material matIfBlender, ShaderTextureProperty texProperty)
			{
				return default(Color);
			}
		}

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Color NEUTRAL_NORMAL_MAP_COLOR;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TexPropertyNameColorPair[] defaultTextureProperty2DefaultColorMap;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MaterialProperty[] _nonTextureProperties;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MB2_LogLevel LOG_LEVEL;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool _considerNonTextureProperties;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextureBlender resultMaterialTextureBlender;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextureBlender[] textureBlenders;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<string, Color> textureProperty2DefaultColorMap;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private NonTextureProperties _nonTexturePropertiesBlender;

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0xB12FD8", Offset = "0xB12FD8", VA = "0xB12FD8")]
		public MB3_TextureCombinerNonTextureProperties(MB2_LogLevel ll, bool considerNonTextureProps)
		{
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0xB13944", Offset = "0xB13944", VA = "0xB13944")]
		internal void CollectAverageValuesOfNonTextureProperties(Material resultMaterial, Material mat)
		{
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0xB0D298", Offset = "0xB0D298", VA = "0xB0D298")]
		internal void LoadTextureBlendersIfNeeded(Material resultMaterial)
		{
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0xB142AC", Offset = "0xB142AC", VA = "0xB142AC")]
		private static bool InterfaceFilter(Type typeObj, object criteriaObj)
		{
			return default(bool);
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0xB14138", Offset = "0xB14138", VA = "0xB14138")]
		private void FindBestTextureBlender(Material resultMaterial)
		{
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0xB13B88", Offset = "0xB13B88", VA = "0xB13B88")]
		private void LoadTextureBlenders()
		{
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0xB144B4", Offset = "0xB144B4", VA = "0xB144B4")]
		internal bool NonTexturePropertiesAreEqual(Material a, Material b)
		{
			return default(bool);
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0xB14580", Offset = "0xB14580", VA = "0xB14580")]
		internal Texture2D TintTextureWithTextureCombiner(Texture2D t, MB_TexSet sourceMaterial, ShaderTextureProperty shaderPropertyName)
		{
			return null;
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0xB14660", Offset = "0xB14660", VA = "0xB14660")]
		internal void AdjustNonTextureProperties(Material resultMat, List<ShaderTextureProperty> texPropertyNames, List<MB_TexSet> distinctMaterialTextures, MB2_EditorMethodsInterface editorMethods)
		{
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0xB14794", Offset = "0xB14794", VA = "0xB14794")]
		internal Color GetColorAsItWouldAppearInAtlasIfNoTexture(Material matIfBlender, ShaderTextureProperty texProperty)
		{
			return default(Color);
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0xB14864", Offset = "0xB14864", VA = "0xB14864")]
		internal Color GetColorForTemporaryTexture(Material matIfBlender, ShaderTextureProperty texProperty)
		{
			return default(Color);
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0xB14310", Offset = "0xB14310", VA = "0xB14310")]
		private TextureBlender FindMatchingTextureBlender(string shaderName)
		{
			return null;
		}
	}
	[Token(Token = "0x2000349")]
	internal class MB3_TextureCombinerPackerMeshBaker : MB3_TextureCombinerPackerRoot
	{
		[Token(Token = "0x2000514")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A969C", Offset = "0x4A969C")]
		private sealed class <CreateAtlases>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AtlasPackingResult packedAtlasRects;

			[Token(Token = "0x4001C91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB2_LogLevel LOG_LEVEL;

			[Token(Token = "0x4001C92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MB3_TextureCombinerPipeline.TexturePipelineData data;

			[Token(Token = "0x4001C93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public MB3_TextureCombiner combiner;

			[Token(Token = "0x4001C94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x4001C95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x4001C96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Texture2D[] atlases;

			[Token(Token = "0x4001C97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Rect[] <uvRects>5__2;

			[Token(Token = "0x4001C98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private int <atlasSizeX>5__3;

			[Token(Token = "0x4001C99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private int <atlasSizeY>5__4;

			[Token(Token = "0x4001C9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private int <propIdx>5__5;

			[Token(Token = "0x4001C9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private ShaderTextureProperty <property>5__6;

			[Token(Token = "0x4001C9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private Color[][] <atlasPixels>5__7;

			[Token(Token = "0x4001C9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private bool <isNormalMap>5__8;

			[Token(Token = "0x4001C9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			private int <texSetIdx>5__9;

			[Token(Token = "0x17000283")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002028")]
				[Address(RVA = "0xB19178", Offset = "0xB19178", VA = "0xB19178", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000284")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600202A")]
				[Address(RVA = "0xB191E8", Offset = "0xB191E8", VA = "0xB191E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002025")]
			[Address(RVA = "0xB1653C", Offset = "0xB1653C", VA = "0xB1653C")]
			[DebuggerHidden]
			public <CreateAtlases>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6002026")]
			[Address(RVA = "0xB17810", Offset = "0xB17810", VA = "0xB17810", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002027")]
			[Address(RVA = "0xB17814", Offset = "0xB17814", VA = "0xB17814", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002029")]
			[Address(RVA = "0xB19180", Offset = "0xB19180", VA = "0xB19180", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000515")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A96AC", Offset = "0x4A96AC")]
		private sealed class <CopyScaledAndTiledToAtlas>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MeshBakerMaterialTexture source;

			[Token(Token = "0x4001CA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB2_LogLevel LOG_LEVEL;

			[Token(Token = "0x4001CA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int targX;

			[Token(Token = "0x4001CA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int targY;

			[Token(Token = "0x4001CA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int targW;

			[Token(Token = "0x4001CA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int targH;

			[Token(Token = "0x4001CA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public AtlasPadding padding;

			[Token(Token = "0x4001CA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public DRect srcSamplingRect;

			[Token(Token = "0x4001CA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public MB3_TextureCombinerPipeline.TexturePipelineData data;

			[Token(Token = "0x4001CAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public MB3_TextureCombiner combiner;

			[Token(Token = "0x4001CAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public ShaderTextureProperty shaderPropertyName;

			[Token(Token = "0x4001CAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public MB_TexSet sourceMaterial;

			[Token(Token = "0x4001CAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x4001CAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Color[][] atlasPixels;

			[Token(Token = "0x4001CAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private int <w>5__2;

			[Token(Token = "0x4001CB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			private int <h>5__3;

			[Token(Token = "0x4001CB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private int <i>5__4;

			[Token(Token = "0x4001CB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			private int <j>5__5;

			[Token(Token = "0x17000285")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600202E")]
				[Address(RVA = "0xB17798", Offset = "0xB17798", VA = "0xB17798", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000286")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002030")]
				[Address(RVA = "0xB17808", Offset = "0xB17808", VA = "0xB17808", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600202B")]
			[Address(RVA = "0xB16744", Offset = "0xB16744", VA = "0xB16744")]
			[DebuggerHidden]
			public <CopyScaledAndTiledToAtlas>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x600202C")]
			[Address(RVA = "0xB16780", Offset = "0xB16780", VA = "0xB16780", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600202D")]
			[Address(RVA = "0xB16784", Offset = "0xB16784", VA = "0xB16784", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600202F")]
			[Address(RVA = "0xB177A0", Offset = "0xB177A0", VA = "0xB177A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0xB16424", Offset = "0xB16424", VA = "0xB16424", Slot = "9")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B6900", Offset = "0x4B6900")]
		public override IEnumerator CreateAtlases(ProgressUpdateDelegate progressInfo, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, AtlasPackingResult packedAtlasRects, Texture2D[] atlases, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0xB16568", Offset = "0xB16568", VA = "0xB16568")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B6964", Offset = "0x4B6964")]
		internal static IEnumerator CopyScaledAndTiledToAtlas(MeshBakerMaterialTexture source, MB_TexSet sourceMaterial, ShaderTextureProperty shaderPropertyName, DRect srcSamplingRect, int targX, int targY, int targW, int targH, AtlasPadding padding, Color[][] atlasPixels, bool isNormalMap, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, [Optional] ProgressUpdateDelegate progressInfo, MB2_LogLevel LOG_LEVEL = MB2_LogLevel.info)
		{
			return null;
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0xB16770", Offset = "0xB16770", VA = "0xB16770")]
		public MB3_TextureCombinerPackerMeshBaker()
		{
		}
	}
	[Token(Token = "0x200034A")]
	internal class MB3_TextureCombinerPackerMeshBakerFast : MB_ITextureCombinerPacker
	{
		[Token(Token = "0x2000516")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A96BC", Offset = "0x4A96BC")]
		private sealed class <ConvertTexturesToReadableFormats>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000287")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002034")]
				[Address(RVA = "0xB19688", Offset = "0xB19688", VA = "0xB19688", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000288")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002036")]
				[Address(RVA = "0xB196F8", Offset = "0xB196F8", VA = "0xB196F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002031")]
			[Address(RVA = "0xB19250", Offset = "0xB19250", VA = "0xB19250")]
			[DebuggerHidden]
			public <ConvertTexturesToReadableFormats>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6002032")]
			[Address(RVA = "0xB1966C", Offset = "0xB1966C", VA = "0xB1966C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002033")]
			[Address(RVA = "0xB19670", Offset = "0xB19670", VA = "0xB19670", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002035")]
			[Address(RVA = "0xB19690", Offset = "0xB19690", VA = "0xB19690", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000517")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A96CC", Offset = "0x4A96CC")]
		private sealed class <CreateAtlases>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AtlasPackingResult packedAtlasRects;

			[Token(Token = "0x4001CB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB2_LogLevel LOG_LEVEL;

			[Token(Token = "0x4001CB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MB3_TextureCombinerPipeline.TexturePipelineData data;

			[Token(Token = "0x4001CBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public MB3_TextureCombiner combiner;

			[Token(Token = "0x4001CBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x4001CBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Texture2D[] atlases;

			[Token(Token = "0x4001CBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x17000289")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600203A")]
				[Address(RVA = "0xB1AB38", Offset = "0xB1AB38", VA = "0xB1AB38", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600203C")]
				[Address(RVA = "0xB1ABA8", Offset = "0xB1ABA8", VA = "0xB1ABA8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002037")]
			[Address(RVA = "0xB19638", Offset = "0xB19638", VA = "0xB19638")]
			[DebuggerHidden]
			public <CreateAtlases>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6002038")]
			[Address(RVA = "0xB19700", Offset = "0xB19700", VA = "0xB19700", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002039")]
			[Address(RVA = "0xB19704", Offset = "0xB19704", VA = "0xB19704", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600203B")]
			[Address(RVA = "0xB1AB40", Offset = "0xB1AB40", VA = "0xB1AB40", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0xB191F0", Offset = "0xB191F0", VA = "0xB191F0", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B69C8", Offset = "0x4B69C8")]
		public IEnumerator ConvertTexturesToReadableFormats(ProgressUpdateDelegate progressInfo, MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult result, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0xB1927C", Offset = "0xB1927C", VA = "0xB1927C", Slot = "7")]
		public virtual AtlasPackingResult[] CalculateAtlasRectangles(MB3_TextureCombinerPipeline.TexturePipelineData data, bool doMultiAtlas, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0xB19520", Offset = "0xB19520", VA = "0xB19520", Slot = "6")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B6A2C", Offset = "0x4B6A2C")]
		public IEnumerator CreateAtlases(ProgressUpdateDelegate progressInfo, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, AtlasPackingResult packedAtlasRects, Texture2D[] atlases, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0xB19664", Offset = "0xB19664", VA = "0xB19664")]
		public MB3_TextureCombinerPackerMeshBakerFast()
		{
		}
	}
	[Token(Token = "0x200034B")]
	internal class MB3_TextureCombinerPackerMeshBakerHorizontalVertical : MB3_TextureCombinerPackerMeshBaker
	{
		[Token(Token = "0x2000518")]
		private interface IPipeline
		{
			[Token(Token = "0x600203D")]
			MB2_PackingAlgorithmEnum GetPackingAlg();

			[Token(Token = "0x600203E")]
			void SortTexSetIntoBins(MB_TexSet texSet, List<MB_TexSet> horizontalVert, List<MB_TexSet> regular, int maxAtlasWidth, int maxAtlasHeight);

			[Token(Token = "0x600203F")]
			MB_TextureTilingTreatment GetEdge2EdgeTreatment();

			[Token(Token = "0x6002040")]
			void InitializeAtlasPadding(ref AtlasPadding padding, int paddingValue);

			[Token(Token = "0x6002041")]
			void MergeAtlasPackingResultStackBonAInternal(AtlasPackingResult a, AtlasPackingResult b, out Rect AatlasToFinal, out Rect BatlasToFinal, bool stretchBToAtlasWidth, int maxWidthDim, int maxHeightDim, out int atlasX, out int atlasY);

			[Token(Token = "0x6002042")]
			void GetExtraRoomForRegularAtlas(int usedHorizontalVertWidth, int usedHorizontalVertHeight, int maxAtlasWidth, int maxAtlasHeight, out int atlasRegularMaxWidth, out int atlasRegularMaxHeight);
		}

		[Token(Token = "0x2000519")]
		private class VerticalPipeline : IPipeline
		{
			[Token(Token = "0x6002043")]
			[Address(RVA = "0xB1D28C", Offset = "0xB1D28C", VA = "0xB1D28C", Slot = "4")]
			public MB2_PackingAlgorithmEnum GetPackingAlg()
			{
				return default(MB2_PackingAlgorithmEnum);
			}

			[Token(Token = "0x6002044")]
			[Address(RVA = "0xB1D294", Offset = "0xB1D294", VA = "0xB1D294", Slot = "5")]
			public void SortTexSetIntoBins(MB_TexSet texSet, List<MB_TexSet> horizontalVert, List<MB_TexSet> regular, int maxAtlasWidth, int maxAtlasHeight)
			{
			}

			[Token(Token = "0x6002045")]
			[Address(RVA = "0xB1D394", Offset = "0xB1D394", VA = "0xB1D394", Slot = "6")]
			public MB_TextureTilingTreatment GetEdge2EdgeTreatment()
			{
				return default(MB_TextureTilingTreatment);
			}

			[Token(Token = "0x6002046")]
			[Address(RVA = "0xB1D39C", Offset = "0xB1D39C", VA = "0xB1D39C", Slot = "7")]
			public void InitializeAtlasPadding(ref AtlasPadding padding, int paddingValue)
			{
			}

			[Token(Token = "0x6002047")]
			[Address(RVA = "0xB1D3A4", Offset = "0xB1D3A4", VA = "0xB1D3A4", Slot = "8")]
			public void MergeAtlasPackingResultStackBonAInternal(AtlasPackingResult a, AtlasPackingResult b, out Rect AatlasToFinal, out Rect BatlasToFinal, bool stretchBToAtlasWidth, int maxWidthDim, int maxHeightDim, out int atlasX, out int atlasY)
			{
			}

			[Token(Token = "0x6002048")]
			[Address(RVA = "0xB1D5EC", Offset = "0xB1D5EC", VA = "0xB1D5EC", Slot = "9")]
			public void GetExtraRoomForRegularAtlas(int usedHorizontalVertWidth, int usedHorizontalVertHeight, int maxAtlasWidth, int maxAtlasHeight, out int atlasRegularMaxWidth, out int atlasRegularMaxHeight)
			{
			}

			[Token(Token = "0x6002049")]
			[Address(RVA = "0xB1C2B0", Offset = "0xB1C2B0", VA = "0xB1C2B0")]
			public VerticalPipeline()
			{
			}
		}

		[Token(Token = "0x200051A")]
		private class HorizontalPipeline : IPipeline
		{
			[Token(Token = "0x600204A")]
			[Address(RVA = "0xB1CF20", Offset = "0xB1CF20", VA = "0xB1CF20", Slot = "4")]
			public MB2_PackingAlgorithmEnum GetPackingAlg()
			{
				return default(MB2_PackingAlgorithmEnum);
			}

			[Token(Token = "0x600204B")]
			[Address(RVA = "0xB1CF28", Offset = "0xB1CF28", VA = "0xB1CF28", Slot = "5")]
			public void SortTexSetIntoBins(MB_TexSet texSet, List<MB_TexSet> horizontalVert, List<MB_TexSet> regular, int maxAtlasWidth, int maxAtlasHeight)
			{
			}

			[Token(Token = "0x600204C")]
			[Address(RVA = "0xB1D028", Offset = "0xB1D028", VA = "0xB1D028", Slot = "6")]
			public MB_TextureTilingTreatment GetEdge2EdgeTreatment()
			{
				return default(MB_TextureTilingTreatment);
			}

			[Token(Token = "0x600204D")]
			[Address(RVA = "0xB1D030", Offset = "0xB1D030", VA = "0xB1D030", Slot = "7")]
			public void InitializeAtlasPadding(ref AtlasPadding padding, int paddingValue)
			{
			}

			[Token(Token = "0x600204E")]
			[Address(RVA = "0xB1D038", Offset = "0xB1D038", VA = "0xB1D038", Slot = "8")]
			public void MergeAtlasPackingResultStackBonAInternal(AtlasPackingResult a, AtlasPackingResult b, out Rect AatlasToFinal, out Rect BatlasToFinal, bool stretchBToAtlasWidth, int maxWidthDim, int maxHeightDim, out int atlasX, out int atlasY)
			{
			}

			[Token(Token = "0x600204F")]
			[Address(RVA = "0xB1D27C", Offset = "0xB1D27C", VA = "0xB1D27C", Slot = "9")]
			public void GetExtraRoomForRegularAtlas(int usedHorizontalVertWidth, int usedHorizontalVertHeight, int maxAtlasWidth, int maxAtlasHeight, out int atlasRegularMaxWidth, out int atlasRegularMaxHeight)
			{
			}

			[Token(Token = "0x6002050")]
			[Address(RVA = "0xB1C2A8", Offset = "0xB1C2A8", VA = "0xB1C2A8")]
			public HorizontalPipeline()
			{
			}
		}

		[Token(Token = "0x200051B")]
		public enum AtlasDirection
		{
			[Token(Token = "0x4001CBF")]
			horizontal,
			[Token(Token = "0x4001CC0")]
			vertical
		}

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AtlasDirection _atlasDirection;

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0xB1ABB0", Offset = "0xB1ABB0", VA = "0xB1ABB0")]
		public MB3_TextureCombinerPackerMeshBakerHorizontalVertical(AtlasDirection ad)
		{
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0xB1ABDC", Offset = "0xB1ABDC", VA = "0xB1ABDC", Slot = "8")]
		public override AtlasPackingResult[] CalculateAtlasRectangles(MB3_TextureCombinerPipeline.TexturePipelineData data, bool doMultiAtlas, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0xB1CDF8", Offset = "0xB1CDF8", VA = "0xB1CDF8")]
		public static AtlasPackingResult TestStackRectanglesHorizontal(AtlasPackingResult a, AtlasPackingResult b, int maxHeightDim, int maxWidthDim, bool stretchBToAtlasWidth)
		{
			return null;
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0xB1CE8C", Offset = "0xB1CE8C", VA = "0xB1CE8C")]
		public static AtlasPackingResult TestStackRectanglesVertical(AtlasPackingResult a, AtlasPackingResult b, int maxHeightDim, int maxWidthDim, bool stretchBToAtlasWidth)
		{
			return null;
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0xB1C624", Offset = "0xB1C624", VA = "0xB1C624")]
		private static AtlasPackingResult MergeAtlasPackingResultStackBonA(AtlasPackingResult a, AtlasPackingResult b, int maxWidthDim, int maxHeightDim, bool stretchBToAtlasWidth, IPipeline pipeline)
		{
			return null;
		}
	}
	[Token(Token = "0x200034C")]
	internal class MB3_TextureCombinerPackerOneTextureInAtlas : MB_ITextureCombinerPacker
	{
		[Token(Token = "0x200051C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A96DC", Offset = "0x4A96DC")]
		private sealed class <ConvertTexturesToReadableFormats>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x1700028B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002054")]
				[Address(RVA = "0xB1DC78", Offset = "0xB1DC78", VA = "0xB1DC78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002056")]
				[Address(RVA = "0xB1DCE8", Offset = "0xB1DCE8", VA = "0xB1DCE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002051")]
			[Address(RVA = "0xB1D65C", Offset = "0xB1D65C", VA = "0xB1D65C")]
			[DebuggerHidden]
			public <ConvertTexturesToReadableFormats>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6002052")]
			[Address(RVA = "0xB1DC5C", Offset = "0xB1DC5C", VA = "0xB1DC5C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002053")]
			[Address(RVA = "0xB1DC60", Offset = "0xB1DC60", VA = "0xB1DC60", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002055")]
			[Address(RVA = "0xB1DC80", Offset = "0xB1DC80", VA = "0xB1DC80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200051D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A96EC", Offset = "0x4A96EC")]
		private sealed class <CreateAtlases>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MB2_LogLevel LOG_LEVEL;

			[Token(Token = "0x4001CC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB3_TextureCombinerPipeline.TexturePipelineData data;

			[Token(Token = "0x4001CC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Texture2D[] atlases;

			[Token(Token = "0x1700028D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600205A")]
				[Address(RVA = "0xB1E0B4", Offset = "0xB1E0B4", VA = "0xB1E0B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600205C")]
				[Address(RVA = "0xB1E124", Offset = "0xB1E124", VA = "0xB1E124", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002057")]
			[Address(RVA = "0xB1DC28", Offset = "0xB1DC28", VA = "0xB1DC28")]
			[DebuggerHidden]
			public <CreateAtlases>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6002058")]
			[Address(RVA = "0xB1DCF0", Offset = "0xB1DCF0", VA = "0xB1DCF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002059")]
			[Address(RVA = "0xB1DCF4", Offset = "0xB1DCF4", VA = "0xB1DCF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600205B")]
			[Address(RVA = "0xB1E0BC", Offset = "0xB1E0BC", VA = "0xB1E0BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0xB1D5FC", Offset = "0xB1D5FC", VA = "0xB1D5FC", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B6A90", Offset = "0x4B6A90")]
		public IEnumerator ConvertTexturesToReadableFormats(ProgressUpdateDelegate progressInfo, MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult result, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0xB1D688", Offset = "0xB1D688", VA = "0xB1D688", Slot = "5")]
		public AtlasPackingResult[] CalculateAtlasRectangles(MB3_TextureCombinerPipeline.TexturePipelineData data, bool doMultiAtlas, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0xB1DB7C", Offset = "0xB1DB7C", VA = "0xB1DB7C", Slot = "6")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B6AF4", Offset = "0x4B6AF4")]
		public IEnumerator CreateAtlases(ProgressUpdateDelegate progressInfo, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, AtlasPackingResult packedAtlasRects, Texture2D[] atlases, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0xB1DC54", Offset = "0xB1DC54", VA = "0xB1DC54")]
		public MB3_TextureCombinerPackerOneTextureInAtlas()
		{
		}
	}
	[Token(Token = "0x200034D")]
	internal class MB3_TextureCombinerPackerUnity : MB3_TextureCombinerPackerRoot
	{
		[Token(Token = "0x200051E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A96FC", Offset = "0x4A96FC")]
		private sealed class <CreateAtlases>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AtlasPackingResult packedAtlasRects;

			[Token(Token = "0x4001CCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB3_TextureCombinerPipeline.TexturePipelineData data;

			[Token(Token = "0x4001CCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MB2_LogLevel LOG_LEVEL;

			[Token(Token = "0x4001CCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public MB3_TextureCombiner combiner;

			[Token(Token = "0x4001CCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x4001CCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x4001CD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Texture2D[] atlases;

			[Token(Token = "0x1700028F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002060")]
				[Address(RVA = "0xB20DD8", Offset = "0xB20DD8", VA = "0xB20DD8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000290")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002062")]
				[Address(RVA = "0xB20E48", Offset = "0xB20E48", VA = "0xB20E48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600205D")]
			[Address(RVA = "0xB1E9A8", Offset = "0xB1E9A8", VA = "0xB1E9A8")]
			[DebuggerHidden]
			public <CreateAtlases>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x600205E")]
			[Address(RVA = "0xB1F8A0", Offset = "0xB1F8A0", VA = "0xB1F8A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600205F")]
			[Address(RVA = "0xB1F8A4", Offset = "0xB1F8A4", VA = "0xB1F8A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002061")]
			[Address(RVA = "0xB20DE0", Offset = "0xB20DE0", VA = "0xB20DE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0xB1E79C", Offset = "0xB1E79C", VA = "0xB1E79C", Slot = "8")]
		public override AtlasPackingResult[] CalculateAtlasRectangles(MB3_TextureCombinerPipeline.TexturePipelineData data, bool doMultiAtlas, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0xB1E894", Offset = "0xB1E894", VA = "0xB1E894", Slot = "9")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B6B58", Offset = "0x4B6B58")]
		public override IEnumerator CreateAtlases(ProgressUpdateDelegate progressInfo, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, AtlasPackingResult packedAtlasRects, Texture2D[] atlases, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0xB1E9D4", Offset = "0xB1E9D4", VA = "0xB1E9D4")]
		internal static Texture2D _copyTexturesIntoAtlas(Texture2D[] texToPack, int padding, Rect[] rs, int w, int h, MB3_TextureCombiner combiner)
		{
			return null;
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0xB1ED38", Offset = "0xB1ED38", VA = "0xB1ED38")]
		internal static Texture2D GetAdjustedForScaleAndOffset2(string propertyName, MeshBakerMaterialTexture source, Vector2 obUVoffset, Vector2 obUVscale, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0xB1F898", Offset = "0xB1F898", VA = "0xB1F898")]
		public MB3_TextureCombinerPackerUnity()
		{
		}
	}
	[Token(Token = "0x200034E")]
	public class MB3_TextureCombinerPipeline
	{
		[Token(Token = "0x200051F")]
		public struct CreateAtlasForProperty
		{
			[Token(Token = "0x4001CD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool allTexturesAreNull;

			[Token(Token = "0x4001CD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool allTexturesAreSame;

			[Token(Token = "0x4001CD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
			public bool allNonTexturePropsAreSame;

			[Token(Token = "0x6002063")]
			[Address(RVA = "0x511F34", Offset = "0x511F34", VA = "0x511F34", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x2000520")]
		internal class TexturePipelineData
		{
			[Token(Token = "0x4001CD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal MB2_TextureBakeResults _textureBakeResults;

			[Token(Token = "0x4001CD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal int _atlasPadding;

			[Token(Token = "0x4001CD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal int _maxAtlasWidth;

			[Token(Token = "0x4001CD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal int _maxAtlasHeight;

			[Token(Token = "0x4001CD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal bool _useMaxAtlasHeightOverride;

			[Token(Token = "0x4001CD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
			internal bool _useMaxAtlasWidthOverride;

			[Token(Token = "0x4001CDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
			internal bool _resizePowerOfTwoTextures;

			[Token(Token = "0x4001CDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
			internal bool _fixOutOfBoundsUVs;

			[Token(Token = "0x4001CDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal int _maxTilingBakeSize;

			[Token(Token = "0x4001CDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal bool _saveAtlasesAsAssets;

			[Token(Token = "0x4001CDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal MB2_PackingAlgorithmEnum _packingAlgorithm;

			[Token(Token = "0x4001CDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal bool _meshBakerTexturePackerForcePowerOfTwo;

			[Token(Token = "0x4001CE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal List<ShaderTextureProperty> _customShaderPropNames;

			[Token(Token = "0x4001CE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal bool _normalizeTexelDensity;

			[Token(Token = "0x4001CE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
			internal bool _considerNonTextureProperties;

			[Token(Token = "0x4001CE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal MB3_TextureCombinerNonTextureProperties nonTexturePropertyBlender;

			[Token(Token = "0x4001CE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal List<MB_TexSet> distinctMaterialTextures;

			[Token(Token = "0x4001CE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal List<GameObject> allObjsToMesh;

			[Token(Token = "0x4001CE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal List<Material> allowedMaterialsFilter;

			[Token(Token = "0x4001CE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			internal List<ShaderTextureProperty> texPropertyNames;

			[Token(Token = "0x4001CE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			internal CreateAtlasForProperty[] allTexturesAreNullAndSameColor;

			[Token(Token = "0x4001CE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			internal Material resultMaterial;

			[Token(Token = "0x17000291")]
			internal int numAtlases
			{
				[Token(Token = "0x6002064")]
				[Address(RVA = "0xB19118", Offset = "0xB19118", VA = "0xB19118")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6002065")]
			[Address(RVA = "0xB0EF94", Offset = "0xB0EF94", VA = "0xB0EF94")]
			internal bool OnlyOneTextureInAtlasReuseTextures()
			{
				return default(bool);
			}

			[Token(Token = "0x6002066")]
			[Address(RVA = "0xB27830", Offset = "0xB27830", VA = "0xB27830")]
			public TexturePipelineData()
			{
			}
		}

		[Token(Token = "0x2000521")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A970C", Offset = "0x4A970C")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4001CEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TexturePipelineData data;

			[Token(Token = "0x6002067")]
			[Address(RVA = "0xB20E50", Offset = "0xB20E50", VA = "0xB20E50")]
			public <>c__DisplayClass5_0()
			{
			}
		}

		[Token(Token = "0x2000522")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A971C", Offset = "0x4A971C")]
		private sealed class <>c__DisplayClass5_1
		{
			[Token(Token = "0x4001CEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4001CEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass5_0 CS$<>8__locals1;

			[Token(Token = "0x6002068")]
			[Address(RVA = "0xB20E58", Offset = "0xB20E58", VA = "0xB20E58")]
			public <>c__DisplayClass5_1()
			{
			}

			[Token(Token = "0x6002069")]
			[Address(RVA = "0xB22494", Offset = "0xB22494", VA = "0xB22494")]
			internal bool <_CollectPropertyNames>b__0(ShaderTextureProperty x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000523")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A972C", Offset = "0x4A972C")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4001CED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TexturePipelineData data;

			[Token(Token = "0x600206A")]
			[Address(RVA = "0xB22564", Offset = "0xB22564", VA = "0xB22564")]
			public <>c__DisplayClass8_0()
			{
			}
		}

		[Token(Token = "0x2000524")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A973C", Offset = "0x4A973C")]
		private sealed class <>c__DisplayClass8_1
		{
			[Token(Token = "0x4001CEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MB_TexSet setOfTexs;

			[Token(Token = "0x4001CEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass8_0 CS$<>8__locals1;

			[Token(Token = "0x600206B")]
			[Address(RVA = "0xB2256C", Offset = "0xB2256C", VA = "0xB2256C")]
			public <>c__DisplayClass8_1()
			{
			}

			[Token(Token = "0x600206C")]
			[Address(RVA = "0xB22574", Offset = "0xB22574", VA = "0xB22574")]
			internal bool <__Step1_CollectDistinctMatTexturesAndUsedObjects>b__0(MB_TexSet x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000525")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A974C", Offset = "0x4A974C")]
		private sealed class <__Step1_CollectDistinctMatTexturesAndUsedObjects>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TexturePipelineData data;

			[Token(Token = "0x4001CF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x4001CF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MB2_LogLevel LOG_LEVEL;

			[Token(Token = "0x4001CF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult result;

			[Token(Token = "0x4001CF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x4001CF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public List<GameObject> usedObjsToMesh;

			[Token(Token = "0x17000292")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002070")]
				[Address(RVA = "0xB26544", Offset = "0xB26544", VA = "0xB26544", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000293")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002072")]
				[Address(RVA = "0xB265B4", Offset = "0xB265B4", VA = "0xB265B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600206D")]
			[Address(RVA = "0xB21040", Offset = "0xB21040", VA = "0xB21040")]
			[DebuggerHidden]
			public <__Step1_CollectDistinctMatTexturesAndUsedObjects>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x600206E")]
			[Address(RVA = "0xB24294", Offset = "0xB24294", VA = "0xB24294", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600206F")]
			[Address(RVA = "0xB24298", Offset = "0xB24298", VA = "0xB24298", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002071")]
			[Address(RVA = "0xB2654C", Offset = "0xB2654C", VA = "0xB2654C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000526")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A975C", Offset = "0x4A975C")]
		private sealed class <CalculateIdealSizesForTexturesInAtlasAndPadding>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TexturePipelineData data;

			[Token(Token = "0x4001CFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB2_LogLevel LOG_LEVEL;

			[Token(Token = "0x17000294")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002076")]
				[Address(RVA = "0xB2421C", Offset = "0xB2421C", VA = "0xB2421C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000295")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002078")]
				[Address(RVA = "0xB2428C", Offset = "0xB2428C", VA = "0xB2428C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002073")]
			[Address(RVA = "0xB21750", Offset = "0xB21750", VA = "0xB21750")]
			[DebuggerHidden]
			public <CalculateIdealSizesForTexturesInAtlasAndPadding>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6002074")]
			[Address(RVA = "0xB22970", Offset = "0xB22970", VA = "0xB22970", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002075")]
			[Address(RVA = "0xB22974", Offset = "0xB22974", VA = "0xB22974", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002077")]
			[Address(RVA = "0xB24224", Offset = "0xB24224", VA = "0xB24224", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000527")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A976C", Offset = "0x4A976C")]
		private sealed class <__Step3_BuildAndSaveAtlasesAndStoreResults>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TexturePipelineData data;

			[Token(Token = "0x4001CFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB2_LogLevel LOG_LEVEL;

			[Token(Token = "0x4001D00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MB_ITextureCombinerPacker packer;

			[Token(Token = "0x4001D01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x4001D02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public MB3_TextureCombiner combiner;

			[Token(Token = "0x4001D03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public AtlasPackingResult atlasPackingResult;

			[Token(Token = "0x4001D04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x4001D05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public StringBuilder report;

			[Token(Token = "0x4001D06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public MB_AtlasesAndRects resultAtlasesAndRects;

			[Token(Token = "0x4001D07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Stopwatch <sw>5__2;

			[Token(Token = "0x4001D08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private Texture2D[] <atlases>5__3;

			[Token(Token = "0x17000296")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600207C")]
				[Address(RVA = "0xB276F0", Offset = "0xB276F0", VA = "0xB276F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000297")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600207E")]
				[Address(RVA = "0xB27760", Offset = "0xB27760", VA = "0xB27760", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002079")]
			[Address(RVA = "0xB2177C", Offset = "0xB2177C", VA = "0xB2177C")]
			[DebuggerHidden]
			public <__Step3_BuildAndSaveAtlasesAndStoreResults>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x600207A")]
			[Address(RVA = "0xB265BC", Offset = "0xB265BC", VA = "0xB265BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600207B")]
			[Address(RVA = "0xB265C0", Offset = "0xB265C0", VA = "0xB265C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600207D")]
			[Address(RVA = "0xB276F8", Offset = "0xB276F8", VA = "0xB276F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool USE_EXPERIMENTAL_HOIZONTALVERTICAL;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static ShaderTextureProperty[] shaderTexPropertyNames;

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0xB18E40", Offset = "0xB18E40", VA = "0xB18E40")]
		internal static bool _ShouldWeCreateAtlasForThisProperty(int propertyIndex, bool considerNonTextureProperties, CreateAtlasForProperty[] allTexturesAreNullAndSameColor)
		{
			return default(bool);
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0xB0C740", Offset = "0xB0C740", VA = "0xB0C740")]
		internal static bool _CollectPropertyNames(TexturePipelineData data, MB2_LogLevel LOG_LEVEL)
		{
			return default(bool);
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0xB20E60", Offset = "0xB20E60", VA = "0xB20E60")]
		internal static bool _ShouldWeCreateAtlasForThisProperty(int propertyIndex, CreateAtlasForProperty[] allTexturesAreNullAndSameColor, TexturePipelineData data)
		{
			return default(bool);
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0xB20EFC", Offset = "0xB20EFC", VA = "0xB20EFC")]
		public static Texture GetTextureConsideringStandardShaderKeywords(string shaderName, Material mat, string propertyName)
		{
			return null;
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0xB0DF44", Offset = "0xB0DF44", VA = "0xB0DF44")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B6BBC", Offset = "0x4B6BBC")]
		internal static IEnumerator __Step1_CollectDistinctMatTexturesAndUsedObjects(ProgressUpdateDelegate progressInfo, MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult result, TexturePipelineData data, MB3_TextureCombiner combiner, MB2_EditorMethodsInterface textureEditorMethods, List<GameObject> usedObjsToMesh, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0xB2106C", Offset = "0xB2106C", VA = "0xB2106C")]
		private static CreateAtlasForProperty[] CalculateAllTexturesAreNullAndSameColor(TexturePipelineData data, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0xB0E044", Offset = "0xB0E044", VA = "0xB0E044")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B6C20", Offset = "0x4B6C20")]
		internal static IEnumerator CalculateIdealSizesForTexturesInAtlasAndPadding(ProgressUpdateDelegate progressInfo, MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult result, TexturePipelineData data, MB3_TextureCombiner combiner, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0xB0F980", Offset = "0xB0F980", VA = "0xB0F980")]
		internal static AtlasPackingResult[] __Step3_RunTexturePacker(TexturePipelineData data, MB_ITextureCombinerPacker texturePacker, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0xB0F04C", Offset = "0xB0F04C", VA = "0xB0F04C")]
		internal static MB_ITextureCombinerPacker CreatePacker(bool onlyOneTextureInAtlasReuseTextures, MB2_PackingAlgorithmEnum packingAlgorithm)
		{
			return null;
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0xB0F1AC", Offset = "0xB0F1AC", VA = "0xB0F1AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4B6C84", Offset = "0x4B6C84")]
		internal static IEnumerator __Step3_BuildAndSaveAtlasesAndStoreResults(MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult result, ProgressUpdateDelegate progressInfo, TexturePipelineData data, MB3_TextureCombiner combiner, MB_ITextureCombinerPacker packer, AtlasPackingResult atlasPackingResult, MB2_EditorMethodsInterface textureEditorMethods, MB_AtlasesAndRects resultAtlasesAndRects, StringBuilder report, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0xB0E0DC", Offset = "0xB0E0DC", VA = "0xB0E0DC")]
		internal static StringBuilder GenerateReport(TexturePipelineData data)
		{
			return null;
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0xB1C504", Offset = "0xB1C504", VA = "0xB1C504")]
		internal static MB2_TexturePacker CreateTexturePacker(MB2_PackingAlgorithmEnum _packingAlgorithm)
		{
			return null;
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0xB1F3A0", Offset = "0xB1F3A0", VA = "0xB1F3A0")]
		internal static Vector2 GetAdjustedForScaleAndOffset2Dimensions(MeshBakerMaterialTexture source, Vector2 obUVoffset, Vector2 obUVscale, TexturePipelineData data, MB2_LogLevel LOG_LEVEL)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0xB217A8", Offset = "0xB217A8", VA = "0xB217A8")]
		internal static Color32 ConvertNormalFormatFromUnity_ToStandard(Color32 c)
		{
			return default(Color32);
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0xB218DC", Offset = "0xB218DC", VA = "0xB218DC")]
		internal static float GetSubmeshArea(Mesh m, int submeshIdx)
		{
			return default(float);
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0xB21BDC", Offset = "0xB21BDC", VA = "0xB21BDC")]
		internal static bool IsPowerOfTwo(int x)
		{
			return default(bool);
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0xB21BEC", Offset = "0xB21BEC", VA = "0xB21BEC")]
		public MB3_TextureCombinerPipeline()
		{
		}
	}
	[Token(Token = "0x200034F")]
	public class MB3_Comment : MonoBehaviour
	{
		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Multiline]
		public string comment;

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0x6EDF18", Offset = "0x6EDF18", VA = "0x6EDF18")]
		public MB3_Comment()
		{
		}
	}
	[Token(Token = "0x2000350")]
	public class MBVersionConcrete : MBVersionInterface
	{
		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector2 _HALF_UV;

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0xB29980", Offset = "0xB29980", VA = "0xB29980", Slot = "4")]
		public string version()
		{
			return null;
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0xB299C8", Offset = "0xB299C8", VA = "0xB299C8", Slot = "5")]
		public int GetMajorVersion()
		{
			return default(int);
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0xB29A9C", Offset = "0xB29A9C", VA = "0xB29A9C", Slot = "6")]
		public int GetMinorVersion()
		{
			return default(int);
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0xB29B74", Offset = "0xB29B74", VA = "0xB29B74", Slot = "7")]
		public bool GetActive(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0xB29BA4", Offset = "0xB29BA4", VA = "0xB29BA4", Slot = "8")]
		public void SetActive(GameObject go, bool isActive)
		{
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0xB29BDC", Offset = "0xB29BDC", VA = "0xB29BDC", Slot = "9")]
		public void SetActiveRecursively(GameObject go, bool isActive)
		{
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0xB29C14", Offset = "0xB29C14", VA = "0xB29C14", Slot = "10")]
		public UnityEngine.Object[] FindSceneObjectsOfType(Type t)
		{
			return null;
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0xB29C7C", Offset = "0xB29C7C", VA = "0xB29C7C", Slot = "18")]
		public void OptimizeMesh(Mesh m)
		{
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0xB29C80", Offset = "0xB29C80", VA = "0xB29C80", Slot = "11")]
		public bool IsRunningAndMeshNotReadWriteable(Mesh m)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0xB29CD0", Offset = "0xB29CD0", VA = "0xB29CD0")]
		public Vector2[] GetMeshUV1s(Mesh m, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0xB29EC0", Offset = "0xB29EC0", VA = "0xB29EC0", Slot = "12")]
		public Vector2[] GetMeshUV3orUV4(Mesh m, bool get3, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0xB2A1EC", Offset = "0xB2A1EC", VA = "0xB2A1EC", Slot = "13")]
		public void MeshClear(Mesh m, bool t)
		{
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0xB2A224", Offset = "0xB2A224", VA = "0xB2A224", Slot = "14")]
		public void MeshAssignUV3(Mesh m, Vector2[] uv3s)
		{
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0xB2A25C", Offset = "0xB2A25C", VA = "0xB2A25C", Slot = "15")]
		public void MeshAssignUV4(Mesh m, Vector2[] uv4s)
		{
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0xB2A294", Offset = "0xB2A294", VA = "0xB2A294", Slot = "16")]
		public Vector4 GetLightmapTilingOffset(Renderer r)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0xB2A2C4", Offset = "0xB2A2C4", VA = "0xB2A2C4", Slot = "17")]
		public Transform[] GetBones(Renderer r)
		{
			return null;
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0xB2A434", Offset = "0xB2A434", VA = "0xB2A434", Slot = "19")]
		public int GetBlendShapeFrameCount(Mesh m, int shapeIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0xB2A46C", Offset = "0xB2A46C", VA = "0xB2A46C", Slot = "20")]
		public float GetBlendShapeFrameWeight(Mesh m, int shapeIndex, int frameIndex)
		{
			return default(float);
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0xB2A4B4", Offset = "0xB2A4B4", VA = "0xB2A4B4", Slot = "21")]
		public void GetBlendShapeFrameVertices(Mesh m, int shapeIndex, int frameIndex, Vector3[] vs, Vector3[] ns, Vector3[] ts)
		{
		}

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0xB2A51C", Offset = "0xB2A51C", VA = "0xB2A51C", Slot = "22")]
		public void ClearBlendShapes(Mesh m)
		{
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0xB2A54C", Offset = "0xB2A54C", VA = "0xB2A54C", Slot = "23")]
		public void AddBlendShapeFrame(Mesh m, string nm, float wt, Vector3[] vs, Vector3[] ns, Vector3[] ts)
		{
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0xB2A5BC", Offset = "0xB2A5BC", VA = "0xB2A5BC", Slot = "24")]
		public int MaxMeshVertexCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0xB2A5C4", Offset = "0xB2A5C4", VA = "0xB2A5C4", Slot = "25")]
		public void SetMeshIndexFormatAndClearMesh(Mesh m, int numVerts, bool vertices, bool justClearTriangles)
		{
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0xB2A69C", Offset = "0xB2A69C", VA = "0xB2A69C")]
		public MBVersionConcrete()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000351")]
	public class GrouperData
	{
		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool clusterOnLMIndex;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool clusterByLODLevel;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 origin;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 cellSize;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int pieNumSegments;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 pieAxis;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int height;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float maxDistBetweenClusters;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool includeCellsWithOnlyOneRenderer;

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0x6E1CBC", Offset = "0x6E1CBC", VA = "0x6E1CBC")]
		public GrouperData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000352")]
	public abstract class MB3_MeshBakerGrouperCore
	{
		[Token(Token = "0x2000528")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A977C", Offset = "0x4A977C")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001D09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Renderer r;

			[Token(Token = "0x4001D0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Predicate<Renderer> <>9__0;

			[Token(Token = "0x600207F")]
			[Address(RVA = "0xAB04C4", Offset = "0xAB04C4", VA = "0xAB04C4")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6002080")]
			[Address(RVA = "0xAB04CC", Offset = "0xAB04CC", VA = "0xAB04CC")]
			internal bool <DoClustering>b__0(Renderer x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GrouperData d;

		[Token(Token = "0x6001A10")]
		public abstract Dictionary<string, List<Renderer>> FilterIntoGroups(List<GameObject> selection);

		[Token(Token = "0x6001A11")]
		public abstract void DrawGizmos(Bounds sourceObjectBounds);

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0x6EFE14", Offset = "0x6EFE14", VA = "0x6EFE14")]
		public void DoClustering(MB3_TextureBaker tb, MB3_MeshBakerGrouper grouper)
		{
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0x6F0D98", Offset = "0x6F0D98", VA = "0x6F0D98")]
		private Dictionary<int, List<Renderer>> GroupByLightmapIndex(List<Renderer> gaws)
		{
			return null;
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0x6F0FEC", Offset = "0x6F0FEC", VA = "0x6F0FEC")]
		private void AddMeshBaker(MB3_TextureBaker tb, string key, List<Renderer> gaws)
		{
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0x6EEC48", Offset = "0x6EEC48", VA = "0x6EEC48")]
		protected MB3_MeshBakerGrouperCore()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000353")]
	public class MB3_MeshBakerGrouperNone : MB3_MeshBakerGrouperCore
	{
		[Token(Token = "0x6001A16")]
		[Address(RVA = "0xAB176C", Offset = "0xAB176C", VA = "0xAB176C")]
		public MB3_MeshBakerGrouperNone(GrouperData d)
		{
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0xAB1798", Offset = "0xAB1798", VA = "0xAB1798", Slot = "4")]
		public override Dictionary<string, List<Renderer>> FilterIntoGroups(List<GameObject> selection)
		{
			return null;
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0xAB19A0", Offset = "0xAB19A0", VA = "0xAB19A0", Slot = "5")]
		public override void DrawGizmos(Bounds sourceObjectBounds)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000354")]
	public class MB3_MeshBakerGrouperGrid : MB3_MeshBakerGrouperCore
	{
		[Token(Token = "0x6001A19")]
		[Address(RVA = "0xAB0548", Offset = "0xAB0548", VA = "0xAB0548")]
		public MB3_MeshBakerGrouperGrid(GrouperData d)
		{
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0xAB0574", Offset = "0xAB0574", VA = "0xAB0574", Slot = "4")]
		public override Dictionary<string, List<Renderer>> FilterIntoGroups(List<GameObject> selection)
		{
			return null;
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0xAB0B58", Offset = "0xAB0B58", VA = "0xAB0B58", Slot = "5")]
		public override void DrawGizmos(Bounds sourceObjectBounds)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000355")]
	public class MB3_MeshBakerGrouperPie : MB3_MeshBakerGrouperCore
	{
		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0xAB19A4", Offset = "0xAB19A4", VA = "0xAB19A4")]
		public MB3_MeshBakerGrouperPie(GrouperData data)
		{
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0xAB19D0", Offset = "0xAB19D0", VA = "0xAB19D0", Slot = "4")]
		public override Dictionary<string, List<Renderer>> FilterIntoGroups(List<GameObject> selection)
		{
			return null;
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0xAB2158", Offset = "0xAB2158", VA = "0xAB2158", Slot = "5")]
		public override void DrawGizmos(Bounds sourceObjectBounds)
		{
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0xAB2504", Offset = "0xAB2504", VA = "0xAB2504")]
		public static void DrawCircle(Vector3 axis, Vector3 center, float radius, int subdiv)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000356")]
	public class MB3_MeshBakerGrouperKMeans : MB3_MeshBakerGrouperCore
	{
		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int numClusters;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3[] clusterCenters;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float[] clusterSizes;

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0xAB1178", Offset = "0xAB1178", VA = "0xAB1178")]
		public MB3_MeshBakerGrouperKMeans(GrouperData data)
		{
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0xAB120C", Offset = "0xAB120C", VA = "0xAB120C", Slot = "4")]
		public override Dictionary<string, List<Renderer>> FilterIntoGroups(List<GameObject> selection)
		{
			return null;
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0xAB1660", Offset = "0xAB1660", VA = "0xAB1660", Slot = "5")]
		public override void DrawGizmos(Bounds sceneObjectBounds)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000357")]
	public class MB3_MeshBakerGrouperCluster : MB3_MeshBakerGrouperCore
	{
		[Token(Token = "0x2000529")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A978C", Offset = "0x4A978C")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4001D0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<GameObject> gos;

			[Token(Token = "0x6002081")]
			[Address(RVA = "0x6EF488", Offset = "0x6EF488", VA = "0x6EF488")]
			public <>c__DisplayClass8_0()
			{
			}
		}

		[Token(Token = "0x200052A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4A979C", Offset = "0x4A979C")]
		private sealed class <>c__DisplayClass8_1
		{
			[Token(Token = "0x4001D0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4001D0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass8_0 CS$<>8__locals1;

			[Token(Token = "0x6002082")]
			[Address(RVA = "0x6EF490", Offset = "0x6EF490", VA = "0x6EF490")]
			public <>c__DisplayClass8_1()
			{
			}

			[Token(Token = "0x6002083")]
			[Address(RVA = "0x6EFD48", Offset = "0x6EFD48", VA = "0x6EFD48")]
			internal bool <BuildClusters>b__0(MB3_AgglomerativeClustering.item_s x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MB3_AgglomerativeClustering cluster;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _lastMaxDistBetweenClusters;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float _ObjsExtents;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float _minDistBetweenClusters;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<MB3_AgglomerativeClustering.ClusterNode> _clustersToDraw;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float[] _radii;

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0x6EEBB4", Offset = "0x6EEBB4", VA = "0x6EEBB4")]
		public MB3_MeshBakerGrouperCluster(GrouperData data, List<GameObject> gos)
		{
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0x6EEC50", Offset = "0x6EEC50", VA = "0x6EEC50", Slot = "4")]
		public override Dictionary<string, List<Renderer>> FilterIntoGroups(List<GameObject> selection)
		{
			return null;
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0x6EEF58", Offset = "0x6EEF58", VA = "0x6EEF58")]
		public void BuildClusters(List<GameObject> gos, ProgressUpdateCancelableDelegate progFunc)
		{
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0x6EF498", Offset = "0x6EF498", VA = "0x6EF498")]
		private void _BuildListOfClustersToDraw(ProgressUpdateCancelableDelegate progFunc, out float smallest, out float largest)
		{
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0x6EFBB8", Offset = "0x6EFBB8", VA = "0x6EFBB8", Slot = "5")]
		public override void DrawGizmos(Bounds sceneObjectBounds)
		{
		}
	}
	[Token(Token = "0x2000358")]
	public interface TextureBlender
	{
		[Token(Token = "0x6001A28")]
		bool DoesShaderNameMatch(string shaderName);

		[Token(Token = "0x6001A29")]
		void OnBeforeTintTexture(Material sourceMat, string shaderTexturePropertyName);

		[Token(Token = "0x6001A2A")]
		Color OnBlendTexturePixel(string shaderPropertyName, Color pixelColor);

		[Token(Token = "0x6001A2B")]
		bool NonTexturePropertiesAreEqual(Material a, Material b);

		[Token(Token = "0x6001A2C")]
		void SetNonTexturePropertyValuesOnResultMaterial(Material resultMaterial);

		[Token(Token = "0x6001A2D")]
		Color GetColorIfNoTexture(Material m, ShaderTextureProperty texPropertyName);
	}
	[Token(Token = "0x2000359")]
	public class TextureBlenderFallback : TextureBlender
	{
		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_doTintColor;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Color m_tintColor;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Color m_defaultColor;

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0x714A6C", Offset = "0x714A6C", VA = "0x714A6C", Slot = "4")]
		public bool DoesShaderNameMatch(string shaderName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0x714A74", Offset = "0x714A74", VA = "0x714A74", Slot = "5")]
		public void OnBeforeTintTexture(Material sourceMat, string shaderTexturePropertyName)
		{
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0x714BAC", Offset = "0x714BAC", VA = "0x714BAC", Slot = "6")]
		public Color OnBlendTexturePixel(string shaderPropertyName, Color pixelColor)
		{
			return default(Color);
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0x714C08", Offset = "0x714C08", VA = "0x714C08", Slot = "7")]
		public bool NonTexturePropertiesAreEqual(Material a, Material b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0x714E00", Offset = "0x714E00", VA = "0x714E00", Slot = "8")]
		public void SetNonTexturePropertyValuesOnResultMaterial(Material resultMaterial)
		{
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0x714EF4", Offset = "0x714EF4", VA = "0x714EF4", Slot = "9")]
		public Color GetColorIfNoTexture(Material mat, ShaderTextureProperty texProperty)
		{
			return default(Color);
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0x714CD0", Offset = "0x714CD0", VA = "0x714CD0")]
		public static bool _compareColor(Material a, Material b, Color defaultVal, string propertyName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0x7159FC", Offset = "0x7159FC", VA = "0x7159FC")]
		public static bool _compareFloat(Material a, Material b, float defaultVal, string propertyName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0x715ABC", Offset = "0x715ABC", VA = "0x715ABC")]
		public TextureBlenderFallback()
		{
		}
	}
	[Token(Token = "0x200035A")]
	public class TextureBlenderLegacyBumpDiffuse : TextureBlender
	{
		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool doColor;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Color m_tintColor;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Color m_defaultTintColor;

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0x715AF0", Offset = "0x715AF0", VA = "0x715AF0", Slot = "4")]
		public bool DoesShaderNameMatch(string shaderName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0x715B88", Offset = "0x715B88", VA = "0x715B88", Slot = "5")]
		public void OnBeforeTintTexture(Material sourceMat, string shaderTexturePropertyName)
		{
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0x715C3C", Offset = "0x715C3C", VA = "0x715C3C", Slot = "6")]
		public Color OnBlendTexturePixel(string propertyToDoshaderPropertyName, Color pixelColor)
		{
			return default(Color);
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0x715C98", Offset = "0x715C98", VA = "0x715C98", Slot = "7")]
		public bool NonTexturePropertiesAreEqual(Material a, Material b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0x715D04", Offset = "0x715D04", VA = "0x715D04", Slot = "8")]
		public void SetNonTexturePropertyValuesOnResultMaterial(Material resultMaterial)
		{
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0x715D9C", Offset = "0x715D9C", VA = "0x715D9C", Slot = "9")]
		public Color GetColorIfNoTexture(Material m, ShaderTextureProperty texPropertyName)
		{
			return default(Color);
		}

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0x715F8C", Offset = "0x715F8C", VA = "0x715F8C")]
		public TextureBlenderLegacyBumpDiffuse()
		{
		}
	}
	[Token(Token = "0x200035B")]
	public class TextureBlenderLegacyDiffuse : TextureBlender
	{
		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool doColor;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Color m_tintColor;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Color m_defaultTintColor;

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0x715FC0", Offset = "0x715FC0", VA = "0x715FC0", Slot = "4")]
		public bool DoesShaderNameMatch(string shaderName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0x716058", Offset = "0x716058", VA = "0x716058", Slot = "5")]
		public void OnBeforeTintTexture(Material sourceMat, string shaderTexturePropertyName)
		{
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0x71610C", Offset = "0x71610C", VA = "0x71610C", Slot = "6")]
		public Color OnBlendTexturePixel(string propertyToDoshaderPropertyName, Color pixelColor)
		{
			return default(Color);
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0x716168", Offset = "0x716168", VA = "0x716168", Slot = "7")]
		public bool NonTexturePropertiesAreEqual(Material a, Material b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0x7161D4", Offset = "0x7161D4", VA = "0x7161D4", Slot = "8")]
		public void SetNonTexturePropertyValuesOnResultMaterial(Material resultMaterial)
		{
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0x71626C", Offset = "0x71626C", VA = "0x71626C", Slot = "9")]
		public Color GetColorIfNoTexture(Material m, ShaderTextureProperty texPropertyName)
		{
			return default(Color);
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0x716410", Offset = "0x716410", VA = "0x716410")]
		public TextureBlenderLegacyDiffuse()
		{
		}
	}
	[Token(Token = "0x200035C")]
	public class TextureBlenderMaterialPropertyCacheHelper
	{
		[Token(Token = "0x200052B")]
		private struct MaterialPropertyPair
		{
			[Token(Token = "0x4001D0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Material material;

			[Token(Token = "0x4001D0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string property;

			[Token(Token = "0x6002084")]
			[Address(RVA = "0x508450", Offset = "0x508450", VA = "0x508450")]
			public MaterialPropertyPair(Material m, string prop)
			{
			}

			[Token(Token = "0x6002085")]
			[Address(RVA = "0x508458", Offset = "0x508458", VA = "0x508458", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6002086")]
			[Address(RVA = "0x508460", Offset = "0x508460", VA = "0x508460", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}
		}

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<MaterialPropertyPair, object> nonTexturePropertyValuesForSourceMaterials;

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0x716444", Offset = "0x716444", VA = "0x716444")]
		private bool AllNonTexturePropertyValuesAreEqual(string prop)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0x71666C", Offset = "0x71666C", VA = "0x71666C")]
		public void CacheMaterialProperty(Material m, string property, object value)
		{
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0x7166FC", Offset = "0x7166FC", VA = "0x7166FC")]
		public object GetValueIfAllSourceAreTheSameOrDefault(string property, object defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0x7168B4", Offset = "0x7168B4", VA = "0x7168B4")]
		public TextureBlenderMaterialPropertyCacheHelper()
		{
		}
	}
	[Token(Token = "0x200035D")]
	public class TextureBlenderStandardMetallic : TextureBlender
	{
		[Token(Token = "0x200052C")]
		private enum Prop
		{
			[Token(Token = "0x4001D11")]
			doColor,
			[Token(Token = "0x4001D12")]
			doMetallic,
			[Token(Token = "0x4001D13")]
			doEmission,
			[Token(Token = "0x4001D14")]
			doBump,
			[Token(Token = "0x4001D15")]
			doNone
		}

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Color NeutralNormalMap;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TextureBlenderMaterialPropertyCacheHelper sourceMaterialPropertyCache;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Color m_tintColor;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_glossiness;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_glossMapScale;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_metallic;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool m_hasMetallicGlossMap;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_bumpScale;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_shaderDoesEmission;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Color m_emissionColor;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Prop propertyToDo;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Color m_generatingTintedAtlasColor;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_generatingTintedAtlasMetallic;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_generatingTintedAtlasGlossiness;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float m_generatingTintedAtlasGlossMapScale;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_generatingTintedAtlasBumpScale;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Color m_generatingTintedAtlasEmission;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Color m_notGeneratingAtlasDefaultColor;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float m_notGeneratingAtlasDefaultMetallic;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float m_notGeneratingAtlasDefaultGlossiness;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Color m_notGeneratingAtlasDefaultEmisionColor;

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0x716A5C", Offset = "0x716A5C", VA = "0x716A5C", Slot = "4")]
		public bool DoesShaderNameMatch(string shaderName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0x716ABC", Offset = "0x716ABC", VA = "0x716ABC", Slot = "5")]
		public void OnBeforeTintTexture(Material sourceMat, string shaderTexturePropertyName)
		{
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0x716EC0", Offset = "0x716EC0", VA = "0x716EC0", Slot = "6")]
		public Color OnBlendTexturePixel(string propertyToDoshaderPropertyName, Color pixelColor)
		{
			return default(Color);
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0x71704C", Offset = "0x71704C", VA = "0x71704C", Slot = "7")]
		public bool NonTexturePropertiesAreEqual(Material a, Material b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0x7172D0", Offset = "0x7172D0", VA = "0x7172D0", Slot = "8")]
		public void SetNonTexturePropertyValuesOnResultMaterial(Material resultMaterial)
		{
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0x7177E4", Offset = "0x7177E4", VA = "0x7177E4", Slot = "9")]
		public Color GetColorIfNoTexture(Material mat, ShaderTextureProperty texPropertyName)
		{
			return default(Color);
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0x717F44", Offset = "0x717F44", VA = "0x717F44")]
		public TextureBlenderStandardMetallic()
		{
		}
	}
	[Token(Token = "0x200035E")]
	public class TextureBlenderStandardMetallicRoughness : TextureBlender
	{
		[Token(Token = "0x200052D")]
		private enum Prop
		{
			[Token(Token = "0x4001D17")]
			doColor,
			[Token(Token = "0x4001D18")]
			doMetallic,
			[Token(Token = "0x4001D19")]
			doRoughness,
			[Token(Token = "0x4001D1A")]
			doEmission,
			[Token(Token = "0x4001D1B")]
			doBump,
			[Token(Token = "0x4001D1C")]
			doNone
		}

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Color NeutralNormalMap;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TextureBlenderMaterialPropertyCacheHelper sourceMaterialPropertyCache;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Color m_tintColor;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_roughness;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_metallic;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_hasMetallicGlossMap;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool m_hasSpecGlossMap;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_bumpScale;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_shaderDoesEmission;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color m_emissionColor;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Prop propertyToDo;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Color m_generatingTintedAtlasColor;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float m_generatingTintedAtlasMetallic;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_generatingTintedAtlasRoughness;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_generatingTintedAtlasBumpScale;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Color m_generatingTintedAtlasEmission;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Color m_notGeneratingAtlasDefaultColor;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float m_notGeneratingAtlasDefaultMetallic;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float m_notGeneratingAtlasDefaultGlossiness;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Color m_notGeneratingAtlasDefaultEmisionColor;

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0x718080", Offset = "0x718080", VA = "0x718080", Slot = "4")]
		public bool DoesShaderNameMatch(string shaderName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0x7180E0", Offset = "0x7180E0", VA = "0x7180E0", Slot = "5")]
		public void OnBeforeTintTexture(Material sourceMat, string shaderTexturePropertyName)
		{
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0x718534", Offset = "0x718534", VA = "0x718534", Slot = "6")]
		public Color OnBlendTexturePixel(string propertyToDoshaderPropertyName, Color pixelColor)
		{
			return default(Color);
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0x7186B8", Offset = "0x7186B8", VA = "0x7186B8", Slot = "7")]
		public bool NonTexturePropertiesAreEqual(Material a, Material b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0x718A74", Offset = "0x718A74", VA = "0x718A74", Slot = "8")]
		public void SetNonTexturePropertyValuesOnResultMaterial(Material resultMaterial)
		{
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0x718FB8", Offset = "0x718FB8", VA = "0x718FB8", Slot = "9")]
		public Color GetColorIfNoTexture(Material mat, ShaderTextureProperty texPropertyName)
		{
			return default(Color);
		}

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0x71981C", Offset = "0x71981C", VA = "0x71981C")]
		public TextureBlenderStandardMetallicRoughness()
		{
		}
	}
	[Token(Token = "0x200035F")]
	public class TextureBlenderStandardSpecular : TextureBlender
	{
		[Token(Token = "0x200052E")]
		private enum Prop
		{
			[Token(Token = "0x4001D1E")]
			doColor,
			[Token(Token = "0x4001D1F")]
			doSpecular,
			[Token(Token = "0x4001D20")]
			doEmission,
			[Token(Token = "0x4001D21")]
			doBump,
			[Token(Token = "0x4001D22")]
			doNone
		}

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Color NeutralNormalMap;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TextureBlenderMaterialPropertyCacheHelper sourceMaterialPropertyCache;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Color m_tintColor;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_glossiness;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_SpecGlossMapScale;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color m_specColor;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_hasSpecGlossMap;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_bumpScale;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_shaderDoesEmission;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Color m_emissionColor;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Prop propertyToDo;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Color m_generatingTintedAtlaColor;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Color m_generatingTintedAtlaSpecular;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float m_generatingTintedAtlaGlossiness;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float m_generatingTintedAtlaSpecGlossMapScale;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_generatingTintedAtlaBumpScale;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Color m_generatingTintedAtlaEmission;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Color m_notGeneratingAtlasDefaultColor;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Color m_notGeneratingAtlasDefaultSpecularColor;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float m_notGeneratingAtlasDefaultGlossiness;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Color m_notGeneratingAtlasDefaultEmisionColor;

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0x719954", Offset = "0x719954", VA = "0x719954", Slot = "4")]
		public bool DoesShaderNameMatch(string shaderName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0x7199B4", Offset = "0x7199B4", VA = "0x7199B4", Slot = "5")]
		public void OnBeforeTintTexture(Material sourceMat, string shaderTexturePropertyName)
		{
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0x719E00", Offset = "0x719E00", VA = "0x719E00", Slot = "6")]
		public Color OnBlendTexturePixel(string propertyToDoshaderPropertyName, Color pixelColor)
		{
			return default(Color);
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0x719F88", Offset = "0x719F88", VA = "0x719F88", Slot = "7")]
		public bool NonTexturePropertiesAreEqual(Material a, Material b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0x71A230", Offset = "0x71A230", VA = "0x71A230", Slot = "8")]
		public void SetNonTexturePropertyValuesOnResultMaterial(Material resultMaterial)
		{
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0x71A788", Offset = "0x71A788", VA = "0x71A788", Slot = "9")]
		public Color GetColorIfNoTexture(Material mat, ShaderTextureProperty texPropertyName)
		{
			return default(Color);
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0x71AEE0", Offset = "0x71AEE0", VA = "0x71AEE0")]
		public TextureBlenderStandardSpecular()
		{
		}
	}
}
