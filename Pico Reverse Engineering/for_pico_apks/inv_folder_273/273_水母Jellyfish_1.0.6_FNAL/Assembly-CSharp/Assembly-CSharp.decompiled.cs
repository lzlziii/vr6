using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using DCHelperTools;
using DG.Tweening;
using DG.Tweening.Core;
using DG.Tweening.Plugins.Core.PathCore;
using DG.Tweening.Plugins.Options;
using Il2CppDummyDll;
using NatMic;
using NatMic.Recorders;
using Oculus.Spatializer.Propagation;
using PitchDetector;
using SleekRender;
using TMPro;
using UnityEngine;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Rendering;
using UnityEngine.Scripting;
using UnityEngine.UI;
using UnityEngine.Video;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class AudioAmbienceController : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float masterVolume;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AudioSource synthSource;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public AudioSource bubbleSource;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float synthVolume;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float bubbleVolume;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float[] volumeLevels;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Smooth smooth;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x3C53FC", Offset = "0x3C53FC", VA = "0x3C53FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x3C54A8", Offset = "0x3C54A8", VA = "0x3C54A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x3C556C", Offset = "0x3C556C", VA = "0x3C556C")]
	public AudioAmbienceController()
	{
	}
}
[Token(Token = "0x2000003")]
public class AudioParticleController : MonoBehaviour
{
	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject centre;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AudioParticleManager pm;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float velocityScale;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 oscillatorFrequencies;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 oscillatorGains;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 modOscillatorFrequencies;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226890", Offset = "0x226890")]
	private float <velocity>k__BackingField;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2268A0", Offset = "0x2268A0")]
	private Vector3 <arenaSize>k__BackingField;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2268B0", Offset = "0x2268B0")]
	private float <intensity>k__BackingField;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2268C0", Offset = "0x2268C0")]
	private float <radius>k__BackingField;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2268D0", Offset = "0x2268D0")]
	private float <jaggedness>k__BackingField;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2268E0", Offset = "0x2268E0")]
	private float <aggression>k__BackingField;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float centreFollowSmoothing;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float radiusSmoothing;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float _size;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float phaseOffset;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 position_last;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 position_orig;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Smooth smooth_vel;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Smooth smooth_velScale;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private AudioParticleSynthController audioController;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Osc[] oscs;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Osc[] modOscillators;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Smooth[] smooths;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Delta[] deltas;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Smooth[] smooth_vels;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Smooth[] smooth_pos;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Smooth smooth_rad;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Smooth smooth_radDyn;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float dynRadInterval;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float dynRadCount;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float dynRadTarget;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 pos;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 pos_last;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public Vector3 vel;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 rootPos;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private bool active;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float currentTime;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float energy;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float durationInSeconds;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float gain;

	[Token(Token = "0x17000001")]
	public float velocity
	{
		[Token(Token = "0x6000004")]
		[Address(RVA = "0x3C5580", Offset = "0x3C5580", VA = "0x3C5580")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B2AC", Offset = "0x22B2AC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000005")]
		[Address(RVA = "0x3C5588", Offset = "0x3C5588", VA = "0x3C5588")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B2BC", Offset = "0x22B2BC")]
		set
		{
		}
	}

	[Token(Token = "0x17000002")]
	public Vector3 arenaSize
	{
		[Token(Token = "0x6000006")]
		[Address(RVA = "0x3C5590", Offset = "0x3C5590", VA = "0x3C5590")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B2CC", Offset = "0x22B2CC")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000007")]
		[Address(RVA = "0x3C55A4", Offset = "0x3C55A4", VA = "0x3C55A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B2DC", Offset = "0x22B2DC")]
		set
		{
		}
	}

	[Token(Token = "0x17000003")]
	public float size
	{
		[Token(Token = "0x6000008")]
		[Address(RVA = "0x3C55B0", Offset = "0x3C55B0", VA = "0x3C55B0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000009")]
		[Address(RVA = "0x3C55B8", Offset = "0x3C55B8", VA = "0x3C55B8")]
		set
		{
		}
	}

	[Token(Token = "0x17000004")]
	public float intensity
	{
		[Token(Token = "0x600000A")]
		[Address(RVA = "0x3C5740", Offset = "0x3C5740", VA = "0x3C5740")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B2EC", Offset = "0x22B2EC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600000B")]
		[Address(RVA = "0x3C5748", Offset = "0x3C5748", VA = "0x3C5748")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B2FC", Offset = "0x22B2FC")]
		set
		{
		}
	}

	[Token(Token = "0x17000005")]
	public float radius
	{
		[Token(Token = "0x600000C")]
		[Address(RVA = "0x3C5750", Offset = "0x3C5750", VA = "0x3C5750")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B30C", Offset = "0x22B30C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600000D")]
		[Address(RVA = "0x3C5758", Offset = "0x3C5758", VA = "0x3C5758")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B31C", Offset = "0x22B31C")]
		set
		{
		}
	}

	[Token(Token = "0x17000006")]
	public float jaggedness
	{
		[Token(Token = "0x600000E")]
		[Address(RVA = "0x3C5760", Offset = "0x3C5760", VA = "0x3C5760")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B32C", Offset = "0x22B32C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600000F")]
		[Address(RVA = "0x3C5768", Offset = "0x3C5768", VA = "0x3C5768")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B33C", Offset = "0x22B33C")]
		set
		{
		}
	}

	[Token(Token = "0x17000007")]
	public float aggression
	{
		[Token(Token = "0x6000010")]
		[Address(RVA = "0x3C5770", Offset = "0x3C5770", VA = "0x3C5770")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B34C", Offset = "0x22B34C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000011")]
		[Address(RVA = "0x3C5778", Offset = "0x3C5778", VA = "0x3C5778")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B35C", Offset = "0x22B35C")]
		set
		{
		}
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x3C5780", Offset = "0x3C5780", VA = "0x3C5780")]
	private void Start()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x3C6054", Offset = "0x3C6054", VA = "0x3C6054")]
	private void Update()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x3C6080", Offset = "0x3C6080", VA = "0x3C6080")]
	private void updateParticleMotion()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x3C55C0", Offset = "0x3C55C0", VA = "0x3C55C0")]
	private void setSize(float size)
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x3C6A7C", Offset = "0x3C6A7C", VA = "0x3C6A7C")]
	public void SetNote(float note)
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x3C6AE8", Offset = "0x3C6AE8", VA = "0x3C6AE8")]
	public void Launch(float note, float energy, float duration, bool durationAsRatio)
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x3C6D0C", Offset = "0x3C6D0C", VA = "0x3C6D0C")]
	public bool IsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x3C68A4", Offset = "0x3C68A4", VA = "0x3C68A4")]
	private void launchSequence()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x3C6E78", Offset = "0x3C6E78", VA = "0x3C6E78")]
	public AudioParticleController()
	{
	}
}
[Token(Token = "0x2000004")]
public class AudioParticleManager : MonoBehaviour
{
	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public MusicSystemManager musicSystemManager;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject audioParticlePrefab;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public HarmonisationManager harmonisationManager;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int numParticles;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float velocityScale;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float energyFactor;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float durationFactor;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float jaggedness;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float aggression;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float radius;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float centreFollowSmoothing;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float radiusSmoothing;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public List<GameObject> particles;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<AudioParticleController> particleControllers;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float progressionIntensity;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Sound_analize soundAnalysisInstance;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private GameObject swarmCentre;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Sound_D soundAnalysisData;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<float> particleSizes;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private List<int> midinotes;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Smooth smooth_progressionIntensity;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float smoothFactor;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float gain_allParticles;

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x3C6F8C", Offset = "0x3C6F8C", VA = "0x3C6F8C")]
	private void Start()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x3C763C", Offset = "0x3C763C", VA = "0x3C763C")]
	private void Update()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x3C7898", Offset = "0x3C7898", VA = "0x3C7898")]
	public void LaunchParticles()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x3C7B54", Offset = "0x3C7B54", VA = "0x3C7B54")]
	public void SetChord(List<int> midinotes)
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x3C7238", Offset = "0x3C7238", VA = "0x3C7238")]
	private GameObject instantiateParticle()
	{
		return null;
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x3C7B5C", Offset = "0x3C7B5C", VA = "0x3C7B5C")]
	public void setVelocityScale(float value)
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x3C7B68", Offset = "0x3C7B68", VA = "0x3C7B68")]
	public AudioParticleManager()
	{
	}
}
[Token(Token = "0x2000005")]
public class AudioParticleSynthController : MonoBehaviour
{
	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float gain;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float velocityScaleFactor;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Synth_Base synth;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Smooth smooth;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float smoothFactor;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2268F0", Offset = "0x2268F0")]
	private float <velocity>k__BackingField;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int[] midinotes;

	[Token(Token = "0x17000008")]
	public float velocity
	{
		[Token(Token = "0x6000022")]
		[Address(RVA = "0x3C7BD0", Offset = "0x3C7BD0", VA = "0x3C7BD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B36C", Offset = "0x22B36C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000023")]
		[Address(RVA = "0x3C7BD8", Offset = "0x3C7BD8", VA = "0x3C7BD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B37C", Offset = "0x22B37C")]
		set
		{
		}
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x3C7BE0", Offset = "0x3C7BE0", VA = "0x3C7BE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x3C7DF8", Offset = "0x3C7DF8", VA = "0x3C7DF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x3C6A78", Offset = "0x3C6A78", VA = "0x3C6A78")]
	public void setSize(float size)
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x3C6ABC", Offset = "0x3C6ABC", VA = "0x3C6ABC")]
	public void SetNote(float note)
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x3C7E64", Offset = "0x3C7E64", VA = "0x3C7E64")]
	public void NoteOn(float midinote, float gain)
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x3C6CB8", Offset = "0x3C6CB8", VA = "0x3C6CB8")]
	public void NoteOn(float midinote, float gain, float durationInSeconds)
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x3C6C88", Offset = "0x3C6C88", VA = "0x3C6C88")]
	public float GetSampleLengthInSeconds()
	{
		return default(float);
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x3C7EA4", Offset = "0x3C7EA4", VA = "0x3C7EA4")]
	public AudioParticleSynthController()
	{
	}
}
[Token(Token = "0x2000006")]
public class AudioSineManager : MonoBehaviour
{
	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public MusicSystemManager musicSystemManager;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Synth_ClipPlayerController[] harmonySamplers1;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Synth_ClipPlayerController[] harmonySamplers2;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource[] harmonySamplerSources1;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private AudioSource[] harmonySamplerSources2;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float attackHarmony;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float releaseHarmony;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float harmonyGainSmoothFactor;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float gainScaleHarmony;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float progressionIntensity;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float noteMagnetism;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public HeadMusicModulation headMusicModulation;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Smooth smooth_progressionIntensity;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float smoothFactor_progressionIntensity;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Deadzone dz;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TemporalHysteresis tempHyst;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private GameObject[] jellyfishes;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Sound_analize soundAnalysisInstance;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private HarmonisationManager harmonisationManager;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> midinotes;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int[] octaves1;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int[] octaves2;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int harmonyVoice;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float onThreshold;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float gainHarmony;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int activeSamplerVoice;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Smooth smooth_harmonyGain1;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Smooth smooth_harmonyGain2;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float smoothFactor_harmonyGain;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float smoothFactor_cutoff;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float gainScaleSaw;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float delayScale;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float voiceSynthVolumeScale;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float previousNote;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float headVelocityScaleFactor;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float pan;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float gainFloor;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float gain_pads;

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x3C84B0", Offset = "0x3C84B0", VA = "0x3C84B0")]
	private void Start()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x3C8BB4", Offset = "0x3C8BB4", VA = "0x3C8BB4")]
	private void Update()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x3C924C", Offset = "0x3C924C", VA = "0x3C924C")]
	public void SetChord(List<int> midinotes)
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x3C9604", Offset = "0x3C9604", VA = "0x3C9604")]
	public void DeactivateHarmony()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x3C9748", Offset = "0x3C9748", VA = "0x3C9748")]
	public AudioSineManager()
	{
	}
}
[Token(Token = "0x2000007")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x223354", Offset = "0x223354")]
public class DCTesting_fx : MonoBehaviour
{
	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool running;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AudioSource audioSource;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float distortAmount;

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x3D7584", Offset = "0x3D7584", VA = "0x3D7584")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x3D7588", Offset = "0x3D7588", VA = "0x3D7588")]
	private void Start()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x3D75F0", Offset = "0x3D75F0", VA = "0x3D75F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x3D75F4", Offset = "0x3D75F4", VA = "0x3D75F4")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x3D76D0", Offset = "0x3D76D0", VA = "0x3D76D0")]
	public DCTesting_fx()
	{
	}
}
[Token(Token = "0x2000008")]
public class DebugSynthController : MonoBehaviour
{
	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Sound_analize soundAnalysisInstance;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Synth_Base synth;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public HarmonisationManager hm;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Deadzone dz;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float deadzoneSize;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TemporalHysteresis tempHyst;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float tempHystThresh;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float startTimeThreshold;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int activeNote;

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x3E8020", Offset = "0x3E8020", VA = "0x3E8020")]
	private void Start()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x3E80E0", Offset = "0x3E80E0", VA = "0x3E80E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x3E81E4", Offset = "0x3E81E4", VA = "0x3E81E4")]
	public void SetRoot(int note)
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x3E822C", Offset = "0x3E822C", VA = "0x3E822C")]
	public DebugSynthController()
	{
	}
}
[Token(Token = "0x2000009")]
public class HarmonisationToggleEvent : UnityEvent<int>
{
	[Token(Token = "0x600003A")]
	[Address(RVA = "0x541410", Offset = "0x541410", VA = "0x541410")]
	public HarmonisationToggleEvent()
	{
	}
}
[Token(Token = "0x200000A")]
public class HarmonisationManager : MonoBehaviour
{
	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public MusicSystemManager musicSystemManager;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AudioParticleManager audioParticleManager;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public AudioSineManager audioSineManager;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LeadVoiceManager leadVoiceManager;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool harmonisationIsActive;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Sound_analize soundAnalysisInstance;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int activeChord;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int activeNote;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private List<int>[] chords;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int>[] chords_sub;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int[] roots;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<int>[] chordShiftsEasy;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private List<int>[] chordShiftsHard;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float startTimeThreshold;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float stopTimeThreshold;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float hardShiftTimeThreshold;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool waitingForHardShift;

	[Token(Token = "0x4000092")]
	private const int numChords = 8;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Deadzone dz;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float deadzoneSize;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TemporalHysteresis tempHyst;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float tempHystThresh;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int previousNote;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float previouseNoteActiveTime;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool searchingForChord;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public SequencerManager sequencerManager;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool difficultMode;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int numCyclesOfSilence;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public HarmonisationToggleEvent m_harmonisationToggleEvent;

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x3F92A8", Offset = "0x3F92A8", VA = "0x3F92A8")]
	private void Start()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x3FAE88", Offset = "0x3FAE88", VA = "0x3FAE88")]
	private void Update()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x3FB8F4", Offset = "0x3FB8F4", VA = "0x3FB8F4")]
	private void SetChord(int activeChord)
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x3FB288", Offset = "0x3FB288", VA = "0x3FB288")]
	private bool FindChordSequel(int newNote, bool hardShift)
	{
		return default(bool);
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x3FBA30", Offset = "0x3FBA30", VA = "0x3FBA30")]
	public HarmonisationManager()
	{
	}
}
[Token(Token = "0x200000B")]
public class HeadModulationInfo
{
	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Transform headTransform;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 angularVelocityVector;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float angularVelocity;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float moonTarget;

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x54146C", Offset = "0x54146C", VA = "0x54146C")]
	public HeadModulationInfo()
	{
	}
}
[Token(Token = "0x200000C")]
public class HeadMusicModulation : MonoBehaviour
{
	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public HeadModulationInfo headModulationInfo;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Camera cam;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Quaternion previousRotation;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public SequencerManager sequencerManager;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject modTargetObject;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Smooth smooth_mod1;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Smooth smooth_mod2;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float smoothFactor;

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x5418F0", Offset = "0x5418F0", VA = "0x5418F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x5419E4", Offset = "0x5419E4", VA = "0x5419E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x541A7C", Offset = "0x541A7C", VA = "0x541A7C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x541F44", Offset = "0x541F44", VA = "0x541F44")]
	public HeadMusicModulation()
	{
	}
}
[Token(Token = "0x200000D")]
public class EnvelopeEvent : UnityEvent<bool>
{
	[Token(Token = "0x6000045")]
	[Address(RVA = "0x3F1B04", Offset = "0x3F1B04", VA = "0x3F1B04")]
	public EnvelopeEvent()
	{
	}
}
[Token(Token = "0x200000E")]
public class EnvelopeScheduler
{
	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public EnvelopeEvent m_envelopeEvent;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool noteOnScheduled;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	private bool noteOffScheduled;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float delayOn;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float delayOff;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float timerOn;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float timerOff;

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x3F1B60", Offset = "0x3F1B60", VA = "0x3F1B60")]
	public EnvelopeScheduler()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x3F1BD0", Offset = "0x3F1BD0", VA = "0x3F1BD0")]
	public void ScheduleNoteOn(float delay)
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x3F1BF0", Offset = "0x3F1BF0", VA = "0x3F1BF0")]
	public void ScheduleNoteOff(float delay)
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x3F1C10", Offset = "0x3F1C10", VA = "0x3F1C10")]
	public void Process()
	{
	}
}
[Token(Token = "0x200000F")]
public class AccompanimentVoiceInfo
{
	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float note;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float gain;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float cutoffHz;

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x3BF718", Offset = "0x3BF718", VA = "0x3BF718")]
	public AccompanimentVoiceInfo()
	{
	}
}
[Token(Token = "0x2000010")]
public class LeadVoiceController : MonoBehaviour
{
	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Conductor conductor;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MusicSystemManager musicSystemManager;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public HeadMusicModulation headModulation;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Synth_SawBass synthVoiceSaw;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Synth_SeamlessClipPlayerController synthVoiceSampler;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioEchoFilter sawEcho;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Smooth smooth_voiceGain;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float smoothFactor_voiceGain;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Smooth smooth_echo;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Smooth smooth_freq;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Smooth smooth_note;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Smooth smooth_sawCutoff;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float gainScaleSaw;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float gainScaleSampler;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float sawFilterDynamicScale;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float smoothFactor_cutoff;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float delayScale;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float probabilityA;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float probabilityB;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Sound_analize soundAnalysisInstance;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Deadzone dz;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private TemporalHysteresis tempHyst;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private AudioLowPassFilter samplerFilter;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject[] jellyfishes;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private List<int> midinotes;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int voiceIndex;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int octave;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private LeadVoiceManager manager;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool chordChangeTriggered;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	private bool isSilent;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private HarmonisationManager harmonisationManager;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Envelope env;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private EnvelopeScheduler envScheduler;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float currentAccompanimentNote;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Smooth smooth_leading;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float smoothFactor_leading;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float noteEmphasis;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public JellyFish_Anim assignedJellyFish;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool isLeading;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	private bool isLeadingLast;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private AccompanimentVoiceInfo accompanimentVoiceInfo;

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x54D49C", Offset = "0x54D49C", VA = "0x54D49C")]
	private void Start()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x54D9A4", Offset = "0x54D9A4", VA = "0x54D9A4")]
	private void ToggleEnvelope(bool value)
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x54DAC8", Offset = "0x54DAC8", VA = "0x54DAC8")]
	private void Update()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x54E010", Offset = "0x54E010", VA = "0x54E010")]
	public void SetChord(List<int> midinotes)
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x54E018", Offset = "0x54E018", VA = "0x54E018")]
	public void TriggerChordChange()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x54E01C", Offset = "0x54E01C", VA = "0x54E01C")]
	public void HarmonisationStateHasChanged(int state)
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x54E110", Offset = "0x54E110", VA = "0x54E110")]
	public LeadVoiceController()
	{
	}
}
[Token(Token = "0x2000011")]
public class LeadVoiceInfo
{
	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public bool singingActive;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float note;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float gain;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float gainBlur;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float cutoff127;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float cutoffHz;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float leadGainFactor;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float accompanimentGainFactor;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool idleState;

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x54E180", Offset = "0x54E180", VA = "0x54E180")]
	public LeadVoiceInfo()
	{
	}
}
[Token(Token = "0x2000012")]
public class LeadVoiceManager : MonoBehaviour
{
	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public MusicSystemManager musicSystemManager;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Conductor conductor;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private SequencerManager sequencerManager;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<int> midinotes;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private LeadVoiceController[] controllers;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int numVoices;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int numJellyfish;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Sound_analize soundAnalysisInstance;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Deadzone dz;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TemporalHysteresis tempHyst;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Smooth smooth_gain;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float smoothFactor_gain;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Smooth smooth_gainBlur;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float smoothFactor_gainBlur;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Smooth smooth_cutoff127;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float smoothFactor_cutoff127;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public LeadVoiceInfo leadVoiceInfo;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float sawFilterDynamicScale;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float noteEmphasisLead;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float gain_jellyfishAccompaniment;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float gain_jellyfishLead;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float gain_personalSynth;

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x54E1B8", Offset = "0x54E1B8", VA = "0x54E1B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x54E568", Offset = "0x54E568", VA = "0x54E568")]
	private void Update()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x54EA08", Offset = "0x54EA08", VA = "0x54EA08")]
	public void SetIdleState(bool isIdle)
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x54EA2C", Offset = "0x54EA2C", VA = "0x54EA2C")]
	public void SetChord(List<int> midinotes)
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x54EA38", Offset = "0x54EA38", VA = "0x54EA38")]
	public LeadVoiceManager()
	{
	}
}
[Token(Token = "0x2000013")]
public class MusicSystemManager : MonoBehaviour
{
	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Conductor conductorInstance;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Sound_analize soundAnalysisInstance;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject cameraPosition;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioAmbienceController ambienceController;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public HarmonisationManager harmonisationManager;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSineManager audioSineManager;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public AudioParticleManager audioParticleManager;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SequencerManager sequencerManager;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public LeadVoiceManager leadVoiceManager;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Waterscript;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float progressionLevel;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int minProgressionLevel;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int maxProgressionLevel;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool increment;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool decrement;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float progressionLevelNormalised;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float progressionLevelSmoothFactor;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool difficultMode;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool followCamera;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x226900", Offset = "0x226900")]
	public float harmonisationInterval;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x226918", Offset = "0x226918")]
	public float silenceStopsHarmonisationInterval;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x226930", Offset = "0x226930")]
	public float voiceSynthVolume;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public BeatEvent m_Beat;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public BeatStartEvent m_BeatStart;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float ambienceVolume;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float progressionDecayRate_normal;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float progressionDecayRate_silence;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float progressionLevelDecayRate_increasePerLevel;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float decay;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Smooth smooth_progression;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float pitchDeltaScale;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float intensityScale;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float testRotateAngle;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BeatEvent m_BeatEvent;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float incrementUpFactor;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x226948", Offset = "0x226948")]
	public float gain_master;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x226960", Offset = "0x226960")]
	public float gain_sequencer;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x226978", Offset = "0x226978")]
	public float gain_pads;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x226990", Offset = "0x226990")]
	public float gain_particles;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2269A8", Offset = "0x2269A8")]
	public float gain_jellyfishAccompaniment;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2269C0", Offset = "0x2269C0")]
	public float gain_jellyfishLead;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2269D8", Offset = "0x2269D8")]
	public float gain_personalsynth;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 infoPrev;

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x775C4C", Offset = "0x775C4C", VA = "0x775C4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x775D80", Offset = "0x775D80", VA = "0x775D80")]
	private void Update()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x775E58", Offset = "0x775E58", VA = "0x775E58")]
	public void Tick(ref Sound_D sound)
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x7764A8", Offset = "0x7764A8", VA = "0x7764A8")]
	public void reportEvent(Vector3 info)
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x776558", Offset = "0x776558", VA = "0x776558")]
	public void beatEvent(Vector3 info)
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x776084", Offset = "0x776084", VA = "0x776084")]
	public void IncrementProgressionLevel(int increment)
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x7765F0", Offset = "0x7765F0", VA = "0x7765F0")]
	public MusicSystemManager()
	{
	}
}
[Token(Token = "0x2000014")]
public class PersonalLeadVoiceController : MonoBehaviour
{
	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public HeadMusicModulation headMusicModulation;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private LeadVoiceManager manager;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Synth_SawBass synth;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioReverbFilter reverb;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Smooth smooth_rev;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Smooth smooth_idle;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float smoothFactor_voiceGain;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float smoothFactor_cutoff;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float octave;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float cutoffGainSensitivity;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool isSecondaryVoice;

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x80D8C4", Offset = "0x80D8C4", VA = "0x80D8C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x80DA18", Offset = "0x80DA18", VA = "0x80DA18")]
	private void Update()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x80DCE8", Offset = "0x80DCE8", VA = "0x80DCE8")]
	public PersonalLeadVoiceController()
	{
	}
}
[Token(Token = "0x2000015")]
public class BeatStartEvent : UnityEvent<float>
{
	[Token(Token = "0x6000062")]
	[Address(RVA = "0x3CA9E4", Offset = "0x3CA9E4", VA = "0x3CA9E4")]
	public BeatStartEvent()
	{
	}
}
[Token(Token = "0x2000016")]
public class SequencerManager : MonoBehaviour
{
	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Tick tick;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float isr;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float sr;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float bpm;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int beatSubdivision;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float progressionIntensity;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool init;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Sequencer_Base> sequencers;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Smooth smooth;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float smoothFactor;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private AudioEchoFilter[] echoFilters;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioReverbFilter[] reverbFilters;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public BeatEvent m_Beat;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BeatStartEvent m_BeatStart;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float gain_allSequencers;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool skipBeats;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool cycleSequences;

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x42D1F4", Offset = "0x42D1F4", VA = "0x42D1F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x42D458", Offset = "0x42D458", VA = "0x42D458")]
	private void Update()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x42D93C", Offset = "0x42D93C", VA = "0x42D93C")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x42D9A0", Offset = "0x42D9A0", VA = "0x42D9A0")]
	public void Tick()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x42DE10", Offset = "0x42DE10", VA = "0x42DE10")]
	public void BeatStart()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x42DE8C", Offset = "0x42DE8C", VA = "0x42DE8C")]
	public void SetChord(List<int> notes)
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x42DFB4", Offset = "0x42DFB4", VA = "0x42DFB4")]
	public void SetHeadInfo(float angVel, float moon)
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x42E108", Offset = "0x42E108", VA = "0x42E108")]
	public void SetVoiceGainModulation(float value)
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x42D42C", Offset = "0x42D42C", VA = "0x42D42C")]
	public void SetBpm(float bpm)
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x42E23C", Offset = "0x42E23C", VA = "0x42E23C")]
	public SequencerManager()
	{
	}
}
[Serializable]
[Token(Token = "0x2000017")]
public class BeatEvent : UnityEvent<Vector3>
{
	[Token(Token = "0x600006D")]
	[Address(RVA = "0x3CA988", Offset = "0x3CA988", VA = "0x3CA988")]
	public BeatEvent()
	{
	}
}
[Token(Token = "0x2000018")]
public class Sequencer_Base : MonoBehaviour
{
	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public BeatEvent m_Beat;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float bpm;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int beatSubdivision;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int measures;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int beatOffset;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fillRhythm;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float velocityScale;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float gain;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int currentBeat;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int currentMeasure;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Synth_SawBass synth;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<int> notes;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int count;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool init;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int sequenceIndex;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool cycleSequences;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool skipBeats;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float[,,] sequences;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 beatInfo;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool invokeBeatEvent;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool reportBeat;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int sequencerCounterMax;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int sequenceIndexOffset;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int numSequences;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float voiceGainMod;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float headRotationMod;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float moonAngleMod;

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x42E26C", Offset = "0x42E26C", VA = "0x42E26C")]
	private void Start()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x42E3C8", Offset = "0x42E3C8", VA = "0x42E3C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x42DAC8", Offset = "0x42DAC8", VA = "0x42DAC8")]
	public void Count()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x42E668", Offset = "0x42E668", VA = "0x42E668")]
	public void SetChord(List<int> notes)
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x42E490", Offset = "0x42E490", VA = "0x42E490")]
	public void Modulate()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x42E670", Offset = "0x42E670", VA = "0x42E670")]
	public void SetHeadAngularVelocity(float value)
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x42E678", Offset = "0x42E678", VA = "0x42E678")]
	public void SetVoiceGainModulation(float value)
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x42E680", Offset = "0x42E680", VA = "0x42E680")]
	public void SetMoonAngle(float value)
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x42E688", Offset = "0x42E688", VA = "0x42E688")]
	public Sequencer_Base()
	{
	}
}
[Token(Token = "0x2000019")]
public class Synth_Base : MonoBehaviour
{
	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float frequency;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float gain;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float note;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float velocity;

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x435FC8", Offset = "0x435FC8", VA = "0x435FC8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x435FCC", Offset = "0x435FCC", VA = "0x435FCC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x435FD0", Offset = "0x435FD0", VA = "0x435FD0", Slot = "4")]
	public virtual void NoteOn()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x435FD4", Offset = "0x435FD4", VA = "0x435FD4", Slot = "5")]
	public virtual void NoteOn(float midinote, float velocity)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x435FD8", Offset = "0x435FD8", VA = "0x435FD8", Slot = "6")]
	public virtual void NoteOn(float midinote, float velocity, float durationInSeconds)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x435FDC", Offset = "0x435FDC", VA = "0x435FDC", Slot = "7")]
	public virtual void NoteOff()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x435FE0", Offset = "0x435FE0", VA = "0x435FE0", Slot = "8")]
	public virtual float GetSampleLengthInSeconds()
	{
		return default(float);
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x435FEC", Offset = "0x435FEC", VA = "0x435FEC")]
	public Synth_Base()
	{
	}
}
[Token(Token = "0x200001A")]
public class Synth_ClipPlayerController : Synth_Base
{
	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public AudioClip clip;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float basenote;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float gainSmoothFactor;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float isr;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float sr;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int bufferLength;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private AudioSource audioSource;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool useGainSmoother;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool trigger;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Smooth smooth;

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x436014", Offset = "0x436014", VA = "0x436014")]
	private void Start()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x436164", Offset = "0x436164", VA = "0x436164")]
	private void Update()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x4362BC", Offset = "0x4362BC", VA = "0x4362BC", Slot = "5")]
	public override void NoteOn(float midinote, float gain)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x436300", Offset = "0x436300", VA = "0x436300", Slot = "6")]
	public override void NoteOn(float midinote, float velocity, float durationInSeconds)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x4363B4", Offset = "0x4363B4", VA = "0x4363B4", Slot = "7")]
	public override void NoteOff()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x4363C0", Offset = "0x4363C0", VA = "0x4363C0", Slot = "8")]
	public override float GetSampleLengthInSeconds()
	{
		return default(float);
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x436470", Offset = "0x436470", VA = "0x436470")]
	public void SetGainSmoothFactor(float value)
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x4364A0", Offset = "0x4364A0", VA = "0x4364A0")]
	public Synth_ClipPlayerController()
	{
	}
}
[Token(Token = "0x200001B")]
public class Synth_Mic : Synth_Base
{
	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private MicrophonePitchDetector micScript;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float isr;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float sr;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource source;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float[] readBuffer;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int readptr;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool initialised;

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x4364D0", Offset = "0x4364D0", VA = "0x4364D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x436578", Offset = "0x436578", VA = "0x436578")]
	private void Update()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x4366D4", Offset = "0x4366D4", VA = "0x4366D4")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x436850", Offset = "0x436850", VA = "0x436850")]
	public Synth_Mic()
	{
	}
}
[Token(Token = "0x200001C")]
public class Synth_Polyblep : Synth_Base
{
	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float cutoff;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float resonance;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float isr;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float sr;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float phase;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private DCHelperTools.LowPassFilter lpFilter;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Polyblep polyblep;

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x436878", Offset = "0x436878", VA = "0x436878")]
	private void Start()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x436978", Offset = "0x436978", VA = "0x436978")]
	private void Update()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x43697C", Offset = "0x43697C", VA = "0x43697C")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x436AC4", Offset = "0x436AC4", VA = "0x436AC4")]
	public Synth_Polyblep()
	{
	}
}
[Token(Token = "0x200001D")]
public class Synth_Sampler : Synth_Base
{
	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public AudioClip clip;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float basenote;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float isr;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float sr;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float phase;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float[] buffer;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int bufferLength;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int readptr;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float readptrDecimal;

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x436B00", Offset = "0x436B00", VA = "0x436B00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x436BC8", Offset = "0x436BC8", VA = "0x436BC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x436BCC", Offset = "0x436BCC", VA = "0x436BCC")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x436E30", Offset = "0x436E30", VA = "0x436E30", Slot = "5")]
	public override void NoteOn(float midinote, float gain)
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x436E44", Offset = "0x436E44", VA = "0x436E44", Slot = "6")]
	public override void NoteOn(float midinote, float velocity, float durationInSeconds)
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x436EE4", Offset = "0x436EE4", VA = "0x436EE4", Slot = "8")]
	public override float GetSampleLengthInSeconds()
	{
		return default(float);
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x436F94", Offset = "0x436F94", VA = "0x436F94")]
	public Synth_Sampler()
	{
	}
}
[Token(Token = "0x200001E")]
public class Synth_SawBass : Synth_Base
{
	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float cutoff;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float resonance;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float isr;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float sr;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float phase;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private DCHelperTools.LowPassFilter lpFilter;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Polyblep polyblep;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Envelope env;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Envelope envFilter;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float attack;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float release;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float attackFilter;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float releaseFilter;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float filterCutoffMin;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float filterCutoffMax;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float filterResMin;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float filterResMax;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float velocitySensitivity;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float filterVelDepth;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float gainOverride;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Smooth smooth_freq;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Smooth smooth_cutoff;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float smoothFactorFrequency;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float pan;

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x436FBC", Offset = "0x436FBC", VA = "0x436FBC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x437194", Offset = "0x437194", VA = "0x437194")]
	private void Update()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x437280", Offset = "0x437280", VA = "0x437280")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x437564", Offset = "0x437564", VA = "0x437564")]
	public void Trigger()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x42E5E0", Offset = "0x42E5E0", VA = "0x42E5E0")]
	public void Trigger(float note, float velocity)
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x4375B0", Offset = "0x4375B0", VA = "0x4375B0")]
	public Synth_SawBass()
	{
	}
}
[Token(Token = "0x200001F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x2233C4", Offset = "0x2233C4")]
public class Synth_SeamlessClipPlayerController : Synth_Base
{
	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public AudioClip clip;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float basenote;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float gainSmoothFactor;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float isr;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float sr;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int bufferLength;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private AudioSource audioSource;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool useGainSmoother;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool trigger;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Smooth smooth;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float distortAmount;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool running;

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x437638", Offset = "0x437638", VA = "0x437638")]
	private void Start()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x43776C", Offset = "0x43776C", VA = "0x43776C")]
	private void Update()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x4378C4", Offset = "0x4378C4", VA = "0x4378C4", Slot = "5")]
	public override void NoteOn(float midinote, float gain)
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x437908", Offset = "0x437908", VA = "0x437908", Slot = "6")]
	public override void NoteOn(float midinote, float velocity, float durationInSeconds)
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x4379BC", Offset = "0x4379BC", VA = "0x4379BC", Slot = "7")]
	public override void NoteOff()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x4379C8", Offset = "0x4379C8", VA = "0x4379C8", Slot = "8")]
	public override float GetSampleLengthInSeconds()
	{
		return default(float);
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x437A78", Offset = "0x437A78", VA = "0x437A78")]
	public void SetGainSmoothFactor(float value)
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x437AA8", Offset = "0x437AA8", VA = "0x437AA8")]
	public Synth_SeamlessClipPlayerController()
	{
	}
}
[Token(Token = "0x2000020")]
public class Synth_Sine : Synth_Base
{
	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float isr;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float sr;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float phase;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PseudoSine sine;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Envelope env;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Smooth smooth;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private PseudoSine vibSine;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float attack;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float release;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float frequencySmoothing;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int count;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float vibratoDepth;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float vibratoRate;

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x437AD8", Offset = "0x437AD8", VA = "0x437AD8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x437C60", Offset = "0x437C60", VA = "0x437C60")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x437CA0", Offset = "0x437CA0", VA = "0x437CA0")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x437E64", Offset = "0x437E64", VA = "0x437E64")]
	public void On()
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x437E8C", Offset = "0x437E8C", VA = "0x437E8C")]
	public void Off()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x437EB4", Offset = "0x437EB4", VA = "0x437EB4")]
	public void Trigger(float note, float velocity)
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x437F20", Offset = "0x437F20", VA = "0x437F20", Slot = "9")]
	public new virtual void NoteOn(float midinote, float velocity)
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x437F8C", Offset = "0x437F8C", VA = "0x437F8C", Slot = "10")]
	public new virtual void NoteOff()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x437FB4", Offset = "0x437FB4", VA = "0x437FB4")]
	public Synth_Sine()
	{
	}
}
[Token(Token = "0x2000021")]
public class HeadMovementSFXController : MonoBehaviour
{
	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public HeadMusicModulation headMusicModulation;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float scaleFactorLoopVolume;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float scaleFactorLoopPan;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float clampLoopPan;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float scaleFactorSourcesPan;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float clampSourcesPan;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Synth_SawBass[] synths;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource source;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private AudioLowPassFilter filter;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Smooth smooth_y;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Smooth smooth_pan;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Smooth smooth_avel;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public AudioAmbienceController ambienceController;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSineManager audioSineManager;

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x541474", Offset = "0x541474", VA = "0x541474")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x541558", Offset = "0x541558", VA = "0x541558")]
	private void Update()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x5418C0", Offset = "0x5418C0", VA = "0x5418C0")]
	public HeadMovementSFXController()
	{
	}
}
[Token(Token = "0x2000022")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x223434", Offset = "0x223434")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x2000239")]
	public enum RotationAxes
	{
		[Token(Token = "0x40013AB")]
		MouseXAndY,
		[Token(Token = "0x40013AC")]
		MouseX,
		[Token(Token = "0x40013AD")]
		MouseY
	}

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public RotationAxes axes;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float sensitivityX;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float sensitivityY;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minimumX;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maximumX;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minimumY;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maximumY;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationY;

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x77558C", Offset = "0x77558C", VA = "0x77558C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x775850", Offset = "0x775850", VA = "0x775850")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x775920", Offset = "0x775920", VA = "0x775920")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x2000023")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x200023A")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x40013AF")]
		Uninitialized = -1,
		[Token(Token = "0x40013B0")]
		NotEnabled,
		[Token(Token = "0x40013B1")]
		Success,
		[Token(Token = "0x40013B2")]
		StreamError,
		[Token(Token = "0x40013B3")]
		ProcessError,
		[Token(Token = "0x40013B4")]
		MaxStatValue
	}

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x17000009")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x60000B3")]
		[Address(RVA = "0x7791B0", Offset = "0x7791B0", VA = "0x7791B0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000B4")]
		[Address(RVA = "0x7791B8", Offset = "0x7791B8", VA = "0x7791B8")]
		set
		{
		}
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x7791C0", Offset = "0x7791C0", VA = "0x7791C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x779478", Offset = "0x779478", VA = "0x779478")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x7797C0", Offset = "0x7797C0", VA = "0x7797C0")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x2000024")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x200023B")]
	private enum Parameters
	{
		[Token(Token = "0x40013B6")]
		P_GAIN,
		[Token(Token = "0x40013B7")]
		P_USEINVSQR,
		[Token(Token = "0x40013B8")]
		P_NEAR,
		[Token(Token = "0x40013B9")]
		P_FAR,
		[Token(Token = "0x40013BA")]
		P_RADIUS,
		[Token(Token = "0x40013BB")]
		P_DISABLE_RFL,
		[Token(Token = "0x40013BC")]
		P_VSPEAKERMODE,
		[Token(Token = "0x40013BD")]
		P_AMBISTAT,
		[Token(Token = "0x40013BE")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x40013BF")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x40013C0")]
		P_SENDLEVEL,
		[Token(Token = "0x40013C1")]
		P_NUM
	}

	[Token(Token = "0x40001CF")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float near;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float far;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x1700000A")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x60000BB")]
		[Address(RVA = "0x779BA0", Offset = "0x779BA0", VA = "0x779BA0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000BC")]
		[Address(RVA = "0x779BA8", Offset = "0x779BA8", VA = "0x779BA8")]
		set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public float Gain
	{
		[Token(Token = "0x60000BD")]
		[Address(RVA = "0x779BB0", Offset = "0x779BB0", VA = "0x779BB0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000BE")]
		[Address(RVA = "0x779BB8", Offset = "0x779BB8", VA = "0x779BB8")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public bool UseInvSqr
	{
		[Token(Token = "0x60000BF")]
		[Address(RVA = "0x779C48", Offset = "0x779C48", VA = "0x779C48")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000C0")]
		[Address(RVA = "0x779C50", Offset = "0x779C50", VA = "0x779C50")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public float Near
	{
		[Token(Token = "0x60000C1")]
		[Address(RVA = "0x779C58", Offset = "0x779C58", VA = "0x779C58")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000C2")]
		[Address(RVA = "0x779C60", Offset = "0x779C60", VA = "0x779C60")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public float Far
	{
		[Token(Token = "0x60000C3")]
		[Address(RVA = "0x779CF0", Offset = "0x779CF0", VA = "0x779CF0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000C4")]
		[Address(RVA = "0x779CF8", Offset = "0x779CF8", VA = "0x779CF8")]
		set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	public float VolumetricRadius
	{
		[Token(Token = "0x60000C5")]
		[Address(RVA = "0x779D88", Offset = "0x779D88", VA = "0x779D88")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000C6")]
		[Address(RVA = "0x779D90", Offset = "0x779D90", VA = "0x779D90")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public float ReverbSend
	{
		[Token(Token = "0x60000C7")]
		[Address(RVA = "0x779E20", Offset = "0x779E20", VA = "0x779E20")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000C8")]
		[Address(RVA = "0x779E28", Offset = "0x779E28", VA = "0x779E28")]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public bool EnableRfl
	{
		[Token(Token = "0x60000C9")]
		[Address(RVA = "0x779EBC", Offset = "0x779EBC", VA = "0x779EBC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000CA")]
		[Address(RVA = "0x779EC4", Offset = "0x779EC4", VA = "0x779EC4")]
		set
		{
		}
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x779848", Offset = "0x779848", VA = "0x779848")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x22B38C", Offset = "0x22B38C")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x779AB0", Offset = "0x779AB0", VA = "0x779AB0")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x779ECC", Offset = "0x779ECC", VA = "0x779ECC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x77A0B0", Offset = "0x77A0B0", VA = "0x77A0B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x77A0B4", Offset = "0x77A0B4", VA = "0x77A0B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x779F40", Offset = "0x779F40", VA = "0x779F40")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x77A1AC", Offset = "0x77A1AC", VA = "0x77A1AC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x77A784", Offset = "0x77A784", VA = "0x77A784")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x779A10", Offset = "0x779A10", VA = "0x779A10")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x77A878", Offset = "0x77A878", VA = "0x77A878")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x2000025")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool profilerEnabled;

	[Token(Token = "0x40001DA")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int port;

	[Token(Token = "0x40001DC")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x77A8A0", Offset = "0x77A8A0", VA = "0x77A8A0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x77A8AC", Offset = "0x77A8AC", VA = "0x77A8AC")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x77A978", Offset = "0x77A978", VA = "0x77A978")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x77A8D8", Offset = "0x77A8D8", VA = "0x77A8D8")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x77AA18", Offset = "0x77AA18", VA = "0x77AA18")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x2000026")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x200023C")]
	private struct MeshMaterial
	{
		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x200023D")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string filePathRelative;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool fileEnabled;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool includeChildMeshes;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private IntPtr geometryHandle;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int OSPSuccess;

	[Token(Token = "0x40001E3")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int terrainDecimation;

	[Token(Token = "0x17000012")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x60000D9")]
		[Address(RVA = "0x77DB2C", Offset = "0x77DB2C", VA = "0x77DB2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000013")]
	public string filePath
	{
		[Token(Token = "0x60000DA")]
		[Address(RVA = "0x77DBCC", Offset = "0x77DBCC", VA = "0x77DBCC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x77DC5C", Offset = "0x77DC5C", VA = "0x77DC5C")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x77DE00", Offset = "0x77DE00", VA = "0x77DE00")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x77DE04", Offset = "0x77DE04", VA = "0x77DE04")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x77E4D4", Offset = "0x77E4D4", VA = "0x77E4D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x77E9C8", Offset = "0x77E9C8", VA = "0x77E9C8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x77EB5C", Offset = "0x77EB5C", VA = "0x77EB5C")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x77F44C", Offset = "0x77F44C", VA = "0x77F44C")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x77F4EC", Offset = "0x77F4EC", VA = "0x77F4EC")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x78160C", Offset = "0x78160C", VA = "0x78160C")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x7814DC", Offset = "0x7814DC", VA = "0x7814DC")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x77E238", Offset = "0x77E238", VA = "0x77E238")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x77E020", Offset = "0x77E020", VA = "0x77E020")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x781E64", Offset = "0x781E64", VA = "0x781E64")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x782404", Offset = "0x782404", VA = "0x782404")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x2000027")]
internal class ONSPPropagation
{
	[Token(Token = "0x200023E")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x40013C8")]
		Int8,
		[Token(Token = "0x40013C9")]
		UInt8,
		[Token(Token = "0x40013CA")]
		Int16,
		[Token(Token = "0x40013CB")]
		UInt16,
		[Token(Token = "0x40013CC")]
		Int32,
		[Token(Token = "0x40013CD")]
		UInt32,
		[Token(Token = "0x40013CE")]
		Int64,
		[Token(Token = "0x40013CF")]
		UInt64,
		[Token(Token = "0x40013D0")]
		Float16,
		[Token(Token = "0x40013D1")]
		Float32,
		[Token(Token = "0x40013D2")]
		Float64
	}

	[Token(Token = "0x200023F")]
	public class ClientType
	{
		[Token(Token = "0x40013D3")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x40013D4")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x40013D5")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x40013D6")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x40013D7")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x40013D8")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x40013D9")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x40013DA")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x40013DB")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x40013DC")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x40013DD")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x40013DE")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x40013DF")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x77AF88", Offset = "0x77AF88", VA = "0x77AF88")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x2000240")]
	public interface PropagationInterface
	{
		[Token(Token = "0x6000BBC")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x6000BBD")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x6000BBE")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x6000BBF")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000BC0")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x6000BC1")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000BC2")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000BC3")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000BC4")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000BC5")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000BC6")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000BC7")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x6000BC8")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000BC9")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000BCA")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x2000241")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x40013E0")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr context_;

		[Token(Token = "0x1700015E")]
		private IntPtr context
		{
			[Token(Token = "0x6000BCB")]
			[Address(RVA = "0x77BDE4", Offset = "0x77BDE4", VA = "0x77BDE4")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x77BE50", Offset = "0x77BE50", VA = "0x77BE50")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x77BEF8", Offset = "0x77BEF8", VA = "0x77BEF8")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x77BFA0", Offset = "0x77BFA0", VA = "0x77BFA0", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x77BFC0", Offset = "0x77BFC0", VA = "0x77BFC0")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x77C070", Offset = "0x77C070", VA = "0x77C070", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x77C0A0", Offset = "0x77C0A0", VA = "0x77C0A0")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x77C148", Offset = "0x77C148", VA = "0x77C148", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x77C168", Offset = "0x77C168", VA = "0x77C168")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0x77C208", Offset = "0x77C208", VA = "0x77C208", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x77C210", Offset = "0x77C210", VA = "0x77C210")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x77C328", Offset = "0x77C328", VA = "0x77C328", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x77C430", Offset = "0x77C430", VA = "0x77C430")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0x77C4E0", Offset = "0x77C4E0", VA = "0x77C4E0", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0x77C4F0", Offset = "0x77C4F0", VA = "0x77C4F0")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0x77C654", Offset = "0x77C654", VA = "0x77C654", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0x77C660", Offset = "0x77C660", VA = "0x77C660")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x77C72C", Offset = "0x77C72C", VA = "0x77C72C", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0x77C738", Offset = "0x77C738", VA = "0x77C738")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0x77C804", Offset = "0x77C804", VA = "0x77C804", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0x77C810", Offset = "0x77C810", VA = "0x77C810")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0x77C8DC", Offset = "0x77C8DC", VA = "0x77C8DC", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0x77C8E8", Offset = "0x77C8E8", VA = "0x77C8E8")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0x77C990", Offset = "0x77C990", VA = "0x77C990", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x77C9B0", Offset = "0x77C9B0", VA = "0x77C9B0")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x77CA50", Offset = "0x77CA50", VA = "0x77CA50", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x77CA58", Offset = "0x77CA58", VA = "0x77CA58")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x77CB10", Offset = "0x77CB10", VA = "0x77CB10", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x77CB40", Offset = "0x77CB40", VA = "0x77CB40")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x77CBF8", Offset = "0x77CBF8", VA = "0x77CBF8", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x77CC28", Offset = "0x77CC28", VA = "0x77CC28")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x77CCD0", Offset = "0x77CCD0", VA = "0x77CCD0", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x77AF28", Offset = "0x77AF28", VA = "0x77AF28")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x2000242")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x40013E2")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr context_;

		[Token(Token = "0x1700015F")]
		private IntPtr context
		{
			[Token(Token = "0x6000BEC")]
			[Address(RVA = "0x77CCDC", Offset = "0x77CCDC", VA = "0x77CCDC")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x77AD28", Offset = "0x77AD28", VA = "0x77AD28")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x77CD48", Offset = "0x77CD48", VA = "0x77CD48")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x77CDF0", Offset = "0x77CDF0", VA = "0x77CDF0", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x77CE10", Offset = "0x77CE10", VA = "0x77CE10")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x77CEC0", Offset = "0x77CEC0", VA = "0x77CEC0", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x77CEF0", Offset = "0x77CEF0", VA = "0x77CEF0")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x77CF98", Offset = "0x77CF98", VA = "0x77CF98", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x77CFB8", Offset = "0x77CFB8", VA = "0x77CFB8")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x77D058", Offset = "0x77D058", VA = "0x77D058", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x77D060", Offset = "0x77D060", VA = "0x77D060")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x77D178", Offset = "0x77D178", VA = "0x77D178", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x77D280", Offset = "0x77D280", VA = "0x77D280")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x77D330", Offset = "0x77D330", VA = "0x77D330", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x77D340", Offset = "0x77D340", VA = "0x77D340")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x77D4A4", Offset = "0x77D4A4", VA = "0x77D4A4", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x77D4B0", Offset = "0x77D4B0", VA = "0x77D4B0")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x77D57C", Offset = "0x77D57C", VA = "0x77D57C", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x77D588", Offset = "0x77D588", VA = "0x77D588")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x77D654", Offset = "0x77D654", VA = "0x77D654", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x77D660", Offset = "0x77D660", VA = "0x77D660")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x77D72C", Offset = "0x77D72C", VA = "0x77D72C", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x77D738", Offset = "0x77D738", VA = "0x77D738")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x77D7E0", Offset = "0x77D7E0", VA = "0x77D7E0", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x77D800", Offset = "0x77D800", VA = "0x77D800")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x77D8A0", Offset = "0x77D8A0", VA = "0x77D8A0", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x77D8A8", Offset = "0x77D8A8", VA = "0x77D8A8")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x77D960", Offset = "0x77D960", VA = "0x77D960", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x77D990", Offset = "0x77D990", VA = "0x77D990")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x77DA48", Offset = "0x77DA48", VA = "0x77DA48", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x77DA78", Offset = "0x77DA78", VA = "0x77DA78")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x77DB20", Offset = "0x77DB20", VA = "0x77DB20", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x77ADD0", Offset = "0x77ADD0", VA = "0x77ADD0")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x2000243")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x40013E4")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr context_;

		[Token(Token = "0x17000160")]
		private IntPtr context
		{
			[Token(Token = "0x6000C0D")]
			[Address(RVA = "0x77AF90", Offset = "0x77AF90", VA = "0x77AF90")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x77AE28", Offset = "0x77AE28", VA = "0x77AE28")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x77B000", Offset = "0x77B000", VA = "0x77B000")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x77B0A8", Offset = "0x77B0A8", VA = "0x77B0A8", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C11")]
		[Address(RVA = "0x77B0C8", Offset = "0x77B0C8", VA = "0x77B0C8")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x77B178", Offset = "0x77B178", VA = "0x77B178", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x77B1A8", Offset = "0x77B1A8", VA = "0x77B1A8")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x77B250", Offset = "0x77B250", VA = "0x77B250", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x77B270", Offset = "0x77B270", VA = "0x77B270")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x77B310", Offset = "0x77B310", VA = "0x77B310", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x77B318", Offset = "0x77B318", VA = "0x77B318")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x77B430", Offset = "0x77B430", VA = "0x77B430", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x77B538", Offset = "0x77B538", VA = "0x77B538")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x77B5E8", Offset = "0x77B5E8", VA = "0x77B5E8", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x77B5F8", Offset = "0x77B5F8", VA = "0x77B5F8")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x77B75C", Offset = "0x77B75C", VA = "0x77B75C", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x77B768", Offset = "0x77B768", VA = "0x77B768")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x77B834", Offset = "0x77B834", VA = "0x77B834", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x77B840", Offset = "0x77B840", VA = "0x77B840")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x77B90C", Offset = "0x77B90C", VA = "0x77B90C", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x77B918", Offset = "0x77B918", VA = "0x77B918")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x77B9E4", Offset = "0x77B9E4", VA = "0x77B9E4", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x77B9F0", Offset = "0x77B9F0", VA = "0x77B9F0")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x77BA98", Offset = "0x77BA98", VA = "0x77BA98", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x77BAB8", Offset = "0x77BAB8", VA = "0x77BAB8")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x77BB58", Offset = "0x77BB58", VA = "0x77BB58", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x77BB60", Offset = "0x77BB60", VA = "0x77BB60")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x77BC18", Offset = "0x77BC18", VA = "0x77BC18", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x77BC48", Offset = "0x77BC48", VA = "0x77BC48")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x77BD00", Offset = "0x77BD00", VA = "0x77BD00", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x77BD30", Offset = "0x77BD30", VA = "0x77BD30")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x77BDD8", Offset = "0x77BDD8", VA = "0x77BDD8", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x77AED0", Offset = "0x77AED0", VA = "0x77AED0")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x17000014")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x60000EA")]
		[Address(RVA = "0x77AA28", Offset = "0x77AA28", VA = "0x77AA28")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x77AAA4", Offset = "0x77AAA4", VA = "0x77AAA4")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x77AF80", Offset = "0x77AF80", VA = "0x77AF80")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x2000028")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x2000244")]
	public enum Preset
	{
		[Token(Token = "0x40013E7")]
		Custom,
		[Token(Token = "0x40013E8")]
		AcousticTile,
		[Token(Token = "0x40013E9")]
		Brick,
		[Token(Token = "0x40013EA")]
		BrickPainted,
		[Token(Token = "0x40013EB")]
		Carpet,
		[Token(Token = "0x40013EC")]
		CarpetHeavy,
		[Token(Token = "0x40013ED")]
		CarpetHeavyPadded,
		[Token(Token = "0x40013EE")]
		CeramicTile,
		[Token(Token = "0x40013EF")]
		Concrete,
		[Token(Token = "0x40013F0")]
		ConcreteRough,
		[Token(Token = "0x40013F1")]
		ConcreteBlock,
		[Token(Token = "0x40013F2")]
		ConcreteBlockPainted,
		[Token(Token = "0x40013F3")]
		Curtain,
		[Token(Token = "0x40013F4")]
		Foliage,
		[Token(Token = "0x40013F5")]
		Glass,
		[Token(Token = "0x40013F6")]
		GlassHeavy,
		[Token(Token = "0x40013F7")]
		Grass,
		[Token(Token = "0x40013F8")]
		Gravel,
		[Token(Token = "0x40013F9")]
		GypsumBoard,
		[Token(Token = "0x40013FA")]
		PlasterOnBrick,
		[Token(Token = "0x40013FB")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x40013FC")]
		Soil,
		[Token(Token = "0x40013FD")]
		SoundProof,
		[Token(Token = "0x40013FE")]
		Snow,
		[Token(Token = "0x40013FF")]
		Steel,
		[Token(Token = "0x4001400")]
		Water,
		[Token(Token = "0x4001401")]
		WoodThin,
		[Token(Token = "0x4001402")]
		WoodThick,
		[Token(Token = "0x4001403")]
		WoodFloor,
		[Token(Token = "0x4001404")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x2000245")]
	public sealed class Point
	{
		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float frequency;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float data;

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x78D910", Offset = "0x78D910", VA = "0x78D910")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x78DA64", Offset = "0x78DA64", VA = "0x78DA64")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x78DAD8", Offset = "0x78DAD8", VA = "0x78DAD8")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x2000246")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x2248A0", Offset = "0x2248A0")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x2000455")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226880", Offset = "0x226880")]
		private sealed class <>c
		{
			[Token(Token = "0x40016BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40016BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x40016BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x600135F")]
			[Address(RVA = "0x78E040", Offset = "0x78E040", VA = "0x78E040")]
			public <>c()
			{
			}

			[Token(Token = "0x6001360")]
			[Address(RVA = "0x78E048", Offset = "0x78E048", VA = "0x78E048")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x6001361")]
			[Address(RVA = "0x78E068", Offset = "0x78E068", VA = "0x78E068")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int selection;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public List<Point> points;

		[Token(Token = "0x17000161")]
		public float Item
		{
			[Token(Token = "0x6000C31")]
			[Address(RVA = "0x78DB34", Offset = "0x78DB34", VA = "0x78DB34")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x78D9D8", Offset = "0x78D9D8", VA = "0x78D9D8")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public IntPtr materialHandle;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x226A80", Offset = "0x226A80")]
	public Spectrum absorption;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x226AB4", Offset = "0x226AB4")]
	public Spectrum transmission;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x226AE8", Offset = "0x226AE8")]
	public Spectrum scattering;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x17000015")]
	public Preset preset
	{
		[Token(Token = "0x60000ED")]
		[Address(RVA = "0x7824FC", Offset = "0x7824FC", VA = "0x7824FC")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x60000EE")]
		[Address(RVA = "0x782504", Offset = "0x782504", VA = "0x782504")]
		set
		{
		}
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x782520", Offset = "0x782520", VA = "0x782520")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x781CD4", Offset = "0x781CD4", VA = "0x781CD4")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x782C68", Offset = "0x782C68", VA = "0x782C68")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x782C6C", Offset = "0x782C6C", VA = "0x782C6C")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x782524", Offset = "0x782524", VA = "0x782524")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x7812E0", Offset = "0x7812E0", VA = "0x7812E0")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x782D64", Offset = "0x782D64", VA = "0x782D64")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x7833B0", Offset = "0x7833B0", VA = "0x7833B0")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x783A08", Offset = "0x783A08", VA = "0x783A08")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x784044", Offset = "0x784044", VA = "0x784044")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x7846A4", Offset = "0x7846A4", VA = "0x7846A4")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x784D00", Offset = "0x784D00", VA = "0x784D00")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x78535C", Offset = "0x78535C", VA = "0x78535C")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x7859A0", Offset = "0x7859A0", VA = "0x7859A0")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x785FE4", Offset = "0x785FE4", VA = "0x785FE4")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x786648", Offset = "0x786648", VA = "0x786648")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x786CAC", Offset = "0x786CAC", VA = "0x786CAC")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x787310", Offset = "0x787310", VA = "0x787310")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x78796C", Offset = "0x78796C", VA = "0x78796C")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x787FBC", Offset = "0x787FBC", VA = "0x787FBC")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x7885F4", Offset = "0x7885F4", VA = "0x7885F4")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x788C34", Offset = "0x788C34", VA = "0x788C34")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x7890E0", Offset = "0x7890E0", VA = "0x7890E0")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x78958C", Offset = "0x78958C", VA = "0x78958C")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x789BF0", Offset = "0x789BF0", VA = "0x789BF0")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x78A248", Offset = "0x78A248", VA = "0x78A248")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x78A8A0", Offset = "0x78A8A0", VA = "0x78A8A0")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x78AD44", Offset = "0x78AD44", VA = "0x78AD44")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x78AF24", Offset = "0x78AF24", VA = "0x78AF24")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x78B3BC", Offset = "0x78B3BC", VA = "0x78B3BC")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x78B9E8", Offset = "0x78B9E8", VA = "0x78B9E8")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x78C018", Offset = "0x78C018", VA = "0x78C018")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x78C654", Offset = "0x78C654", VA = "0x78C654")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x78CC8C", Offset = "0x78CC8C", VA = "0x78CC8C")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x78D2CC", Offset = "0x78D2CC", VA = "0x78D2CC")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x78D938", Offset = "0x78D938", VA = "0x78D938")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x2000029")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float quality;

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x78E088", Offset = "0x78E088", VA = "0x78E088")]
	private void Update()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x78E174", Offset = "0x78E174", VA = "0x78E174")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x200002A")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x17000016")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x6000115")]
		[Address(RVA = "0x7798D4", Offset = "0x7798D4", VA = "0x7798D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x78E858", Offset = "0x78E858", VA = "0x78E858")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x200002B")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x40001EE")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x6000117")]
	[Address(RVA = "0x78E868", Offset = "0x78E868", VA = "0x78E868")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x78E918", Offset = "0x78E918", VA = "0x78E918")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x78EA30", Offset = "0x78EA30", VA = "0x78EA30")]
	private void Start()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x78EA34", Offset = "0x78EA34", VA = "0x78EA34")]
	private void Update()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x78EA38", Offset = "0x78EA38", VA = "0x78EA38")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x200002C")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x2000247")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public LayerMask layerMask;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool visualizeRoom;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int raysPerSecond;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float roomInterpSpeed;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxWallDistance;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int rayCacheSize;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioRaycastCallback _raycastCallback;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float particleSize;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float particleOffset;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private GameObject room;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float[] dims;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float[] coefs;

	[Token(Token = "0x40001FE")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3[] points;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] normals;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private ParticleSystem sys;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x4000204")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x4881A8", Offset = "0x4881A8", VA = "0x4881A8")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x4881D8", Offset = "0x4881D8", VA = "0x4881D8")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x488450", Offset = "0x488450", VA = "0x488450")]
	private void Start()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x488534", Offset = "0x488534", VA = "0x488534")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x488658", Offset = "0x488658", VA = "0x488658")]
	private void Update()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x489358", Offset = "0x489358", VA = "0x489358")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000122")]
	[Address(RVA = "0x488510", Offset = "0x488510", VA = "0x488510")]
	private static extern int OSP_Unity_AssignRaycastCallback(MulticastDelegate callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000123")]
	[Address(RVA = "0x4885B0", Offset = "0x4885B0", VA = "0x4885B0")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000124")]
	[Address(RVA = "0x489038", Offset = "0x489038", VA = "0x489038")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x6000125")]
	[Address(RVA = "0x4890D8", Offset = "0x4890D8", VA = "0x4890D8")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x6000126")]
	[Address(RVA = "0x489178", Offset = "0x489178", VA = "0x489178")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x6000127")]
	[Address(RVA = "0x489218", Offset = "0x489218", VA = "0x489218")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x6000128")]
	[Address(RVA = "0x4892B8", Offset = "0x4892B8", VA = "0x4892B8")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x6000129")]
	[Address(RVA = "0x48A828", Offset = "0x48A828", VA = "0x48A828")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x600012A")]
	[Address(RVA = "0x48A8E8", Offset = "0x48A8E8", VA = "0x48A8E8")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x48A9A8", Offset = "0x48A9A8", VA = "0x48A9A8")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x200002D")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float fadeTime;
}
[Token(Token = "0x200002E")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float fadeTime;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x78E188", Offset = "0x78E188", VA = "0x78E188")]
	private void Start()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x78E18C", Offset = "0x78E18C", VA = "0x78E18C")]
	private void Update()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x78E190", Offset = "0x78E190", VA = "0x78E190")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x78E330", Offset = "0x78E330", VA = "0x78E330")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x78E1D4", Offset = "0x78E1D4", VA = "0x78E1D4")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x78E27C", Offset = "0x78E27C", VA = "0x78E27C")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x78E374", Offset = "0x78E374", VA = "0x78E374")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x78E434", Offset = "0x78E434", VA = "0x78E434")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x78E5F4", Offset = "0x78E5F4", VA = "0x78E5F4")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x78E7B4", Offset = "0x78E7B4", VA = "0x78E7B4")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x200002F")]
[ExecuteInEditMode]
public class PAParticleFieldShadows : MonoBehaviour
{
	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool receiveShadows;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ShadowCastingMode castShadows;

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x80C534", Offset = "0x80C534", VA = "0x80C534")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x80C62C", Offset = "0x80C62C", VA = "0x80C62C")]
	public PAParticleFieldShadows()
	{
	}
}
[Token(Token = "0x2000030")]
public class PACustomBillboardGenerator : PABillboardParticle, PAICustomParticleGenerator
{
	[Serializable]
	[Token(Token = "0x2000248")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2248D4", Offset = "0x2248D4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static Action<PACustomParticle> <>9__6_0;

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x493BE4", Offset = "0x493BE4", VA = "0x493BE4")]
		public <>c()
		{
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x493BEC", Offset = "0x493BEC", VA = "0x493BEC")]
		internal void <OnValidate>b__6_0(PACustomParticle obj)
		{
		}
	}

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public List<PACustomParticle> particles;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	[SerializeField]
	private Mesh particleMesh;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector2[] particleUVs;

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x492E48", Offset = "0x492E48", VA = "0x492E48", Slot = "9")]
	protected override void UpdateCache(PAParticleField settings)
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x492E4C", Offset = "0x492E4C", VA = "0x492E4C", Slot = "10")]
	protected override int SetParticleCapacity(int count)
	{
		return default(int);
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x492EA4", Offset = "0x492EA4", VA = "0x492EA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x492F70", Offset = "0x492F70", VA = "0x492F70")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x49311C", Offset = "0x49311C", VA = "0x49311C", Slot = "17")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x22B3A0", Offset = "0x22B3A0")]
	public void ApplyParticles()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x4933EC", Offset = "0x4933EC", VA = "0x4933EC")]
	private void SetOriginDirection(int particleIndex, Vector3 direction)
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x493668", Offset = "0x493668", VA = "0x493668")]
	private void SetSpeed(int particleIndex, float speed)
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x4936DC", Offset = "0x4936DC", VA = "0x4936DC")]
	private void SetSpinSpeed(int particleIndex, float spinSpeed)
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x4935E4", Offset = "0x4935E4", VA = "0x4935E4")]
	private void SetColor(int particleIndex, Color color)
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x493750", Offset = "0x493750", VA = "0x493750")]
	private void SetUV(int particleIndex, Rect uv)
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x49346C", Offset = "0x49346C", VA = "0x49346C")]
	private void SetSize(int particleIndex, float size)
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x493A6C", Offset = "0x493A6C", VA = "0x493A6C")]
	private void SetIndex(int particleIndex, float normalizedIndex)
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x493AE0", Offset = "0x493AE0", VA = "0x493AE0")]
	public PACustomBillboardGenerator()
	{
	}
}
[Token(Token = "0x2000031")]
public interface PAICustomParticleGenerator
{
	[Token(Token = "0x6000147")]
	void ApplyParticles();
}
[Serializable]
[Token(Token = "0x2000032")]
public class PACustomParticle
{
	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Vector3 originDirection;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float size;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color color;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speed;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float spinSpeed;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Rect uv;

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x493C10", Offset = "0x493C10", VA = "0x493C10")]
	public void SetDefaultValuesIfUninitialized()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x493DE8", Offset = "0x493DE8", VA = "0x493DE8")]
	public PACustomParticle()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x4950B4", Offset = "0x4950B4", VA = "0x4950B4")]
	public PACustomParticle(Vector3 originDirection, Color color, float size, float speed, float spinSpeed, Rect uv)
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x4951B0", Offset = "0x4951B0", VA = "0x4951B0")]
	public PACustomParticle(Vector3 originDirection, Color color, float size = 1f, float speed = 0f, float spinSpeed = 0f)
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x4952C8", Offset = "0x4952C8", VA = "0x4952C8")]
	public PACustomParticle(Vector3 originDirection)
	{
	}
}
[Token(Token = "0x2000033")]
public class PACustomMeshParticleGenerator : PAMeshParticle, PAICustomParticleGenerator
{
	[Serializable]
	[Token(Token = "0x2000249")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2248E4", Offset = "0x2248E4")]
	private sealed class <>c
	{
		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static Action<PACustomMeshParticle> <>9__2_0;

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x495088", Offset = "0x495088", VA = "0x495088")]
		public <>c()
		{
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x495090", Offset = "0x495090", VA = "0x495090")]
		internal void <OnValidate>b__2_0(PACustomMeshParticle obj)
		{
		}
	}

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<PACustomMeshParticle> particles;

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x493F00", Offset = "0x493F00", VA = "0x493F00")]
	private void Awake()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x493FCC", Offset = "0x493FCC", VA = "0x493FCC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x494178", Offset = "0x494178", VA = "0x494178", Slot = "9")]
	protected override void UpdateCache(PAParticleField settings)
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x49417C", Offset = "0x49417C", VA = "0x49417C", Slot = "10")]
	protected override int SetParticleCapacity(int count)
	{
		return default(int);
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x4941D4", Offset = "0x4941D4", VA = "0x4941D4", Slot = "17")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x22B3D4", Offset = "0x22B3D4")]
	public void ApplyParticles()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x49500C", Offset = "0x49500C", VA = "0x49500C")]
	public PACustomMeshParticleGenerator()
	{
	}
}
[Serializable]
[Token(Token = "0x2000034")]
public class PACustomMeshParticle : PACustomParticle
{
	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 spinAxis;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Mesh mesh;

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x493DE4", Offset = "0x493DE4", VA = "0x493DE4")]
	public PACustomMeshParticle()
	{
	}
}
[Token(Token = "0x2000035")]
public class PABillboardParticle : PAParticleMeshGenerator
{
	[Token(Token = "0x4000219")]
	private const int MAX_PARTICLE_COUNT = 16250;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static readonly Vector2[] quadUVs;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	protected static readonly Vector2[] quadOffsets;

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x491F74", Offset = "0x491F74", VA = "0x491F74", Slot = "6")]
	public override int GetMaximumParticleCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x491F7C", Offset = "0x491F7C", VA = "0x491F7C", Slot = "10")]
	protected override int SetParticleCapacity(int count)
	{
		return default(int);
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x491FF8", Offset = "0x491FF8", VA = "0x491FF8", Slot = "11")]
	protected override void UpdateDirection(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x49214C", Offset = "0x49214C", VA = "0x49214C", Slot = "14")]
	protected override void UpdateColor(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x492274", Offset = "0x492274", VA = "0x492274", Slot = "13")]
	protected override void UpdateSpeed(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x492458", Offset = "0x492458", VA = "0x492458", Slot = "12")]
	protected override void UpdateSurface(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x49287C", Offset = "0x49287C", VA = "0x49287C", Slot = "16")]
	protected override void UpdateTriangles(int startAt)
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x492A2C", Offset = "0x492A2C", VA = "0x492A2C", Slot = "15")]
	protected override void UpdateIndicies()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x492B80", Offset = "0x492B80", VA = "0x492B80")]
	public PABillboardParticle()
	{
	}
}
[Token(Token = "0x2000036")]
public class PAMeshParticle : PAParticleMeshGenerator
{
	[Token(Token = "0x400021C")]
	private const int MAX_VERT_COUNT = 65536;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public Mesh inputMesh;

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x4963C4", Offset = "0x4963C4", VA = "0x4963C4", Slot = "6")]
	public override int GetMaximumParticleCount()
	{
		return default(int);
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x4964A8", Offset = "0x4964A8", VA = "0x4964A8", Slot = "7")]
	public override float GetParticleBaseSize()
	{
		return default(float);
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x4966A0", Offset = "0x4966A0", VA = "0x4966A0", Slot = "8")]
	public override void UpdateMesh(Mesh mesh, PAParticleField settings)
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x496758", Offset = "0x496758", VA = "0x496758", Slot = "10")]
	protected override int SetParticleCapacity(int count)
	{
		return default(int);
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x49685C", Offset = "0x49685C", VA = "0x49685C", Slot = "11")]
	protected override void UpdateDirection(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x496A88", Offset = "0x496A88", VA = "0x496A88", Slot = "14")]
	protected override void UpdateColor(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x496D2C", Offset = "0x496D2C", VA = "0x496D2C", Slot = "12")]
	protected override void UpdateSurface(PAParticleField settings, int startAt = 0)
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x4973B4", Offset = "0x4973B4", VA = "0x4973B4", Slot = "16")]
	protected override void UpdateTriangles(int startAt)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x497558", Offset = "0x497558", VA = "0x497558", Slot = "13")]
	protected override void UpdateSpeed(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x494CB0", Offset = "0x494CB0", VA = "0x494CB0")]
	public static float Vector3ToFloat(Vector3 c)
	{
		return default(float);
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x495014", Offset = "0x495014", VA = "0x495014")]
	public PAMeshParticle()
	{
	}
}
[Token(Token = "0x2000037")]
public class PAPFHelper
{
	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool hasInitialized;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int _IsUnserialized;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int _Editor;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int _UserFacing;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int _EdgeAlpha;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static int _EdgeScale;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int _ParticleSize;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static int _FieldSize;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int _Speed;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static int _SpinSpeed;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static int _Force;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static int _SpeedScale;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static int _UOffset;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static int _EdgeThreshold;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static int _InverseEdgeThreshold;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static int _FaceDirection;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static int _UpDirection;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public static int _ParticleCount;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static int _CountMask;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public static int _TotalTime;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static int _DeltaSpeed;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public static int _DeltaForce;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static int _DeltaPosition;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public static int _NearFadeDistance;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static int _NearFadeOffset;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public static int[] _ExclusionMatrix;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static int[] _ExclusionThreshold;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public static int[] _InverseExclusionThreshold;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static int _TurbulenceOffset;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public static int _TurbulenceFrequency;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static int _TurbulenceScale;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public static int _TurbulenceDeltaOffset;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static int _MainTex;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public static int _Color;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static int _CutOff;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public static int _Softness;

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x805480", Offset = "0x805480", VA = "0x805480")]
	public static void GetPropertyIDs()
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x805CD0", Offset = "0x805CD0", VA = "0x805CD0")]
	public PAPFHelper()
	{
	}
}
[Token(Token = "0x2000038")]
public class PAParticleMeshGenerator : MonoBehaviour, ISerializationCallbackReceiver
{
	[Token(Token = "0x200024A")]
	public static class RandomWrapper
	{
		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int m_Seed;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static UnityEngine.Random.State cachedState;

		[Token(Token = "0x17000162")]
		public static int seed
		{
			[Token(Token = "0x6000C40")]
			[Address(RVA = "0x80D4F4", Offset = "0x80D4F4", VA = "0x80D4F4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x80C7FC", Offset = "0x80C7FC", VA = "0x80C7FC")]
		public static void CacheState()
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x80C974", Offset = "0x80C974", VA = "0x80C974")]
		public static void RestoreState()
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x80C880", Offset = "0x80C880", VA = "0x80C880")]
		public static void SetState(int seed)
		{
		}
	}

	[Token(Token = "0x4000242")]
	private const int DATA_STRUCTURE_VERSION = 2;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[HideInInspector]
	[SerializeField]
	protected Vector3[] verts;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	[SerializeField]
	protected Vector3[] normals;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	[SerializeField]
	protected Vector4[] tangents;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	[SerializeField]
	protected Vector2[] uv0;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	[SerializeField]
	protected Vector2[] uv1;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	[SerializeField]
	protected Color[] colors;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	[SerializeField]
	protected int[] triangles;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[HideInInspector]
	private int dataStructureVersion;

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x80C640", Offset = "0x80C640", VA = "0x80C640", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x80C7F4", Offset = "0x80C7F4", VA = "0x80C7F4", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x80C7F8", Offset = "0x80C7F8", VA = "0x80C7F8")]
	protected void CacheSeed()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x80C878", Offset = "0x80C878", VA = "0x80C878")]
	private void SetSeed(int seed)
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x80C8F8", Offset = "0x80C8F8", VA = "0x80C8F8")]
	protected float GetRandomAndIncrement(float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x80C970", Offset = "0x80C970", VA = "0x80C970")]
	protected void ResetSeed()
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x80C9E0", Offset = "0x80C9E0", VA = "0x80C9E0", Slot = "6")]
	public virtual int GetMaximumParticleCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x80C9E8", Offset = "0x80C9E8", VA = "0x80C9E8", Slot = "7")]
	public virtual float GetParticleBaseSize()
	{
		return default(float);
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x80C9F0", Offset = "0x80C9F0", VA = "0x80C9F0")]
	protected void SkipRandomCalls(int callsPerParticle, int count)
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x80CA1C", Offset = "0x80CA1C", VA = "0x80CA1C", Slot = "8")]
	public virtual void UpdateMesh(Mesh mesh, PAParticleField settings)
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x80CBA0", Offset = "0x80CBA0", VA = "0x80CBA0", Slot = "9")]
	protected virtual void UpdateCache(PAParticleField settings)
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x80CA58", Offset = "0x80CA58", VA = "0x80CA58")]
	protected void FillMesh(Mesh mesh)
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x805F48", Offset = "0x805F48", VA = "0x805F48")]
	public int GetClampedParticleCount(int count)
	{
		return default(int);
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x80CF1C", Offset = "0x80CF1C", VA = "0x80CF1C", Slot = "10")]
	protected virtual int SetParticleCapacity(int count)
	{
		return default(int);
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x80CF24", Offset = "0x80CF24", VA = "0x80CF24")]
	protected void SetArraySizes(int vertCount, int triCount)
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x80D454", Offset = "0x80D454", VA = "0x80D454", Slot = "11")]
	protected virtual void UpdateDirection(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x80D458", Offset = "0x80D458", VA = "0x80D458", Slot = "12")]
	protected virtual void UpdateSurface(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x80D45C", Offset = "0x80D45C", VA = "0x80D45C", Slot = "13")]
	protected virtual void UpdateSpeed(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x80D460", Offset = "0x80D460", VA = "0x80D460", Slot = "14")]
	protected virtual void UpdateColor(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x80D464", Offset = "0x80D464", VA = "0x80D464", Slot = "15")]
	protected virtual void UpdateIndicies()
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x80D468", Offset = "0x80D468", VA = "0x80D468", Slot = "16")]
	protected virtual void UpdateTriangles(int startAt)
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x80C704", Offset = "0x80C704", VA = "0x80C704")]
	public void ClearCache()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x80D46C", Offset = "0x80D46C", VA = "0x80D46C")]
	public void CheckDataStructureVersion()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x80D4EC", Offset = "0x80D4EC", VA = "0x80D4EC")]
	public PAParticleMeshGenerator()
	{
	}
}
[Token(Token = "0x2000039")]
[ExecuteInEditMode]
public class PAExclusionZone : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200024B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2248F4", Offset = "0x2248F4")]
	private sealed class <>c
	{
		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static Predicate<PAExclusionZone> <>9__5_0;

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x49633C", Offset = "0x49633C", VA = "0x49633C")]
		public <>c()
		{
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x496344", Offset = "0x496344", VA = "0x496344")]
		internal bool <UnregisterZone>b__5_0(PAExclusionZone obj)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<PAExclusionZone> exclusionZones;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public LayerMask affectsLayers;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 edgeThreshold;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool important;

	[Token(Token = "0x17000017")]
	private Bounds bounds
	{
		[Token(Token = "0x6000189")]
		[Address(RVA = "0x495698", Offset = "0x495698", VA = "0x495698")]
		get
		{
			return default(Bounds);
		}
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x4953D4", Offset = "0x4953D4", VA = "0x4953D4")]
	public static void RegisterZone(PAExclusionZone zone)
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x4954E8", Offset = "0x4954E8", VA = "0x4954E8")]
	public static void UnregisterZone(PAExclusionZone zone)
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x49568C", Offset = "0x49568C", VA = "0x49568C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x495690", Offset = "0x495690", VA = "0x495690")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x495694", Offset = "0x495694", VA = "0x495694")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x495AEC", Offset = "0x495AEC", VA = "0x495AEC")]
	private static Vector3 ClosestPointOnBounds(Bounds bounds, Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x495B44", Offset = "0x495B44", VA = "0x495B44")]
	public static bool GetExclusionZones(ref PAExclusionZone[] zones, Vector3 position, Bounds checkBounds, int layer)
	{
		return default(bool);
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x4961D4", Offset = "0x4961D4", VA = "0x4961D4")]
	public static PAExclusionZone Create(string name)
	{
		return null;
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x496260", Offset = "0x496260", VA = "0x496260")]
	public PAExclusionZone()
	{
	}
}
[Token(Token = "0x200003A")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x223488", Offset = "0x223488")]
public class PAParticleField : MonoBehaviour
{
	[Token(Token = "0x200024C")]
	public enum ParticleType
	{
		[Token(Token = "0x4001412")]
		Billboard,
		[Token(Token = "0x4001413")]
		Mesh,
		[Token(Token = "0x4001414")]
		Custom
	}

	[Token(Token = "0x200024D")]
	public enum SimulationSpace
	{
		[Token(Token = "0x4001416")]
		World,
		[Token(Token = "0x4001417")]
		Local,
		[Token(Token = "0x4001418")]
		LocalWithDelta
	}

	[Token(Token = "0x200024E")]
	public enum Shape
	{
		[Token(Token = "0x400141A")]
		Cube,
		[Token(Token = "0x400141B")]
		Sphere,
		[Token(Token = "0x400141C")]
		Cylinder
	}

	[Token(Token = "0x200024F")]
	public enum EdgeMode
	{
		[Token(Token = "0x400141E")]
		Alpha,
		[Token(Token = "0x400141F")]
		Scale,
		[Token(Token = "0x4001420")]
		Both
	}

	[Token(Token = "0x2000250")]
	public enum MaterialType
	{
		[Token(Token = "0x4001422")]
		Transparent,
		[Token(Token = "0x4001423")]
		TransparentLit,
		[Token(Token = "0x4001424")]
		Additive,
		[Token(Token = "0x4001425")]
		AdditiveLit,
		[Token(Token = "0x4001426")]
		CutOff,
		[Token(Token = "0x4001427")]
		CutOffLit,
		[Token(Token = "0x4001428")]
		Custom,
		[Token(Token = "0x4001429")]
		MeshDefault,
		[Token(Token = "0x400142A")]
		MeshUnlit
	}

	[Token(Token = "0x2000251")]
	public enum TextureType
	{
		[Token(Token = "0x400142C")]
		Simple,
		[Token(Token = "0x400142D")]
		SpriteGrid,
		[Token(Token = "0x400142E")]
		AnimatedRows
	}

	[Token(Token = "0x2000252")]
	public enum SoftParticleType
	{
		[Token(Token = "0x4001430")]
		None,
		[Token(Token = "0x4001431")]
		NearClipOnly,
		[Token(Token = "0x4001432")]
		NearClipAndCameraDepth
	}

	[Token(Token = "0x2000253")]
	public enum TurbulenceType
	{
		[Token(Token = "0x4001434")]
		None,
		[Token(Token = "0x4001435")]
		Simplex2D,
		[Token(Token = "0x4001436")]
		Simplex
	}

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string[] builtinShaderNames;

	[Token(Token = "0x4000250")]
	private const int MAX_PARTICLE_COUNT = 16250;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool clearCacheInBuilds;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	private bool isOpenGL;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private int mSeed;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private ParticleType mGeneratorType;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Mesh mInputMesh;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private int mParticleCount;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float mParticleCountMask;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private Vector3 mFieldSize;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Vector3 mEdgeThreshold;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private EdgeMode mEdgeMode;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SimulationSpace mSimulationSpace;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private Shape mShape;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool mUseExclusionZones;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private Transform mExclusionAnchorOverride;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Vector2 mParticleSize;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float mSpeed;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private Vector3 mSpeedMask;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Color mColor;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Vector3 mForce;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	private bool mCustomFacingDirection;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Vector3 mFacingDirection;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[SerializeField]
	private bool mCustomUpDirection;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Vector3 mUpDirection;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[SerializeField]
	private bool mStretchedBillboard;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private float mSpeedScaleMultiplier;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[SerializeField]
	private bool mSpin;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private float mSpinSpeed;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[SerializeField]
	private float mMinSpinSpeed;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private bool mCustomRotationAxis;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[SerializeField]
	private Vector3 mRotationAxis;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private SoftParticleType mSoftParticles;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[SerializeField]
	private float mNearFadeDistance;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private float mNearFadeOffset;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[SerializeField]
	private float mSoftness;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private TurbulenceType mTurbulenceType;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[SerializeField]
	private float mTurbulenceFrequency;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private float mTurbulenceAmplitude;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[SerializeField]
	private Vector3 mTurbulenceScale;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private Vector3 mTurbulenceOffsetSpeed;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[SerializeField]
	private Gradient mColorVariation;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private float mMinimumSize;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	[SerializeField]
	private float mMinimumSpeed;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private MaterialType mMaterialType;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	[SerializeField]
	private Shader mShader;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private Texture2D mTexture;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	[SerializeField]
	private Vector2 mPivotOffset;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	[SerializeField]
	private TextureType mTextureType;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private int mSpriteColumns;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[SerializeField]
	private int mSpriteRows;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private float mFramerate;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	[SerializeField]
	private float mCutOff;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private bool mReceiveShadows;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	[SerializeField]
	private ShadowCastingMode mCastShadows;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Mesh particleMesh;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private MeshFilter meshFilter;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	[SerializeField]
	private PAParticleMeshGenerator m_MeshGenerator;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	public Material material;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private Material renderingMaterial;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float time;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private Vector3 speedTime;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Vector3 forceTime;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private float spinTime;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Vector3 turbulenceOffsetTime;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private float frameTime;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Vector3 position;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private Vector3 deltaPosition;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private Vector3 scale;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22704C", Offset = "0x22704C")]
	private MeshFlags <meshIsDirtyMask>k__BackingField;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22705C", Offset = "0x22705C")]
	private bool <shaderIsDirty>k__BackingField;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A9")]
	private bool foundExclusionZones;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private PAExclusionZone[] zones;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[SerializeField]
	private Material temporarySerializableMaterial;

	[Token(Token = "0x17000018")]
	public int seed
	{
		[Token(Token = "0x600018E")]
		[Address(RVA = "0x805CDC", Offset = "0x805CDC", VA = "0x805CDC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600018F")]
		[Address(RVA = "0x805CE4", Offset = "0x805CE4", VA = "0x805CE4")]
		set
		{
		}
	}

	[Token(Token = "0x17000019")]
	public ParticleType generatorType
	{
		[Token(Token = "0x6000190")]
		[Address(RVA = "0x805D00", Offset = "0x805D00", VA = "0x805D00")]
		get
		{
			return default(ParticleType);
		}
		[Token(Token = "0x6000191")]
		[Address(RVA = "0x805D08", Offset = "0x805D08", VA = "0x805D08")]
		set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	public int particleCount
	{
		[Token(Token = "0x6000192")]
		[Address(RVA = "0x805D24", Offset = "0x805D24", VA = "0x805D24")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000193")]
		[Address(RVA = "0x805D2C", Offset = "0x805D2C", VA = "0x805D2C")]
		set
		{
		}
	}

	[Token(Token = "0x1700001B")]
	public float particleCountMask
	{
		[Token(Token = "0x6000194")]
		[Address(RVA = "0x805F70", Offset = "0x805F70", VA = "0x805F70")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000195")]
		[Address(RVA = "0x805F78", Offset = "0x805F78", VA = "0x805F78")]
		set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public Vector3 fieldSize
	{
		[Token(Token = "0x6000196")]
		[Address(RVA = "0x806014", Offset = "0x806014", VA = "0x806014")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000197")]
		[Address(RVA = "0x806028", Offset = "0x806028", VA = "0x806028")]
		set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public Vector3 edgeThreshold
	{
		[Token(Token = "0x6000198")]
		[Address(RVA = "0x8060F4", Offset = "0x8060F4", VA = "0x8060F4")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000199")]
		[Address(RVA = "0x806108", Offset = "0x806108", VA = "0x806108")]
		set
		{
		}
	}

	[Token(Token = "0x1700001E")]
	public SimulationSpace simulationSpace
	{
		[Token(Token = "0x600019A")]
		[Address(RVA = "0x80623C", Offset = "0x80623C", VA = "0x80623C")]
		get
		{
			return default(SimulationSpace);
		}
		[Token(Token = "0x600019B")]
		[Address(RVA = "0x806244", Offset = "0x806244", VA = "0x806244")]
		set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	public Shape shape
	{
		[Token(Token = "0x600019C")]
		[Address(RVA = "0x80625C", Offset = "0x80625C", VA = "0x80625C")]
		get
		{
			return default(Shape);
		}
		[Token(Token = "0x600019D")]
		[Address(RVA = "0x806264", Offset = "0x806264", VA = "0x806264")]
		set
		{
		}
	}

	[Token(Token = "0x17000020")]
	public EdgeMode edgeMode
	{
		[Token(Token = "0x600019E")]
		[Address(RVA = "0x80627C", Offset = "0x80627C", VA = "0x80627C")]
		get
		{
			return default(EdgeMode);
		}
		[Token(Token = "0x600019F")]
		[Address(RVA = "0x806284", Offset = "0x806284", VA = "0x806284")]
		set
		{
		}
	}

	[Token(Token = "0x17000021")]
	public bool useExclusionZones
	{
		[Token(Token = "0x60001A0")]
		[Address(RVA = "0x80629C", Offset = "0x80629C", VA = "0x80629C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001A1")]
		[Address(RVA = "0x8062A4", Offset = "0x8062A4", VA = "0x8062A4")]
		set
		{
		}
	}

	[Token(Token = "0x17000022")]
	public Transform exclusionAnchorOverride
	{
		[Token(Token = "0x60001A2")]
		[Address(RVA = "0x8062C8", Offset = "0x8062C8", VA = "0x8062C8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001A3")]
		[Address(RVA = "0x8062D0", Offset = "0x8062D0", VA = "0x8062D0")]
		set
		{
		}
	}

	[Token(Token = "0x17000023")]
	public Color color
	{
		[Token(Token = "0x60001A4")]
		[Address(RVA = "0x806360", Offset = "0x806360", VA = "0x806360")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x60001A5")]
		[Address(RVA = "0x806370", Offset = "0x806370", VA = "0x806370")]
		set
		{
		}
	}

	[Token(Token = "0x17000024")]
	public float alpha
	{
		[Token(Token = "0x60001A6")]
		[Address(RVA = "0x8063DC", Offset = "0x8063DC", VA = "0x8063DC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001A7")]
		[Address(RVA = "0x8063E4", Offset = "0x8063E4", VA = "0x8063E4")]
		set
		{
		}
	}

	[Token(Token = "0x17000025")]
	public float speed
	{
		[Token(Token = "0x60001A8")]
		[Address(RVA = "0x80641C", Offset = "0x80641C", VA = "0x80641C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001A9")]
		[Address(RVA = "0x806424", Offset = "0x806424", VA = "0x806424")]
		set
		{
		}
	}

	[Token(Token = "0x17000026")]
	public Vector3 speedMask
	{
		[Token(Token = "0x60001AA")]
		[Address(RVA = "0x806444", Offset = "0x806444", VA = "0x806444")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60001AB")]
		[Address(RVA = "0x806458", Offset = "0x806458", VA = "0x806458")]
		set
		{
		}
	}

	[Token(Token = "0x17000027")]
	public Vector2 particleSize
	{
		[Token(Token = "0x60001AC")]
		[Address(RVA = "0x806524", Offset = "0x806524", VA = "0x806524")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x60001AD")]
		[Address(RVA = "0x806538", Offset = "0x806538", VA = "0x806538")]
		set
		{
		}
	}

	[Token(Token = "0x17000028")]
	public bool stretchedBillboard
	{
		[Token(Token = "0x60001AE")]
		[Address(RVA = "0x8065F0", Offset = "0x8065F0", VA = "0x8065F0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001AF")]
		[Address(RVA = "0x8065F8", Offset = "0x8065F8", VA = "0x8065F8")]
		set
		{
		}
	}

	[Token(Token = "0x17000029")]
	public float speedScaleMultiplier
	{
		[Token(Token = "0x60001B0")]
		[Address(RVA = "0x806630", Offset = "0x806630", VA = "0x806630")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001B1")]
		[Address(RVA = "0x806638", Offset = "0x806638", VA = "0x806638")]
		set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public bool spin
	{
		[Token(Token = "0x60001B2")]
		[Address(RVA = "0x806658", Offset = "0x806658", VA = "0x806658")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001B3")]
		[Address(RVA = "0x806660", Offset = "0x806660", VA = "0x806660")]
		set
		{
		}
	}

	[Token(Token = "0x1700002B")]
	public float spinSpeed
	{
		[Token(Token = "0x60001B4")]
		[Address(RVA = "0x806698", Offset = "0x806698", VA = "0x806698")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001B5")]
		[Address(RVA = "0x8066A0", Offset = "0x8066A0", VA = "0x8066A0")]
		set
		{
		}
	}

	[Token(Token = "0x1700002C")]
	public float minSpinSpeed
	{
		[Token(Token = "0x60001B6")]
		[Address(RVA = "0x8066C0", Offset = "0x8066C0", VA = "0x8066C0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001B7")]
		[Address(RVA = "0x8066C8", Offset = "0x8066C8", VA = "0x8066C8")]
		set
		{
		}
	}

	[Token(Token = "0x1700002D")]
	public bool customRotationAxis
	{
		[Token(Token = "0x60001B8")]
		[Address(RVA = "0x806774", Offset = "0x806774", VA = "0x806774")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001B9")]
		[Address(RVA = "0x80677C", Offset = "0x80677C", VA = "0x80677C")]
		set
		{
		}
	}

	[Token(Token = "0x1700002E")]
	public Vector3 rotationAxis
	{
		[Token(Token = "0x60001BA")]
		[Address(RVA = "0x8067A4", Offset = "0x8067A4", VA = "0x8067A4")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60001BB")]
		[Address(RVA = "0x8067B8", Offset = "0x8067B8", VA = "0x8067B8")]
		set
		{
		}
	}

	[Token(Token = "0x1700002F")]
	public bool customFacingDirection
	{
		[Token(Token = "0x60001BC")]
		[Address(RVA = "0x806888", Offset = "0x806888", VA = "0x806888")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001BD")]
		[Address(RVA = "0x806890", Offset = "0x806890", VA = "0x806890")]
		set
		{
		}
	}

	[Token(Token = "0x17000030")]
	public Vector3 facingDirection
	{
		[Token(Token = "0x60001BE")]
		[Address(RVA = "0x8068B4", Offset = "0x8068B4", VA = "0x8068B4")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60001BF")]
		[Address(RVA = "0x8068C8", Offset = "0x8068C8", VA = "0x8068C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000031")]
	public bool customUpDirection
	{
		[Token(Token = "0x60001C0")]
		[Address(RVA = "0x8069A4", Offset = "0x8069A4", VA = "0x8069A4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001C1")]
		[Address(RVA = "0x8069AC", Offset = "0x8069AC", VA = "0x8069AC")]
		set
		{
		}
	}

	[Token(Token = "0x17000032")]
	public Vector3 upDirection
	{
		[Token(Token = "0x60001C2")]
		[Address(RVA = "0x8069E4", Offset = "0x8069E4", VA = "0x8069E4")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60001C3")]
		[Address(RVA = "0x8069F8", Offset = "0x8069F8", VA = "0x8069F8")]
		set
		{
		}
	}

	[Token(Token = "0x17000033")]
	public SoftParticleType softParticles
	{
		[Token(Token = "0x60001C4")]
		[Address(RVA = "0x806AC4", Offset = "0x806AC4", VA = "0x806AC4")]
		get
		{
			return default(SoftParticleType);
		}
		[Token(Token = "0x60001C5")]
		[Address(RVA = "0x806ACC", Offset = "0x806ACC", VA = "0x806ACC")]
		set
		{
		}
	}

	[Token(Token = "0x17000034")]
	public float nearFadeDistance
	{
		[Token(Token = "0x60001C6")]
		[Address(RVA = "0x806C4C", Offset = "0x806C4C", VA = "0x806C4C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001C7")]
		[Address(RVA = "0x806C54", Offset = "0x806C54", VA = "0x806C54")]
		set
		{
		}
	}

	[Token(Token = "0x17000035")]
	public float nearFadeOffset
	{
		[Token(Token = "0x60001C8")]
		[Address(RVA = "0x806C74", Offset = "0x806C74", VA = "0x806C74")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001C9")]
		[Address(RVA = "0x806C7C", Offset = "0x806C7C", VA = "0x806C7C")]
		set
		{
		}
	}

	[Token(Token = "0x17000036")]
	public float softness
	{
		[Token(Token = "0x60001CA")]
		[Address(RVA = "0x806C9C", Offset = "0x806C9C", VA = "0x806C9C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001CB")]
		[Address(RVA = "0x806CA4", Offset = "0x806CA4", VA = "0x806CA4")]
		set
		{
		}
	}

	[Token(Token = "0x17000037")]
	public TurbulenceType turbulenceType
	{
		[Token(Token = "0x60001CC")]
		[Address(RVA = "0x806CC4", Offset = "0x806CC4", VA = "0x806CC4")]
		get
		{
			return default(TurbulenceType);
		}
		[Token(Token = "0x60001CD")]
		[Address(RVA = "0x806CCC", Offset = "0x806CCC", VA = "0x806CCC")]
		set
		{
		}
	}

	[Token(Token = "0x17000038")]
	public float turbulenceFrequency
	{
		[Token(Token = "0x60001CE")]
		[Address(RVA = "0x806CE4", Offset = "0x806CE4", VA = "0x806CE4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001CF")]
		[Address(RVA = "0x806CEC", Offset = "0x806CEC", VA = "0x806CEC")]
		set
		{
		}
	}

	[Token(Token = "0x17000039")]
	public float turbulenceAmplitude
	{
		[Token(Token = "0x60001D0")]
		[Address(RVA = "0x806D0C", Offset = "0x806D0C", VA = "0x806D0C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001D1")]
		[Address(RVA = "0x806D14", Offset = "0x806D14", VA = "0x806D14")]
		set
		{
		}
	}

	[Token(Token = "0x1700003A")]
	public Vector3 turbulenceScale
	{
		[Token(Token = "0x60001D2")]
		[Address(RVA = "0x806D34", Offset = "0x806D34", VA = "0x806D34")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60001D3")]
		[Address(RVA = "0x806D48", Offset = "0x806D48", VA = "0x806D48")]
		set
		{
		}
	}

	[Token(Token = "0x1700003B")]
	public Vector3 turbulenceOffsetSpeed
	{
		[Token(Token = "0x60001D4")]
		[Address(RVA = "0x806E14", Offset = "0x806E14", VA = "0x806E14")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60001D5")]
		[Address(RVA = "0x806E28", Offset = "0x806E28", VA = "0x806E28")]
		set
		{
		}
	}

	[Token(Token = "0x1700003C")]
	public Gradient colorVariation
	{
		[Token(Token = "0x60001D6")]
		[Address(RVA = "0x806EF4", Offset = "0x806EF4", VA = "0x806EF4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001D7")]
		[Address(RVA = "0x806F6C", Offset = "0x806F6C", VA = "0x806F6C")]
		set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	public float minimumSize
	{
		[Token(Token = "0x60001D8")]
		[Address(RVA = "0x806F88", Offset = "0x806F88", VA = "0x806F88")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001D9")]
		[Address(RVA = "0x806F90", Offset = "0x806F90", VA = "0x806F90")]
		set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public float minimumSpeed
	{
		[Token(Token = "0x60001DA")]
		[Address(RVA = "0x807030", Offset = "0x807030", VA = "0x807030")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001DB")]
		[Address(RVA = "0x807038", Offset = "0x807038", VA = "0x807038")]
		set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	public Vector3 force
	{
		[Token(Token = "0x60001DC")]
		[Address(RVA = "0x8070D8", Offset = "0x8070D8", VA = "0x8070D8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60001DD")]
		[Address(RVA = "0x8070EC", Offset = "0x8070EC", VA = "0x8070EC")]
		set
		{
		}
	}

	[Token(Token = "0x17000040")]
	public MaterialType materialType
	{
		[Token(Token = "0x60001DE")]
		[Address(RVA = "0x8071B8", Offset = "0x8071B8", VA = "0x8071B8")]
		get
		{
			return default(MaterialType);
		}
		[Token(Token = "0x60001DF")]
		[Address(RVA = "0x8071C0", Offset = "0x8071C0", VA = "0x8071C0")]
		set
		{
		}
	}

	[Token(Token = "0x17000041")]
	public Shader shader
	{
		[Token(Token = "0x60001E0")]
		[Address(RVA = "0x807344", Offset = "0x807344", VA = "0x807344")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001E1")]
		[Address(RVA = "0x8072AC", Offset = "0x8072AC", VA = "0x8072AC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000042")]
	public Texture2D texture
	{
		[Token(Token = "0x60001E2")]
		[Address(RVA = "0x80734C", Offset = "0x80734C", VA = "0x80734C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001E3")]
		[Address(RVA = "0x807354", Offset = "0x807354", VA = "0x807354")]
		set
		{
		}
	}

	[Token(Token = "0x17000043")]
	public TextureType textureType
	{
		[Token(Token = "0x60001E4")]
		[Address(RVA = "0x8073EC", Offset = "0x8073EC", VA = "0x8073EC")]
		get
		{
			return default(TextureType);
		}
		[Token(Token = "0x60001E5")]
		[Address(RVA = "0x8073F4", Offset = "0x8073F4", VA = "0x8073F4")]
		set
		{
		}
	}

	[Token(Token = "0x17000044")]
	public int spriteColumns
	{
		[Token(Token = "0x60001E6")]
		[Address(RVA = "0x80741C", Offset = "0x80741C", VA = "0x80741C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60001E7")]
		[Address(RVA = "0x807424", Offset = "0x807424", VA = "0x807424")]
		set
		{
		}
	}

	[Token(Token = "0x17000045")]
	public int spriteRows
	{
		[Token(Token = "0x60001E8")]
		[Address(RVA = "0x8074C0", Offset = "0x8074C0", VA = "0x8074C0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60001E9")]
		[Address(RVA = "0x8074C8", Offset = "0x8074C8", VA = "0x8074C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000046")]
	public float framerate
	{
		[Token(Token = "0x60001EA")]
		[Address(RVA = "0x807564", Offset = "0x807564", VA = "0x807564")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001EB")]
		[Address(RVA = "0x80756C", Offset = "0x80756C", VA = "0x80756C")]
		set
		{
		}
	}

	[Token(Token = "0x17000047")]
	public float cutOff
	{
		[Token(Token = "0x60001EC")]
		[Address(RVA = "0x807584", Offset = "0x807584", VA = "0x807584")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001ED")]
		[Address(RVA = "0x80758C", Offset = "0x80758C", VA = "0x80758C")]
		set
		{
		}
	}

	[Token(Token = "0x17000048")]
	public Vector2 pivotOffset
	{
		[Token(Token = "0x60001EE")]
		[Address(RVA = "0x807628", Offset = "0x807628", VA = "0x807628")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x60001EF")]
		[Address(RVA = "0x80763C", Offset = "0x80763C", VA = "0x80763C")]
		set
		{
		}
	}

	[Token(Token = "0x17000049")]
	public Mesh inputMesh
	{
		[Token(Token = "0x60001F0")]
		[Address(RVA = "0x8076FC", Offset = "0x8076FC", VA = "0x8076FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001F1")]
		[Address(RVA = "0x807704", Offset = "0x807704", VA = "0x807704")]
		set
		{
		}
	}

	[Token(Token = "0x1700004A")]
	public bool receiveShadows
	{
		[Token(Token = "0x60001F2")]
		[Address(RVA = "0x807718", Offset = "0x807718", VA = "0x807718")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001F3")]
		[Address(RVA = "0x807720", Offset = "0x807720", VA = "0x807720")]
		set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	public ShadowCastingMode castShadows
	{
		[Token(Token = "0x60001F4")]
		[Address(RVA = "0x8077D4", Offset = "0x8077D4", VA = "0x8077D4")]
		get
		{
			return default(ShadowCastingMode);
		}
		[Token(Token = "0x60001F5")]
		[Address(RVA = "0x8077DC", Offset = "0x8077DC", VA = "0x8077DC")]
		set
		{
		}
	}

	[Token(Token = "0x1700004C")]
	private PAParticleMeshGenerator meshGenerator
	{
		[Token(Token = "0x60001F6")]
		[Address(RVA = "0x805E54", Offset = "0x805E54", VA = "0x805E54")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001F7")]
		[Address(RVA = "0x807A80", Offset = "0x807A80", VA = "0x807A80")]
		set
		{
		}
	}

	[Token(Token = "0x1700004D")]
	public MeshFlags meshIsDirtyMask
	{
		[Token(Token = "0x60001F8")]
		[Address(RVA = "0x807A88", Offset = "0x807A88", VA = "0x807A88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B408", Offset = "0x22B408")]
		get
		{
			return default(MeshFlags);
		}
		[Token(Token = "0x60001F9")]
		[Address(RVA = "0x807A90", Offset = "0x807A90", VA = "0x807A90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B418", Offset = "0x22B418")]
		set
		{
		}
	}

	[Token(Token = "0x1700004E")]
	public bool shaderIsDirty
	{
		[Token(Token = "0x60001FA")]
		[Address(RVA = "0x807A98", Offset = "0x807A98", VA = "0x807A98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B428", Offset = "0x22B428")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001FB")]
		[Address(RVA = "0x807AA0", Offset = "0x807AA0", VA = "0x807AA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B438", Offset = "0x22B438")]
		set
		{
		}
	}

	[Token(Token = "0x60001FC")]
	private T GetOrAddComponent<T>() where T : Component
	{
		return null;
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x807AA8", Offset = "0x807AA8", VA = "0x807AA8")]
	private void GetRenderingComponents()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x807BB4", Offset = "0x807BB4", VA = "0x807BB4")]
	private void CreateAssetTypes()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x807D90", Offset = "0x807D90", VA = "0x807D90")]
	private Material CreateInstanceMaterial()
	{
		return null;
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x807890", Offset = "0x807890", VA = "0x807890")]
	private void UpdateGeneratorType(ParticleType newType)
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x807F98", Offset = "0x807F98", VA = "0x807F98")]
	private void SetShaderValues()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x80961C", Offset = "0x80961C", VA = "0x80961C")]
	private void SetKeyword(string keyword, bool enable)
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x8096A8", Offset = "0x8096A8", VA = "0x8096A8")]
	private static void SetMaterialKeyword(string keyword, bool enable, Material material)
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x809764", Offset = "0x809764", VA = "0x809764")]
	private void SetFloatKeyword(string keyword, bool enable)
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x8095CC", Offset = "0x8095CC", VA = "0x8095CC")]
	private void SetFloatKeyword(int keywordID, bool enable)
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x8097B4", Offset = "0x8097B4", VA = "0x8097B4")]
	public void UpdateParticleField()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x8097D8", Offset = "0x8097D8", VA = "0x8097D8")]
	public void UpdateMesh()
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x8098C4", Offset = "0x8098C4", VA = "0x8098C4")]
	public void UpdateShader()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x8098E0", Offset = "0x8098E0", VA = "0x8098E0")]
	private void UpdateAnimationValues()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x809918", Offset = "0x809918", VA = "0x809918")]
	public void Simulate(float t, bool restart = false)
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x809BE4", Offset = "0x809BE4", VA = "0x809BE4")]
	private void UpdateExclusionZoneValues()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x809DAC", Offset = "0x809DAC", VA = "0x809DAC")]
	private void SetShaderAnimationValues()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x80A52C", Offset = "0x80A52C", VA = "0x80A52C")]
	private void SetShaderExclusionZoneValues()
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x80B268", Offset = "0x80B268", VA = "0x80B268")]
	private void Start()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x80B330", Offset = "0x80B330", VA = "0x80B330")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x809B10", Offset = "0x809B10", VA = "0x809B10")]
	public void ResetTimers()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x80B334", Offset = "0x80B334", VA = "0x80B334")]
	private void Update()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x80B650", Offset = "0x80B650", VA = "0x80B650")]
	private void OnWillRenderObject()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x80B818", Offset = "0x80B818", VA = "0x80B818")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x80B93C", Offset = "0x80B93C", VA = "0x80B93C")]
	public int GetMaxCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x80BA04", Offset = "0x80BA04", VA = "0x80BA04")]
	public Bounds GetBounds()
	{
		return default(Bounds);
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x80BBB4", Offset = "0x80BBB4", VA = "0x80BBB4")]
	public static PAParticleField Create(string name)
	{
		return null;
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x80BC40", Offset = "0x80BC40", VA = "0x80BC40")]
	private void CreateTemporarySerializableMaterial()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x80BE3C", Offset = "0x80BE3C", VA = "0x80BE3C")]
	public PAParticleField()
	{
	}
}
[Token(Token = "0x200003B")]
[Flags]
public enum MeshFlags
{
	[Token(Token = "0x400029B")]
	None = 0,
	[Token(Token = "0x400029C")]
	Generator = 1,
	[Token(Token = "0x400029D")]
	Count = 2,
	[Token(Token = "0x400029E")]
	Color = 4,
	[Token(Token = "0x400029F")]
	Speed = 8,
	[Token(Token = "0x40002A0")]
	Surface = 0x10,
	[Token(Token = "0x40002A1")]
	Seed = 0x1C,
	[Token(Token = "0x40002A2")]
	All = 0x1F
}
[Token(Token = "0x200003C")]
public class ChatController : MonoBehaviour
{
	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TMP_InputField TMP_ChatInput;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TMP_Text TMP_ChatOutput;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Scrollbar ChatScrollbar;

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x3CE294", Offset = "0x3CE294", VA = "0x3CE294")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x3CE358", Offset = "0x3CE358", VA = "0x3CE358")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x3CE41C", Offset = "0x3CE41C", VA = "0x3CE41C")]
	private void AddToChatOutput(string newText)
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x3CE934", Offset = "0x3CE934", VA = "0x3CE934")]
	public ChatController()
	{
	}
}
[Token(Token = "0x200003D")]
public class EnvMapAnimator : MonoBehaviour
{
	[Token(Token = "0x2000254")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x224904", Offset = "0x224904")]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EnvMapAnimator <>4__this;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Matrix4x4 <matrix>5__2;

		[Token(Token = "0x17000163")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C47")]
			[Address(RVA = "0x3F1A7C", Offset = "0x3F1A7C", VA = "0x3F1A7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000164")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C49")]
			[Address(RVA = "0x3F1AFC", Offset = "0x3F1AFC", VA = "0x3F1AFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x3F1738", Offset = "0x3F1738", VA = "0x3F1738")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x3F1760", Offset = "0x3F1760", VA = "0x3F1760", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x3F1764", Offset = "0x3F1764", VA = "0x3F1764", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x3F1A84", Offset = "0x3F1A84", VA = "0x3F1A84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 RotationSpeeds;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TMP_Text m_textMeshPro;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Material m_material;

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x3F1630", Offset = "0x3F1630", VA = "0x3F1630")]
	private void Awake()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x3F16B8", Offset = "0x3F16B8", VA = "0x3F16B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x22B448", Offset = "0x22B448")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x3F1758", Offset = "0x3F1758", VA = "0x3F1758")]
	public EnvMapAnimator()
	{
	}
}
[Token(Token = "0x200003E")]
public class TOD_Animation : MonoBehaviour
{
	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22707C", Offset = "0x22707C")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0x22707C", Offset = "0x22707C")]
	public float CameraMovement;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2270C8", Offset = "0x2270C8")]
	[AttributeAttribute(Name = "TOD_RangeAttribute", RVA = "0x2270C8", Offset = "0x2270C8")]
	public float WindDegrees;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22711C", Offset = "0x22711C")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0x22711C", Offset = "0x22711C")]
	public float WindSpeed;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x227168", Offset = "0x227168")]
	private Vector3 <CloudUV>k__BackingField;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private TOD_Sky sky;

	[Token(Token = "0x1700004F")]
	public Vector3 CloudUV
	{
		[Token(Token = "0x6000221")]
		[Address(RVA = "0x44F8D4", Offset = "0x44F8D4", VA = "0x44F8D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B4B8", Offset = "0x22B4B8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000222")]
		[Address(RVA = "0x44F8E8", Offset = "0x44F8E8", VA = "0x44F8E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B4C8", Offset = "0x22B4C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000050")]
	public Vector3 OffsetUV
	{
		[Token(Token = "0x6000223")]
		[Address(RVA = "0x44F8F4", Offset = "0x44F8F4", VA = "0x44F8F4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x44FAA0", Offset = "0x44FAA0", VA = "0x44FAA0")]
	protected void Start()
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x44FB60", Offset = "0x44FB60", VA = "0x44FB60")]
	protected void Update()
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x44FD64", Offset = "0x44FD64", VA = "0x44FD64")]
	public TOD_Animation()
	{
	}
}
[Token(Token = "0x200003F")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x223518", Offset = "0x223518")]
public class TOD_MinAttribute : PropertyAttribute
{
	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float min;

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x45499C", Offset = "0x45499C", VA = "0x45499C")]
	public TOD_MinAttribute(float min)
	{
	}
}
[Token(Token = "0x2000040")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x223544", Offset = "0x223544")]
public class TOD_MaxAttribute : PropertyAttribute
{
	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float max;

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x45497C", Offset = "0x45497C", VA = "0x45497C")]
	public TOD_MaxAttribute(float max)
	{
	}
}
[Token(Token = "0x2000041")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x223570", Offset = "0x223570")]
public class TOD_RangeAttribute : PropertyAttribute
{
	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float min;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float max;

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x455570", Offset = "0x455570", VA = "0x455570")]
	public TOD_RangeAttribute(float min, float max)
	{
	}
}
[Token(Token = "0x2000042")]
public class TOD_Billboard : MonoBehaviour
{
	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float Altitude;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float Azimuth;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float Distance;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Size;

	[Token(Token = "0x600022A")]
	private T GetComponentInParents<T>() where T : Component
	{
		return null;
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x450758", Offset = "0x450758", VA = "0x450758")]
	public TOD_Billboard()
	{
	}
}
[Token(Token = "0x2000043")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x22359C", Offset = "0x22359C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x22359C", Offset = "0x22359C")]
public class TOD_Camera : MonoBehaviour
{
	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TOD_Sky sky;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool DomePosToCamera;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 DomePosOffset;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool DomeScaleToFarClip;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float DomeScaleFactor;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera cameraComponent;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Transform cameraTransform;

	[Token(Token = "0x17000051")]
	public bool HDR
	{
		[Token(Token = "0x600022C")]
		[Address(RVA = "0x45076C", Offset = "0x45076C", VA = "0x45076C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000052")]
	public float NearClipPlane
	{
		[Token(Token = "0x600022D")]
		[Address(RVA = "0x450818", Offset = "0x450818", VA = "0x450818")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000053")]
	public float FarClipPlane
	{
		[Token(Token = "0x600022E")]
		[Address(RVA = "0x4508C8", Offset = "0x4508C8", VA = "0x4508C8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000054")]
	public Color BackgroundColor
	{
		[Token(Token = "0x600022F")]
		[Address(RVA = "0x450978", Offset = "0x450978", VA = "0x450978")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x450A34", Offset = "0x450A34", VA = "0x450A34")]
	protected void OnValidate()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x450ACC", Offset = "0x450ACC", VA = "0x450ACC")]
	protected void OnEnable()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x450D3C", Offset = "0x450D3C", VA = "0x450D3C")]
	protected void Update()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x450FD4", Offset = "0x450FD4", VA = "0x450FD4")]
	protected void OnPreCull()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x450B98", Offset = "0x450B98", VA = "0x450B98")]
	private TOD_Sky FindSky(bool fallback = false)
	{
		return null;
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x4510EC", Offset = "0x4510EC", VA = "0x4510EC")]
	public void DoDomeScaleToFarClip()
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x4511B0", Offset = "0x4511B0", VA = "0x4511B0")]
	public void DoDomePosToCamera()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x451344", Offset = "0x451344", VA = "0x451344")]
	public TOD_Camera()
	{
	}
}
[Token(Token = "0x2000044")]
[ExecuteInEditMode]
public class TOD_Components : MonoBehaviour
{
	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject Space;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject Stars;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject Sun;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Moon;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject Atmosphere;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Clear;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject Clouds;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Billboards;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GameObject Light;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x227178", Offset = "0x227178")]
	private Transform <DomeTransform>k__BackingField;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x227188", Offset = "0x227188")]
	private Transform <SpaceTransform>k__BackingField;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x227198", Offset = "0x227198")]
	private Transform <StarTransform>k__BackingField;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2271A8", Offset = "0x2271A8")]
	private Transform <SunTransform>k__BackingField;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2271B8", Offset = "0x2271B8")]
	private Transform <MoonTransform>k__BackingField;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2271C8", Offset = "0x2271C8")]
	private Transform <AtmosphereTransform>k__BackingField;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2271D8", Offset = "0x2271D8")]
	private Transform <ClearTransform>k__BackingField;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2271E8", Offset = "0x2271E8")]
	private Transform <CloudTransform>k__BackingField;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2271F8", Offset = "0x2271F8")]
	private Transform <BillboardTransform>k__BackingField;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x227208", Offset = "0x227208")]
	private Transform <LightTransform>k__BackingField;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x227218", Offset = "0x227218")]
	private Renderer <SpaceRenderer>k__BackingField;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x227228", Offset = "0x227228")]
	private Renderer <StarRenderer>k__BackingField;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x227238", Offset = "0x227238")]
	private Renderer <SunRenderer>k__BackingField;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x227248", Offset = "0x227248")]
	private Renderer <MoonRenderer>k__BackingField;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x227258", Offset = "0x227258")]
	private Renderer <AtmosphereRenderer>k__BackingField;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x227268", Offset = "0x227268")]
	private Renderer <ClearRenderer>k__BackingField;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x227278", Offset = "0x227278")]
	private Renderer <CloudRenderer>k__BackingField;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x227288", Offset = "0x227288")]
	private Renderer[] <BillboardRenderers>k__BackingField;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x227298", Offset = "0x227298")]
	private MeshFilter <SpaceMeshFilter>k__BackingField;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2272A8", Offset = "0x2272A8")]
	private MeshFilter <StarMeshFilter>k__BackingField;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2272B8", Offset = "0x2272B8")]
	private MeshFilter <SunMeshFilter>k__BackingField;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2272C8", Offset = "0x2272C8")]
	private MeshFilter <MoonMeshFilter>k__BackingField;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2272D8", Offset = "0x2272D8")]
	private MeshFilter <AtmosphereMeshFilter>k__BackingField;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2272E8", Offset = "0x2272E8")]
	private MeshFilter <ClearMeshFilter>k__BackingField;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2272F8", Offset = "0x2272F8")]
	private MeshFilter <CloudMeshFilter>k__BackingField;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x227308", Offset = "0x227308")]
	private MeshFilter[] <BillboardMeshFilters>k__BackingField;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x227318", Offset = "0x227318")]
	private Material <SpaceMaterial>k__BackingField;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x227328", Offset = "0x227328")]
	private Material <StarMaterial>k__BackingField;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x227338", Offset = "0x227338")]
	private Material <SunMaterial>k__BackingField;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x227348", Offset = "0x227348")]
	private Material <MoonMaterial>k__BackingField;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x227358", Offset = "0x227358")]
	private Material <AtmosphereMaterial>k__BackingField;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x227368", Offset = "0x227368")]
	private Material <ClearMaterial>k__BackingField;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x227378", Offset = "0x227378")]
	private Material <CloudMaterial>k__BackingField;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x227388", Offset = "0x227388")]
	private Material[] <BillboardMaterials>k__BackingField;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x227398", Offset = "0x227398")]
	private Light <LightSource>k__BackingField;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2273A8", Offset = "0x2273A8")]
	private TOD_Sky <Sky>k__BackingField;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2273B8", Offset = "0x2273B8")]
	private TOD_Animation <Animation>k__BackingField;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2273C8", Offset = "0x2273C8")]
	private TOD_Time <Time>k__BackingField;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2273D8", Offset = "0x2273D8")]
	private TOD_Camera <Camera>k__BackingField;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2273E8", Offset = "0x2273E8")]
	private TOD_Rays <Rays>k__BackingField;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2273F8", Offset = "0x2273F8")]
	private TOD_Scattering <Scattering>k__BackingField;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x227408", Offset = "0x227408")]
	private TOD_Shadows <Shadows>k__BackingField;

	[Token(Token = "0x17000055")]
	public Transform DomeTransform
	{
		[Token(Token = "0x6000238")]
		[Address(RVA = "0x451448", Offset = "0x451448", VA = "0x451448")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B4D8", Offset = "0x22B4D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000239")]
		[Address(RVA = "0x451450", Offset = "0x451450", VA = "0x451450")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B4E8", Offset = "0x22B4E8")]
		set
		{
		}
	}

	[Token(Token = "0x17000056")]
	public Transform SpaceTransform
	{
		[Token(Token = "0x600023A")]
		[Address(RVA = "0x451458", Offset = "0x451458", VA = "0x451458")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B4F8", Offset = "0x22B4F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600023B")]
		[Address(RVA = "0x451460", Offset = "0x451460", VA = "0x451460")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B508", Offset = "0x22B508")]
		set
		{
		}
	}

	[Token(Token = "0x17000057")]
	public Transform StarTransform
	{
		[Token(Token = "0x600023C")]
		[Address(RVA = "0x451468", Offset = "0x451468", VA = "0x451468")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B518", Offset = "0x22B518")]
		get
		{
			return null;
		}
		[Token(Token = "0x600023D")]
		[Address(RVA = "0x451470", Offset = "0x451470", VA = "0x451470")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B528", Offset = "0x22B528")]
		set
		{
		}
	}

	[Token(Token = "0x17000058")]
	public Transform SunTransform
	{
		[Token(Token = "0x600023E")]
		[Address(RVA = "0x451478", Offset = "0x451478", VA = "0x451478")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B538", Offset = "0x22B538")]
		get
		{
			return null;
		}
		[Token(Token = "0x600023F")]
		[Address(RVA = "0x451480", Offset = "0x451480", VA = "0x451480")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B548", Offset = "0x22B548")]
		set
		{
		}
	}

	[Token(Token = "0x17000059")]
	public Transform MoonTransform
	{
		[Token(Token = "0x6000240")]
		[Address(RVA = "0x451488", Offset = "0x451488", VA = "0x451488")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B558", Offset = "0x22B558")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000241")]
		[Address(RVA = "0x451490", Offset = "0x451490", VA = "0x451490")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B568", Offset = "0x22B568")]
		set
		{
		}
	}

	[Token(Token = "0x1700005A")]
	public Transform AtmosphereTransform
	{
		[Token(Token = "0x6000242")]
		[Address(RVA = "0x451498", Offset = "0x451498", VA = "0x451498")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B578", Offset = "0x22B578")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000243")]
		[Address(RVA = "0x4514A0", Offset = "0x4514A0", VA = "0x4514A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B588", Offset = "0x22B588")]
		set
		{
		}
	}

	[Token(Token = "0x1700005B")]
	public Transform ClearTransform
	{
		[Token(Token = "0x6000244")]
		[Address(RVA = "0x4514A8", Offset = "0x4514A8", VA = "0x4514A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B598", Offset = "0x22B598")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000245")]
		[Address(RVA = "0x4514B0", Offset = "0x4514B0", VA = "0x4514B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B5A8", Offset = "0x22B5A8")]
		set
		{
		}
	}

	[Token(Token = "0x1700005C")]
	public Transform CloudTransform
	{
		[Token(Token = "0x6000246")]
		[Address(RVA = "0x4514B8", Offset = "0x4514B8", VA = "0x4514B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B5B8", Offset = "0x22B5B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000247")]
		[Address(RVA = "0x4514C0", Offset = "0x4514C0", VA = "0x4514C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B5C8", Offset = "0x22B5C8")]
		set
		{
		}
	}

	[Token(Token = "0x1700005D")]
	public Transform BillboardTransform
	{
		[Token(Token = "0x6000248")]
		[Address(RVA = "0x4514C8", Offset = "0x4514C8", VA = "0x4514C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B5D8", Offset = "0x22B5D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000249")]
		[Address(RVA = "0x4514D0", Offset = "0x4514D0", VA = "0x4514D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B5E8", Offset = "0x22B5E8")]
		set
		{
		}
	}

	[Token(Token = "0x1700005E")]
	public Transform LightTransform
	{
		[Token(Token = "0x600024A")]
		[Address(RVA = "0x4514D8", Offset = "0x4514D8", VA = "0x4514D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B5F8", Offset = "0x22B5F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600024B")]
		[Address(RVA = "0x4514E0", Offset = "0x4514E0", VA = "0x4514E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B608", Offset = "0x22B608")]
		set
		{
		}
	}

	[Token(Token = "0x1700005F")]
	public Renderer SpaceRenderer
	{
		[Token(Token = "0x600024C")]
		[Address(RVA = "0x4514E8", Offset = "0x4514E8", VA = "0x4514E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B618", Offset = "0x22B618")]
		get
		{
			return null;
		}
		[Token(Token = "0x600024D")]
		[Address(RVA = "0x4514F0", Offset = "0x4514F0", VA = "0x4514F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B628", Offset = "0x22B628")]
		set
		{
		}
	}

	[Token(Token = "0x17000060")]
	public Renderer StarRenderer
	{
		[Token(Token = "0x600024E")]
		[Address(RVA = "0x4514F8", Offset = "0x4514F8", VA = "0x4514F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B638", Offset = "0x22B638")]
		get
		{
			return null;
		}
		[Token(Token = "0x600024F")]
		[Address(RVA = "0x451500", Offset = "0x451500", VA = "0x451500")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B648", Offset = "0x22B648")]
		set
		{
		}
	}

	[Token(Token = "0x17000061")]
	public Renderer SunRenderer
	{
		[Token(Token = "0x6000250")]
		[Address(RVA = "0x451508", Offset = "0x451508", VA = "0x451508")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B658", Offset = "0x22B658")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000251")]
		[Address(RVA = "0x451510", Offset = "0x451510", VA = "0x451510")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B668", Offset = "0x22B668")]
		set
		{
		}
	}

	[Token(Token = "0x17000062")]
	public Renderer MoonRenderer
	{
		[Token(Token = "0x6000252")]
		[Address(RVA = "0x451518", Offset = "0x451518", VA = "0x451518")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B678", Offset = "0x22B678")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000253")]
		[Address(RVA = "0x451520", Offset = "0x451520", VA = "0x451520")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B688", Offset = "0x22B688")]
		set
		{
		}
	}

	[Token(Token = "0x17000063")]
	public Renderer AtmosphereRenderer
	{
		[Token(Token = "0x6000254")]
		[Address(RVA = "0x451528", Offset = "0x451528", VA = "0x451528")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B698", Offset = "0x22B698")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000255")]
		[Address(RVA = "0x451530", Offset = "0x451530", VA = "0x451530")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B6A8", Offset = "0x22B6A8")]
		set
		{
		}
	}

	[Token(Token = "0x17000064")]
	public Renderer ClearRenderer
	{
		[Token(Token = "0x6000256")]
		[Address(RVA = "0x451538", Offset = "0x451538", VA = "0x451538")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B6B8", Offset = "0x22B6B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000257")]
		[Address(RVA = "0x451540", Offset = "0x451540", VA = "0x451540")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B6C8", Offset = "0x22B6C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000065")]
	public Renderer CloudRenderer
	{
		[Token(Token = "0x6000258")]
		[Address(RVA = "0x451548", Offset = "0x451548", VA = "0x451548")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B6D8", Offset = "0x22B6D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000259")]
		[Address(RVA = "0x451550", Offset = "0x451550", VA = "0x451550")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B6E8", Offset = "0x22B6E8")]
		set
		{
		}
	}

	[Token(Token = "0x17000066")]
	public Renderer[] BillboardRenderers
	{
		[Token(Token = "0x600025A")]
		[Address(RVA = "0x451558", Offset = "0x451558", VA = "0x451558")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B6F8", Offset = "0x22B6F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600025B")]
		[Address(RVA = "0x451560", Offset = "0x451560", VA = "0x451560")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B708", Offset = "0x22B708")]
		set
		{
		}
	}

	[Token(Token = "0x17000067")]
	public MeshFilter SpaceMeshFilter
	{
		[Token(Token = "0x600025C")]
		[Address(RVA = "0x451568", Offset = "0x451568", VA = "0x451568")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B718", Offset = "0x22B718")]
		get
		{
			return null;
		}
		[Token(Token = "0x600025D")]
		[Address(RVA = "0x451570", Offset = "0x451570", VA = "0x451570")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B728", Offset = "0x22B728")]
		set
		{
		}
	}

	[Token(Token = "0x17000068")]
	public MeshFilter StarMeshFilter
	{
		[Token(Token = "0x600025E")]
		[Address(RVA = "0x451578", Offset = "0x451578", VA = "0x451578")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B738", Offset = "0x22B738")]
		get
		{
			return null;
		}
		[Token(Token = "0x600025F")]
		[Address(RVA = "0x451580", Offset = "0x451580", VA = "0x451580")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B748", Offset = "0x22B748")]
		set
		{
		}
	}

	[Token(Token = "0x17000069")]
	public MeshFilter SunMeshFilter
	{
		[Token(Token = "0x6000260")]
		[Address(RVA = "0x451588", Offset = "0x451588", VA = "0x451588")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B758", Offset = "0x22B758")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000261")]
		[Address(RVA = "0x451590", Offset = "0x451590", VA = "0x451590")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B768", Offset = "0x22B768")]
		set
		{
		}
	}

	[Token(Token = "0x1700006A")]
	public MeshFilter MoonMeshFilter
	{
		[Token(Token = "0x6000262")]
		[Address(RVA = "0x451598", Offset = "0x451598", VA = "0x451598")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B778", Offset = "0x22B778")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000263")]
		[Address(RVA = "0x4515A0", Offset = "0x4515A0", VA = "0x4515A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B788", Offset = "0x22B788")]
		set
		{
		}
	}

	[Token(Token = "0x1700006B")]
	public MeshFilter AtmosphereMeshFilter
	{
		[Token(Token = "0x6000264")]
		[Address(RVA = "0x4515A8", Offset = "0x4515A8", VA = "0x4515A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B798", Offset = "0x22B798")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000265")]
		[Address(RVA = "0x4515B0", Offset = "0x4515B0", VA = "0x4515B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B7A8", Offset = "0x22B7A8")]
		set
		{
		}
	}

	[Token(Token = "0x1700006C")]
	public MeshFilter ClearMeshFilter
	{
		[Token(Token = "0x6000266")]
		[Address(RVA = "0x4515B8", Offset = "0x4515B8", VA = "0x4515B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B7B8", Offset = "0x22B7B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000267")]
		[Address(RVA = "0x4515C0", Offset = "0x4515C0", VA = "0x4515C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B7C8", Offset = "0x22B7C8")]
		set
		{
		}
	}

	[Token(Token = "0x1700006D")]
	public MeshFilter CloudMeshFilter
	{
		[Token(Token = "0x6000268")]
		[Address(RVA = "0x4515C8", Offset = "0x4515C8", VA = "0x4515C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B7D8", Offset = "0x22B7D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000269")]
		[Address(RVA = "0x4515D0", Offset = "0x4515D0", VA = "0x4515D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B7E8", Offset = "0x22B7E8")]
		set
		{
		}
	}

	[Token(Token = "0x1700006E")]
	public MeshFilter[] BillboardMeshFilters
	{
		[Token(Token = "0x600026A")]
		[Address(RVA = "0x4515D8", Offset = "0x4515D8", VA = "0x4515D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B7F8", Offset = "0x22B7F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600026B")]
		[Address(RVA = "0x4515E0", Offset = "0x4515E0", VA = "0x4515E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B808", Offset = "0x22B808")]
		set
		{
		}
	}

	[Token(Token = "0x1700006F")]
	public Material SpaceMaterial
	{
		[Token(Token = "0x600026C")]
		[Address(RVA = "0x4515E8", Offset = "0x4515E8", VA = "0x4515E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B818", Offset = "0x22B818")]
		get
		{
			return null;
		}
		[Token(Token = "0x600026D")]
		[Address(RVA = "0x4515F0", Offset = "0x4515F0", VA = "0x4515F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B828", Offset = "0x22B828")]
		set
		{
		}
	}

	[Token(Token = "0x17000070")]
	public Material StarMaterial
	{
		[Token(Token = "0x600026E")]
		[Address(RVA = "0x4515F8", Offset = "0x4515F8", VA = "0x4515F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B838", Offset = "0x22B838")]
		get
		{
			return null;
		}
		[Token(Token = "0x600026F")]
		[Address(RVA = "0x451600", Offset = "0x451600", VA = "0x451600")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B848", Offset = "0x22B848")]
		set
		{
		}
	}

	[Token(Token = "0x17000071")]
	public Material SunMaterial
	{
		[Token(Token = "0x6000270")]
		[Address(RVA = "0x451608", Offset = "0x451608", VA = "0x451608")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B858", Offset = "0x22B858")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000271")]
		[Address(RVA = "0x451610", Offset = "0x451610", VA = "0x451610")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B868", Offset = "0x22B868")]
		set
		{
		}
	}

	[Token(Token = "0x17000072")]
	public Material MoonMaterial
	{
		[Token(Token = "0x6000272")]
		[Address(RVA = "0x451618", Offset = "0x451618", VA = "0x451618")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B878", Offset = "0x22B878")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000273")]
		[Address(RVA = "0x451620", Offset = "0x451620", VA = "0x451620")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B888", Offset = "0x22B888")]
		set
		{
		}
	}

	[Token(Token = "0x17000073")]
	public Material AtmosphereMaterial
	{
		[Token(Token = "0x6000274")]
		[Address(RVA = "0x451628", Offset = "0x451628", VA = "0x451628")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B898", Offset = "0x22B898")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000275")]
		[Address(RVA = "0x451630", Offset = "0x451630", VA = "0x451630")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B8A8", Offset = "0x22B8A8")]
		set
		{
		}
	}

	[Token(Token = "0x17000074")]
	public Material ClearMaterial
	{
		[Token(Token = "0x6000276")]
		[Address(RVA = "0x451638", Offset = "0x451638", VA = "0x451638")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B8B8", Offset = "0x22B8B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000277")]
		[Address(RVA = "0x451640", Offset = "0x451640", VA = "0x451640")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B8C8", Offset = "0x22B8C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000075")]
	public Material CloudMaterial
	{
		[Token(Token = "0x6000278")]
		[Address(RVA = "0x451648", Offset = "0x451648", VA = "0x451648")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B8D8", Offset = "0x22B8D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000279")]
		[Address(RVA = "0x451650", Offset = "0x451650", VA = "0x451650")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B8E8", Offset = "0x22B8E8")]
		set
		{
		}
	}

	[Token(Token = "0x17000076")]
	public Material[] BillboardMaterials
	{
		[Token(Token = "0x600027A")]
		[Address(RVA = "0x451658", Offset = "0x451658", VA = "0x451658")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B8F8", Offset = "0x22B8F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600027B")]
		[Address(RVA = "0x451660", Offset = "0x451660", VA = "0x451660")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B908", Offset = "0x22B908")]
		set
		{
		}
	}

	[Token(Token = "0x17000077")]
	public Light LightSource
	{
		[Token(Token = "0x600027C")]
		[Address(RVA = "0x451668", Offset = "0x451668", VA = "0x451668")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B918", Offset = "0x22B918")]
		get
		{
			return null;
		}
		[Token(Token = "0x600027D")]
		[Address(RVA = "0x451670", Offset = "0x451670", VA = "0x451670")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B928", Offset = "0x22B928")]
		set
		{
		}
	}

	[Token(Token = "0x17000078")]
	public TOD_Sky Sky
	{
		[Token(Token = "0x600027E")]
		[Address(RVA = "0x451678", Offset = "0x451678", VA = "0x451678")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B938", Offset = "0x22B938")]
		get
		{
			return null;
		}
		[Token(Token = "0x600027F")]
		[Address(RVA = "0x451680", Offset = "0x451680", VA = "0x451680")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B948", Offset = "0x22B948")]
		set
		{
		}
	}

	[Token(Token = "0x17000079")]
	public TOD_Animation Animation
	{
		[Token(Token = "0x6000280")]
		[Address(RVA = "0x451688", Offset = "0x451688", VA = "0x451688")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B958", Offset = "0x22B958")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000281")]
		[Address(RVA = "0x451690", Offset = "0x451690", VA = "0x451690")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B968", Offset = "0x22B968")]
		set
		{
		}
	}

	[Token(Token = "0x1700007A")]
	public TOD_Time Time
	{
		[Token(Token = "0x6000282")]
		[Address(RVA = "0x451698", Offset = "0x451698", VA = "0x451698")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B978", Offset = "0x22B978")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000283")]
		[Address(RVA = "0x4516A0", Offset = "0x4516A0", VA = "0x4516A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B988", Offset = "0x22B988")]
		set
		{
		}
	}

	[Token(Token = "0x1700007B")]
	public TOD_Camera Camera
	{
		[Token(Token = "0x6000284")]
		[Address(RVA = "0x4516A8", Offset = "0x4516A8", VA = "0x4516A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B998", Offset = "0x22B998")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000285")]
		[Address(RVA = "0x4516B0", Offset = "0x4516B0", VA = "0x4516B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B9A8", Offset = "0x22B9A8")]
		set
		{
		}
	}

	[Token(Token = "0x1700007C")]
	public TOD_Rays Rays
	{
		[Token(Token = "0x6000286")]
		[Address(RVA = "0x4516B8", Offset = "0x4516B8", VA = "0x4516B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B9B8", Offset = "0x22B9B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000287")]
		[Address(RVA = "0x4516C0", Offset = "0x4516C0", VA = "0x4516C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B9C8", Offset = "0x22B9C8")]
		set
		{
		}
	}

	[Token(Token = "0x1700007D")]
	public TOD_Scattering Scattering
	{
		[Token(Token = "0x6000288")]
		[Address(RVA = "0x4516C8", Offset = "0x4516C8", VA = "0x4516C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B9D8", Offset = "0x22B9D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000289")]
		[Address(RVA = "0x4516D0", Offset = "0x4516D0", VA = "0x4516D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B9E8", Offset = "0x22B9E8")]
		set
		{
		}
	}

	[Token(Token = "0x1700007E")]
	public TOD_Shadows Shadows
	{
		[Token(Token = "0x600028A")]
		[Address(RVA = "0x4516D8", Offset = "0x4516D8", VA = "0x4516D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B9F8", Offset = "0x22B9F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600028B")]
		[Address(RVA = "0x4516E0", Offset = "0x4516E0", VA = "0x4516E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BA08", Offset = "0x22BA08")]
		set
		{
		}
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x4516E8", Offset = "0x4516E8", VA = "0x4516E8")]
	public void Initialize()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x451FF0", Offset = "0x451FF0", VA = "0x451FF0")]
	public TOD_Components()
	{
	}
}
[Token(Token = "0x2000045")]
public enum TOD_MoonPositionType
{
	[Token(Token = "0x40002F1")]
	OppositeToSun,
	[Token(Token = "0x40002F2")]
	Realistic
}
[Token(Token = "0x2000046")]
public enum TOD_StarsPositionType
{
	[Token(Token = "0x40002F4")]
	Static,
	[Token(Token = "0x40002F5")]
	Rotating
}
[Token(Token = "0x2000047")]
public enum TOD_FogType
{
	[Token(Token = "0x40002F7")]
	None,
	[Token(Token = "0x40002F8")]
	Atmosphere,
	[Token(Token = "0x40002F9")]
	Directional,
	[Token(Token = "0x40002FA")]
	Gradient
}
[Token(Token = "0x2000048")]
public enum TOD_AmbientType
{
	[Token(Token = "0x40002FC")]
	None,
	[Token(Token = "0x40002FD")]
	Color,
	[Token(Token = "0x40002FE")]
	Gradient,
	[Token(Token = "0x40002FF")]
	Spherical
}
[Token(Token = "0x2000049")]
public enum TOD_ReflectionType
{
	[Token(Token = "0x4000301")]
	None,
	[Token(Token = "0x4000302")]
	Cubemap
}
[Token(Token = "0x200004A")]
public enum TOD_ColorSpaceType
{
	[Token(Token = "0x4000304")]
	Auto,
	[Token(Token = "0x4000305")]
	Linear,
	[Token(Token = "0x4000306")]
	Gamma
}
[Token(Token = "0x200004B")]
public enum TOD_ColorRangeType
{
	[Token(Token = "0x4000308")]
	Auto,
	[Token(Token = "0x4000309")]
	HDR,
	[Token(Token = "0x400030A")]
	LDR
}
[Token(Token = "0x200004C")]
public enum TOD_ColorOutputType
{
	[Token(Token = "0x400030C")]
	Raw,
	[Token(Token = "0x400030D")]
	Dithered
}
[Token(Token = "0x200004D")]
public enum TOD_CloudQualityType
{
	[Token(Token = "0x400030F")]
	Low,
	[Token(Token = "0x4000310")]
	Medium,
	[Token(Token = "0x4000311")]
	High
}
[Token(Token = "0x200004E")]
public enum TOD_MeshQualityType
{
	[Token(Token = "0x4000313")]
	Low,
	[Token(Token = "0x4000314")]
	Medium,
	[Token(Token = "0x4000315")]
	High
}
[Token(Token = "0x200004F")]
public enum TOD_StarQualityType
{
	[Token(Token = "0x4000317")]
	Low,
	[Token(Token = "0x4000318")]
	Medium,
	[Token(Token = "0x4000319")]
	High
}
[Token(Token = "0x2000050")]
public enum TOD_SkyQualityType
{
	[Token(Token = "0x400031B")]
	PerVertex,
	[Token(Token = "0x400031C")]
	PerPixel
}
[Token(Token = "0x2000051")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x223654", Offset = "0x223654")]
public abstract class TOD_ImageEffect : MonoBehaviour
{
	[Token(Token = "0x2000255")]
	public enum ResolutionType
	{
		[Token(Token = "0x400143C")]
		Low,
		[Token(Token = "0x400143D")]
		Normal,
		[Token(Token = "0x400143E")]
		High
	}

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TOD_Sky sky;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected Camera cam;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3[] frustumCornersArray;

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x4522DC", Offset = "0x4522DC", VA = "0x4522DC")]
	protected Material CreateMaterial(Shader shader)
	{
		return null;
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x452698", Offset = "0x452698", VA = "0x452698")]
	private TOD_Sky FindSky(bool fallback = false)
	{
		return null;
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x45283C", Offset = "0x45283C", VA = "0x45283C")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x452924", Offset = "0x452924", VA = "0x452924")]
	protected bool CheckSupport(bool needDepth = false, bool needHdr = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x452C88", Offset = "0x452C88", VA = "0x452C88")]
	protected void DrawBorder(RenderTexture dest, Material material)
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x453058", Offset = "0x453058", VA = "0x453058")]
	protected Matrix4x4 FrustumCorners()
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x4535C8", Offset = "0x4535C8", VA = "0x4535C8")]
	protected RenderTexture GetSkyMask(RenderTexture source, Material skyMaskMaterial, Material screenClearMaterial, ResolutionType resolution, Vector3 lightPos, int blurIterations, float blurRadius, float maxRadius)
	{
		return null;
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x453BE4", Offset = "0x453BE4", VA = "0x453BE4")]
	protected TOD_ImageEffect()
	{
	}
}
[Serializable]
[Token(Token = "0x2000052")]
public class TOD_Parameters
{
	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public TOD_CycleParameters Cycle;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TOD_WorldParameters World;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TOD_AtmosphereParameters Atmosphere;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public TOD_DayParameters Day;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TOD_NightParameters Night;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TOD_SunParameters Sun;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TOD_MoonParameters Moon;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public TOD_LightParameters Light;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TOD_StarParameters Stars;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public TOD_CloudParameters Clouds;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TOD_FogParameters Fog;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public TOD_AmbientParameters Ambient;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TOD_ReflectionParameters Reflection;

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x454A20", Offset = "0x454A20", VA = "0x454A20")]
	public TOD_Parameters()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x454A28", Offset = "0x454A28", VA = "0x454A28")]
	public TOD_Parameters(TOD_Sky sky)
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x454B7C", Offset = "0x454B7C", VA = "0x454B7C")]
	public void ToSky(TOD_Sky sky)
	{
	}
}
[Serializable]
[Token(Token = "0x2000053")]
public class TOD_CycleParameters
{
	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x227418", Offset = "0x227418")]
	public float Hour;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22744C", Offset = "0x22744C")]
	public int Day;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x227480", Offset = "0x227480")]
	public int Month;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2274B4", Offset = "0x2274B4")]
	[AttributeAttribute(Name = "TOD_RangeAttribute", RVA = "0x2274B4", Offset = "0x2274B4")]
	public int Year;

	[Token(Token = "0x1700007F")]
	public DateTime DateTime
	{
		[Token(Token = "0x600029A")]
		[Address(RVA = "0x451FF8", Offset = "0x451FF8", VA = "0x451FF8")]
		get
		{
			return default(DateTime);
		}
		[Token(Token = "0x600029B")]
		[Address(RVA = "0x452128", Offset = "0x452128", VA = "0x452128")]
		set
		{
		}
	}

	[Token(Token = "0x17000080")]
	public long Ticks
	{
		[Token(Token = "0x600029C")]
		[Address(RVA = "0x452208", Offset = "0x452208", VA = "0x452208")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600029D")]
		[Address(RVA = "0x452244", Offset = "0x452244", VA = "0x452244")]
		set
		{
		}
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x45228C", Offset = "0x45228C", VA = "0x45228C")]
	public TOD_CycleParameters()
	{
	}
}
[Serializable]
[Token(Token = "0x2000054")]
public class TOD_WorldParameters
{
	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x227508", Offset = "0x227508")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x227508", Offset = "0x227508")]
	public float Latitude;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x227560", Offset = "0x227560")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x227560", Offset = "0x227560")]
	public float Longitude;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2275B8", Offset = "0x2275B8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2275B8", Offset = "0x2275B8")]
	public float UTC;

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xE74F5C", Offset = "0xE74F5C", VA = "0xE74F5C")]
	public TOD_WorldParameters()
	{
	}
}
[Serializable]
[Token(Token = "0x2000055")]
public class TOD_AtmosphereParameters
{
	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x227610", Offset = "0x227610")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0x227610", Offset = "0x227610")]
	public float RayleighMultiplier;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22765C", Offset = "0x22765C")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0x22765C", Offset = "0x22765C")]
	public float MieMultiplier;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2276A8", Offset = "0x2276A8")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0x2276A8", Offset = "0x2276A8")]
	public float Brightness;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2276F4", Offset = "0x2276F4")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0x2276F4", Offset = "0x2276F4")]
	public float Contrast;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x227740", Offset = "0x227740")]
	[AttributeAttribute(Name = "TOD_RangeAttribute", RVA = "0x227740", Offset = "0x227740")]
	public float Directionality;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x227790", Offset = "0x227790")]
	[AttributeAttribute(Name = "TOD_RangeAttribute", RVA = "0x227790", Offset = "0x227790")]
	public float Fogginess;

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x44FD78", Offset = "0x44FD78", VA = "0x44FD78")]
	public TOD_AtmosphereParameters()
	{
	}
}
[Serializable]
[Token(Token = "0x2000056")]
public class TOD_DayParameters
{
	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2277E0", Offset = "0x2277E0")]
	public Gradient SunColor;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x227814", Offset = "0x227814")]
	public Gradient LightColor;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x227848", Offset = "0x227848")]
	public Gradient RayColor;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22787C", Offset = "0x22787C")]
	public Gradient SkyColor;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2278B0", Offset = "0x2278B0")]
	public Gradient CloudColor;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2278E4", Offset = "0x2278E4")]
	public Gradient FogColor;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x227918", Offset = "0x227918")]
	public Gradient AmbientColor;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22794C", Offset = "0x22794C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x22794C", Offset = "0x22794C")]
	public float LightIntensity;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22799C", Offset = "0x22799C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x22799C", Offset = "0x22799C")]
	public float ShadowStrength;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2279EC", Offset = "0x2279EC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2279EC", Offset = "0x2279EC")]
	public float AmbientMultiplier;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x227A3C", Offset = "0x227A3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x227A3C", Offset = "0x227A3C")]
	public float ReflectionMultiplier;

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x4522B8", Offset = "0x4522B8", VA = "0x4522B8")]
	public TOD_DayParameters()
	{
	}
}
[Serializable]
[Token(Token = "0x2000057")]
public class TOD_NightParameters
{
	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x227A8C", Offset = "0x227A8C")]
	public Gradient MoonColor;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x227AC0", Offset = "0x227AC0")]
	public Gradient LightColor;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x227AF4", Offset = "0x227AF4")]
	public Gradient RayColor;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x227B28", Offset = "0x227B28")]
	public Gradient SkyColor;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x227B5C", Offset = "0x227B5C")]
	public Gradient CloudColor;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x227B90", Offset = "0x227B90")]
	public Gradient FogColor;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x227BC4", Offset = "0x227BC4")]
	public Gradient AmbientColor;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x227BF8", Offset = "0x227BF8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x227BF8", Offset = "0x227BF8")]
	public float LightIntensity;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x227C48", Offset = "0x227C48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x227C48", Offset = "0x227C48")]
	public float ShadowStrength;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x227C98", Offset = "0x227C98")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x227C98", Offset = "0x227C98")]
	public float AmbientMultiplier;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x227CE8", Offset = "0x227CE8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x227CE8", Offset = "0x227CE8")]
	public float ReflectionMultiplier;

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x4549F8", Offset = "0x4549F8", VA = "0x4549F8")]
	public TOD_NightParameters()
	{
	}
}
[Serializable]
[Token(Token = "0x2000058")]
public class TOD_SunParameters
{
	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x227D38", Offset = "0x227D38")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0x227D38", Offset = "0x227D38")]
	public float MeshSize;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x227D84", Offset = "0x227D84")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0x227D84", Offset = "0x227D84")]
	public float MeshBrightness;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x227DD0", Offset = "0x227DD0")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0x227DD0", Offset = "0x227DD0")]
	public float MeshContrast;

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xE72A24", Offset = "0xE72A24", VA = "0xE72A24")]
	public TOD_SunParameters()
	{
	}
}
[Serializable]
[Token(Token = "0x2000059")]
public class TOD_MoonParameters
{
	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x227E1C", Offset = "0x227E1C")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0x227E1C", Offset = "0x227E1C")]
	public float MeshSize;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x227E68", Offset = "0x227E68")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0x227E68", Offset = "0x227E68")]
	public float MeshBrightness;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x227EB4", Offset = "0x227EB4")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0x227EB4", Offset = "0x227EB4")]
	public float MeshContrast;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x227F00", Offset = "0x227F00")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0x227F00", Offset = "0x227F00")]
	public float HaloSize;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x227F4C", Offset = "0x227F4C")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0x227F4C", Offset = "0x227F4C")]
	public float HaloBrightness;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x227F98", Offset = "0x227F98")]
	public TOD_MoonPositionType Position;

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x4549C0", Offset = "0x4549C0", VA = "0x4549C0")]
	public TOD_MoonParameters()
	{
	}
}
[Serializable]
[Token(Token = "0x200005A")]
public class TOD_StarParameters
{
	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x227FCC", Offset = "0x227FCC")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0x227FCC", Offset = "0x227FCC")]
	public float Size;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x228018", Offset = "0x228018")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0x228018", Offset = "0x228018")]
	public float Brightness;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x228064", Offset = "0x228064")]
	public TOD_StarsPositionType Position;

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xE72A08", Offset = "0xE72A08", VA = "0xE72A08")]
	public TOD_StarParameters()
	{
	}
}
[Serializable]
[Token(Token = "0x200005B")]
public class TOD_CloudParameters
{
	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x228098", Offset = "0x228098")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0x228098", Offset = "0x228098")]
	public float Size;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2280E4", Offset = "0x2280E4")]
	[AttributeAttribute(Name = "TOD_RangeAttribute", RVA = "0x2280E4", Offset = "0x2280E4")]
	public float Opacity;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x228134", Offset = "0x228134")]
	[AttributeAttribute(Name = "TOD_RangeAttribute", RVA = "0x228134", Offset = "0x228134")]
	public float Coverage;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x228184", Offset = "0x228184")]
	[AttributeAttribute(Name = "TOD_RangeAttribute", RVA = "0x228184", Offset = "0x228184")]
	public float Sharpness;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2281D4", Offset = "0x2281D4")]
	[AttributeAttribute(Name = "TOD_RangeAttribute", RVA = "0x2281D4", Offset = "0x2281D4")]
	public float Coloring;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x228224", Offset = "0x228224")]
	[AttributeAttribute(Name = "TOD_RangeAttribute", RVA = "0x228224", Offset = "0x228224")]
	public float Attenuation;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x228274", Offset = "0x228274")]
	[AttributeAttribute(Name = "TOD_RangeAttribute", RVA = "0x228274", Offset = "0x228274")]
	public float Saturation;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2282C4", Offset = "0x2282C4")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0x2282C4", Offset = "0x2282C4")]
	public float Scattering;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x228310", Offset = "0x228310")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0x228310", Offset = "0x228310")]
	public float Brightness;

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x4513F8", Offset = "0x4513F8", VA = "0x4513F8")]
	public TOD_CloudParameters()
	{
	}
}
[Serializable]
[Token(Token = "0x200005C")]
public class TOD_LightParameters
{
	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22835C", Offset = "0x22835C")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0x22835C", Offset = "0x22835C")]
	public float UpdateInterval;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2283A8", Offset = "0x2283A8")]
	[AttributeAttribute(Name = "TOD_RangeAttribute", RVA = "0x2283A8", Offset = "0x2283A8")]
	public float MinimumHeight;

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x4544F8", Offset = "0x4544F8", VA = "0x4544F8")]
	public TOD_LightParameters()
	{
	}
}
[Serializable]
[Token(Token = "0x200005D")]
public class TOD_FogParameters
{
	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2283FC", Offset = "0x2283FC")]
	public TOD_FogType Mode;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x228430", Offset = "0x228430")]
	[AttributeAttribute(Name = "TOD_RangeAttribute", RVA = "0x228430", Offset = "0x228430")]
	public float HeightBias;

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x4522CC", Offset = "0x4522CC", VA = "0x4522CC")]
	public TOD_FogParameters()
	{
	}
}
[Serializable]
[Token(Token = "0x200005E")]
public class TOD_AmbientParameters
{
	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x228480", Offset = "0x228480")]
	public TOD_AmbientType Mode;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2284B4", Offset = "0x2284B4")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0x2284B4", Offset = "0x2284B4")]
	public float Saturation;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x228500", Offset = "0x228500")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0x228500", Offset = "0x228500")]
	public float UpdateInterval;

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x44F8B8", Offset = "0x44F8B8", VA = "0x44F8B8")]
	public TOD_AmbientParameters()
	{
	}
}
[Serializable]
[Token(Token = "0x200005F")]
public class TOD_ReflectionParameters
{
	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22854C", Offset = "0x22854C")]
	public TOD_ReflectionType Mode;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x228580", Offset = "0x228580")]
	public ReflectionProbeClearFlags ClearFlags;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2285B4", Offset = "0x2285B4")]
	public LayerMask CullingMask;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2285E8", Offset = "0x2285E8")]
	public ReflectionProbeTimeSlicingMode TimeSlicing;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22861C", Offset = "0x22861C")]
	[AttributeAttribute(Name = "TOD_RangeAttribute", RVA = "0x22861C", Offset = "0x22861C")]
	public int Resolution;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x228670", Offset = "0x228670")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0x228670", Offset = "0x228670")]
	public float UpdateInterval;

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x455CCC", Offset = "0x455CCC", VA = "0x455CCC")]
	public TOD_ReflectionParameters()
	{
	}
}
[Token(Token = "0x2000060")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x2236D4", Offset = "0x2236D4")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x2236D4", Offset = "0x2236D4")]
public class TOD_Rays : TOD_ImageEffect
{
	[Token(Token = "0x2000256")]
	public enum BlendModeType
	{
		[Token(Token = "0x4001440")]
		Screen,
		[Token(Token = "0x4001441")]
		Add
	}

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Shader GodRayShader;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader ScreenClearShader;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Shader SkyMaskShader;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2286BC", Offset = "0x2286BC")]
	public bool UseDepthTexture;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2286F0", Offset = "0x2286F0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2286F0", Offset = "0x2286F0")]
	public BlendModeType BlendMode;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x228750", Offset = "0x228750")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0x228750", Offset = "0x228750")]
	public float Intensity;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x22879C", Offset = "0x22879C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22879C", Offset = "0x22879C")]
	public ResolutionType Resolution;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2287FC", Offset = "0x2287FC")]
	[AttributeAttribute(Name = "TOD_RangeAttribute", RVA = "0x2287FC", Offset = "0x2287FC")]
	public int BlurIterations;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x228850", Offset = "0x228850")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0x228850", Offset = "0x228850")]
	public float BlurRadius;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22889C", Offset = "0x22889C")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0x22889C", Offset = "0x22889C")]
	public float MaxRadius;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Material godRayMaterial;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material screenClearMaterial;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Material skyMaskMaterial;

	[Token(Token = "0x400037F")]
	private const int PASS_SCREEN = 0;

	[Token(Token = "0x4000380")]
	private const int PASS_ADD = 1;

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x455598", Offset = "0x455598", VA = "0x455598")]
	protected void OnEnable()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x455714", Offset = "0x455714", VA = "0x455714")]
	protected void OnDisable()
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x4558A0", Offset = "0x4558A0", VA = "0x4558A0")]
	protected void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x455C30", Offset = "0x455C30", VA = "0x455C30")]
	public TOD_Rays()
	{
	}
}
[Token(Token = "0x2000061")]
public class TOD_Resources : MonoBehaviour
{
	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Material Skybox;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Mesh MoonLOD0;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Mesh MoonLOD1;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh MoonLOD2;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Mesh SkyLOD0;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mesh SkyLOD1;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Mesh SkyLOD2;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Mesh CloudsLOD0;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Mesh CloudsLOD1;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Mesh CloudsLOD2;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Mesh StarsLOD0;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Mesh StarsLOD1;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Mesh StarsLOD2;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2288E8", Offset = "0x2288E8")]
	private int <ID_SunLightColor>k__BackingField;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2288F8", Offset = "0x2288F8")]
	private int <ID_MoonLightColor>k__BackingField;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228908", Offset = "0x228908")]
	private int <ID_SunSkyColor>k__BackingField;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228918", Offset = "0x228918")]
	private int <ID_MoonSkyColor>k__BackingField;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228928", Offset = "0x228928")]
	private int <ID_SunMeshColor>k__BackingField;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228938", Offset = "0x228938")]
	private int <ID_MoonMeshColor>k__BackingField;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228948", Offset = "0x228948")]
	private int <ID_SunCloudColor>k__BackingField;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228958", Offset = "0x228958")]
	private int <ID_MoonCloudColor>k__BackingField;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228968", Offset = "0x228968")]
	private int <ID_FogColor>k__BackingField;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228978", Offset = "0x228978")]
	private int <ID_GroundColor>k__BackingField;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228988", Offset = "0x228988")]
	private int <ID_AmbientColor>k__BackingField;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228998", Offset = "0x228998")]
	private int <ID_SunDirection>k__BackingField;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2289A8", Offset = "0x2289A8")]
	private int <ID_MoonDirection>k__BackingField;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2289B8", Offset = "0x2289B8")]
	private int <ID_LightDirection>k__BackingField;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2289C8", Offset = "0x2289C8")]
	private int <ID_LocalSunDirection>k__BackingField;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2289D8", Offset = "0x2289D8")]
	private int <ID_LocalMoonDirection>k__BackingField;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2289E8", Offset = "0x2289E8")]
	private int <ID_LocalLightDirection>k__BackingField;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2289F8", Offset = "0x2289F8")]
	private int <ID_Contrast>k__BackingField;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228A08", Offset = "0x228A08")]
	private int <ID_Brightness>k__BackingField;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228A18", Offset = "0x228A18")]
	private int <ID_Fogginess>k__BackingField;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228A28", Offset = "0x228A28")]
	private int <ID_Directionality>k__BackingField;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228A38", Offset = "0x228A38")]
	private int <ID_MoonHaloPower>k__BackingField;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228A48", Offset = "0x228A48")]
	private int <ID_MoonHaloColor>k__BackingField;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228A58", Offset = "0x228A58")]
	private int <ID_CloudSize>k__BackingField;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228A68", Offset = "0x228A68")]
	private int <ID_CloudOpacity>k__BackingField;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228A78", Offset = "0x228A78")]
	private int <ID_CloudCoverage>k__BackingField;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228A88", Offset = "0x228A88")]
	private int <ID_CloudSharpness>k__BackingField;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228A98", Offset = "0x228A98")]
	private int <ID_CloudDensity>k__BackingField;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228AA8", Offset = "0x228AA8")]
	private int <ID_CloudColoring>k__BackingField;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228AB8", Offset = "0x228AB8")]
	private int <ID_CloudAttenuation>k__BackingField;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228AC8", Offset = "0x228AC8")]
	private int <ID_CloudSaturation>k__BackingField;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228AD8", Offset = "0x228AD8")]
	private int <ID_CloudScattering>k__BackingField;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228AE8", Offset = "0x228AE8")]
	private int <ID_CloudBrightness>k__BackingField;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228AF8", Offset = "0x228AF8")]
	private int <ID_CloudMultiplier>k__BackingField;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228B08", Offset = "0x228B08")]
	private int <ID_CloudOffset>k__BackingField;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228B18", Offset = "0x228B18")]
	private int <ID_CloudWind>k__BackingField;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228B28", Offset = "0x228B28")]
	private int <ID_StarSize>k__BackingField;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228B38", Offset = "0x228B38")]
	private int <ID_StarBrightness>k__BackingField;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228B48", Offset = "0x228B48")]
	private int <ID_StarVisibility>k__BackingField;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228B58", Offset = "0x228B58")]
	private int <ID_SunMeshContrast>k__BackingField;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228B68", Offset = "0x228B68")]
	private int <ID_SunMeshBrightness>k__BackingField;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228B78", Offset = "0x228B78")]
	private int <ID_MoonMeshContrast>k__BackingField;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228B88", Offset = "0x228B88")]
	private int <ID_MoonMeshBrightness>k__BackingField;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228B98", Offset = "0x228B98")]
	private int <ID_kBetaMie>k__BackingField;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228BA8", Offset = "0x228BA8")]
	private int <ID_kSun>k__BackingField;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228BB8", Offset = "0x228BB8")]
	private int <ID_k4PI>k__BackingField;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228BC8", Offset = "0x228BC8")]
	private int <ID_kRadius>k__BackingField;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228BD8", Offset = "0x228BD8")]
	private int <ID_kScale>k__BackingField;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228BE8", Offset = "0x228BE8")]
	private int <ID_World2Sky>k__BackingField;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x228BF8", Offset = "0x228BF8")]
	private int <ID_Sky2World>k__BackingField;

	[Token(Token = "0x17000081")]
	public int ID_SunLightColor
	{
		[Token(Token = "0x60002AF")]
		[Address(RVA = "0x456078", Offset = "0x456078", VA = "0x456078")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BA18", Offset = "0x22BA18")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002B0")]
		[Address(RVA = "0x456080", Offset = "0x456080", VA = "0x456080")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BA28", Offset = "0x22BA28")]
		private set
		{
		}
	}

	[Token(Token = "0x17000082")]
	public int ID_MoonLightColor
	{
		[Token(Token = "0x60002B1")]
		[Address(RVA = "0x456088", Offset = "0x456088", VA = "0x456088")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BA38", Offset = "0x22BA38")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002B2")]
		[Address(RVA = "0x456090", Offset = "0x456090", VA = "0x456090")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BA48", Offset = "0x22BA48")]
		private set
		{
		}
	}

	[Token(Token = "0x17000083")]
	public int ID_SunSkyColor
	{
		[Token(Token = "0x60002B3")]
		[Address(RVA = "0x456098", Offset = "0x456098", VA = "0x456098")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BA58", Offset = "0x22BA58")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002B4")]
		[Address(RVA = "0x4560A0", Offset = "0x4560A0", VA = "0x4560A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BA68", Offset = "0x22BA68")]
		private set
		{
		}
	}

	[Token(Token = "0x17000084")]
	public int ID_MoonSkyColor
	{
		[Token(Token = "0x60002B5")]
		[Address(RVA = "0x4560A8", Offset = "0x4560A8", VA = "0x4560A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BA78", Offset = "0x22BA78")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002B6")]
		[Address(RVA = "0x4560B0", Offset = "0x4560B0", VA = "0x4560B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BA88", Offset = "0x22BA88")]
		private set
		{
		}
	}

	[Token(Token = "0x17000085")]
	public int ID_SunMeshColor
	{
		[Token(Token = "0x60002B7")]
		[Address(RVA = "0x4560B8", Offset = "0x4560B8", VA = "0x4560B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BA98", Offset = "0x22BA98")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002B8")]
		[Address(RVA = "0x4560C0", Offset = "0x4560C0", VA = "0x4560C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BAA8", Offset = "0x22BAA8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000086")]
	public int ID_MoonMeshColor
	{
		[Token(Token = "0x60002B9")]
		[Address(RVA = "0x4560C8", Offset = "0x4560C8", VA = "0x4560C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BAB8", Offset = "0x22BAB8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002BA")]
		[Address(RVA = "0x4560D0", Offset = "0x4560D0", VA = "0x4560D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BAC8", Offset = "0x22BAC8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000087")]
	public int ID_SunCloudColor
	{
		[Token(Token = "0x60002BB")]
		[Address(RVA = "0x4560D8", Offset = "0x4560D8", VA = "0x4560D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BAD8", Offset = "0x22BAD8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002BC")]
		[Address(RVA = "0x4560E0", Offset = "0x4560E0", VA = "0x4560E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BAE8", Offset = "0x22BAE8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000088")]
	public int ID_MoonCloudColor
	{
		[Token(Token = "0x60002BD")]
		[Address(RVA = "0x4560E8", Offset = "0x4560E8", VA = "0x4560E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BAF8", Offset = "0x22BAF8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002BE")]
		[Address(RVA = "0x4560F0", Offset = "0x4560F0", VA = "0x4560F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BB08", Offset = "0x22BB08")]
		private set
		{
		}
	}

	[Token(Token = "0x17000089")]
	public int ID_FogColor
	{
		[Token(Token = "0x60002BF")]
		[Address(RVA = "0x4560F8", Offset = "0x4560F8", VA = "0x4560F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BB18", Offset = "0x22BB18")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002C0")]
		[Address(RVA = "0x456100", Offset = "0x456100", VA = "0x456100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BB28", Offset = "0x22BB28")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008A")]
	public int ID_GroundColor
	{
		[Token(Token = "0x60002C1")]
		[Address(RVA = "0x456108", Offset = "0x456108", VA = "0x456108")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BB38", Offset = "0x22BB38")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002C2")]
		[Address(RVA = "0x456110", Offset = "0x456110", VA = "0x456110")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BB48", Offset = "0x22BB48")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008B")]
	public int ID_AmbientColor
	{
		[Token(Token = "0x60002C3")]
		[Address(RVA = "0x456118", Offset = "0x456118", VA = "0x456118")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BB58", Offset = "0x22BB58")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002C4")]
		[Address(RVA = "0x456120", Offset = "0x456120", VA = "0x456120")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BB68", Offset = "0x22BB68")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008C")]
	public int ID_SunDirection
	{
		[Token(Token = "0x60002C5")]
		[Address(RVA = "0x456128", Offset = "0x456128", VA = "0x456128")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BB78", Offset = "0x22BB78")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002C6")]
		[Address(RVA = "0x456130", Offset = "0x456130", VA = "0x456130")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BB88", Offset = "0x22BB88")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008D")]
	public int ID_MoonDirection
	{
		[Token(Token = "0x60002C7")]
		[Address(RVA = "0x456138", Offset = "0x456138", VA = "0x456138")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BB98", Offset = "0x22BB98")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002C8")]
		[Address(RVA = "0x456140", Offset = "0x456140", VA = "0x456140")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BBA8", Offset = "0x22BBA8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008E")]
	public int ID_LightDirection
	{
		[Token(Token = "0x60002C9")]
		[Address(RVA = "0x456148", Offset = "0x456148", VA = "0x456148")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BBB8", Offset = "0x22BBB8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002CA")]
		[Address(RVA = "0x456150", Offset = "0x456150", VA = "0x456150")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BBC8", Offset = "0x22BBC8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008F")]
	public int ID_LocalSunDirection
	{
		[Token(Token = "0x60002CB")]
		[Address(RVA = "0x456158", Offset = "0x456158", VA = "0x456158")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BBD8", Offset = "0x22BBD8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002CC")]
		[Address(RVA = "0x456160", Offset = "0x456160", VA = "0x456160")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BBE8", Offset = "0x22BBE8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000090")]
	public int ID_LocalMoonDirection
	{
		[Token(Token = "0x60002CD")]
		[Address(RVA = "0x456168", Offset = "0x456168", VA = "0x456168")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BBF8", Offset = "0x22BBF8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002CE")]
		[Address(RVA = "0x456170", Offset = "0x456170", VA = "0x456170")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BC08", Offset = "0x22BC08")]
		private set
		{
		}
	}

	[Token(Token = "0x17000091")]
	public int ID_LocalLightDirection
	{
		[Token(Token = "0x60002CF")]
		[Address(RVA = "0x456178", Offset = "0x456178", VA = "0x456178")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BC18", Offset = "0x22BC18")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002D0")]
		[Address(RVA = "0x456180", Offset = "0x456180", VA = "0x456180")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BC28", Offset = "0x22BC28")]
		private set
		{
		}
	}

	[Token(Token = "0x17000092")]
	public int ID_Contrast
	{
		[Token(Token = "0x60002D1")]
		[Address(RVA = "0x456188", Offset = "0x456188", VA = "0x456188")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BC38", Offset = "0x22BC38")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002D2")]
		[Address(RVA = "0x456190", Offset = "0x456190", VA = "0x456190")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BC48", Offset = "0x22BC48")]
		private set
		{
		}
	}

	[Token(Token = "0x17000093")]
	public int ID_Brightness
	{
		[Token(Token = "0x60002D3")]
		[Address(RVA = "0x456198", Offset = "0x456198", VA = "0x456198")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BC58", Offset = "0x22BC58")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002D4")]
		[Address(RVA = "0x4561A0", Offset = "0x4561A0", VA = "0x4561A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BC68", Offset = "0x22BC68")]
		private set
		{
		}
	}

	[Token(Token = "0x17000094")]
	public int ID_Fogginess
	{
		[Token(Token = "0x60002D5")]
		[Address(RVA = "0x4561A8", Offset = "0x4561A8", VA = "0x4561A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BC78", Offset = "0x22BC78")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002D6")]
		[Address(RVA = "0x4561B0", Offset = "0x4561B0", VA = "0x4561B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BC88", Offset = "0x22BC88")]
		private set
		{
		}
	}

	[Token(Token = "0x17000095")]
	public int ID_Directionality
	{
		[Token(Token = "0x60002D7")]
		[Address(RVA = "0x4561B8", Offset = "0x4561B8", VA = "0x4561B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BC98", Offset = "0x22BC98")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002D8")]
		[Address(RVA = "0x4561C0", Offset = "0x4561C0", VA = "0x4561C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BCA8", Offset = "0x22BCA8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000096")]
	public int ID_MoonHaloPower
	{
		[Token(Token = "0x60002D9")]
		[Address(RVA = "0x4561C8", Offset = "0x4561C8", VA = "0x4561C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BCB8", Offset = "0x22BCB8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002DA")]
		[Address(RVA = "0x4561D0", Offset = "0x4561D0", VA = "0x4561D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BCC8", Offset = "0x22BCC8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000097")]
	public int ID_MoonHaloColor
	{
		[Token(Token = "0x60002DB")]
		[Address(RVA = "0x4561D8", Offset = "0x4561D8", VA = "0x4561D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BCD8", Offset = "0x22BCD8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002DC")]
		[Address(RVA = "0x4561E0", Offset = "0x4561E0", VA = "0x4561E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BCE8", Offset = "0x22BCE8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000098")]
	public int ID_CloudSize
	{
		[Token(Token = "0x60002DD")]
		[Address(RVA = "0x4561E8", Offset = "0x4561E8", VA = "0x4561E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BCF8", Offset = "0x22BCF8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002DE")]
		[Address(RVA = "0x4561F0", Offset = "0x4561F0", VA = "0x4561F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BD08", Offset = "0x22BD08")]
		private set
		{
		}
	}

	[Token(Token = "0x17000099")]
	public int ID_CloudOpacity
	{
		[Token(Token = "0x60002DF")]
		[Address(RVA = "0x4561F8", Offset = "0x4561F8", VA = "0x4561F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BD18", Offset = "0x22BD18")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002E0")]
		[Address(RVA = "0x456200", Offset = "0x456200", VA = "0x456200")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BD28", Offset = "0x22BD28")]
		private set
		{
		}
	}

	[Token(Token = "0x1700009A")]
	public int ID_CloudCoverage
	{
		[Token(Token = "0x60002E1")]
		[Address(RVA = "0x456208", Offset = "0x456208", VA = "0x456208")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BD38", Offset = "0x22BD38")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002E2")]
		[Address(RVA = "0x456210", Offset = "0x456210", VA = "0x456210")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BD48", Offset = "0x22BD48")]
		private set
		{
		}
	}

	[Token(Token = "0x1700009B")]
	public int ID_CloudSharpness
	{
		[Token(Token = "0x60002E3")]
		[Address(RVA = "0x456218", Offset = "0x456218", VA = "0x456218")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BD58", Offset = "0x22BD58")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002E4")]
		[Address(RVA = "0x456220", Offset = "0x456220", VA = "0x456220")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BD68", Offset = "0x22BD68")]
		private set
		{
		}
	}

	[Token(Token = "0x1700009C")]
	public int ID_CloudDensity
	{
		[Token(Token = "0x60002E5")]
		[Address(RVA = "0x456228", Offset = "0x456228", VA = "0x456228")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BD78", Offset = "0x22BD78")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002E6")]
		[Address(RVA = "0x456230", Offset = "0x456230", VA = "0x456230")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BD88", Offset = "0x22BD88")]
		private set
		{
		}
	}

	[Token(Token = "0x1700009D")]
	public int ID_CloudColoring
	{
		[Token(Token = "0x60002E7")]
		[Address(RVA = "0x456238", Offset = "0x456238", VA = "0x456238")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BD98", Offset = "0x22BD98")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002E8")]
		[Address(RVA = "0x456240", Offset = "0x456240", VA = "0x456240")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BDA8", Offset = "0x22BDA8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700009E")]
	public int ID_CloudAttenuation
	{
		[Token(Token = "0x60002E9")]
		[Address(RVA = "0x456248", Offset = "0x456248", VA = "0x456248")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BDB8", Offset = "0x22BDB8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002EA")]
		[Address(RVA = "0x456250", Offset = "0x456250", VA = "0x456250")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BDC8", Offset = "0x22BDC8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700009F")]
	public int ID_CloudSaturation
	{
		[Token(Token = "0x60002EB")]
		[Address(RVA = "0x456258", Offset = "0x456258", VA = "0x456258")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BDD8", Offset = "0x22BDD8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002EC")]
		[Address(RVA = "0x456260", Offset = "0x456260", VA = "0x456260")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BDE8", Offset = "0x22BDE8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A0")]
	public int ID_CloudScattering
	{
		[Token(Token = "0x60002ED")]
		[Address(RVA = "0x456268", Offset = "0x456268", VA = "0x456268")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BDF8", Offset = "0x22BDF8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002EE")]
		[Address(RVA = "0x456270", Offset = "0x456270", VA = "0x456270")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BE08", Offset = "0x22BE08")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A1")]
	public int ID_CloudBrightness
	{
		[Token(Token = "0x60002EF")]
		[Address(RVA = "0x456278", Offset = "0x456278", VA = "0x456278")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BE18", Offset = "0x22BE18")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002F0")]
		[Address(RVA = "0x456280", Offset = "0x456280", VA = "0x456280")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BE28", Offset = "0x22BE28")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A2")]
	public int ID_CloudMultiplier
	{
		[Token(Token = "0x60002F1")]
		[Address(RVA = "0x456288", Offset = "0x456288", VA = "0x456288")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BE38", Offset = "0x22BE38")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002F2")]
		[Address(RVA = "0x456290", Offset = "0x456290", VA = "0x456290")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BE48", Offset = "0x22BE48")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A3")]
	public int ID_CloudOffset
	{
		[Token(Token = "0x60002F3")]
		[Address(RVA = "0x456298", Offset = "0x456298", VA = "0x456298")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BE58", Offset = "0x22BE58")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002F4")]
		[Address(RVA = "0x4562A0", Offset = "0x4562A0", VA = "0x4562A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BE68", Offset = "0x22BE68")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A4")]
	public int ID_CloudWind
	{
		[Token(Token = "0x60002F5")]
		[Address(RVA = "0x4562A8", Offset = "0x4562A8", VA = "0x4562A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BE78", Offset = "0x22BE78")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002F6")]
		[Address(RVA = "0x4562B0", Offset = "0x4562B0", VA = "0x4562B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BE88", Offset = "0x22BE88")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A5")]
	public int ID_StarSize
	{
		[Token(Token = "0x60002F7")]
		[Address(RVA = "0x4562B8", Offset = "0x4562B8", VA = "0x4562B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BE98", Offset = "0x22BE98")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002F8")]
		[Address(RVA = "0x4562C0", Offset = "0x4562C0", VA = "0x4562C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BEA8", Offset = "0x22BEA8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A6")]
	public int ID_StarBrightness
	{
		[Token(Token = "0x60002F9")]
		[Address(RVA = "0x4562C8", Offset = "0x4562C8", VA = "0x4562C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BEB8", Offset = "0x22BEB8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002FA")]
		[Address(RVA = "0x4562D0", Offset = "0x4562D0", VA = "0x4562D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BEC8", Offset = "0x22BEC8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A7")]
	public int ID_StarVisibility
	{
		[Token(Token = "0x60002FB")]
		[Address(RVA = "0x4562D8", Offset = "0x4562D8", VA = "0x4562D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BED8", Offset = "0x22BED8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002FC")]
		[Address(RVA = "0x4562E0", Offset = "0x4562E0", VA = "0x4562E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BEE8", Offset = "0x22BEE8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A8")]
	public int ID_SunMeshContrast
	{
		[Token(Token = "0x60002FD")]
		[Address(RVA = "0x4562E8", Offset = "0x4562E8", VA = "0x4562E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BEF8", Offset = "0x22BEF8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002FE")]
		[Address(RVA = "0x4562F0", Offset = "0x4562F0", VA = "0x4562F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BF08", Offset = "0x22BF08")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A9")]
	public int ID_SunMeshBrightness
	{
		[Token(Token = "0x60002FF")]
		[Address(RVA = "0x4562F8", Offset = "0x4562F8", VA = "0x4562F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BF18", Offset = "0x22BF18")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000300")]
		[Address(RVA = "0x456300", Offset = "0x456300", VA = "0x456300")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BF28", Offset = "0x22BF28")]
		private set
		{
		}
	}

	[Token(Token = "0x170000AA")]
	public int ID_MoonMeshContrast
	{
		[Token(Token = "0x6000301")]
		[Address(RVA = "0x456308", Offset = "0x456308", VA = "0x456308")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BF38", Offset = "0x22BF38")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000302")]
		[Address(RVA = "0x456310", Offset = "0x456310", VA = "0x456310")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BF48", Offset = "0x22BF48")]
		private set
		{
		}
	}

	[Token(Token = "0x170000AB")]
	public int ID_MoonMeshBrightness
	{
		[Token(Token = "0x6000303")]
		[Address(RVA = "0x456318", Offset = "0x456318", VA = "0x456318")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BF58", Offset = "0x22BF58")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000304")]
		[Address(RVA = "0x456320", Offset = "0x456320", VA = "0x456320")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BF68", Offset = "0x22BF68")]
		private set
		{
		}
	}

	[Token(Token = "0x170000AC")]
	public int ID_kBetaMie
	{
		[Token(Token = "0x6000305")]
		[Address(RVA = "0x456328", Offset = "0x456328", VA = "0x456328")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BF78", Offset = "0x22BF78")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000306")]
		[Address(RVA = "0x456330", Offset = "0x456330", VA = "0x456330")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BF88", Offset = "0x22BF88")]
		private set
		{
		}
	}

	[Token(Token = "0x170000AD")]
	public int ID_kSun
	{
		[Token(Token = "0x6000307")]
		[Address(RVA = "0x456338", Offset = "0x456338", VA = "0x456338")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BF98", Offset = "0x22BF98")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000308")]
		[Address(RVA = "0x456340", Offset = "0x456340", VA = "0x456340")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BFA8", Offset = "0x22BFA8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000AE")]
	public int ID_k4PI
	{
		[Token(Token = "0x6000309")]
		[Address(RVA = "0x456348", Offset = "0x456348", VA = "0x456348")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BFB8", Offset = "0x22BFB8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600030A")]
		[Address(RVA = "0x456350", Offset = "0x456350", VA = "0x456350")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BFC8", Offset = "0x22BFC8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000AF")]
	public int ID_kRadius
	{
		[Token(Token = "0x600030B")]
		[Address(RVA = "0x456358", Offset = "0x456358", VA = "0x456358")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BFD8", Offset = "0x22BFD8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600030C")]
		[Address(RVA = "0x456360", Offset = "0x456360", VA = "0x456360")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BFE8", Offset = "0x22BFE8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B0")]
	public int ID_kScale
	{
		[Token(Token = "0x600030D")]
		[Address(RVA = "0x456368", Offset = "0x456368", VA = "0x456368")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22BFF8", Offset = "0x22BFF8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600030E")]
		[Address(RVA = "0x456370", Offset = "0x456370", VA = "0x456370")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C008", Offset = "0x22C008")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B1")]
	public int ID_World2Sky
	{
		[Token(Token = "0x600030F")]
		[Address(RVA = "0x456378", Offset = "0x456378", VA = "0x456378")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C018", Offset = "0x22C018")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000310")]
		[Address(RVA = "0x456380", Offset = "0x456380", VA = "0x456380")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C028", Offset = "0x22C028")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B2")]
	public int ID_Sky2World
	{
		[Token(Token = "0x6000311")]
		[Address(RVA = "0x456388", Offset = "0x456388", VA = "0x456388")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C038", Offset = "0x22C038")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000312")]
		[Address(RVA = "0x456390", Offset = "0x456390", VA = "0x456390")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C048", Offset = "0x22C048")]
		private set
		{
		}
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x456398", Offset = "0x456398", VA = "0x456398")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x456938", Offset = "0x456938", VA = "0x456938")]
	public TOD_Resources()
	{
	}
}
[Token(Token = "0x2000062")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x22377C", Offset = "0x22377C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x22377C", Offset = "0x22377C")]
public class TOD_Scattering : TOD_ImageEffect
{
	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Shader ScatteringShader;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader ScreenClearShader;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Shader SkyMaskShader;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D DitheringTexture;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x228C08", Offset = "0x228C08")]
	public bool SinglePass;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x228C3C", Offset = "0x228C3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x228C3C", Offset = "0x228C3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x228C3C", Offset = "0x228C3C")]
	public float GlobalDensity;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x228CB4", Offset = "0x228CB4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x228CB4", Offset = "0x228CB4")]
	public float HeightFalloff;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x228D04", Offset = "0x228D04")]
	public float StartDistance;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x228D38", Offset = "0x228D38")]
	public float ZeroLevel;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x228D6C", Offset = "0x228D6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x228D6C", Offset = "0x228D6C")]
	public ResolutionType Resolution;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x228DCC", Offset = "0x228DCC")]
	[AttributeAttribute(Name = "TOD_RangeAttribute", RVA = "0x228DCC", Offset = "0x228DCC")]
	public int BlurIterations;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x228E20", Offset = "0x228E20")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0x228E20", Offset = "0x228E20")]
	public float BlurRadius;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x228E6C", Offset = "0x228E6C")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0x228E6C", Offset = "0x228E6C")]
	public float MaxRadius;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material scatteringMaterial;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Material screenClearMaterial;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material skyMaskMaterial;

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x456940", Offset = "0x456940", VA = "0x456940")]
	protected void OnEnable()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x456ABC", Offset = "0x456ABC", VA = "0x456ABC")]
	protected void OnDisable()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x456C48", Offset = "0x456C48", VA = "0x456C48")]
	protected void OnPreCull()
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x456D3C", Offset = "0x456D3C", VA = "0x456D3C")]
	protected void OnPostRender()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x456E30", Offset = "0x456E30", VA = "0x456E30")]
	[ImageEffectOpaque]
	protected void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x4571B8", Offset = "0x4571B8", VA = "0x4571B8")]
	public TOD_Scattering()
	{
	}
}
[Token(Token = "0x2000063")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x223824", Offset = "0x223824")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x223824", Offset = "0x223824")]
public class TOD_Shadows : TOD_ImageEffect
{
	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Shader ShadowShader;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D CloudTexture;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x228EB8", Offset = "0x228EB8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x228EB8", Offset = "0x228EB8")]
	public float Cutoff;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x228F08", Offset = "0x228F08")]
	public float Fade;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x228F20", Offset = "0x228F20")]
	public float Intensity;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material shadowMaterial;

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x457264", Offset = "0x457264", VA = "0x457264")]
	protected void OnEnable()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x457320", Offset = "0x457320", VA = "0x457320")]
	protected void OnDisable()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x4573DC", Offset = "0x4573DC", VA = "0x4573DC")]
	[ImageEffectOpaque]
	protected void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x4576A4", Offset = "0x4576A4", VA = "0x4576A4")]
	public TOD_Shadows()
	{
	}
}
[Token(Token = "0x2000064")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x2238CC", Offset = "0x2238CC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x2238CC", Offset = "0x2238CC")]
public class TOD_Sky : MonoBehaviour
{
	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<TOD_Sky> instances;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private int probeRenderID;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x228F38", Offset = "0x228F38")]
	public TOD_ColorSpaceType ColorSpace;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x228F6C", Offset = "0x228F6C")]
	public TOD_ColorRangeType ColorRange;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x228FA0", Offset = "0x228FA0")]
	public TOD_ColorOutputType ColorOutput;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x228FD4", Offset = "0x228FD4")]
	public TOD_SkyQualityType SkyQuality;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x229008", Offset = "0x229008")]
	public TOD_CloudQualityType CloudQuality;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22903C", Offset = "0x22903C")]
	public TOD_MeshQualityType MeshQuality;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x229070", Offset = "0x229070")]
	public TOD_StarQualityType StarQuality;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public TOD_CycleParameters Cycle;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TOD_WorldParameters World;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public TOD_AtmosphereParameters Atmosphere;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TOD_DayParameters Day;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public TOD_NightParameters Night;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TOD_SunParameters Sun;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public TOD_MoonParameters Moon;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TOD_StarParameters Stars;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public TOD_CloudParameters Clouds;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TOD_LightParameters Light;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public TOD_FogParameters Fog;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TOD_AmbientParameters Ambient;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public TOD_ReflectionParameters Reflection;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2290A4", Offset = "0x2290A4")]
	private bool <Initialized>k__BackingField;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2290B4", Offset = "0x2290B4")]
	private TOD_Components <Components>k__BackingField;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2290C4", Offset = "0x2290C4")]
	private TOD_Resources <Resources>k__BackingField;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2290D4", Offset = "0x2290D4")]
	private bool <IsDay>k__BackingField;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2290E4", Offset = "0x2290E4")]
	private bool <IsNight>k__BackingField;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2290F4", Offset = "0x2290F4")]
	private float <LerpValue>k__BackingField;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x229104", Offset = "0x229104")]
	private float <SunZenith>k__BackingField;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x229114", Offset = "0x229114")]
	private float <SunAltitude>k__BackingField;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x229124", Offset = "0x229124")]
	private float <SunAzimuth>k__BackingField;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x229134", Offset = "0x229134")]
	private float <MoonZenith>k__BackingField;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x229144", Offset = "0x229144")]
	private float <MoonAltitude>k__BackingField;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x229154", Offset = "0x229154")]
	private float <MoonAzimuth>k__BackingField;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x229164", Offset = "0x229164")]
	private float <SunsetTime>k__BackingField;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x229174", Offset = "0x229174")]
	private float <SunriseTime>k__BackingField;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x229184", Offset = "0x229184")]
	private float <LocalSiderealTime>k__BackingField;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x229194", Offset = "0x229194")]
	private float <SunVisibility>k__BackingField;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2291A4", Offset = "0x2291A4")]
	private float <MoonVisibility>k__BackingField;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2291B4", Offset = "0x2291B4")]
	private Vector3 <SunDirection>k__BackingField;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2291C4", Offset = "0x2291C4")]
	private Vector3 <MoonDirection>k__BackingField;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2291D4", Offset = "0x2291D4")]
	private Vector3 <LightDirection>k__BackingField;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2291E4", Offset = "0x2291E4")]
	private Vector3 <LocalSunDirection>k__BackingField;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2291F4", Offset = "0x2291F4")]
	private Vector3 <LocalMoonDirection>k__BackingField;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x229204", Offset = "0x229204")]
	private Vector3 <LocalLightDirection>k__BackingField;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x229214", Offset = "0x229214")]
	private Color <SunLightColor>k__BackingField;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x229224", Offset = "0x229224")]
	private Color <MoonLightColor>k__BackingField;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x229234", Offset = "0x229234")]
	private Color <SunRayColor>k__BackingField;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x229244", Offset = "0x229244")]
	private Color <MoonRayColor>k__BackingField;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x229254", Offset = "0x229254")]
	private Color <SunSkyColor>k__BackingField;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x229264", Offset = "0x229264")]
	private Color <MoonSkyColor>k__BackingField;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x229274", Offset = "0x229274")]
	private Color <SunMeshColor>k__BackingField;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x229284", Offset = "0x229284")]
	private Color <MoonMeshColor>k__BackingField;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x229294", Offset = "0x229294")]
	private Color <SunCloudColor>k__BackingField;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2292A4", Offset = "0x2292A4")]
	private Color <MoonCloudColor>k__BackingField;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2292B4", Offset = "0x2292B4")]
	private Color <FogColor>k__BackingField;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2292C4", Offset = "0x2292C4")]
	private Color <GroundColor>k__BackingField;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2292D4", Offset = "0x2292D4")]
	private Color <AmbientColor>k__BackingField;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2292E4", Offset = "0x2292E4")]
	private Color <MoonHaloColor>k__BackingField;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2292F4", Offset = "0x2292F4")]
	private ReflectionProbe <Probe>k__BackingField;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private float timeSinceLightUpdate;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private float timeSinceAmbientUpdate;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private float timeSinceReflectionUpdate;

	[Token(Token = "0x4000415")]
	private const int TOD_SAMPLES = 2;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private Vector3 kBetaMie;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private Vector4 kSun;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	private Vector4 k4PI;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	private Vector4 kRadius;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	private Vector4 kScale;

	[Token(Token = "0x400041B")]
	private const float pi = (float)Math.PI;

	[Token(Token = "0x400041C")]
	private const float tau = (float)Math.PI * 2f;

	[Token(Token = "0x170000B3")]
	public static List<TOD_Sky> Instances
	{
		[Token(Token = "0x600031F")]
		[Address(RVA = "0x457728", Offset = "0x457728", VA = "0x457728")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B4")]
	public static TOD_Sky Instance
	{
		[Token(Token = "0x6000320")]
		[Address(RVA = "0x450060", Offset = "0x450060", VA = "0x450060")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B5")]
	public bool Initialized
	{
		[Token(Token = "0x6000321")]
		[Address(RVA = "0x4577A0", Offset = "0x4577A0", VA = "0x4577A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C078", Offset = "0x22C078")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000322")]
		[Address(RVA = "0x4577A8", Offset = "0x4577A8", VA = "0x4577A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C088", Offset = "0x22C088")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B6")]
	public bool Headless
	{
		[Token(Token = "0x6000323")]
		[Address(RVA = "0x4577B0", Offset = "0x4577B0", VA = "0x4577B0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B7")]
	public TOD_Components Components
	{
		[Token(Token = "0x6000324")]
		[Address(RVA = "0x4577CC", Offset = "0x4577CC", VA = "0x4577CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C098", Offset = "0x22C098")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000325")]
		[Address(RVA = "0x4577D4", Offset = "0x4577D4", VA = "0x4577D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C0A8", Offset = "0x22C0A8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B8")]
	public TOD_Resources Resources
	{
		[Token(Token = "0x6000326")]
		[Address(RVA = "0x4577DC", Offset = "0x4577DC", VA = "0x4577DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C0B8", Offset = "0x22C0B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000327")]
		[Address(RVA = "0x4577E4", Offset = "0x4577E4", VA = "0x4577E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C0C8", Offset = "0x22C0C8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B9")]
	public bool IsDay
	{
		[Token(Token = "0x6000328")]
		[Address(RVA = "0x4577EC", Offset = "0x4577EC", VA = "0x4577EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C0D8", Offset = "0x22C0D8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000329")]
		[Address(RVA = "0x4577F4", Offset = "0x4577F4", VA = "0x4577F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C0E8", Offset = "0x22C0E8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000BA")]
	public bool IsNight
	{
		[Token(Token = "0x600032A")]
		[Address(RVA = "0x4577FC", Offset = "0x4577FC", VA = "0x4577FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C0F8", Offset = "0x22C0F8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600032B")]
		[Address(RVA = "0x457804", Offset = "0x457804", VA = "0x457804")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C108", Offset = "0x22C108")]
		private set
		{
		}
	}

	[Token(Token = "0x170000BB")]
	public float Radius
	{
		[Token(Token = "0x600032C")]
		[Address(RVA = "0x45780C", Offset = "0x45780C", VA = "0x45780C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000BC")]
	public float Diameter
	{
		[Token(Token = "0x600032D")]
		[Address(RVA = "0x457854", Offset = "0x457854", VA = "0x457854")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000BD")]
	public float LerpValue
	{
		[Token(Token = "0x600032E")]
		[Address(RVA = "0x4578A4", Offset = "0x4578A4", VA = "0x4578A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C118", Offset = "0x22C118")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600032F")]
		[Address(RVA = "0x4578AC", Offset = "0x4578AC", VA = "0x4578AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C128", Offset = "0x22C128")]
		private set
		{
		}
	}

	[Token(Token = "0x170000BE")]
	public float SunZenith
	{
		[Token(Token = "0x6000330")]
		[Address(RVA = "0x4578B4", Offset = "0x4578B4", VA = "0x4578B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C138", Offset = "0x22C138")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000331")]
		[Address(RVA = "0x4578BC", Offset = "0x4578BC", VA = "0x4578BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C148", Offset = "0x22C148")]
		private set
		{
		}
	}

	[Token(Token = "0x170000BF")]
	public float SunAltitude
	{
		[Token(Token = "0x6000332")]
		[Address(RVA = "0x4578C4", Offset = "0x4578C4", VA = "0x4578C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C158", Offset = "0x22C158")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000333")]
		[Address(RVA = "0x4578CC", Offset = "0x4578CC", VA = "0x4578CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C168", Offset = "0x22C168")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C0")]
	public float SunAzimuth
	{
		[Token(Token = "0x6000334")]
		[Address(RVA = "0x4578D4", Offset = "0x4578D4", VA = "0x4578D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C178", Offset = "0x22C178")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000335")]
		[Address(RVA = "0x4578DC", Offset = "0x4578DC", VA = "0x4578DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C188", Offset = "0x22C188")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C1")]
	public float MoonZenith
	{
		[Token(Token = "0x6000336")]
		[Address(RVA = "0x4578E4", Offset = "0x4578E4", VA = "0x4578E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C198", Offset = "0x22C198")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000337")]
		[Address(RVA = "0x4578EC", Offset = "0x4578EC", VA = "0x4578EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C1A8", Offset = "0x22C1A8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C2")]
	public float MoonAltitude
	{
		[Token(Token = "0x6000338")]
		[Address(RVA = "0x4578F4", Offset = "0x4578F4", VA = "0x4578F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C1B8", Offset = "0x22C1B8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000339")]
		[Address(RVA = "0x4578FC", Offset = "0x4578FC", VA = "0x4578FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C1C8", Offset = "0x22C1C8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C3")]
	public float MoonAzimuth
	{
		[Token(Token = "0x600033A")]
		[Address(RVA = "0x457904", Offset = "0x457904", VA = "0x457904")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C1D8", Offset = "0x22C1D8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600033B")]
		[Address(RVA = "0x45790C", Offset = "0x45790C", VA = "0x45790C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C1E8", Offset = "0x22C1E8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C4")]
	public float SunsetTime
	{
		[Token(Token = "0x600033C")]
		[Address(RVA = "0x457914", Offset = "0x457914", VA = "0x457914")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C1F8", Offset = "0x22C1F8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600033D")]
		[Address(RVA = "0x45791C", Offset = "0x45791C", VA = "0x45791C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C208", Offset = "0x22C208")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C5")]
	public float SunriseTime
	{
		[Token(Token = "0x600033E")]
		[Address(RVA = "0x457924", Offset = "0x457924", VA = "0x457924")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C218", Offset = "0x22C218")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600033F")]
		[Address(RVA = "0x45792C", Offset = "0x45792C", VA = "0x45792C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C228", Offset = "0x22C228")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C6")]
	public float LocalSiderealTime
	{
		[Token(Token = "0x6000340")]
		[Address(RVA = "0x457934", Offset = "0x457934", VA = "0x457934")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C238", Offset = "0x22C238")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000341")]
		[Address(RVA = "0x45793C", Offset = "0x45793C", VA = "0x45793C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C248", Offset = "0x22C248")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C7")]
	public float LightZenith
	{
		[Token(Token = "0x6000342")]
		[Address(RVA = "0x457944", Offset = "0x457944", VA = "0x457944")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000C8")]
	public float LightIntensity
	{
		[Token(Token = "0x6000343")]
		[Address(RVA = "0x4579D4", Offset = "0x4579D4", VA = "0x4579D4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000C9")]
	public float SunVisibility
	{
		[Token(Token = "0x6000344")]
		[Address(RVA = "0x457A0C", Offset = "0x457A0C", VA = "0x457A0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C258", Offset = "0x22C258")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000345")]
		[Address(RVA = "0x457A14", Offset = "0x457A14", VA = "0x457A14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C268", Offset = "0x22C268")]
		private set
		{
		}
	}

	[Token(Token = "0x170000CA")]
	public float MoonVisibility
	{
		[Token(Token = "0x6000346")]
		[Address(RVA = "0x457A1C", Offset = "0x457A1C", VA = "0x457A1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C278", Offset = "0x22C278")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000347")]
		[Address(RVA = "0x457A24", Offset = "0x457A24", VA = "0x457A24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C288", Offset = "0x22C288")]
		private set
		{
		}
	}

	[Token(Token = "0x170000CB")]
	public Vector3 SunDirection
	{
		[Token(Token = "0x6000348")]
		[Address(RVA = "0x457A2C", Offset = "0x457A2C", VA = "0x457A2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C298", Offset = "0x22C298")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000349")]
		[Address(RVA = "0x457A40", Offset = "0x457A40", VA = "0x457A40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C2A8", Offset = "0x22C2A8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000CC")]
	public Vector3 MoonDirection
	{
		[Token(Token = "0x600034A")]
		[Address(RVA = "0x457A4C", Offset = "0x457A4C", VA = "0x457A4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C2B8", Offset = "0x22C2B8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600034B")]
		[Address(RVA = "0x457A60", Offset = "0x457A60", VA = "0x457A60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C2C8", Offset = "0x22C2C8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000CD")]
	public Vector3 LightDirection
	{
		[Token(Token = "0x600034C")]
		[Address(RVA = "0x457A6C", Offset = "0x457A6C", VA = "0x457A6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C2D8", Offset = "0x22C2D8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600034D")]
		[Address(RVA = "0x457A80", Offset = "0x457A80", VA = "0x457A80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C2E8", Offset = "0x22C2E8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000CE")]
	public Vector3 LocalSunDirection
	{
		[Token(Token = "0x600034E")]
		[Address(RVA = "0x457A8C", Offset = "0x457A8C", VA = "0x457A8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C2F8", Offset = "0x22C2F8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600034F")]
		[Address(RVA = "0x457AA0", Offset = "0x457AA0", VA = "0x457AA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C308", Offset = "0x22C308")]
		private set
		{
		}
	}

	[Token(Token = "0x170000CF")]
	public Vector3 LocalMoonDirection
	{
		[Token(Token = "0x6000350")]
		[Address(RVA = "0x457AAC", Offset = "0x457AAC", VA = "0x457AAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C318", Offset = "0x22C318")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000351")]
		[Address(RVA = "0x457AC0", Offset = "0x457AC0", VA = "0x457AC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C328", Offset = "0x22C328")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D0")]
	public Vector3 LocalLightDirection
	{
		[Token(Token = "0x6000352")]
		[Address(RVA = "0x457ACC", Offset = "0x457ACC", VA = "0x457ACC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C338", Offset = "0x22C338")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000353")]
		[Address(RVA = "0x457AE0", Offset = "0x457AE0", VA = "0x457AE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C348", Offset = "0x22C348")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D1")]
	public Color SunLightColor
	{
		[Token(Token = "0x6000354")]
		[Address(RVA = "0x457AEC", Offset = "0x457AEC", VA = "0x457AEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C358", Offset = "0x22C358")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000355")]
		[Address(RVA = "0x457AFC", Offset = "0x457AFC", VA = "0x457AFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C368", Offset = "0x22C368")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D2")]
	public Color MoonLightColor
	{
		[Token(Token = "0x6000356")]
		[Address(RVA = "0x457B0C", Offset = "0x457B0C", VA = "0x457B0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C378", Offset = "0x22C378")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000357")]
		[Address(RVA = "0x457B1C", Offset = "0x457B1C", VA = "0x457B1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C388", Offset = "0x22C388")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D3")]
	public Color LightColor
	{
		[Token(Token = "0x6000358")]
		[Address(RVA = "0x457B2C", Offset = "0x457B2C", VA = "0x457B2C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170000D4")]
	public Color SunRayColor
	{
		[Token(Token = "0x6000359")]
		[Address(RVA = "0x457B6C", Offset = "0x457B6C", VA = "0x457B6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C398", Offset = "0x22C398")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x600035A")]
		[Address(RVA = "0x457B7C", Offset = "0x457B7C", VA = "0x457B7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C3A8", Offset = "0x22C3A8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D5")]
	public Color MoonRayColor
	{
		[Token(Token = "0x600035B")]
		[Address(RVA = "0x457B8C", Offset = "0x457B8C", VA = "0x457B8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C3B8", Offset = "0x22C3B8")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x600035C")]
		[Address(RVA = "0x457B9C", Offset = "0x457B9C", VA = "0x457B9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C3C8", Offset = "0x22C3C8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D6")]
	public Color SunSkyColor
	{
		[Token(Token = "0x600035D")]
		[Address(RVA = "0x457BAC", Offset = "0x457BAC", VA = "0x457BAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C3D8", Offset = "0x22C3D8")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x600035E")]
		[Address(RVA = "0x457BBC", Offset = "0x457BBC", VA = "0x457BBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C3E8", Offset = "0x22C3E8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D7")]
	public Color MoonSkyColor
	{
		[Token(Token = "0x600035F")]
		[Address(RVA = "0x457BCC", Offset = "0x457BCC", VA = "0x457BCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C3F8", Offset = "0x22C3F8")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000360")]
		[Address(RVA = "0x457BDC", Offset = "0x457BDC", VA = "0x457BDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C408", Offset = "0x22C408")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D8")]
	public Color SunMeshColor
	{
		[Token(Token = "0x6000361")]
		[Address(RVA = "0x457BEC", Offset = "0x457BEC", VA = "0x457BEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C418", Offset = "0x22C418")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000362")]
		[Address(RVA = "0x457BFC", Offset = "0x457BFC", VA = "0x457BFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C428", Offset = "0x22C428")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D9")]
	public Color MoonMeshColor
	{
		[Token(Token = "0x6000363")]
		[Address(RVA = "0x457C0C", Offset = "0x457C0C", VA = "0x457C0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C438", Offset = "0x22C438")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000364")]
		[Address(RVA = "0x457C1C", Offset = "0x457C1C", VA = "0x457C1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C448", Offset = "0x22C448")]
		private set
		{
		}
	}

	[Token(Token = "0x170000DA")]
	public Color SunCloudColor
	{
		[Token(Token = "0x6000365")]
		[Address(RVA = "0x457C2C", Offset = "0x457C2C", VA = "0x457C2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C458", Offset = "0x22C458")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000366")]
		[Address(RVA = "0x457C3C", Offset = "0x457C3C", VA = "0x457C3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C468", Offset = "0x22C468")]
		private set
		{
		}
	}

	[Token(Token = "0x170000DB")]
	public Color MoonCloudColor
	{
		[Token(Token = "0x6000367")]
		[Address(RVA = "0x457C4C", Offset = "0x457C4C", VA = "0x457C4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C478", Offset = "0x22C478")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000368")]
		[Address(RVA = "0x457C5C", Offset = "0x457C5C", VA = "0x457C5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C488", Offset = "0x22C488")]
		private set
		{
		}
	}

	[Token(Token = "0x170000DC")]
	public Color FogColor
	{
		[Token(Token = "0x6000369")]
		[Address(RVA = "0x457C6C", Offset = "0x457C6C", VA = "0x457C6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C498", Offset = "0x22C498")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x600036A")]
		[Address(RVA = "0x457C7C", Offset = "0x457C7C", VA = "0x457C7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C4A8", Offset = "0x22C4A8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000DD")]
	public Color GroundColor
	{
		[Token(Token = "0x600036B")]
		[Address(RVA = "0x457C8C", Offset = "0x457C8C", VA = "0x457C8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C4B8", Offset = "0x22C4B8")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x600036C")]
		[Address(RVA = "0x457C9C", Offset = "0x457C9C", VA = "0x457C9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C4C8", Offset = "0x22C4C8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000DE")]
	public Color AmbientColor
	{
		[Token(Token = "0x600036D")]
		[Address(RVA = "0x457CAC", Offset = "0x457CAC", VA = "0x457CAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C4D8", Offset = "0x22C4D8")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x600036E")]
		[Address(RVA = "0x457CBC", Offset = "0x457CBC", VA = "0x457CBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C4E8", Offset = "0x22C4E8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000DF")]
	public Color MoonHaloColor
	{
		[Token(Token = "0x600036F")]
		[Address(RVA = "0x457CCC", Offset = "0x457CCC", VA = "0x457CCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C4F8", Offset = "0x22C4F8")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000370")]
		[Address(RVA = "0x457CDC", Offset = "0x457CDC", VA = "0x457CDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C508", Offset = "0x22C508")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E0")]
	public ReflectionProbe Probe
	{
		[Token(Token = "0x6000371")]
		[Address(RVA = "0x457CEC", Offset = "0x457CEC", VA = "0x457CEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C518", Offset = "0x22C518")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000372")]
		[Address(RVA = "0x457CF4", Offset = "0x457CF4", VA = "0x457CF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C528", Offset = "0x22C528")]
		private set
		{
		}
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x457CFC", Offset = "0x457CFC", VA = "0x457CFC")]
	public Vector3 OrbitalToUnity(float radius, float theta, float phi)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x457DD4", Offset = "0x457DD4", VA = "0x457DD4")]
	public Vector3 OrbitalToLocal(float theta, float phi)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x457E98", Offset = "0x457E98", VA = "0x457E98")]
	public Color SampleAtmosphere(Vector3 direction, bool directLight = true)
	{
		return default(Color);
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x458914", Offset = "0x458914", VA = "0x458914")]
	public SphericalHarmonicsL2 RenderToSphericalHarmonics()
	{
		return default(SphericalHarmonicsL2);
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x458A00", Offset = "0x458A00", VA = "0x458A00")]
	public SphericalHarmonicsL2 RenderToSphericalHarmonics(float intensity, float saturation)
	{
		return default(SphericalHarmonicsL2);
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x459294", Offset = "0x459294", VA = "0x459294")]
	public void RenderToCubemap([Optional] RenderTexture targetTexture)
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x4597B0", Offset = "0x4597B0", VA = "0x4597B0")]
	public Color SampleFogColor(bool directLight = true)
	{
		return default(Color);
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x459AA4", Offset = "0x459AA4", VA = "0x459AA4")]
	public Color SampleSkyColor()
	{
		return default(Color);
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x459B94", Offset = "0x459B94", VA = "0x459B94")]
	public Color SampleEquatorColor()
	{
		return default(Color);
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x459C14", Offset = "0x459C14", VA = "0x459C14")]
	public void UpdateFog()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x459CA4", Offset = "0x459CA4", VA = "0x459CA4")]
	public void UpdateAmbient()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x459F5C", Offset = "0x459F5C", VA = "0x459F5C")]
	public void UpdateReflection()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x454634", Offset = "0x454634", VA = "0x454634")]
	public void LoadParameters(string xml)
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x45A070", Offset = "0x45A070", VA = "0x45A070")]
	public string SaveParameters()
	{
		return null;
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x45A394", Offset = "0x45A394", VA = "0x45A394")]
	private void UpdateQualitySettings()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x45ABA4", Offset = "0x45ABA4", VA = "0x45ABA4")]
	private void UpdateRenderSettings()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x45AC98", Offset = "0x45AC98", VA = "0x45AC98")]
	private void UpdateShaderKeywords()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x45AF68", Offset = "0x45AF68", VA = "0x45AF68")]
	private void UpdateShaderProperties()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x45BD1C", Offset = "0x45BD1C", VA = "0x45BD1C")]
	private float ShaderScale(float inCos)
	{
		return default(float);
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x45BDE8", Offset = "0x45BDE8", VA = "0x45BDE8")]
	private float ShaderMiePhase(float eyeCos, float eyeCos2)
	{
		return default(float);
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x45BEA4", Offset = "0x45BEA4", VA = "0x45BEA4")]
	private float ShaderRayleighPhase(float eyeCos2)
	{
		return default(float);
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x45BEB8", Offset = "0x45BEB8", VA = "0x45BEB8")]
	private Color ShaderNightSkyColor(Vector3 dir)
	{
		return default(Color);
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x45BF7C", Offset = "0x45BF7C", VA = "0x45BF7C")]
	private Color ShaderMoonHaloColor(Vector3 dir)
	{
		return default(Color);
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x45869C", Offset = "0x45869C", VA = "0x45869C")]
	private Color TOD_HDR2LDR(Color color)
	{
		return default(Color);
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x45C0D4", Offset = "0x45C0D4", VA = "0x45C0D4")]
	private Color TOD_GAMMA2LINEAR(Color color)
	{
		return default(Color);
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x4587FC", Offset = "0x4587FC", VA = "0x4587FC")]
	private Color TOD_LINEAR2GAMMA(Color color)
	{
		return default(Color);
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x457F6C", Offset = "0x457F6C", VA = "0x457F6C")]
	private Color ShaderScatteringColor(Vector3 dir, bool directLight = true)
	{
		return default(Color);
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x45C124", Offset = "0x45C124", VA = "0x45C124")]
	private void Initialize()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x45C238", Offset = "0x45C238", VA = "0x45C238")]
	private void Cleanup()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x45C374", Offset = "0x45C374", VA = "0x45C374")]
	protected void OnEnable()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x45C3C8", Offset = "0x45C3C8", VA = "0x45C3C8")]
	protected void OnDisable()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x45C378", Offset = "0x45C378", VA = "0x45C378")]
	protected void LateUpdate()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x45E53C", Offset = "0x45E53C", VA = "0x45E53C")]
	protected void OnValidate()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x45C3D0", Offset = "0x45C3D0", VA = "0x45C3D0")]
	private void UpdateScattering()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x45C528", Offset = "0x45C528", VA = "0x45C528")]
	private void UpdateCelestials()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x45E590", Offset = "0x45E590", VA = "0x45E590")]
	public TOD_Sky()
	{
	}
}
[Token(Token = "0x2000065")]
public class TOD_Time : MonoBehaviour
{
	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x229304", Offset = "0x229304")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0x229304", Offset = "0x229304")]
	public float DayLengthInMinutes;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x229350", Offset = "0x229350")]
	public bool ProgressTime;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x229384", Offset = "0x229384")]
	public bool UseDeviceDate;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2293B8", Offset = "0x2293B8")]
	public bool UseDeviceTime;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2293EC", Offset = "0x2293EC")]
	public bool UseTimeCurve;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x229420", Offset = "0x229420")]
	public AnimationCurve TimeCurve;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TOD_Sky sky;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private AnimationCurve timeCurve;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AnimationCurve timeCurveInverse;

	[Token(Token = "0x14000001")]
	public event Action OnSecond
	{
		[Token(Token = "0x6000398")]
		[Address(RVA = "0xE72A40", Offset = "0xE72A40", VA = "0xE72A40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C538", Offset = "0x22C538")]
		add
		{
		}
		[Token(Token = "0x6000399")]
		[Address(RVA = "0xE72AF0", Offset = "0xE72AF0", VA = "0xE72AF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C548", Offset = "0x22C548")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action OnMinute
	{
		[Token(Token = "0x600039A")]
		[Address(RVA = "0xE72BA0", Offset = "0xE72BA0", VA = "0xE72BA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C558", Offset = "0x22C558")]
		add
		{
		}
		[Token(Token = "0x600039B")]
		[Address(RVA = "0xE72C50", Offset = "0xE72C50", VA = "0xE72C50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C568", Offset = "0x22C568")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action OnHour
	{
		[Token(Token = "0x600039C")]
		[Address(RVA = "0xE72D00", Offset = "0xE72D00", VA = "0xE72D00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C578", Offset = "0x22C578")]
		add
		{
		}
		[Token(Token = "0x600039D")]
		[Address(RVA = "0xE72DB0", Offset = "0xE72DB0", VA = "0xE72DB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C588", Offset = "0x22C588")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action OnDay
	{
		[Token(Token = "0x600039E")]
		[Address(RVA = "0xE72E60", Offset = "0xE72E60", VA = "0xE72E60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C598", Offset = "0x22C598")]
		add
		{
		}
		[Token(Token = "0x600039F")]
		[Address(RVA = "0xE72F10", Offset = "0xE72F10", VA = "0xE72F10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C5A8", Offset = "0x22C5A8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action OnMonth
	{
		[Token(Token = "0x60003A0")]
		[Address(RVA = "0xE72FC0", Offset = "0xE72FC0", VA = "0xE72FC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C5B8", Offset = "0x22C5B8")]
		add
		{
		}
		[Token(Token = "0x60003A1")]
		[Address(RVA = "0xE73070", Offset = "0xE73070", VA = "0xE73070")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C5C8", Offset = "0x22C5C8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action OnYear
	{
		[Token(Token = "0x60003A2")]
		[Address(RVA = "0xE73120", Offset = "0xE73120", VA = "0xE73120")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C5D8", Offset = "0x22C5D8")]
		add
		{
		}
		[Token(Token = "0x60003A3")]
		[Address(RVA = "0xE731D0", Offset = "0xE731D0", VA = "0xE731D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C5E8", Offset = "0x22C5E8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action OnSunrise
	{
		[Token(Token = "0x60003A4")]
		[Address(RVA = "0xE73280", Offset = "0xE73280", VA = "0xE73280")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C5F8", Offset = "0x22C5F8")]
		add
		{
		}
		[Token(Token = "0x60003A5")]
		[Address(RVA = "0xE73330", Offset = "0xE73330", VA = "0xE73330")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C608", Offset = "0x22C608")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action OnSunset
	{
		[Token(Token = "0x60003A6")]
		[Address(RVA = "0xE733E0", Offset = "0xE733E0", VA = "0xE733E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C618", Offset = "0x22C618")]
		add
		{
		}
		[Token(Token = "0x60003A7")]
		[Address(RVA = "0xE73490", Offset = "0xE73490", VA = "0xE73490")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C628", Offset = "0x22C628")]
		remove
		{
		}
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xE73540", Offset = "0xE73540", VA = "0xE73540")]
	public void RefreshTimeCurve()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xE738D0", Offset = "0xE738D0", VA = "0xE738D0")]
	public float ApplyTimeCurve(float deltaTime)
	{
		return default(float);
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xE73A3C", Offset = "0xE73A3C", VA = "0xE73A3C")]
	public void AddHours(float hours, bool adjust = true)
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xE73DCC", Offset = "0xE73DCC", VA = "0xE73DCC")]
	public void AddSeconds(float seconds, bool adjust = true)
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xE73DE8", Offset = "0xE73DE8", VA = "0xE73DE8")]
	private void CalculateLinearTangents(Keyframe[] keys)
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xE73634", Offset = "0xE73634", VA = "0xE73634")]
	private void ApproximateCurve(AnimationCurve source, out AnimationCurve approxCurve, out AnimationCurve approxInverse)
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xE7402C", Offset = "0xE7402C", VA = "0xE7402C")]
	protected void Awake()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xE74288", Offset = "0xE74288", VA = "0xE74288")]
	protected void FixedUpdate()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xE742FC", Offset = "0xE742FC", VA = "0xE742FC")]
	public TOD_Time()
	{
	}
}
[Token(Token = "0x2000066")]
public static class TOD_Util
{
	[Token(Token = "0x60003B1")]
	[Address(RVA = "0xE74358", Offset = "0xE74358", VA = "0xE74358")]
	public static Color MulRGB(Color color, float multiplier)
	{
		return default(Color);
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0xE743C8", Offset = "0xE743C8", VA = "0xE743C8")]
	public static Color MulRGBA(Color color, float multiplier)
	{
		return default(Color);
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0xE74444", Offset = "0xE74444", VA = "0xE74444")]
	public static Color PowRGB(Color color, float power)
	{
		return default(Color);
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0xE7454C", Offset = "0xE7454C", VA = "0xE7454C")]
	public static Color PowRGBA(Color color, float power)
	{
		return default(Color);
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0xE7466C", Offset = "0xE7466C", VA = "0xE7466C")]
	public static Color SatRGB(Color color, float saturation)
	{
		return default(Color);
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0xE746E8", Offset = "0xE746E8", VA = "0xE746E8")]
	public static Color SatRGBA(Color color, float saturation)
	{
		return default(Color);
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0xE74744", Offset = "0xE74744", VA = "0xE74744")]
	public static Color AdjustRGB(Color color, float intensity, float saturation)
	{
		return default(Color);
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xE74794", Offset = "0xE74794", VA = "0xE74794")]
	public static Color AdjustRGBA(Color color, float intensity, float saturation)
	{
		return default(Color);
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0xE747E4", Offset = "0xE747E4", VA = "0xE747E4")]
	public static Color ApplyAlpha(Color color)
	{
		return default(Color);
	}
}
[Token(Token = "0x2000067")]
public abstract class TOD_Audio : MonoBehaviour
{
	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private AudioSource audioComponent;

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x44FDB0", Offset = "0x44FDB0", VA = "0x44FDB0")]
	protected float GetVolume()
	{
		return default(float);
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x44FE5C", Offset = "0x44FE5C", VA = "0x44FE5C")]
	protected void SetVolume(float value)
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x44FF48", Offset = "0x44FF48", VA = "0x44FF48")]
	protected void Awake()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x44FFA8", Offset = "0x44FFA8", VA = "0x44FFA8")]
	protected TOD_Audio()
	{
	}
}
[Token(Token = "0x2000068")]
public class TOD_AudioAtDay : TOD_Audio
{
	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float fadeTime;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float lerpTime;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float maxVolume;

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x44FFB0", Offset = "0x44FFB0", VA = "0x44FFB0")]
	protected void Start()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x45016C", Offset = "0x45016C", VA = "0x45016C")]
	protected void Update()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x45028C", Offset = "0x45028C", VA = "0x45028C")]
	public TOD_AudioAtDay()
	{
	}
}
[Token(Token = "0x2000069")]
public class TOD_AudioAtNight : TOD_Audio
{
	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float fadeTime;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float lerpTime;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float maxVolume;

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x45029C", Offset = "0x45029C", VA = "0x45029C")]
	protected void Start()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x45034C", Offset = "0x45034C", VA = "0x45034C")]
	protected void Update()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x45046C", Offset = "0x45046C", VA = "0x45046C")]
	public TOD_AudioAtNight()
	{
	}
}
[Token(Token = "0x200006A")]
public class TOD_AudioAtTime : TOD_Audio
{
	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AnimationCurve Volume;

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x45047C", Offset = "0x45047C", VA = "0x45047C")]
	protected void Update()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x450548", Offset = "0x450548", VA = "0x450548")]
	public TOD_AudioAtTime()
	{
	}
}
[Token(Token = "0x200006B")]
public abstract class TOD_Light : MonoBehaviour
{
	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Light lightComponent;

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x453C5C", Offset = "0x453C5C", VA = "0x453C5C")]
	protected float GetIntensity()
	{
		return default(float);
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x453D08", Offset = "0x453D08", VA = "0x453D08")]
	protected void SetIntensity(float value)
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x453DF4", Offset = "0x453DF4", VA = "0x453DF4")]
	protected void Awake()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x453E54", Offset = "0x453E54", VA = "0x453E54")]
	protected TOD_Light()
	{
	}
}
[Token(Token = "0x200006C")]
public class TOD_LightAtDay : TOD_Light
{
	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float fadeTime;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float lerpTime;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float maxIntensity;

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x453E5C", Offset = "0x453E5C", VA = "0x453E5C")]
	protected void Start()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x453F0C", Offset = "0x453F0C", VA = "0x453F0C")]
	protected void Update()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x45402C", Offset = "0x45402C", VA = "0x45402C")]
	public TOD_LightAtDay()
	{
	}
}
[Token(Token = "0x200006D")]
public class TOD_LightAtNight : TOD_Light
{
	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float fadeTime;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float lerpTime;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float maxIntensity;

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x45403C", Offset = "0x45403C", VA = "0x45403C")]
	protected void Start()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x4540EC", Offset = "0x4540EC", VA = "0x4540EC")]
	protected void Update()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x45420C", Offset = "0x45420C", VA = "0x45420C")]
	public TOD_LightAtNight()
	{
	}
}
[Token(Token = "0x200006E")]
public class TOD_LightAtTime : TOD_Light
{
	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AnimationCurve Intensity;

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x45421C", Offset = "0x45421C", VA = "0x45421C")]
	protected void Update()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x4542E8", Offset = "0x4542E8", VA = "0x4542E8")]
	public TOD_LightAtTime()
	{
	}
}
[Token(Token = "0x200006F")]
public class TOD_LoadSkyFromFile : MonoBehaviour
{
	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TOD_Sky sky;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TextAsset textAsset;

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x454500", Offset = "0x454500", VA = "0x454500")]
	protected void Start()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x454974", Offset = "0x454974", VA = "0x454974")]
	public TOD_LoadSkyFromFile()
	{
	}
}
[Token(Token = "0x2000070")]
public abstract class TOD_Particle : MonoBehaviour
{
	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private ParticleSystem particleComponent;

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x454CC8", Offset = "0x454CC8", VA = "0x454CC8")]
	protected float GetEmission()
	{
		return default(float);
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x454DA0", Offset = "0x454DA0", VA = "0x454DA0")]
	protected void SetEmission(float value)
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x454E6C", Offset = "0x454E6C", VA = "0x454E6C")]
	protected void Awake()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x454ECC", Offset = "0x454ECC", VA = "0x454ECC")]
	protected TOD_Particle()
	{
	}
}
[Token(Token = "0x2000071")]
public class TOD_ParticleAtDay : TOD_Particle
{
	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float fadeTime;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float lerpTime;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float maxEmission;

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x454ED4", Offset = "0x454ED4", VA = "0x454ED4")]
	protected void Start()
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x454F84", Offset = "0x454F84", VA = "0x454F84")]
	protected void Update()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x4550A4", Offset = "0x4550A4", VA = "0x4550A4")]
	public TOD_ParticleAtDay()
	{
	}
}
[Token(Token = "0x2000072")]
public class TOD_ParticleAtNight : TOD_Particle
{
	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float fadeTime;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float lerpTime;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float maxEmission;

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x4550B4", Offset = "0x4550B4", VA = "0x4550B4")]
	protected void Start()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x455164", Offset = "0x455164", VA = "0x455164")]
	protected void Update()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x455284", Offset = "0x455284", VA = "0x455284")]
	public TOD_ParticleAtNight()
	{
	}
}
[Token(Token = "0x2000073")]
public class TOD_ParticleAtTime : TOD_Particle
{
	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AnimationCurve Emission;

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x455294", Offset = "0x455294", VA = "0x455294")]
	protected void Update()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x455360", Offset = "0x455360", VA = "0x455360")]
	public TOD_ParticleAtTime()
	{
	}
}
[Token(Token = "0x2000074")]
public abstract class TOD_Render : MonoBehaviour
{
	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Renderer rendererComponent;

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x455D10", Offset = "0x455D10", VA = "0x455D10")]
	protected void SetState(bool value)
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x455DC0", Offset = "0x455DC0", VA = "0x455DC0")]
	protected void Awake()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x455E20", Offset = "0x455E20", VA = "0x455E20")]
	protected TOD_Render()
	{
	}
}
[Token(Token = "0x2000075")]
public class TOD_RenderAtDay : TOD_Render
{
	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x455E28", Offset = "0x455E28", VA = "0x455E28")]
	protected void Start()
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x455EB8", Offset = "0x455EB8", VA = "0x455EB8")]
	protected void Update()
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x455F48", Offset = "0x455F48", VA = "0x455F48")]
	public TOD_RenderAtDay()
	{
	}
}
[Token(Token = "0x2000076")]
public class TOD_RenderAtNight : TOD_Render
{
	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x455F50", Offset = "0x455F50", VA = "0x455F50")]
	protected void Start()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x455FE0", Offset = "0x455FE0", VA = "0x455FE0")]
	protected void Update()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x456070", Offset = "0x456070", VA = "0x456070")]
	public TOD_RenderAtNight()
	{
	}
}
[Token(Token = "0x2000077")]
public class TOD_WeatherManager : MonoBehaviour
{
	[Token(Token = "0x2000257")]
	public enum RainType
	{
		[Token(Token = "0x4001443")]
		None,
		[Token(Token = "0x4001444")]
		Light,
		[Token(Token = "0x4001445")]
		Heavy
	}

	[Token(Token = "0x2000258")]
	public enum CloudType
	{
		[Token(Token = "0x4001447")]
		None,
		[Token(Token = "0x4001448")]
		Few,
		[Token(Token = "0x4001449")]
		Scattered,
		[Token(Token = "0x400144A")]
		Broken,
		[Token(Token = "0x400144B")]
		Overcast
	}

	[Token(Token = "0x2000259")]
	public enum AtmosphereType
	{
		[Token(Token = "0x400144D")]
		Clear,
		[Token(Token = "0x400144E")]
		Storm,
		[Token(Token = "0x400144F")]
		Dust,
		[Token(Token = "0x4001450")]
		Fog
	}

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public ParticleSystem RainParticleSystem;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float FadeTime;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public RainType Rain;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CloudType Clouds;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public AtmosphereType Atmosphere;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float cloudOpacityMax;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float cloudBrightnessMax;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float atmosphereBrightnessMax;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rainEmissionMax;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float cloudOpacity;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float cloudCoverage;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float cloudBrightness;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float atmosphereFog;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float atmosphereBrightness;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float rainEmission;

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xE7483C", Offset = "0xE7483C", VA = "0xE7483C")]
	private float GetRainEmission()
	{
		return default(float);
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xE74914", Offset = "0xE74914", VA = "0xE74914")]
	private void SetRainEmission(float value)
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xE749E0", Offset = "0xE749E0", VA = "0xE749E0")]
	protected void Start()
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xE74B04", Offset = "0xE74B04", VA = "0xE74B04")]
	protected void Update()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xE74F48", Offset = "0xE74F48", VA = "0xE74F48")]
	public TOD_WeatherManager()
	{
	}
}
[Token(Token = "0x2000078")]
public class DynamicBoneDemo1 : MonoBehaviour
{
	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject m_Player;

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x3F0734", Offset = "0x3F0734", VA = "0x3F0734")]
	private void Update()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x3F0938", Offset = "0x3F0938", VA = "0x3F0938")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x3F0D3C", Offset = "0x3F0D3C", VA = "0x3F0D3C")]
	public DynamicBoneDemo1()
	{
	}
}
[Token(Token = "0x2000079")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x223978", Offset = "0x223978")]
public class DynamicBone : MonoBehaviour
{
	[Token(Token = "0x200025A")]
	public enum UpdateMode
	{
		[Token(Token = "0x4001452")]
		Normal,
		[Token(Token = "0x4001453")]
		AnimatePhysics,
		[Token(Token = "0x4001454")]
		UnscaledTime
	}

	[Token(Token = "0x200025B")]
	public enum FreezeAxis
	{
		[Token(Token = "0x4001456")]
		None,
		[Token(Token = "0x4001457")]
		X,
		[Token(Token = "0x4001458")]
		Y,
		[Token(Token = "0x4001459")]
		Z
	}

	[Token(Token = "0x200025C")]
	private class Particle
	{
		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform m_Transform;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int m_ParentIndex;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m_Damping;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m_Elasticity;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_Stiffness;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_Inert;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_Radius;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_BoneLength;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 m_Position;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 m_PrevPosition;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 m_EndOffset;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 m_InitLocalPosition;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Quaternion m_InitLocalRotation;

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x3EED4C", Offset = "0x3EED4C", VA = "0x3EED4C")]
		public Particle()
		{
		}
	}

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform m_Root;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float m_UpdateRate;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public UpdateMode m_UpdateMode;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2294D4", Offset = "0x2294D4")]
	public float m_Damping;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public AnimationCurve m_DampingDistrib;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2294EC", Offset = "0x2294EC")]
	public float m_Elasticity;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public AnimationCurve m_ElasticityDistrib;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x229504", Offset = "0x229504")]
	public float m_Stiffness;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public AnimationCurve m_StiffnessDistrib;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x22951C", Offset = "0x22951C")]
	public float m_Inert;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public AnimationCurve m_InertDistrib;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float m_Radius;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public AnimationCurve m_RadiusDistrib;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float m_EndLength;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 m_EndOffset;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 m_Gravity;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Vector3 m_Force;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<DynamicBoneColliderBase> m_Colliders;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public List<Transform> m_Exclusions;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public FreezeAxis m_FreezeAxis;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool m_DistantDisable;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform m_ReferenceObject;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float m_DistanceToObject;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 m_LocalGravity;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 m_ObjectMove;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 m_ObjectPrevPosition;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float m_BoneTotalLength;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float m_ObjectScale;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float m_Time;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float m_Weight;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool m_DistantDisabled;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
	public bool disableOffscreen;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<Particle> m_Particles;

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x3EB344", Offset = "0x3EB344", VA = "0x3EB344")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x3EB564", Offset = "0x3EB564", VA = "0x3EB564")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x3EB5C8", Offset = "0x3EB5C8", VA = "0x3EB5C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x3EB600", Offset = "0x3EB600", VA = "0x3EB600")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x3EB59C", Offset = "0x3EB59C", VA = "0x3EB59C")]
	private void PreUpdate()
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x3EB65C", Offset = "0x3EB65C", VA = "0x3EB65C")]
	private void CheckDistance()
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x3EBFA8", Offset = "0x3EBFA8", VA = "0x3EBFA8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x3EBFAC", Offset = "0x3EBFAC", VA = "0x3EBFAC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x3EBFB0", Offset = "0x3EBFB0", VA = "0x3EBFB0")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x3EC0E0", Offset = "0x3EC0E0", VA = "0x3EC0E0")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x3EC320", Offset = "0x3EC320", VA = "0x3EC320")]
	public void SetWeight(float w)
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x3EC378", Offset = "0x3EC378", VA = "0x3EC378")]
	public float GetWeight()
	{
		return default(float);
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x3EB954", Offset = "0x3EB954", VA = "0x3EB954")]
	private void UpdateDynamicBones(float t)
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x3EB348", Offset = "0x3EB348", VA = "0x3EB348")]
	private void SetupParticles()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x3EDFC0", Offset = "0x3EDFC0", VA = "0x3EDFC0")]
	private void AppendParticles(Transform b, int parentIndex, float boneLength)
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x3EE8F4", Offset = "0x3EE8F4", VA = "0x3EE8F4")]
	public void UpdateParameters()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x3EBC00", Offset = "0x3EBC00", VA = "0x3EBC00")]
	private void InitTransforms()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x3EBD88", Offset = "0x3EBD88", VA = "0x3EBD88")]
	private void ResetParticlesPosition()
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x3EC380", Offset = "0x3EC380", VA = "0x3EC380")]
	private void UpdateParticles1()
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x3EC884", Offset = "0x3EC884", VA = "0x3EC884")]
	private void UpdateParticles2()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x3ED350", Offset = "0x3ED350", VA = "0x3ED350")]
	private void SkipUpdateParticles()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x3EEE94", Offset = "0x3EEE94", VA = "0x3EEE94")]
	private static Vector3 MirrorVector(Vector3 v, Vector3 axis)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x3EDC18", Offset = "0x3EDC18", VA = "0x3EDC18")]
	private void ApplyParticlesToTransforms()
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x3EEF8C", Offset = "0x3EEF8C", VA = "0x3EEF8C")]
	public DynamicBone()
	{
	}
}
[Token(Token = "0x200007A")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x2239AC", Offset = "0x2239AC")]
public class DynamicBoneCollider : DynamicBoneColliderBase
{
	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_Radius;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_Height;

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x3EF128", Offset = "0x3EF128", VA = "0x3EF128")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x3EF1D0", Offset = "0x3EF1D0", VA = "0x3EF1D0", Slot = "4")]
	public override void Collide(ref Vector3 particlePosition, float particleRadius)
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x3EF548", Offset = "0x3EF548", VA = "0x3EF548")]
	private static void OutsideSphere(ref Vector3 particlePosition, float particleRadius, Vector3 sphereCenter, float sphereRadius)
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x3EF734", Offset = "0x3EF734", VA = "0x3EF734")]
	private static void InsideSphere(ref Vector3 particlePosition, float particleRadius, Vector3 sphereCenter, float sphereRadius)
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x3EF918", Offset = "0x3EF918", VA = "0x3EF918")]
	private static void OutsideCapsule(ref Vector3 particlePosition, float particleRadius, Vector3 capsuleP0, Vector3 capsuleP1, float capsuleRadius)
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x3EFE7C", Offset = "0x3EFE7C", VA = "0x3EFE7C")]
	private static void InsideCapsule(ref Vector3 particlePosition, float particleRadius, Vector3 capsuleP0, Vector3 capsuleP1, float capsuleRadius)
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x3F03BC", Offset = "0x3F03BC", VA = "0x3F03BC")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x3F0680", Offset = "0x3F0680", VA = "0x3F0680")]
	public DynamicBoneCollider()
	{
	}
}
[Token(Token = "0x200007B")]
public class DynamicBoneColliderBase : MonoBehaviour
{
	[Token(Token = "0x200025D")]
	public enum Direction
	{
		[Token(Token = "0x4001468")]
		X,
		[Token(Token = "0x4001469")]
		Y,
		[Token(Token = "0x400146A")]
		Z
	}

	[Token(Token = "0x200025E")]
	public enum Bound
	{
		[Token(Token = "0x400146C")]
		Outside,
		[Token(Token = "0x400146D")]
		Inside
	}

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Direction m_Direction;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 m_Center;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Bound m_Bound;

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x3F0730", Offset = "0x3F0730", VA = "0x3F0730", Slot = "4")]
	public virtual void Collide(ref Vector3 particlePosition, float particleRadius)
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x3F068C", Offset = "0x3F068C", VA = "0x3F068C")]
	public DynamicBoneColliderBase()
	{
	}
}
[Token(Token = "0x200007C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x2239E0", Offset = "0x2239E0")]
public class DynamicBonePlaneCollider : DynamicBoneColliderBase
{
	[Token(Token = "0x6000413")]
	[Address(RVA = "0x3F0D44", Offset = "0x3F0D44", VA = "0x3F0D44")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x3F0D48", Offset = "0x3F0D48", VA = "0x3F0D48", Slot = "4")]
	public override void Collide(ref Vector3 particlePosition, float particleRadius)
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x3F0FE4", Offset = "0x3F0FE4", VA = "0x3F0FE4")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x3F123C", Offset = "0x3F123C", VA = "0x3F123C")]
	public DynamicBonePlaneCollider()
	{
	}
}
[Token(Token = "0x200007D")]
public class GlowColorAnimation : MonoBehaviour
{
	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Material glowMaterial;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color currentColor;

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x3F50C4", Offset = "0x3F50C4", VA = "0x3F50C4")]
	public void TickColor(Color _a, Color _b, float _lerpW)
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x3F51C8", Offset = "0x3F51C8", VA = "0x3F51C8")]
	public void SetColor(Color _color)
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x3F526C", Offset = "0x3F526C", VA = "0x3F526C")]
	public GlowColorAnimation()
	{
	}
}
[Token(Token = "0x200007E")]
public class SphereBounce : MonoBehaviour
{
	[Token(Token = "0x200025F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x224914", Offset = "0x224914")]
	private sealed class <applyForceAndTorque>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SphereBounce <>4__this;

		[Token(Token = "0x17000165")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C4E")]
			[Address(RVA = "0x4343E4", Offset = "0x4343E4", VA = "0x4343E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000166")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C50")]
			[Address(RVA = "0x434464", Offset = "0x434464", VA = "0x434464", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x4341F4", Offset = "0x4341F4", VA = "0x4341F4")]
		[DebuggerHidden]
		public <applyForceAndTorque>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x43421C", Offset = "0x43421C", VA = "0x43421C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x434220", Offset = "0x434220", VA = "0x434220", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x4343EC", Offset = "0x4343EC", VA = "0x4343EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float force;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float torque;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float interval;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody thisRigidbody;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Mesh thisMesh;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Color[] startColor;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float[] startTime;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float[] duration;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Color targetColor;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool needToLerp;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WaitForSeconds delay;

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x4338B0", Offset = "0x4338B0", VA = "0x4338B0")]
	public void Start()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x433BAC", Offset = "0x433BAC", VA = "0x433BAC")]
	public void Update()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x433E84", Offset = "0x433E84", VA = "0x433E84")]
	public void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x433BB0", Offset = "0x433BB0", VA = "0x433BB0")]
	private void lerpColors()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x433B2C", Offset = "0x433B2C", VA = "0x433B2C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x22C638", Offset = "0x22C638")]
	private IEnumerator applyForceAndTorque()
	{
		return null;
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x434214", Offset = "0x434214", VA = "0x434214")]
	public SphereBounce()
	{
	}
}
[Token(Token = "0x200007F")]
public class LuxWater_SetToGerstnerHeight : MonoBehaviour
{
	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Material WaterMaterial;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 Damping;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float TimeOffset;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool UpdateWaterMaterialPerFrame;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x229534", Offset = "0x229534")]
	public bool AddCircleAnim;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Radius;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Speed;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x229548", Offset = "0x229548")]
	public Transform[] ManagedWaterProjectors;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x22955C", Offset = "0x22955C")]
	public float MaxDisp;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Transform trans;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LuxWaterUtils.GersterWavesDescription Description;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool ObjectIsVisible;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 Offset;

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x55CF58", Offset = "0x55CF58", VA = "0x55CF58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x55CF80", Offset = "0x55CF80", VA = "0x55CF80")]
	private void OnBecameVisible()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x55CF8C", Offset = "0x55CF8C", VA = "0x55CF8C")]
	private void OnBecameInvisible()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x55CF98", Offset = "0x55CF98", VA = "0x55CF98")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x55D398", Offset = "0x55D398", VA = "0x55D398")]
	public LuxWater_SetToGerstnerHeight()
	{
	}
}
[Token(Token = "0x2000080")]
public class LuxWater_WaterVolumeListener : MonoBehaviour
{
	[Token(Token = "0x6000425")]
	[Address(RVA = "0x55D484", Offset = "0x55D484", VA = "0x55D484")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x55D538", Offset = "0x55D538", VA = "0x55D538")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x55D5EC", Offset = "0x55D5EC", VA = "0x55D5EC")]
	private void Enter()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x55D670", Offset = "0x55D670", VA = "0x55D670")]
	private void Exit()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x55D6F4", Offset = "0x55D6F4", VA = "0x55D6F4")]
	public LuxWater_WaterVolumeListener()
	{
	}
}
[Token(Token = "0x2000081")]
public static class LuxWaterUtils
{
	[Token(Token = "0x2000260")]
	public struct GersterWavesDescription
	{
		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 intensity;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector4 steepness;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector4 amp;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector4 freq;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector4 speed;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector4 dirAB;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector4 dirCD;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Vector4 secondaryWaveParams;
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x55C0F8", Offset = "0x55C0F8", VA = "0x55C0F8")]
	public static void GetGersterWavesDescription(ref GersterWavesDescription Description, Material WaterMaterial)
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x55C370", Offset = "0x55C370", VA = "0x55C370")]
	public static Vector3 InternalGetGestnerDisplacement(Vector2 xzVtx, Vector4 intensity, Vector4 steepness, Vector4 amp, Vector4 freq, Vector4 speed, Vector4 dirAB, Vector4 dirCD, float TimeOffset)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x55C6F0", Offset = "0x55C6F0", VA = "0x55C6F0")]
	public static Vector3 GetGestnerDisplacement(Vector3 WorldPosition, GersterWavesDescription Description, float TimeOffset)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x55CC40", Offset = "0x55CC40", VA = "0x55CC40")]
	public static Vector3 GetGestnerDisplacementSingle(Vector3 WorldPosition, GersterWavesDescription Description, float TimeOffset)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000082")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x223A14", Offset = "0x223A14")]
public class AudioRecorder : MonoBehaviour
{
	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private BinaryWriter binwriter;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string filename;

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x3C7F50", Offset = "0x3C7F50", VA = "0x3C7F50")]
	private void Start()
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x3C8024", Offset = "0x3C8024", VA = "0x3C8024")]
	private void Update()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x3C8028", Offset = "0x3C8028", VA = "0x3C8028")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x3C83B8", Offset = "0x3C83B8", VA = "0x3C83B8")]
	private void OnAudioFilterRead(float[] data, int numChannels)
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x3C844C", Offset = "0x3C844C", VA = "0x3C844C")]
	public AudioRecorder()
	{
	}
}
[Token(Token = "0x2000083")]
public class AutoHide : MonoBehaviour
{
	[Token(Token = "0x2000261")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x224924", Offset = "0x224924")]
	private sealed class <AutoHideTimer>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AutoHide <>4__this;

		[Token(Token = "0x17000167")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C54")]
			[Address(RVA = "0x3C99A8", Offset = "0x3C99A8", VA = "0x3C99A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000168")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C56")]
			[Address(RVA = "0x3C9A28", Offset = "0x3C9A28", VA = "0x3C9A28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x3C987C", Offset = "0x3C987C", VA = "0x3C987C")]
		[DebuggerHidden]
		public <AutoHideTimer>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x3C98B0", Offset = "0x3C98B0", VA = "0x3C98B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x3C98B4", Offset = "0x3C98B4", VA = "0x3C98B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x3C99B0", Offset = "0x3C99B0", VA = "0x3C99B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float fHideTime;

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x3C97D8", Offset = "0x3C97D8", VA = "0x3C97D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x3C97FC", Offset = "0x3C97FC", VA = "0x3C97FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x22C6A8", Offset = "0x22C6A8")]
	private IEnumerator AutoHideTimer()
	{
		return null;
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x3C989C", Offset = "0x3C989C", VA = "0x3C989C")]
	public AutoHide()
	{
	}
}
[Token(Token = "0x2000084")]
public class CircularMotion : MonoBehaviour
{
	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 axis1;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 axis2;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float radius1;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float radius2;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float speed1;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speed2;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 center;

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x3CE93C", Offset = "0x3CE93C", VA = "0x3CE93C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x3CE9A4", Offset = "0x3CE9A4", VA = "0x3CE9A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x3CEBD0", Offset = "0x3CEBD0", VA = "0x3CEBD0")]
	public CircularMotion()
	{
	}
}
[Token(Token = "0x2000085")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x223A84", Offset = "0x223A84")]
public class Clicker : MonoBehaviour
{
	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float interval;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float amp;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float decay;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int sr;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int counter;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float env;

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x3CEC80", Offset = "0x3CEC80", VA = "0x3CEC80")]
	private void Start()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x3CEC9C", Offset = "0x3CEC9C", VA = "0x3CEC9C")]
	private void Update()
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x3CECA0", Offset = "0x3CECA0", VA = "0x3CECA0")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x3CEDD8", Offset = "0x3CEDD8", VA = "0x3CEDD8")]
	public Clicker()
	{
	}
}
[Token(Token = "0x2000086")]
public class ColorBars_sc : MonoBehaviour
{
	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Analizer_Sound Sound;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject R_bar;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject G_bar;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject B_bar;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject resultColorOut;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float pitch;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Lengthwave;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float barZoom;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float Rmin;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float Rmax;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float Rscl;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float ROut;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float Gmin;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float Gmax;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float Gscl;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float GOut;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float Bmin;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float Bmax;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float Bscl;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float BOut;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Vector3 Testresult;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color resultingColor;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Color RColor;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Color GColor;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Color BColor;

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x3CF6D0", Offset = "0x3CF6D0", VA = "0x3CF6D0")]
	public void Tick()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x3CF704", Offset = "0x3CF704", VA = "0x3CF704")]
	private void wav2RGB(float _wavelength)
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x3CFC34", Offset = "0x3CFC34", VA = "0x3CFC34")]
	public ColorBars_sc()
	{
	}
}
[Token(Token = "0x2000087")]
public class EphyraInfos
{
	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float orbitParticleRadius;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float orbitMotherRadius;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 orbitAxis;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public JellyFish_Anim mother;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioParticleController APC;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float birthTime;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float size;

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x3F3304", Offset = "0x3F3304", VA = "0x3F3304")]
	public EphyraInfos()
	{
	}
}
[Token(Token = "0x2000088")]
public class JellyFishInfos
{
	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Vector3 orbitAxis;

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x5469B0", Offset = "0x5469B0", VA = "0x5469B0")]
	public JellyFishInfos()
	{
	}
}
[Token(Token = "0x2000089")]
public class Conductor : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000262")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x224934", Offset = "0x224934")]
	private sealed class <>c
	{
		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static Func<GameObject, int> <>9__46_0;

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x3D53DC", Offset = "0x3D53DC", VA = "0x3D53DC")]
		public <>c()
		{
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x3D53E4", Offset = "0x3D53E4", VA = "0x3D53E4")]
		internal int <Start>b__46_0(GameObject itm)
		{
			return default(int);
		}
	}

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x229590", Offset = "0x229590")]
	public TextMesh debug_sound_d;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int selectedCam;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string currentDevice;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Context context;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Sound_D soundD;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float Tempo;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool playingMelody;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	private bool wasPlayingMelody;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float timeTresshold_MelodyTrigger;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool checkPerm;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TextMeshProUGUI mic_text;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool UpdateGui;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2295C4", Offset = "0x2295C4")]
	public List<SleekRenderPostProcess> sleekerPostFXs;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float bloomThreshold;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float dbBloomMin;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float dbBloomMax;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float dbBloomMinMaxChangeSpeed;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2295F8", Offset = "0x2295F8")]
	public Vector2 orbitRadiusMinMax;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public Vector2 speedMinMax;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public Vector2 sizeMinMax;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public List<JellyFish_Anim> jellyfishes;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private List<JellyFishInfos> jellyfishesInfos;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public JellyFish_Anim aggroJellyFish;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x22962C", Offset = "0x22962C")]
	public GameObject EphyraPrefab;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float ephyraHoldingNoteDelay;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float ephyraSpawnCooldown;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float lastEphyraSpawnTime;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public int maxEphyra;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float ephyrasLifetime;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float ephyrasTimeBeforeDyingGoMother;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float ephyrasCannonRotationSpeed;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float ephyrasCannonPower;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private List<JellyFish_Anim> ephyras;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private List<EphyraInfos> ephyrasInfos;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x229660", Offset = "0x229660")]
	public Vector2 ephyraOrbitRadiusMinMax;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public Vector2 ephyraSpeedMinMax;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public Vector2 ephyraSizeMinMax;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x229694", Offset = "0x229694")]
	public float levelStartMuteMicDuration;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public float angleMotherGoOrbit;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public float silenceDelayMotherGoOrbit;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public float silenceDelayBabiesGoMother;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public float silenceNoteTime;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Conductor instance;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private int SP_Color2;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private bool setParticleTextureSpectrum;

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x3CFC44", Offset = "0x3CFC44", VA = "0x3CFC44")]
	public Context Context()
	{
		return default(Context);
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x3CFC64", Offset = "0x3CFC64", VA = "0x3CFC64")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x3CFD44", Offset = "0x3CFD44", VA = "0x3CFD44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x3D03B8", Offset = "0x3D03B8", VA = "0x3D03B8")]
	private void SendDistortionWaveToCamera(Camera cam, SleekRenderPostProcess sleekerPostFX)
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x3D0620", Offset = "0x3D0620", VA = "0x3D0620")]
	private void Update()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x3D24EC", Offset = "0x3D24EC", VA = "0x3D24EC")]
	private string SoundD_to_string(Sound_D _s)
	{
		return null;
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x3D0250", Offset = "0x3D0250", VA = "0x3D0250")]
	private void InitializeJellyFish(JellyFish_Anim jf, JellyFishInfos infos)
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x3D34B0", Offset = "0x3D34B0", VA = "0x3D34B0")]
	private void InitializeEphyra(JellyFish_Anim eph, float parentSize, EphyraInfos infos, JellyFish_Anim mother)
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x3D1308", Offset = "0x3D1308", VA = "0x3D1308")]
	private void UpdateJellyFishes()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x3D19C0", Offset = "0x3D19C0", VA = "0x3D19C0")]
	private void UpdateEphyra()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x3D47E4", Offset = "0x3D47E4", VA = "0x3D47E4")]
	private void DestroyEphyra(int id)
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x3D464C", Offset = "0x3D464C", VA = "0x3D464C")]
	private void DestroyEphyra(JellyFish_Anim eph)
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x3D4940", Offset = "0x3D4940", VA = "0x3D4940")]
	public static void EphyraBeat(float intensity, float pitchDelta)
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x3D427C", Offset = "0x3D427C", VA = "0x3D427C")]
	private void EphyrasRunAfterParticles(int ephyraID)
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x3D4070", Offset = "0x3D4070", VA = "0x3D4070")]
	private void EphyrasRunAfterMother(int ephyraID)
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x3D3BCC", Offset = "0x3D3BCC", VA = "0x3D3BCC")]
	private void EphyrasRunInsideMother(int ephyraID)
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x3D38D4", Offset = "0x3D38D4", VA = "0x3D38D4")]
	private JellyFish_Anim GetMostFrontOfCamJF()
	{
		return null;
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x3D1014", Offset = "0x3D1014", VA = "0x3D1014")]
	private void UpdateParticlesColors()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x3D37C8", Offset = "0x3D37C8", VA = "0x3D37C8")]
	private AudioParticleController GetRandomParticle()
	{
		return null;
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x3D4CA8", Offset = "0x3D4CA8", VA = "0x3D4CA8")]
	private Vector3 GetBehind(Transform target, float distance)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x3D4DD4", Offset = "0x3D4DD4", VA = "0x3D4DD4")]
	private Vector3 GetEphyrasCannonDirection(Vector3 canonPos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x3D3034", Offset = "0x3D3034", VA = "0x3D3034")]
	public void ChangInpuAccion()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x3D5078", Offset = "0x3D5078", VA = "0x3D5078")]
	public Conductor()
	{
	}
}
[Serializable]
[Token(Token = "0x200008A")]
public struct Context
{
	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Sound_analize sound_analize;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public MusicSystemManager musicManager;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public AudioParticleManager audio_particles;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Environment_Manager environment_Manager;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Camera currentCamera;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Camera additionnalScreenCam;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform camTarget;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float beat_Phase;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int beatCount;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float gamePlayTime;
}
[Token(Token = "0x200008B")]
public class ConvolutionReverbUploadIR : MonoBehaviour
{
	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AudioClip[] impulse;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int index;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private bool[] uploaded;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioClip[] currImpulse;

	[PreserveSig]
	[Token(Token = "0x6000459")]
	[Address(RVA = "0x3D5428", Offset = "0x3D5428", VA = "0x3D5428")]
	private static extern bool ConvolutionReverb_UploadSample(int index, float[] data, int numsamples, int numchannels, int samplerate, string name);

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x3D5524", Offset = "0x3D5524", VA = "0x3D5524")]
	private void Start()
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x3D5AE4", Offset = "0x3D5AE4", VA = "0x3D5AE4")]
	private void Update()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x3D5528", Offset = "0x3D5528", VA = "0x3D5528")]
	private void UploadChangedClips()
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x3D5AE8", Offset = "0x3D5AE8", VA = "0x3D5AE8")]
	public ConvolutionReverbUploadIR()
	{
	}
}
[Token(Token = "0x200008C")]
public class DemoSelector : MonoBehaviour
{
	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private string[] demos;

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x3E9500", Offset = "0x3E9500", VA = "0x3E9500")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x3E9988", Offset = "0x3E9988", VA = "0x3E9988")]
	public DemoSelector()
	{
	}
}
[Token(Token = "0x200008D")]
public class DemoSelectorBackButton : MonoBehaviour
{
	[Token(Token = "0x6000460")]
	[Address(RVA = "0x3EABEC", Offset = "0x3EABEC", VA = "0x3EABEC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x3EAD10", Offset = "0x3EAD10", VA = "0x3EAD10")]
	public DemoSelectorBackButton()
	{
	}
}
[Token(Token = "0x200008E")]
public class DisableAA_Android : MonoBehaviour
{
	[Token(Token = "0x6000462")]
	[Address(RVA = "0x3EB04C", Offset = "0x3EB04C", VA = "0x3EB04C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x3EB0C8", Offset = "0x3EB0C8", VA = "0x3EB0C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x3EB0CC", Offset = "0x3EB0CC", VA = "0x3EB0CC")]
	public DisableAA_Android()
	{
	}
}
[Token(Token = "0x200008F")]
public class EngineControl : MonoBehaviour
{
	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AudioMixer mixer;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float speed;

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x3F13D0", Offset = "0x3F13D0", VA = "0x3F13D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x3F13D4", Offset = "0x3F13D4", VA = "0x3F13D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x3F161C", Offset = "0x3F161C", VA = "0x3F161C")]
	public EngineControl()
	{
	}
}
[Token(Token = "0x2000090")]
public class Enviroment : MonoBehaviour
{
	[Token(Token = "0x6000468")]
	[Address(RVA = "0x3F1D24", Offset = "0x3F1D24", VA = "0x3F1D24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x3F1D28", Offset = "0x3F1D28", VA = "0x3F1D28")]
	private void Update()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x3F1D2C", Offset = "0x3F1D2C", VA = "0x3F1D2C")]
	public Enviroment()
	{
	}
}
[Serializable]
[Token(Token = "0x2000091")]
public struct BackgroundSettings
{
	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float subtract;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float intensity;
}
[Token(Token = "0x2000092")]
public class Environment_Manager : MonoBehaviour
{
	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public ParticleSystem stars;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public PAParticleField Godrays;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public PAParticleField mist;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PAParticleField particles;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color fogColor;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Gradient gradient;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TOD_Sky sky;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool fogAlwaysOn;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float speed;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public GameObject Moon;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color lerpedColor;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2296C8", Offset = "0x2296C8")]
	public Color lowPassedColorMist;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float lowPassedAlphaMist;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float speedDecay_mist_alpha;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float speedAttack_mist_Alpha;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float speeColorLerp_color;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float mistMaxIntensity;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2296FC", Offset = "0x2296FC")]
	public MeshRenderer bgGradientMR;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MeshRenderer bgGradientMR2;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Material bgGradientMatCopy;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Material bgGradientMatCopy2;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Color defaultBottomColor;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Color defaultHalfBottomColor;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public Color defaultHorizonColor;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public Color defaultZenithColor;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float BGColorChangeSpeed;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float bottomHueOffset;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public BackgroundSettings BGSettings_Silence;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public BackgroundSettings BGSettings_Max;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public CoolDownEvent beat;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[HideInInspector]
	public float beatIntensity;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x229740", Offset = "0x229740")]
	public float FTLModeSpeed;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float beatSizeModifier;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float originalSize;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float originalMaxSpeed;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float progressionLevelNormalised_prev;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x229774", Offset = "0x229774")]
	public float lowpassValidNote;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float particleRandomnessProgression;

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x3F1D34", Offset = "0x3F1D34", VA = "0x3F1D34")]
	private void Init()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x3F1D38", Offset = "0x3F1D38", VA = "0x3F1D38")]
	private void Awake()
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x3F20BC", Offset = "0x3F20BC", VA = "0x3F20BC")]
	private void Update()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x3F20C0", Offset = "0x3F20C0", VA = "0x3F20C0")]
	public void Tick(ref Sound_D _sound, ref Note_data[] _noteData, float progressionLevelNormalised)
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x3F3104", Offset = "0x3F3104", VA = "0x3F3104")]
	public Environment_Manager()
	{
	}
}
[Token(Token = "0x2000093")]
public class FireSelector : MonoBehaviour
{
	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AudioMixerSnapshot[] fireTypeSnapshots;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AudioMixerSnapshot fireType;

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x3F34C0", Offset = "0x3F34C0", VA = "0x3F34C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x3F351C", Offset = "0x3F351C", VA = "0x3F351C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x3F37E8", Offset = "0x3F37E8", VA = "0x3F37E8")]
	public FireSelector()
	{
	}
}
[Token(Token = "0x2000094")]
public class FlyCamold : MonoBehaviour
{
	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float lookSpeed;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float moveSpeed;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float rotationX;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rotationY;

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x3F4898", Offset = "0x3F4898", VA = "0x3F4898")]
	private void Update()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x3F4E08", Offset = "0x3F4E08", VA = "0x3F4E08")]
	public FlyCamold()
	{
	}
}
[Token(Token = "0x2000095")]
public class FullscreenShader : MonoBehaviour
{
	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Material mat;

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x3F4E24", Offset = "0x3F4E24", VA = "0x3F4E24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x3F4E28", Offset = "0x3F4E28", VA = "0x3F4E28")]
	private void Update()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x3F4E2C", Offset = "0x3F4E2C", VA = "0x3F4E2C")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x3F4EBC", Offset = "0x3F4EBC", VA = "0x3F4EBC")]
	public FullscreenShader()
	{
	}
}
[Token(Token = "0x2000096")]
public class GlottalControl : MonoBehaviour
{
	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AudioMixer mixer;

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x3F4EC4", Offset = "0x3F4EC4", VA = "0x3F4EC4")]
	private void Start()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x3F4EC8", Offset = "0x3F4EC8", VA = "0x3F4EC8")]
	private void Update()
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x3F50BC", Offset = "0x3F50BC", VA = "0x3F50BC")]
	public GlottalControl()
	{
	}
}
[Token(Token = "0x2000097")]
public class GranulatorController : MonoBehaviour
{
	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AudioMixer mixer;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Material mat;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float TimeScale;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float t0;

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x3F824C", Offset = "0x3F824C", VA = "0x3F824C")]
	private void Start()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x3F8268", Offset = "0x3F8268", VA = "0x3F8268")]
	private void Update()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x3F85E4", Offset = "0x3F85E4", VA = "0x3F85E4")]
	public GranulatorController()
	{
	}
}
[Token(Token = "0x2000098")]
public class GranulatorDebug : MonoBehaviour
{
	[PreserveSig]
	[Token(Token = "0x600047F")]
	[Address(RVA = "0x3F85F8", Offset = "0x3F85F8", VA = "0x3F85F8")]
	private static extern int Granulator_DebugGetGrainCount();

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x3F8690", Offset = "0x3F8690", VA = "0x3F8690")]
	private void Start()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x3F8694", Offset = "0x3F8694", VA = "0x3F8694")]
	private void Update()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x3F8764", Offset = "0x3F8764", VA = "0x3F8764")]
	public GranulatorDebug()
	{
	}
}
[Token(Token = "0x2000099")]
public class GranulatorUploadSample : MonoBehaviour
{
	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AudioClip[] sample;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int index;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float lowcut;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float highcut;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int order;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool[] uploaded;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private AudioClip[] currSample;

	[PreserveSig]
	[Token(Token = "0x6000483")]
	[Address(RVA = "0x3F8770", Offset = "0x3F8770", VA = "0x3F8770")]
	private static extern bool Granulator_UploadSample(int index, float[] data, int numsamples, int numchannels, int samplerate, string name);

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x3F886C", Offset = "0x3F886C", VA = "0x3F886C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x3F9208", Offset = "0x3F9208", VA = "0x3F9208")]
	private void Update()
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x3F8870", Offset = "0x3F8870", VA = "0x3F8870")]
	private void UploadChangedClips()
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x3F920C", Offset = "0x3F920C", VA = "0x3F920C")]
	public GranulatorUploadSample()
	{
	}
}
[Token(Token = "0x200009A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x223AF4", Offset = "0x223AF4")]
public class ImpactNoiseGenerator : MonoBehaviour
{
	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float frictionPeriodMin;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float frictionPeriodMax;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float frictionFrequencyMin;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float frictionFrequencyMax;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float frictionWhiteNoiseAmp;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float frictionAmp;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float frictionDecayTime;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float frictionBandwidth;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float impactDecayTimeMin;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float impactDecayTimeMax;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float impactAmpMin;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float impactAmpMax;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float impactFrequencyMin;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float impactFrequencyMax;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float impactBandwidthMin;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float impactBandwidthMax;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float stayFrictionAmp;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 lastPos;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float friction;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float frictionCount;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float frictionCutoff;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float frictionLPF;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float frictionBPF;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float frictionNorm;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float speed;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float lastSpeed;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float currSpeed;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ulong seed;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float lastImpact;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float impact;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float impactDecayConst;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float impactCutoff;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float impactBandwidth;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float impactLPF;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float impactBPF;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float impactNorm;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int samplerate;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int skipfirstframes;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float stayFriction;

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x5457CC", Offset = "0x5457CC", VA = "0x5457CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x545864", Offset = "0x545864", VA = "0x545864")]
	private void Update()
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x5459AC", Offset = "0x5459AC", VA = "0x5459AC")]
	private float GetRandom()
	{
		return default(float);
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x545A0C", Offset = "0x545A0C", VA = "0x545A0C")]
	private float GetRandom(float minVal, float maxVal)
	{
		return default(float);
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x545A84", Offset = "0x545A84", VA = "0x545A84")]
	private void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x545BAC", Offset = "0x545BAC", VA = "0x545BAC")]
	private void OnCollisionStay(Collision col)
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x545BB8", Offset = "0x545BB8", VA = "0x545BB8")]
	private void OnAudioFilterRead(float[] data, int numchannels)
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x5462B8", Offset = "0x5462B8", VA = "0x5462B8")]
	public ImpactNoiseGenerator()
	{
	}
}
[Token(Token = "0x200009B")]
public class ImpactSignal : MonoBehaviour
{
	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AudioListener listener;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int instance;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float minCutoff;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxCutoff;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float minBW;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxBW;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minDecay;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxDecay;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float decayConst;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ulong seed;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool ready;

	[PreserveSig]
	[Token(Token = "0x6000490")]
	[Address(RVA = "0x5463E0", Offset = "0x5463E0", VA = "0x5463E0")]
	private static extern void ImpactGenerator_AddImpact(int index, float volume, float decay, float cut, float bw);

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x5464A8", Offset = "0x5464A8", VA = "0x5464A8")]
	private float GetRandom()
	{
		return default(float);
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x546508", Offset = "0x546508", VA = "0x546508")]
	private float GetRandom(float minVal, float maxVal)
	{
		return default(float);
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x546580", Offset = "0x546580", VA = "0x546580")]
	private void Start()
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x5465B4", Offset = "0x5465B4", VA = "0x5465B4")]
	private void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x546970", Offset = "0x546970", VA = "0x546970")]
	public ImpactSignal()
	{
	}
}
[Serializable]
[Token(Token = "0x200009C")]
public enum JellyFishAnimState
{
	[Token(Token = "0x4000576")]
	None,
	[Token(Token = "0x4000577")]
	Animated
}
[Serializable]
[Token(Token = "0x200009D")]
[Flags]
public enum JF_ActionAtMoveCompletionFlags
{
	[Token(Token = "0x4000579")]
	Stop = 0,
	[Token(Token = "0x400057A")]
	Slide = 1,
	[Token(Token = "0x400057B")]
	StandUp = 2
}
[Token(Token = "0x200009E")]
public class JellyFish_Anim : MonoBehaviour
{
	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x22978C", Offset = "0x22978C")]
	public float swimAnimTargetWeight;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float voiceDanceTargetWeight;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float voiceColorTargetWeight;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2297C0", Offset = "0x2297C0")]
	public JellyFishAnimState jellyFishState;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool isEphyra;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2297F4", Offset = "0x2297F4")]
	public float roam_acc;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float turnSpeed;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float roam_randomness;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float roam_radius;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float orbitHeight;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool roam_clockwise;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private JF_ActionAtMoveCompletionFlags actionMoveCompleted;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float swimWeightAnim;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x229828", Offset = "0x229828")]
	public FloatWithInertia swimActualWeight;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public AnimationCurve UpDownSwimAnim;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve DiameterSwimAnim;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float swimSpeed;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float swimWobble;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float tentacleOffsetFactor;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float tentacleOffsetFactor2;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float swimAnimProgress;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float swimScale;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float swimFreqAlongZ;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float swimOffset;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector4 swimAxis;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float twistAnimWhenRolling;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool vertexColorControlPinchAndSwim;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x22985C", Offset = "0x22985C")]
	public FloatWithInertia voiceColorActualWeight;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float colorIntensity_DB_Multiplier;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float colorIntensity_DB_Add;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Color curGlowColor;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Color defaultGlowColor;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float reactionSpeedColor;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public Vector2 bellOutsideEmissiveMinMax;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public Vector2 bellVeinsEmissiveMinMax;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float originalRimAlphaValueOut;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float originalRimAlphaValueIn;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float originalRimGlowThickOut;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float originalRimGlowThickIn;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float holdingNoteAmount;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x229890", Offset = "0x229890")]
	public FloatWithInertia voiceDanceActualWeight;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float scalingSensitivity;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Vector2 lowPitchScale;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Vector2 highPitchScale;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Vector4 remap_dbNorm;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Vector2 low_DB_Scale;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Vector2 high_DB_Scale;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float lowPassedVoiceNote;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public float lowPassNoteChangeSpeed;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public FloatWithInertia cur_WidthScale;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public FloatWithInertia cur_HeightScale;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public FloatWithInertia cur_vibratingFactor;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public FloatWithInertia cur_vibratingFreq;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public FloatWithInertia cur_extraStretch;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public float vibrationScaleMax;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Vector4 mapVoicePitchToVibratingFreq;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float oscillator;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float oscillatorFloorBell;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float tentaclesOriginalScale_XY;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private float tentaclesOriginalScale_Z;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2298C4", Offset = "0x2298C4")]
	public List<Transform> bones;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public Animation_element bell;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Animation_element skirt;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public Animation_element insideWeird;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Animation_element tentacles;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public Animation_element bellFloor;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public TentacleGroup arms;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public Rigidbody rigidB;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private Context context;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private int SP_InnerGlowColor;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private int SP_baseShape;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private int SP_rotate;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private int SPswimScaleFreqOffsetProgress;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private int SP_Spectrum;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private int SP_alphaRim;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private int SP_InnerGlowThick;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	private int SP_SpectrumPosition;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private int SP_SpectrumFactor;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private int SP_Flatten;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private int SP_BaseScale;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	private int SP_Stretch;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private int SP_ColorAnim;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	private int SP_Alpha;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private int SPswimRotAxis;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	private int SP_CurrentScale;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public Vector2 arm_alphaMinMax;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public List<Transform> tentacleRotateSwimAnim;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	public float envelopeIntensity;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private CoolDownEvent singingWhileOrbiting;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	private Vector3 lastLAV;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public float rotBendSpeed;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	public float rotBend;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public float rotBend_Floor;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	public CoolDownEvent forceSwim;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public float beatIntensity;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	public Color pitchDeltaColor;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
	private float enveloppeSqueezeFactor;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private Color currentNoteColorArm;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private bool SpectrumTextureSet;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
	private float lowPassedValidNote;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private float dbLowPassed;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
	private float extra_stretch;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private float extra_highPitch;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
	private float vibration;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private float lowPassedDBnorm;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
	public Vector3 swimTargetWPosition;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public float swimToTargetWeight;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
	public float swimCompletionRadius;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public float swimAroundTargetWeight;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	public Transform rotateAroundTarget;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	[HideInInspector]
	public Vector3 swimAroundTargetAxis;

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x5469B8", Offset = "0x5469B8", VA = "0x5469B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x547068", Offset = "0x547068", VA = "0x547068")]
	public void Init()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x54706C", Offset = "0x54706C", VA = "0x54706C")]
	private void GenerateBaseShape()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x5472D4", Offset = "0x5472D4", VA = "0x5472D4")]
	private void Update()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x54A760", Offset = "0x54A760", VA = "0x54A760")]
	private void UpdateBendWhenRotate()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x54AB28", Offset = "0x54AB28", VA = "0x54AB28")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x54C150", Offset = "0x54C150", VA = "0x54C150")]
	public void UpdateContext(ref Context _context)
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x547B64", Offset = "0x547B64", VA = "0x547B64")]
	private void Update_Swimming(float weight)
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x54791C", Offset = "0x54791C", VA = "0x54791C")]
	private void SetSpectrumTexture()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x549B60", Offset = "0x549B60", VA = "0x549B60")]
	private void Update_VoiceColor(float weight)
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x54A6A8", Offset = "0x54A6A8", VA = "0x54A6A8")]
	public void SetBellColor(int shaderVariable, Color color)
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x5485AC", Offset = "0x5485AC", VA = "0x5485AC")]
	public void Update_VoiceDance(float weight)
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x54C478", Offset = "0x54C478", VA = "0x54C478")]
	public static void PlotPitch(int min, int value, int lowpassed, int max)
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x54C604", Offset = "0x54C604", VA = "0x54C604")]
	public void SetSwimTarget(Vector3 pos, float completionRadius, float weight, JF_ActionAtMoveCompletionFlags actionAtCompletion)
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x54C62C", Offset = "0x54C62C", VA = "0x54C62C")]
	public void SetSwimAround(Transform rotateAround, Vector3 axis, float weight)
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x54B630", Offset = "0x54B630", VA = "0x54B630")]
	private void UpdateSwimAroundObject()
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x54BA60", Offset = "0x54BA60", VA = "0x54BA60")]
	private void UpdateSwimToTargetPhysics(float weight)
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x54AD9C", Offset = "0x54AD9C", VA = "0x54AD9C")]
	private void UpdateSlideToTargetPhysics(float weight)
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x54B1F8", Offset = "0x54B1F8", VA = "0x54B1F8")]
	private void UpdateStandUpPhysics(float weight)
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x54C188", Offset = "0x54C188", VA = "0x54C188")]
	private void SwimFormula(Vector2 samplePos, out Vector2 result)
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x54C470", Offset = "0x54C470", VA = "0x54C470")]
	private float ProcessFloat(float value)
	{
		return default(float);
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x54C660", Offset = "0x54C660", VA = "0x54C660")]
	public JellyFish_Anim()
	{
	}
}
[Serializable]
[Token(Token = "0x200009F")]
public struct Animation_element
{
	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform transform;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Renderer meshRenderer;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public GameObject go;
}
[Serializable]
[Token(Token = "0x20000A0")]
public struct Note_data
{
	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Color color;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float note;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int note_index;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float db_norm;
}
[Token(Token = "0x20000A1")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x223B74", Offset = "0x223B74")]
public class KeySampleTrigger : MonoBehaviour
{
	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AudioClip clip;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string key;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float starttime;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float endtime;

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x54D34C", Offset = "0x54D34C", VA = "0x54D34C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x54D350", Offset = "0x54D350", VA = "0x54D350")]
	private void Update()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x54D494", Offset = "0x54D494", VA = "0x54D494")]
	public KeySampleTrigger()
	{
	}
}
[Token(Token = "0x20000A2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x223BE4", Offset = "0x223BE4")]
public class Mic_visor : MonoBehaviour
{
	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject Obj_Viewport;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject Player_VoiceAim;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject TargetAim;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject Tar;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private GameObject[] Obj_Tar;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool vis_done;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool vis_startSet;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool vis_setting;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool vis_setOfset;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Mic_visor TheMic;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject silentwarning;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private List<float> compiler;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int silentAvgAmount;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int avgIndex;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float freqAverage;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool silentDone;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x229908", Offset = "0x229908")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x229908", Offset = "0x229908")]
	public int InpuDivice;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int currectDvice;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x229968", Offset = "0x229968")]
	public string _selectedDevice;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public AudioMixerGroup _MG_Mic;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioMixerGroup _MG_Master;

	[Token(Token = "0x400060C")]
	private const int SAMPLE_SIZE = 1024;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float rmsValue;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float dbValue;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float pitchValue;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float freqN;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x22999C", Offset = "0x22999C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x22999C", Offset = "0x22999C")]
	public float maxVisualScl;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float keepPercent;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float visualModifier;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float smoothSpeed;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int audioLoopTime;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float[] samples;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float[] spectrum;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float sampleRate;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Transform[] visualList;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float[] visualScl;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	private int amountVisual;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool useMic;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float silentoffset;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool silent;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public AudioSource source;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string device;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool prevUseMic;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private AudioClip prevClip;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public Text micBtn;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float sum;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private List<float> copiler;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public int avgAmount;

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x55D974", Offset = "0x55D974", VA = "0x55D974")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x55DA20", Offset = "0x55DA20", VA = "0x55DA20")]
	private void ResetMicSetu()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x55DCE4", Offset = "0x55DCE4", VA = "0x55DCE4")]
	public void Btn_Mic()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x55DCF4", Offset = "0x55DCF4", VA = "0x55DCF4")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x55E104", Offset = "0x55E104", VA = "0x55E104")]
	public float PitchDetector(float[] _sound)
	{
		return default(float);
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x55DD2C", Offset = "0x55DD2C", VA = "0x55DD2C")]
	private void AnalyzeSound()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x55E10C", Offset = "0x55E10C", VA = "0x55E10C")]
	private void SpawnLine()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x55E2EC", Offset = "0x55E2EC", VA = "0x55E2EC")]
	private void UpdateVisual()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x55E690", Offset = "0x55E690", VA = "0x55E690")]
	private void SetupRay()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x55F094", Offset = "0x55F094", VA = "0x55F094")]
	private void setupSilence()
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x55F338", Offset = "0x55F338", VA = "0x55F338")]
	public Mic_visor()
	{
	}
}
[Token(Token = "0x20000A3")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x223C54", Offset = "0x223C54")]
public class MicrophoneFeed : MonoBehaviour
{
	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool useMicrophone;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AudioSource source;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private string device;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool prevUseMicrophone;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private AudioClip prevClip;

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x7745B8", Offset = "0x7745B8", VA = "0x7745B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x7747E8", Offset = "0x7747E8", VA = "0x7747E8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x774918", Offset = "0x774918", VA = "0x774918")]
	public MicrophoneFeed()
	{
	}
}
[Token(Token = "0x20000A4")]
public class MidiSynthPhrase : MonoBehaviour
{
	[PreserveSig]
	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x774920", Offset = "0x774920", VA = "0x774920")]
	private static extern void Synthesizer_AddMessage(ulong sample, int msg);

	[PreserveSig]
	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x7749D0", Offset = "0x7749D0", VA = "0x7749D0")]
	private static extern void Synthesizer_KillAll();

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x774A68", Offset = "0x774A68", VA = "0x774A68")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x774A6C", Offset = "0x774A6C", VA = "0x774A6C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x774A70", Offset = "0x774A70", VA = "0x774A70")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x7752D4", Offset = "0x7752D4", VA = "0x7752D4")]
	public MidiSynthPhrase()
	{
	}
}
[Token(Token = "0x20000A5")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x223CC4", Offset = "0x223CC4")]
public class ModifyWave : MonoBehaviour
{
	[Token(Token = "0x2000263")]
	public enum Mode
	{
		[Token(Token = "0x400147F")]
		Off,
		[Token(Token = "0x4001480")]
		DC,
		[Token(Token = "0x4001481")]
		Noise
	}

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Mode mode;

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x7752DC", Offset = "0x7752DC", VA = "0x7752DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x775578", Offset = "0x775578", VA = "0x775578")]
	private void Update()
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x77557C", Offset = "0x77557C", VA = "0x77557C")]
	public ModifyWave()
	{
	}
}
[Token(Token = "0x20000A6")]
public class Analize_Sound : MonoBehaviour
{
	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject test_freq;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject test_amp;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x229A00", Offset = "0x229A00")]
	public Sound_data sound_out;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x229A34", Offset = "0x229A34")]
	public Sound_data sound_prev;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float sensitivity;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float loudness;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x229A68", Offset = "0x229A68")]
	public float filterSmoothness;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float smoothLoudness;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float max_Vol;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float min_Vol;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float smoothSpeed;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float frequency;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float smoothFrequency;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float freq_threshold;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public int samplerate;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioSource audio;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private List<float> filterSamples;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int filterSamplesrate;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float prev_freq;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string[] noteNames;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private string[] LatinnoteNames;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float smooth;

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x3BF738", Offset = "0x3BF738", VA = "0x3BF738")]
	private static float LowPassFilter(List<float> _Data, float _freq, float filterSmoth, int rate)
	{
		return default(float);
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x3BFA00", Offset = "0x3BFA00", VA = "0x3BFA00")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x3C01D8", Offset = "0x3C01D8", VA = "0x3C01D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x3C058C", Offset = "0x3C058C", VA = "0x3C058C")]
	private float GetSmoothLoudness()
	{
		return default(float);
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x3C0470", Offset = "0x3C0470", VA = "0x3C0470")]
	private float GetAveragedVolume()
	{
		return default(float);
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x3C063C", Offset = "0x3C063C", VA = "0x3C063C")]
	private float GetFundamentalFrequency()
	{
		return default(float);
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x3C0828", Offset = "0x3C0828", VA = "0x3C0828")]
	public static float MtoF(float _note_midi)
	{
		return default(float);
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x3C0778", Offset = "0x3C0778", VA = "0x3C0778")]
	public static float FtoM(float _freq)
	{
		return default(float);
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x3C08D4", Offset = "0x3C08D4", VA = "0x3C08D4")]
	public static float Mod(float val, float mod)
	{
		return default(float);
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x3C0970", Offset = "0x3C0970", VA = "0x3C0970")]
	private float DBtoNormal(float db)
	{
		return default(float);
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x3BFD14", Offset = "0x3BFD14", VA = "0x3BFD14")]
	private Sound_data FillSound(float _note_midi, float _db, float _rms)
	{
		return default(Sound_data);
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x3C0A30", Offset = "0x3C0A30", VA = "0x3C0A30")]
	public Analize_Sound()
	{
	}
}
[Token(Token = "0x20000A7")]
public class Analizer_Sound : MonoBehaviour
{
	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x229A80", Offset = "0x229A80")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x229A80", Offset = "0x229A80")]
	public float smooth;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int distanceIndex;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int analizeMethod;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sound_data sound;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Sound_data Raw_sound;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Sound_data Raw_sound_prev;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x229AD0", Offset = "0x229AD0")]
	public float time;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float db_Max;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public bool detecting;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float detect_Range;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float detected_startTime;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float curTimDetecting;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float noteAcuracity;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float timeInsilenceTodecay;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float timeSilent_treshhold;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float startTime_tochangeNoiseSound;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float silenceTime;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool silence_Decay_reachedlimit;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x229B04", Offset = "0x229B04")]
	public float SdkPitch;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x229B38", Offset = "0x229B38")]
	public float SdkInfluence;

	[Token(Token = "0x4000657")]
	private const int SAMPLE_SIZE = 2048;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float pitchRawSdkMixex;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private string[] noteNames;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private string[] LatinnoteNames;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x229B50", Offset = "0x229B50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x229B50", Offset = "0x229B50")]
	public float maxVisualScl;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float keepPercent;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float visualModifier;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float smoothSpeed;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public int audioLoopTime;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float[] samplesA;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float[] samplesB;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float[] spectrum;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float sampleRate;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public AudioSource source;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public bool useMic;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public float silentoffset;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public bool silent;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public float percentfreq;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public float speedchange;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public List<float> note_Log;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public List<float> rms_Log;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public List<float> db_Log;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public List<float> freq_Log;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x229BA4", Offset = "0x229BA4")]
	public float filterSmoothness;

	[PreserveSig]
	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x3C1348", Offset = "0x3C1348", VA = "0x3C1348")]
	private static extern float PitchDetectorGetFreq(int index);

	[PreserveSig]
	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x3C13E8", Offset = "0x3C13E8", VA = "0x3C13E8")]
	private static extern int PitchDetectorDebug(float[] data);

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x3C1490", Offset = "0x3C1490", VA = "0x3C1490")]
	public void Inizialize(ref Contex contex)
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x3C1D64", Offset = "0x3C1D64", VA = "0x3C1D64")]
	public bool CheckForSilence()
	{
		return default(bool);
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x3C1DE0", Offset = "0x3C1DE0", VA = "0x3C1DE0")]
	public void SmoothRawData_note()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x3C1FEC", Offset = "0x3C1FEC", VA = "0x3C1FEC")]
	public void SmoothRawData_amp()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x3C20D8", Offset = "0x3C20D8", VA = "0x3C20D8")]
	public void Tick(ref Contex contex)
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x3C2668", Offset = "0x3C2668", VA = "0x3C2668")]
	public void AnalizeRawSound01()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x3C23C0", Offset = "0x3C23C0", VA = "0x3C23C0")]
	private float AnalizeRawSound02()
	{
		return default(float);
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x3C254C", Offset = "0x3C254C", VA = "0x3C254C")]
	private float GetAveragedVolume()
	{
		return default(float);
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x3C2868", Offset = "0x3C2868", VA = "0x3C2868")]
	public void GetFundamentalFreq()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x3C2B5C", Offset = "0x3C2B5C", VA = "0x3C2B5C")]
	private static float AnalizeAvg(float Val_raw, List<float> compilerVal, int AvgRange)
	{
		return default(float);
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x3C2DD4", Offset = "0x3C2DD4", VA = "0x3C2DD4")]
	public static float MtoF(float _note_midi)
	{
		return default(float);
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x3C2E80", Offset = "0x3C2E80", VA = "0x3C2E80")]
	public static float Mod(float val, float mod)
	{
		return default(float);
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x3C2F1C", Offset = "0x3C2F1C", VA = "0x3C2F1C")]
	private static float OffsetAdjust(float _val, Vector3 _clamp)
	{
		return default(float);
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x3C18A0", Offset = "0x3C18A0", VA = "0x3C18A0")]
	public Sound_data FillSound(float _note_midi, float _db, float _rms)
	{
		return default(Sound_data);
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x3C2018", Offset = "0x3C2018", VA = "0x3C2018")]
	private float DBtoNormal(float db)
	{
		return default(float);
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x3C2C7C", Offset = "0x3C2C7C", VA = "0x3C2C7C")]
	private static float LowPassFilter(List<float> _Data)
	{
		return default(float);
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x3C2F90", Offset = "0x3C2F90", VA = "0x3C2F90")]
	public Analizer_Sound()
	{
	}
}
[Serializable]
[Token(Token = "0x20000A8")]
public struct Sound_data
{
	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool silence;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public string name;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float freq;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float note_midi;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int note_index;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int note_octave;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float db;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float db_normlized;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float rms;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int note_index_up;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int note_index_down;
}
[Token(Token = "0x20000A9")]
public class Analizer_Sound_prev : MonoBehaviour
{
	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x229BD8", Offset = "0x229BD8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x229BD8", Offset = "0x229BD8")]
	public float smooth;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int distanceIndex;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Sound_data sound;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sound_data Raw_sound;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Sound_data Raw_sound_prev;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x229C28", Offset = "0x229C28")]
	public float time;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool detecting;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float detect_Range;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float detected_startTime;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float curTimDetecting;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float noteAcuracity;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x229C5C", Offset = "0x229C5C")]
	public float SdkPitch;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x229C90", Offset = "0x229C90")]
	public float SdkInfluence;

	[Token(Token = "0x4000687")]
	private const int SAMPLE_SIZE = 2048;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float pitchRawSdkMixex;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private string[] noteNames;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string[] LatinnoteNames;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x229CA8", Offset = "0x229CA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x229CA8", Offset = "0x229CA8")]
	public float maxVisualScl;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float keepPercent;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float visualModifier;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float smoothSpeed;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public int audioLoopTime;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float[] samplesA;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float[] samplesB;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float[] spectrum;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float sampleRate;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioSource source;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public bool useMic;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float silentoffset;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public bool silent;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float percentfreq;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float speedchange;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public List<float> note_Log;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public List<float> rms_Log;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public List<float> db_Log;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public List<float> freq_Log;

	[PreserveSig]
	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x3C38B0", Offset = "0x3C38B0", VA = "0x3C38B0")]
	private static extern float PitchDetectorGetFreq(int index);

	[PreserveSig]
	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x3C3950", Offset = "0x3C3950", VA = "0x3C3950")]
	private static extern int PitchDetectorDebug(float[] data);

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x3C39F8", Offset = "0x3C39F8", VA = "0x3C39F8")]
	public void Inizialize(ref Contex contex)
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x3C3B18", Offset = "0x3C3B18", VA = "0x3C3B18")]
	public bool CheckForSilence()
	{
		return default(bool);
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x3C3C04", Offset = "0x3C3C04", VA = "0x3C3C04")]
	public void SmoothRawData_note()
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x3C4204", Offset = "0x3C4204", VA = "0x3C4204")]
	public void SmoothRawData_amp()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x3C42C8", Offset = "0x3C42C8", VA = "0x3C42C8")]
	public void Tick(ref Contex contex)
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x3C431C", Offset = "0x3C431C", VA = "0x3C431C")]
	public void AnalizeRawSound()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x3C479C", Offset = "0x3C479C", VA = "0x3C479C")]
	private static float AnalizeAvg(float Val_raw, List<float> compilerVal, int AvgRange)
	{
		return default(float);
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x3C4934", Offset = "0x3C4934", VA = "0x3C4934")]
	public static float MtoF(float _note_midi)
	{
		return default(float);
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x3C49E0", Offset = "0x3C49E0", VA = "0x3C49E0")]
	public static float Mod(float val, float mod)
	{
		return default(float);
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x3C4A7C", Offset = "0x3C4A7C", VA = "0x3C4A7C")]
	private static float OffsetAdjust(float _val, Vector3 _clamp)
	{
		return default(float);
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x3C3DA4", Offset = "0x3C3DA4", VA = "0x3C3DA4")]
	public Sound_data FillSound(float _note_midi)
	{
		return default(Sound_data);
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x3C423C", Offset = "0x3C423C", VA = "0x3C423C")]
	private float DBtoNormal(float db)
	{
		return default(float);
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x3C4AF0", Offset = "0x3C4AF0", VA = "0x3C4AF0")]
	public Analizer_Sound_prev()
	{
	}
}
[Token(Token = "0x20000AA")]
public class Color_List
{
	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Note_item[] scale;

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x3CFC3C", Offset = "0x3CFC3C", VA = "0x3CFC3C")]
	public Color_List()
	{
	}
}
[Serializable]
[Token(Token = "0x20000AB")]
public struct Note_item
{
	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Color color;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float note;
}
[Serializable]
[Token(Token = "0x20000AC")]
public struct Contex
{
	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float time_Main;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float time_scl;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Mic_Input mic_Input;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Analizer_Sound analizer_Sound;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Spectrum_Rig spectrum_Rig;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public JellyFish_Anim jellyfish;
}
[Token(Token = "0x20000AD")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x223D34", Offset = "0x223D34")]
public class Mic_Input : MonoBehaviour
{
	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x229CFC", Offset = "0x229CFC")]
	public AudioSource source;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x229D30", Offset = "0x229D30")]
	public int InpuDivice;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int currectDvice;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x229D64", Offset = "0x229D64")]
	public string _selectedDevice;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public AudioMixerGroup _MG_Mic;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioMixerGroup _MG_Master;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool useMic;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	private bool prevUseMic;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioClip prevClip;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public string device;

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x55D6FC", Offset = "0x55D6FC", VA = "0x55D6FC")]
	public void ResetMicSetup()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x55D958", Offset = "0x55D958", VA = "0x55D958")]
	public void Tick(ref Contex contex)
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x55D95C", Offset = "0x55D95C", VA = "0x55D95C")]
	public void Btn_Mic()
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x55D96C", Offset = "0x55D96C", VA = "0x55D96C")]
	public Mic_Input()
	{
	}
}
[Token(Token = "0x20000AE")]
public class SAC_GameLoop : MonoBehaviour
{
	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Contex context;

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x42CD84", Offset = "0x42CD84", VA = "0x42CD84")]
	private void Start()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x42D194", Offset = "0x42D194", VA = "0x42D194")]
	private void Update()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x42D1EC", Offset = "0x42D1EC", VA = "0x42D1EC")]
	public SAC_GameLoop()
	{
	}
}
[Token(Token = "0x20000AF")]
public class SettupDevices : MonoBehaviour
{
	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject Obj_Viewport;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject Player_VoiceAim;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject TargetAim;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject Tar;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private GameObject[] Obj_Tar;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool vis_done;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool vis_startSet;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool vis_setting;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool vis_setOfset;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Analizer_Sound TheMic;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject silentwarning;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private List<float> compiler;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int silentAvgAmount;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int avgIndex;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float freqAverage;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool silentDone;

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x42E810", Offset = "0x42E810", VA = "0x42E810")]
	public void setupRay()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x42F214", Offset = "0x42F214", VA = "0x42F214")]
	public void SetupSilence()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x42F4B8", Offset = "0x42F4B8", VA = "0x42F4B8")]
	public SettupDevices()
	{
	}
}
[Token(Token = "0x20000B0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x223DA4", Offset = "0x223DA4")]
public class SineOscRotate : MonoBehaviour
{
	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float freq;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject head;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float scale;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float amp;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float phase;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float st;

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x42F768", Offset = "0x42F768", VA = "0x42F768")]
	private void Start()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x42F794", Offset = "0x42F794", VA = "0x42F794")]
	private void Update()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x42F8D0", Offset = "0x42F8D0", VA = "0x42F8D0")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x42FA34", Offset = "0x42FA34", VA = "0x42FA34")]
	public SineOscRotate()
	{
	}
}
[Token(Token = "0x20000B1")]
public class Spectrum_Rig : MonoBehaviour
{
	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float distMax;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ampMax;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float ampscl;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float spectrumSpeed;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int spectrumDef;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color spectrumColor;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject spectrumBar;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private List<GameObject> spectrumBars;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<float> spectrumBarTall;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public vis_MaterialIO_spectrum materialIO;

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x42CDBC", Offset = "0x42CDBC", VA = "0x42CDBC")]
	public void Inizialize()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x433484", Offset = "0x433484", VA = "0x433484")]
	public void Tick(ref Contex contex)
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x4336A4", Offset = "0x4336A4", VA = "0x4336A4")]
	private void SpectrumUpdate_Vis()
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x4334F4", Offset = "0x4334F4", VA = "0x4334F4")]
	private void Spec_DataUpdater(float _input)
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x4338A8", Offset = "0x4338A8", VA = "0x4338A8")]
	public Spectrum_Rig()
	{
	}
}
[Token(Token = "0x20000B2")]
public static class Bezier
{
	[Token(Token = "0x6000508")]
	[Address(RVA = "0x3CAA40", Offset = "0x3CAA40", VA = "0x3CAA40")]
	public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x3CABDC", Offset = "0x3CABDC", VA = "0x3CABDC")]
	public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x3CAD38", Offset = "0x3CAD38", VA = "0x3CAD38")]
	public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x3CAF30", Offset = "0x3CAF30", VA = "0x3CAF30")]
	public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x20000B3")]
public enum BezierControlPointMode
{
	[Token(Token = "0x40006D4")]
	Free,
	[Token(Token = "0x40006D5")]
	Aligned,
	[Token(Token = "0x40006D6")]
	Mirrored
}
[Token(Token = "0x20000B4")]
public class BezierCurve : MonoBehaviour
{
	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3[] points;

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x3CB154", Offset = "0x3CB154", VA = "0x3CB154")]
	public Vector3 GetPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x3CB2D0", Offset = "0x3CB2D0", VA = "0x3CB2D0")]
	public Vector3 GetVelocity(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x3CB514", Offset = "0x3CB514", VA = "0x3CB514")]
	public Vector3 GetDirection(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x3CB564", Offset = "0x3CB564", VA = "0x3CB564")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x3CB728", Offset = "0x3CB728", VA = "0x3CB728")]
	public BezierCurve()
	{
	}
}
[Token(Token = "0x20000B5")]
public class BezierSpline : MonoBehaviour
{
	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x229D98", Offset = "0x229D98")]
	public float swimingAmp;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float swimingOffset;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float swimingSpeed;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x229DCC", Offset = "0x229DCC")]
	public GameObject mid;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x229E00", Offset = "0x229E00")]
	public GameObject midtostart;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x229E34", Offset = "0x229E34")]
	public GameObject midtoend;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private Vector3[] points;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private BezierControlPointMode[] modes;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private bool loop;

	[Token(Token = "0x170000E1")]
	public bool Loop
	{
		[Token(Token = "0x6000511")]
		[Address(RVA = "0x3CB730", Offset = "0x3CB730", VA = "0x3CB730")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000512")]
		[Address(RVA = "0x3CB738", Offset = "0x3CB738", VA = "0x3CB738")]
		set
		{
		}
	}

	[Token(Token = "0x170000E2")]
	public int ControlPointCount
	{
		[Token(Token = "0x6000513")]
		[Address(RVA = "0x3CBEB8", Offset = "0x3CBEB8", VA = "0x3CBEB8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000E3")]
	public int CurveCount
	{
		[Token(Token = "0x6000519")]
		[Address(RVA = "0x3CC428", Offset = "0x3CC428", VA = "0x3CC428")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x3CBED8", Offset = "0x3CBED8", VA = "0x3CBED8")]
	public Vector3 GetControlPoint(int index)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x3CB810", Offset = "0x3CB810", VA = "0x3CB810")]
	public void SetControlPoint(int index, Vector3 point)
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x3CC2D0", Offset = "0x3CC2D0", VA = "0x3CC2D0")]
	public BezierControlPointMode GetControlPointMode(int index)
	{
		return default(BezierControlPointMode);
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x3CC324", Offset = "0x3CC324", VA = "0x3CC324")]
	public void SetControlPointMode(int index, BezierControlPointMode mode)
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x3CBF2C", Offset = "0x3CBF2C", VA = "0x3CBF2C")]
	private void EnforceMode(int index)
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x3CC45C", Offset = "0x3CC45C", VA = "0x3CC45C")]
	public Vector3 GetPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x3CC72C", Offset = "0x3CC72C", VA = "0x3CC72C")]
	public Vector3 GetVelocity(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x3CCA88", Offset = "0x3CCA88", VA = "0x3CCA88")]
	public Vector3 GetDirection(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x3CCAD8", Offset = "0x3CCAD8", VA = "0x3CCAD8")]
	public void AddCurve()
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x3CCE84", Offset = "0x3CCE84", VA = "0x3CCE84")]
	public void Reset()
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x3CD064", Offset = "0x3CD064", VA = "0x3CD064")]
	private void Start()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x3CD1E8", Offset = "0x3CD1E8", VA = "0x3CD1E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x3CD4DC", Offset = "0x3CD4DC", VA = "0x3CD4DC")]
	public BezierSpline()
	{
	}
}
[Token(Token = "0x20000B6")]
public class Bezier_Inputs : MonoBehaviour
{
	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x229E98", Offset = "0x229E98")]
	public BezierSpline theSpline;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x229ECC", Offset = "0x229ECC")]
	public GameObject[] items;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x229F00", Offset = "0x229F00")]
	public float swimingAmp;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float swimingOffset;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float swimingSpeed;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x229F34", Offset = "0x229F34")]
	public GameObject mid;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject midtostart;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject midtoend;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GameObject lookAtTar;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject lookAtUpN;

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x3CD4E4", Offset = "0x3CD4E4", VA = "0x3CD4E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x3CD53C", Offset = "0x3CD53C", VA = "0x3CD53C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x3CD710", Offset = "0x3CD710", VA = "0x3CD710")]
	public Bezier_Inputs()
	{
	}
}
[Token(Token = "0x20000B7")]
public class Line : MonoBehaviour
{
	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 p0;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 p1;

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x54EA88", Offset = "0x54EA88", VA = "0x54EA88")]
	public Line()
	{
	}
}
[Token(Token = "0x20000B8")]
public class SplineDecorator : MonoBehaviour
{
	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public BezierSpline spline;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int frequency;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool lookForward;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject UpNode;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject[] items;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> objChain;

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x43446C", Offset = "0x43446C", VA = "0x43446C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x434830", Offset = "0x434830", VA = "0x434830")]
	private void Update()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x434BD4", Offset = "0x434BD4", VA = "0x434BD4")]
	public SplineDecorator()
	{
	}
}
[Token(Token = "0x20000B9")]
public class SplineWalker : MonoBehaviour
{
	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public BezierSpline spline;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float duration;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool lookForward;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SplineWalkerMode mode;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float progress;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool goingForward;

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x434BDC", Offset = "0x434BDC", VA = "0x434BDC")]
	private void Update()
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x434DF4", Offset = "0x434DF4", VA = "0x434DF4")]
	public SplineWalker()
	{
	}
}
[Token(Token = "0x20000BA")]
public enum SplineWalkerMode
{
	[Token(Token = "0x40006FA")]
	Once,
	[Token(Token = "0x40006FB")]
	Loop,
	[Token(Token = "0x40006FC")]
	PingPong
}
[Token(Token = "0x20000BB")]
public class MoveController : MonoBehaviour
{
	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float wrapLen;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 speed;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 startPos;

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x775970", Offset = "0x775970", VA = "0x775970")]
	private void Start()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x7759BC", Offset = "0x7759BC", VA = "0x7759BC")]
	private void Update()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x775BE0", Offset = "0x775BE0", VA = "0x775BE0")]
	public MoveController()
	{
	}
}
[Token(Token = "0x20000BC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x223E14", Offset = "0x223E14")]
public class NoiseSweep : MonoBehaviour
{
	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AudioMixer mixer;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int samplerate;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong seed;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float lastPosX;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float lastPosY;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float lpf;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float bpf;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float amp;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float amptarget;

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x778C44", Offset = "0x778C44", VA = "0x778C44")]
	private void Start()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x778CDC", Offset = "0x778CDC", VA = "0x778CDC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x778EA4", Offset = "0x778EA4", VA = "0x778EA4")]
	private float GetRandom()
	{
		return default(float);
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x778F04", Offset = "0x778F04", VA = "0x778F04")]
	private float GetRandom(float minVal, float maxVal)
	{
		return default(float);
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x778F7C", Offset = "0x778F7C", VA = "0x778F7C")]
	private void OnAudioFilterRead(float[] data, int numchannels)
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x779198", Offset = "0x779198", VA = "0x779198")]
	public NoiseSweep()
	{
	}
}
[Token(Token = "0x20000BD")]
public class NoteSeed_element : MonoBehaviour
{
	[Token(Token = "0x6000534")]
	[Address(RVA = "0x7791A0", Offset = "0x7791A0", VA = "0x7791A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x7791A4", Offset = "0x7791A4", VA = "0x7791A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x7791A8", Offset = "0x7791A8", VA = "0x7791A8")]
	public NoteSeed_element()
	{
	}
}
[Token(Token = "0x20000BE")]
public class PC_PlatformSpecific : MonoBehaviour
{
	[Token(Token = "0x6000537")]
	[Address(RVA = "0x80D54C", Offset = "0x80D54C", VA = "0x80D54C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x80D580", Offset = "0x80D580", VA = "0x80D580")]
	public PC_PlatformSpecific()
	{
	}
}
[Token(Token = "0x20000BF")]
public class PhysicsSpawner : MonoBehaviour
{
	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject[] prototypes;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int maxobjects;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private GameObject[] spawned;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int counter;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private System.Random random;

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x80DD14", Offset = "0x80DD14", VA = "0x80DD14")]
	private void Start()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x80DD74", Offset = "0x80DD74", VA = "0x80DD74")]
	private void Update()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x80E190", Offset = "0x80E190", VA = "0x80E190")]
	public PhysicsSpawner()
	{
	}
}
[Token(Token = "0x20000C0")]
public class PitchDetectDemo : MonoBehaviour
{
	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private float[] history;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float[] debug;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private string[] noteNames;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material mat;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public string frequency;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string note;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public AudioMixer mixer;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text text;

	[PreserveSig]
	[Token(Token = "0x600053C")]
	[Address(RVA = "0x80E210", Offset = "0x80E210", VA = "0x80E210")]
	private static extern float PitchDetectorGetFreq(int index);

	[PreserveSig]
	[Token(Token = "0x600053D")]
	[Address(RVA = "0x80E2B0", Offset = "0x80E2B0", VA = "0x80E2B0")]
	private static extern int PitchDetectorDebug(float[] data);

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x80E358", Offset = "0x80E358", VA = "0x80E358")]
	private void Start()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x80E35C", Offset = "0x80E35C", VA = "0x80E35C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x80E88C", Offset = "0x80E88C", VA = "0x80E88C")]
	private Vector3 Plot(float[] data, int num, float x0, float y0, float w, float h, Color col, float thr)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x80EA24", Offset = "0x80EA24", VA = "0x80EA24")]
	private void OnRenderObject()
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x80ECA0", Offset = "0x80ECA0", VA = "0x80ECA0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x80EEC0", Offset = "0x80EEC0", VA = "0x80EEC0")]
	public PitchDetectDemo()
	{
	}
}
[Token(Token = "0x20000C1")]
public class PlayerSetup : MonoBehaviour
{
	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject Obj_Viewport;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject Player_VoiceAim;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject TargetAim;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject Tar;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private GameObject[] Obj_Tar;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool vis_done;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool vis_startSet;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool vis_setting;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool vis_setOfset;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Mic_visor TheMic;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject silentwarning;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private List<float> compiler;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int silentAvgAmount;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int avgIndex;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float freqAverage;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool silentDone;

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x81C678", Offset = "0x81C678", VA = "0x81C678")]
	private void Start()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x81C6F8", Offset = "0x81C6F8", VA = "0x81C6F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x81C72C", Offset = "0x81C72C", VA = "0x81C72C")]
	private void setupRay()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x81D130", Offset = "0x81D130", VA = "0x81D130")]
	private void setupSilence()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x81D3D4", Offset = "0x81D3D4", VA = "0x81D3D4")]
	public PlayerSetup()
	{
	}
}
[Token(Token = "0x20000C2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x223E84", Offset = "0x223E84")]
public class DemoPlayerController : MonoBehaviour
{
	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Camera mainCamera;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private CharacterController characterController;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float movementSpeed;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float rotationX;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float rotationY;

	[Token(Token = "0x400072B")]
	private const float clampAngleDegrees = 80f;

	[Token(Token = "0x400072C")]
	private const float sensitivity = 2f;

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x3E9084", Offset = "0x3E9084", VA = "0x3E9084")]
	private void Start()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x3E915C", Offset = "0x3E915C", VA = "0x3E915C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x3E94AC", Offset = "0x3E94AC", VA = "0x3E94AC")]
	private void SetCursorLock(bool lockCursor)
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x3E94EC", Offset = "0x3E94EC", VA = "0x3E94EC")]
	public DemoPlayerController()
	{
	}
}
[Token(Token = "0x20000C3")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x223EF4", Offset = "0x223EF4")]
public class ResonanceAudioDemoCubeController : MonoBehaviour
{
	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Material material;

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x427170", Offset = "0x427170", VA = "0x427170")]
	private void Start()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x4271F8", Offset = "0x4271F8", VA = "0x4271F8")]
	public void SetGazedAt(bool gazedAt)
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x42726C", Offset = "0x42726C", VA = "0x42726C")]
	public void TeleportRandomly()
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x4273B4", Offset = "0x4273B4", VA = "0x4273B4")]
	public ResonanceAudioDemoCubeController()
	{
	}
}
[Token(Token = "0x20000C4")]
public class ResonanceAudioDemoManager : MonoBehaviour
{
	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Camera mainCamera;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ResonanceAudioDemoCubeController cube;

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x4273BC", Offset = "0x4273BC", VA = "0x4273BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x4273C8", Offset = "0x4273C8", VA = "0x4273C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x427670", Offset = "0x427670", VA = "0x427670")]
	public ResonanceAudioDemoManager()
	{
	}
}
[Token(Token = "0x20000C5")]
public static class ResonanceAudio
{
	[StructLayout(0)]
	[Token(Token = "0x2000264")]
	private class RoomProperties
	{
		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float positionX;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float positionY;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float positionZ;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rotationX;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rotationY;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float rotationZ;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float rotationW;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float dimensionsX;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float dimensionsY;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float dimensionsZ;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ResonanceAudioRoomManager.SurfaceMaterial materialLeft;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public ResonanceAudioRoomManager.SurfaceMaterial materialRight;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ResonanceAudioRoomManager.SurfaceMaterial materialBottom;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public ResonanceAudioRoomManager.SurfaceMaterial materialTop;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ResonanceAudioRoomManager.SurfaceMaterial materialFront;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public ResonanceAudioRoomManager.SurfaceMaterial materialBack;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float reflectionScalar;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float reverbGain;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float reverbTime;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float reverbBrightness;

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x81F510", Offset = "0x81F510", VA = "0x81F510")]
		public RoomProperties()
		{
		}
	}

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Transform listenerTransform;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly Color listenerDirectivityColor;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static readonly Color sourceDirectivityColor;

	[Token(Token = "0x4000733")]
	public const float distanceEpsilon = 0.01f;

	[Token(Token = "0x4000734")]
	public const float maxDistanceLimit = 1000000f;

	[Token(Token = "0x4000735")]
	public const float minDistanceLimit = 990099f;

	[Token(Token = "0x4000736")]
	public const float maxGainDb = 24f;

	[Token(Token = "0x4000737")]
	public const float minGainDb = -24f;

	[Token(Token = "0x4000738")]
	public const float maxReverbBrightness = 1f;

	[Token(Token = "0x4000739")]
	public const float minReverbBrightness = -1f;

	[Token(Token = "0x400073A")]
	public const float maxReverbTime = 10f;

	[Token(Token = "0x400073B")]
	public const float maxReflectivity = 2f;

	[Token(Token = "0x400073C")]
	public const int maxNumOcclusionHits = 12;

	[Token(Token = "0x400073D")]
	public const float occlusionDetectionInterval = 0.2f;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Matrix4x4 flipZ;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static RaycastHit[] occlusionHits;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static int occlusionMaskValue;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private static float[] roomPosition;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static RoomProperties roomProperties;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private static IntPtr roomPropertiesPtr;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static Matrix4x4 transformMatrix;

	[Token(Token = "0x4000745")]
	private const string pluginName = "audiopluginresonanceaudio";

	[Token(Token = "0x170000E4")]
	public static Transform ListenerTransform
	{
		[Token(Token = "0x6000554")]
		[Address(RVA = "0x81D3F4", Offset = "0x81D3F4", VA = "0x81D3F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x81D574", Offset = "0x81D574", VA = "0x81D574")]
	public static void UpdateAudioListener(ResonanceAudioListener listener)
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x81D820", Offset = "0x81D820", VA = "0x81D820")]
	public static void DisableRoomEffects()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x81D9E0", Offset = "0x81D9E0", VA = "0x81D9E0")]
	public static void UpdateRoom(ResonanceAudioRoom room)
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x81DDCC", Offset = "0x81DDCC", VA = "0x81DDCC")]
	public static void UpdateReverbProbe(ResonanceAudioReverbProbe reverbPobe)
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x81E16C", Offset = "0x81E16C", VA = "0x81E16C")]
	public static bool StartRecording()
	{
		return default(bool);
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x81E174", Offset = "0x81E174", VA = "0x81E174")]
	public static bool StopRecordingAndSaveToFile(string filePath, bool seamless)
	{
		return default(bool);
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x81E17C", Offset = "0x81E17C", VA = "0x81E17C")]
	public static void InitializeReverbComputer(float[] vertices, int[] triangles, int[] materialIndices, float scatteringCoefficient)
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x81E180", Offset = "0x81E180", VA = "0x81E180")]
	public static bool ComputeRt60sAndProxyRoom(ResonanceAudioReverbProbe reverbProbe, int totalNumPaths, int numPathsPerBatch, int maxDepth, float energyThreshold, float listenerSphereRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x81E188", Offset = "0x81E188", VA = "0x81E188")]
	public static float ComputeOcclusion(Transform sourceTransform)
	{
		return default(float);
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x81D644", Offset = "0x81D644", VA = "0x81D644")]
	public static float ConvertAmplitudeFromDb(float db)
	{
		return default(float);
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x81E518", Offset = "0x81E518", VA = "0x81E518")]
	public static Vector2[] Generate2dPolarPattern(float alpha, float order, int resolution)
	{
		return null;
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x81E6A8", Offset = "0x81E6A8", VA = "0x81E6A8")]
	private static void ConvertAudioTransformFromUnity(ref Vector3 position, ref Quaternion rotation)
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x81EC94", Offset = "0x81EC94", VA = "0x81EC94")]
	private static void SetProxyRoomProperties(ResonanceAudioReverbProbe reverbProbe, RoomProperties proxyRoomProperties)
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x81DBF8", Offset = "0x81DBF8", VA = "0x81DBF8")]
	private static void UpdateRoomProperties(ResonanceAudioRoom room)
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x81DFF4", Offset = "0x81DFF4", VA = "0x81DFF4")]
	private static void UpdateRoomProperties(ResonanceAudioReverbProbe reverbProbe)
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x81EE34", Offset = "0x81EE34", VA = "0x81EE34")]
	private static void FillGeometryOfRoomProperties(Vector3 position, Quaternion rotation, Vector3 scale)
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x81F034", Offset = "0x81F034", VA = "0x81F034")]
	private static void FillWallMaterialsOfRoomProperties(ResonanceAudioRoomManager.SurfaceMaterial leftWall, ResonanceAudioRoomManager.SurfaceMaterial rightWall, ResonanceAudioRoomManager.SurfaceMaterial floor, ResonanceAudioRoomManager.SurfaceMaterial ceiling, ResonanceAudioRoomManager.SurfaceMaterial frontWall, ResonanceAudioRoomManager.SurfaceMaterial backWall)
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x81F174", Offset = "0x81F174", VA = "0x81F174")]
	private static void FillModifiersOfRoomProperties(float reverbGainDb, float reverbTime, float reverbBrightness, float reflectivity)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000567")]
	[Address(RVA = "0x81D6E0", Offset = "0x81D6E0", VA = "0x81D6E0")]
	private static extern void SetListenerGain(float gain);

	[PreserveSig]
	[Token(Token = "0x6000568")]
	[Address(RVA = "0x81D780", Offset = "0x81D780", VA = "0x81D780")]
	private static extern void SetListenerStereoSpeakerMode(bool enableStereoSpeakerMode);

	[PreserveSig]
	[Token(Token = "0x6000569")]
	[Address(RVA = "0x81D930", Offset = "0x81D930", VA = "0x81D930")]
	private static extern void SetRoomProperties(IntPtr roomProperties, float[] rt60s);
}
[Token(Token = "0x20000C6")]
public class ResonanceAudioAcousticMesh
{
	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x229F68", Offset = "0x229F68")]
	private Mesh <mesh>k__BackingField;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x229F78", Offset = "0x229F78")]
	private GameObject <sourceObject>k__BackingField;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool isIncludedByObjectFiltering;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private ResonanceAudioRoomManager.SurfaceMaterial[] surfaceMaterialsFromSubMesh;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RangeInt[] triangleRangesFromSubMesh;

	[Token(Token = "0x400074B")]
	private const int unityMaxNumVerticesPerMesh = 65000;

	[Token(Token = "0x400074C")]
	private const int maxNumSubMeshes = 256;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Material visualizationMaterial;

	[Token(Token = "0x170000E5")]
	public Mesh mesh
	{
		[Token(Token = "0x600056B")]
		[Address(RVA = "0x81F518", Offset = "0x81F518", VA = "0x81F518")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C718", Offset = "0x22C718")]
		get
		{
			return null;
		}
		[Token(Token = "0x600056C")]
		[Address(RVA = "0x81F520", Offset = "0x81F520", VA = "0x81F520")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C728", Offset = "0x22C728")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E6")]
	public GameObject sourceObject
	{
		[Token(Token = "0x600056D")]
		[Address(RVA = "0x81F528", Offset = "0x81F528", VA = "0x81F528")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C738", Offset = "0x22C738")]
		get
		{
			return null;
		}
		[Token(Token = "0x600056E")]
		[Address(RVA = "0x81F530", Offset = "0x81F530", VA = "0x81F530")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C748", Offset = "0x22C748")]
		private set
		{
		}
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x81F538", Offset = "0x81F538", VA = "0x81F538")]
	public static ResonanceAudioAcousticMesh GenerateFromMeshFilter(MeshFilter meshFilter, Shader surfaceMaterialShader)
	{
		return null;
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x820128", Offset = "0x820128", VA = "0x820128")]
	public static ResonanceAudioAcousticMesh GenerateFromTerrain(Terrain terrain, Shader surfaceMaterialShader)
	{
		return null;
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x820B44", Offset = "0x820B44", VA = "0x820B44")]
	public int[] GetSurfaceMaterialIndicesFromTriangle()
	{
		return null;
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x820CE0", Offset = "0x820CE0", VA = "0x820CE0")]
	public void SetSurfaceMaterialToAllSubMeshes(ResonanceAudioRoomManager.SurfaceMaterial surfaceMaterial)
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x820EC8", Offset = "0x820EC8", VA = "0x820EC8")]
	public void SetSurfaceMaterialToSubMesh(ResonanceAudioRoomManager.SurfaceMaterial surfaceMaterial, int subMeshIndex)
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x8211D0", Offset = "0x8211D0", VA = "0x8211D0")]
	public bool Render()
	{
		return default(bool);
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x82136C", Offset = "0x82136C", VA = "0x82136C")]
	public bool IsIncluded()
	{
		return default(bool);
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x821464", Offset = "0x821464", VA = "0x821464")]
	public bool IsSubMeshTriangular(int subMeshIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x81F80C", Offset = "0x81F80C", VA = "0x81F80C")]
	private static int CountTriangleIndices(Mesh sourceMesh)
	{
		return default(int);
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x82046C", Offset = "0x82046C", VA = "0x82046C")]
	private static void SubSampleHeightMap(int originalM, int originalN, out int m, out int n, out int subSampleStep, out int subSampledNumTriangleIndices)
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x81F89C", Offset = "0x81F89C", VA = "0x81F89C")]
	private void InitializeMesh(int numTriangleIndices, int numVertices, out int[] triangles, out Vector3[] vertices)
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x81FF84", Offset = "0x81FF84", VA = "0x81FF84")]
	private void InitializeSubMeshMaterials()
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x820068", Offset = "0x820068", VA = "0x820068")]
	private void InitializeVisualizationMaterial(Shader surfaceMaterialShader)
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x81F9D8", Offset = "0x81F9D8", VA = "0x81F9D8")]
	private void FillVerticesAndTrianglesFromMesh(Mesh sourceMesh, Transform sourceObjectTransform, ref Vector3[] vertices, ref int[] triangles)
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x82051C", Offset = "0x82051C", VA = "0x82051C")]
	private void FillTrianglesAndVerticesFromHeightMap(Vector3 terrainPosition, Vector3 terrainSize, float[,] heightMap, int m, int n, int subSampleStep, ref int[] triangles, ref Vector3[] vertices)
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x8214B0", Offset = "0x8214B0", VA = "0x8214B0")]
	private void SetSubMeshEnds()
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x820D54", Offset = "0x820D54", VA = "0x820D54")]
	private void SetSubMeshSurfaceMaterials()
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x81F894", Offset = "0x81F894", VA = "0x81F894")]
	public ResonanceAudioAcousticMesh()
	{
	}
}
[Token(Token = "0x20000C7")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x223F64", Offset = "0x223F64")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x223F64", Offset = "0x223F64")]
[ExecuteInEditMode]
public class ResonanceAudioListener : MonoBehaviour
{
	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x229F88", Offset = "0x229F88")]
	public float globalGainDb;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x229FBC", Offset = "0x229FBC")]
	public LayerMask occlusionMask;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x229FF0", Offset = "0x229FF0")]
	public bool stereoSpeakerModeEnabled;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22A024", Offset = "0x22A024")]
	public bool recorderSeamless;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22A058", Offset = "0x22A058")]
	public string recorderSourceTag;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22A08C", Offset = "0x22A08C")]
	private bool <IsRecording>k__BackingField;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[SerializeField]
	private bool recorderFoldout;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<AudioSource> recorderTaggedSources;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private double recorderStartTime;

	[Token(Token = "0x170000E7")]
	public bool IsRecording
	{
		[Token(Token = "0x6000581")]
		[Address(RVA = "0x427678", Offset = "0x427678", VA = "0x427678")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C758", Offset = "0x22C758")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000582")]
		[Address(RVA = "0x427680", Offset = "0x427680", VA = "0x427680")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C768", Offset = "0x22C768")]
		private set
		{
		}
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x427688", Offset = "0x427688", VA = "0x427688")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x427730", Offset = "0x427730", VA = "0x427730")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x4279F8", Offset = "0x4279F8", VA = "0x4279F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x427CB4", Offset = "0x427CB4", VA = "0x427CB4")]
	public double GetCurrentRecordDuration()
	{
		return default(double);
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x427CF0", Offset = "0x427CF0", VA = "0x427CF0")]
	public void StartSoundfieldRecorder()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x4277E0", Offset = "0x4277E0", VA = "0x4277E0")]
	public void StopSoundfieldRecorder(string filePath)
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x427AA8", Offset = "0x427AA8", VA = "0x427AA8")]
	private void UpdateTaggedSources()
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x427FDC", Offset = "0x427FDC", VA = "0x427FDC")]
	public ResonanceAudioListener()
	{
	}
}
[Token(Token = "0x20000C8")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x22400C", Offset = "0x22400C")]
public class ResonanceAudioMaterialMap : ScriptableObject
{
	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Color[] surfaceMaterialColors;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private ResonanceAudioRoomManager.SurfaceMaterialDictionary surfaceMaterialFromGuid;

	[Token(Token = "0x4000759")]
	private const ResonanceAudioRoomManager.SurfaceMaterial defaultSurfaceMaterial = ResonanceAudioRoomManager.SurfaceMaterial.Transparent;

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x428050", Offset = "0x428050", VA = "0x428050")]
	public List<string> GuidList()
	{
		return null;
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x4280D0", Offset = "0x4280D0", VA = "0x4280D0")]
	public ResonanceAudioRoomManager.SurfaceMaterial GetMaterialFromGuid(string guid)
	{
		return default(ResonanceAudioRoomManager.SurfaceMaterial);
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x428144", Offset = "0x428144", VA = "0x428144")]
	public void AddDefaultMaterialIfGuidUnmapped(string guid)
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x4281F4", Offset = "0x4281F4", VA = "0x4281F4")]
	public ResonanceAudioMaterialMap()
	{
	}
}
[Token(Token = "0x20000C9")]
public class ResonanceAudioMaterialMapper : ScriptableObject
{
	[Token(Token = "0x2000265")]
	private class UnityMaterialAcousticMeshData
	{
		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public List<ResonanceAudioAcousticMesh> acousticMeshes;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public List<int> subMeshIndices;

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x429950", Offset = "0x429950", VA = "0x429950")]
		public UnityMaterialAcousticMeshData()
		{
		}
	}

	[Token(Token = "0x2000266")]
	private class TerrainAcousticMeshData
	{
		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public List<ResonanceAudioAcousticMesh> acousticMeshes;

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x429A08", Offset = "0x429A08", VA = "0x429A08")]
		public TerrainAcousticMeshData()
		{
		}
	}

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private ResonanceAudioMaterialMap materialMap;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<string, UnityMaterialAcousticMeshData> unityMaterialAcousticMeshDataFromGuid;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Dictionary<string, TerrainAcousticMeshData> terrainAcousticMeshDataFromGuid;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LayerMask reverbLayerMask;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool includeNonStaticGameObjects;

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x428A14", Offset = "0x428A14", VA = "0x428A14")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x428AC0", Offset = "0x428AC0", VA = "0x428AC0")]
	public void ApplyMaterialMapping(MeshRenderer[] meshRenderers, List<string>[] guidsForMeshRenderers, Terrain[] activeTerrains, string[] guidsForTerrains, Shader surfaceMaterialShader)
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x4294B4", Offset = "0x4294B4", VA = "0x4294B4")]
	public void RenderAcousticMeshes()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x42955C", Offset = "0x42955C", VA = "0x42955C")]
	public List<ResonanceAudioAcousticMesh> GetIncludedAcousticMeshes()
	{
		return null;
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x428B28", Offset = "0x428B28", VA = "0x428B28")]
	private void BuildUnityMaterialData(MeshRenderer[] meshRenderers, List<string>[] guidsForMeshRenderers, Shader surfaceMaterialShader)
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x428EA0", Offset = "0x428EA0", VA = "0x428EA0")]
	private void BuildTerrainData(Terrain[] activeTerrains, string[] guidsForTerrains, Shader surfaceMaterialShader)
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x4290DC", Offset = "0x4290DC", VA = "0x4290DC")]
	private void ApplyMaterialMappingToGuids(List<string> guids)
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x429A8C", Offset = "0x429A8C", VA = "0x429A8C")]
	private void ApplySurfaceMaterialToGameObjects(ResonanceAudioRoomManager.SurfaceMaterial surfaceMaterial, string guid)
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x429E40", Offset = "0x429E40", VA = "0x429E40")]
	private void ApplySurfaceMaterialToTerrains(ResonanceAudioRoomManager.SurfaceMaterial surfaceMaterial, string guid)
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x429218", Offset = "0x429218", VA = "0x429218")]
	private void ApplyObjectFiltering()
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x429F40", Offset = "0x429F40", VA = "0x429F40")]
	private bool IsIncludedByObjectFiltering(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x429FC0", Offset = "0x429FC0", VA = "0x429FC0")]
	public ResonanceAudioMaterialMapper()
	{
	}
}
[Token(Token = "0x20000CA")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x224060", Offset = "0x224060")]
[ExecuteInEditMode]
public class ResonanceAudioMaterialMapperUpdater : MonoBehaviour
{
	[Token(Token = "0x2000267")]
	public delegate void RefreshMaterialMapperDelegate();

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public RefreshMaterialMapperDelegate RefreshMaterialMapper;

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x429FF4", Offset = "0x429FF4", VA = "0x429FF4")]
	private void Update()
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x42A270", Offset = "0x42A270", VA = "0x42A270")]
	public ResonanceAudioMaterialMapperUpdater()
	{
	}
}
[Token(Token = "0x20000CB")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x2240A8", Offset = "0x2240A8")]
[ExecuteInEditMode]
public class ResonanceAudioReverbProbe : MonoBehaviour
{
	[Token(Token = "0x2000268")]
	public enum RegionShape
	{
		[Token(Token = "0x400149A")]
		Sphere,
		[Token(Token = "0x400149B")]
		Box
	}

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22A0EC", Offset = "0x22A0EC")]
	public float[] rt60s;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22A120", Offset = "0x22A120")]
	public float reverbGainDb;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22A154", Offset = "0x22A154")]
	public float reverbBrightness;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22A188", Offset = "0x22A188")]
	public float reverbTime;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22A1BC", Offset = "0x22A1BC")]
	public RegionShape regionShape;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22A1F0", Offset = "0x22A1F0")]
	public Vector3 boxRegionSize;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22A224", Offset = "0x22A224")]
	public float sphereRegionRadius;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22A258", Offset = "0x22A258")]
	public bool onlyApplyWhenVisible;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 proxyRoomPosition;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Quaternion proxyRoomRotation;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 proxyRoomSize;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public ResonanceAudioRoomManager.SurfaceMaterial proxyRoomLeftWall;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ResonanceAudioRoomManager.SurfaceMaterial proxyRoomRightWall;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public ResonanceAudioRoomManager.SurfaceMaterial proxyRoomFloor;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ResonanceAudioRoomManager.SurfaceMaterial proxyRoomCeiling;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public ResonanceAudioRoomManager.SurfaceMaterial proxyRoomBackWall;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ResonanceAudioRoomManager.SurfaceMaterial proxyRoomFrontWall;

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x42A2C4", Offset = "0x42A2C4", VA = "0x42A2C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x42A3C4", Offset = "0x42A3C4", VA = "0x42A3C4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x42A4BC", Offset = "0x42A4BC", VA = "0x42A4BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x42A534", Offset = "0x42A534", VA = "0x42A534")]
	public float GetScaledSphericalRegionRadius()
	{
		return default(float);
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x42A618", Offset = "0x42A618", VA = "0x42A618")]
	public Vector3 GetScaledBoxRegionSize()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x42A6EC", Offset = "0x42A6EC", VA = "0x42A6EC")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x42A8C0", Offset = "0x42A8C0", VA = "0x42A8C0")]
	public ResonanceAudioReverbProbe()
	{
	}
}
[Token(Token = "0x20000CC")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x2240F0", Offset = "0x2240F0")]
public class ResonanceAudioRoom : MonoBehaviour
{
	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22A28C", Offset = "0x22A28C")]
	public ResonanceAudioRoomManager.SurfaceMaterial leftWall;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22A2C0", Offset = "0x22A2C0")]
	public ResonanceAudioRoomManager.SurfaceMaterial rightWall;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22A2F4", Offset = "0x22A2F4")]
	public ResonanceAudioRoomManager.SurfaceMaterial floor;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22A328", Offset = "0x22A328")]
	public ResonanceAudioRoomManager.SurfaceMaterial ceiling;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22A35C", Offset = "0x22A35C")]
	public ResonanceAudioRoomManager.SurfaceMaterial backWall;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22A390", Offset = "0x22A390")]
	public ResonanceAudioRoomManager.SurfaceMaterial frontWall;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22A3C4", Offset = "0x22A3C4")]
	public float reflectivity;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22A3F8", Offset = "0x22A3F8")]
	public float reverbGainDb;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22A42C", Offset = "0x22A42C")]
	public float reverbBrightness;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22A460", Offset = "0x22A460")]
	public float reverbTime;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22A494", Offset = "0x22A494")]
	public Vector3 size;

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x42AA10", Offset = "0x42AA10", VA = "0x42AA10")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x42AB10", Offset = "0x42AB10", VA = "0x42AB10")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x42AC08", Offset = "0x42AC08", VA = "0x42AC08")]
	private void Update()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x42AC80", Offset = "0x42AC80", VA = "0x42AC80")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x42ADF8", Offset = "0x42ADF8", VA = "0x42ADF8")]
	public ResonanceAudioRoom()
	{
	}
}
[Token(Token = "0x20000CD")]
public static class ResonanceAudioRoomManager
{
	[Token(Token = "0x2000269")]
	public enum SurfaceMaterial
	{
		[Token(Token = "0x400149D")]
		Transparent,
		[Token(Token = "0x400149E")]
		AcousticCeilingTiles,
		[Token(Token = "0x400149F")]
		BrickBare,
		[Token(Token = "0x40014A0")]
		BrickPainted,
		[Token(Token = "0x40014A1")]
		ConcreteBlockCoarse,
		[Token(Token = "0x40014A2")]
		ConcreteBlockPainted,
		[Token(Token = "0x40014A3")]
		CurtainHeavy,
		[Token(Token = "0x40014A4")]
		FiberglassInsulation,
		[Token(Token = "0x40014A5")]
		GlassThin,
		[Token(Token = "0x40014A6")]
		GlassThick,
		[Token(Token = "0x40014A7")]
		Grass,
		[Token(Token = "0x40014A8")]
		LinoleumOnConcrete,
		[Token(Token = "0x40014A9")]
		Marble,
		[Token(Token = "0x40014AA")]
		Metal,
		[Token(Token = "0x40014AB")]
		ParquetOnConcrete,
		[Token(Token = "0x40014AC")]
		PlasterRough,
		[Token(Token = "0x40014AD")]
		PlasterSmooth,
		[Token(Token = "0x40014AE")]
		PlywoodPanel,
		[Token(Token = "0x40014AF")]
		PolishedConcreteOrTile,
		[Token(Token = "0x40014B0")]
		Sheetrock,
		[Token(Token = "0x40014B1")]
		WaterOrIceSurface,
		[Token(Token = "0x40014B2")]
		WoodCeiling,
		[Token(Token = "0x40014B3")]
		WoodPanel
	}

	[Serializable]
	[Token(Token = "0x200026A")]
	public class SurfaceMaterialDictionary : Dictionary<string, SurfaceMaterial>, ISerializationCallbackReceiver
	{
		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<string> guids;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private List<SurfaceMaterial> surfaceMaterials;

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x42C41C", Offset = "0x42C41C", VA = "0x42C41C")]
		public SurfaceMaterialDictionary()
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x42C4E0", Offset = "0x42C4E0", VA = "0x42C4E0", Slot = "32")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x42C6A8", Offset = "0x42C6A8", VA = "0x42C6A8", Slot = "33")]
		public void OnAfterDeserialize()
		{
		}
	}

	[Token(Token = "0x200026B")]
	private struct RoomEffectsRegion
	{
		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ResonanceAudioRoom room;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ResonanceAudioReverbProbe reverbProbe;

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x42C2E0", Offset = "0x42C2E0", VA = "0x42C2E0")]
		public RoomEffectsRegion(ResonanceAudioRoom room, ResonanceAudioReverbProbe reverbProbe)
		{
		}
	}

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<RoomEffectsRegion> roomEffectsRegions;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static Bounds bounds;

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x42AECC", Offset = "0x42AECC", VA = "0x42AECC")]
	public static float ComputeRoomEffectsGain(Vector3 sourcePosition)
	{
		return default(float);
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x42AA88", Offset = "0x42AA88", VA = "0x42AA88")]
	public static void UpdateRoom(ResonanceAudioRoom room)
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x42AB88", Offset = "0x42AB88", VA = "0x42AB88")]
	public static void RemoveRoom(ResonanceAudioRoom room)
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x42A33C", Offset = "0x42A33C", VA = "0x42A33C")]
	public static void UpdateReverbProbe(ResonanceAudioReverbProbe reverbProbe)
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x42A43C", Offset = "0x42A43C", VA = "0x42A43C")]
	public static void RemoveReverbProbe(ResonanceAudioReverbProbe reverbProbe)
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x42B93C", Offset = "0x42B93C", VA = "0x42B93C")]
	private static void UpdateRoomEffectsRegions(ResonanceAudioRoom room, bool isEnabled)
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x42C0C8", Offset = "0x42C0C8", VA = "0x42C0C8")]
	private static void UpdateRoomEffectsRegions(ResonanceAudioReverbProbe reverbProbe, bool isEnabled)
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x42BB54", Offset = "0x42BB54", VA = "0x42BB54")]
	private static void UpdateRoomEffects()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x42B574", Offset = "0x42B574", VA = "0x42B574")]
	private static float ComputeRoomEffectsAttenuation(float distanceToRoom)
	{
		return default(float);
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x42B600", Offset = "0x42B600", VA = "0x42B600")]
	private static bool IsListenerInsideRoom(ResonanceAudioRoom room)
	{
		return default(bool);
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x42BD48", Offset = "0x42BD48", VA = "0x42BD48")]
	private static bool IsListenerInsideVisibleReverbProbe(ResonanceAudioReverbProbe reverbProbe)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000CE")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x224124", Offset = "0x224124")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x224124", Offset = "0x224124")]
[ExecuteInEditMode]
public class ResonanceAudioSource : MonoBehaviour
{
	[Token(Token = "0x200026C")]
	public enum Quality
	{
		[Token(Token = "0x40014B9")]
		Stereo,
		[Token(Token = "0x40014BA")]
		Low,
		[Token(Token = "0x40014BB")]
		High
	}

	[Token(Token = "0x200026D")]
	private enum EffectData
	{
		[Token(Token = "0x40014BD")]
		Id,
		[Token(Token = "0x40014BE")]
		DistanceAttenuation,
		[Token(Token = "0x40014BF")]
		RoomEffectsGain,
		[Token(Token = "0x40014C0")]
		Gain,
		[Token(Token = "0x40014C1")]
		DirectivityAlpha,
		[Token(Token = "0x40014C2")]
		DirectivitySharpness,
		[Token(Token = "0x40014C3")]
		ListenerDirectivityAlpha,
		[Token(Token = "0x40014C4")]
		ListenerDirectivitySharpness,
		[Token(Token = "0x40014C5")]
		Occlusion,
		[Token(Token = "0x40014C6")]
		Quality,
		[Token(Token = "0x40014C7")]
		NearFieldEffectGain,
		[Token(Token = "0x40014C8")]
		Volume
	}

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22A4C8", Offset = "0x22A4C8")]
	public bool bypassRoomEffects;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x22A4FC", Offset = "0x22A4FC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22A4FC", Offset = "0x22A4FC")]
	public float directivityAlpha;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x22A54C", Offset = "0x22A54C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22A54C", Offset = "0x22A54C")]
	public float directivitySharpness;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x22A5A0", Offset = "0x22A5A0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22A5A0", Offset = "0x22A5A0")]
	public float listenerDirectivityAlpha;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x22A5F0", Offset = "0x22A5F0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22A5F0", Offset = "0x22A5F0")]
	public float listenerDirectivitySharpness;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22A644", Offset = "0x22A644")]
	public float gainDb;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22A678", Offset = "0x22A678")]
	public bool nearFieldEffectEnabled;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x22A6AC", Offset = "0x22A6AC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22A6AC", Offset = "0x22A6AC")]
	public float nearFieldEffectGain;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22A700", Offset = "0x22A700")]
	public bool occlusionEnabled;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x22A734", Offset = "0x22A734")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22A734", Offset = "0x22A734")]
	public float occlusionIntensity;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x22A788", Offset = "0x22A788")]
	public Quality quality;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22A7BC", Offset = "0x22A7BC")]
	private AudioSource <audioSource>k__BackingField;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float currentOcclusion;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float nextOcclusionUpdate;

	[Token(Token = "0x170000E8")]
	public AudioSource audioSource
	{
		[Token(Token = "0x60005B6")]
		[Address(RVA = "0x42C7A4", Offset = "0x42C7A4", VA = "0x42C7A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C778", Offset = "0x22C778")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005B7")]
		[Address(RVA = "0x42C7AC", Offset = "0x42C7AC", VA = "0x42C7AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22C788", Offset = "0x22C788")]
		private set
		{
		}
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x42C7B4", Offset = "0x42C7B4", VA = "0x42C7B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x42C814", Offset = "0x42C814", VA = "0x42C814")]
	private void Update()
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x42C910", Offset = "0x42C910", VA = "0x42C910")]
	private void UpdateSource()
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x42CD60", Offset = "0x42CD60", VA = "0x42CD60")]
	public ResonanceAudioSource()
	{
	}
}
[Token(Token = "0x20000CF")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x2241CC", Offset = "0x2241CC")]
public class SetStartTime : MonoBehaviour
{
	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float startTime;

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x42E758", Offset = "0x42E758", VA = "0x42E758")]
	private void Start()
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x42E804", Offset = "0x42E804", VA = "0x42E804")]
	private void Update()
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x42E808", Offset = "0x42E808", VA = "0x42E808")]
	public SetStartTime()
	{
	}
}
[Token(Token = "0x20000D0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x22423C", Offset = "0x22423C")]
public class ShowPlayPos : MonoBehaviour
{
	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x42F4C0", Offset = "0x42F4C0", VA = "0x42F4C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x42F4C4", Offset = "0x42F4C4", VA = "0x42F4C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x42F5A0", Offset = "0x42F5A0", VA = "0x42F5A0")]
	public ShowPlayPos()
	{
	}
}
[Token(Token = "0x20000D1")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x2242AC", Offset = "0x2242AC")]
public class SilentAudioSource : MonoBehaviour
{
	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x42F5A8", Offset = "0x42F5A8", VA = "0x42F5A8")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x42F5AC", Offset = "0x42F5AC", VA = "0x42F5AC")]
	public SilentAudioSource()
	{
	}
}
[Token(Token = "0x20000D2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x22431C", Offset = "0x22431C")]
public class SineOsc : MonoBehaviour
{
	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float freq;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float amp;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float phase;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float st;

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x42F5B4", Offset = "0x42F5B4", VA = "0x42F5B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x42F5E0", Offset = "0x42F5E0", VA = "0x42F5E0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x42F5E4", Offset = "0x42F5E4", VA = "0x42F5E4")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x42F748", Offset = "0x42F748", VA = "0x42F748")]
	public SineOsc()
	{
	}
}
[Serializable]
[Token(Token = "0x20000D3")]
public class SpectrumTexture
{
	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Texture2D spectrum;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int pixelWidth;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float cyclePerSecond;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float progress;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool mipmap;

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x42FE34", Offset = "0x42FE34", VA = "0x42FE34")]
	public void Init()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x431D84", Offset = "0x431D84", VA = "0x431D84")]
	public void Update(Color currentColor, float deltaTime)
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x43347C", Offset = "0x43347C", VA = "0x43347C")]
	public SpectrumTexture()
	{
	}
}
[Token(Token = "0x20000D4")]
public class Sound_analize : MonoBehaviour
{
	[Token(Token = "0x200026E")]
	private class PitchTime
	{
		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float pitch;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float dt;

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x432584", Offset = "0x432584", VA = "0x432584")]
		public PitchTime(float pitch, float dt)
		{
		}
	}

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool debug_SoundAnlize;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject dialog;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float holdingNoteTreshold;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dbdelaySpeed;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float db_prev;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool lookingdbmin;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public List<float> _samples;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<float> _freqBand;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public List<float> _bandBuffer;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float[] _bufferDecrease;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int samp;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int band;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Sound_D sound;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Sound_D prev_Sound;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public TextMeshPro note_midi;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public MicrophonePitchDetector detector;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public int maxMidi;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public int minMidi;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public GameObject noteIndicatorPrefab;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject noteTitlePrefab;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public GameObject particlescript;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject mistscript;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float avarageDelta;

	[Token(Token = "0x40007AD")]
	private const float secsPerScreen = 10f;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float dbThres;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float db_maxRecorded;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public TextMeshPro note_name;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public bool DisplayNote;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Note_data[] scale_data;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public Color default_Color;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x22A7CC", Offset = "0x22A7CC")]
	public SpectrumTexture spectrumTexture;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public SpectrumTexture DBTexture;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public float lowPassSpeedAlphaSpectrum;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public float lowPassSpeedSpectrum;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public Color lowPassedColorSpectrum;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public bool holdingNote;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public int holdingtime_frames;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public float noteMinimumLoudness;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float lastMidiNote;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float currentNote;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public float db_Norm_Multiplier;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public float db_Norm_SkewBottom;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float db_Norm_SkewTop;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public bool calibrationActive;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x155")]
	public bool calibrationReset;

	[Token(Token = "0x40007C3")]
	private const int calibrationNumSamples = 32;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private int calibrationSampleIdx;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private float[] calibrationSamples;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Queue<PitchTime> drawQueue;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public bool enableAdaptativeCalibration;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Sound_analize instance;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public int octaveJumpLowPass;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private int octaveJumpLowPassCounter;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public int jumpOutOfNoiseframes;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public int jumpMaxOutOfNoiseframes;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private int jumpOutOfNoiseframesCounter;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	public int jumpOutOfSignalframes;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private int jumpOutOfSignalframesCounter;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public int changeNoteframes;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private int changeNoteframesCounter;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	[HideInInspector]
	public float isMovingFast;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public float cutMovingTooFastThreshold;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public float minDB;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public float averageDB;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public float maxDB;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private float deltaTime;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private float lastTime;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private float lowPassedDB1;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private float lowPassedDB2;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private float lowPassedDB3;

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x42FDA8", Offset = "0x42FDA8", VA = "0x42FDA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x42FFE8", Offset = "0x42FFE8", VA = "0x42FFE8")]
	public void Init()
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x4302FC", Offset = "0x4302FC", VA = "0x4302FC")]
	private float GetClosest(List<float> midiFloats, float selected)
	{
		return default(float);
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x430420", Offset = "0x430420", VA = "0x430420")]
	private float GetClosestInOctave(List<float> midiFloats, float selected)
	{
		return default(float);
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x430670", Offset = "0x430670", VA = "0x430670")]
	public static void PlotPitch(float value)
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x43076C", Offset = "0x43076C", VA = "0x43076C")]
	public void LogPitch(List<float> pitchList, int samples, float db)
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x431094", Offset = "0x431094", VA = "0x431094")]
	public void FilterSignal(ref float newNote, float oldNote)
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x431364", Offset = "0x431364", VA = "0x431364")]
	public int OctaveDiff(float newNote, float oldNote, float thresh = 0.1f)
	{
		return default(int);
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x431458", Offset = "0x431458", VA = "0x431458")]
	public Color GetCurrentScaleColor()
	{
		return default(Color);
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x431510", Offset = "0x431510", VA = "0x431510")]
	private void Update()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x431970", Offset = "0x431970", VA = "0x431970")]
	private void UpdateSpectrumTexture()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x431B64", Offset = "0x431B64", VA = "0x431B64")]
	private void UpdareDBTexture()
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x4312B8", Offset = "0x4312B8", VA = "0x4312B8")]
	private float MtoF(float midi)
	{
		return default(float);
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x431E58", Offset = "0x431E58", VA = "0x431E58")]
	private float Get_DB_smooth_normilzed(float _db)
	{
		return default(float);
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x431FF8", Offset = "0x431FF8", VA = "0x431FF8")]
	private void makesamples(List<float> _Data, float _freq, int rate)
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x43153C", Offset = "0x43153C", VA = "0x43153C")]
	private void MakeFreqBands()
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x4316E4", Offset = "0x4316E4", VA = "0x4316E4")]
	private void BandBuffer()
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x432184", Offset = "0x432184", VA = "0x432184")]
	public static float Mod(float val, float mod)
	{
		return default(float);
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x432220", Offset = "0x432220", VA = "0x432220")]
	public static float Avg(List<float> val)
	{
		return default(float);
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x432368", Offset = "0x432368", VA = "0x432368")]
	public Sound_analize()
	{
	}
}
[Serializable]
[Token(Token = "0x20000D5")]
public struct Sound_D
{
	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x22A810", Offset = "0x22A810")]
	public float note;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x22A82C", Offset = "0x22A82C")]
	public float note_index;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int note_octave;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float note_hz;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float note_offset;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string note_name;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float db;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x22A848", Offset = "0x22A848")]
	public float dbnorm;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x22A860", Offset = "0x22A860")]
	public float dbnormSkewed;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float dbnormAverage;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float holdingNoteTime;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool silence;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float singTime;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float silenceTime;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float soundTime;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float blow;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float clear_note;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float clear_note_index;
}
[Token(Token = "0x20000D6")]
public class Sound_visor : MonoBehaviour
{
	[Token(Token = "0x40007EE")]
	private const int SAMPLE_SIZE = 1024;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float rmsValue;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float dbValue;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float pitchValue;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxVisualScl;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float keepPercent;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float visualModifier;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float smoothSpeed;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource source;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float[] samples;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float[] spectrum;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float sampleRate;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform[] visualList;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float[] visualScl;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int amnVisual;

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x4325AC", Offset = "0x4325AC", VA = "0x4325AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x432834", Offset = "0x432834", VA = "0x432834")]
	private void Update()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x432850", Offset = "0x432850", VA = "0x432850")]
	private void AnalyzeSound()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x432654", Offset = "0x432654", VA = "0x432654")]
	private void SpawnLine()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x432BD4", Offset = "0x432BD4", VA = "0x432BD4")]
	private void UpdateVisual()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x432F78", Offset = "0x432F78", VA = "0x432F78")]
	public Sound_visor()
	{
	}
}
[Token(Token = "0x20000D7")]
public class SpatializerUserParams : MonoBehaviour
{
	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool EnableSpatialization;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float DistanceAttn;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float FixedVolume;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float CustomRolloff;

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x432FA8", Offset = "0x432FA8", VA = "0x432FA8")]
	private void Start()
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x432FAC", Offset = "0x432FAC", VA = "0x432FAC")]
	private void Update()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x43315C", Offset = "0x43315C", VA = "0x43315C")]
	public SpatializerUserParams()
	{
	}
}
[Token(Token = "0x20000D8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x22438C", Offset = "0x22438C")]
public class SpeakerRouting : MonoBehaviour
{
	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int target;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool ready;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float rms;

	[PreserveSig]
	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x433178", Offset = "0x433178", VA = "0x433178")]
	private static extern void RoutingDemo_GetData(int target, float[] data, int numsamples, int numchannels);

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x433238", Offset = "0x433238", VA = "0x433238")]
	private void Start()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x433244", Offset = "0x433244", VA = "0x433244")]
	private void Update()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x433314", Offset = "0x433314", VA = "0x433314")]
	private void OnAudioFilterRead(float[] data, int numchannels)
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x433474", Offset = "0x433474", VA = "0x433474")]
	public SpeakerRouting()
	{
	}
}
[Token(Token = "0x20000D9")]
public class TentacleGrp_Behave : MonoBehaviour
{
	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x22A878", Offset = "0x22A878")]
	public GameObject tentaclesObjRoot;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject tenta_pref;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject tenta_Lookat;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int tentaAmount;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float radi;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool ifswiming;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tentacleSpeed;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 Gravityoftent;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public GameObject[] tentacleGuide;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float thepush;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _x;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _xpre;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float addist;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float tenta_dist;

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xE756B8", Offset = "0xE756B8", VA = "0xE756B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xE759E0", Offset = "0xE759E0", VA = "0xE759E0")]
	private void TentacleAnimTick()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xE75C70", Offset = "0xE75C70", VA = "0xE75C70")]
	public TentacleGrp_Behave()
	{
	}
}
[Token(Token = "0x20000DA")]
public class VoiceFXModulations : MonoBehaviour
{
	[Token(Token = "0x200026F")]
	public class RandomCurve
	{
		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private System.Random random;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float currValue;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float nextValue;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float phase;

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0xE76430", Offset = "0xE76430", VA = "0xE76430")]
		public float Evaluate(float freq, float minval, float maxval)
		{
			return default(float);
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0xE75FCC", Offset = "0xE75FCC", VA = "0xE75FCC")]
		public RandomCurve()
		{
		}
	}

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AudioMixer mixer;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public RandomCurve[] randomCurve;

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xE75EE8", Offset = "0xE75EE8", VA = "0xE75EE8")]
	private void Start()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xE7604C", Offset = "0xE7604C", VA = "0xE7604C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xE76504", Offset = "0xE76504", VA = "0xE76504")]
	public VoiceFXModulations()
	{
	}
}
[Token(Token = "0x20000DB")]
public class WeatherAnimator : MonoBehaviour
{
	[Token(Token = "0x2000270")]
	private class RandomTrack
	{
		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private System.Random random;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float minPeriod;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float maxPeriod;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float time;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float currPeriod;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float currVal;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float nextVal;

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0xE772B0", Offset = "0xE772B0", VA = "0xE772B0")]
		public RandomTrack(float minPeriod, float maxPeriod)
		{
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0xE76BA4", Offset = "0xE76BA4", VA = "0xE76BA4")]
		public float Update(float deltatime)
		{
			return default(float);
		}
	}

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float windSpeed;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float windLevel;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float rainLevel;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float thunderLevel;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float thunderDistance;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioMixer windMixer;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private System.Random random;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RandomTrack flutterLevel;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private RandomTrack baseCut1;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RandomTrack baseCut2;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private RandomTrack flashCut;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RandomTrack flashLevel;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float timeToNextThunder;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float thunderStartTime;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float thunderCutoffBase;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float thunderCutoffDecay;

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xE76570", Offset = "0xE76570", VA = "0xE76570")]
	private void Start()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xE76574", Offset = "0xE76574", VA = "0xE76574")]
	private void Update()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0xE76D04", Offset = "0xE76D04", VA = "0xE76D04")]
	private void Slider(string name, float minval, float maxval, ref float value)
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0xE76F74", Offset = "0xE76F74", VA = "0xE76F74")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0xE77160", Offset = "0xE77160", VA = "0xE77160")]
	public WeatherAnimator()
	{
	}
}
[Token(Token = "0x20000DC")]
public class test_skinMeshRenderer_SETcolor : MonoBehaviour
{
	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Color col;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public SkinnedMeshRenderer s_MeshRenderer;

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xE77AC0", Offset = "0xE77AC0", VA = "0xE77AC0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0xE77B74", Offset = "0xE77B74", VA = "0xE77B74")]
	public test_skinMeshRenderer_SETcolor()
	{
	}
}
[Token(Token = "0x20000DD")]
public class tower_element : MonoBehaviour
{
	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public vis_ampMaterialIO matIO_amp;

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0xE77B7C", Offset = "0xE77B7C", VA = "0xE77B7C")]
	public tower_element()
	{
	}
}
[Token(Token = "0x20000DE")]
public class vis_MaerialIO_jf : MonoBehaviour
{
	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float w;

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0xE77B84", Offset = "0xE77B84", VA = "0xE77B84")]
	private void Start()
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0xE77BE4", Offset = "0xE77BE4", VA = "0xE77BE4")]
	private void Update()
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0xE77C80", Offset = "0xE77C80", VA = "0xE77C80")]
	public vis_MaerialIO_jf()
	{
	}
}
[Token(Token = "0x20000DF")]
public class vis_MaterialIO_spectrum : MonoBehaviour
{
	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color bgColour;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color Colour;

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xE77C88", Offset = "0xE77C88", VA = "0xE77C88")]
	public void Intilize()
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xE77CE8", Offset = "0xE77CE8", VA = "0xE77CE8")]
	public void UpdateColor(Color bg, Color color)
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xE77E00", Offset = "0xE77E00", VA = "0xE77E00")]
	public vis_MaterialIO_spectrum()
	{
	}
}
[Token(Token = "0x20000E0")]
public class vis_MaterialInterface_Sphere : MonoBehaviour
{
	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x22A8AC", Offset = "0x22A8AC")]
	public float noiseAmount;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x22A8C4", Offset = "0x22A8C4")]
	public float noiseSpeed;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x22A8DC", Offset = "0x22A8DC")]
	public float glow_a;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x22A8F4", Offset = "0x22A8F4")]
	public float glow_w;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color colourNote;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color colourNote_next;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color colourEnv;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color[] theColorList;

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xE77E08", Offset = "0xE77E08", VA = "0xE77E08")]
	public void Intilize()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xE77E68", Offset = "0xE77E68", VA = "0xE77E68")]
	public void Animate()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xE78144", Offset = "0xE78144", VA = "0xE78144")]
	public vis_MaterialInterface_Sphere()
	{
	}
}
[Token(Token = "0x20000E1")]
public class vis_MaterialInterface_offset : MonoBehaviour
{
	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float w;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color note_colour;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color note_colour_closer;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x6000604")]
	[Address(RVA = "0xE7814C", Offset = "0xE7814C", VA = "0xE7814C")]
	public void Intilize()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0xE781AC", Offset = "0xE781AC", VA = "0xE781AC")]
	public void Animate()
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xE78320", Offset = "0xE78320", VA = "0xE78320")]
	public vis_MaterialInterface_offset()
	{
	}
}
[Token(Token = "0x20000E2")]
public class vis_ampMaterialIO : MonoBehaviour
{
	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xE78328", Offset = "0xE78328", VA = "0xE78328")]
	public void Intilize()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xE78388", Offset = "0xE78388", VA = "0xE78388")]
	public void LerpColor(Color note_colour, Color bg_colour, float w)
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0xE7851C", Offset = "0xE7851C", VA = "0xE7851C")]
	public vis_ampMaterialIO()
	{
	}
}
[Token(Token = "0x20000E3")]
public sealed class NatMicSamples : IAudioRecorder, IAudioProcessor, IDisposable
{
	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] _bufferOneS;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int position;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private FileStream outputStream;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int sampleRate;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int channelCount;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int totalSamples;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "DocAttribute", RVA = "0x22A90C", Offset = "0x22A90C")]
	public readonly string FilePath;

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x776678", Offset = "0x776678", VA = "0x776678")]
	[AttributeAttribute(Name = "DocAttribute", RVA = "0x22C798", Offset = "0x22C798")]
	public NatMicSamples(int sampleRate, [Optional] string filePath)
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x7766F0", Offset = "0x7766F0", VA = "0x7766F0", Slot = "5")]
	[AttributeAttribute(Name = "DocAttribute", RVA = "0x22C7CC", Offset = "0x22C7CC")]
	public void Dispose()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x776C4C", Offset = "0x776C4C", VA = "0x776C4C", Slot = "4")]
	private void NatMic.IAudioProcessor.OnSampleBuffer(float[] sampleBuffer, int sampleRate, int channelCount, long timestamp)
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x776734", Offset = "0x776734", VA = "0x776734")]
	private void WriteHeader()
	{
	}
}
[Token(Token = "0x20000E4")]
public sealed class JellySamples : IAudioRecorder, IAudioProcessor, IDisposable
{
	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] _sampleBuffer;

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x54CE78", Offset = "0x54CE78", VA = "0x54CE78")]
	public JellySamples()
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x54CE80", Offset = "0x54CE80", VA = "0x54CE80", Slot = "5")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x54CE84", Offset = "0x54CE84", VA = "0x54CE84", Slot = "4")]
	private void NatMic.IAudioProcessor.OnSampleBuffer(float[] sampleBuffer, int sampleRate, int channelCount, long timestamp)
	{
	}
}
[Token(Token = "0x20000E5")]
public class NatMicTest : MonoBehaviour
{
	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private JellySamples jellySamples;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IAudioDevice audioDevice;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Slider slider;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text text;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Text textSampleMin;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text textSampleMax;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float dbmin;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float dbmax;

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x776F80", Offset = "0x776F80", VA = "0x776F80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x77719C", Offset = "0x77719C", VA = "0x77719C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x77785C", Offset = "0x77785C", VA = "0x77785C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x7771C8", Offset = "0x7771C8", VA = "0x7771C8")]
	private void DisplayValue(float[] sampleBuffer)
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x777928", Offset = "0x777928", VA = "0x777928")]
	public NatMicTest()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E6")]
public enum GlowType
{
	[Token(Token = "0x400084B")]
	CheapQuestGlow,
	[Token(Token = "0x400084C")]
	NiceDesktopGlow
}
[Token(Token = "0x20000E7")]
public class CameraSettings : MonoBehaviour
{
	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GlowType glowType;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GlowType last_glowType;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public MonoBehaviour glowQuest;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MonoBehaviour glowDesktop;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public MonoBehaviour glowDesktop2;

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x3CD718", Offset = "0x3CD718", VA = "0x3CD718")]
	private void Start()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x3CD71C", Offset = "0x3CD71C", VA = "0x3CD71C")]
	private void ChangeGlow()
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x3CD720", Offset = "0x3CD720", VA = "0x3CD720")]
	private void Update()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x3CD8AC", Offset = "0x3CD8AC", VA = "0x3CD8AC")]
	public CameraSettings()
	{
	}
}
[Token(Token = "0x20000E8")]
public class CameraSmooth : MonoBehaviour
{
	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Camera cameraTarget;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Camera cameraSelf;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool enableSmooth;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x22A940", Offset = "0x22A940")]
	public float lerpPositionRate;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x22A95C", Offset = "0x22A95C")]
	public float lerpRotationRate;

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x3CD8B4", Offset = "0x3CD8B4", VA = "0x3CD8B4")]
	public void Start()
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x3CDB4C", Offset = "0x3CDB4C", VA = "0x3CDB4C")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x3CDF48", Offset = "0x3CDF48", VA = "0x3CDF48")]
	public CameraSmooth()
	{
	}
}
[Token(Token = "0x20000E9")]
public class Changeunderwater : MonoBehaviour
{
	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Color lerpedcolor;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject particlescript;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color particlecolor;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color fogcolor;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material Underwatermaterial;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float startTime;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float speed;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public GameObject Musicscript;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Gradient myGradient;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float strobeDuration;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color col;

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x3CDF6C", Offset = "0x3CDF6C", VA = "0x3CDF6C")]
	private void Start()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x3CE014", Offset = "0x3CE014", VA = "0x3CE014")]
	private void Update()
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x3CE208", Offset = "0x3CE208", VA = "0x3CE208")]
	public Changeunderwater()
	{
	}
}
[Token(Token = "0x20000EA")]
public class ClipInputReader : MonoBehaviour
{
	[Token(Token = "0x2000271")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x224944", Offset = "0x224944")]
	private sealed class <Test2>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ClipInputReader <>4__this;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private AudioClip <rec>5__2;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float <sampleRatePerSecond>5__3;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private RAPTPitchDetector <pitchTracker>5__4;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <db>5__5;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <endTime>5__6;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timeCounter>5__7;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <recPos>5__8;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <lastPos>5__9;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <count>5__10;

		[Token(Token = "0x17000169")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C6D")]
			[Address(RVA = "0x3CF648", Offset = "0x3CF648", VA = "0x3CF648", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C6F")]
			[Address(RVA = "0x3CF6C8", Offset = "0x3CF6C8", VA = "0x3CF6C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x3CEFE8", Offset = "0x3CEFE8", VA = "0x3CEFE8")]
		[DebuggerHidden]
		public <Test2>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x3CF150", Offset = "0x3CF150", VA = "0x3CF150", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x3CF154", Offset = "0x3CF154", VA = "0x3CF154", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x3CF650", Offset = "0x3CF650", VA = "0x3CF650", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public List<AudioClip> audioClips;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int DominanteValue;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public PitchEvent onPitchDetected;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float sampleUpdateTime;

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x3CEDF4", Offset = "0x3CEDF4", VA = "0x3CEDF4")]
	private List<int> GetMidisFromClip(AudioClip clip, RAPTPitchDetector tracker)
	{
		return null;
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x3CEF44", Offset = "0x3CEF44", VA = "0x3CEF44")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x22C800", Offset = "0x22C800")]
	public void TestEditor()
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x3CEF68", Offset = "0x3CEF68", VA = "0x3CEF68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x22C834", Offset = "0x22C834")]
	public IEnumerator Test2()
	{
		return null;
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x3CF008", Offset = "0x3CF008", VA = "0x3CF008")]
	private float[] GenerateWaveform(float freq, float lengthSec, float sampleRate)
	{
		return null;
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x3CF13C", Offset = "0x3CF13C", VA = "0x3CF13C")]
	public ClipInputReader()
	{
	}
}
[Serializable]
[Token(Token = "0x20000EB")]
public class CoolDownEvent
{
	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float lastGoTime;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float cooldownTime;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float actualCooldownTime;

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x3D5B80", Offset = "0x3D5B80", VA = "0x3D5B80")]
	public CoolDownEvent(float cooldown)
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x3D5BA8", Offset = "0x3D5BA8", VA = "0x3D5BA8")]
	public CoolDownEvent()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x3D5BD4", Offset = "0x3D5BD4", VA = "0x3D5BD4")]
	public void ChangeCurrentCooldownTime(float newCD)
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x3D5BE0", Offset = "0x3D5BE0", VA = "0x3D5BE0")]
	public float GetCurrentCooldownTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x3D5BE8", Offset = "0x3D5BE8", VA = "0x3D5BE8")]
	public bool TryGo(float cd = -1f)
	{
		return default(bool);
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x3D5C54", Offset = "0x3D5C54", VA = "0x3D5C54")]
	public bool TryGoWithRandom(float randomness = 0.1f)
	{
		return default(bool);
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x3D4C18", Offset = "0x3D4C18", VA = "0x3D4C18")]
	public bool Go(float cd = -1f)
	{
		return default(bool);
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x3D5CA4", Offset = "0x3D5CA4", VA = "0x3D5CA4")]
	public bool Available()
	{
		return default(bool);
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x3D5CE0", Offset = "0x3D5CE0", VA = "0x3D5CE0")]
	public bool IsRunning()
	{
		return default(bool);
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x3D5D1C", Offset = "0x3D5D1C", VA = "0x3D5D1C")]
	public bool GoneForGreaterThan(float time)
	{
		return default(bool);
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x3D5D60", Offset = "0x3D5D60", VA = "0x3D5D60")]
	public float Get01Progress()
	{
		return default(float);
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x3D5DA0", Offset = "0x3D5DA0", VA = "0x3D5DA0")]
	public float GetElapsedTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x3D5DC8", Offset = "0x3D5DC8", VA = "0x3D5DC8")]
	public float GetTimeLeft()
	{
		return default(float);
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x3D5DFC", Offset = "0x3D5DFC", VA = "0x3D5DFC")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x3D5E0C", Offset = "0x3D5E0C", VA = "0x3D5E0C")]
	public static implicit operator bool(CoolDownEvent CD)
	{
		return default(bool);
	}
}
[Serializable]
[Token(Token = "0x20000EC")]
public class CrumpleMesh : MonoBehaviour
{
	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float scale;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float speed;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool recalculateNormals;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3[] baseVertices;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Perlin noise;

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x3D5E54", Offset = "0x3D5E54", VA = "0x3D5E54", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x3D5EBC", Offset = "0x3D5EBC", VA = "0x3D5EBC", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x3D623C", Offset = "0x3D623C", VA = "0x3D623C")]
	public CrumpleMesh()
	{
	}
}
[Token(Token = "0x20000ED")]
public class DebugLog : MonoBehaviour
{
	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TextMesh[] tmp;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Sound_analize sound;

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x3E79B0", Offset = "0x3E79B0", VA = "0x3E79B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x3E79B4", Offset = "0x3E79B4", VA = "0x3E79B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x3E7C4C", Offset = "0x3E7C4C", VA = "0x3E7C4C")]
	public DebugLog()
	{
	}
}
[Token(Token = "0x20000EE")]
public class DebugMic : MonoBehaviour
{
	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private MicrophonePitchDetector microphonePitchDetector;

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x3E7C54", Offset = "0x3E7C54", VA = "0x3E7C54")]
	private void Start()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x3E7D34", Offset = "0x3E7D34", VA = "0x3E7D34")]
	private void OnPitchDetected(List<float> arg0, int arg1, float arg2)
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x3E8014", Offset = "0x3E8014", VA = "0x3E8014")]
	private void Update()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x3E8018", Offset = "0x3E8018", VA = "0x3E8018")]
	public DebugMic()
	{
	}
}
[Token(Token = "0x20000EF")]
public class Debug_DB_UI : MonoBehaviour
{
	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Text minDB;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public RectTransform minDBSlider;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Text curDB;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform curDBSlider;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Text avgDB;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform avgDBSlider;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Text normDB;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform normDBSlider;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Text level;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text avgNoteTxt;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public RectTransform avgNoteSlider;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text noteTxt;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public RectTransform noteSlider;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform blowSlider;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Text FPSTxt;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text FPSMinTxt;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Text FPSMaxTxt;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public RectTransform FPSSlider;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float threshold;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float maxDBMultiplier;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float blow;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float dbNormLowPassed;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float FPS;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float FPSMin;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float FPSMax;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float lastFrameTime;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Image FPSSliderImage;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private CoolDownEvent updateFPS;

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x3E8250", Offset = "0x3E8250", VA = "0x3E8250")]
	private void Start()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x3E82C0", Offset = "0x3E82C0", VA = "0x3E82C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x3E8FE0", Offset = "0x3E8FE0", VA = "0x3E8FE0")]
	public Debug_DB_UI()
	{
	}
}
[Token(Token = "0x20000F0")]
public class Descent : MonoBehaviour
{
	[Token(Token = "0x2000272")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x224954", Offset = "0x224954")]
	private sealed class <Descenting>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Descent <>4__this;

		[Token(Token = "0x1700016B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C73")]
			[Address(RVA = "0x3EAFC4", Offset = "0x3EAFC4", VA = "0x3EAFC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C75")]
			[Address(RVA = "0x3EB044", Offset = "0x3EB044", VA = "0x3EB044", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x3EADA0", Offset = "0x3EADA0", VA = "0x3EADA0")]
		[DebuggerHidden]
		public <Descenting>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x3EADD4", Offset = "0x3EADD4", VA = "0x3EADD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x3EADD8", Offset = "0x3EADD8", VA = "0x3EADD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x3EAFCC", Offset = "0x3EAFCC", VA = "0x3EAFCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float speed;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float m_distanceTraveled;

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x3EAD18", Offset = "0x3EAD18", VA = "0x3EAD18")]
	private void Start()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x3EAD1C", Offset = "0x3EAD1C", VA = "0x3EAD1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x3EAD20", Offset = "0x3EAD20", VA = "0x3EAD20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x22C8A4", Offset = "0x22C8A4")]
	private IEnumerator Descenting()
	{
		return null;
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x3EADC0", Offset = "0x3EADC0", VA = "0x3EADC0")]
	public Descent()
	{
	}
}
[Token(Token = "0x20000F1")]
public class DisableObjectProfiling : MonoBehaviour
{
	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public CoolDownEvent anim;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SleekRenderPostProcess sleekerPostFX;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public MeshRenderer BG;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MusicSystemManager msm;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public List<GameObject> gos;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int postProcessLevel;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int currentButtonStep;

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x3EB0D4", Offset = "0x3EB0D4", VA = "0x3EB0D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x3EB0D8", Offset = "0x3EB0D8", VA = "0x3EB0D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x3EB2C8", Offset = "0x3EB2C8", VA = "0x3EB2C8")]
	public DisableObjectProfiling()
	{
	}
}
[Token(Token = "0x20000F2")]
public class EditMeshBounds : MonoBehaviour
{
	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Bounds bounds;

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x3F1240", Offset = "0x3F1240", VA = "0x3F1240")]
	private void Start()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x3F130C", Offset = "0x3F130C", VA = "0x3F130C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x3F13C8", Offset = "0x3F13C8", VA = "0x3F13C8")]
	public EditMeshBounds()
	{
	}
}
[Token(Token = "0x20000F3")]
public static class JellyFish_ClassExtensions
{
	[Token(Token = "0x600064B")]
	[Address(RVA = "0x54CA80", Offset = "0x54CA80", VA = "0x54CA80")]
	public static float Remap(this float value, float a1, float a2, float b1, float b2)
	{
		return default(float);
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x54C43C", Offset = "0x54C43C", VA = "0x54C43C")]
	public static float Remap(this float value, Vector4 map)
	{
		return default(float);
	}
}
[Token(Token = "0x20000F4")]
public class FaceCamera : MonoBehaviour
{
	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Transform camTr;

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x3F330C", Offset = "0x3F330C", VA = "0x3F330C")]
	private void Start()
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x3F3344", Offset = "0x3F3344", VA = "0x3F3344")]
	private void Update()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x3F34B8", Offset = "0x3F34B8", VA = "0x3F34B8")]
	public FaceCamera()
	{
	}
}
[Serializable]
[Token(Token = "0x20000F5")]
public class FloatWithInertia
{
	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float value;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float inertiaSpeed;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float acceleratedSpeed;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float accelerationMultiplier;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public float curVel;

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x3F37F0", Offset = "0x3F37F0", VA = "0x3F37F0")]
	public void StepTo(float targetValue, float acceleration = 5f, float speedMul = 1f, bool displayLog = false)
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x3F3B24", Offset = "0x3F3B24", VA = "0x3F3B24")]
	public static implicit operator float(FloatWithInertia fwi)
	{
		return default(float);
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x3F3B44", Offset = "0x3F3B44", VA = "0x3F3B44")]
	public FloatWithInertia()
	{
	}
}
[Token(Token = "0x20000F6")]
public class Floater : MonoBehaviour
{
	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float degreesPerSecond;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float amplitude;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float frequency;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 posOffset;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 tempPos;

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x3F3B58", Offset = "0x3F3B58", VA = "0x3F3B58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x3F3BA4", Offset = "0x3F3BA4", VA = "0x3F3BA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x3F3D30", Offset = "0x3F3D30", VA = "0x3F3D30")]
	public Floater()
	{
	}
}
[Token(Token = "0x20000F7")]
public class FlyCam : MonoBehaviour
{
	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float cameraSensitivity;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float cameraSmooth;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float climbAccelerationFactor;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float normalMoveSpeed;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float slowMoveFactor;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fastMoveFactor;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float rotationspeed;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float targetedRotationX;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float targetedRotationY;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float smoothedRotationX;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float smoothedRotationY;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float currentX;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float currentY;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x22A988", Offset = "0x22A988")]
	public float dragForce;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float mouseWheelSpeedMultMin;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float mouseWheelSpeedMultMax;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float mouseWheelSpeedCurrent;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 velocity;

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x3F3D54", Offset = "0x3F3D54", VA = "0x3F3D54")]
	private void Start()
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x3F3DF0", Offset = "0x3F3DF0", VA = "0x3F3DF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x3F4830", Offset = "0x3F4830", VA = "0x3F4830")]
	public FlyCam()
	{
	}
}
[Token(Token = "0x20000F8")]
public class Helper_FollowTarget : MonoBehaviour
{
	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform target;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Vector3 oldPos;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool debug;

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x541F58", Offset = "0x541F58", VA = "0x541F58")]
	private void Start()
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x541FF4", Offset = "0x541FF4", VA = "0x541FF4")]
	private void Update()
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x5421B0", Offset = "0x5421B0", VA = "0x5421B0")]
	public Helper_FollowTarget()
	{
	}
}
[Token(Token = "0x20000F9")]
public class JellyMov : MonoBehaviour
{
	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject movTarget;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float maxDistanceToTakeAction;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float timaToTakeAction;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float movSpeed;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float rotationSpeed;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private DOTweenAnimation dOTweenAnimation;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 lastTargetPostion;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float timeCount;

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x54CAB4", Offset = "0x54CAB4", VA = "0x54CAB4")]
	private void Start()
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x54CB2C", Offset = "0x54CB2C", VA = "0x54CB2C")]
	private void Update()
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x54CE50", Offset = "0x54CE50", VA = "0x54CE50")]
	public JellyMov()
	{
	}
}
[Token(Token = "0x20000FA")]
public class JellyTail_Ctl : MonoBehaviour
{
	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool nothere;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int tail_amount;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject Tail_prefab;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject tail_parent;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public List<GameObject> TailsOnScene;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float radius;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float angle_root;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float angle_min;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float angle_max;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float angle_Ofst;

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x54CE8C", Offset = "0x54CE8C", VA = "0x54CE8C")]
	public void Create_tail(int _cuant = 1, bool firsTime = false)
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x54D0E4", Offset = "0x54D0E4", VA = "0x54D0E4")]
	public float AnglePosition(int _Tail)
	{
		return default(float);
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x54D110", Offset = "0x54D110", VA = "0x54D110")]
	private void Start()
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x54D188", Offset = "0x54D188", VA = "0x54D188")]
	private void Update()
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x54D344", Offset = "0x54D344", VA = "0x54D344")]
	public JellyTail_Ctl()
	{
	}
}
[Token(Token = "0x20000FB")]
public class MoveCam : MonoBehaviour
{
	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Camera Cam;

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x775960", Offset = "0x775960", VA = "0x775960")]
	private void Start()
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x775964", Offset = "0x775964", VA = "0x775964")]
	private void Update()
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x775968", Offset = "0x775968", VA = "0x775968")]
	public MoveCam()
	{
	}
}
[Token(Token = "0x20000FC")]
public class PermissionsRationaleDialog : MonoBehaviour
{
	[Token(Token = "0x40008CA")]
	private const int kDialogWidth = 300;

	[Token(Token = "0x40008CB")]
	private const int kDialogHeight = 100;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool windowOpen;

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x80D588", Offset = "0x80D588", VA = "0x80D588")]
	private void DoMyWindow(int windowID)
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x80D74C", Offset = "0x80D74C", VA = "0x80D74C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x80D8B4", Offset = "0x80D8B4", VA = "0x80D8B4")]
	public PermissionsRationaleDialog()
	{
	}
}
[Token(Token = "0x20000FD")]
public class PreventSleep : MonoBehaviour
{
	[Token(Token = "0x600066A")]
	[Address(RVA = "0x81D3DC", Offset = "0x81D3DC", VA = "0x81D3DC")]
	private void Start()
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x81D3E8", Offset = "0x81D3E8", VA = "0x81D3E8")]
	private void Update()
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x81D3EC", Offset = "0x81D3EC", VA = "0x81D3EC")]
	public PreventSleep()
	{
	}
}
[Token(Token = "0x20000FE")]
public class StartLoadScene : MonoBehaviour
{
	[Token(Token = "0x2000273")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x224964", Offset = "0x224964")]
	private sealed class <Start>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StartLoadScene <>4__this;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <minimumTimeEnd>5__2;

		[Token(Token = "0x1700016D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C79")]
			[Address(RVA = "0x435278", Offset = "0x435278", VA = "0x435278", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C7B")]
			[Address(RVA = "0x4352F8", Offset = "0x4352F8", VA = "0x4352F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x434E84", Offset = "0x434E84", VA = "0x434E84")]
		[DebuggerHidden]
		public <Start>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x434FA4", Offset = "0x434FA4", VA = "0x434FA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x434FA8", Offset = "0x434FA8", VA = "0x434FA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x435280", Offset = "0x435280", VA = "0x435280", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float EndDelay;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float IntroDelay;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string levelToLoad;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VideoPlayer videoplayer;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public AudioSource[] audioSources;

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x434E04", Offset = "0x434E04", VA = "0x434E04")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x22C934", Offset = "0x22C934")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x434EA4", Offset = "0x434EA4", VA = "0x434EA4")]
	public void DelayVideo()
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x434F2C", Offset = "0x434F2C", VA = "0x434F2C")]
	public StartLoadScene()
	{
	}
}
[Token(Token = "0x20000FF")]
public class TentacleGroup : MonoBehaviour
{
	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public List<Transform> physicalTentacleRoots;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<List<Vector3>> initialPositions;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private List<List<Transform>> allTentacleBones;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer tentacleGroup;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public List<Renderer> arms;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int armBonesCount;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private List<Vector4> positions;

	[Token(Token = "0x6000670")]
	[Address(RVA = "0xE74F64", Offset = "0xE74F64", VA = "0xE74F64")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0xE74F68", Offset = "0xE74F68", VA = "0xE74F68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0xE751D8", Offset = "0xE751D8", VA = "0xE751D8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0xE755C4", Offset = "0xE755C4", VA = "0xE755C4")]
	public TentacleGroup()
	{
	}
}
[Token(Token = "0x2000100")]
public class TentacleMovementControl : MonoBehaviour
{
	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private float scaleZOriginal;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float compensatingOriginalY;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Transform compensateYOf;

	[Token(Token = "0x6000674")]
	[Address(RVA = "0xE75C80", Offset = "0xE75C80", VA = "0xE75C80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0xE75CF0", Offset = "0xE75CF0", VA = "0xE75CF0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0xE75DFC", Offset = "0xE75DFC", VA = "0xE75DFC")]
	public TentacleMovementControl()
	{
	}
}
[Token(Token = "0x2000101")]
public class TentacleSoundModulator : MonoBehaviour
{
	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AudioChorusFilter chorus;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject tentacle;

	[Token(Token = "0x6000677")]
	[Address(RVA = "0xE75E04", Offset = "0xE75E04", VA = "0xE75E04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0xE75E64", Offset = "0xE75E64", VA = "0xE75E64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0xE75EE0", Offset = "0xE75EE0", VA = "0xE75EE0")]
	public TentacleSoundModulator()
	{
	}
}
[Token(Token = "0x2000102")]
public class reder_line : MonoBehaviour
{
	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Color c1;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Color c2;

	[Token(Token = "0x600067A")]
	[Address(RVA = "0xE777D0", Offset = "0xE777D0", VA = "0xE777D0")]
	private void Start()
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0xE77920", Offset = "0xE77920", VA = "0xE77920")]
	public reder_line()
	{
	}
}
[Token(Token = "0x2000103")]
public class testTone : MonoBehaviour
{
	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Hv_3_Voice_Synth_AudioLib synth;

	[Token(Token = "0x600067C")]
	[Address(RVA = "0xE7799C", Offset = "0xE7799C", VA = "0xE7799C")]
	private void Start()
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0xE779FC", Offset = "0xE779FC", VA = "0xE779FC")]
	private void Update()
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0xE77AB8", Offset = "0xE77AB8", VA = "0xE77AB8")]
	public testTone()
	{
	}
}
[Token(Token = "0x2000104")]
public class LowPassFilter : MonoBehaviour
{
	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x22A9BC", Offset = "0x22A9BC")]
	public float cutoff;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x22A9D4", Offset = "0x22A9D4")]
	public float resonance;

	[Token(Token = "0x40008E3")]
	private const float CUTOFF_MAX = 128f;

	[Token(Token = "0x40008E4")]
	private const float CUTOFF_MIN = 0f;

	[Token(Token = "0x40008E5")]
	private const float RESONANCE_MAX = 128f;

	[Token(Token = "0x40008E6")]
	private const float RESONANCE_MIN = 0f;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float c;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float r;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float v0;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float v1;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int sampleRate;

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x54EA90", Offset = "0x54EA90", VA = "0x54EA90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x54EACC", Offset = "0x54EACC", VA = "0x54EACC")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x54ECC0", Offset = "0x54ECC0", VA = "0x54ECC0")]
	public LowPassFilter()
	{
	}
}
[Token(Token = "0x2000105")]
public class NativeSynthManager : MonoBehaviour
{
	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool Debug;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private SineOsc sin;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public NativeSynthVoice[] synthVoices;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioLowPassFilter[] lowPassFilters;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public AudioReverbFilter[] reverbFilters;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] soundPosition;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject[] jellyPosition;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float[] lowPassCutoff;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float[] reverbCutoff;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _high;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float _low;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve[] envelopes;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3[] noteOfsets;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool muteHarmony;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool muteMelody;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool DebugMelody;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	public bool mute0;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool mute1;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool mute2;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	public bool mute3;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
	public bool mute4;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool mute5;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int Arp_CurrentNoteIndext;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x22A9EC", Offset = "0x22A9EC")]
	public float volume;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float time;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float singTimeTreshold_Melody;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float singTimeTreshold_Harmony;

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x777948", Offset = "0x777948", VA = "0x777948")]
	public void Init()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x777CE0", Offset = "0x777CE0", VA = "0x777CE0")]
	public int IncreaseIndexNoteOffests(int index, int offset = 0)
	{
		return default(int);
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x777D40", Offset = "0x777D40", VA = "0x777D40")]
	public void Play_Melody(float note, float _beat_phase, ref Sound_D _sound, float extraEnvelope = 1f)
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x778064", Offset = "0x778064", VA = "0x778064")]
	public void TurnOffMelody()
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x778160", Offset = "0x778160", VA = "0x778160")]
	public void Synth_Harmony(ref Sound_D _sound)
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x778C10", Offset = "0x778C10", VA = "0x778C10")]
	public NativeSynthManager()
	{
	}
}
[Token(Token = "0x2000106")]
public class NativeSynthVoice : MonoBehaviour
{
	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private SineOsc synth;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float _octave;

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x777B80", Offset = "0x777B80", VA = "0x777B80")]
	public void Init()
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x778C30", Offset = "0x778C30", VA = "0x778C30")]
	private void Update()
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x777BFC", Offset = "0x777BFC", VA = "0x777BFC")]
	public void PlaySynth(float dbnorm, float note, float reverbGain = 0.5f)
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x778C34", Offset = "0x778C34", VA = "0x778C34")]
	public NativeSynthVoice()
	{
	}
}
[Token(Token = "0x2000107")]
public class Orbit : MonoBehaviour
{
	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private float a;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private float b;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private float alpha;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float deltaAlpha;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Vector3 center;

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x48B100", Offset = "0x48B100", VA = "0x48B100")]
	private void Start()
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x48B104", Offset = "0x48B104", VA = "0x48B104")]
	private void Update()
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x48B234", Offset = "0x48B234", VA = "0x48B234")]
	public Orbit()
	{
	}
}
[Token(Token = "0x2000108")]
public class OrbitXYZ : MonoBehaviour
{
	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private float x;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private float y;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private float z;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float alpha;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float deltaAlpha;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector3 center;

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x48B23C", Offset = "0x48B23C", VA = "0x48B23C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x48B240", Offset = "0x48B240", VA = "0x48B240")]
	private void Update()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x48B380", Offset = "0x48B380", VA = "0x48B380")]
	public OrbitXYZ()
	{
	}
}
[Token(Token = "0x2000109")]
public class SinewaveExample : MonoBehaviour
{
	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x22AAB4", Offset = "0x22AAB4")]
	public float frequency1;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x22AAD0", Offset = "0x22AAD0")]
	public float frequency2;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float sampleRate;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float waveLengthInSeconds;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private AudioSource audioSource;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int timeIndex;

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x42FA5C", Offset = "0x42FA5C", VA = "0x42FA5C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x42FB54", Offset = "0x42FB54", VA = "0x42FB54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x42FBE4", Offset = "0x42FBE4", VA = "0x42FBE4")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x42FCE0", Offset = "0x42FCE0", VA = "0x42FCE0")]
	public float CreateSine(int timeIndex, float frequency, float sampleRate)
	{
		return default(float);
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x42FD8C", Offset = "0x42FD8C", VA = "0x42FD8C")]
	public SinewaveExample()
	{
	}
}
[Token(Token = "0x200010A")]
public class SynthManager : MonoBehaviour
{
	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool Debug;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Hv_3_Voice_Synth_AudioLib synth;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private SinewaveExample sin;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SynthVoice[] synthVoices;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public AudioLowPassFilter[] lowPassFilters;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] lowPassCutoff;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float _high;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float _low;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public AnimationCurve[] envelopes;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3[] noteOfsets;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool muteHarmony;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool muteMelody;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	public bool DebugMelody;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
	public bool mute0;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool mute1;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool mute2;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool mute3;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	public bool mute4;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool mute5;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int Arp_CurrentNoteIndext;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x22AAEC", Offset = "0x22AAEC")]
	public float volume;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float time;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float singTimeTreshold_Melody;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float singTimeTreshold_Harmony;

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x435300", Offset = "0x435300", VA = "0x435300")]
	public void Init()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x43570C", Offset = "0x43570C", VA = "0x43570C")]
	public int IncreaseIndexNoteOffests(int index, int offset = 0)
	{
		return default(int);
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x435740", Offset = "0x435740", VA = "0x435740")]
	public void Play_Melody(float note, float _beat_phase, ref Sound_D _sound, float extraEnvelope = 1f)
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x435A64", Offset = "0x435A64", VA = "0x435A64")]
	public void TurnOffMelody()
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x435B60", Offset = "0x435B60", VA = "0x435B60")]
	public void Synth_Harmony(ref Sound_D _sound)
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x435FA0", Offset = "0x435FA0", VA = "0x435FA0")]
	public SynthManager()
	{
	}
}
[Token(Token = "0x200010B")]
public class SynthVoice : MonoBehaviour
{
	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Hv_3_Voice_Synth_AudioLib synth;

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x435538", Offset = "0x435538", VA = "0x435538")]
	public void Init()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x4355B4", Offset = "0x4355B4", VA = "0x4355B4")]
	public void PlaySynth(float dbnorm, float note, float reverbGain = 0.5f)
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x435FC0", Offset = "0x435FC0", VA = "0x435FC0")]
	public SynthVoice()
	{
	}
}
[Token(Token = "0x200010C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x22440C", Offset = "0x22440C")]
public class Hv_3_Voice_Synth_AudioLib : MonoBehaviour
{
	[Token(Token = "0x2000274")]
	public enum Parameter : uint
	{
		[Token(Token = "0x40014EA")]
		Filter = 3550565141u,
		[Token(Token = "0x40014EB")]
		Filtersweep = 2303220049u,
		[Token(Token = "0x40014EC")]
		Gainsaw = 3251108422u,
		[Token(Token = "0x40014ED")]
		Gainsine = 463441344u,
		[Token(Token = "0x40014EE")]
		Gainsquare = 1215254393u,
		[Token(Token = "0x40014EF")]
		Reverbgain = 2001018761u,
		[Token(Token = "0x40014F0")]
		Sawglide = 849390383u,
		[Token(Token = "0x40014F1")]
		Sawpitch = 615474327u,
		[Token(Token = "0x40014F2")]
		Sineglide = 1600246169u,
		[Token(Token = "0x40014F3")]
		Sinepitch = 179178643u,
		[Token(Token = "0x40014F4")]
		Squareglide = 2759751689u,
		[Token(Token = "0x40014F5")]
		Squarepitch = 1221630135u,
		[Token(Token = "0x40014F6")]
		Sweepdecay = 1884966864u
	}

	[Token(Token = "0x2000275")]
	public class FloatMessage
	{
		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string receiverName;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float value;

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x543C60", Offset = "0x543C60", VA = "0x543C60")]
		public FloatMessage(string name, float x)
		{
		}
	}

	[Token(Token = "0x2000276")]
	public delegate void FloatMessageReceived(FloatMessage message);

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public FloatMessageReceived FloatReceivedCallback;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float Filter;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float FilterSweep;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float GainSaw;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float GainSine;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GainSquare;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float ReverbGain;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float SawGlide;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float SawPitch;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float SineGlide;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float SinePitch;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float SquareGlide;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float SquarePitch;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float SweepDecay;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Hv_3_Voice_Synth_Context _context;

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x5421B8", Offset = "0x5421B8", VA = "0x5421B8")]
	public bool IsInstantiated()
	{
		return default(bool);
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x5421C8", Offset = "0x5421C8", VA = "0x5421C8")]
	public void RegisterSendHook()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x542284", Offset = "0x542284", VA = "0x542284")]
	public float GetFloatParameter(Parameter param)
	{
		return default(float);
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x5423EC", Offset = "0x5423EC", VA = "0x5423EC")]
	public void SetFloatParameter(Parameter param, float x)
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x54293C", Offset = "0x54293C", VA = "0x54293C")]
	public void SendFloatToReceiver(string receiverName, float x)
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x5429B8", Offset = "0x5429B8", VA = "0x5429B8")]
	public void FillTableWithMonoAudioClip(string tableName, AudioClip clip)
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x542E50", Offset = "0x542E50", VA = "0x542E50")]
	public void FillTableWithMonoAudioClip(uint tableHash, AudioClip clip)
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x54317C", Offset = "0x54317C", VA = "0x54317C")]
	public void FillTableWithFloatBuffer(string tableName, float[] buffer)
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x5431D0", Offset = "0x5431D0", VA = "0x5431D0")]
	public void FillTableWithFloatBuffer(uint tableHash, float[] buffer)
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x542990", Offset = "0x542990", VA = "0x542990")]
	public uint StringToHash(string str)
	{
		return default(uint);
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x54320C", Offset = "0x54320C", VA = "0x54320C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x5433C8", Offset = "0x5433C8", VA = "0x5433C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x5435E8", Offset = "0x5435E8", VA = "0x5435E8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x543BB4", Offset = "0x543BB4", VA = "0x543BB4")]
	private void OnAudioFilterRead(float[] buffer, int numChannels)
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x543C30", Offset = "0x543C30", VA = "0x543C30")]
	public Hv_3_Voice_Synth_AudioLib()
	{
	}
}
[Token(Token = "0x200010D")]
internal class Hv_3_Voice_Synth_Context
{
	[Token(Token = "0x2000277")]
	public class SendMessageQueue
	{
		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private readonly object _msgQueueSync;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private readonly Queue<Hv_3_Voice_Synth_AudioLib.FloatMessage> _msgQueue;

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x543A9C", Offset = "0x543A9C", VA = "0x543A9C")]
		public Hv_3_Voice_Synth_AudioLib.FloatMessage GetNextMessage()
		{
			return null;
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x544EE8", Offset = "0x544EE8", VA = "0x544EE8")]
		public void AddMessage(string receiverName, float value)
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x544CCC", Offset = "0x544CCC", VA = "0x544CCC")]
		public SendMessageQueue()
		{
		}
	}

	[Token(Token = "0x2000278")]
	private delegate void PrintHook(IntPtr context, string printName, string str, IntPtr message);

	[Token(Token = "0x2000279")]
	private delegate void SendHook(IntPtr context, string sendName, uint sendHash, IntPtr message);

	[Token(Token = "0x4000942")]
	private const string _dllName = "Hv_3_Voice_Synth_AudioLib";

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public readonly SendMessageQueue msgQueue;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private readonly GCHandle gch;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly IntPtr _context;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private SendHook _sendHook;

	[PreserveSig]
	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x543F20", Offset = "0x543F20", VA = "0x543F20")]
	private static extern IntPtr hv_3_Voice_Synth_new_with_options(double sampleRate, int poolKb, int inQueueKb, int outQueueKb);

	[PreserveSig]
	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x543FE0", Offset = "0x543FE0", VA = "0x543FE0")]
	private static extern int hv_processInlineInterleaved(IntPtr ctx, [In] float[] inBuffer, [Out] float[] outBuffer, int numSamples);

	[PreserveSig]
	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x544140", Offset = "0x544140", VA = "0x544140")]
	private static extern void hv_delete(IntPtr ctx);

	[PreserveSig]
	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x5441E0", Offset = "0x5441E0", VA = "0x5441E0")]
	private static extern double hv_getSampleRate(IntPtr ctx);

	[PreserveSig]
	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x544280", Offset = "0x544280", VA = "0x544280")]
	private static extern int hv_getNumInputChannels(IntPtr ctx);

	[PreserveSig]
	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x544320", Offset = "0x544320", VA = "0x544320")]
	private static extern int hv_getNumOutputChannels(IntPtr ctx);

	[PreserveSig]
	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x5443C0", Offset = "0x5443C0", VA = "0x5443C0")]
	private static extern void hv_setSendHook(IntPtr ctx, SendHook sendHook);

	[PreserveSig]
	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x544480", Offset = "0x544480", VA = "0x544480")]
	private static extern void hv_setPrintHook(IntPtr ctx, PrintHook printHook);

	[PreserveSig]
	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x544540", Offset = "0x544540", VA = "0x544540")]
	private static extern int hv_setUserData(IntPtr ctx, IntPtr userData);

	[PreserveSig]
	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x5445E8", Offset = "0x5445E8", VA = "0x5445E8")]
	private static extern IntPtr hv_getUserData(IntPtr ctx);

	[PreserveSig]
	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x544688", Offset = "0x544688", VA = "0x544688")]
	private static extern void hv_sendBangToReceiver(IntPtr ctx, uint receiverHash);

	[PreserveSig]
	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x544730", Offset = "0x544730", VA = "0x544730")]
	private static extern void hv_sendFloatToReceiver(IntPtr ctx, uint receiverHash, float x);

	[PreserveSig]
	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x5447E0", Offset = "0x5447E0", VA = "0x5447E0")]
	private static extern uint hv_msg_getTimestamp(IntPtr message);

	[PreserveSig]
	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x544880", Offset = "0x544880", VA = "0x544880")]
	private static extern bool hv_msg_hasFormat(IntPtr message, string format);

	[PreserveSig]
	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x544958", Offset = "0x544958", VA = "0x544958")]
	private static extern float hv_msg_getFloat(IntPtr message, int index);

	[PreserveSig]
	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x544A00", Offset = "0x544A00", VA = "0x544A00")]
	private static extern bool hv_table_setLength(IntPtr ctx, uint tableHash, uint newSampleLength);

	[PreserveSig]
	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x544AB8", Offset = "0x544AB8", VA = "0x544AB8")]
	private static extern IntPtr hv_table_getBuffer(IntPtr ctx, uint tableHash);

	[PreserveSig]
	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x544B60", Offset = "0x544B60", VA = "0x544B60")]
	private static extern float hv_samplesToMilliseconds(IntPtr ctx, uint numSamples);

	[PreserveSig]
	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x544C08", Offset = "0x544C08", VA = "0x544C08")]
	private static extern uint hv_stringToHash(string s);

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x5432AC", Offset = "0x5432AC", VA = "0x5432AC")]
	public Hv_3_Voice_Synth_Context(double sampleRate, int poolKb = 10, int inQueueKb = 13, int outQueueKb = 2)
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x544D88", Offset = "0x544D88", VA = "0x544D88", Slot = "1")]
	~Hv_3_Voice_Synth_Context()
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x5421EC", Offset = "0x5421EC", VA = "0x5421EC")]
	public void RegisterSendHook()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x543668", Offset = "0x543668", VA = "0x543668")]
	public bool IsSendHookRegistered()
	{
		return default(bool);
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x544EC8", Offset = "0x544EC8", VA = "0x544EC8")]
	public double GetSampleRate()
	{
		return default(double);
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x544ED0", Offset = "0x544ED0", VA = "0x544ED0")]
	public int GetNumInputChannels()
	{
		return default(int);
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x544ED8", Offset = "0x544ED8", VA = "0x544ED8")]
	public int GetNumOutputChannels()
	{
		return default(int);
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x544EE0", Offset = "0x544EE0", VA = "0x544EE0")]
	public void SendBangToReceiver(uint receiverHash)
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x542934", Offset = "0x542934", VA = "0x542934")]
	public void SendFloatToReceiver(uint receiverHash, float x)
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x542CDC", Offset = "0x542CDC", VA = "0x542CDC")]
	public void FillTableWithFloatBuffer(uint tableHash, float[] buffer)
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x543204", Offset = "0x543204", VA = "0x543204")]
	public uint StringToHash(string s)
	{
		return default(uint);
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x543C0C", Offset = "0x543C0C", VA = "0x543C0C")]
	public int Process(float[] buffer, int numFrames)
	{
		return default(int);
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x543CCC", Offset = "0x543CCC", VA = "0x543CCC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x22C9A4", Offset = "0x22C9A4")]
	private static void OnPrint(IntPtr context, string printName, string str, IntPtr message)
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x543DC8", Offset = "0x543DC8", VA = "0x543DC8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x22CA14", Offset = "0x22CA14")]
	private static void OnMessageSent(IntPtr context, string sendName, uint sendHash, IntPtr message)
	{
	}
}
namespace BNG
{
	[Token(Token = "0x200010E")]
	public class VRUtils : MonoBehaviour
	{
		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VRUtils _instance;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Color LogTextColor;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color WarnTextColor;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color ErrTextColor;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Transform DebugTextHolder;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float MaxTextEntries;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public string LastDebugMsg;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastDebugMsgCount;

		[Token(Token = "0x170000E9")]
		public static VRUtils Instance
		{
			[Token(Token = "0x60006D0")]
			[Address(RVA = "0x3C9A30", Offset = "0x3C9A30", VA = "0x3C9A30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0x3C9B9C", Offset = "0x3C9B9C", VA = "0x3C9B9C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0x3C9D00", Offset = "0x3C9D00", VA = "0x3C9D00")]
		private static void Application_logMessageReceived(string condition, string stackTrace, LogType type)
		{
		}

		[Token(Token = "0x60006D3")]
		[Address(RVA = "0x3C9E5C", Offset = "0x3C9E5C", VA = "0x3C9E5C")]
		public void Log(string msg)
		{
		}

		[Token(Token = "0x60006D4")]
		[Address(RVA = "0x3C9E80", Offset = "0x3C9E80", VA = "0x3C9E80")]
		public void Warn(string msg)
		{
		}

		[Token(Token = "0x60006D5")]
		[Address(RVA = "0x3C9EA4", Offset = "0x3C9EA4", VA = "0x3C9EA4")]
		public void Error(string msg)
		{
		}

		[Token(Token = "0x60006D6")]
		[Address(RVA = "0x3C9EC8", Offset = "0x3C9EC8", VA = "0x3C9EC8")]
		public void VRDebugLog(string msg, Color logColor)
		{
		}

		[Token(Token = "0x60006D7")]
		[Address(RVA = "0x3CA538", Offset = "0x3CA538", VA = "0x3CA538")]
		public void CullDebugPanel()
		{
		}

		[Token(Token = "0x60006D8")]
		[Address(RVA = "0x3CA648", Offset = "0x3CA648", VA = "0x3CA648")]
		public AudioSource PlaySpatialClipAt(AudioClip clip, Vector3 pos, float volume, float spatialBlend = 1f, float randomizePitch = 0f)
		{
			return null;
		}

		[Token(Token = "0x60006D9")]
		[Address(RVA = "0x3CA8B0", Offset = "0x3CA8B0", VA = "0x3CA8B0")]
		private float getRandomizedPitch(float randomAmount)
		{
			return default(float);
		}

		[Token(Token = "0x60006DA")]
		[Address(RVA = "0x3CA900", Offset = "0x3CA900", VA = "0x3CA900")]
		public VRUtils()
		{
		}
	}
}
namespace PitchDetector
{
	[Token(Token = "0x200010F")]
	public class ArrayPool
	{
		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<int, Stack<float[]>> freeList;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly object listAccessLock;

		[Token(Token = "0x60006DB")]
		[Address(RVA = "0x80F3B0", Offset = "0x80F3B0", VA = "0x80F3B0")]
		public static float[] Take(int n)
		{
			return null;
		}

		[Token(Token = "0x60006DC")]
		[Address(RVA = "0x80F5F4", Offset = "0x80F5F4", VA = "0x80F5F4")]
		public static void PutBack(float[] arr)
		{
		}

		[Token(Token = "0x60006DD")]
		[Address(RVA = "0x80F86C", Offset = "0x80F86C", VA = "0x80F86C")]
		public ArrayPool()
		{
		}
	}
	[Token(Token = "0x2000110")]
	public class Downsample
	{
		[Token(Token = "0x4000951")]
		public const float filterLength = 0.005f;

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int FFIR_fsize;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float[] FFIR_co;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float[] FFIR_mem;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float[] FFIR_state;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] b;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int ncoeff;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int ncoefft;

		[Token(Token = "0x60006DF")]
		[Address(RVA = "0x80F928", Offset = "0x80F928", VA = "0x80F928")]
		public float[] GetDownsampledData(float[] fdata, int buffsize, int nframes, int decimate, float toFreq, Params par, bool first, bool last_time)
		{
			return null;
		}

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0x80FA80", Offset = "0x80FA80", VA = "0x80FA80")]
		private bool Apply(float[] input, int buff_size, out float[] foutput, int state_idx, double freq, ref int samsds, int decimate, bool first, bool last_time)
		{
			return default(bool);
		}

		[Token(Token = "0x60006E1")]
		[Address(RVA = "0x80FC14", Offset = "0x80FC14", VA = "0x80FC14")]
		private void lc_lin_fir(float fc, ref int nf, float[] coef)
		{
		}

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0x80FE10", Offset = "0x80FE10", VA = "0x80FE10")]
		private void doFFIR(float[] input, int insize, float[] output, ref int outsize, int state_idx, int ncoef, float[] fc, int skip, int init)
		{
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0x810630", Offset = "0x810630", VA = "0x810630")]
		public Downsample()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000111")]
	public class PitchEvent : UnityEvent<List<float>, int, float>
	{
		[Token(Token = "0x60006E4")]
		[Address(RVA = "0x813594", Offset = "0x813594", VA = "0x813594")]
		public PitchEvent()
		{
		}
	}
	[Token(Token = "0x2000112")]
	public class MicrophonePitchDetector : MonoBehaviour
	{
		[Token(Token = "0x200027A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x224974", Offset = "0x224974")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x40014FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float[] readBuffer;

			[Token(Token = "0x40014FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int prevRecPos;

			[Token(Token = "0x40014FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MicrophonePitchDetector <>4__this;

			[Token(Token = "0x6000C8C")]
			[Address(RVA = "0x811568", Offset = "0x811568", VA = "0x811568")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x6000C8D")]
			[Address(RVA = "0x811570", Offset = "0x811570", VA = "0x811570")]
			internal bool <RecordingCoroutine>b__0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200027B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x224984", Offset = "0x224984")]
		private sealed class <RecordingCoroutine>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x40014FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4001500")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MicrophonePitchDetector <>4__this;

			[Token(Token = "0x4001501")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private <>c__DisplayClass27_0 <>8__1;

			[Token(Token = "0x4001502")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private WaitUntil <waitUntil>5__2;

			[Token(Token = "0x1700016F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C91")]
				[Address(RVA = "0x812A10", Offset = "0x812A10", VA = "0x812A10", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000170")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C93")]
				[Address(RVA = "0x812A90", Offset = "0x812A90", VA = "0x812A90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C8E")]
			[Address(RVA = "0x811270", Offset = "0x811270", VA = "0x811270")]
			[DebuggerHidden]
			public <RecordingCoroutine>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x6000C8F")]
			[Address(RVA = "0x81192C", Offset = "0x81192C", VA = "0x81192C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C90")]
			[Address(RVA = "0x811930", Offset = "0x811930", VA = "0x811930", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C92")]
			[Address(RVA = "0x812A18", Offset = "0x812A18", VA = "0x812A18", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200027C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x224994", Offset = "0x224994")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x4001503")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MicrophonePitchDetector <>4__this;

			[Token(Token = "0x4001504")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int prevRecPos;

			[Token(Token = "0x6000C94")]
			[Address(RVA = "0x811758", Offset = "0x811758", VA = "0x811758")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x6000C95")]
			[Address(RVA = "0x811760", Offset = "0x811760", VA = "0x811760")]
			internal bool <RecordingCoroutineNatMic>b__0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200027D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2249A4", Offset = "0x2249A4")]
		private sealed class <RecordingCoroutineNatMic>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001505")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4001506")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4001507")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MicrophonePitchDetector <>4__this;

			[Token(Token = "0x4001508")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private <>c__DisplayClass28_0 <>8__1;

			[Token(Token = "0x4001509")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private WaitUntil <waitUntil>5__2;

			[Token(Token = "0x17000171")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C99")]
				[Address(RVA = "0x813048", Offset = "0x813048", VA = "0x813048", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000172")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C9B")]
				[Address(RVA = "0x8130C8", Offset = "0x8130C8", VA = "0x8130C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C96")]
			[Address(RVA = "0x811290", Offset = "0x811290", VA = "0x811290")]
			[DebuggerHidden]
			public <RecordingCoroutineNatMic>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x6000C97")]
			[Address(RVA = "0x812A98", Offset = "0x812A98", VA = "0x812A98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C98")]
			[Address(RVA = "0x812A9C", Offset = "0x812A9C", VA = "0x812A9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C9A")]
			[Address(RVA = "0x813050", Offset = "0x813050", VA = "0x813050", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool useNatMic;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int androidAudioDeviceID;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool enableChrisWaveshapeDistortFiltering;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource mutedRecordingAS;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public PitchEvent onPitchDetected;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int micSampleRate;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int deviceIndex;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string _selectedDevice;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool _useMicrophone;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip rec;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private RAPTPitchDetector pitchDetector;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool recording;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool init;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private IAudioDevice audioDevice;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private NatMicSamples natMicSamples;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float overdrive;

		[Token(Token = "0x170000EA")]
		public bool Record
		{
			[Token(Token = "0x60006E8")]
			[Address(RVA = "0x810FB0", Offset = "0x810FB0", VA = "0x810FB0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60006E9")]
			[Address(RVA = "0x8106BC", Offset = "0x8106BC", VA = "0x8106BC")]
			set
			{
			}
		}

		[Token(Token = "0x170000EB")]
		private RAPTPitchDetector Detector
		{
			[Token(Token = "0x60006EA")]
			[Address(RVA = "0x810FE4", Offset = "0x810FE4", VA = "0x810FE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0x8106B4", Offset = "0x8106B4", VA = "0x8106B4")]
		private void Start()
		{
		}

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0x810750", Offset = "0x810750", VA = "0x810750")]
		private void NatMicStartRecording()
		{
		}

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0x810E54", Offset = "0x810E54", VA = "0x810E54")]
		private void NatMicStopRecording()
		{
		}

		[Token(Token = "0x60006EB")]
		[Address(RVA = "0x8111EC", Offset = "0x8111EC", VA = "0x8111EC")]
		public void ToggleRecord(bool _state)
		{
		}

		[Token(Token = "0x60006EC")]
		[Address(RVA = "0x810FB8", Offset = "0x810FB8", VA = "0x810FB8")]
		private void StartMic()
		{
		}

		[Token(Token = "0x60006ED")]
		[Address(RVA = "0x810FDC", Offset = "0x810FDC", VA = "0x810FDC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x22CA84", Offset = "0x22CA84")]
		private void StopMic()
		{
		}

		[Token(Token = "0x60006EE")]
		[Address(RVA = "0x8111F0", Offset = "0x8111F0", VA = "0x8111F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x22CAB8", Offset = "0x22CAB8")]
		private IEnumerator RecordingCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60006EF")]
		[Address(RVA = "0x810DD4", Offset = "0x810DD4", VA = "0x810DD4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x22CB28", Offset = "0x22CB28")]
		private IEnumerator RecordingCoroutineNatMic()
		{
			return null;
		}

		[Token(Token = "0x60006F0")]
		[Address(RVA = "0x8112B0", Offset = "0x8112B0", VA = "0x8112B0")]
		private void DisplayValue(float[] sampleBuffer)
		{
		}

		[Token(Token = "0x60006F1")]
		[Address(RVA = "0x811448", Offset = "0x811448", VA = "0x811448")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60006F2")]
		[Address(RVA = "0x810A98", Offset = "0x810A98", VA = "0x810A98")]
		private int SetAudioDevice()
		{
			return default(int);
		}

		[Token(Token = "0x60006F3")]
		[Address(RVA = "0x811490", Offset = "0x811490", VA = "0x811490")]
		private void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x60006F4")]
		[Address(RVA = "0x811540", Offset = "0x811540", VA = "0x811540")]
		public MicrophonePitchDetector()
		{
		}
	}
	[Token(Token = "0x2000113")]
	public class Params
	{
		[Token(Token = "0x4000969")]
		public const float STAT_WSIZE = 0.03f;

		[Token(Token = "0x400096A")]
		public const float STAT_AINT = 0.02f;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float READ_SIZE;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float trans_cost;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float trans_amp;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float trans_spec;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float voice_bias;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public double double_cost;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int n_cands;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float cand_thresh;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private double _freqwt;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _freq;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _step;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _size;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int _start;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _stop;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int _nlags;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _ncomp;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _lagwt;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _maxf0;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _minf0;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _framestep;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float _winddur;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _lagweight;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private double _freqweight;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int _pad;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int _agap;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _ind;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int _statwsize;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _nframes;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int _sdstep;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _buffsize;

		[Token(Token = "0x170000EC")]
		public int step
		{
			[Token(Token = "0x60006F8")]
			[Address(RVA = "0x81349C", Offset = "0x81349C", VA = "0x81349C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000ED")]
		public int size
		{
			[Token(Token = "0x60006F9")]
			[Address(RVA = "0x8134A4", Offset = "0x8134A4", VA = "0x8134A4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000EE")]
		public int start
		{
			[Token(Token = "0x60006FA")]
			[Address(RVA = "0x8134AC", Offset = "0x8134AC", VA = "0x8134AC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000EF")]
		public int stop
		{
			[Token(Token = "0x60006FB")]
			[Address(RVA = "0x8134B4", Offset = "0x8134B4", VA = "0x8134B4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000F0")]
		public int nlags
		{
			[Token(Token = "0x60006FC")]
			[Address(RVA = "0x8134BC", Offset = "0x8134BC", VA = "0x8134BC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000F1")]
		public int ncomp
		{
			[Token(Token = "0x60006FD")]
			[Address(RVA = "0x8134C4", Offset = "0x8134C4", VA = "0x8134C4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000F2")]
		public double freqwt
		{
			[Token(Token = "0x60006FE")]
			[Address(RVA = "0x8134CC", Offset = "0x8134CC", VA = "0x8134CC")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170000F3")]
		public float lagwt
		{
			[Token(Token = "0x60006FF")]
			[Address(RVA = "0x8134D8", Offset = "0x8134D8", VA = "0x8134D8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000F4")]
		public int pad
		{
			[Token(Token = "0x6000700")]
			[Address(RVA = "0x8134E0", Offset = "0x8134E0", VA = "0x8134E0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000F5")]
		public int stat_wsize
		{
			[Token(Token = "0x6000701")]
			[Address(RVA = "0x8134E8", Offset = "0x8134E8", VA = "0x8134E8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000F6")]
		public int agap
		{
			[Token(Token = "0x6000702")]
			[Address(RVA = "0x8134F0", Offset = "0x8134F0", VA = "0x8134F0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000F7")]
		public int ind
		{
			[Token(Token = "0x6000703")]
			[Address(RVA = "0x8134F8", Offset = "0x8134F8", VA = "0x8134F8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000F8")]
		public int buffsize
		{
			[Token(Token = "0x6000704")]
			[Address(RVA = "0x813500", Offset = "0x813500", VA = "0x813500")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000F9")]
		public int sdstep
		{
			[Token(Token = "0x6000705")]
			[Address(RVA = "0x813508", Offset = "0x813508", VA = "0x813508")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000FA")]
		public int nframes
		{
			[Token(Token = "0x6000706")]
			[Address(RVA = "0x813510", Offset = "0x813510", VA = "0x813510")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000FB")]
		public float freq
		{
			[Token(Token = "0x6000707")]
			[Address(RVA = "0x813518", Offset = "0x813518", VA = "0x813518")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000708")]
			[Address(RVA = "0x813520", Offset = "0x813520", VA = "0x813520")]
			set
			{
			}
		}

		[Token(Token = "0x170000FC")]
		public float maxF0
		{
			[Token(Token = "0x6000709")]
			[Address(RVA = "0x813528", Offset = "0x813528", VA = "0x813528")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600070A")]
			[Address(RVA = "0x813530", Offset = "0x813530", VA = "0x813530")]
			set
			{
			}
		}

		[Token(Token = "0x170000FD")]
		public float minF0
		{
			[Token(Token = "0x600070B")]
			[Address(RVA = "0x813538", Offset = "0x813538", VA = "0x813538")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600070C")]
			[Address(RVA = "0x813540", Offset = "0x813540", VA = "0x813540")]
			set
			{
			}
		}

		[Token(Token = "0x170000FE")]
		public float frame_step
		{
			[Token(Token = "0x600070D")]
			[Address(RVA = "0x813548", Offset = "0x813548", VA = "0x813548")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600070E")]
			[Address(RVA = "0x813550", Offset = "0x813550", VA = "0x813550")]
			set
			{
			}
		}

		[Token(Token = "0x170000FF")]
		public float wind_dur
		{
			[Token(Token = "0x600070F")]
			[Address(RVA = "0x813558", Offset = "0x813558", VA = "0x813558")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000710")]
			[Address(RVA = "0x813560", Offset = "0x813560", VA = "0x813560")]
			set
			{
			}
		}

		[Token(Token = "0x17000100")]
		public float lag_weight
		{
			[Token(Token = "0x6000711")]
			[Address(RVA = "0x813568", Offset = "0x813568", VA = "0x813568")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000712")]
			[Address(RVA = "0x813570", Offset = "0x813570", VA = "0x813570")]
			set
			{
			}
		}

		[Token(Token = "0x17000101")]
		public double freq_weight
		{
			[Token(Token = "0x6000713")]
			[Address(RVA = "0x813578", Offset = "0x813578", VA = "0x813578")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000714")]
			[Address(RVA = "0x813584", Offset = "0x813584", VA = "0x813584")]
			set
			{
			}
		}

		[Token(Token = "0x60006F5")]
		[Address(RVA = "0x8130D0", Offset = "0x8130D0", VA = "0x8130D0")]
		public Params(float sampleRate, float minf0, float maxf0)
		{
		}

		[Token(Token = "0x60006F6")]
		[Address(RVA = "0x813444", Offset = "0x813444", VA = "0x813444")]
		public Params(float minf0, float maxf0)
		{
		}

		[Token(Token = "0x60006F7")]
		[Address(RVA = "0x81346C", Offset = "0x81346C", VA = "0x81346C")]
		public Params()
		{
		}

		[Token(Token = "0x6000715")]
		[Address(RVA = "0x813188", Offset = "0x813188", VA = "0x813188")]
		private void RecalculateParams()
		{
		}
	}
	[Token(Token = "0x2000114")]
	public class RAPTPitchDetector
	{
		[Token(Token = "0x200027E")]
		public class Statistics
		{
			[Token(Token = "0x400150A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int findBestPath;

			[Token(Token = "0x400150B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int bestPathFound;

			[Token(Token = "0x400150C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int framesWithFreqFound;

			[Token(Token = "0x400150D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int totalFramesAnalyzed;

			[Token(Token = "0x400150E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int voicedTransition;

			[Token(Token = "0x400150F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int unvoicedTransition;

			[Token(Token = "0x6000C9C")]
			[Address(RVA = "0x813FAC", Offset = "0x813FAC", VA = "0x813FAC")]
			public void Reset()
			{
			}

			[Token(Token = "0x6000C9D")]
			[Address(RVA = "0x819844", Offset = "0x819844", VA = "0x819844", Slot = "3")]
			public override string ToString()
			{
				return null;
			}

			[Token(Token = "0x6000C9E")]
			[Address(RVA = "0x818EA4", Offset = "0x818EA4", VA = "0x818EA4")]
			public Statistics()
			{
			}
		}

		[Token(Token = "0x200027F")]
		public class WindowStat
		{
			[Token(Token = "0x4001510")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float err;

			[Token(Token = "0x4001511")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float rms;

			[Token(Token = "0x4001512")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float[] rho;

			[Token(Token = "0x6000C9F")]
			[Address(RVA = "0x817FD0", Offset = "0x817FD0", VA = "0x817FD0")]
			public WindowStat(float err, float rms, float[] rho)
			{
			}

			[Token(Token = "0x6000CA0")]
			[Address(RVA = "0x817D2C", Offset = "0x817D2C", VA = "0x817D2C")]
			public void Get(out float err, out float rms, out float[] rho)
			{
			}
		}

		[Token(Token = "0x2000280")]
		public struct PeakData
		{
			[Token(Token = "0x4001513")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static double ln2;

			[Token(Token = "0x4001514")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float value;

			[Token(Token = "0x4001515")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int location;

			[Token(Token = "0x6000CA1")]
			[Address(RVA = "0x8158A0", Offset = "0x8158A0", VA = "0x8158A0")]
			public void Set(float val, int loc)
			{
			}

			[Token(Token = "0x6000CA2")]
			[Address(RVA = "0x815898", Offset = "0x815898", VA = "0x815898")]
			public void Set(PeakData other)
			{
			}

			[Token(Token = "0x6000CA3")]
			[Address(RVA = "0x8190B4", Offset = "0x8190B4", VA = "0x8190B4")]
			public float TransitionCost(ref PeakData prev, ref Stat stationarity, Params parameters)
			{
				return default(float);
			}

			[Token(Token = "0x6000CA4")]
			[Address(RVA = "0x819744", Offset = "0x819744", VA = "0x819744")]
			private float UnvoicedTransition(ref Stat stationarity, Params parameters)
			{
				return default(float);
			}

			[Token(Token = "0x6000CA5")]
			[Address(RVA = "0x819558", Offset = "0x819558", VA = "0x819558")]
			private float VoicedTransition(ref PeakData prev, Params parameters)
			{
				return default(float);
			}
		}

		[Token(Token = "0x2000281")]
		public class DPFrame
		{
			[Token(Token = "0x4001516")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public DPRecord dp;

			[Token(Token = "0x4001517")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Cross cp;

			[Token(Token = "0x4001518")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float rms;

			[Token(Token = "0x4001519")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public DPFrame next;

			[Token(Token = "0x400151A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public DPFrame prev;

			[Token(Token = "0x6000CA7")]
			[Address(RVA = "0x813A58", Offset = "0x813A58", VA = "0x813A58")]
			public DPFrame(int nlags, int ncands)
			{
			}

			[Token(Token = "0x6000CA8")]
			[Address(RVA = "0x813A04", Offset = "0x813A04", VA = "0x813A04")]
			public void Clear()
			{
			}
		}

		[Token(Token = "0x2000282")]
		public class DPRecord
		{
			[Token(Token = "0x400151B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int ncands;

			[Token(Token = "0x400151C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public PeakData[] peaks;

			[Token(Token = "0x400151D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float[] mpvals;

			[Token(Token = "0x400151E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int[] prept;

			[Token(Token = "0x400151F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float[] dpvals;

			[Token(Token = "0x6000CA9")]
			[Address(RVA = "0x818F4C", Offset = "0x818F4C", VA = "0x818F4C")]
			public DPRecord(int ncands)
			{
			}

			[Token(Token = "0x6000CAA")]
			[Address(RVA = "0x81900C", Offset = "0x81900C", VA = "0x81900C")]
			public void Clear()
			{
			}

			[Token(Token = "0x6000CAB")]
			[Address(RVA = "0x8159C0", Offset = "0x8159C0", VA = "0x8159C0")]
			public void CalculateMinimumCost(DPRecord prev, ref Stat stationarity, Params par, bool isFirst)
			{
			}

			[Token(Token = "0x6000CAC")]
			[Address(RVA = "0x819274", Offset = "0x819274", VA = "0x819274")]
			public void GetBestCandidate(out float minErr, out int idx)
			{
			}

			[Token(Token = "0x6000CAD")]
			[Address(RVA = "0x815CA4", Offset = "0x815CA4", VA = "0x815CA4")]
			public int GetBestCandidate()
			{
				return default(int);
			}

			[Token(Token = "0x6000CAE")]
			[Address(RVA = "0x8158A8", Offset = "0x8158A8", VA = "0x8158A8")]
			public void ApplyWeighting(int count, Params par)
			{
			}
		}

		[Token(Token = "0x2000283")]
		public class Cross
		{
			[Token(Token = "0x4001520")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float[] correl;

			[Token(Token = "0x4001521")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int maxloc;

			[Token(Token = "0x4001522")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float maxval;

			[Token(Token = "0x4001523")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float rms;

			[Token(Token = "0x4001524")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int firstlag;

			[Token(Token = "0x6000CAF")]
			[Address(RVA = "0x818EAC", Offset = "0x818EAC", VA = "0x818EAC")]
			public Cross(int nlags)
			{
			}

			[Token(Token = "0x6000CB0")]
			[Address(RVA = "0x818F1C", Offset = "0x818F1C", VA = "0x818F1C")]
			public void Clear()
			{
			}
		}

		[Token(Token = "0x2000284")]
		public struct Stat
		{
			[Token(Token = "0x4001525")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float stat;

			[Token(Token = "0x4001526")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float rms;

			[Token(Token = "0x4001527")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float rms_ratio;

			[Token(Token = "0x6000CB1")]
			[Address(RVA = "0x8177D0", Offset = "0x8177D0", VA = "0x8177D0")]
			public void Set(float stat, float rms, float rms_ratio)
			{
			}
		}

		[Token(Token = "0x4000989")]
		public const int InputScale = 32768;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private Params par;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Downsample downsampler;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Statistics statistics;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Stack<WindowStat> windStats;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int pool_nlags;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int pool_ncands;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Stack<DPFrame> freeDPFrames;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Stack<DPFrame> usedDPFrames;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float DP_CIRCULAR;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static float DP_HIST;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static float DP_LIMIT;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected DPFrame headF;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected DPFrame tailF;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected DPFrame cmpthF;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int[] pcands;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int size_frame_hist;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int size_frame_out;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int num_active_frames;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PeakData[] peaks;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool first;

		[Token(Token = "0x400099E")]
		public const int BIGSORD = 100;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float[] dbdata;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Stat[] statArray;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float[] mem;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private List<float> f0p;

		[Token(Token = "0x6000716")]
		[Address(RVA = "0x8135F0", Offset = "0x8135F0", VA = "0x8135F0")]
		public RAPTPitchDetector()
		{
		}

		[Token(Token = "0x6000717")]
		[Address(RVA = "0x813758", Offset = "0x813758", VA = "0x813758")]
		public RAPTPitchDetector(float minF0, float maxF0)
		{
		}

		[Token(Token = "0x6000718")]
		[Address(RVA = "0x811084", Offset = "0x811084", VA = "0x811084")]
		public RAPTPitchDetector(float freq, float minF0, float maxF0)
		{
		}

		[Token(Token = "0x6000719")]
		[Address(RVA = "0x8138C0", Offset = "0x8138C0", VA = "0x8138C0")]
		public DPFrame CreateDPFrame(int nlags, int ncands)
		{
			return null;
		}

		[Token(Token = "0x600071A")]
		[Address(RVA = "0x813B04", Offset = "0x813B04", VA = "0x813B04")]
		public void FreeUsedDPFrames()
		{
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0x813BC0", Offset = "0x813BC0", VA = "0x813BC0")]
		private void initDP()
		{
		}

		[Token(Token = "0x600071C")]
		[Address(RVA = "0x813FC8", Offset = "0x813FC8", VA = "0x813FC8")]
		public DPFrame TraceBackBestPath(ref bool checkpathDone, ref int bestCand)
		{
			return null;
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0x81434C", Offset = "0x81434C", VA = "0x81434C")]
		public bool dpF0(float[] fdata, int buffsize, List<float> f0p, bool last_time)
		{
			return default(bool);
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0x8153C8", Offset = "0x8153C8", VA = "0x8153C8")]
		public void getFastCands(float[] fdata, float[] fdsdata, int ind, int dec, Cross cp, PeakData[] peaks, out int ncand, Params par)
		{
		}

		[Token(Token = "0x600071F")]
		[Address(RVA = "0x816B40", Offset = "0x816B40", VA = "0x816B40")]
		private void crossfi(float[] data, int doff, int nlags, Cross cp, PeakData[] locs, int nlocs)
		{
		}

		[Token(Token = "0x6000720")]
		[Address(RVA = "0x815F88", Offset = "0x815F88", VA = "0x815F88")]
		public void crossf(float[] data, int doff, int size, int start, int nlags, Cross cp)
		{
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0x8167FC", Offset = "0x8167FC", VA = "0x8167FC")]
		public static void peak(float[] y, int idx, out float xp, out float yp)
		{
		}

		[Token(Token = "0x6000722")]
		[Address(RVA = "0x815D28", Offset = "0x815D28", VA = "0x815D28")]
		public static float peak(float[] arr, int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000723")]
		[Address(RVA = "0x8165B4", Offset = "0x8165B4", VA = "0x8165B4")]
		public static void get_cand(Cross cross, PeakData[] peak, int nlags, out int ncand, float cand_thresh)
		{
		}

		[Token(Token = "0x6000724")]
		[Address(RVA = "0x814D60", Offset = "0x814D60", VA = "0x814D60")]
		public Stat[] getStationarity(float[] fdata, int fidx, int buff_size, int nframes, int frame_step, bool first)
		{
			return null;
		}

		[Token(Token = "0x6000725")]
		[Address(RVA = "0x817410", Offset = "0x817410", VA = "0x817410")]
		public Stat getSimilarity(int order, int size, float[] data, int dprev, int dcur, float preemp, float stab, bool init)
		{
			return default(Stat);
		}

		[Token(Token = "0x6000726")]
		[Address(RVA = "0x817D48", Offset = "0x817D48", VA = "0x817D48")]
		private void xaToaca(float[] a, float[] b, out float c, int p)
		{
		}

		[Token(Token = "0x6000727")]
		[Address(RVA = "0x817F10", Offset = "0x817F10", VA = "0x817F10")]
		private float xitakura(int p, float[] b, float c, float[] r, int r_offset, float gain)
		{
			return default(float);
		}

		[Token(Token = "0x6000728")]
		[Address(RVA = "0x8177D8", Offset = "0x8177D8", VA = "0x8177D8")]
		public float windEnergy(float[] data, int didx, int size)
		{
			return default(float);
		}

		[Token(Token = "0x6000729")]
		[Address(RVA = "0x817968", Offset = "0x817968", VA = "0x817968")]
		public void xlpc(int lpc_ord, float lpc_stabl, int wsize, float[] data, int didx, float[] lpca, float[] ar, out float normerr, float preemp)
		{
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0x81849C", Offset = "0x81849C", VA = "0x81849C")]
		public void xautoc(int wsize, float[] s, int p, float[] r)
		{
		}

		[Token(Token = "0x600072B")]
		[Address(RVA = "0x818688", Offset = "0x818688", VA = "0x818688")]
		public void xdurbin(float[] r, float[] a, int p, out float ex)
		{
		}

		[Token(Token = "0x600072C")]
		[Address(RVA = "0x8116E4", Offset = "0x8116E4", VA = "0x8116E4")]
		public int RequiredSampleCount(float sampleRate)
		{
			return default(int);
		}

		[Token(Token = "0x600072D")]
		[Address(RVA = "0x818B3C", Offset = "0x818B3C", VA = "0x818B3C")]
		public List<float> getPitch(float[] wav, ref float db, float sampleRate)
		{
			return null;
		}

		[Token(Token = "0x600072E")]
		[Address(RVA = "0x812234", Offset = "0x812234", VA = "0x812234")]
		public List<float> getPitch(float[] wav, int start, ref int end, ref float db, float sampleRate, bool streaming, bool last, bool jf_LatencyHack = false)
		{
			return null;
		}

		[Token(Token = "0x600072F")]
		[Address(RVA = "0x818BAC", Offset = "0x818BAC", VA = "0x818BAC")]
		public void loadData(float[] wav, int start, float[] fdata, int pos, long nsamples, ref float sum)
		{
		}
	}
	[Token(Token = "0x2000115")]
	public static class RAPTPitchDetectorExtensions
	{
		[Serializable]
		[Token(Token = "0x2000285")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2249B4", Offset = "0x2249B4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001528")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001529")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static Func<float, string> <>9__7_0;

			[Token(Token = "0x400152A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<int, int> <>9__14_0;

			[Token(Token = "0x400152B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public static Func<IGrouping<int, int>, int> <>9__14_1;

			[Token(Token = "0x400152C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<IGrouping<int, int>, int> <>9__14_2;

			[Token(Token = "0x400152D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public static Predicate<float> <>9__15_0;

			[Token(Token = "0x400152E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<float[], int> <>9__19_0;

			[Token(Token = "0x400152F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public static Func<float, int> <>9__23_0;

			[Token(Token = "0x4001530")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<float, float> <>9__24_0;

			[Token(Token = "0x6000CB3")]
			[Address(RVA = "0x81C17C", Offset = "0x81C17C", VA = "0x81C17C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000CB4")]
			[Address(RVA = "0x81C184", Offset = "0x81C184", VA = "0x81C184")]
			internal string <PrintArray>b__7_0(float j)
			{
				return null;
			}

			[Token(Token = "0x6000CB5")]
			[Address(RVA = "0x81C1A8", Offset = "0x81C1A8", VA = "0x81C1A8")]
			internal int <GetDominantValues>b__14_0(int i)
			{
				return default(int);
			}

			[Token(Token = "0x6000CB6")]
			[Address(RVA = "0x81C1B0", Offset = "0x81C1B0", VA = "0x81C1B0")]
			internal int <GetDominantValues>b__14_1(IGrouping<int, int> grp)
			{
				return default(int);
			}

			[Token(Token = "0x6000CB7")]
			[Address(RVA = "0x81C20C", Offset = "0x81C20C", VA = "0x81C20C")]
			internal int <GetDominantValues>b__14_2(IGrouping<int, int> grp)
			{
				return default(int);
			}

			[Token(Token = "0x6000CB8")]
			[Address(RVA = "0x81C2D4", Offset = "0x81C2D4", VA = "0x81C2D4")]
			internal bool <GetDominantsValues>b__15_0(float m)
			{
				return default(bool);
			}

			[Token(Token = "0x6000CB9")]
			[Address(RVA = "0x81C2EC", Offset = "0x81C2EC", VA = "0x81C2EC")]
			internal int <CombinedSize>b__19_0(float[] item)
			{
				return default(int);
			}

			[Token(Token = "0x6000CBA")]
			[Address(RVA = "0x81C30C", Offset = "0x81C30C", VA = "0x81C30C")]
			internal int <HerzToMidi>b__23_0(float item)
			{
				return default(int);
			}

			[Token(Token = "0x6000CBB")]
			[Address(RVA = "0x81C384", Offset = "0x81C384", VA = "0x81C384")]
			internal float <HerzToMidi_f>b__24_0(float item)
			{
				return default(float);
			}
		}

		[Token(Token = "0x2000286")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2249C4", Offset = "0x2249C4")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4001531")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public List<float> scores;

			[Token(Token = "0x4001532")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public List<float> data;

			[Token(Token = "0x6000CBC")]
			[Address(RVA = "0x81AAC4", Offset = "0x81AAC4", VA = "0x81AAC4")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x6000CBD")]
			[Address(RVA = "0x81C3FC", Offset = "0x81C3FC", VA = "0x81C3FC")]
			internal float <GetDominantsValues>b__1(float m)
			{
				return default(float);
			}
		}

		[Token(Token = "0x40009A3")]
		public const int UndefinedMidi = int.MinValue;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string[] notes;

		[Token(Token = "0x6000731")]
		[Address(RVA = "0x815E74", Offset = "0x815E74", VA = "0x815E74")]
		public static void PartialReverse(this List<float> data, int start, int length)
		{
		}

		[Token(Token = "0x6000732")]
		[Address(RVA = "0x817374", Offset = "0x817374", VA = "0x817374")]
		public static float SumOfSquared(this float[] data, int length, int offset = 0)
		{
			return default(float);
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0x8172D8", Offset = "0x8172D8", VA = "0x8172D8")]
		public static float Mean(this float[] data, int length, int offset = 0)
		{
			return default(float);
		}

		[Token(Token = "0x6000734")]
		[Address(RVA = "0x8142CC", Offset = "0x8142CC", VA = "0x8142CC")]
		public static bool AllSame(this int[] data, int length)
		{
			return default(bool);
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0x819B74", Offset = "0x819B74", VA = "0x819B74")]
		public static bool AllSame(this float[] data, int length)
		{
			return default(bool);
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0x819C08", Offset = "0x819C08", VA = "0x819C08")]
		public static string PrintArray(this float[] data)
		{
			return null;
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0x819438", Offset = "0x819438", VA = "0x819438")]
		public static int MinIndex(this float[] data, int length = int.MaxValue)
		{
			return default(int);
		}

		[Token(Token = "0x6000738")]
		[Address(RVA = "0x819310", Offset = "0x819310", VA = "0x819310")]
		public static void MinAndIndex(this float[] data, out int idx, out float minVal, int length = int.MaxValue)
		{
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0x819D50", Offset = "0x819D50", VA = "0x819D50")]
		public static bool IsPeak(this float[] data, int idx, float threshold)
		{
			return default(bool);
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0x816A0C", Offset = "0x816A0C", VA = "0x816A0C")]
		public static void SortByVal(this RAPTPitchDetector.PeakData[] peaks, int count)
		{
		}

		[Token(Token = "0x600073B")]
		[Address(RVA = "0x819E54", Offset = "0x819E54", VA = "0x819E54")]
		public static void SortBoth(float[] peaks, int[] locations, int count)
		{
		}

		[Token(Token = "0x600073C")]
		[Address(RVA = "0x81A024", Offset = "0x81A024", VA = "0x81A024")]
		public static void RemoveGlitches(this List<int> data, int threshold, int glitchWidth = 1)
		{
		}

		[Token(Token = "0x600073D")]
		[Address(RVA = "0x81A1B8", Offset = "0x81A1B8", VA = "0x81A1B8")]
		public static List<int> GetDominantValues(this List<int> data, int count)
		{
			return null;
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0x81A4F8", Offset = "0x81A4F8", VA = "0x81A4F8")]
		public static List<float> GetDominantsValues(this List<float> data, float percentToKeep = 0.51f)
		{
			return null;
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0x81AACC", Offset = "0x81AACC", VA = "0x81AACC")]
		public static List<int> GetAverageBuckets(this List<int> data, int numBuckets)
		{
			return null;
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0x81AC70", Offset = "0x81AC70", VA = "0x81AC70")]
		public static float GetAverageDelta(this List<int> data)
		{
			return default(float);
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0x81ADA0", Offset = "0x81ADA0", VA = "0x81ADA0")]
		public static float[] CombinedArray(this Queue<float[]> arrayList)
		{
			return null;
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0x81AF84", Offset = "0x81AF84", VA = "0x81AF84")]
		public static int CombinedSize(this Queue<float[]> arrayList)
		{
			return default(int);
		}

		[Token(Token = "0x6000743")]
		[Address(RVA = "0x81B0A4", Offset = "0x81B0A4", VA = "0x81B0A4")]
		public static int HerzToMidi(float hz)
		{
			return default(int);
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0x81B170", Offset = "0x81B170", VA = "0x81B170")]
		public static float HerzToFloatMidi(float hz)
		{
			return default(float);
		}

		[Token(Token = "0x6000745")]
		[Address(RVA = "0x81B220", Offset = "0x81B220", VA = "0x81B220")]
		public static float MidiToHerz(int midi)
		{
			return default(float);
		}

		[Token(Token = "0x6000746")]
		[Address(RVA = "0x81B2C8", Offset = "0x81B2C8", VA = "0x81B2C8")]
		public static List<int> HerzToMidi(List<float> hzList)
		{
			return null;
		}

		[Token(Token = "0x6000747")]
		[Address(RVA = "0x81B3F4", Offset = "0x81B3F4", VA = "0x81B3F4")]
		public static List<float> HerzToMidi_f(List<float> hzList)
		{
			return null;
		}

		[Token(Token = "0x6000748")]
		[Address(RVA = "0x81B520", Offset = "0x81B520", VA = "0x81B520")]
		public static string MidiToNote(int midi)
		{
			return null;
		}

		[Token(Token = "0x6000749")]
		[Address(RVA = "0x81B638", Offset = "0x81B638", VA = "0x81B638")]
		public static string NoteString(this List<int> data)
		{
			return null;
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0x81B87C", Offset = "0x81B87C", VA = "0x81B87C")]
		public static float NoteMidi(int item)
		{
			return default(float);
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0x81B898", Offset = "0x81B898", VA = "0x81B898")]
		public static float noteIndex(int _midi)
		{
			return default(float);
		}

		[Token(Token = "0x600074C")]
		[Address(RVA = "0x81B920", Offset = "0x81B920", VA = "0x81B920")]
		public static float Mod(float val, float mod)
		{
			return default(float);
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0x81B9BC", Offset = "0x81B9BC", VA = "0x81B9BC")]
		public static float AvarageNote(this List<int> data)
		{
			return default(float);
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0x81BB24", Offset = "0x81BB24", VA = "0x81BB24")]
		public static float AvarageNoteF(this List<float> data)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000116")]
	public class Window
	{
		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<int, float[]> hanningList;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly object listAccessLock;

		[Token(Token = "0x6000750")]
		[Address(RVA = "0x818000", Offset = "0x818000", VA = "0x818000")]
		public static float[] Hanning(int n)
		{
			return null;
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0x818214", Offset = "0x818214", VA = "0x818214")]
		public static void ApplyHanning(float[] din, int didx, float[] dout, int n, float preemp)
		{
		}

		[Token(Token = "0x6000752")]
		[Address(RVA = "0x81C4A4", Offset = "0x81C4A4", VA = "0x81C4A4")]
		private static float[] CreateHanning(int n)
		{
			return null;
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0x81C5BC", Offset = "0x81C5BC", VA = "0x81C5BC")]
		public Window()
		{
		}
	}
}
namespace jellyApp
{
	[Token(Token = "0x2000117")]
	public class Animation : MonoBehaviour
	{
		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x22AB04", Offset = "0x22AB04")]
		public bool listeningForNote;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int notes;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float radius;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float angle;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float prevAngleRad;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x22AB38", Offset = "0x22AB38")]
		public float angleRad;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public GameObject tower_element;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject note_element;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public GameObject[] scale;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x22AB54", Offset = "0x22AB54")]
		public float towerHeight;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int tower_Totalunit;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject[] towerCenter;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public List<GameObject[]> towerParts;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float note;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float note_down;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float note_up;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float prev_note;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float prev_note_down;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float prev_note_up;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TextMeshPro displayNote;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Camera cam;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x22AB88", Offset = "0x22AB88")]
		public Color bgcolor;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Note_item[] scale_data;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Color note_up_colour;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Color note_colour;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public Color note_down_colour;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public Color note_closer_colour;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float offset_scale_mul;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Spectrum_Rig spectrum;

		[Token(Token = "0x6000755")]
		[Address(RVA = "0xE7733C", Offset = "0xE7733C", VA = "0xE7733C")]
		public void Intilize(ref Contex context)
		{
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0xE77654", Offset = "0xE77654", VA = "0xE77654")]
		public float Decangle(float _angle)
		{
			return default(float);
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0xE7766C", Offset = "0xE7766C", VA = "0xE7766C")]
		public void Tower_grow(ref Analizer_Sound _analize_sound, int _i)
		{
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0xE77670", Offset = "0xE77670", VA = "0xE77670")]
		public void Tower_shrink(int _i)
		{
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0xE777B8", Offset = "0xE777B8", VA = "0xE777B8")]
		public Animation()
		{
		}
	}
}
namespace LuxWater
{
	[Token(Token = "0x2000118")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x22448C", Offset = "0x22448C")]
	public class LuxWater_CameraDepthMode : MonoBehaviour
	{
		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool GrabDepthTexture;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Camera cam;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Material CopyDepthMat;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RenderTextureFormat format;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Dictionary<Camera, CommandBuffer> m_cmdBuffer;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool CamCallBackAdded;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[HideInInspector]
		public bool ShowShaderWarning;

		[Token(Token = "0x600075A")]
		[Address(RVA = "0x54FD2C", Offset = "0x54FD2C", VA = "0x54FD2C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600075B")]
		[Address(RVA = "0x54FEF4", Offset = "0x54FEF4", VA = "0x54FEF4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0x550154", Offset = "0x550154", VA = "0x550154")]
		private void OnPrecull(Camera camera)
		{
		}

		[Token(Token = "0x600075D")]
		[Address(RVA = "0x5505E4", Offset = "0x5505E4", VA = "0x5505E4")]
		public LuxWater_CameraDepthMode()
		{
		}
	}
	[Token(Token = "0x2000119")]
	public class LuxWater_HelpBtn : PropertyAttribute
	{
		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string URL;

		[Token(Token = "0x600075E")]
		[Address(RVA = "0x550670", Offset = "0x550670", VA = "0x550670")]
		public LuxWater_HelpBtn(string URL)
		{
		}
	}
	[Token(Token = "0x200011A")]
	public class LuxWater_InfiniteOcean : MonoBehaviour
	{
		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x22ABCC", Offset = "0x22ABCC")]
		[AttributeAttribute(Name = "LuxWater_HelpBtn", RVA = "0x22ABCC", Offset = "0x22ABCC")]
		public Camera MainCam;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float GridSize;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Transform trans;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform camTrans;

		[Token(Token = "0x600075F")]
		[Address(RVA = "0x550690", Offset = "0x550690", VA = "0x550690")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000760")]
		[Address(RVA = "0x5506F0", Offset = "0x5506F0", VA = "0x5506F0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000761")]
		[Address(RVA = "0x550AA8", Offset = "0x550AA8", VA = "0x550AA8")]
		public LuxWater_InfiniteOcean()
		{
		}
	}
	[Token(Token = "0x200011B")]
	[ExecuteInEditMode]
	public class LuxWater_PlanarReflection : MonoBehaviour
	{
		[Token(Token = "0x2000287")]
		public enum ReflectionResolution
		{
			[Token(Token = "0x4001534")]
			Full = 1,
			[Token(Token = "0x4001535")]
			Half = 2,
			[Token(Token = "0x4001536")]
			Quarter = 4,
			[Token(Token = "0x4001537")]
			Eighth = 8
		}

		[Token(Token = "0x2000288")]
		public enum NumberOfShadowCascades
		{
			[Token(Token = "0x4001539")]
			One = 1,
			[Token(Token = "0x400153A")]
			Two = 2,
			[Token(Token = "0x400153B")]
			Four = 4
		}

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x22AC1C", Offset = "0x22AC1C")]
		[AttributeAttribute(Name = "LuxWater_HelpBtn", RVA = "0x22AC1C", Offset = "0x22AC1C")]
		public bool UpdateSceneView;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x22AC6C", Offset = "0x22AC6C")]
		public bool isMaster;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material[] WaterMaterials;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x22AC84", Offset = "0x22AC84")]
		public LayerMask reflectionMask;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ReflectionResolution Resolution;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color clearColor;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool reflectSkybox;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x22AC9C", Offset = "0x22AC9C")]
		public bool disablePixelLights;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x22ACB4", Offset = "0x22ACB4")]
		public bool renderShadows;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float shadowDistance;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public NumberOfShadowCascades ShadowCascades;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x22ACCC", Offset = "0x22ACCC")]
		public float WaterSurfaceOffset;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float clipPlaneOffset;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string reflectionSampler;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 m_Oldpos;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Camera m_ReflectionCamera;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Material m_SharedMaterial;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Camera, bool> m_HelperCameras;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private RenderTexture m_reflectionMap;

		[Token(Token = "0x6000762")]
		[Address(RVA = "0x550ABC", Offset = "0x550ABC", VA = "0x550ABC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000763")]
		[Address(RVA = "0x550BD4", Offset = "0x550BD4", VA = "0x550BD4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000764")]
		[Address(RVA = "0x550CDC", Offset = "0x550CDC", VA = "0x550CDC")]
		private Camera CreateReflectionCameraFor(Camera cam)
		{
			return null;
		}

		[Token(Token = "0x6000765")]
		[Address(RVA = "0x551108", Offset = "0x551108", VA = "0x551108")]
		private void SetStandardCameraParameter(Camera cam, LayerMask mask)
		{
		}

		[Token(Token = "0x6000766")]
		[Address(RVA = "0x5511F8", Offset = "0x5511F8", VA = "0x5511F8")]
		private RenderTexture CreateTextureFor(Camera cam)
		{
			return null;
		}

		[Token(Token = "0x6000767")]
		[Address(RVA = "0x551340", Offset = "0x551340", VA = "0x551340")]
		public void RenderHelpCameras(Camera currentCam)
		{
		}

		[Token(Token = "0x6000768")]
		[Address(RVA = "0x5522F0", Offset = "0x5522F0", VA = "0x5522F0")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6000769")]
		[Address(RVA = "0x552358", Offset = "0x552358", VA = "0x552358")]
		public void WaterTileBeingRendered(Transform tr, Camera currentCam)
		{
		}

		[Token(Token = "0x600076A")]
		[Address(RVA = "0x552474", Offset = "0x552474", VA = "0x552474")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x600076B")]
		[Address(RVA = "0x55154C", Offset = "0x55154C", VA = "0x55154C")]
		private void RenderReflectionFor(Camera cam, Camera reflectCamera)
		{
		}

		[Token(Token = "0x600076C")]
		[Address(RVA = "0x5524A0", Offset = "0x5524A0", VA = "0x5524A0")]
		private void SaneCameraSettings(Camera helperCam)
		{
		}

		[Token(Token = "0x600076D")]
		[Address(RVA = "0x552A80", Offset = "0x552A80", VA = "0x552A80")]
		private static Matrix4x4 CalculateObliqueMatrix(Matrix4x4 projection, Vector4 clipPlane)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600076E")]
		[Address(RVA = "0x55254C", Offset = "0x55254C", VA = "0x55254C")]
		private static Matrix4x4 CalculateReflectionMatrix(Matrix4x4 reflectionMat, Vector4 plane)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600076F")]
		[Address(RVA = "0x552E48", Offset = "0x552E48", VA = "0x552E48")]
		private static float Sgn(float a)
		{
			return default(float);
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0x552838", Offset = "0x552838", VA = "0x552838")]
		private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0x552E7C", Offset = "0x552E7C", VA = "0x552E7C")]
		public LuxWater_PlanarReflection()
		{
		}
	}
	[Token(Token = "0x200011C")]
	[ExecuteInEditMode]
	public class LuxWater_PlanarWaterTile : MonoBehaviour
	{
		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x22ACE4", Offset = "0x22ACE4")]
		[AttributeAttribute(Name = "LuxWater_HelpBtn", RVA = "0x22ACE4", Offset = "0x22ACE4")]
		public LuxWater_PlanarReflection reflection;

		[Token(Token = "0x6000772")]
		[Address(RVA = "0x552F40", Offset = "0x552F40", VA = "0x552F40")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000773")]
		[Address(RVA = "0x552F44", Offset = "0x552F44", VA = "0x552F44")]
		private void AcquireComponents()
		{
		}

		[Token(Token = "0x6000774")]
		[Address(RVA = "0x553084", Offset = "0x553084", VA = "0x553084")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x6000775")]
		[Address(RVA = "0x553140", Offset = "0x553140", VA = "0x553140")]
		public LuxWater_PlanarWaterTile()
		{
		}
	}
	[Token(Token = "0x200011D")]
	public class LuxWater_Projector : MonoBehaviour
	{
		[Token(Token = "0x2000289")]
		public enum ProjectorType
		{
			[Token(Token = "0x400153D")]
			FoamProjector,
			[Token(Token = "0x400153E")]
			NormalProjector
		}

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x22AD34", Offset = "0x22AD34")]
		public ProjectorType Type;

		[NonSerialized]
		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<LuxWater_Projector> FoamProjectors;

		[NonSerialized]
		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static List<LuxWater_Projector> NormalProjectors;

		[NonSerialized]
		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Renderer m_Rend;

		[NonSerialized]
		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Material m_Mat;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool added;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 origPos;

		[Token(Token = "0x6000776")]
		[Address(RVA = "0x553148", Offset = "0x553148", VA = "0x553148")]
		private void Update()
		{
		}

		[Token(Token = "0x6000777")]
		[Address(RVA = "0x553184", Offset = "0x553184", VA = "0x553184")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000778")]
		[Address(RVA = "0x553384", Offset = "0x553384", VA = "0x553384")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000779")]
		[Address(RVA = "0x553490", Offset = "0x553490", VA = "0x553490")]
		public LuxWater_Projector()
		{
		}
	}
	[Token(Token = "0x200011E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x22452C", Offset = "0x22452C")]
	[ExecuteInEditMode]
	public class LuxWater_ProjectorRenderer : MonoBehaviour
	{
		[Token(Token = "0x200028A")]
		public enum BufferResolution
		{
			[Token(Token = "0x4001540")]
			Full = 1,
			[Token(Token = "0x4001541")]
			Half = 2,
			[Token(Token = "0x4001542")]
			Quarter = 4,
			[Token(Token = "0x4001543")]
			Eighth = 8
		}

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x22AD48", Offset = "0x22AD48")]
		public BufferResolution FoamBufferResolution;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BufferResolution NormalBufferResolution;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x22AD5C", Offset = "0x22AD5C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x22AD5C", Offset = "0x22AD5C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x22AD5C", Offset = "0x22AD5C")]
		public bool DebugFoamBuffer;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool DebugNormalBuffer;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool DebugStats;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int drawnFoamProjectors;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int drawnNormalProjectors;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CommandBuffer cb_Foam;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static CommandBuffer cb_Normals;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Camera cam;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Transform camTransform;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RenderTexture ProjectedFoam;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private RenderTexture ProjectedNormals;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Texture2D defaultBump;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Bounds tempBounds;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int _LuxWater_FoamOverlayPID;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _LuxWater_NormalOverlayPID;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Plane[] frustumPlanes;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material DebugMat;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Material DebugNormalMat;

		[Token(Token = "0x600077B")]
		[Address(RVA = "0x55353C", Offset = "0x55353C", VA = "0x55353C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600077C")]
		[Address(RVA = "0x553674", Offset = "0x553674", VA = "0x553674")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600077D")]
		[Address(RVA = "0x553970", Offset = "0x553970", VA = "0x553970")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x600077E")]
		[Address(RVA = "0x5548F4", Offset = "0x5548F4", VA = "0x5548F4")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0x554CD8", Offset = "0x554CD8", VA = "0x554CD8")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000780")]
		[Address(RVA = "0x555274", Offset = "0x555274", VA = "0x555274")]
		public LuxWater_ProjectorRenderer()
		{
		}
	}
	[Token(Token = "0x200011F")]
	public static class GeomUtil
	{
		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Action<Plane[], Matrix4x4> _calculateFrustumPlanes_Imp;

		[Token(Token = "0x6000781")]
		[Address(RVA = "0x54F9D0", Offset = "0x54F9D0", VA = "0x54F9D0")]
		public static void CalculateFrustumPlanes(Plane[] planes, Matrix4x4 worldToProjectMatrix)
		{
		}
	}
	[Token(Token = "0x2000120")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x2245AC", Offset = "0x2245AC")]
	public class LuxWater_UnderWaterBlur : MonoBehaviour
	{
		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x22ADC0", Offset = "0x22ADC0")]
		[AttributeAttribute(Name = "LuxWater_HelpBtn", RVA = "0x22ADC0", Offset = "0x22ADC0")]
		public float blurSpread;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int blurDownSample;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int blurIterations;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2[] m_offsets;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Material blurMaterial;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material blitMaterial;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private LuxWater_UnderWaterRendering waterrendermanager;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool doBlur;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool initBlur;

		[Token(Token = "0x6000782")]
		[Address(RVA = "0x55582C", Offset = "0x55582C", VA = "0x55582C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000783")]
		[Address(RVA = "0x55590C", Offset = "0x55590C", VA = "0x55590C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0x555A30", Offset = "0x555A30", VA = "0x555A30")]
		private void GetWaterrendermanagerInstance()
		{
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0x555A90", Offset = "0x555A90", VA = "0x555A90")]
		private void OnRenderImage(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0x555F2C", Offset = "0x555F2C", VA = "0x555F2C")]
		private void FourTapCone(RenderTexture source, RenderTexture dest, int iteration)
		{
		}

		[Token(Token = "0x6000787")]
		[Address(RVA = "0x555D10", Offset = "0x555D10", VA = "0x555D10")]
		private void DownSample(RenderTexture source, RenderTexture dest)
		{
		}

		[Token(Token = "0x6000788")]
		[Address(RVA = "0x55615C", Offset = "0x55615C", VA = "0x55615C")]
		public LuxWater_UnderWaterBlur()
		{
		}
	}
	[Token(Token = "0x2000121")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x22461C", Offset = "0x22461C")]
	public class LuxWater_UnderWaterRendering : MonoBehaviour
	{
		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static LuxWater_UnderWaterRendering instance;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x22AE10", Offset = "0x22AE10")]
		[AttributeAttribute(Name = "LuxWater_HelpBtn", RVA = "0x22AE10", Offset = "0x22AE10")]
		public Transform Sun;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x22AE60", Offset = "0x22AE60")]
		public bool FindSunOnEnable;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public string SunGoName;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string SunTagName;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Light SunLight;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x22AE78", Offset = "0x22AE78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x22AE78", Offset = "0x22AE78")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x22AE78", Offset = "0x22AE78")]
		public bool EnableDeepwaterLighting;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float DefaultWaterSurfacePosition;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float DirectionalLightingFadeRange;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float FogLightingFadeRange;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x22AEDC", Offset = "0x22AEDC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x22AEDC", Offset = "0x22AEDC")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x22AEDC", Offset = "0x22AEDC")]
		public bool EnableAdvancedDeferredFog;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float FogDepthShift;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float FogEdgeBlending;

		[NonSerialized]
		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x22AF40", Offset = "0x22AF40")]
		public int activeWaterVolume;

		[NonSerialized]
		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<Camera> activeWaterVolumeCameras;

		[NonSerialized]
		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float activeGridSize;

		[NonSerialized]
		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float WaterSurfacePos;

		[NonSerialized]
		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x22AF54", Offset = "0x22AF54")]
		public List<int> RegisteredWaterVolumesIDs;

		[NonSerialized]
		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<LuxWater_WaterVolume> RegisteredWaterVolumes;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private List<Mesh> WaterMeshes;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Transform> WaterTransforms;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private List<Material> WaterMaterials;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<bool> WaterIsOnScreen;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private List<bool> WaterUsesSlidingVolume;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RenderTexture UnderWaterMask;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x22AF68", Offset = "0x22AF68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x22AF68", Offset = "0x22AF68")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x22AF68", Offset = "0x22AF68")]
		public List<Material> m_aboveWatersurface;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<Material> m_belowWatersurface;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x22AFCC", Offset = "0x22AFCC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x22AFCC", Offset = "0x22AFCC")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x22AFCC", Offset = "0x22AFCC")]
		public ShaderVariantCollection PrewarmedShaders;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int ListCapacity;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x22B030", Offset = "0x22B030")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x22B030", Offset = "0x22B030")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x22B030", Offset = "0x22B030")]
		public bool enableDebug;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x22B094", Offset = "0x22B094")]
		private Material mat;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Material blurMaterial;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material blitMaterial;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Camera cam;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool UnderwaterIsSetUp;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Transform camTransform;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Matrix4x4 frustumCornersArray;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private SphericalHarmonicsL2 ambientProbe;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private Vector3[] directions;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Color[] AmbientLightingSamples;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private bool DoUnderWaterRendering;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Matrix4x4 camProj;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private Vector3[] frustumCorners;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private float Projection;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private bool islinear;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private Matrix4x4 WatervolumeMatrix;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private int UnderWaterMaskPID;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private int Lux_FrustumCornersWSPID;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		private int Lux_CameraWSPID;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private int GerstnerEnabledPID;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		private int LuxWaterMask_GerstnerVertexIntensityPID;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private int GerstnerVertexIntensityPID;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		private int LuxWaterMask_GAmplitudePID;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private int GAmplitudePID;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		private int LuxWaterMask_GFinalFrequencyPID;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private int GFinalFrequencyPID;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		private int LuxWaterMask_GSteepnessPID;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private int GSteepnessPID;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		private int LuxWaterMask_GFinalSpeedPID;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private int GFinalSpeedPID;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private int LuxWaterMask_GDirectionABPID;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private int GDirectionABPID;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		private int LuxWaterMask_GDirectionCDPID;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private int GDirectionCDPID;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		private int LuxWaterMask_GerstnerSecondaryWaves;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private int GerstnerSecondaryWaves;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		private int Lux_UnderWaterAmbientSkyLightPID;

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private int Lux_UnderWaterSunColorPID;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		private int Lux_UnderWaterSunDirPID;

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private int Lux_UnderWaterSunDirViewSpacePID;

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		private int Lux_EdgeLengthPID;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private int Lux_CausticsEnabledPID;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		private int Lux_CausticModePID;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private int Lux_UnderWaterFogColorPID;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		private int Lux_UnderWaterFogDensityPID;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private int Lux_UnderWaterFogAbsorptionCancellationPID;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		private int Lux_UnderWaterAbsorptionHeightPID;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private int Lux_UnderWaterAbsorptionMaxHeightPID;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		private int Lux_MaxDirLightDepthPID;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private int Lux_MaxFogLightDepthPID;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		private int Lux_UnderWaterAbsorptionDepthPID;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private int Lux_UnderWaterAbsorptionColorStrengthPID;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		private int Lux_UnderWaterAbsorptionStrengthPID;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private int Lux_UnderWaterUnderwaterScatteringPowerPID;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		private int Lux_UnderWaterUnderwaterScatteringIntensityPID;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private int Lux_UnderWaterUnderwaterScatteringColorPID;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		private int Lux_UnderWaterUnderwaterScatteringOcclusionPID;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private int Lux_UnderWaterCausticsPID;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		private int Lux_UnderWaterDeferredFogParams;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private int CausticTexPID;

		[Token(Token = "0x6000789")]
		[Address(RVA = "0x5561E8", Offset = "0x5561E8", VA = "0x5561E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600078A")]
		[Address(RVA = "0x556DE8", Offset = "0x556DE8", VA = "0x556DE8")]
		private void CleanUp()
		{
		}

		[Token(Token = "0x600078B")]
		[Address(RVA = "0x557044", Offset = "0x557044", VA = "0x557044")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0x557048", Offset = "0x557048", VA = "0x557048")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600078D")]
		[Address(RVA = "0x55704C", Offset = "0x55704C", VA = "0x55704C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0x556D14", Offset = "0x556D14", VA = "0x556D14")]
		public void SetDeferredFogParams()
		{
		}

		[Token(Token = "0x600078F")]
		[Address(RVA = "0x556C2C", Offset = "0x556C2C", VA = "0x556C2C")]
		public void SetDeepwaterLighting()
		{
		}

		[Token(Token = "0x6000790")]
		[Address(RVA = "0x557068", Offset = "0x557068", VA = "0x557068")]
		public void RegisterWaterVolume(LuxWater_WaterVolume item, int ID, bool visible, bool SlidingVolume)
		{
		}

		[Token(Token = "0x6000791")]
		[Address(RVA = "0x557858", Offset = "0x557858", VA = "0x557858")]
		public void DeRegisterWaterVolume(LuxWater_WaterVolume item, int ID)
		{
		}

		[Token(Token = "0x6000792")]
		[Address(RVA = "0x557A08", Offset = "0x557A08", VA = "0x557A08")]
		public void SetWaterVisible(int ID)
		{
		}

		[Token(Token = "0x6000793")]
		[Address(RVA = "0x557AB0", Offset = "0x557AB0", VA = "0x557AB0")]
		public void SetWaterInvisible(int ID)
		{
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0x557B58", Offset = "0x557B58", VA = "0x557B58")]
		public void EnteredWaterVolume(LuxWater_WaterVolume item, int ID, Camera triggerCam, float GridSize)
		{
		}

		[Token(Token = "0x6000795")]
		[Address(RVA = "0x557D98", Offset = "0x557D98", VA = "0x557D98")]
		public void LeftWaterVolume(LuxWater_WaterVolume item, int ID, Camera triggerCam)
		{
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0x557F74", Offset = "0x557F74", VA = "0x557F74")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0x5598E4", Offset = "0x5598E4", VA = "0x5598E4")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x6000798")]
		[Address(RVA = "0x5572F4", Offset = "0x5572F4", VA = "0x5572F4")]
		public void SetGerstnerWaves(int index)
		{
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0x557F98", Offset = "0x557F98", VA = "0x557F98")]
		public void RenderWaterMask(Camera currentCamera, bool SecondaryCameraRendering)
		{
		}

		[Token(Token = "0x600079A")]
		[Address(RVA = "0x559908", Offset = "0x559908", VA = "0x559908")]
		public void RenderUnderWater(RenderTexture src, RenderTexture dest, Camera currentCamera, bool SecondaryCameraRendering)
		{
		}

		[Token(Token = "0x600079B")]
		[Address(RVA = "0x55A8F8", Offset = "0x55A8F8", VA = "0x55A8F8")]
		public LuxWater_UnderWaterRendering()
		{
		}
	}
	[Token(Token = "0x2000122")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x22468C", Offset = "0x22468C")]
	public class LuxWater_UnderwaterRenderingSlave : MonoBehaviour
	{
		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private LuxWater_UnderWaterRendering waterrendermanager;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool readyToGo;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Camera cam;

		[Token(Token = "0x600079C")]
		[Address(RVA = "0x55AC6C", Offset = "0x55AC6C", VA = "0x55AC6C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600079D")]
		[Address(RVA = "0x55ACEC", Offset = "0x55ACEC", VA = "0x55ACEC")]
		private void GetWaterrendermanager()
		{
		}

		[Token(Token = "0x600079E")]
		[Address(RVA = "0x55AD94", Offset = "0x55AD94", VA = "0x55AD94")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x600079F")]
		[Address(RVA = "0x55ADD0", Offset = "0x55ADD0", VA = "0x55ADD0")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0x55AEA4", Offset = "0x55AEA4", VA = "0x55AEA4")]
		public LuxWater_UnderwaterRenderingSlave()
		{
		}
	}
	[Token(Token = "0x2000123")]
	public class LuxWater_WaterVolume : MonoBehaviour
	{
		[Token(Token = "0x200028B")]
		public delegate void TriggerEnter();

		[Token(Token = "0x200028C")]
		public delegate void TriggerExit();

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x22B0C8", Offset = "0x22B0C8")]
		[AttributeAttribute(Name = "LuxWater_HelpBtn", RVA = "0x22B0C8", Offset = "0x22B0C8")]
		public Mesh WaterVolumeMesh;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x22B118", Offset = "0x22B118")]
		public bool SlidingVolume;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float GridSize;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LuxWater_UnderWaterRendering waterrendermanager;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool readyToGo;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int ID;

		[Token(Token = "0x14000009")]
		public static event TriggerEnter OnEnterWaterVolume
		{
			[Token(Token = "0x60007A1")]
			[Address(RVA = "0x55AEAC", Offset = "0x55AEAC", VA = "0x55AEAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22CCF8", Offset = "0x22CCF8")]
			add
			{
			}
			[Token(Token = "0x60007A2")]
			[Address(RVA = "0x55AF70", Offset = "0x55AF70", VA = "0x55AF70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22CD08", Offset = "0x22CD08")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000A")]
		public static event TriggerExit OnExitWaterVolume
		{
			[Token(Token = "0x60007A3")]
			[Address(RVA = "0x55B034", Offset = "0x55B034", VA = "0x55B034")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22CD18", Offset = "0x22CD18")]
			add
			{
			}
			[Token(Token = "0x60007A4")]
			[Address(RVA = "0x55B0FC", Offset = "0x55B0FC", VA = "0x55B0FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22CD28", Offset = "0x22CD28")]
			remove
			{
			}
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0x55B1C4", Offset = "0x55B1C4", VA = "0x55B1C4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0x55B3C4", Offset = "0x55B3C4", VA = "0x55B3C4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0x55B4D4", Offset = "0x55B4D4", VA = "0x55B4D4")]
		private void Register()
		{
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0x55B62C", Offset = "0x55B62C", VA = "0x55B62C")]
		private void OnBecameVisible()
		{
		}

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0x55B664", Offset = "0x55B664", VA = "0x55B664")]
		private void OnBecameInvisible()
		{
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0x55B69C", Offset = "0x55B69C", VA = "0x55B69C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0x55BA54", Offset = "0x55BA54", VA = "0x55BA54")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0x55BBA8", Offset = "0x55BBA8", VA = "0x55BBA8")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0x55BF4C", Offset = "0x55BF4C", VA = "0x55BF4C")]
		public LuxWater_WaterVolume()
		{
		}
	}
	[Token(Token = "0x2000124")]
	public class LuxWater_WaterVolumeTrigger : MonoBehaviour
	{
		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x22B12C", Offset = "0x22B12C")]
		[AttributeAttribute(Name = "LuxWater_HelpBtn", RVA = "0x22B12C", Offset = "0x22B12C")]
		public Camera cam;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool active;

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0x55BFF8", Offset = "0x55BFF8", VA = "0x55BFF8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007AF")]
		[Address(RVA = "0x55C0E8", Offset = "0x55C0E8", VA = "0x55C0E8")]
		public LuxWater_WaterVolumeTrigger()
		{
		}
	}
	[Token(Token = "0x2000125")]
	public class LuxWater_SetMeshBounds : MonoBehaviour
	{
		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x22B17C", Offset = "0x22B17C")]
		[AttributeAttribute(Name = "LuxWater_HelpBtn", RVA = "0x22B17C", Offset = "0x22B17C")]
		public float Expand_XZ;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Expand_Y;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Renderer rend;

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0x5552EC", Offset = "0x5552EC", VA = "0x5552EC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0x55546C", Offset = "0x55546C", VA = "0x55546C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0x555500", Offset = "0x555500", VA = "0x555500")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0x555680", Offset = "0x555680", VA = "0x555680")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x555824", Offset = "0x555824", VA = "0x555824")]
		public LuxWater_SetMeshBounds()
		{
		}
	}
}
namespace LuxWater.Demo
{
	[Token(Token = "0x2000126")]
	public class LuxWater_ExtendedFlycam : MonoBehaviour
	{
		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float cameraSensitivity;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float climbSpeed;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float normalMoveSpeed;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float slowMoveFactor;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float fastMoveFactor;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float rotationX;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float rotationY;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool isOrtho;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Camera cam;

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0x54ECC8", Offset = "0x54ECC8", VA = "0x54ECC8")]
		private void Start()
		{
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0x54EDCC", Offset = "0x54EDCC", VA = "0x54EDCC")]
		private void Update()
		{
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0x54F998", Offset = "0x54F998", VA = "0x54F998")]
		public LuxWater_ExtendedFlycam()
		{
		}
	}
}
namespace GlowEffect
{
	[Token(Token = "0x2000127")]
	public class Demo : MonoBehaviour
	{
		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool enableGlow;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GlowEffect.GlowMode glowMode;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public GlowEffect.BlendMode blendMode;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int downsamplePower;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float glowStrength;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int blurIterations;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float blurSpread;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject glowGroup;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public GameObject alphaGlowGroup;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GlowEffect glowEffect;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Rect glowControlsVisibleRect;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Rect glowControlsNotVisibleRect;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool showGlowControls;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float updateInterval;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float accum;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int frames;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float timeleft;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float fps;

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x3F5274", Offset = "0x3F5274", VA = "0x3F5274")]
		public void Start()
		{
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0x3F5558", Offset = "0x3F5558", VA = "0x3F5558")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0x3F5328", Offset = "0x3F5328", VA = "0x3F5328")]
		private void UpdateGlow()
		{
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0x3F70F8", Offset = "0x3F70F8", VA = "0x3F70F8")]
		private void ActiveRecursively(Transform obj, bool active)
		{
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0x3F73E4", Offset = "0x3F73E4", VA = "0x3F73E4")]
		public void Update()
		{
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0x3F747C", Offset = "0x3F747C", VA = "0x3F747C")]
		public Demo()
		{
		}
	}
	[Token(Token = "0x2000128")]
	public class GlowEffect : MonoBehaviour
	{
		[Token(Token = "0x200028D")]
		public enum GlowMode
		{
			[Token(Token = "0x4001545")]
			Glow,
			[Token(Token = "0x4001546")]
			AlphaGlow,
			[Token(Token = "0x4001547")]
			SimpleGlow,
			[Token(Token = "0x4001548")]
			SimpleAlphaGlow
		}

		[Token(Token = "0x200028E")]
		public enum BlendMode
		{
			[Token(Token = "0x400154A")]
			Additive,
			[Token(Token = "0x400154B")]
			Multiply,
			[Token(Token = "0x400154C")]
			Screen,
			[Token(Token = "0x400154D")]
			Subtract
		}

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Material glowMaterial;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Shader glowReplaceShader;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public GlowMode glowMode;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BlendMode blendMode;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int downsampleSize;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int blurIterations;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float blurSpread;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float glowStrength;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LayerMask ignoreLayers;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color glowColorMultiplier;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera origCamera;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Camera shaderCamera;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int shaderCullingMask;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Rect normalizedRect;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private RenderTexture replaceRenderTexture;

		[Token(Token = "0x17000102")]
		public int BlurIterations
		{
			[Token(Token = "0x60007BE")]
			[Address(RVA = "0x3F74B4", Offset = "0x3F74B4", VA = "0x3F74B4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60007BF")]
			[Address(RVA = "0x3F74BC", Offset = "0x3F74BC", VA = "0x3F74BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000103")]
		public float BlurSpread
		{
			[Token(Token = "0x60007C0")]
			[Address(RVA = "0x3F74C4", Offset = "0x3F74C4", VA = "0x3F74C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60007C1")]
			[Address(RVA = "0x3F74CC", Offset = "0x3F74CC", VA = "0x3F74CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000104")]
		public float GlowStrength
		{
			[Token(Token = "0x60007C2")]
			[Address(RVA = "0x3F75DC", Offset = "0x3F75DC", VA = "0x3F75DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60007C3")]
			[Address(RVA = "0x3F75E4", Offset = "0x3F75E4", VA = "0x3F75E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000105")]
		public Color GlowColorMultiplier
		{
			[Token(Token = "0x60007C4")]
			[Address(RVA = "0x3F75EC", Offset = "0x3F75EC", VA = "0x3F75EC")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60007C5")]
			[Address(RVA = "0x3F75FC", Offset = "0x3F75FC", VA = "0x3F75FC")]
			set
			{
			}
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x3F7614", Offset = "0x3F7614", VA = "0x3F7614")]
		public void Awake()
		{
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0x3F7674", Offset = "0x3F7674", VA = "0x3F7674")]
		public void Start()
		{
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0x3F7760", Offset = "0x3F7760", VA = "0x3F7760")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0x3F74D4", Offset = "0x3F74D4", VA = "0x3F74D4")]
		private void UpdateGlowMaterial()
		{
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0x3F7AC0", Offset = "0x3F7AC0", VA = "0x3F7AC0")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0x3F7D14", Offset = "0x3F7D14", VA = "0x3F7D14")]
		public void OnPreRender()
		{
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0x3F7EC0", Offset = "0x3F7EC0", VA = "0x3F7EC0")]
		public void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0x3F7EC4", Offset = "0x3F7EC4", VA = "0x3F7EC4")]
		private void CalculateGlow(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0x3F7B84", Offset = "0x3F7B84", VA = "0x3F7B84")]
		private void DisableShaderKeywords()
		{
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0x3F81E8", Offset = "0x3F81E8", VA = "0x3F81E8")]
		public GlowEffect()
		{
		}
	}
}
namespace TMPro
{
	[Serializable]
	[Token(Token = "0x2000129")]
	public class TMP_DigitValidator : TMP_InputValidator
	{
		[Token(Token = "0x60007D0")]
		[Address(RVA = "0x44E7A0", Offset = "0x44E7A0", VA = "0x44E7A0", Slot = "4")]
		public override char Validate(ref string text, ref int pos, char ch)
		{
			return default(char);
		}

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0x44E7C4", Offset = "0x44E7C4", VA = "0x44E7C4")]
		public TMP_DigitValidator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200012A")]
	public class TMP_PhoneNumberValidator : TMP_InputValidator
	{
		[Token(Token = "0x60007D2")]
		[Address(RVA = "0x44E7CC", Offset = "0x44E7CC", VA = "0x44E7CC", Slot = "4")]
		public override char Validate(ref string text, ref int pos, char ch)
		{
			return default(char);
		}

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0x44EAC8", Offset = "0x44EAC8", VA = "0x44EAC8")]
		public TMP_PhoneNumberValidator()
		{
		}
	}
	[Token(Token = "0x200012B")]
	public class TMP_TextEventHandler : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Serializable]
		[Token(Token = "0x200028F")]
		public class CharacterSelectionEvent : UnityEvent<char, int>
		{
			[Token(Token = "0x6000CC6")]
			[Address(RVA = "0x44F6EC", Offset = "0x44F6EC", VA = "0x44F6EC")]
			public CharacterSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000290")]
		public class SpriteSelectionEvent : UnityEvent<char, int>
		{
			[Token(Token = "0x6000CC7")]
			[Address(RVA = "0x44F748", Offset = "0x44F748", VA = "0x44F748")]
			public SpriteSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000291")]
		public class WordSelectionEvent : UnityEvent<string, int, int>
		{
			[Token(Token = "0x6000CC8")]
			[Address(RVA = "0x44F7A4", Offset = "0x44F7A4", VA = "0x44F7A4")]
			public WordSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000292")]
		public class LineSelectionEvent : UnityEvent<string, int, int>
		{
			[Token(Token = "0x6000CC9")]
			[Address(RVA = "0x44F800", Offset = "0x44F800", VA = "0x44F800")]
			public LineSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000293")]
		public class LinkSelectionEvent : UnityEvent<string, string, int>
		{
			[Token(Token = "0x6000CCA")]
			[Address(RVA = "0x44F85C", Offset = "0x44F85C", VA = "0x44F85C")]
			public LinkSelectionEvent()
			{
			}
		}

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private CharacterSelectionEvent m_OnCharacterSelection;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private SpriteSelectionEvent m_OnSpriteSelection;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private WordSelectionEvent m_OnWordSelection;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LineSelectionEvent m_OnLineSelection;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private LinkSelectionEvent m_OnLinkSelection;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Camera m_Camera;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Canvas m_Canvas;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int m_selectedLink;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_lastCharIndex;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int m_lastWordIndex;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_lastLineIndex;

		[Token(Token = "0x17000106")]
		public CharacterSelectionEvent onCharacterSelection
		{
			[Token(Token = "0x60007D4")]
			[Address(RVA = "0x44EAD0", Offset = "0x44EAD0", VA = "0x44EAD0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007D5")]
			[Address(RVA = "0x44EAD8", Offset = "0x44EAD8", VA = "0x44EAD8")]
			set
			{
			}
		}

		[Token(Token = "0x17000107")]
		public SpriteSelectionEvent onSpriteSelection
		{
			[Token(Token = "0x60007D6")]
			[Address(RVA = "0x44EAE0", Offset = "0x44EAE0", VA = "0x44EAE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007D7")]
			[Address(RVA = "0x44EAE8", Offset = "0x44EAE8", VA = "0x44EAE8")]
			set
			{
			}
		}

		[Token(Token = "0x17000108")]
		public WordSelectionEvent onWordSelection
		{
			[Token(Token = "0x60007D8")]
			[Address(RVA = "0x44EAF0", Offset = "0x44EAF0", VA = "0x44EAF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007D9")]
			[Address(RVA = "0x44EAF8", Offset = "0x44EAF8", VA = "0x44EAF8")]
			set
			{
			}
		}

		[Token(Token = "0x17000109")]
		public LineSelectionEvent onLineSelection
		{
			[Token(Token = "0x60007DA")]
			[Address(RVA = "0x44EB00", Offset = "0x44EB00", VA = "0x44EB00")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007DB")]
			[Address(RVA = "0x44EB08", Offset = "0x44EB08", VA = "0x44EB08")]
			set
			{
			}
		}

		[Token(Token = "0x1700010A")]
		public LinkSelectionEvent onLinkSelection
		{
			[Token(Token = "0x60007DC")]
			[Address(RVA = "0x44EB10", Offset = "0x44EB10", VA = "0x44EB10")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007DD")]
			[Address(RVA = "0x44EB18", Offset = "0x44EB18", VA = "0x44EB18")]
			set
			{
			}
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0x44EB20", Offset = "0x44EB20", VA = "0x44EB20")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0x44ECF4", Offset = "0x44ECF4", VA = "0x44ECF4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0x44F5E0", Offset = "0x44F5E0", VA = "0x44F5E0", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60007E1")]
		[Address(RVA = "0x44F5E4", Offset = "0x44F5E4", VA = "0x44F5E4", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0x44F358", Offset = "0x44F358", VA = "0x44F358")]
		private void SendOnCharacterSelection(char character, int characterIndex)
		{
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0x44F3D0", Offset = "0x44F3D0", VA = "0x44F3D0")]
		private void SendOnSpriteSelection(char character, int characterIndex)
		{
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0x44F448", Offset = "0x44F448", VA = "0x44F448")]
		private void SendOnWordSelection(string word, int charIndex, int length)
		{
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0x44F4D0", Offset = "0x44F4D0", VA = "0x44F4D0")]
		private void SendOnLineSelection(string line, int charIndex, int length)
		{
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0x44F558", Offset = "0x44F558", VA = "0x44F558")]
		private void SendOnLinkSelection(string linkID, string linkText, int linkIndex)
		{
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0x44F5E8", Offset = "0x44F5E8", VA = "0x44F5E8")]
		public TMP_TextEventHandler()
		{
		}
	}
}
namespace TMPro.Examples
{
	[Token(Token = "0x200012C")]
	public class Benchmark01 : MonoBehaviour
	{
		[Token(Token = "0x2000294")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2249D4", Offset = "0x2249D4")]
		private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400154E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x400154F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4001550")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Benchmark01 <>4__this;

			[Token(Token = "0x4001551")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int <i>5__2;

			[Token(Token = "0x17000173")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CCE")]
				[Address(RVA = "0x4387C0", Offset = "0x4387C0", VA = "0x4387C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000174")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CD0")]
				[Address(RVA = "0x438840", Offset = "0x438840", VA = "0x438840", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CCB")]
			[Address(RVA = "0x43807C", Offset = "0x43807C", VA = "0x43807C")]
			[DebuggerHidden]
			public <Start>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000CCC")]
			[Address(RVA = "0x4380A4", Offset = "0x4380A4", VA = "0x4380A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CCD")]
			[Address(RVA = "0x4380A8", Offset = "0x4380A8", VA = "0x4380A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CCF")]
			[Address(RVA = "0x4387C8", Offset = "0x4387C8", VA = "0x4387C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int BenchmarkType;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TMP_FontAsset TMProFont;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Font TextMeshFont;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private TextContainer m_textContainer;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMesh m_textMesh;

		[Token(Token = "0x4000AAF")]
		private const string label01 = "The <#0050FF>count is: </color>{0}";

		[Token(Token = "0x4000AB0")]
		private const string label02 = "The <color=#0050FF>count is: </color>";

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Material m_material01;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material m_material02;

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0x437FFC", Offset = "0x437FFC", VA = "0x437FFC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x22CD38", Offset = "0x22CD38")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0x43809C", Offset = "0x43809C", VA = "0x43809C")]
		public Benchmark01()
		{
		}
	}
	[Token(Token = "0x200012D")]
	public class Benchmark01_UGUI : MonoBehaviour
	{
		[Token(Token = "0x2000295")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2249E4", Offset = "0x2249E4")]
		private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001552")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4001553")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4001554")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Benchmark01_UGUI <>4__this;

			[Token(Token = "0x4001555")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int <i>5__2;

			[Token(Token = "0x17000175")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CD4")]
				[Address(RVA = "0x438EB8", Offset = "0x438EB8", VA = "0x438EB8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000176")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CD6")]
				[Address(RVA = "0x438F38", Offset = "0x438F38", VA = "0x438F38", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CD1")]
			[Address(RVA = "0x4388C8", Offset = "0x4388C8", VA = "0x4388C8")]
			[DebuggerHidden]
			public <Start>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000CD2")]
			[Address(RVA = "0x4388F0", Offset = "0x4388F0", VA = "0x4388F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CD3")]
			[Address(RVA = "0x4388F4", Offset = "0x4388F4", VA = "0x4388F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CD5")]
			[Address(RVA = "0x438EC0", Offset = "0x438EC0", VA = "0x438EC0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int BenchmarkType;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Canvas canvas;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TMP_FontAsset TMProFont;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Font TextMeshFont;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private TextMeshProUGUI m_textMeshPro;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text m_textMesh;

		[Token(Token = "0x4000AB9")]
		private const string label01 = "The <#0050FF>count is: </color>";

		[Token(Token = "0x4000ABA")]
		private const string label02 = "The <color=#0050FF>count is: </color>";

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Material m_material01;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material m_material02;

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0x438848", Offset = "0x438848", VA = "0x438848")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x22CDA8", Offset = "0x22CDA8")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0x4388E8", Offset = "0x4388E8", VA = "0x4388E8")]
		public Benchmark01_UGUI()
		{
		}
	}
	[Token(Token = "0x200012E")]
	public class Benchmark02 : MonoBehaviour
	{
		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int SpawnType;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int NumberOfNPC;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private TextMeshProFloatingText floatingText_Script;

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0x438F40", Offset = "0x438F40", VA = "0x438F40")]
		private void Start()
		{
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0x439864", Offset = "0x439864", VA = "0x439864")]
		public Benchmark02()
		{
		}
	}
	[Token(Token = "0x200012F")]
	public class Benchmark03 : MonoBehaviour
	{
		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int SpawnType;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int NumberOfNPC;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Font TheFont;

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0x439874", Offset = "0x439874", VA = "0x439874")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0x439878", Offset = "0x439878", VA = "0x439878")]
		private void Start()
		{
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0x439C50", Offset = "0x439C50", VA = "0x439C50")]
		public Benchmark03()
		{
		}
	}
	[Token(Token = "0x2000130")]
	public class Benchmark04 : MonoBehaviour
	{
		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int SpawnType;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int MinPointSize;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int MaxPointSize;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Steps;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Transform m_Transform;

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0x439C60", Offset = "0x439C60", VA = "0x439C60")]
		private void Start()
		{
		}

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0x43A0C4", Offset = "0x43A0C4", VA = "0x43A0C4")]
		public Benchmark04()
		{
		}
	}
	[Token(Token = "0x2000131")]
	public class CameraController : MonoBehaviour
	{
		[Token(Token = "0x2000296")]
		public enum CameraModes
		{
			[Token(Token = "0x4001557")]
			Follow,
			[Token(Token = "0x4001558")]
			Isometric,
			[Token(Token = "0x4001559")]
			Free
		}

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Transform cameraTransform;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Transform dummyTarget;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Transform CameraTarget;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FollowDistance;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MaxFollowDistance;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float MinFollowDistance;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float ElevationAngle;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float MaxElevationAngle;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float MinElevationAngle;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float OrbitalAngle;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public CameraModes CameraMode;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool MovementSmoothing;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool RotationSmoothing;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private bool previousSmoothing;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float MovementSmoothingValue;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float RotationSmoothingValue;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float MoveSensitivity;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 currentVelocity;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 desiredPosition;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float mouseX;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float mouseY;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 moveVector;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float mouseWheel;

		[Token(Token = "0x4000ADF")]
		private const string event_SmoothingValue = "Slider - Smoothing Value";

		[Token(Token = "0x4000AE0")]
		private const string event_FollowDistance = "Slider - Camera Zoom";

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0x43A0E4", Offset = "0x43A0E4", VA = "0x43A0E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0x43A154", Offset = "0x43A154", VA = "0x43A154")]
		private void Start()
		{
		}

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0x43A234", Offset = "0x43A234", VA = "0x43A234")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60007F6")]
		[Address(RVA = "0x43A804", Offset = "0x43A804", VA = "0x43A804")]
		private void GetPlayerInput()
		{
		}

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0x43B2A0", Offset = "0x43B2A0", VA = "0x43B2A0")]
		public CameraController()
		{
		}
	}
	[Token(Token = "0x2000132")]
	public class ObjectSpin : MonoBehaviour
	{
		[Token(Token = "0x2000297")]
		public enum MotionType
		{
			[Token(Token = "0x400155B")]
			Rotation,
			[Token(Token = "0x400155C")]
			BackAndForth,
			[Token(Token = "0x400155D")]
			Translation
		}

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float SpinSpeed;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int RotationRange;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Transform m_transform;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_time;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 m_prevPOS;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 m_initial_Rotation;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 m_initial_Position;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Color32 m_lightColor;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int frames;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MotionType Motion;

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0x43B38C", Offset = "0x43B38C", VA = "0x43B38C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0x43B51C", Offset = "0x43B51C", VA = "0x43B51C")]
		private void Update()
		{
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x43B7D8", Offset = "0x43B7D8", VA = "0x43B7D8")]
		public ObjectSpin()
		{
		}
	}
	[Token(Token = "0x2000133")]
	public class ShaderPropAnimator : MonoBehaviour
	{
		[Token(Token = "0x2000298")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2249F4", Offset = "0x2249F4")]
		private sealed class <AnimateProperties>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400155E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x400155F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4001560")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ShaderPropAnimator <>4__this;

			[Token(Token = "0x17000177")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CDA")]
				[Address(RVA = "0x43BAE8", Offset = "0x43BAE8", VA = "0x43BAE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000178")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CDC")]
				[Address(RVA = "0x43BB68", Offset = "0x43BB68", VA = "0x43BB68", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CD7")]
			[Address(RVA = "0x43B918", Offset = "0x43B918", VA = "0x43B918")]
			[DebuggerHidden]
			public <AnimateProperties>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6000CD8")]
			[Address(RVA = "0x43B940", Offset = "0x43B940", VA = "0x43B940", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CD9")]
			[Address(RVA = "0x43B944", Offset = "0x43B944", VA = "0x43B944", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CDB")]
			[Address(RVA = "0x43BAF0", Offset = "0x43BAF0", VA = "0x43BAF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Renderer m_Renderer;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Material m_Material;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public AnimationCurve GlowCurve;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_frame;

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0x43B7F4", Offset = "0x43B7F4", VA = "0x43B7F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0x43B874", Offset = "0x43B874", VA = "0x43B874")]
		private void Start()
		{
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0x43B898", Offset = "0x43B898", VA = "0x43B898")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x22CE18", Offset = "0x22CE18")]
		private IEnumerator AnimateProperties()
		{
			return null;
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x43B938", Offset = "0x43B938", VA = "0x43B938")]
		public ShaderPropAnimator()
		{
		}
	}
	[Token(Token = "0x2000134")]
	public class SimpleScript : MonoBehaviour
	{
		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x4000AF0")]
		private const string label = "The <#0050FF>count is: </color>{0:2}";

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float m_frame;

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x43BB70", Offset = "0x43BB70", VA = "0x43BB70")]
		private void Start()
		{
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0x43BC78", Offset = "0x43BC78", VA = "0x43BC78")]
		private void Update()
		{
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0x43BD24", Offset = "0x43BD24", VA = "0x43BD24")]
		public SimpleScript()
		{
		}
	}
	[Token(Token = "0x2000135")]
	public class SkewTextExample : MonoBehaviour
	{
		[Token(Token = "0x2000299")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x224A04", Offset = "0x224A04")]
		private sealed class <WarpText>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001561")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4001562")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4001563")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SkewTextExample <>4__this;

			[Token(Token = "0x4001564")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <old_CurveScale>5__2;

			[Token(Token = "0x4001565")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float <old_ShearValue>5__3;

			[Token(Token = "0x4001566")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private AnimationCurve <old_curve>5__4;

			[Token(Token = "0x17000179")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CE0")]
				[Address(RVA = "0x43D464", Offset = "0x43D464", VA = "0x43D464", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CE2")]
				[Address(RVA = "0x43D4E4", Offset = "0x43D4E4", VA = "0x43D4E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CDD")]
			[Address(RVA = "0x43BEEC", Offset = "0x43BEEC", VA = "0x43BEEC")]
			[DebuggerHidden]
			public <WarpText>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6000CDE")]
			[Address(RVA = "0x43C1E4", Offset = "0x43C1E4", VA = "0x43C1E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CDF")]
			[Address(RVA = "0x43C1E8", Offset = "0x43C1E8", VA = "0x43C1E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CE1")]
			[Address(RVA = "0x43D46C", Offset = "0x43D46C", VA = "0x43D46C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve VertexCurve;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float CurveScale;

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float ShearAmount;

		[Token(Token = "0x6000802")]
		[Address(RVA = "0x43BD2C", Offset = "0x43BD2C", VA = "0x43BD2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0x43BDA8", Offset = "0x43BDA8", VA = "0x43BDA8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0x43BE4C", Offset = "0x43BE4C", VA = "0x43BE4C")]
		private AnimationCurve CopyAnimationCurve(AnimationCurve curve)
		{
			return null;
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0x43BDCC", Offset = "0x43BDCC", VA = "0x43BDCC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x22CE88", Offset = "0x22CE88")]
		private IEnumerator WarpText()
		{
			return null;
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0x43BF0C", Offset = "0x43BF0C", VA = "0x43BF0C")]
		public SkewTextExample()
		{
		}
	}
	[Token(Token = "0x2000136")]
	public class TMP_ExampleScript_01 : MonoBehaviour
	{
		[Token(Token = "0x200029A")]
		public enum objectType
		{
			[Token(Token = "0x4001568")]
			TextMeshPro,
			[Token(Token = "0x4001569")]
			TextMeshProUGUI
		}

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public objectType ObjectType;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isStatic;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private TMP_Text m_text;

		[Token(Token = "0x4000AF9")]
		private const string k_label = "The count is <#0080ff>{0}</color>";

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int count;

		[Token(Token = "0x6000807")]
		[Address(RVA = "0x43D4EC", Offset = "0x43D4EC", VA = "0x43D4EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0x43D774", Offset = "0x43D774", VA = "0x43D774")]
		private void Update()
		{
		}

		[Token(Token = "0x6000809")]
		[Address(RVA = "0x43D828", Offset = "0x43D828", VA = "0x43D828")]
		public TMP_ExampleScript_01()
		{
		}
	}
	[Token(Token = "0x2000137")]
	public class TMP_FrameRateCounter : MonoBehaviour
	{
		[Token(Token = "0x200029B")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x400156B")]
			TopLeft,
			[Token(Token = "0x400156C")]
			BottomLeft,
			[Token(Token = "0x400156D")]
			TopRight,
			[Token(Token = "0x400156E")]
			BottomRight
		}

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float UpdateInterval;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float m_LastInterval;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int m_Frames;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private string htmlColorTag;

		[Token(Token = "0x4000B00")]
		private const string fpsLabel = "{0:2}</color> <#8080ff>FPS \n<#FF8000>{1:2} <#8080ff>MS";

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Transform m_frameCounter_transform;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Camera m_camera;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private FpsCounterAnchorPositions last_AnchorPosition;

		[Token(Token = "0x600080A")]
		[Address(RVA = "0x43D830", Offset = "0x43D830", VA = "0x43D830")]
		private void Awake()
		{
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0x43DE7C", Offset = "0x43DE7C", VA = "0x43DE7C")]
		private void Start()
		{
		}

		[Token(Token = "0x600080C")]
		[Address(RVA = "0x43DEA0", Offset = "0x43DEA0", VA = "0x43DEA0")]
		private void Update()
		{
		}

		[Token(Token = "0x600080D")]
		[Address(RVA = "0x43DAD4", Offset = "0x43DAD4", VA = "0x43DAD4")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x600080E")]
		[Address(RVA = "0x43E048", Offset = "0x43E048", VA = "0x43E048")]
		public TMP_FrameRateCounter()
		{
		}
	}
	[Token(Token = "0x2000138")]
	public class TMP_TextEventCheck : MonoBehaviour
	{
		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public TMP_TextEventHandler TextEventHandler;

		[Token(Token = "0x600080F")]
		[Address(RVA = "0x43E064", Offset = "0x43E064", VA = "0x43E064")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0x43E32C", Offset = "0x43E32C", VA = "0x43E32C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0x43E5F4", Offset = "0x43E5F4", VA = "0x43E5F4")]
		private void OnCharacterSelection(char c, int index)
		{
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0x43E87C", Offset = "0x43E87C", VA = "0x43E87C")]
		private void OnSpriteSelection(char c, int index)
		{
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0x43EB04", Offset = "0x43EB04", VA = "0x43EB04")]
		private void OnWordSelection(string word, int firstCharacterIndex, int length)
		{
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0x43EE34", Offset = "0x43EE34", VA = "0x43EE34")]
		private void OnLineSelection(string lineText, int firstCharacterIndex, int length)
		{
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0x43F164", Offset = "0x43F164", VA = "0x43F164")]
		private void OnLinkSelection(string linkID, string linkText, int linkIndex)
		{
		}

		[Token(Token = "0x6000816")]
		[Address(RVA = "0x43F480", Offset = "0x43F480", VA = "0x43F480")]
		public TMP_TextEventCheck()
		{
		}
	}
	[Token(Token = "0x2000139")]
	public class TMP_TextInfoDebugTool : MonoBehaviour
	{
		[Token(Token = "0x6000817")]
		[Address(RVA = "0x43F488", Offset = "0x43F488", VA = "0x43F488")]
		public TMP_TextInfoDebugTool()
		{
		}
	}
	[Token(Token = "0x200013A")]
	public class TMP_TextSelector_A : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Camera m_Camera;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool m_isHoveringObject;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_selectedLink;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int m_lastCharIndex;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_lastWordIndex;

		[Token(Token = "0x6000818")]
		[Address(RVA = "0x43F490", Offset = "0x43F490", VA = "0x43F490")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000819")]
		[Address(RVA = "0x43F544", Offset = "0x43F544", VA = "0x43F544")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600081A")]
		[Address(RVA = "0x43FF20", Offset = "0x43FF20", VA = "0x43FF20", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0x43FFB0", Offset = "0x43FFB0", VA = "0x43FFB0", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0x440040", Offset = "0x440040", VA = "0x440040")]
		public TMP_TextSelector_A()
		{
		}
	}
	[Token(Token = "0x200013B")]
	public class TMP_TextSelector_B : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerClickHandler, IPointerUpHandler
	{
		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public RectTransform TextPopup_Prefab_01;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private RectTransform m_TextPopup_RectTransform;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private TextMeshProUGUI m_TextPopup_TMPComponent;

		[Token(Token = "0x4000B0F")]
		private const string k_LinkText = "You have selected link <#ffff00>";

		[Token(Token = "0x4000B10")]
		private const string k_WordText = "Word Index: <#ffff00>";

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshProUGUI m_TextMeshPro;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Canvas m_Canvas;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Camera m_Camera;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool isHoveringObject;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int m_selectedWord;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int m_selectedLink;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_lastIndex;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Matrix4x4 m_matrix;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private TMP_MeshInfo[] m_cachedMeshInfoVertexData;

		[Token(Token = "0x600081D")]
		[Address(RVA = "0x440058", Offset = "0x440058", VA = "0x440058")]
		private void Awake()
		{
		}

		[Token(Token = "0x600081E")]
		[Address(RVA = "0x440250", Offset = "0x440250", VA = "0x440250")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0x440338", Offset = "0x440338", VA = "0x440338")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0x440420", Offset = "0x440420", VA = "0x440420")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000821")]
		[Address(RVA = "0x4404E0", Offset = "0x4404E0", VA = "0x4404E0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0x442BE4", Offset = "0x442BE4", VA = "0x442BE4", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000823")]
		[Address(RVA = "0x442BF0", Offset = "0x442BF0", VA = "0x442BF0", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000824")]
		[Address(RVA = "0x442BFC", Offset = "0x442BFC", VA = "0x442BFC", Slot = "6")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0x442C00", Offset = "0x442C00", VA = "0x442C00", Slot = "7")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0x441C60", Offset = "0x441C60", VA = "0x441C60")]
		private void RestoreCachedVertexAttributes(int index)
		{
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0x442C04", Offset = "0x442C04", VA = "0x442C04")]
		public TMP_TextSelector_B()
		{
		}
	}
	[Token(Token = "0x200013C")]
	public class TMP_UiFrameRateCounter : MonoBehaviour
	{
		[Token(Token = "0x200029C")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x4001570")]
			TopLeft,
			[Token(Token = "0x4001571")]
			BottomLeft,
			[Token(Token = "0x4001572")]
			TopRight,
			[Token(Token = "0x4001573")]
			BottomRight
		}

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float UpdateInterval;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float m_LastInterval;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int m_Frames;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private string htmlColorTag;

		[Token(Token = "0x4000B1F")]
		private const string fpsLabel = "{0:2}</color> <#8080ff>FPS \n<#FF8000>{1:2} <#8080ff>MS";

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshProUGUI m_TextMeshPro;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private RectTransform m_frameCounter_transform;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FpsCounterAnchorPositions last_AnchorPosition;

		[Token(Token = "0x6000828")]
		[Address(RVA = "0x442C1C", Offset = "0x442C1C", VA = "0x442C1C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0x4432D8", Offset = "0x4432D8", VA = "0x4432D8")]
		private void Start()
		{
		}

		[Token(Token = "0x600082A")]
		[Address(RVA = "0x4432FC", Offset = "0x4432FC", VA = "0x4432FC")]
		private void Update()
		{
		}

		[Token(Token = "0x600082B")]
		[Address(RVA = "0x442E48", Offset = "0x442E48", VA = "0x442E48")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0x4434A4", Offset = "0x4434A4", VA = "0x4434A4")]
		public TMP_UiFrameRateCounter()
		{
		}
	}
	[Token(Token = "0x200013D")]
	public class TMPro_InstructionOverlay : MonoBehaviour
	{
		[Token(Token = "0x200029D")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x4001575")]
			TopLeft,
			[Token(Token = "0x4001576")]
			BottomLeft,
			[Token(Token = "0x4001577")]
			TopRight,
			[Token(Token = "0x4001578")]
			BottomRight
		}

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x4000B24")]
		private const string instructions = "Camera Control - <#ffff00>Shift + RMB\n</color>Zoom - <#ffff00>Mouse wheel.";

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private TextContainer m_textContainer;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform m_frameCounter_transform;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Camera m_camera;

		[Token(Token = "0x600082D")]
		[Address(RVA = "0x4434C0", Offset = "0x4434C0", VA = "0x4434C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600082E")]
		[Address(RVA = "0x44378C", Offset = "0x44378C", VA = "0x44378C")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x600082F")]
		[Address(RVA = "0x443950", Offset = "0x443950", VA = "0x443950")]
		public TMPro_InstructionOverlay()
		{
		}
	}
	[Token(Token = "0x200013E")]
	public class TeleType : MonoBehaviour
	{
		[Token(Token = "0x200029E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x224A14", Offset = "0x224A14")]
		private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001579")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x400157A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x400157B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TeleType <>4__this;

			[Token(Token = "0x400157C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int <totalVisibleCharacters>5__2;

			[Token(Token = "0x400157D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int <counter>5__3;

			[Token(Token = "0x1700017B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CE6")]
				[Address(RVA = "0x443E14", Offset = "0x443E14", VA = "0x443E14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CE8")]
				[Address(RVA = "0x443E94", Offset = "0x443E94", VA = "0x443E94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CE3")]
			[Address(RVA = "0x443AAC", Offset = "0x443AAC", VA = "0x443AAC")]
			[DebuggerHidden]
			public <Start>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6000CE4")]
			[Address(RVA = "0x443B44", Offset = "0x443B44", VA = "0x443B44", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CE5")]
			[Address(RVA = "0x443B48", Offset = "0x443B48", VA = "0x443B48", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CE7")]
			[Address(RVA = "0x443E1C", Offset = "0x443E1C", VA = "0x443E1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private string label01;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string label02;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private TMP_Text m_textMeshPro;

		[Token(Token = "0x6000830")]
		[Address(RVA = "0x443960", Offset = "0x443960", VA = "0x443960")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000831")]
		[Address(RVA = "0x443A2C", Offset = "0x443A2C", VA = "0x443A2C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x22CEF8", Offset = "0x22CEF8")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000832")]
		[Address(RVA = "0x443ACC", Offset = "0x443ACC", VA = "0x443ACC")]
		public TeleType()
		{
		}
	}
	[Token(Token = "0x200013F")]
	public class TextConsoleSimulator : MonoBehaviour
	{
		[Token(Token = "0x200029F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x224A24", Offset = "0x224A24")]
		private sealed class <RevealCharacters>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400157E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x400157F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4001580")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TMP_Text textComponent;

			[Token(Token = "0x4001581")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public TextConsoleSimulator <>4__this;

			[Token(Token = "0x4001582")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4001583")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private int <totalVisibleCharacters>5__3;

			[Token(Token = "0x4001584")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <visibleCount>5__4;

			[Token(Token = "0x1700017D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CEC")]
				[Address(RVA = "0x444428", Offset = "0x444428", VA = "0x444428", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CEE")]
				[Address(RVA = "0x4444A8", Offset = "0x4444A8", VA = "0x4444A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CE9")]
			[Address(RVA = "0x4441B4", Offset = "0x4441B4", VA = "0x4441B4")]
			[DebuggerHidden]
			public <RevealCharacters>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6000CEA")]
			[Address(RVA = "0x44427C", Offset = "0x44427C", VA = "0x44427C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CEB")]
			[Address(RVA = "0x444280", Offset = "0x444280", VA = "0x444280", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CED")]
			[Address(RVA = "0x444430", Offset = "0x444430", VA = "0x444430", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x224A34", Offset = "0x224A34")]
		private sealed class <RevealWords>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001585")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4001586")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4001587")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TMP_Text textComponent;

			[Token(Token = "0x4001588")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int <totalWordCount>5__2;

			[Token(Token = "0x4001589")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int <totalVisibleCharacters>5__3;

			[Token(Token = "0x400158A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private int <counter>5__4;

			[Token(Token = "0x400158B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <visibleCount>5__5;

			[Token(Token = "0x1700017F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CF2")]
				[Address(RVA = "0x444710", Offset = "0x444710", VA = "0x444710", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000180")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CF4")]
				[Address(RVA = "0x444790", Offset = "0x444790", VA = "0x444790", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CEF")]
			[Address(RVA = "0x444254", Offset = "0x444254", VA = "0x444254")]
			[DebuggerHidden]
			public <RevealWords>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6000CF0")]
			[Address(RVA = "0x4444B0", Offset = "0x4444B0", VA = "0x4444B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CF1")]
			[Address(RVA = "0x4444B4", Offset = "0x4444B4", VA = "0x4444B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CF3")]
			[Address(RVA = "0x444718", Offset = "0x444718", VA = "0x444718", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool hasTextChanged;

		[Token(Token = "0x6000833")]
		[Address(RVA = "0x443E9C", Offset = "0x443E9C", VA = "0x443E9C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000834")]
		[Address(RVA = "0x443F18", Offset = "0x443F18", VA = "0x443F18")]
		private void Start()
		{
		}

		[Token(Token = "0x6000835")]
		[Address(RVA = "0x443FD8", Offset = "0x443FD8", VA = "0x443FD8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000836")]
		[Address(RVA = "0x4440C0", Offset = "0x4440C0", VA = "0x4440C0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0x4441A8", Offset = "0x4441A8", VA = "0x4441A8")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0x443F40", Offset = "0x443F40", VA = "0x443F40")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x22CF68", Offset = "0x22CF68")]
		private IEnumerator RevealCharacters(TMP_Text textComponent)
		{
			return null;
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0x4441D4", Offset = "0x4441D4", VA = "0x4441D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x22CFD8", Offset = "0x22CFD8")]
		private IEnumerator RevealWords(TMP_Text textComponent)
		{
			return null;
		}

		[Token(Token = "0x600083A")]
		[Address(RVA = "0x444274", Offset = "0x444274", VA = "0x444274")]
		public TextConsoleSimulator()
		{
		}
	}
	[Token(Token = "0x2000140")]
	public class TextMeshProFloatingText : MonoBehaviour
	{
		[Token(Token = "0x20002A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x224A44", Offset = "0x224A44")]
		private sealed class <DisplayTextMeshProFloatingText>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400158C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x400158D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x400158E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TextMeshProFloatingText <>4__this;

			[Token(Token = "0x400158F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <CountDuration>5__2;

			[Token(Token = "0x4001590")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float <starting_Count>5__3;

			[Token(Token = "0x4001591")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private float <current_Count>5__4;

			[Token(Token = "0x4001592")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Vector3 <start_pos>5__5;

			[Token(Token = "0x4001593")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Color32 <start_color>5__6;

			[Token(Token = "0x4001594")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <alpha>5__7;

			[Token(Token = "0x4001595")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <fadeDuration>5__8;

			[Token(Token = "0x17000181")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CF8")]
				[Address(RVA = "0x445EB0", Offset = "0x445EB0", VA = "0x445EB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000182")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CFA")]
				[Address(RVA = "0x445F30", Offset = "0x445F30", VA = "0x445F30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CF5")]
			[Address(RVA = "0x444F64", Offset = "0x444F64", VA = "0x444F64")]
			[DebuggerHidden]
			public <DisplayTextMeshProFloatingText>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6000CF6")]
			[Address(RVA = "0x4457D8", Offset = "0x4457D8", VA = "0x4457D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CF7")]
			[Address(RVA = "0x4457DC", Offset = "0x4457DC", VA = "0x4457DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CF9")]
			[Address(RVA = "0x445EB8", Offset = "0x445EB8", VA = "0x445EB8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x224A54", Offset = "0x224A54")]
		private sealed class <DisplayTextMeshFloatingText>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001596")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4001597")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4001598")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TextMeshProFloatingText <>4__this;

			[Token(Token = "0x4001599")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <CountDuration>5__2;

			[Token(Token = "0x400159A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float <starting_Count>5__3;

			[Token(Token = "0x400159B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private float <current_Count>5__4;

			[Token(Token = "0x400159C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Vector3 <start_pos>5__5;

			[Token(Token = "0x400159D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Color32 <start_color>5__6;

			[Token(Token = "0x400159E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <alpha>5__7;

			[Token(Token = "0x400159F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <fadeDuration>5__8;

			[Token(Token = "0x17000183")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CFE")]
				[Address(RVA = "0x445750", Offset = "0x445750", VA = "0x445750", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000184")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D00")]
				[Address(RVA = "0x4457D0", Offset = "0x4457D0", VA = "0x4457D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CFB")]
			[Address(RVA = "0x444F84", Offset = "0x444F84", VA = "0x444F84")]
			[DebuggerHidden]
			public <DisplayTextMeshFloatingText>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6000CFC")]
			[Address(RVA = "0x445090", Offset = "0x445090", VA = "0x445090", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CFD")]
			[Address(RVA = "0x445094", Offset = "0x445094", VA = "0x445094", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CFF")]
			[Address(RVA = "0x445758", Offset = "0x445758", VA = "0x445758", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Font TheFont;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GameObject m_floatingText;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMesh m_textMesh;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Transform m_transform;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_floatingText_Transform;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Transform m_cameraTransform;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 lastPOS;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion lastRotation;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int SpawnType;

		[Token(Token = "0x600083B")]
		[Address(RVA = "0x444798", Offset = "0x444798", VA = "0x444798")]
		private void Awake()
		{
		}

		[Token(Token = "0x600083C")]
		[Address(RVA = "0x444864", Offset = "0x444864", VA = "0x444864")]
		private void Start()
		{
		}

		[Token(Token = "0x600083D")]
		[Address(RVA = "0x444E64", Offset = "0x444E64", VA = "0x444E64")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x22D048", Offset = "0x22D048")]
		public IEnumerator DisplayTextMeshProFloatingText()
		{
			return null;
		}

		[Token(Token = "0x600083E")]
		[Address(RVA = "0x444EE4", Offset = "0x444EE4", VA = "0x444EE4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x22D0B8", Offset = "0x22D0B8")]
		public IEnumerator DisplayTextMeshFloatingText()
		{
			return null;
		}

		[Token(Token = "0x600083F")]
		[Address(RVA = "0x444FA4", Offset = "0x444FA4", VA = "0x444FA4")]
		public TextMeshProFloatingText()
		{
		}
	}
	[Token(Token = "0x2000141")]
	public class TextMeshSpawner : MonoBehaviour
	{
		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int SpawnType;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int NumberOfNPC;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Font TheFont;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshProFloatingText floatingText_Script;

		[Token(Token = "0x6000840")]
		[Address(RVA = "0x445F38", Offset = "0x445F38", VA = "0x445F38")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0x445F3C", Offset = "0x445F3C", VA = "0x445F3C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000842")]
		[Address(RVA = "0x4463B0", Offset = "0x4463B0", VA = "0x4463B0")]
		public TextMeshSpawner()
		{
		}
	}
	[Token(Token = "0x2000142")]
	public class VertexColorCycler : MonoBehaviour
	{
		[Token(Token = "0x20002A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x224A64", Offset = "0x224A64")]
		private sealed class <AnimateVertexColors>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x40015A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x40015A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VertexColorCycler <>4__this;

			[Token(Token = "0x40015A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x40015A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int <currentCharacter>5__3;

			[Token(Token = "0x17000185")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D04")]
				[Address(RVA = "0x4468FC", Offset = "0x4468FC", VA = "0x4468FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000186")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D06")]
				[Address(RVA = "0x44697C", Offset = "0x44697C", VA = "0x44697C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D01")]
			[Address(RVA = "0x4464C4", Offset = "0x4464C4", VA = "0x4464C4")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6000D02")]
			[Address(RVA = "0x4464EC", Offset = "0x4464EC", VA = "0x4464EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D03")]
			[Address(RVA = "0x4464F0", Offset = "0x4464F0", VA = "0x4464F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D05")]
			[Address(RVA = "0x446904", Offset = "0x446904", VA = "0x446904", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x6000843")]
		[Address(RVA = "0x4463C0", Offset = "0x4463C0", VA = "0x4463C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000844")]
		[Address(RVA = "0x446420", Offset = "0x446420", VA = "0x446420")]
		private void Start()
		{
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0x446444", Offset = "0x446444", VA = "0x446444")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x22D128", Offset = "0x22D128")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6000846")]
		[Address(RVA = "0x4464E4", Offset = "0x4464E4", VA = "0x4464E4")]
		public VertexColorCycler()
		{
		}
	}
	[Token(Token = "0x2000143")]
	public class VertexJitter : MonoBehaviour
	{
		[Token(Token = "0x20002A4")]
		private struct VertexAnim
		{
			[Token(Token = "0x40015A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float angleRange;

			[Token(Token = "0x40015A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float angle;

			[Token(Token = "0x40015A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float speed;
		}

		[Token(Token = "0x20002A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x224A74", Offset = "0x224A74")]
		private sealed class <AnimateVertexColors>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x40015A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x40015AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VertexJitter <>4__this;

			[Token(Token = "0x40015AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x40015AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int <loopCount>5__3;

			[Token(Token = "0x40015AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private VertexAnim[] <vertexAnim>5__4;

			[Token(Token = "0x40015AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private TMP_MeshInfo[] <cachedMeshInfo>5__5;

			[Token(Token = "0x17000187")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D0A")]
				[Address(RVA = "0x447D88", Offset = "0x447D88", VA = "0x447D88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000188")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D0C")]
				[Address(RVA = "0x447E08", Offset = "0x447E08", VA = "0x447E08", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D07")]
			[Address(RVA = "0x446CEC", Offset = "0x446CEC", VA = "0x446CEC")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000D08")]
			[Address(RVA = "0x446D24", Offset = "0x446D24", VA = "0x446D24", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D09")]
			[Address(RVA = "0x446D28", Offset = "0x446D28", VA = "0x446D28", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D0B")]
			[Address(RVA = "0x447D90", Offset = "0x447D90", VA = "0x447D90", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float AngleMultiplier;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float SpeedMultiplier;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float CurveScale;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool hasTextChanged;

		[Token(Token = "0x6000847")]
		[Address(RVA = "0x446984", Offset = "0x446984", VA = "0x446984")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000848")]
		[Address(RVA = "0x4469E4", Offset = "0x4469E4", VA = "0x4469E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0x446ACC", Offset = "0x446ACC", VA = "0x446ACC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600084A")]
		[Address(RVA = "0x446BB4", Offset = "0x446BB4", VA = "0x446BB4")]
		private void Start()
		{
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0x446C58", Offset = "0x446C58", VA = "0x446C58")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0x446BD8", Offset = "0x446BD8", VA = "0x446BD8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x22D198", Offset = "0x22D198")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0x446D0C", Offset = "0x446D0C", VA = "0x446D0C")]
		public VertexJitter()
		{
		}
	}
	[Token(Token = "0x2000144")]
	public class VertexShakeA : MonoBehaviour
	{
		[Token(Token = "0x20002A6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x224A84", Offset = "0x224A84")]
		private sealed class <AnimateVertexColors>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x40015B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x40015B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VertexShakeA <>4__this;

			[Token(Token = "0x40015B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x40015B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Vector3[][] <copyOfVertices>5__3;

			[Token(Token = "0x17000189")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D10")]
				[Address(RVA = "0x4495CC", Offset = "0x4495CC", VA = "0x4495CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D12")]
				[Address(RVA = "0x44964C", Offset = "0x44964C", VA = "0x44964C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D0D")]
			[Address(RVA = "0x448170", Offset = "0x448170", VA = "0x448170")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000D0E")]
			[Address(RVA = "0x4481A4", Offset = "0x4481A4", VA = "0x4481A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D0F")]
			[Address(RVA = "0x4481A8", Offset = "0x4481A8", VA = "0x4481A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D11")]
			[Address(RVA = "0x4495D4", Offset = "0x4495D4", VA = "0x4495D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float AngleMultiplier;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float SpeedMultiplier;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float ScaleMultiplier;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float RotationMultiplier;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool hasTextChanged;

		[Token(Token = "0x600084E")]
		[Address(RVA = "0x447E10", Offset = "0x447E10", VA = "0x447E10")]
		private void Awake()
		{
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0x447E70", Offset = "0x447E70", VA = "0x447E70")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000850")]
		[Address(RVA = "0x447F58", Offset = "0x447F58", VA = "0x447F58")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0x448040", Offset = "0x448040", VA = "0x448040")]
		private void Start()
		{
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0x4480E4", Offset = "0x4480E4", VA = "0x4480E4")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0x448064", Offset = "0x448064", VA = "0x448064")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x22D208", Offset = "0x22D208")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0x448190", Offset = "0x448190", VA = "0x448190")]
		public VertexShakeA()
		{
		}
	}
	[Token(Token = "0x2000145")]
	public class VertexShakeB : MonoBehaviour
	{
		[Token(Token = "0x20002A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x224A94", Offset = "0x224A94")]
		private sealed class <AnimateVertexColors>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x40015B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x40015B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VertexShakeB <>4__this;

			[Token(Token = "0x40015B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x40015B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Vector3[][] <copyOfVertices>5__3;

			[Token(Token = "0x1700018B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D16")]
				[Address(RVA = "0x44B828", Offset = "0x44B828", VA = "0x44B828", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D18")]
				[Address(RVA = "0x44B8A8", Offset = "0x44B8A8", VA = "0x44B8A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D13")]
			[Address(RVA = "0x4499B4", Offset = "0x4499B4", VA = "0x4499B4")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000D14")]
			[Address(RVA = "0x4499EC", Offset = "0x4499EC", VA = "0x4499EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D15")]
			[Address(RVA = "0x4499F0", Offset = "0x4499F0", VA = "0x4499F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D17")]
			[Address(RVA = "0x44B830", Offset = "0x44B830", VA = "0x44B830", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float AngleMultiplier;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float SpeedMultiplier;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float CurveScale;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool hasTextChanged;

		[Token(Token = "0x6000855")]
		[Address(RVA = "0x449654", Offset = "0x449654", VA = "0x449654")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0x4496B4", Offset = "0x4496B4", VA = "0x4496B4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000857")]
		[Address(RVA = "0x44979C", Offset = "0x44979C", VA = "0x44979C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0x449884", Offset = "0x449884", VA = "0x449884")]
		private void Start()
		{
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0x449928", Offset = "0x449928", VA = "0x449928")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0x4498A8", Offset = "0x4498A8", VA = "0x4498A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x22D278", Offset = "0x22D278")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0x4499D4", Offset = "0x4499D4", VA = "0x4499D4")]
		public VertexShakeB()
		{
		}
	}
	[Token(Token = "0x2000146")]
	public class VertexZoom : MonoBehaviour
	{
		[Token(Token = "0x20002A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x224AA4", Offset = "0x224AA4")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x40015B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public List<float> modifiedCharScale;

			[Token(Token = "0x40015BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Comparison<int> <>9__0;

			[Token(Token = "0x6000D19")]
			[Address(RVA = "0x44BC50", Offset = "0x44BC50", VA = "0x44BC50")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6000D1A")]
			[Address(RVA = "0x44BC58", Offset = "0x44BC58", VA = "0x44BC58")]
			internal int <AnimateVertexColors>b__0(int a, int b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x20002A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x224AB4", Offset = "0x224AB4")]
		private sealed class <AnimateVertexColors>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x40015BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x40015BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VertexZoom <>4__this;

			[Token(Token = "0x40015BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private <>c__DisplayClass10_0 <>8__1;

			[Token(Token = "0x40015BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x40015C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private TMP_MeshInfo[] <cachedMeshInfoVertexData>5__3;

			[Token(Token = "0x40015C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private List<int> <scaleSortingOrder>5__4;

			[Token(Token = "0x1700018D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D1E")]
				[Address(RVA = "0x44D234", Offset = "0x44D234", VA = "0x44D234", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D20")]
				[Address(RVA = "0x44D2B4", Offset = "0x44D2B4", VA = "0x44D2B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D1B")]
			[Address(RVA = "0x44BC18", Offset = "0x44BC18", VA = "0x44BC18")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000D1C")]
			[Address(RVA = "0x44BD24", Offset = "0x44BD24", VA = "0x44BD24", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D1D")]
			[Address(RVA = "0x44BD28", Offset = "0x44BD28", VA = "0x44BD28", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D1F")]
			[Address(RVA = "0x44D23C", Offset = "0x44D23C", VA = "0x44D23C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float AngleMultiplier;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float SpeedMultiplier;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float CurveScale;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool hasTextChanged;

		[Token(Token = "0x600085C")]
		[Address(RVA = "0x44B8B0", Offset = "0x44B8B0", VA = "0x44B8B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0x44B910", Offset = "0x44B910", VA = "0x44B910")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0x44B9F8", Offset = "0x44B9F8", VA = "0x44B9F8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0x44BAE0", Offset = "0x44BAE0", VA = "0x44BAE0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0x44BB84", Offset = "0x44BB84", VA = "0x44BB84")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0x44BB04", Offset = "0x44BB04", VA = "0x44BB04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x22D2E8", Offset = "0x22D2E8")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0x44BC38", Offset = "0x44BC38", VA = "0x44BC38")]
		public VertexZoom()
		{
		}
	}
	[Token(Token = "0x2000147")]
	public class WarpTextExample : MonoBehaviour
	{
		[Token(Token = "0x20002AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x224AC4", Offset = "0x224AC4")]
		private sealed class <WarpText>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x40015C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x40015C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WarpTextExample <>4__this;

			[Token(Token = "0x40015C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <old_CurveScale>5__2;

			[Token(Token = "0x40015C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private AnimationCurve <old_curve>5__3;

			[Token(Token = "0x1700018F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D24")]
				[Address(RVA = "0x44E718", Offset = "0x44E718", VA = "0x44E718", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000190")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D26")]
				[Address(RVA = "0x44E798", Offset = "0x44E798", VA = "0x44E798", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D21")]
			[Address(RVA = "0x44D47C", Offset = "0x44D47C", VA = "0x44D47C")]
			[DebuggerHidden]
			public <WarpText>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6000D22")]
			[Address(RVA = "0x44D778", Offset = "0x44D778", VA = "0x44D778", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D23")]
			[Address(RVA = "0x44D77C", Offset = "0x44D77C", VA = "0x44D77C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D25")]
			[Address(RVA = "0x44E720", Offset = "0x44E720", VA = "0x44E720", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve VertexCurve;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float AngleMultiplier;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float SpeedMultiplier;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float CurveScale;

		[Token(Token = "0x6000863")]
		[Address(RVA = "0x44D2BC", Offset = "0x44D2BC", VA = "0x44D2BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0x44D338", Offset = "0x44D338", VA = "0x44D338")]
		private void Start()
		{
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0x44D3DC", Offset = "0x44D3DC", VA = "0x44D3DC")]
		private AnimationCurve CopyAnimationCurve(AnimationCurve curve)
		{
			return null;
		}

		[Token(Token = "0x6000866")]
		[Address(RVA = "0x44D35C", Offset = "0x44D35C", VA = "0x44D35C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x22D358", Offset = "0x22D358")]
		private IEnumerator WarpText()
		{
			return null;
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0x44D49C", Offset = "0x44D49C", VA = "0x44D49C")]
		public WarpTextExample()
		{
		}
	}
}
namespace PA.ParticleField.Samples
{
	[Token(Token = "0x2000148")]
	public class MipMapTexture : MonoBehaviour
	{
		[Token(Token = "0x4000B57")]
		private const float MIN_BOKEH = -7f;

		[Token(Token = "0x4000B58")]
		private const float MAX_BOKEH = 2f;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Texture2D[] textures;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material bokehMaterial;

		[Token(Token = "0x6000868")]
		[Address(RVA = "0x48BA64", Offset = "0x48BA64", VA = "0x48BA64")]
		private void Start()
		{
		}

		[Token(Token = "0x6000869")]
		[Address(RVA = "0x48BE18", Offset = "0x48BE18", VA = "0x48BE18")]
		public void SetBokeh(float value)
		{
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0x48BAE4", Offset = "0x48BAE4", VA = "0x48BAE4")]
		private Texture2D GenerateTexture()
		{
			return null;
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0x48BEE4", Offset = "0x48BEE4", VA = "0x48BEE4")]
		public MipMapTexture()
		{
		}
	}
	[Token(Token = "0x2000149")]
	public class ScrollTexture : MonoBehaviour
	{
		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string textureName;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2 speed;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 offset;

		[Token(Token = "0x600086C")]
		[Address(RVA = "0x4911DC", Offset = "0x4911DC", VA = "0x4911DC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0x491404", Offset = "0x491404", VA = "0x491404")]
		public ScrollTexture()
		{
		}
	}
	[Token(Token = "0x200014A")]
	public class PACloudController : MonoBehaviour
	{
		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Transform followTarget;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PAParticleField[] cloudFields;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Vector3 area;

		[Token(Token = "0x600086E")]
		[Address(RVA = "0x48C058", Offset = "0x48C058", VA = "0x48C058")]
		private void Start()
		{
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0x48C40C", Offset = "0x48C40C", VA = "0x48C40C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0x48C410", Offset = "0x48C410", VA = "0x48C410")]
		private void UpdateCloudPositions()
		{
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0x48C9B0", Offset = "0x48C9B0", VA = "0x48C9B0")]
		public PACloudController()
		{
		}
	}
	[Token(Token = "0x200014B")]
	public class PAWaterController : MonoBehaviour
	{
		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Transform targetTransform;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float yPosition;

		[Token(Token = "0x6000872")]
		[Address(RVA = "0x48CCB4", Offset = "0x48CCB4", VA = "0x48CCB4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000873")]
		[Address(RVA = "0x48CCFC", Offset = "0x48CCFC", VA = "0x48CCFC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0x48CD78", Offset = "0x48CD78", VA = "0x48CD78")]
		public PAWaterController()
		{
		}
	}
	[Token(Token = "0x200014C")]
	public class PlayerInput : MonoBehaviour
	{
		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private PlayerMovement motor;

		[Token(Token = "0x6000875")]
		[Address(RVA = "0x48CE38", Offset = "0x48CE38", VA = "0x48CE38")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000876")]
		[Address(RVA = "0x48CE98", Offset = "0x48CE98", VA = "0x48CE98")]
		private void Update()
		{
		}

		[Token(Token = "0x6000877")]
		[Address(RVA = "0x48D168", Offset = "0x48D168", VA = "0x48D168")]
		public PlayerInput()
		{
		}
	}
	[Token(Token = "0x200014D")]
	public class PlayerLook : MonoBehaviour
	{
		[Token(Token = "0x20002AB")]
		public enum RotationAxes
		{
			[Token(Token = "0x40015C8")]
			MouseXAndY,
			[Token(Token = "0x40015C9")]
			MouseX,
			[Token(Token = "0x40015CA")]
			MouseY
		}

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public RotationAxes axes;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float sensitivityX;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float sensitivityY;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float minimumX;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maximumX;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minimumY;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maximumY;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float rotationY;

		[Token(Token = "0x6000878")]
		[Address(RVA = "0x48D170", Offset = "0x48D170", VA = "0x48D170")]
		private void Update()
		{
		}

		[Token(Token = "0x6000879")]
		[Address(RVA = "0x48D434", Offset = "0x48D434", VA = "0x48D434")]
		private void Start()
		{
		}

		[Token(Token = "0x600087A")]
		[Address(RVA = "0x48D508", Offset = "0x48D508", VA = "0x48D508")]
		public PlayerLook()
		{
		}
	}
	[Token(Token = "0x200014E")]
	public class PlayerMovement : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002AC")]
		private class CharacterMotorMovement
		{
			[Token(Token = "0x40015CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float maxForwardSpeed;

			[Token(Token = "0x40015CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float maxSidewaysSpeed;

			[Token(Token = "0x40015CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float maxBackwardsSpeed;

			[Token(Token = "0x40015CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public AnimationCurve slopeSpeedMultiplier;

			[Token(Token = "0x40015CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float maxGroundAcceleration;

			[Token(Token = "0x40015D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float maxAirAcceleration;

			[Token(Token = "0x40015D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float gravity;

			[Token(Token = "0x40015D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float maxFallSpeed;

			[NonSerialized]
			[Token(Token = "0x40015D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CollisionFlags collisionFlags;

			[NonSerialized]
			[Token(Token = "0x40015D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 velocity;

			[NonSerialized]
			[Token(Token = "0x40015D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector3 frameVelocity;

			[NonSerialized]
			[Token(Token = "0x40015D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Vector3 hitPoint;

			[NonSerialized]
			[Token(Token = "0x40015D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Vector3 lastHitPoint;

			[Token(Token = "0x6000D27")]
			[Address(RVA = "0x4905F0", Offset = "0x4905F0", VA = "0x4905F0")]
			public CharacterMotorMovement()
			{
			}
		}

		[Token(Token = "0x20002AD")]
		private enum MovementTransferOnJump
		{
			[Token(Token = "0x40015D9")]
			None,
			[Token(Token = "0x40015DA")]
			InitTransfer,
			[Token(Token = "0x40015DB")]
			PermaTransfer,
			[Token(Token = "0x40015DC")]
			PermaLocked
		}

		[Serializable]
		[Token(Token = "0x20002AE")]
		private class CharacterMotorJumping
		{
			[Token(Token = "0x40015DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool enabled;

			[Token(Token = "0x40015DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float baseHeight;

			[Token(Token = "0x40015DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float extraHeight;

			[Token(Token = "0x40015E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float perpAmount;

			[Token(Token = "0x40015E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float steepPerpAmount;

			[NonSerialized]
			[Token(Token = "0x40015E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool jumping;

			[NonSerialized]
			[Token(Token = "0x40015E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
			public bool holdingJumpButton;

			[NonSerialized]
			[Token(Token = "0x40015E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float lastStartTime;

			[NonSerialized]
			[Token(Token = "0x40015E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float lastButtonDownTime;

			[NonSerialized]
			[Token(Token = "0x40015E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 jumpDir;

			[Token(Token = "0x6000D28")]
			[Address(RVA = "0x490860", Offset = "0x490860", VA = "0x490860")]
			public CharacterMotorJumping()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002AF")]
		private class CharacterMotorMovingPlatform
		{
			[Token(Token = "0x40015E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool enabled;

			[Token(Token = "0x40015E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public MovementTransferOnJump movementTransfer;

			[NonSerialized]
			[Token(Token = "0x40015E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform hitPlatform;

			[NonSerialized]
			[Token(Token = "0x40015EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Transform activePlatform;

			[NonSerialized]
			[Token(Token = "0x40015EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 activeLocalPoint;

			[NonSerialized]
			[Token(Token = "0x40015EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 activeGlobalPoint;

			[NonSerialized]
			[Token(Token = "0x40015ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Quaternion activeLocalRotation;

			[NonSerialized]
			[Token(Token = "0x40015EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Quaternion activeGlobalRotation;

			[NonSerialized]
			[Token(Token = "0x40015EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Matrix4x4 lastMatrix;

			[NonSerialized]
			[Token(Token = "0x40015F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Vector3 platformVelocity;

			[NonSerialized]
			[Token(Token = "0x40015F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			public bool newPlatform;

			[Token(Token = "0x6000D29")]
			[Address(RVA = "0x4908EC", Offset = "0x4908EC", VA = "0x4908EC")]
			public CharacterMotorMovingPlatform()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002B0")]
		private class CharacterMotorSliding
		{
			[Token(Token = "0x40015F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool enabled;

			[Token(Token = "0x40015F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float slidingSpeed;

			[Token(Token = "0x40015F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float sidewaysControl;

			[Token(Token = "0x40015F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float speedControl;

			[Token(Token = "0x6000D2A")]
			[Address(RVA = "0x490904", Offset = "0x490904", VA = "0x490904")]
			public CharacterMotorSliding()
			{
			}
		}

		[Token(Token = "0x20002B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x224AD4", Offset = "0x224AD4")]
		private sealed class <SubtractNewPlatformVelocity>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x40015F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x40015F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayerMovement <>4__this;

			[Token(Token = "0x40015F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private Transform <platform>5__2;

			[Token(Token = "0x17000191")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D2E")]
				[Address(RVA = "0x490C2C", Offset = "0x490C2C", VA = "0x490C2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000192")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D30")]
				[Address(RVA = "0x490CAC", Offset = "0x490CAC", VA = "0x490CAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D2B")]
			[Address(RVA = "0x4900C4", Offset = "0x4900C4", VA = "0x4900C4")]
			[DebuggerHidden]
			public <SubtractNewPlatformVelocity>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6000D2C")]
			[Address(RVA = "0x490930", Offset = "0x490930", VA = "0x490930", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D2D")]
			[Address(RVA = "0x490934", Offset = "0x490934", VA = "0x490934", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D2F")]
			[Address(RVA = "0x490C34", Offset = "0x490C34", VA = "0x490C34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool canControl;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		public bool useFixedUpdate;

		[NonSerialized]
		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 inputMoveDirection;

		[NonSerialized]
		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool inputJump;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CharacterMotorMovement movement;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private CharacterMotorJumping jumping;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CharacterMotorMovingPlatform movingPlatform;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private CharacterMotorSliding sliding;

		[NonSerialized]
		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool grounded;

		[NonSerialized]
		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 groundNormal;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 lastGroundNormal;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Transform tr;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CharacterController controller;

		[Token(Token = "0x600087B")]
		[Address(RVA = "0x48D548", Offset = "0x48D548", VA = "0x48D548")]
		private void Awake()
		{
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0x48D5B8", Offset = "0x48D5B8", VA = "0x48D5B8")]
		private void UpdateFunction()
		{
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0x48F594", Offset = "0x48F594", VA = "0x48F594")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0x48F8E0", Offset = "0x48F8E0", VA = "0x48F8E0")]
		private void Update()
		{
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0x48E694", Offset = "0x48E694", VA = "0x48E694")]
		private Vector3 ApplyInputVelocityChange(Vector3 velocity)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0x48EC8C", Offset = "0x48EC8C", VA = "0x48EC8C")]
		private Vector3 ApplyGravityAndJumping(Vector3 velocity)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0x48FDB8", Offset = "0x48FDB8", VA = "0x48FDB8")]
		private void OnControllerColliderHit(ControllerColliderHit hit)
		{
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0x48F514", Offset = "0x48F514", VA = "0x48F514")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x22D3C8", Offset = "0x22D3C8")]
		private IEnumerator SubtractNewPlatformVelocity()
		{
			return null;
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0x48F414", Offset = "0x48F414", VA = "0x48F414")]
		private bool MoveWithPlatform()
		{
			return default(bool);
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0x48F9BC", Offset = "0x48F9BC", VA = "0x48F9BC")]
		private Vector3 GetDesiredHorizontalVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0x48FB94", Offset = "0x48FB94", VA = "0x48FB94")]
		private Vector3 AdjustGroundVelocityToNormal(Vector3 hVelocity, Vector3 groundNormal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000886")]
		[Address(RVA = "0x48F4F4", Offset = "0x48F4F4", VA = "0x48F4F4")]
		private bool IsGroundedTest()
		{
			return default(bool);
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0x48FCC8", Offset = "0x48FCC8", VA = "0x48FCC8")]
		private float GetMaxAcceleration(bool grounded)
		{
			return default(float);
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0x48FCF8", Offset = "0x48FCF8", VA = "0x48FCF8")]
		private float CalculateJumpVerticalSpeed(float targetJumpHeight)
		{
			return default(float);
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0x4902D0", Offset = "0x4902D0", VA = "0x4902D0")]
		private bool IsJumping()
		{
			return default(bool);
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0x4902F0", Offset = "0x4902F0", VA = "0x4902F0")]
		private bool IsSliding()
		{
			return default(bool);
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0x490338", Offset = "0x490338", VA = "0x490338")]
		private bool IsTouchingCeiling()
		{
			return default(bool);
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0x49035C", Offset = "0x49035C", VA = "0x49035C")]
		private bool IsGrounded()
		{
			return default(bool);
		}

		[Token(Token = "0x600088D")]
		[Address(RVA = "0x48F8F0", Offset = "0x48F8F0", VA = "0x48F8F0")]
		private bool TooSteep()
		{
			return default(bool);
		}

		[Token(Token = "0x600088E")]
		[Address(RVA = "0x490364", Offset = "0x490364", VA = "0x490364")]
		private Vector3 GetDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600088F")]
		[Address(RVA = "0x490378", Offset = "0x490378", VA = "0x490378")]
		private void SetControllable(bool controllable)
		{
		}

		[Token(Token = "0x6000890")]
		[Address(RVA = "0x4900E4", Offset = "0x4900E4", VA = "0x4900E4")]
		private float MaxSpeedInDirection(Vector3 desiredMovementDirection)
		{
			return default(float);
		}

		[Token(Token = "0x6000891")]
		[Address(RVA = "0x490380", Offset = "0x490380", VA = "0x490380")]
		private void SetVelocity(Vector3 velocity)
		{
		}

		[Token(Token = "0x6000892")]
		[Address(RVA = "0x49046C", Offset = "0x49046C", VA = "0x49046C")]
		public PlayerMovement()
		{
		}
	}
	[Token(Token = "0x200014F")]
	public class Rain : MonoBehaviour
	{
		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Camera targetCamera;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PAParticleField dropField;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float groundHeight;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 mainOffset;

		[Token(Token = "0x6000893")]
		[Address(RVA = "0x490CB4", Offset = "0x490CB4", VA = "0x490CB4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0x490D54", Offset = "0x490D54", VA = "0x490D54")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0x490F3C", Offset = "0x490F3C", VA = "0x490F3C")]
		public Rain()
		{
		}
	}
	[Token(Token = "0x2000150")]
	public class PAMeshParticlesFaceCamera : MonoBehaviour
	{
		[Token(Token = "0x20002B2")]
		public enum FaceMethod
		{
			[Token(Token = "0x40015FB")]
			Face,
			[Token(Token = "0x40015FC")]
			Up
		}

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public PAParticleField particleField;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceMethod faceMethod;

		[Token(Token = "0x6000896")]
		[Address(RVA = "0x48C9B8", Offset = "0x48C9B8", VA = "0x48C9B8")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0x48CA18", Offset = "0x48CA18", VA = "0x48CA18")]
		private void Update()
		{
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0x48CCAC", Offset = "0x48CCAC", VA = "0x48CCAC")]
		public PAMeshParticlesFaceCamera()
		{
		}
	}
	[Token(Token = "0x2000151")]
	public class Rotator : MonoBehaviour
	{
		[Token(Token = "0x4000B7F")]
		private const float RANGE = 0.4f;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Rigidbody r;

		[Token(Token = "0x6000899")]
		[Address(RVA = "0x490F50", Offset = "0x490F50", VA = "0x490F50")]
		private void Start()
		{
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0x4910F8", Offset = "0x4910F8", VA = "0x4910F8")]
		private void Update()
		{
		}

		[Token(Token = "0x600089B")]
		[Address(RVA = "0x4911D4", Offset = "0x4911D4", VA = "0x4911D4")]
		public Rotator()
		{
		}
	}
	[Token(Token = "0x2000152")]
	public class SmoothCamera : MonoBehaviour
	{
		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Transform target;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float distance;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float height;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float damping;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool smoothRotation;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool followBehind;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float rotationDamping;

		[Token(Token = "0x600089C")]
		[Address(RVA = "0x49140C", Offset = "0x49140C", VA = "0x49140C")]
		private void Start()
		{
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0x49159C", Offset = "0x49159C", VA = "0x49159C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0x491940", Offset = "0x491940", VA = "0x491940")]
		public SmoothCamera()
		{
		}
	}
	[Token(Token = "0x2000153")]
	public class StarFieldSpaceship : MonoBehaviour
	{
		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float turnspeed;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float speed;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rollSpeed;

		[Token(Token = "0x600089F")]
		[Address(RVA = "0x491978", Offset = "0x491978", VA = "0x491978")]
		private void Start()
		{
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x49197C", Offset = "0x49197C", VA = "0x49197C")]
		private void Update()
		{
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0x491C08", Offset = "0x491C08", VA = "0x491C08")]
		public StarFieldSpaceship()
		{
		}
	}
	[Token(Token = "0x2000154")]
	public class Stardust : MonoBehaviour
	{
		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float maxMagnitude;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float lerpiness;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private PAParticleField field;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 lastPosition;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 lastDifference;

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0x491C34", Offset = "0x491C34", VA = "0x491C34")]
		private void Start()
		{
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0x491D1C", Offset = "0x491D1C", VA = "0x491D1C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0x491F58", Offset = "0x491F58", VA = "0x491F58")]
		public Stardust()
		{
		}
	}
	[Token(Token = "0x2000155")]
	public class CameraSwitch : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Camera cameraA;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Camera cameraB;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private RectTransform m_Rt;

		[Token(Token = "0x1700010B")]
		private RectTransform rt
		{
			[Token(Token = "0x60008A6")]
			[Address(RVA = "0x48B5E0", Offset = "0x48B5E0", VA = "0x48B5E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0x48B388", Offset = "0x48B388", VA = "0x48B388", Slot = "4")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0x48B38C", Offset = "0x48B38C", VA = "0x48B38C")]
		private void SwitchCameras()
		{
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0x48B6AC", Offset = "0x48B6AC", VA = "0x48B6AC")]
		private void Update()
		{
		}

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0x48B6D8", Offset = "0x48B6D8", VA = "0x48B6D8")]
		public CameraSwitch()
		{
		}
	}
	[Token(Token = "0x2000156")]
	public class DemosMenu : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string[] names;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Text headerButton;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Color openColor;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color closedColor;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public GameObject dropDown;

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0x48B6E0", Offset = "0x48B6E0", VA = "0x48B6E0")]
		private void Start()
		{
		}

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0x48B6E8", Offset = "0x48B6E8", VA = "0x48B6E8")]
		private void Show(bool arg = true)
		{
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0x48B820", Offset = "0x48B820", VA = "0x48B820", Slot = "4")]
		private void UnityEngine.EventSystems.IPointerClickHandler.OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0x48B858", Offset = "0x48B858", VA = "0x48B858")]
		public DemosMenu()
		{
		}
	}
	[Token(Token = "0x2000157")]
	public class FPSCounter : MonoBehaviour
	{
		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float updateInterval;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float accum;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int frames;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float timeleft;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private string frameString;

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0x48B860", Offset = "0x48B860", VA = "0x48B860")]
		private void Start()
		{
		}

		[Token(Token = "0x60008AF")]
		[Address(RVA = "0x48B86C", Offset = "0x48B86C", VA = "0x48B86C")]
		private void Update()
		{
		}

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0x48B9B8", Offset = "0x48B9B8", VA = "0x48B9B8")]
		public FPSCounter()
		{
		}
	}
	[Token(Token = "0x2000158")]
	public class LoadLevelButton : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x60008B1")]
		[Address(RVA = "0x48B9C8", Offset = "0x48B9C8", VA = "0x48B9C8", Slot = "4")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0x48BA54", Offset = "0x48BA54", VA = "0x48BA54")]
		private static List<string> GetSceneNames()
		{
			return null;
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x48BA5C", Offset = "0x48BA5C", VA = "0x48BA5C")]
		public LoadLevelButton()
		{
		}
	}
	[Token(Token = "0x2000159")]
	[ExecuteInEditMode]
	public class OrthoFollow : MonoBehaviour
	{
		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Transform target;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float offset;

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x48BEEC", Offset = "0x48BEEC", VA = "0x48BEEC")]
		private void Update()
		{
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x48C050", Offset = "0x48C050", VA = "0x48C050")]
		public OrthoFollow()
		{
		}
	}
	[Token(Token = "0x200015A")]
	public class ParticleSystemToggler : MonoBehaviour
	{
		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public GameObject system;

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0x48CD80", Offset = "0x48CD80", VA = "0x48CD80")]
		public void SetSystemOff(bool arg)
		{
		}

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0x48CE30", Offset = "0x48CE30", VA = "0x48CE30")]
		public ParticleSystemToggler()
		{
		}
	}
}
namespace OVR.OpenVR
{
	[Token(Token = "0x200015B")]
	public struct IVRSystem
	{
		[Token(Token = "0x20002B3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224AE4", Offset = "0x224AE4")]
		internal delegate void _GetRecommendedRenderTargetSize(ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x20002B4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224AF8", Offset = "0x224AF8")]
		internal delegate HmdMatrix44_t _GetProjectionMatrix(EVREye eEye, float fNearZ, float fFarZ);

		[Token(Token = "0x20002B5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224B0C", Offset = "0x224B0C")]
		internal delegate void _GetProjectionRaw(EVREye eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom);

		[Token(Token = "0x20002B6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224B20", Offset = "0x224B20")]
		internal delegate bool _ComputeDistortion(EVREye eEye, float fU, float fV, ref DistortionCoordinates_t pDistortionCoordinates);

		[Token(Token = "0x20002B7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224B34", Offset = "0x224B34")]
		internal delegate HmdMatrix34_t _GetEyeToHeadTransform(EVREye eEye);

		[Token(Token = "0x20002B8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224B48", Offset = "0x224B48")]
		internal delegate bool _GetTimeSinceLastVsync(ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter);

		[Token(Token = "0x20002B9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224B5C", Offset = "0x224B5C")]
		internal delegate int _GetD3D9AdapterIndex();

		[Token(Token = "0x20002BA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224B70", Offset = "0x224B70")]
		internal delegate void _GetDXGIOutputInfo(ref int pnAdapterIndex);

		[Token(Token = "0x20002BB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224B84", Offset = "0x224B84")]
		internal delegate void _GetOutputDevice(ref ulong pnDevice, ETextureType textureType, IntPtr pInstance);

		[Token(Token = "0x20002BC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224B98", Offset = "0x224B98")]
		internal delegate bool _IsDisplayOnDesktop();

		[Token(Token = "0x20002BD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224BAC", Offset = "0x224BAC")]
		internal delegate bool _SetDisplayVisibility(bool bIsVisibleOnDesktop);

		[Token(Token = "0x20002BE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224BC0", Offset = "0x224BC0")]
		internal delegate void _GetDeviceToAbsoluteTrackingPose(ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, [In][Out] TrackedDevicePose_t[] pTrackedDevicePoseArray, uint unTrackedDevicePoseArrayCount);

		[Token(Token = "0x20002BF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224BD4", Offset = "0x224BD4")]
		internal delegate void _ResetSeatedZeroPose();

		[Token(Token = "0x20002C0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224BE8", Offset = "0x224BE8")]
		internal delegate HmdMatrix34_t _GetSeatedZeroPoseToStandingAbsoluteTrackingPose();

		[Token(Token = "0x20002C1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224BFC", Offset = "0x224BFC")]
		internal delegate HmdMatrix34_t _GetRawZeroPoseToStandingAbsoluteTrackingPose();

		[Token(Token = "0x20002C2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224C10", Offset = "0x224C10")]
		internal delegate uint _GetSortedTrackedDeviceIndicesOfClass(ETrackedDeviceClass eTrackedDeviceClass, [In][Out] uint[] punTrackedDeviceIndexArray, uint unTrackedDeviceIndexArrayCount, uint unRelativeToTrackedDeviceIndex);

		[Token(Token = "0x20002C3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224C24", Offset = "0x224C24")]
		internal delegate EDeviceActivityLevel _GetTrackedDeviceActivityLevel(uint unDeviceId);

		[Token(Token = "0x20002C4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224C38", Offset = "0x224C38")]
		internal delegate void _ApplyTransform(ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pTrackedDevicePose, ref HmdMatrix34_t pTransform);

		[Token(Token = "0x20002C5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224C4C", Offset = "0x224C4C")]
		internal delegate uint _GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole unDeviceType);

		[Token(Token = "0x20002C6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224C60", Offset = "0x224C60")]
		internal delegate ETrackedControllerRole _GetControllerRoleForTrackedDeviceIndex(uint unDeviceIndex);

		[Token(Token = "0x20002C7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224C74", Offset = "0x224C74")]
		internal delegate ETrackedDeviceClass _GetTrackedDeviceClass(uint unDeviceIndex);

		[Token(Token = "0x20002C8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224C88", Offset = "0x224C88")]
		internal delegate bool _IsTrackedDeviceConnected(uint unDeviceIndex);

		[Token(Token = "0x20002C9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224C9C", Offset = "0x224C9C")]
		internal delegate bool _GetBoolTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x20002CA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224CB0", Offset = "0x224CB0")]
		internal delegate float _GetFloatTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x20002CB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224CC4", Offset = "0x224CC4")]
		internal delegate int _GetInt32TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x20002CC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224CD8", Offset = "0x224CD8")]
		internal delegate ulong _GetUint64TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x20002CD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224CEC", Offset = "0x224CEC")]
		internal delegate HmdMatrix34_t _GetMatrix34TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x20002CE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224D00", Offset = "0x224D00")]
		internal delegate uint _GetArrayTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, uint propType, IntPtr pBuffer, uint unBufferSize, ref ETrackedPropertyError pError);

		[Token(Token = "0x20002CF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224D14", Offset = "0x224D14")]
		internal delegate uint _GetStringTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, StringBuilder pchValue, uint unBufferSize, ref ETrackedPropertyError pError);

		[Token(Token = "0x20002D0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224D28", Offset = "0x224D28")]
		internal delegate IntPtr _GetPropErrorNameFromEnum(ETrackedPropertyError error);

		[Token(Token = "0x20002D1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224D3C", Offset = "0x224D3C")]
		internal delegate bool _PollNextEvent(ref VREvent_t pEvent, uint uncbVREvent);

		[Token(Token = "0x20002D2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224D50", Offset = "0x224D50")]
		internal delegate bool _PollNextEventWithPose(ETrackingUniverseOrigin eOrigin, ref VREvent_t pEvent, uint uncbVREvent, ref TrackedDevicePose_t pTrackedDevicePose);

		[Token(Token = "0x20002D3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224D64", Offset = "0x224D64")]
		internal delegate IntPtr _GetEventTypeNameFromEnum(EVREventType eType);

		[Token(Token = "0x20002D4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224D78", Offset = "0x224D78")]
		internal delegate HiddenAreaMesh_t _GetHiddenAreaMesh(EVREye eEye, EHiddenAreaMeshType type);

		[Token(Token = "0x20002D5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224D8C", Offset = "0x224D8C")]
		internal delegate bool _GetControllerState(uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize);

		[Token(Token = "0x20002D6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224DA0", Offset = "0x224DA0")]
		internal delegate bool _GetControllerStateWithPose(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose);

		[Token(Token = "0x20002D7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224DB4", Offset = "0x224DB4")]
		internal delegate void _TriggerHapticPulse(uint unControllerDeviceIndex, uint unAxisId, ushort usDurationMicroSec);

		[Token(Token = "0x20002D8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224DC8", Offset = "0x224DC8")]
		internal delegate IntPtr _GetButtonIdNameFromEnum(EVRButtonId eButtonId);

		[Token(Token = "0x20002D9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224DDC", Offset = "0x224DDC")]
		internal delegate IntPtr _GetControllerAxisTypeNameFromEnum(EVRControllerAxisType eAxisType);

		[Token(Token = "0x20002DA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224DF0", Offset = "0x224DF0")]
		internal delegate bool _IsInputAvailable();

		[Token(Token = "0x20002DB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224E04", Offset = "0x224E04")]
		internal delegate bool _IsSteamVRDrawingControllers();

		[Token(Token = "0x20002DC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224E18", Offset = "0x224E18")]
		internal delegate bool _ShouldApplicationPause();

		[Token(Token = "0x20002DD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224E2C", Offset = "0x224E2C")]
		internal delegate bool _ShouldApplicationReduceRenderingWork();

		[Token(Token = "0x20002DE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224E40", Offset = "0x224E40")]
		internal delegate uint _DriverDebugRequest(uint unDeviceIndex, string pchRequest, StringBuilder pchResponseBuffer, uint unResponseBufferSize);

		[Token(Token = "0x20002DF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224E54", Offset = "0x224E54")]
		internal delegate EVRFirmwareError _PerformFirmwareUpdate(uint unDeviceIndex);

		[Token(Token = "0x20002E0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224E68", Offset = "0x224E68")]
		internal delegate void _AcknowledgeQuit_Exiting();

		[Token(Token = "0x20002E1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224E7C", Offset = "0x224E7C")]
		internal delegate void _AcknowledgeQuit_UserPrompt();

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetRecommendedRenderTargetSize GetRecommendedRenderTargetSize;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal _GetProjectionMatrix GetProjectionMatrix;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetProjectionRaw GetProjectionRaw;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal _ComputeDistortion ComputeDistortion;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetEyeToHeadTransform GetEyeToHeadTransform;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal _GetTimeSinceLastVsync GetTimeSinceLastVsync;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetD3D9AdapterIndex GetD3D9AdapterIndex;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal _GetDXGIOutputInfo GetDXGIOutputInfo;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetOutputDevice GetOutputDevice;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal _IsDisplayOnDesktop IsDisplayOnDesktop;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _SetDisplayVisibility SetDisplayVisibility;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal _GetDeviceToAbsoluteTrackingPose GetDeviceToAbsoluteTrackingPose;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _ResetSeatedZeroPose ResetSeatedZeroPose;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal _GetSeatedZeroPoseToStandingAbsoluteTrackingPose GetSeatedZeroPoseToStandingAbsoluteTrackingPose;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetRawZeroPoseToStandingAbsoluteTrackingPose GetRawZeroPoseToStandingAbsoluteTrackingPose;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		internal _GetSortedTrackedDeviceIndicesOfClass GetSortedTrackedDeviceIndicesOfClass;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetTrackedDeviceActivityLevel GetTrackedDeviceActivityLevel;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		internal _ApplyTransform ApplyTransform;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetTrackedDeviceIndexForControllerRole GetTrackedDeviceIndexForControllerRole;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		internal _GetControllerRoleForTrackedDeviceIndex GetControllerRoleForTrackedDeviceIndex;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetTrackedDeviceClass GetTrackedDeviceClass;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		internal _IsTrackedDeviceConnected IsTrackedDeviceConnected;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetBoolTrackedDeviceProperty GetBoolTrackedDeviceProperty;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		internal _GetFloatTrackedDeviceProperty GetFloatTrackedDeviceProperty;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _GetInt32TrackedDeviceProperty GetInt32TrackedDeviceProperty;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		internal _GetUint64TrackedDeviceProperty GetUint64TrackedDeviceProperty;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetMatrix34TrackedDeviceProperty GetMatrix34TrackedDeviceProperty;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		internal _GetArrayTrackedDeviceProperty GetArrayTrackedDeviceProperty;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _GetStringTrackedDeviceProperty GetStringTrackedDeviceProperty;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		internal _GetPropErrorNameFromEnum GetPropErrorNameFromEnum;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _PollNextEvent PollNextEvent;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		internal _PollNextEventWithPose PollNextEventWithPose;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetEventTypeNameFromEnum GetEventTypeNameFromEnum;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		internal _GetHiddenAreaMesh GetHiddenAreaMesh;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetControllerState GetControllerState;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		internal _GetControllerStateWithPose GetControllerStateWithPose;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _TriggerHapticPulse TriggerHapticPulse;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		internal _GetButtonIdNameFromEnum GetButtonIdNameFromEnum;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _GetControllerAxisTypeNameFromEnum GetControllerAxisTypeNameFromEnum;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		internal _IsInputAvailable IsInputAvailable;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _IsSteamVRDrawingControllers IsSteamVRDrawingControllers;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		internal _ShouldApplicationPause ShouldApplicationPause;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _ShouldApplicationReduceRenderingWork ShouldApplicationReduceRenderingWork;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		internal _DriverDebugRequest DriverDebugRequest;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _PerformFirmwareUpdate PerformFirmwareUpdate;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		internal _AcknowledgeQuit_Exiting AcknowledgeQuit_Exiting;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _AcknowledgeQuit_UserPrompt AcknowledgeQuit_UserPrompt;
	}
	[Token(Token = "0x200015C")]
	public struct IVRExtendedDisplay
	{
		[Token(Token = "0x20002E2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224E90", Offset = "0x224E90")]
		internal delegate void _GetWindowBounds(ref int pnX, ref int pnY, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x20002E3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224EA4", Offset = "0x224EA4")]
		internal delegate void _GetEyeOutputViewport(EVREye eEye, ref uint pnX, ref uint pnY, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x20002E4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224EB8", Offset = "0x224EB8")]
		internal delegate void _GetDXGIOutputInfo(ref int pnAdapterIndex, ref int pnAdapterOutputIndex);

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetWindowBounds GetWindowBounds;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal _GetEyeOutputViewport GetEyeOutputViewport;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetDXGIOutputInfo GetDXGIOutputInfo;
	}
	[Token(Token = "0x200015D")]
	public struct IVRTrackedCamera
	{
		[Token(Token = "0x20002E5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224ECC", Offset = "0x224ECC")]
		internal delegate IntPtr _GetCameraErrorNameFromEnum(EVRTrackedCameraError eCameraError);

		[Token(Token = "0x20002E6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224EE0", Offset = "0x224EE0")]
		internal delegate EVRTrackedCameraError _HasCamera(uint nDeviceIndex, ref bool pHasCamera);

		[Token(Token = "0x20002E7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224EF4", Offset = "0x224EF4")]
		internal delegate EVRTrackedCameraError _GetCameraFrameSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref uint pnWidth, ref uint pnHeight, ref uint pnFrameBufferSize);

		[Token(Token = "0x20002E8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224F08", Offset = "0x224F08")]
		internal delegate EVRTrackedCameraError _GetCameraIntrinsics(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref HmdVector2_t pFocalLength, ref HmdVector2_t pCenter);

		[Token(Token = "0x20002E9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224F1C", Offset = "0x224F1C")]
		internal delegate EVRTrackedCameraError _GetCameraProjection(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, float flZNear, float flZFar, ref HmdMatrix44_t pProjection);

		[Token(Token = "0x20002EA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224F30", Offset = "0x224F30")]
		internal delegate EVRTrackedCameraError _AcquireVideoStreamingService(uint nDeviceIndex, ref ulong pHandle);

		[Token(Token = "0x20002EB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224F44", Offset = "0x224F44")]
		internal delegate EVRTrackedCameraError _ReleaseVideoStreamingService(ulong hTrackedCamera);

		[Token(Token = "0x20002EC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224F58", Offset = "0x224F58")]
		internal delegate EVRTrackedCameraError _GetVideoStreamFrameBuffer(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pFrameBuffer, uint nFrameBufferSize, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x20002ED")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224F6C", Offset = "0x224F6C")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref VRTextureBounds_t pTextureBounds, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x20002EE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224F80", Offset = "0x224F80")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureD3D11(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x20002EF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224F94", Offset = "0x224F94")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureGL(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, ref uint pglTextureId, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x20002F0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224FA8", Offset = "0x224FA8")]
		internal delegate EVRTrackedCameraError _ReleaseVideoStreamTextureGL(ulong hTrackedCamera, uint glTextureId);

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetCameraErrorNameFromEnum GetCameraErrorNameFromEnum;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal _HasCamera HasCamera;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetCameraFrameSize GetCameraFrameSize;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal _GetCameraIntrinsics GetCameraIntrinsics;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetCameraProjection GetCameraProjection;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal _AcquireVideoStreamingService AcquireVideoStreamingService;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _ReleaseVideoStreamingService ReleaseVideoStreamingService;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal _GetVideoStreamFrameBuffer GetVideoStreamFrameBuffer;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetVideoStreamTextureSize GetVideoStreamTextureSize;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal _GetVideoStreamTextureD3D11 GetVideoStreamTextureD3D11;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetVideoStreamTextureGL GetVideoStreamTextureGL;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal _ReleaseVideoStreamTextureGL ReleaseVideoStreamTextureGL;
	}
	[Token(Token = "0x200015E")]
	public struct IVRApplications
	{
		[Token(Token = "0x20002F1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224FBC", Offset = "0x224FBC")]
		internal delegate EVRApplicationError _AddApplicationManifest(string pchApplicationManifestFullPath, bool bTemporary);

		[Token(Token = "0x20002F2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224FD0", Offset = "0x224FD0")]
		internal delegate EVRApplicationError _RemoveApplicationManifest(string pchApplicationManifestFullPath);

		[Token(Token = "0x20002F3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224FE4", Offset = "0x224FE4")]
		internal delegate bool _IsApplicationInstalled(string pchAppKey);

		[Token(Token = "0x20002F4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x224FF8", Offset = "0x224FF8")]
		internal delegate uint _GetApplicationCount();

		[Token(Token = "0x20002F5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x22500C", Offset = "0x22500C")]
		internal delegate EVRApplicationError _GetApplicationKeyByIndex(uint unApplicationIndex, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x20002F6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225020", Offset = "0x225020")]
		internal delegate EVRApplicationError _GetApplicationKeyByProcessId(uint unProcessId, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x20002F7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225034", Offset = "0x225034")]
		internal delegate EVRApplicationError _LaunchApplication(string pchAppKey);

		[Token(Token = "0x20002F8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225048", Offset = "0x225048")]
		internal delegate EVRApplicationError _LaunchTemplateApplication(string pchTemplateAppKey, string pchNewAppKey, [In][Out] AppOverrideKeys_t[] pKeys, uint unKeys);

		[Token(Token = "0x20002F9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x22505C", Offset = "0x22505C")]
		internal delegate EVRApplicationError _LaunchApplicationFromMimeType(string pchMimeType, string pchArgs);

		[Token(Token = "0x20002FA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225070", Offset = "0x225070")]
		internal delegate EVRApplicationError _LaunchDashboardOverlay(string pchAppKey);

		[Token(Token = "0x20002FB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225084", Offset = "0x225084")]
		internal delegate bool _CancelApplicationLaunch(string pchAppKey);

		[Token(Token = "0x20002FC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225098", Offset = "0x225098")]
		internal delegate EVRApplicationError _IdentifyApplication(uint unProcessId, string pchAppKey);

		[Token(Token = "0x20002FD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2250AC", Offset = "0x2250AC")]
		internal delegate uint _GetApplicationProcessId(string pchAppKey);

		[Token(Token = "0x20002FE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2250C0", Offset = "0x2250C0")]
		internal delegate IntPtr _GetApplicationsErrorNameFromEnum(EVRApplicationError error);

		[Token(Token = "0x20002FF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2250D4", Offset = "0x2250D4")]
		internal delegate uint _GetApplicationPropertyString(string pchAppKey, EVRApplicationProperty eProperty, StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, ref EVRApplicationError peError);

		[Token(Token = "0x2000300")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2250E8", Offset = "0x2250E8")]
		internal delegate bool _GetApplicationPropertyBool(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError);

		[Token(Token = "0x2000301")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2250FC", Offset = "0x2250FC")]
		internal delegate ulong _GetApplicationPropertyUint64(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError);

		[Token(Token = "0x2000302")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225110", Offset = "0x225110")]
		internal delegate EVRApplicationError _SetApplicationAutoLaunch(string pchAppKey, bool bAutoLaunch);

		[Token(Token = "0x2000303")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225124", Offset = "0x225124")]
		internal delegate bool _GetApplicationAutoLaunch(string pchAppKey);

		[Token(Token = "0x2000304")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225138", Offset = "0x225138")]
		internal delegate EVRApplicationError _SetDefaultApplicationForMimeType(string pchAppKey, string pchMimeType);

		[Token(Token = "0x2000305")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x22514C", Offset = "0x22514C")]
		internal delegate bool _GetDefaultApplicationForMimeType(string pchMimeType, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x2000306")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225160", Offset = "0x225160")]
		internal delegate bool _GetApplicationSupportedMimeTypes(string pchAppKey, StringBuilder pchMimeTypesBuffer, uint unMimeTypesBuffer);

		[Token(Token = "0x2000307")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225174", Offset = "0x225174")]
		internal delegate uint _GetApplicationsThatSupportMimeType(string pchMimeType, StringBuilder pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer);

		[Token(Token = "0x2000308")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225188", Offset = "0x225188")]
		internal delegate uint _GetApplicationLaunchArguments(uint unHandle, StringBuilder pchArgs, uint unArgs);

		[Token(Token = "0x2000309")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x22519C", Offset = "0x22519C")]
		internal delegate EVRApplicationError _GetStartingApplication(StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x200030A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2251B0", Offset = "0x2251B0")]
		internal delegate EVRApplicationTransitionState _GetTransitionState();

		[Token(Token = "0x200030B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2251C4", Offset = "0x2251C4")]
		internal delegate EVRApplicationError _PerformApplicationPrelaunchCheck(string pchAppKey);

		[Token(Token = "0x200030C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2251D8", Offset = "0x2251D8")]
		internal delegate IntPtr _GetApplicationsTransitionStateNameFromEnum(EVRApplicationTransitionState state);

		[Token(Token = "0x200030D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2251EC", Offset = "0x2251EC")]
		internal delegate bool _IsQuitUserPromptRequested();

		[Token(Token = "0x200030E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225200", Offset = "0x225200")]
		internal delegate EVRApplicationError _LaunchInternalProcess(string pchBinaryPath, string pchArguments, string pchWorkingDirectory);

		[Token(Token = "0x200030F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225214", Offset = "0x225214")]
		internal delegate uint _GetCurrentSceneProcessId();

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _AddApplicationManifest AddApplicationManifest;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal _RemoveApplicationManifest RemoveApplicationManifest;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _IsApplicationInstalled IsApplicationInstalled;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal _GetApplicationCount GetApplicationCount;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetApplicationKeyByIndex GetApplicationKeyByIndex;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal _GetApplicationKeyByProcessId GetApplicationKeyByProcessId;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _LaunchApplication LaunchApplication;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal _LaunchTemplateApplication LaunchTemplateApplication;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _LaunchApplicationFromMimeType LaunchApplicationFromMimeType;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal _LaunchDashboardOverlay LaunchDashboardOverlay;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _CancelApplicationLaunch CancelApplicationLaunch;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal _IdentifyApplication IdentifyApplication;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetApplicationProcessId GetApplicationProcessId;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal _GetApplicationsErrorNameFromEnum GetApplicationsErrorNameFromEnum;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetApplicationPropertyString GetApplicationPropertyString;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		internal _GetApplicationPropertyBool GetApplicationPropertyBool;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetApplicationPropertyUint64 GetApplicationPropertyUint64;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		internal _SetApplicationAutoLaunch SetApplicationAutoLaunch;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetApplicationAutoLaunch GetApplicationAutoLaunch;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		internal _SetDefaultApplicationForMimeType SetDefaultApplicationForMimeType;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetDefaultApplicationForMimeType GetDefaultApplicationForMimeType;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		internal _GetApplicationSupportedMimeTypes GetApplicationSupportedMimeTypes;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetApplicationsThatSupportMimeType GetApplicationsThatSupportMimeType;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		internal _GetApplicationLaunchArguments GetApplicationLaunchArguments;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _GetStartingApplication GetStartingApplication;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		internal _GetTransitionState GetTransitionState;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _PerformApplicationPrelaunchCheck PerformApplicationPrelaunchCheck;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		internal _GetApplicationsTransitionStateNameFromEnum GetApplicationsTransitionStateNameFromEnum;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _IsQuitUserPromptRequested IsQuitUserPromptRequested;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		internal _LaunchInternalProcess LaunchInternalProcess;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetCurrentSceneProcessId GetCurrentSceneProcessId;
	}
	[Token(Token = "0x200015F")]
	public struct IVRChaperone
	{
		[Token(Token = "0x2000310")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225228", Offset = "0x225228")]
		internal delegate ChaperoneCalibrationState _GetCalibrationState();

		[Token(Token = "0x2000311")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x22523C", Offset = "0x22523C")]
		internal delegate bool _GetPlayAreaSize(ref float pSizeX, ref float pSizeZ);

		[Token(Token = "0x2000312")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225250", Offset = "0x225250")]
		internal delegate bool _GetPlayAreaRect(ref HmdQuad_t rect);

		[Token(Token = "0x2000313")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225264", Offset = "0x225264")]
		internal delegate void _ReloadInfo();

		[Token(Token = "0x2000314")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225278", Offset = "0x225278")]
		internal delegate void _SetSceneColor(HmdColor_t color);

		[Token(Token = "0x2000315")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x22528C", Offset = "0x22528C")]
		internal delegate void _GetBoundsColor(ref HmdColor_t pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, ref HmdColor_t pOutputCameraColor);

		[Token(Token = "0x2000316")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2252A0", Offset = "0x2252A0")]
		internal delegate bool _AreBoundsVisible();

		[Token(Token = "0x2000317")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2252B4", Offset = "0x2252B4")]
		internal delegate void _ForceBoundsVisible(bool bForce);

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetCalibrationState GetCalibrationState;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal _GetPlayAreaSize GetPlayAreaSize;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetPlayAreaRect GetPlayAreaRect;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal _ReloadInfo ReloadInfo;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _SetSceneColor SetSceneColor;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal _GetBoundsColor GetBoundsColor;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _AreBoundsVisible AreBoundsVisible;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal _ForceBoundsVisible ForceBoundsVisible;
	}
	[Token(Token = "0x2000160")]
	public struct IVRChaperoneSetup
	{
		[Token(Token = "0x2000318")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2252C8", Offset = "0x2252C8")]
		internal delegate bool _CommitWorkingCopy(EChaperoneConfigFile configFile);

		[Token(Token = "0x2000319")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2252DC", Offset = "0x2252DC")]
		internal delegate void _RevertWorkingCopy();

		[Token(Token = "0x200031A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2252F0", Offset = "0x2252F0")]
		internal delegate bool _GetWorkingPlayAreaSize(ref float pSizeX, ref float pSizeZ);

		[Token(Token = "0x200031B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225304", Offset = "0x225304")]
		internal delegate bool _GetWorkingPlayAreaRect(ref HmdQuad_t rect);

		[Token(Token = "0x200031C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225318", Offset = "0x225318")]
		internal delegate bool _GetWorkingCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x200031D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x22532C", Offset = "0x22532C")]
		internal delegate bool _GetLiveCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x200031E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225340", Offset = "0x225340")]
		internal delegate bool _GetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x200031F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225354", Offset = "0x225354")]
		internal delegate bool _GetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000320")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225368", Offset = "0x225368")]
		internal delegate void _SetWorkingPlayAreaSize(float sizeX, float sizeZ);

		[Token(Token = "0x2000321")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x22537C", Offset = "0x22537C")]
		internal delegate void _SetWorkingCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint unQuadsCount);

		[Token(Token = "0x2000322")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225390", Offset = "0x225390")]
		internal delegate void _SetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000323")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2253A4", Offset = "0x2253A4")]
		internal delegate void _SetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000324")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2253B8", Offset = "0x2253B8")]
		internal delegate void _ReloadFromDisk(EChaperoneConfigFile configFile);

		[Token(Token = "0x2000325")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2253CC", Offset = "0x2253CC")]
		internal delegate bool _GetLiveSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000326")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2253E0", Offset = "0x2253E0")]
		internal delegate void _SetWorkingCollisionBoundsTagsInfo([In][Out] byte[] pTagsBuffer, uint unTagCount);

		[Token(Token = "0x2000327")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2253F4", Offset = "0x2253F4")]
		internal delegate bool _GetLiveCollisionBoundsTagsInfo([In][Out] byte[] pTagsBuffer, ref uint punTagCount);

		[Token(Token = "0x2000328")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225408", Offset = "0x225408")]
		internal delegate bool _SetWorkingPhysicalBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint unQuadsCount);

		[Token(Token = "0x2000329")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x22541C", Offset = "0x22541C")]
		internal delegate bool _GetLivePhysicalBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x200032A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225430", Offset = "0x225430")]
		internal delegate bool _ExportLiveToBuffer(StringBuilder pBuffer, ref uint pnBufferLength);

		[Token(Token = "0x200032B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225444", Offset = "0x225444")]
		internal delegate bool _ImportFromBufferToWorking(string pBuffer, uint nImportFlags);

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CommitWorkingCopy CommitWorkingCopy;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal _RevertWorkingCopy RevertWorkingCopy;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetWorkingPlayAreaSize GetWorkingPlayAreaSize;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal _GetWorkingPlayAreaRect GetWorkingPlayAreaRect;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetWorkingCollisionBoundsInfo GetWorkingCollisionBoundsInfo;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal _GetLiveCollisionBoundsInfo GetLiveCollisionBoundsInfo;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetWorkingSeatedZeroPoseToRawTrackingPose GetWorkingSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal _GetWorkingStandingZeroPoseToRawTrackingPose GetWorkingStandingZeroPoseToRawTrackingPose;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _SetWorkingPlayAreaSize SetWorkingPlayAreaSize;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal _SetWorkingCollisionBoundsInfo SetWorkingCollisionBoundsInfo;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _SetWorkingSeatedZeroPoseToRawTrackingPose SetWorkingSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal _SetWorkingStandingZeroPoseToRawTrackingPose SetWorkingStandingZeroPoseToRawTrackingPose;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _ReloadFromDisk ReloadFromDisk;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal _GetLiveSeatedZeroPoseToRawTrackingPose GetLiveSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _SetWorkingCollisionBoundsTagsInfo SetWorkingCollisionBoundsTagsInfo;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		internal _GetLiveCollisionBoundsTagsInfo GetLiveCollisionBoundsTagsInfo;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _SetWorkingPhysicalBoundsInfo SetWorkingPhysicalBoundsInfo;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		internal _GetLivePhysicalBoundsInfo GetLivePhysicalBoundsInfo;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _ExportLiveToBuffer ExportLiveToBuffer;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		internal _ImportFromBufferToWorking ImportFromBufferToWorking;
	}
	[Token(Token = "0x2000161")]
	public struct IVRCompositor
	{
		[Token(Token = "0x200032C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225458", Offset = "0x225458")]
		internal delegate void _SetTrackingSpace(ETrackingUniverseOrigin eOrigin);

		[Token(Token = "0x200032D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x22546C", Offset = "0x22546C")]
		internal delegate ETrackingUniverseOrigin _GetTrackingSpace();

		[Token(Token = "0x200032E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225480", Offset = "0x225480")]
		internal delegate EVRCompositorError _WaitGetPoses([In][Out] TrackedDevicePose_t[] pRenderPoseArray, uint unRenderPoseArrayCount, [In][Out] TrackedDevicePose_t[] pGamePoseArray, uint unGamePoseArrayCount);

		[Token(Token = "0x200032F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225494", Offset = "0x225494")]
		internal delegate EVRCompositorError _GetLastPoses([In][Out] TrackedDevicePose_t[] pRenderPoseArray, uint unRenderPoseArrayCount, [In][Out] TrackedDevicePose_t[] pGamePoseArray, uint unGamePoseArrayCount);

		[Token(Token = "0x2000330")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2254A8", Offset = "0x2254A8")]
		internal delegate EVRCompositorError _GetLastPoseForTrackedDeviceIndex(uint unDeviceIndex, ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pOutputGamePose);

		[Token(Token = "0x2000331")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2254BC", Offset = "0x2254BC")]
		internal delegate EVRCompositorError _Submit(EVREye eEye, ref Texture_t pTexture, ref VRTextureBounds_t pBounds, EVRSubmitFlags nSubmitFlags);

		[Token(Token = "0x2000332")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2254D0", Offset = "0x2254D0")]
		internal delegate void _ClearLastSubmittedFrame();

		[Token(Token = "0x2000333")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2254E4", Offset = "0x2254E4")]
		internal delegate void _PostPresentHandoff();

		[Token(Token = "0x2000334")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2254F8", Offset = "0x2254F8")]
		internal delegate bool _GetFrameTiming(ref Compositor_FrameTiming pTiming, uint unFramesAgo);

		[Token(Token = "0x2000335")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x22550C", Offset = "0x22550C")]
		internal delegate uint _GetFrameTimings(ref Compositor_FrameTiming pTiming, uint nFrames);

		[Token(Token = "0x2000336")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225520", Offset = "0x225520")]
		internal delegate float _GetFrameTimeRemaining();

		[Token(Token = "0x2000337")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225534", Offset = "0x225534")]
		internal delegate void _GetCumulativeStats(ref Compositor_CumulativeStats pStats, uint nStatsSizeInBytes);

		[Token(Token = "0x2000338")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225548", Offset = "0x225548")]
		internal delegate void _FadeToColor(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground);

		[Token(Token = "0x2000339")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x22555C", Offset = "0x22555C")]
		internal delegate HmdColor_t _GetCurrentFadeColor(bool bBackground);

		[Token(Token = "0x200033A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225570", Offset = "0x225570")]
		internal delegate void _FadeGrid(float fSeconds, bool bFadeIn);

		[Token(Token = "0x200033B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225584", Offset = "0x225584")]
		internal delegate float _GetCurrentGridAlpha();

		[Token(Token = "0x200033C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225598", Offset = "0x225598")]
		internal delegate EVRCompositorError _SetSkyboxOverride([In][Out] Texture_t[] pTextures, uint unTextureCount);

		[Token(Token = "0x200033D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2255AC", Offset = "0x2255AC")]
		internal delegate void _ClearSkyboxOverride();

		[Token(Token = "0x200033E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2255C0", Offset = "0x2255C0")]
		internal delegate void _CompositorBringToFront();

		[Token(Token = "0x200033F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2255D4", Offset = "0x2255D4")]
		internal delegate void _CompositorGoToBack();

		[Token(Token = "0x2000340")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2255E8", Offset = "0x2255E8")]
		internal delegate void _CompositorQuit();

		[Token(Token = "0x2000341")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2255FC", Offset = "0x2255FC")]
		internal delegate bool _IsFullscreen();

		[Token(Token = "0x2000342")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225610", Offset = "0x225610")]
		internal delegate uint _GetCurrentSceneFocusProcess();

		[Token(Token = "0x2000343")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225624", Offset = "0x225624")]
		internal delegate uint _GetLastFrameRenderer();

		[Token(Token = "0x2000344")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225638", Offset = "0x225638")]
		internal delegate bool _CanRenderScene();

		[Token(Token = "0x2000345")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x22564C", Offset = "0x22564C")]
		internal delegate void _ShowMirrorWindow();

		[Token(Token = "0x2000346")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225660", Offset = "0x225660")]
		internal delegate void _HideMirrorWindow();

		[Token(Token = "0x2000347")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225674", Offset = "0x225674")]
		internal delegate bool _IsMirrorWindowVisible();

		[Token(Token = "0x2000348")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225688", Offset = "0x225688")]
		internal delegate void _CompositorDumpImages();

		[Token(Token = "0x2000349")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x22569C", Offset = "0x22569C")]
		internal delegate bool _ShouldAppRenderWithLowResources();

		[Token(Token = "0x200034A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2256B0", Offset = "0x2256B0")]
		internal delegate void _ForceInterleavedReprojectionOn(bool bOverride);

		[Token(Token = "0x200034B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2256C4", Offset = "0x2256C4")]
		internal delegate void _ForceReconnectProcess();

		[Token(Token = "0x200034C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2256D8", Offset = "0x2256D8")]
		internal delegate void _SuspendRendering(bool bSuspend);

		[Token(Token = "0x200034D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2256EC", Offset = "0x2256EC")]
		internal delegate EVRCompositorError _GetMirrorTextureD3D11(EVREye eEye, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView);

		[Token(Token = "0x200034E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225700", Offset = "0x225700")]
		internal delegate void _ReleaseMirrorTextureD3D11(IntPtr pD3D11ShaderResourceView);

		[Token(Token = "0x200034F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225714", Offset = "0x225714")]
		internal delegate EVRCompositorError _GetMirrorTextureGL(EVREye eEye, ref uint pglTextureId, IntPtr pglSharedTextureHandle);

		[Token(Token = "0x2000350")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225728", Offset = "0x225728")]
		internal delegate bool _ReleaseSharedGLTexture(uint glTextureId, IntPtr glSharedTextureHandle);

		[Token(Token = "0x2000351")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x22573C", Offset = "0x22573C")]
		internal delegate void _LockGLSharedTextureForAccess(IntPtr glSharedTextureHandle);

		[Token(Token = "0x2000352")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225750", Offset = "0x225750")]
		internal delegate void _UnlockGLSharedTextureForAccess(IntPtr glSharedTextureHandle);

		[Token(Token = "0x2000353")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225764", Offset = "0x225764")]
		internal delegate uint _GetVulkanInstanceExtensionsRequired(StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x2000354")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225778", Offset = "0x225778")]
		internal delegate uint _GetVulkanDeviceExtensionsRequired(IntPtr pPhysicalDevice, StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x2000355")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x22578C", Offset = "0x22578C")]
		internal delegate void _SetExplicitTimingMode(EVRCompositorTimingMode eTimingMode);

		[Token(Token = "0x2000356")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2257A0", Offset = "0x2257A0")]
		internal delegate EVRCompositorError _SubmitExplicitTimingData();

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetTrackingSpace SetTrackingSpace;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal _GetTrackingSpace GetTrackingSpace;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _WaitGetPoses WaitGetPoses;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal _GetLastPoses GetLastPoses;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetLastPoseForTrackedDeviceIndex GetLastPoseForTrackedDeviceIndex;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal _Submit Submit;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _ClearLastSubmittedFrame ClearLastSubmittedFrame;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal _PostPresentHandoff PostPresentHandoff;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetFrameTiming GetFrameTiming;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal _GetFrameTimings GetFrameTimings;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetFrameTimeRemaining GetFrameTimeRemaining;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal _GetCumulativeStats GetCumulativeStats;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _FadeToColor FadeToColor;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal _GetCurrentFadeColor GetCurrentFadeColor;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _FadeGrid FadeGrid;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		internal _GetCurrentGridAlpha GetCurrentGridAlpha;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _SetSkyboxOverride SetSkyboxOverride;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		internal _ClearSkyboxOverride ClearSkyboxOverride;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _CompositorBringToFront CompositorBringToFront;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		internal _CompositorGoToBack CompositorGoToBack;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _CompositorQuit CompositorQuit;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		internal _IsFullscreen IsFullscreen;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetCurrentSceneFocusProcess GetCurrentSceneFocusProcess;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		internal _GetLastFrameRenderer GetLastFrameRenderer;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _CanRenderScene CanRenderScene;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		internal _ShowMirrorWindow ShowMirrorWindow;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _HideMirrorWindow HideMirrorWindow;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		internal _IsMirrorWindowVisible IsMirrorWindowVisible;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _CompositorDumpImages CompositorDumpImages;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		internal _ShouldAppRenderWithLowResources ShouldAppRenderWithLowResources;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _ForceInterleavedReprojectionOn ForceInterleavedReprojectionOn;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		internal _ForceReconnectProcess ForceReconnectProcess;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SuspendRendering SuspendRendering;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		internal _GetMirrorTextureD3D11 GetMirrorTextureD3D11;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _ReleaseMirrorTextureD3D11 ReleaseMirrorTextureD3D11;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		internal _GetMirrorTextureGL GetMirrorTextureGL;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _ReleaseSharedGLTexture ReleaseSharedGLTexture;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		internal _LockGLSharedTextureForAccess LockGLSharedTextureForAccess;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _UnlockGLSharedTextureForAccess UnlockGLSharedTextureForAccess;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		internal _GetVulkanInstanceExtensionsRequired GetVulkanInstanceExtensionsRequired;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _GetVulkanDeviceExtensionsRequired GetVulkanDeviceExtensionsRequired;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		internal _SetExplicitTimingMode SetExplicitTimingMode;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _SubmitExplicitTimingData SubmitExplicitTimingData;
	}
	[Token(Token = "0x2000162")]
	public struct IVROverlay
	{
		[Token(Token = "0x2000357")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2257B4", Offset = "0x2257B4")]
		internal delegate EVROverlayError _FindOverlay(string pchOverlayKey, ref ulong pOverlayHandle);

		[Token(Token = "0x2000358")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2257C8", Offset = "0x2257C8")]
		internal delegate EVROverlayError _CreateOverlay(string pchOverlayKey, string pchOverlayName, ref ulong pOverlayHandle);

		[Token(Token = "0x2000359")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2257DC", Offset = "0x2257DC")]
		internal delegate EVROverlayError _DestroyOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x200035A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2257F0", Offset = "0x2257F0")]
		internal delegate EVROverlayError _SetHighQualityOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x200035B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225804", Offset = "0x225804")]
		internal delegate ulong _GetHighQualityOverlay();

		[Token(Token = "0x200035C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225818", Offset = "0x225818")]
		internal delegate uint _GetOverlayKey(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError);

		[Token(Token = "0x200035D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x22582C", Offset = "0x22582C")]
		internal delegate uint _GetOverlayName(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError);

		[Token(Token = "0x200035E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225840", Offset = "0x225840")]
		internal delegate EVROverlayError _SetOverlayName(ulong ulOverlayHandle, string pchName);

		[Token(Token = "0x200035F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225854", Offset = "0x225854")]
		internal delegate EVROverlayError _GetOverlayImageData(ulong ulOverlayHandle, IntPtr pvBuffer, uint unBufferSize, ref uint punWidth, ref uint punHeight);

		[Token(Token = "0x2000360")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225868", Offset = "0x225868")]
		internal delegate IntPtr _GetOverlayErrorNameFromEnum(EVROverlayError error);

		[Token(Token = "0x2000361")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x22587C", Offset = "0x22587C")]
		internal delegate EVROverlayError _SetOverlayRenderingPid(ulong ulOverlayHandle, uint unPID);

		[Token(Token = "0x2000362")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225890", Offset = "0x225890")]
		internal delegate uint _GetOverlayRenderingPid(ulong ulOverlayHandle);

		[Token(Token = "0x2000363")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2258A4", Offset = "0x2258A4")]
		internal delegate EVROverlayError _SetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool bEnabled);

		[Token(Token = "0x2000364")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2258B8", Offset = "0x2258B8")]
		internal delegate EVROverlayError _GetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, ref bool pbEnabled);

		[Token(Token = "0x2000365")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2258CC", Offset = "0x2258CC")]
		internal delegate EVROverlayError _SetOverlayColor(ulong ulOverlayHandle, float fRed, float fGreen, float fBlue);

		[Token(Token = "0x2000366")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2258E0", Offset = "0x2258E0")]
		internal delegate EVROverlayError _GetOverlayColor(ulong ulOverlayHandle, ref float pfRed, ref float pfGreen, ref float pfBlue);

		[Token(Token = "0x2000367")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2258F4", Offset = "0x2258F4")]
		internal delegate EVROverlayError _SetOverlayAlpha(ulong ulOverlayHandle, float fAlpha);

		[Token(Token = "0x2000368")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225908", Offset = "0x225908")]
		internal delegate EVROverlayError _GetOverlayAlpha(ulong ulOverlayHandle, ref float pfAlpha);

		[Token(Token = "0x2000369")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x22591C", Offset = "0x22591C")]
		internal delegate EVROverlayError _SetOverlayTexelAspect(ulong ulOverlayHandle, float fTexelAspect);

		[Token(Token = "0x200036A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225930", Offset = "0x225930")]
		internal delegate EVROverlayError _GetOverlayTexelAspect(ulong ulOverlayHandle, ref float pfTexelAspect);

		[Token(Token = "0x200036B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225944", Offset = "0x225944")]
		internal delegate EVROverlayError _SetOverlaySortOrder(ulong ulOverlayHandle, uint unSortOrder);

		[Token(Token = "0x200036C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225958", Offset = "0x225958")]
		internal delegate EVROverlayError _GetOverlaySortOrder(ulong ulOverlayHandle, ref uint punSortOrder);

		[Token(Token = "0x200036D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x22596C", Offset = "0x22596C")]
		internal delegate EVROverlayError _SetOverlayWidthInMeters(ulong ulOverlayHandle, float fWidthInMeters);

		[Token(Token = "0x200036E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225980", Offset = "0x225980")]
		internal delegate EVROverlayError _GetOverlayWidthInMeters(ulong ulOverlayHandle, ref float pfWidthInMeters);

		[Token(Token = "0x200036F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225994", Offset = "0x225994")]
		internal delegate EVROverlayError _SetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters);

		[Token(Token = "0x2000370")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2259A8", Offset = "0x2259A8")]
		internal delegate EVROverlayError _GetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, ref float pfMinDistanceInMeters, ref float pfMaxDistanceInMeters);

		[Token(Token = "0x2000371")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2259BC", Offset = "0x2259BC")]
		internal delegate EVROverlayError _SetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace eTextureColorSpace);

		[Token(Token = "0x2000372")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2259D0", Offset = "0x2259D0")]
		internal delegate EVROverlayError _GetOverlayTextureColorSpace(ulong ulOverlayHandle, ref EColorSpace peTextureColorSpace);

		[Token(Token = "0x2000373")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2259E4", Offset = "0x2259E4")]
		internal delegate EVROverlayError _SetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds);

		[Token(Token = "0x2000374")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2259F8", Offset = "0x2259F8")]
		internal delegate EVROverlayError _GetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds);

		[Token(Token = "0x2000375")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225A0C", Offset = "0x225A0C")]
		internal delegate uint _GetOverlayRenderModel(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref HmdColor_t pColor, ref EVROverlayError pError);

		[Token(Token = "0x2000376")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225A20", Offset = "0x225A20")]
		internal delegate EVROverlayError _SetOverlayRenderModel(ulong ulOverlayHandle, string pchRenderModel, ref HmdColor_t pColor);

		[Token(Token = "0x2000377")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225A34", Offset = "0x225A34")]
		internal delegate EVROverlayError _GetOverlayTransformType(ulong ulOverlayHandle, ref VROverlayTransformType peTransformType);

		[Token(Token = "0x2000378")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225A48", Offset = "0x225A48")]
		internal delegate EVROverlayError _SetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform);

		[Token(Token = "0x2000379")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225A5C", Offset = "0x225A5C")]
		internal delegate EVROverlayError _GetOverlayTransformAbsolute(ulong ulOverlayHandle, ref ETrackingUniverseOrigin peTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform);

		[Token(Token = "0x200037A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225A70", Offset = "0x225A70")]
		internal delegate EVROverlayError _SetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint unTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform);

		[Token(Token = "0x200037B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225A84", Offset = "0x225A84")]
		internal delegate EVROverlayError _GetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, ref uint punTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform);

		[Token(Token = "0x200037C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225A98", Offset = "0x225A98")]
		internal delegate EVROverlayError _SetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint unDeviceIndex, string pchComponentName);

		[Token(Token = "0x200037D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225AAC", Offset = "0x225AAC")]
		internal delegate EVROverlayError _GetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, ref uint punDeviceIndex, StringBuilder pchComponentName, uint unComponentNameSize);

		[Token(Token = "0x200037E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225AC0", Offset = "0x225AC0")]
		internal delegate EVROverlayError _GetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ref ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform);

		[Token(Token = "0x200037F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225AD4", Offset = "0x225AD4")]
		internal delegate EVROverlayError _SetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform);

		[Token(Token = "0x2000380")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225AE8", Offset = "0x225AE8")]
		internal delegate EVROverlayError _ShowOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x2000381")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225AFC", Offset = "0x225AFC")]
		internal delegate EVROverlayError _HideOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x2000382")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225B10", Offset = "0x225B10")]
		internal delegate bool _IsOverlayVisible(ulong ulOverlayHandle);

		[Token(Token = "0x2000383")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225B24", Offset = "0x225B24")]
		internal delegate EVROverlayError _GetTransformForOverlayCoordinates(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdVector2_t coordinatesInOverlay, ref HmdMatrix34_t pmatTransform);

		[Token(Token = "0x2000384")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225B38", Offset = "0x225B38")]
		internal delegate bool _PollNextOverlayEvent(ulong ulOverlayHandle, ref VREvent_t pEvent, uint uncbVREvent);

		[Token(Token = "0x2000385")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225B4C", Offset = "0x225B4C")]
		internal delegate EVROverlayError _GetOverlayInputMethod(ulong ulOverlayHandle, ref VROverlayInputMethod peInputMethod);

		[Token(Token = "0x2000386")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225B60", Offset = "0x225B60")]
		internal delegate EVROverlayError _SetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod eInputMethod);

		[Token(Token = "0x2000387")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225B74", Offset = "0x225B74")]
		internal delegate EVROverlayError _GetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale);

		[Token(Token = "0x2000388")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225B88", Offset = "0x225B88")]
		internal delegate EVROverlayError _SetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale);

		[Token(Token = "0x2000389")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225B9C", Offset = "0x225B9C")]
		internal delegate bool _ComputeOverlayIntersection(ulong ulOverlayHandle, ref VROverlayIntersectionParams_t pParams, ref VROverlayIntersectionResults_t pResults);

		[Token(Token = "0x200038A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225BB0", Offset = "0x225BB0")]
		internal delegate bool _IsHoverTargetOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x200038B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225BC4", Offset = "0x225BC4")]
		internal delegate ulong _GetGamepadFocusOverlay();

		[Token(Token = "0x200038C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225BD8", Offset = "0x225BD8")]
		internal delegate EVROverlayError _SetGamepadFocusOverlay(ulong ulNewFocusOverlay);

		[Token(Token = "0x200038D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225BEC", Offset = "0x225BEC")]
		internal delegate EVROverlayError _SetOverlayNeighbor(EOverlayDirection eDirection, ulong ulFrom, ulong ulTo);

		[Token(Token = "0x200038E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225C00", Offset = "0x225C00")]
		internal delegate EVROverlayError _MoveGamepadFocusToNeighbor(EOverlayDirection eDirection, ulong ulFrom);

		[Token(Token = "0x200038F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225C14", Offset = "0x225C14")]
		internal delegate EVROverlayError _SetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, IntPtr vCenter, float fRadius);

		[Token(Token = "0x2000390")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225C28", Offset = "0x225C28")]
		internal delegate EVROverlayError _GetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, ref HmdVector2_t pvCenter, ref float pfRadius);

		[Token(Token = "0x2000391")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225C3C", Offset = "0x225C3C")]
		internal delegate EVROverlayError _SetOverlayTexture(ulong ulOverlayHandle, ref Texture_t pTexture);

		[Token(Token = "0x2000392")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225C50", Offset = "0x225C50")]
		internal delegate EVROverlayError _ClearOverlayTexture(ulong ulOverlayHandle);

		[Token(Token = "0x2000393")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225C64", Offset = "0x225C64")]
		internal delegate EVROverlayError _SetOverlayRaw(ulong ulOverlayHandle, IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth);

		[Token(Token = "0x2000394")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225C78", Offset = "0x225C78")]
		internal delegate EVROverlayError _SetOverlayFromFile(ulong ulOverlayHandle, string pchFilePath);

		[Token(Token = "0x2000395")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225C8C", Offset = "0x225C8C")]
		internal delegate EVROverlayError _GetOverlayTexture(ulong ulOverlayHandle, ref IntPtr pNativeTextureHandle, IntPtr pNativeTextureRef, ref uint pWidth, ref uint pHeight, ref uint pNativeFormat, ref ETextureType pAPIType, ref EColorSpace pColorSpace, ref VRTextureBounds_t pTextureBounds);

		[Token(Token = "0x2000396")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225CA0", Offset = "0x225CA0")]
		internal delegate EVROverlayError _ReleaseNativeOverlayHandle(ulong ulOverlayHandle, IntPtr pNativeTextureHandle);

		[Token(Token = "0x2000397")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225CB4", Offset = "0x225CB4")]
		internal delegate EVROverlayError _GetOverlayTextureSize(ulong ulOverlayHandle, ref uint pWidth, ref uint pHeight);

		[Token(Token = "0x2000398")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225CC8", Offset = "0x225CC8")]
		internal delegate EVROverlayError _CreateDashboardOverlay(string pchOverlayKey, string pchOverlayFriendlyName, ref ulong pMainHandle, ref ulong pThumbnailHandle);

		[Token(Token = "0x2000399")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225CDC", Offset = "0x225CDC")]
		internal delegate bool _IsDashboardVisible();

		[Token(Token = "0x200039A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225CF0", Offset = "0x225CF0")]
		internal delegate bool _IsActiveDashboardOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x200039B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225D04", Offset = "0x225D04")]
		internal delegate EVROverlayError _SetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint unProcessId);

		[Token(Token = "0x200039C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225D18", Offset = "0x225D18")]
		internal delegate EVROverlayError _GetDashboardOverlaySceneProcess(ulong ulOverlayHandle, ref uint punProcessId);

		[Token(Token = "0x200039D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225D2C", Offset = "0x225D2C")]
		internal delegate void _ShowDashboard(string pchOverlayToShow);

		[Token(Token = "0x200039E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225D40", Offset = "0x225D40")]
		internal delegate uint _GetPrimaryDashboardDevice();

		[Token(Token = "0x200039F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225D54", Offset = "0x225D54")]
		internal delegate EVROverlayError _ShowKeyboard(int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue);

		[Token(Token = "0x20003A0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225D68", Offset = "0x225D68")]
		internal delegate EVROverlayError _ShowKeyboardForOverlay(ulong ulOverlayHandle, int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue);

		[Token(Token = "0x20003A1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225D7C", Offset = "0x225D7C")]
		internal delegate uint _GetKeyboardText(StringBuilder pchText, uint cchText);

		[Token(Token = "0x20003A2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225D90", Offset = "0x225D90")]
		internal delegate void _HideKeyboard();

		[Token(Token = "0x20003A3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225DA4", Offset = "0x225DA4")]
		internal delegate void _SetKeyboardTransformAbsolute(ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToKeyboardTransform);

		[Token(Token = "0x20003A4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225DB8", Offset = "0x225DB8")]
		internal delegate void _SetKeyboardPositionForOverlay(ulong ulOverlayHandle, HmdRect2_t avoidRect);

		[Token(Token = "0x20003A5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225DCC", Offset = "0x225DCC")]
		internal delegate EVROverlayError _SetOverlayIntersectionMask(ulong ulOverlayHandle, ref VROverlayIntersectionMaskPrimitive_t pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize);

		[Token(Token = "0x20003A6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225DE0", Offset = "0x225DE0")]
		internal delegate EVROverlayError _GetOverlayFlags(ulong ulOverlayHandle, ref uint pFlags);

		[Token(Token = "0x20003A7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225DF4", Offset = "0x225DF4")]
		internal delegate VRMessageOverlayResponse _ShowMessageOverlay(string pchText, string pchCaption, string pchButton0Text, string pchButton1Text, string pchButton2Text, string pchButton3Text);

		[Token(Token = "0x20003A8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225E08", Offset = "0x225E08")]
		internal delegate void _CloseMessageOverlay();

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _FindOverlay FindOverlay;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal _CreateOverlay CreateOverlay;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _DestroyOverlay DestroyOverlay;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal _SetHighQualityOverlay SetHighQualityOverlay;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetHighQualityOverlay GetHighQualityOverlay;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal _GetOverlayKey GetOverlayKey;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetOverlayName GetOverlayName;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal _SetOverlayName SetOverlayName;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetOverlayImageData GetOverlayImageData;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal _GetOverlayErrorNameFromEnum GetOverlayErrorNameFromEnum;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _SetOverlayRenderingPid SetOverlayRenderingPid;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal _GetOverlayRenderingPid GetOverlayRenderingPid;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _SetOverlayFlag SetOverlayFlag;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal _GetOverlayFlag GetOverlayFlag;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _SetOverlayColor SetOverlayColor;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		internal _GetOverlayColor GetOverlayColor;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _SetOverlayAlpha SetOverlayAlpha;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		internal _GetOverlayAlpha GetOverlayAlpha;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _SetOverlayTexelAspect SetOverlayTexelAspect;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		internal _GetOverlayTexelAspect GetOverlayTexelAspect;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetOverlaySortOrder SetOverlaySortOrder;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		internal _GetOverlaySortOrder GetOverlaySortOrder;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _SetOverlayWidthInMeters SetOverlayWidthInMeters;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		internal _GetOverlayWidthInMeters GetOverlayWidthInMeters;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _SetOverlayAutoCurveDistanceRangeInMeters SetOverlayAutoCurveDistanceRangeInMeters;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		internal _GetOverlayAutoCurveDistanceRangeInMeters GetOverlayAutoCurveDistanceRangeInMeters;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _SetOverlayTextureColorSpace SetOverlayTextureColorSpace;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		internal _GetOverlayTextureColorSpace GetOverlayTextureColorSpace;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _SetOverlayTextureBounds SetOverlayTextureBounds;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		internal _GetOverlayTextureBounds GetOverlayTextureBounds;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetOverlayRenderModel GetOverlayRenderModel;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		internal _SetOverlayRenderModel SetOverlayRenderModel;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetOverlayTransformType GetOverlayTransformType;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		internal _SetOverlayTransformAbsolute SetOverlayTransformAbsolute;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetOverlayTransformAbsolute GetOverlayTransformAbsolute;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		internal _SetOverlayTransformTrackedDeviceRelative SetOverlayTransformTrackedDeviceRelative;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _GetOverlayTransformTrackedDeviceRelative GetOverlayTransformTrackedDeviceRelative;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		internal _SetOverlayTransformTrackedDeviceComponent SetOverlayTransformTrackedDeviceComponent;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _GetOverlayTransformTrackedDeviceComponent GetOverlayTransformTrackedDeviceComponent;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		internal _GetOverlayTransformOverlayRelative GetOverlayTransformOverlayRelative;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _SetOverlayTransformOverlayRelative SetOverlayTransformOverlayRelative;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		internal _ShowOverlay ShowOverlay;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _HideOverlay HideOverlay;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		internal _IsOverlayVisible IsOverlayVisible;

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetTransformForOverlayCoordinates GetTransformForOverlayCoordinates;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		internal _PollNextOverlayEvent PollNextOverlayEvent;

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetOverlayInputMethod GetOverlayInputMethod;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		internal _SetOverlayInputMethod SetOverlayInputMethod;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _GetOverlayMouseScale GetOverlayMouseScale;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		internal _SetOverlayMouseScale SetOverlayMouseScale;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _ComputeOverlayIntersection ComputeOverlayIntersection;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		internal _IsHoverTargetOverlay IsHoverTargetOverlay;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _GetGamepadFocusOverlay GetGamepadFocusOverlay;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		internal _SetGamepadFocusOverlay SetGamepadFocusOverlay;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _SetOverlayNeighbor SetOverlayNeighbor;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		internal _MoveGamepadFocusToNeighbor MoveGamepadFocusToNeighbor;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _SetOverlayDualAnalogTransform SetOverlayDualAnalogTransform;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		internal _GetOverlayDualAnalogTransform GetOverlayDualAnalogTransform;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _SetOverlayTexture SetOverlayTexture;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		internal _ClearOverlayTexture ClearOverlayTexture;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _SetOverlayRaw SetOverlayRaw;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		internal _SetOverlayFromFile SetOverlayFromFile;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _GetOverlayTexture GetOverlayTexture;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		internal _ReleaseNativeOverlayHandle ReleaseNativeOverlayHandle;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _GetOverlayTextureSize GetOverlayTextureSize;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		internal _CreateDashboardOverlay CreateDashboardOverlay;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _IsDashboardVisible IsDashboardVisible;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		internal _IsActiveDashboardOverlay IsActiveDashboardOverlay;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _SetDashboardOverlaySceneProcess SetDashboardOverlaySceneProcess;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		internal _GetDashboardOverlaySceneProcess GetDashboardOverlaySceneProcess;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _ShowDashboard ShowDashboard;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		internal _GetPrimaryDashboardDevice GetPrimaryDashboardDevice;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _ShowKeyboard ShowKeyboard;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		internal _ShowKeyboardForOverlay ShowKeyboardForOverlay;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _GetKeyboardText GetKeyboardText;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		internal _HideKeyboard HideKeyboard;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _SetKeyboardTransformAbsolute SetKeyboardTransformAbsolute;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		internal _SetKeyboardPositionForOverlay SetKeyboardPositionForOverlay;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _SetOverlayIntersectionMask SetOverlayIntersectionMask;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		internal _GetOverlayFlags GetOverlayFlags;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _ShowMessageOverlay ShowMessageOverlay;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		internal _CloseMessageOverlay CloseMessageOverlay;
	}
	[Token(Token = "0x2000163")]
	public struct IVRRenderModels
	{
		[Token(Token = "0x20003A9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225E1C", Offset = "0x225E1C")]
		internal delegate EVRRenderModelError _LoadRenderModel_Async(string pchRenderModelName, ref IntPtr ppRenderModel);

		[Token(Token = "0x20003AA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225E30", Offset = "0x225E30")]
		internal delegate void _FreeRenderModel(IntPtr pRenderModel);

		[Token(Token = "0x20003AB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225E44", Offset = "0x225E44")]
		internal delegate EVRRenderModelError _LoadTexture_Async(int textureId, ref IntPtr ppTexture);

		[Token(Token = "0x20003AC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225E58", Offset = "0x225E58")]
		internal delegate void _FreeTexture(IntPtr pTexture);

		[Token(Token = "0x20003AD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225E6C", Offset = "0x225E6C")]
		internal delegate EVRRenderModelError _LoadTextureD3D11_Async(int textureId, IntPtr pD3D11Device, ref IntPtr ppD3D11Texture2D);

		[Token(Token = "0x20003AE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225E80", Offset = "0x225E80")]
		internal delegate EVRRenderModelError _LoadIntoTextureD3D11_Async(int textureId, IntPtr pDstTexture);

		[Token(Token = "0x20003AF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225E94", Offset = "0x225E94")]
		internal delegate void _FreeTextureD3D11(IntPtr pD3D11Texture2D);

		[Token(Token = "0x20003B0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225EA8", Offset = "0x225EA8")]
		internal delegate uint _GetRenderModelName(uint unRenderModelIndex, StringBuilder pchRenderModelName, uint unRenderModelNameLen);

		[Token(Token = "0x20003B1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225EBC", Offset = "0x225EBC")]
		internal delegate uint _GetRenderModelCount();

		[Token(Token = "0x20003B2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225ED0", Offset = "0x225ED0")]
		internal delegate uint _GetComponentCount(string pchRenderModelName);

		[Token(Token = "0x20003B3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225EE4", Offset = "0x225EE4")]
		internal delegate uint _GetComponentName(string pchRenderModelName, uint unComponentIndex, StringBuilder pchComponentName, uint unComponentNameLen);

		[Token(Token = "0x20003B4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225EF8", Offset = "0x225EF8")]
		internal delegate ulong _GetComponentButtonMask(string pchRenderModelName, string pchComponentName);

		[Token(Token = "0x20003B5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225F0C", Offset = "0x225F0C")]
		internal delegate uint _GetComponentRenderModelName(string pchRenderModelName, string pchComponentName, StringBuilder pchComponentRenderModelName, uint unComponentRenderModelNameLen);

		[Token(Token = "0x20003B6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225F20", Offset = "0x225F20")]
		internal delegate bool _GetComponentStateForDevicePath(string pchRenderModelName, string pchComponentName, ulong devicePath, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState);

		[Token(Token = "0x20003B7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225F34", Offset = "0x225F34")]
		internal delegate bool _GetComponentState(string pchRenderModelName, string pchComponentName, ref VRControllerState_t pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState);

		[Token(Token = "0x20003B8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225F48", Offset = "0x225F48")]
		internal delegate bool _RenderModelHasComponent(string pchRenderModelName, string pchComponentName);

		[Token(Token = "0x20003B9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225F5C", Offset = "0x225F5C")]
		internal delegate uint _GetRenderModelThumbnailURL(string pchRenderModelName, StringBuilder pchThumbnailURL, uint unThumbnailURLLen, ref EVRRenderModelError peError);

		[Token(Token = "0x20003BA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225F70", Offset = "0x225F70")]
		internal delegate uint _GetRenderModelOriginalPath(string pchRenderModelName, StringBuilder pchOriginalPath, uint unOriginalPathLen, ref EVRRenderModelError peError);

		[Token(Token = "0x20003BB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225F84", Offset = "0x225F84")]
		internal delegate IntPtr _GetRenderModelErrorNameFromEnum(EVRRenderModelError error);

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LoadRenderModel_Async LoadRenderModel_Async;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal _FreeRenderModel FreeRenderModel;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _LoadTexture_Async LoadTexture_Async;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal _FreeTexture FreeTexture;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _LoadTextureD3D11_Async LoadTextureD3D11_Async;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal _LoadIntoTextureD3D11_Async LoadIntoTextureD3D11_Async;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _FreeTextureD3D11 FreeTextureD3D11;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal _GetRenderModelName GetRenderModelName;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetRenderModelCount GetRenderModelCount;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal _GetComponentCount GetComponentCount;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetComponentName GetComponentName;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal _GetComponentButtonMask GetComponentButtonMask;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetComponentRenderModelName GetComponentRenderModelName;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal _GetComponentStateForDevicePath GetComponentStateForDevicePath;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetComponentState GetComponentState;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		internal _RenderModelHasComponent RenderModelHasComponent;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetRenderModelThumbnailURL GetRenderModelThumbnailURL;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		internal _GetRenderModelOriginalPath GetRenderModelOriginalPath;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetRenderModelErrorNameFromEnum GetRenderModelErrorNameFromEnum;
	}
	[Token(Token = "0x2000164")]
	public struct IVRNotifications
	{
		[Token(Token = "0x20003BC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225F98", Offset = "0x225F98")]
		internal delegate EVRNotificationError _CreateNotification(ulong ulOverlayHandle, ulong ulUserValue, EVRNotificationType type, string pchText, EVRNotificationStyle style, ref NotificationBitmap_t pImage, ref uint pNotificationId);

		[Token(Token = "0x20003BD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225FAC", Offset = "0x225FAC")]
		internal delegate EVRNotificationError _RemoveNotification(uint notificationId);

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CreateNotification CreateNotification;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal _RemoveNotification RemoveNotification;
	}
	[Token(Token = "0x2000165")]
	public struct IVRSettings
	{
		[Token(Token = "0x20003BE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225FC0", Offset = "0x225FC0")]
		internal delegate IntPtr _GetSettingsErrorNameFromEnum(EVRSettingsError eError);

		[Token(Token = "0x20003BF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225FD4", Offset = "0x225FD4")]
		internal delegate bool _Sync(bool bForce, ref EVRSettingsError peError);

		[Token(Token = "0x20003C0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225FE8", Offset = "0x225FE8")]
		internal delegate void _SetBool(string pchSection, string pchSettingsKey, bool bValue, ref EVRSettingsError peError);

		[Token(Token = "0x20003C1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x225FFC", Offset = "0x225FFC")]
		internal delegate void _SetInt32(string pchSection, string pchSettingsKey, int nValue, ref EVRSettingsError peError);

		[Token(Token = "0x20003C2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x226010", Offset = "0x226010")]
		internal delegate void _SetFloat(string pchSection, string pchSettingsKey, float flValue, ref EVRSettingsError peError);

		[Token(Token = "0x20003C3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x226024", Offset = "0x226024")]
		internal delegate void _SetString(string pchSection, string pchSettingsKey, string pchValue, ref EVRSettingsError peError);

		[Token(Token = "0x20003C4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x226038", Offset = "0x226038")]
		internal delegate bool _GetBool(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x20003C5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x22604C", Offset = "0x22604C")]
		internal delegate int _GetInt32(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x20003C6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x226060", Offset = "0x226060")]
		internal delegate float _GetFloat(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x20003C7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x226074", Offset = "0x226074")]
		internal delegate void _GetString(string pchSection, string pchSettingsKey, StringBuilder pchValue, uint unValueLen, ref EVRSettingsError peError);

		[Token(Token = "0x20003C8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x226088", Offset = "0x226088")]
		internal delegate void _RemoveSection(string pchSection, ref EVRSettingsError peError);

		[Token(Token = "0x20003C9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x22609C", Offset = "0x22609C")]
		internal delegate void _RemoveKeyInSection(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetSettingsErrorNameFromEnum GetSettingsErrorNameFromEnum;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal _Sync Sync;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _SetBool SetBool;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal _SetInt32 SetInt32;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _SetFloat SetFloat;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal _SetString SetString;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetBool GetBool;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal _GetInt32 GetInt32;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetFloat GetFloat;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal _GetString GetString;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _RemoveSection RemoveSection;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal _RemoveKeyInSection RemoveKeyInSection;
	}
	[Token(Token = "0x2000166")]
	public struct IVRScreenshots
	{
		[Token(Token = "0x20003CA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2260B0", Offset = "0x2260B0")]
		internal delegate EVRScreenshotError _RequestScreenshot(ref uint pOutScreenshotHandle, EVRScreenshotType type, string pchPreviewFilename, string pchVRFilename);

		[Token(Token = "0x20003CB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2260C4", Offset = "0x2260C4")]
		internal delegate EVRScreenshotError _HookScreenshot([In][Out] EVRScreenshotType[] pSupportedTypes, int numTypes);

		[Token(Token = "0x20003CC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2260D8", Offset = "0x2260D8")]
		internal delegate EVRScreenshotType _GetScreenshotPropertyType(uint screenshotHandle, ref EVRScreenshotError pError);

		[Token(Token = "0x20003CD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2260EC", Offset = "0x2260EC")]
		internal delegate uint _GetScreenshotPropertyFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames filenameType, StringBuilder pchFilename, uint cchFilename, ref EVRScreenshotError pError);

		[Token(Token = "0x20003CE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x226100", Offset = "0x226100")]
		internal delegate EVRScreenshotError _UpdateScreenshotProgress(uint screenshotHandle, float flProgress);

		[Token(Token = "0x20003CF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x226114", Offset = "0x226114")]
		internal delegate EVRScreenshotError _TakeStereoScreenshot(ref uint pOutScreenshotHandle, string pchPreviewFilename, string pchVRFilename);

		[Token(Token = "0x20003D0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x226128", Offset = "0x226128")]
		internal delegate EVRScreenshotError _SubmitScreenshot(uint screenshotHandle, EVRScreenshotType type, string pchSourcePreviewFilename, string pchSourceVRFilename);

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _RequestScreenshot RequestScreenshot;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal _HookScreenshot HookScreenshot;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetScreenshotPropertyType GetScreenshotPropertyType;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal _GetScreenshotPropertyFilename GetScreenshotPropertyFilename;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _UpdateScreenshotProgress UpdateScreenshotProgress;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal _TakeStereoScreenshot TakeStereoScreenshot;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _SubmitScreenshot SubmitScreenshot;
	}
	[Token(Token = "0x2000167")]
	public struct IVRResources
	{
		[Token(Token = "0x20003D1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x22613C", Offset = "0x22613C")]
		internal delegate uint _LoadSharedResource(string pchResourceName, string pchBuffer, uint unBufferLen);

		[Token(Token = "0x20003D2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x226150", Offset = "0x226150")]
		internal delegate uint _GetResourceFullPath(string pchResourceName, string pchResourceTypeDirectory, StringBuilder pchPathBuffer, uint unBufferLen);

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LoadSharedResource LoadSharedResource;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal _GetResourceFullPath GetResourceFullPath;
	}
	[Token(Token = "0x2000168")]
	public struct IVRDriverManager
	{
		[Token(Token = "0x20003D3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x226164", Offset = "0x226164")]
		internal delegate uint _GetDriverCount();

		[Token(Token = "0x20003D4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x226178", Offset = "0x226178")]
		internal delegate uint _GetDriverName(uint nDriver, StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x20003D5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x22618C", Offset = "0x22618C")]
		internal delegate ulong _GetDriverHandle(string pchDriverName);

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetDriverCount GetDriverCount;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal _GetDriverName GetDriverName;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetDriverHandle GetDriverHandle;
	}
	[Token(Token = "0x2000169")]
	public struct IVRInput
	{
		[Token(Token = "0x20003D6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2261A0", Offset = "0x2261A0")]
		internal delegate EVRInputError _SetActionManifestPath(string pchActionManifestPath);

		[Token(Token = "0x20003D7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2261B4", Offset = "0x2261B4")]
		internal delegate EVRInputError _GetActionSetHandle(string pchActionSetName, ref ulong pHandle);

		[Token(Token = "0x20003D8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2261C8", Offset = "0x2261C8")]
		internal delegate EVRInputError _GetActionHandle(string pchActionName, ref ulong pHandle);

		[Token(Token = "0x20003D9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2261DC", Offset = "0x2261DC")]
		internal delegate EVRInputError _GetInputSourceHandle(string pchInputSourcePath, ref ulong pHandle);

		[Token(Token = "0x20003DA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2261F0", Offset = "0x2261F0")]
		internal delegate EVRInputError _UpdateActionState([In][Out] VRActiveActionSet_t[] pSets, uint unSizeOfVRSelectedActionSet_t, uint unSetCount);

		[Token(Token = "0x20003DB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x226204", Offset = "0x226204")]
		internal delegate EVRInputError _GetDigitalActionData(ulong action, ref InputDigitalActionData_t pActionData, uint unActionDataSize, ulong ulRestrictToDevice);

		[Token(Token = "0x20003DC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x226218", Offset = "0x226218")]
		internal delegate EVRInputError _GetAnalogActionData(ulong action, ref InputAnalogActionData_t pActionData, uint unActionDataSize, ulong ulRestrictToDevice);

		[Token(Token = "0x20003DD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x22622C", Offset = "0x22622C")]
		internal delegate EVRInputError _GetPoseActionData(ulong action, ETrackingUniverseOrigin eOrigin, float fPredictedSecondsFromNow, ref InputPoseActionData_t pActionData, uint unActionDataSize, ulong ulRestrictToDevice);

		[Token(Token = "0x20003DE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x226240", Offset = "0x226240")]
		internal delegate EVRInputError _GetSkeletalActionData(ulong action, ref InputSkeletalActionData_t pActionData, uint unActionDataSize, ulong ulRestrictToDevice);

		[Token(Token = "0x20003DF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x226254", Offset = "0x226254")]
		internal delegate EVRInputError _GetSkeletalBoneData(ulong action, EVRSkeletalTransformSpace eTransformSpace, EVRSkeletalMotionRange eMotionRange, [In][Out] VRBoneTransform_t[] pTransformArray, uint unTransformArrayCount, ulong ulRestrictToDevice);

		[Token(Token = "0x20003E0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x226268", Offset = "0x226268")]
		internal delegate EVRInputError _GetSkeletalBoneDataCompressed(ulong action, EVRSkeletalTransformSpace eTransformSpace, EVRSkeletalMotionRange eMotionRange, IntPtr pvCompressedData, uint unCompressedSize, ref uint punRequiredCompressedSize, ulong ulRestrictToDevice);

		[Token(Token = "0x20003E1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x22627C", Offset = "0x22627C")]
		internal delegate EVRInputError _DecompressSkeletalBoneData(IntPtr pvCompressedBuffer, uint unCompressedBufferSize, ref EVRSkeletalTransformSpace peTransformSpace, [In][Out] VRBoneTransform_t[] pTransformArray, uint unTransformArrayCount);

		[Token(Token = "0x20003E2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x226290", Offset = "0x226290")]
		internal delegate EVRInputError _TriggerHapticVibrationAction(ulong action, float fStartSecondsFromNow, float fDurationSeconds, float fFrequency, float fAmplitude, ulong ulRestrictToDevice);

		[Token(Token = "0x20003E3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2262A4", Offset = "0x2262A4")]
		internal delegate EVRInputError _GetActionOrigins(ulong actionSetHandle, ulong digitalActionHandle, [In][Out] ulong[] originsOut, uint originOutCount);

		[Token(Token = "0x20003E4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2262B8", Offset = "0x2262B8")]
		internal delegate EVRInputError _GetOriginLocalizedName(ulong origin, StringBuilder pchNameArray, uint unNameArraySize);

		[Token(Token = "0x20003E5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2262CC", Offset = "0x2262CC")]
		internal delegate EVRInputError _GetOriginTrackedDeviceInfo(ulong origin, ref InputOriginInfo_t pOriginInfo, uint unOriginInfoSize);

		[Token(Token = "0x20003E6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2262E0", Offset = "0x2262E0")]
		internal delegate EVRInputError _ShowActionOrigins(ulong actionSetHandle, ulong ulActionHandle);

		[Token(Token = "0x20003E7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2262F4", Offset = "0x2262F4")]
		internal delegate EVRInputError _ShowBindingsForActionSet([In][Out] VRActiveActionSet_t[] pSets, uint unSizeOfVRSelectedActionSet_t, uint unSetCount, ulong originToHighlight);

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetActionManifestPath SetActionManifestPath;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal _GetActionSetHandle GetActionSetHandle;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetActionHandle GetActionHandle;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal _GetInputSourceHandle GetInputSourceHandle;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _UpdateActionState UpdateActionState;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal _GetDigitalActionData GetDigitalActionData;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetAnalogActionData GetAnalogActionData;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal _GetPoseActionData GetPoseActionData;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetSkeletalActionData GetSkeletalActionData;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal _GetSkeletalBoneData GetSkeletalBoneData;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetSkeletalBoneDataCompressed GetSkeletalBoneDataCompressed;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal _DecompressSkeletalBoneData DecompressSkeletalBoneData;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _TriggerHapticVibrationAction TriggerHapticVibrationAction;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal _GetActionOrigins GetActionOrigins;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetOriginLocalizedName GetOriginLocalizedName;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		internal _GetOriginTrackedDeviceInfo GetOriginTrackedDeviceInfo;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _ShowActionOrigins ShowActionOrigins;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		internal _ShowBindingsForActionSet ShowBindingsForActionSet;
	}
	[Token(Token = "0x200016A")]
	public struct IVRIOBuffer
	{
		[Token(Token = "0x20003E8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x226308", Offset = "0x226308")]
		internal delegate EIOBufferError _Open(string pchPath, EIOBufferMode mode, uint unElementSize, uint unElements, ref ulong pulBuffer);

		[Token(Token = "0x20003E9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x22631C", Offset = "0x22631C")]
		internal delegate EIOBufferError _Close(ulong ulBuffer);

		[Token(Token = "0x20003EA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x226330", Offset = "0x226330")]
		internal delegate EIOBufferError _Read(ulong ulBuffer, IntPtr pDst, uint unBytes, ref uint punRead);

		[Token(Token = "0x20003EB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x226344", Offset = "0x226344")]
		internal delegate EIOBufferError _Write(ulong ulBuffer, IntPtr pSrc, uint unBytes);

		[Token(Token = "0x20003EC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x226358", Offset = "0x226358")]
		internal delegate ulong _PropertyContainer(ulong ulBuffer);

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _Open Open;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal _Close Close;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _Read Read;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal _Write Write;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _PropertyContainer PropertyContainer;
	}
	[Token(Token = "0x200016B")]
	public struct IVRSpatialAnchors
	{
		[Token(Token = "0x20003ED")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x22636C", Offset = "0x22636C")]
		internal delegate EVRSpatialAnchorError _CreateSpatialAnchorFromDescriptor(string pchDescriptor, ref uint pHandleOut);

		[Token(Token = "0x20003EE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x226380", Offset = "0x226380")]
		internal delegate EVRSpatialAnchorError _CreateSpatialAnchorFromPose(uint unDeviceIndex, ETrackingUniverseOrigin eOrigin, ref SpatialAnchorPose_t pPose, ref uint pHandleOut);

		[Token(Token = "0x20003EF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x226394", Offset = "0x226394")]
		internal delegate EVRSpatialAnchorError _GetSpatialAnchorPose(uint unHandle, ETrackingUniverseOrigin eOrigin, ref SpatialAnchorPose_t pPoseOut);

		[Token(Token = "0x20003F0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2263A8", Offset = "0x2263A8")]
		internal delegate EVRSpatialAnchorError _GetSpatialAnchorDescriptor(uint unHandle, StringBuilder pchDescriptorOut, ref uint punDescriptorBufferLenInOut);

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CreateSpatialAnchorFromDescriptor CreateSpatialAnchorFromDescriptor;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal _CreateSpatialAnchorFromPose CreateSpatialAnchorFromPose;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetSpatialAnchorPose GetSpatialAnchorPose;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal _GetSpatialAnchorDescriptor GetSpatialAnchorDescriptor;
	}
	[Token(Token = "0x200016C")]
	public class CVRSystem
	{
		[Token(Token = "0x20003F1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2263BC", Offset = "0x2263BC")]
		internal delegate bool _PollNextEventPacked(ref VREvent_t_Packed pEvent, uint uncbVREvent);

		[StructLayout(2)]
		[Token(Token = "0x20003F2")]
		private struct PollNextEventUnion
		{
			[Token(Token = "0x40015FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._PollNextEvent pPollNextEvent;

			[Token(Token = "0x40015FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _PollNextEventPacked pPollNextEventPacked;
		}

		[Token(Token = "0x20003F3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2263D0", Offset = "0x2263D0")]
		internal delegate bool _GetControllerStatePacked(uint unControllerDeviceIndex, ref VRControllerState_t_Packed pControllerState, uint unControllerStateSize);

		[StructLayout(2)]
		[Token(Token = "0x20003F4")]
		private struct GetControllerStateUnion
		{
			[Token(Token = "0x40015FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._GetControllerState pGetControllerState;

			[Token(Token = "0x4001600")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetControllerStatePacked pGetControllerStatePacked;
		}

		[Token(Token = "0x20003F5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2263E4", Offset = "0x2263E4")]
		internal delegate bool _GetControllerStateWithPosePacked(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t_Packed pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose);

		[StructLayout(2)]
		[Token(Token = "0x20003F6")]
		private struct GetControllerStateWithPoseUnion
		{
			[Token(Token = "0x4001601")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._GetControllerStateWithPose pGetControllerStateWithPose;

			[Token(Token = "0x4001602")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetControllerStateWithPosePacked pGetControllerStateWithPosePacked;
		}

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IVRSystem FnTable;

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0x7030D4", Offset = "0x7030D4", VA = "0x7030D4")]
		internal CVRSystem(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0x703210", Offset = "0x703210", VA = "0x703210")]
		public void GetRecommendedRenderTargetSize(ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0x703254", Offset = "0x703254", VA = "0x703254")]
		public HmdMatrix44_t GetProjectionMatrix(EVREye eEye, float fNearZ, float fFarZ)
		{
			return default(HmdMatrix44_t);
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0x7032B0", Offset = "0x7032B0", VA = "0x7032B0")]
		public void GetProjectionRaw(EVREye eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom)
		{
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0x70331C", Offset = "0x70331C", VA = "0x70331C")]
		public bool ComputeDistortion(EVREye eEye, float fU, float fV, ref DistortionCoordinates_t pDistortionCoordinates)
		{
			return default(bool);
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0x703370", Offset = "0x703370", VA = "0x703370")]
		public HmdMatrix34_t GetEyeToHeadTransform(EVREye eEye)
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0x7033A8", Offset = "0x7033A8", VA = "0x7033A8")]
		public bool GetTimeSinceLastVsync(ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter)
		{
			return default(bool);
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x7033F0", Offset = "0x7033F0", VA = "0x7033F0")]
		public int GetD3D9AdapterIndex()
		{
			return default(int);
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x703418", Offset = "0x703418", VA = "0x703418")]
		public void GetDXGIOutputInfo(ref int pnAdapterIndex)
		{
		}

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0x703450", Offset = "0x703450", VA = "0x703450")]
		public void GetOutputDevice(ref ulong pnDevice, ETextureType textureType, IntPtr pInstance)
		{
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x7034A4", Offset = "0x7034A4", VA = "0x7034A4")]
		public bool IsDisplayOnDesktop()
		{
			return default(bool);
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0x7034CC", Offset = "0x7034CC", VA = "0x7034CC")]
		public bool SetDisplayVisibility(bool bIsVisibleOnDesktop)
		{
			return default(bool);
		}

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x7034FC", Offset = "0x7034FC", VA = "0x7034FC")]
		public void GetDeviceToAbsoluteTrackingPose(ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, TrackedDevicePose_t[] pTrackedDevicePoseArray)
		{
		}

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x703558", Offset = "0x703558", VA = "0x703558")]
		public void ResetSeatedZeroPose()
		{
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x703580", Offset = "0x703580", VA = "0x703580")]
		public HmdMatrix34_t GetSeatedZeroPoseToStandingAbsoluteTrackingPose()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x60008C7")]
		[Address(RVA = "0x7035B0", Offset = "0x7035B0", VA = "0x7035B0")]
		public HmdMatrix34_t GetRawZeroPoseToStandingAbsoluteTrackingPose()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0x7035E0", Offset = "0x7035E0", VA = "0x7035E0")]
		public uint GetSortedTrackedDeviceIndicesOfClass(ETrackedDeviceClass eTrackedDeviceClass, uint[] punTrackedDeviceIndexArray, uint unRelativeToTrackedDeviceIndex)
		{
			return default(uint);
		}

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0x70363C", Offset = "0x70363C", VA = "0x70363C")]
		public EDeviceActivityLevel GetTrackedDeviceActivityLevel(uint unDeviceId)
		{
			return default(EDeviceActivityLevel);
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0x70366C", Offset = "0x70366C", VA = "0x70366C")]
		public void ApplyTransform(ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pTrackedDevicePose, ref HmdMatrix34_t pTransform)
		{
		}

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0x7036B8", Offset = "0x7036B8", VA = "0x7036B8")]
		public uint GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole unDeviceType)
		{
			return default(uint);
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0x7036E8", Offset = "0x7036E8", VA = "0x7036E8")]
		public ETrackedControllerRole GetControllerRoleForTrackedDeviceIndex(uint unDeviceIndex)
		{
			return default(ETrackedControllerRole);
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0x703718", Offset = "0x703718", VA = "0x703718")]
		public ETrackedDeviceClass GetTrackedDeviceClass(uint unDeviceIndex)
		{
			return default(ETrackedDeviceClass);
		}

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0x703748", Offset = "0x703748", VA = "0x703748")]
		public bool IsTrackedDeviceConnected(uint unDeviceIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0x703778", Offset = "0x703778", VA = "0x703778")]
		public bool GetBoolTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(bool);
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0x7037C4", Offset = "0x7037C4", VA = "0x7037C4")]
		public float GetFloatTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(float);
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0x703810", Offset = "0x703810", VA = "0x703810")]
		public int GetInt32TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(int);
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x70385C", Offset = "0x70385C", VA = "0x70385C")]
		public ulong GetUint64TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(ulong);
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0x7038A8", Offset = "0x7038A8", VA = "0x7038A8")]
		public HmdMatrix34_t GetMatrix34TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0x7038FC", Offset = "0x7038FC", VA = "0x7038FC")]
		public uint GetArrayTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, uint propType, IntPtr pBuffer, uint unBufferSize, ref ETrackedPropertyError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x703960", Offset = "0x703960", VA = "0x703960")]
		public uint GetStringTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, StringBuilder pchValue, uint unBufferSize, ref ETrackedPropertyError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x7039BC", Offset = "0x7039BC", VA = "0x7039BC")]
		public string GetPropErrorNameFromEnum(ETrackedPropertyError error)
		{
			return null;
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0x703A60", Offset = "0x703A60", VA = "0x703A60")]
		public bool PollNextEvent(ref VREvent_t pEvent, uint uncbVREvent)
		{
			return default(bool);
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0x703ECC", Offset = "0x703ECC", VA = "0x703ECC")]
		public bool PollNextEventWithPose(ETrackingUniverseOrigin eOrigin, ref VREvent_t pEvent, uint uncbVREvent, ref TrackedDevicePose_t pTrackedDevicePose)
		{
			return default(bool);
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0x703F20", Offset = "0x703F20", VA = "0x703F20")]
		public string GetEventTypeNameFromEnum(EVREventType eType)
		{
			return null;
		}

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0x703FC4", Offset = "0x703FC4", VA = "0x703FC4")]
		public HiddenAreaMesh_t GetHiddenAreaMesh(EVREye eEye, EHiddenAreaMeshType type)
		{
			return default(HiddenAreaMesh_t);
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0x704010", Offset = "0x704010", VA = "0x704010")]
		public bool GetControllerState(uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize)
		{
			return default(bool);
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0x704570", Offset = "0x704570", VA = "0x704570")]
		public bool GetControllerStateWithPose(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose)
		{
			return default(bool);
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0x704B58", Offset = "0x704B58", VA = "0x704B58")]
		public void TriggerHapticPulse(uint unControllerDeviceIndex, uint unAxisId, ushort usDurationMicroSec)
		{
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0x704BA4", Offset = "0x704BA4", VA = "0x704BA4")]
		public string GetButtonIdNameFromEnum(EVRButtonId eButtonId)
		{
			return null;
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x704C48", Offset = "0x704C48", VA = "0x704C48")]
		public string GetControllerAxisTypeNameFromEnum(EVRControllerAxisType eAxisType)
		{
			return null;
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0x704CEC", Offset = "0x704CEC", VA = "0x704CEC")]
		public bool IsInputAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0x704D14", Offset = "0x704D14", VA = "0x704D14")]
		public bool IsSteamVRDrawingControllers()
		{
			return default(bool);
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0x704D3C", Offset = "0x704D3C", VA = "0x704D3C")]
		public bool ShouldApplicationPause()
		{
			return default(bool);
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0x704D64", Offset = "0x704D64", VA = "0x704D64")]
		public bool ShouldApplicationReduceRenderingWork()
		{
			return default(bool);
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0x704D8C", Offset = "0x704D8C", VA = "0x704D8C")]
		public uint DriverDebugRequest(uint unDeviceIndex, string pchRequest, StringBuilder pchResponseBuffer, uint unResponseBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0x704DE0", Offset = "0x704DE0", VA = "0x704DE0")]
		public EVRFirmwareError PerformFirmwareUpdate(uint unDeviceIndex)
		{
			return default(EVRFirmwareError);
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0x704E10", Offset = "0x704E10", VA = "0x704E10")]
		public void AcknowledgeQuit_Exiting()
		{
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0x704E38", Offset = "0x704E38", VA = "0x704E38")]
		public void AcknowledgeQuit_UserPrompt()
		{
		}
	}
	[Token(Token = "0x200016D")]
	public class CVRExtendedDisplay
	{
		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IVRExtendedDisplay FnTable;

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0x6FE618", Offset = "0x6FE618", VA = "0x6FE618")]
		internal CVRExtendedDisplay(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0x6FE750", Offset = "0x6FE750", VA = "0x6FE750")]
		public void GetWindowBounds(ref int pnX, ref int pnY, ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0x6FE7B4", Offset = "0x6FE7B4", VA = "0x6FE7B4")]
		public void GetEyeOutputViewport(EVREye eEye, ref uint pnX, ref uint pnY, ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0x6FE820", Offset = "0x6FE820", VA = "0x6FE820")]
		public void GetDXGIOutputInfo(ref int pnAdapterIndex, ref int pnAdapterOutputIndex)
		{
		}
	}
	[Token(Token = "0x200016E")]
	public class CVRTrackedCamera
	{
		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IVRTrackedCamera FnTable;

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0x7051EC", Offset = "0x7051EC", VA = "0x7051EC")]
		internal CVRTrackedCamera(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0x70533C", Offset = "0x70533C", VA = "0x70533C")]
		public string GetCameraErrorNameFromEnum(EVRTrackedCameraError eCameraError)
		{
			return null;
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0x7053E0", Offset = "0x7053E0", VA = "0x7053E0")]
		public EVRTrackedCameraError HasCamera(uint nDeviceIndex, ref bool pHasCamera)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0x705420", Offset = "0x705420", VA = "0x705420")]
		public EVRTrackedCameraError GetCameraFrameSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref uint pnWidth, ref uint pnHeight, ref uint pnFrameBufferSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0x705484", Offset = "0x705484", VA = "0x705484")]
		public EVRTrackedCameraError GetCameraIntrinsics(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref HmdVector2_t pFocalLength, ref HmdVector2_t pCenter)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0x7054D8", Offset = "0x7054D8", VA = "0x7054D8")]
		public EVRTrackedCameraError GetCameraProjection(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, float flZNear, float flZFar, ref HmdMatrix44_t pProjection)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0x70553C", Offset = "0x70553C", VA = "0x70553C")]
		public EVRTrackedCameraError AcquireVideoStreamingService(uint nDeviceIndex, ref ulong pHandle)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0x705580", Offset = "0x705580", VA = "0x705580")]
		public EVRTrackedCameraError ReleaseVideoStreamingService(ulong hTrackedCamera)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0x7055C4", Offset = "0x7055C4", VA = "0x7055C4")]
		public EVRTrackedCameraError GetVideoStreamFrameBuffer(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pFrameBuffer, uint nFrameBufferSize, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0x705630", Offset = "0x705630", VA = "0x705630")]
		public EVRTrackedCameraError GetVideoStreamTextureSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref VRTextureBounds_t pTextureBounds, ref uint pnWidth, ref uint pnHeight)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0x705690", Offset = "0x705690", VA = "0x705690")]
		public EVRTrackedCameraError GetVideoStreamTextureD3D11(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0x7056FC", Offset = "0x7056FC", VA = "0x7056FC")]
		public EVRTrackedCameraError GetVideoStreamTextureGL(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, ref uint pglTextureId, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0x705764", Offset = "0x705764", VA = "0x705764")]
		public EVRTrackedCameraError ReleaseVideoStreamTextureGL(ulong hTrackedCamera, uint glTextureId)
		{
			return default(EVRTrackedCameraError);
		}
	}
	[Token(Token = "0x200016F")]
	public class CVRApplications
	{
		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IVRApplications FnTable;

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0x78EA40", Offset = "0x78EA40", VA = "0x78EA40")]
		internal CVRApplications(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0x78EB7C", Offset = "0x78EB7C", VA = "0x78EB7C")]
		public EVRApplicationError AddApplicationManifest(string pchApplicationManifestFullPath, bool bTemporary)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0x78EBB4", Offset = "0x78EBB4", VA = "0x78EBB4")]
		public EVRApplicationError RemoveApplicationManifest(string pchApplicationManifestFullPath)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0x78EBE4", Offset = "0x78EBE4", VA = "0x78EBE4")]
		public bool IsApplicationInstalled(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0x78EC14", Offset = "0x78EC14", VA = "0x78EC14")]
		public uint GetApplicationCount()
		{
			return default(uint);
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0x78EC3C", Offset = "0x78EC3C", VA = "0x78EC3C")]
		public EVRApplicationError GetApplicationKeyByIndex(uint unApplicationIndex, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0x78EC88", Offset = "0x78EC88", VA = "0x78EC88")]
		public EVRApplicationError GetApplicationKeyByProcessId(uint unProcessId, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6000900")]
		[Address(RVA = "0x78ECD4", Offset = "0x78ECD4", VA = "0x78ECD4")]
		public EVRApplicationError LaunchApplication(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6000901")]
		[Address(RVA = "0x78ED04", Offset = "0x78ED04", VA = "0x78ED04")]
		public EVRApplicationError LaunchTemplateApplication(string pchTemplateAppKey, string pchNewAppKey, AppOverrideKeys_t[] pKeys)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0x78ED60", Offset = "0x78ED60", VA = "0x78ED60")]
		public EVRApplicationError LaunchApplicationFromMimeType(string pchMimeType, string pchArgs)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6000903")]
		[Address(RVA = "0x78ED98", Offset = "0x78ED98", VA = "0x78ED98")]
		public EVRApplicationError LaunchDashboardOverlay(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0x78EDC8", Offset = "0x78EDC8", VA = "0x78EDC8")]
		public bool CancelApplicationLaunch(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0x78EDF8", Offset = "0x78EDF8", VA = "0x78EDF8")]
		public EVRApplicationError IdentifyApplication(uint unProcessId, string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0x78EE30", Offset = "0x78EE30", VA = "0x78EE30")]
		public uint GetApplicationProcessId(string pchAppKey)
		{
			return default(uint);
		}

		[Token(Token = "0x6000907")]
		[Address(RVA = "0x78EE60", Offset = "0x78EE60", VA = "0x78EE60")]
		public string GetApplicationsErrorNameFromEnum(EVRApplicationError error)
		{
			return null;
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0x78EF04", Offset = "0x78EF04", VA = "0x78EF04")]
		public uint GetApplicationPropertyString(string pchAppKey, EVRApplicationProperty eProperty, StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, ref EVRApplicationError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x6000909")]
		[Address(RVA = "0x78EF60", Offset = "0x78EF60", VA = "0x78EF60")]
		public bool GetApplicationPropertyBool(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0x78EFAC", Offset = "0x78EFAC", VA = "0x78EFAC")]
		public ulong GetApplicationPropertyUint64(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError)
		{
			return default(ulong);
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0x78EFF8", Offset = "0x78EFF8", VA = "0x78EFF8")]
		public EVRApplicationError SetApplicationAutoLaunch(string pchAppKey, bool bAutoLaunch)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x600090C")]
		[Address(RVA = "0x78F030", Offset = "0x78F030", VA = "0x78F030")]
		public bool GetApplicationAutoLaunch(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x600090D")]
		[Address(RVA = "0x78F060", Offset = "0x78F060", VA = "0x78F060")]
		public EVRApplicationError SetDefaultApplicationForMimeType(string pchAppKey, string pchMimeType)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0x78F098", Offset = "0x78F098", VA = "0x78F098")]
		public bool GetDefaultApplicationForMimeType(string pchMimeType, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(bool);
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0x78F0E4", Offset = "0x78F0E4", VA = "0x78F0E4")]
		public bool GetApplicationSupportedMimeTypes(string pchAppKey, StringBuilder pchMimeTypesBuffer, uint unMimeTypesBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000910")]
		[Address(RVA = "0x78F130", Offset = "0x78F130", VA = "0x78F130")]
		public uint GetApplicationsThatSupportMimeType(string pchMimeType, StringBuilder pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer)
		{
			return default(uint);
		}

		[Token(Token = "0x6000911")]
		[Address(RVA = "0x78F17C", Offset = "0x78F17C", VA = "0x78F17C")]
		public uint GetApplicationLaunchArguments(uint unHandle, StringBuilder pchArgs, uint unArgs)
		{
			return default(uint);
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0x78F1C8", Offset = "0x78F1C8", VA = "0x78F1C8")]
		public EVRApplicationError GetStartingApplication(StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0x78F200", Offset = "0x78F200", VA = "0x78F200")]
		public EVRApplicationTransitionState GetTransitionState()
		{
			return default(EVRApplicationTransitionState);
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0x78F228", Offset = "0x78F228", VA = "0x78F228")]
		public EVRApplicationError PerformApplicationPrelaunchCheck(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0x78F258", Offset = "0x78F258", VA = "0x78F258")]
		public string GetApplicationsTransitionStateNameFromEnum(EVRApplicationTransitionState state)
		{
			return null;
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0x78F2FC", Offset = "0x78F2FC", VA = "0x78F2FC")]
		public bool IsQuitUserPromptRequested()
		{
			return default(bool);
		}

		[Token(Token = "0x6000917")]
		[Address(RVA = "0x78F324", Offset = "0x78F324", VA = "0x78F324")]
		public EVRApplicationError LaunchInternalProcess(string pchBinaryPath, string pchArguments, string pchWorkingDirectory)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0x78F370", Offset = "0x78F370", VA = "0x78F370")]
		public uint GetCurrentSceneProcessId()
		{
			return default(uint);
		}
	}
	[Token(Token = "0x2000170")]
	public class CVRChaperone
	{
		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IVRChaperone FnTable;

		[Token(Token = "0x6000919")]
		[Address(RVA = "0x78F398", Offset = "0x78F398", VA = "0x78F398")]
		internal CVRChaperone(IntPtr pInterface)
		{
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0x78F4D4", Offset = "0x78F4D4", VA = "0x78F4D4")]
		public ChaperoneCalibrationState GetCalibrationState()
		{
			return default(ChaperoneCalibrationState);
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0x78F4FC", Offset = "0x78F4FC", VA = "0x78F4FC")]
		public bool GetPlayAreaSize(ref float pSizeX, ref float pSizeZ)
		{
			return default(bool);
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0x78F540", Offset = "0x78F540", VA = "0x78F540")]
		public bool GetPlayAreaRect(ref HmdQuad_t rect)
		{
			return default(bool);
		}

		[Token(Token = "0x600091D")]
		[Address(RVA = "0x78F570", Offset = "0x78F570", VA = "0x78F570")]
		public void ReloadInfo()
		{
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0x78F598", Offset = "0x78F598", VA = "0x78F598")]
		public void SetSceneColor(HmdColor_t color)
		{
		}

		[Token(Token = "0x600091F")]
		[Address(RVA = "0x78F5EC", Offset = "0x78F5EC", VA = "0x78F5EC")]
		public void GetBoundsColor(ref HmdColor_t pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, ref HmdColor_t pOutputCameraColor)
		{
		}

		[Token(Token = "0x6000920")]
		[Address(RVA = "0x78F640", Offset = "0x78F640", VA = "0x78F640")]
		public bool AreBoundsVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0x78F668", Offset = "0x78F668", VA = "0x78F668")]
		public void ForceBoundsVisible(bool bForce)
		{
		}
	}
	[Token(Token = "0x2000171")]
	public class CVRChaperoneSetup
	{
		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IVRChaperoneSetup FnTable;

		[Token(Token = "0x6000922")]
		[Address(RVA = "0x78F698", Offset = "0x78F698", VA = "0x78F698")]
		internal CVRChaperoneSetup(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6000923")]
		[Address(RVA = "0x78F7D4", Offset = "0x78F7D4", VA = "0x78F7D4")]
		public bool CommitWorkingCopy(EChaperoneConfigFile configFile)
		{
			return default(bool);
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0x78F804", Offset = "0x78F804", VA = "0x78F804")]
		public void RevertWorkingCopy()
		{
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0x78F82C", Offset = "0x78F82C", VA = "0x78F82C")]
		public bool GetWorkingPlayAreaSize(ref float pSizeX, ref float pSizeZ)
		{
			return default(bool);
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0x78F870", Offset = "0x78F870", VA = "0x78F870")]
		public bool GetWorkingPlayAreaRect(ref HmdQuad_t rect)
		{
			return default(bool);
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0x78F8A0", Offset = "0x78F8A0", VA = "0x78F8A0")]
		public bool GetWorkingCollisionBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0x78F960", Offset = "0x78F960", VA = "0x78F960")]
		public bool GetLiveCollisionBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0x78FA20", Offset = "0x78FA20", VA = "0x78FA20")]
		public bool GetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0x78FA50", Offset = "0x78FA50", VA = "0x78FA50")]
		public bool GetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0x78FA80", Offset = "0x78FA80", VA = "0x78FA80")]
		public void SetWorkingPlayAreaSize(float sizeX, float sizeZ)
		{
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0x78FAB8", Offset = "0x78FAB8", VA = "0x78FAB8")]
		public void SetWorkingCollisionBoundsInfo(HmdQuad_t[] pQuadsBuffer)
		{
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0x78FAF8", Offset = "0x78FAF8", VA = "0x78FAF8")]
		public void SetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose)
		{
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0x78FB28", Offset = "0x78FB28", VA = "0x78FB28")]
		public void SetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose)
		{
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0x78FB58", Offset = "0x78FB58", VA = "0x78FB58")]
		public void ReloadFromDisk(EChaperoneConfigFile configFile)
		{
		}

		[Token(Token = "0x6000930")]
		[Address(RVA = "0x78FB88", Offset = "0x78FB88", VA = "0x78FB88")]
		public bool GetLiveSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0x78FBB8", Offset = "0x78FBB8", VA = "0x78FBB8")]
		public void SetWorkingCollisionBoundsTagsInfo(byte[] pTagsBuffer)
		{
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0x78FBF8", Offset = "0x78FBF8", VA = "0x78FBF8")]
		public bool GetLiveCollisionBoundsTagsInfo(out byte[] pTagsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0x78FCB8", Offset = "0x78FCB8", VA = "0x78FCB8")]
		public bool SetWorkingPhysicalBoundsInfo(HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0x78FCF8", Offset = "0x78FCF8", VA = "0x78FCF8")]
		public bool GetLivePhysicalBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0x78FDB8", Offset = "0x78FDB8", VA = "0x78FDB8")]
		public bool ExportLiveToBuffer(StringBuilder pBuffer, ref uint pnBufferLength)
		{
			return default(bool);
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0x78FDF8", Offset = "0x78FDF8", VA = "0x78FDF8")]
		public bool ImportFromBufferToWorking(string pBuffer, uint nImportFlags)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000172")]
	public class CVRCompositor
	{
		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IVRCompositor FnTable;

		[Token(Token = "0x6000937")]
		[Address(RVA = "0x78FE30", Offset = "0x78FE30", VA = "0x78FE30")]
		internal CVRCompositor(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0x78FF6C", Offset = "0x78FF6C", VA = "0x78FF6C")]
		public void SetTrackingSpace(ETrackingUniverseOrigin eOrigin)
		{
		}

		[Token(Token = "0x6000939")]
		[Address(RVA = "0x78FF9C", Offset = "0x78FF9C", VA = "0x78FF9C")]
		public ETrackingUniverseOrigin GetTrackingSpace()
		{
			return default(ETrackingUniverseOrigin);
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0x78FFC4", Offset = "0x78FFC4", VA = "0x78FFC4")]
		public EVRCompositorError WaitGetPoses(TrackedDevicePose_t[] pRenderPoseArray, TrackedDevicePose_t[] pGamePoseArray)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0x790028", Offset = "0x790028", VA = "0x790028")]
		public EVRCompositorError GetLastPoses(TrackedDevicePose_t[] pRenderPoseArray, TrackedDevicePose_t[] pGamePoseArray)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x79008C", Offset = "0x79008C", VA = "0x79008C")]
		public EVRCompositorError GetLastPoseForTrackedDeviceIndex(uint unDeviceIndex, ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pOutputGamePose)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x7900D8", Offset = "0x7900D8", VA = "0x7900D8")]
		public EVRCompositorError Submit(EVREye eEye, ref Texture_t pTexture, ref VRTextureBounds_t pBounds, EVRSubmitFlags nSubmitFlags)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0x79012C", Offset = "0x79012C", VA = "0x79012C")]
		public void ClearLastSubmittedFrame()
		{
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0x790154", Offset = "0x790154", VA = "0x790154")]
		public void PostPresentHandoff()
		{
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0x79017C", Offset = "0x79017C", VA = "0x79017C")]
		public bool GetFrameTiming(ref Compositor_FrameTiming pTiming, uint unFramesAgo)
		{
			return default(bool);
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0x7901B4", Offset = "0x7901B4", VA = "0x7901B4")]
		public uint GetFrameTimings(ref Compositor_FrameTiming pTiming, uint nFrames)
		{
			return default(uint);
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0x7901EC", Offset = "0x7901EC", VA = "0x7901EC")]
		public float GetFrameTimeRemaining()
		{
			return default(float);
		}

		[Token(Token = "0x6000943")]
		[Address(RVA = "0x790214", Offset = "0x790214", VA = "0x790214")]
		public void GetCumulativeStats(ref Compositor_CumulativeStats pStats, uint nStatsSizeInBytes)
		{
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0x79024C", Offset = "0x79024C", VA = "0x79024C")]
		public void FadeToColor(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground)
		{
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0x7902B8", Offset = "0x7902B8", VA = "0x7902B8")]
		public HmdColor_t GetCurrentFadeColor(bool bBackground)
		{
			return default(HmdColor_t);
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0x7902F0", Offset = "0x7902F0", VA = "0x7902F0")]
		public void FadeGrid(float fSeconds, bool bFadeIn)
		{
		}

		[Token(Token = "0x6000947")]
		[Address(RVA = "0x790328", Offset = "0x790328", VA = "0x790328")]
		public float GetCurrentGridAlpha()
		{
			return default(float);
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0x790350", Offset = "0x790350", VA = "0x790350")]
		public EVRCompositorError SetSkyboxOverride(Texture_t[] pTextures)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0x790390", Offset = "0x790390", VA = "0x790390")]
		public void ClearSkyboxOverride()
		{
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0x7903B8", Offset = "0x7903B8", VA = "0x7903B8")]
		public void CompositorBringToFront()
		{
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0x7903E0", Offset = "0x7903E0", VA = "0x7903E0")]
		public void CompositorGoToBack()
		{
		}

		[Token(Token = "0x600094C")]
		[Address(RVA = "0x790408", Offset = "0x790408", VA = "0x790408")]
		public void CompositorQuit()
		{
		}

		[Token(Token = "0x600094D")]
		[Address(RVA = "0x790430", Offset = "0x790430", VA = "0x790430")]
		public bool IsFullscreen()
		{
			return default(bool);
		}

		[Token(Token = "0x600094E")]
		[Address(RVA = "0x790458", Offset = "0x790458", VA = "0x790458")]
		public uint GetCurrentSceneFocusProcess()
		{
			return default(uint);
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0x790480", Offset = "0x790480", VA = "0x790480")]
		public uint GetLastFrameRenderer()
		{
			return default(uint);
		}

		[Token(Token = "0x6000950")]
		[Address(RVA = "0x7904A8", Offset = "0x7904A8", VA = "0x7904A8")]
		public bool CanRenderScene()
		{
			return default(bool);
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0x7904D0", Offset = "0x7904D0", VA = "0x7904D0")]
		public void ShowMirrorWindow()
		{
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0x7904F8", Offset = "0x7904F8", VA = "0x7904F8")]
		public void HideMirrorWindow()
		{
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0x790520", Offset = "0x790520", VA = "0x790520")]
		public bool IsMirrorWindowVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0x790548", Offset = "0x790548", VA = "0x790548")]
		public void CompositorDumpImages()
		{
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0x790570", Offset = "0x790570", VA = "0x790570")]
		public bool ShouldAppRenderWithLowResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0x790598", Offset = "0x790598", VA = "0x790598")]
		public void ForceInterleavedReprojectionOn(bool bOverride)
		{
		}

		[Token(Token = "0x6000957")]
		[Address(RVA = "0x7905C8", Offset = "0x7905C8", VA = "0x7905C8")]
		public void ForceReconnectProcess()
		{
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0x7905F0", Offset = "0x7905F0", VA = "0x7905F0")]
		public void SuspendRendering(bool bSuspend)
		{
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0x790620", Offset = "0x790620", VA = "0x790620")]
		public EVRCompositorError GetMirrorTextureD3D11(EVREye eEye, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0x79066C", Offset = "0x79066C", VA = "0x79066C")]
		public void ReleaseMirrorTextureD3D11(IntPtr pD3D11ShaderResourceView)
		{
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0x79069C", Offset = "0x79069C", VA = "0x79069C")]
		public EVRCompositorError GetMirrorTextureGL(EVREye eEye, ref uint pglTextureId, IntPtr pglSharedTextureHandle)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0x7906EC", Offset = "0x7906EC", VA = "0x7906EC")]
		public bool ReleaseSharedGLTexture(uint glTextureId, IntPtr glSharedTextureHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0x790724", Offset = "0x790724", VA = "0x790724")]
		public void LockGLSharedTextureForAccess(IntPtr glSharedTextureHandle)
		{
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0x790754", Offset = "0x790754", VA = "0x790754")]
		public void UnlockGLSharedTextureForAccess(IntPtr glSharedTextureHandle)
		{
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0x790784", Offset = "0x790784", VA = "0x790784")]
		public uint GetVulkanInstanceExtensionsRequired(StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0x7907BC", Offset = "0x7907BC", VA = "0x7907BC")]
		public uint GetVulkanDeviceExtensionsRequired(IntPtr pPhysicalDevice, StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0x790808", Offset = "0x790808", VA = "0x790808")]
		public void SetExplicitTimingMode(EVRCompositorTimingMode eTimingMode)
		{
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0x790838", Offset = "0x790838", VA = "0x790838")]
		public EVRCompositorError SubmitExplicitTimingData()
		{
			return default(EVRCompositorError);
		}
	}
	[Token(Token = "0x2000173")]
	public class CVROverlay
	{
		[Token(Token = "0x20003F7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2263F8", Offset = "0x2263F8")]
		internal delegate bool _PollNextOverlayEventPacked(ulong ulOverlayHandle, ref VREvent_t_Packed pEvent, uint uncbVREvent);

		[StructLayout(2)]
		[Token(Token = "0x20003F8")]
		private struct PollNextOverlayEventUnion
		{
			[Token(Token = "0x4001603")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVROverlay._PollNextOverlayEvent pPollNextOverlayEvent;

			[Token(Token = "0x4001604")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _PollNextOverlayEventPacked pPollNextOverlayEventPacked;
		}

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IVROverlay FnTable;

		[Token(Token = "0x6000963")]
		[Address(RVA = "0x6FF504", Offset = "0x6FF504", VA = "0x6FF504")]
		internal CVROverlay(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0x6FF640", Offset = "0x6FF640", VA = "0x6FF640")]
		public EVROverlayError FindOverlay(string pchOverlayKey, ref ulong pOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0x6FF684", Offset = "0x6FF684", VA = "0x6FF684")]
		public EVROverlayError CreateOverlay(string pchOverlayKey, string pchOverlayName, ref ulong pOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0x6FF6D8", Offset = "0x6FF6D8", VA = "0x6FF6D8")]
		public EVROverlayError DestroyOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x6FF71C", Offset = "0x6FF71C", VA = "0x6FF71C")]
		public EVROverlayError SetHighQualityOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0x6FF760", Offset = "0x6FF760", VA = "0x6FF760")]
		public ulong GetHighQualityOverlay()
		{
			return default(ulong);
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0x6FF788", Offset = "0x6FF788", VA = "0x6FF788")]
		public uint GetOverlayKey(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x600096A")]
		[Address(RVA = "0x6FF7E0", Offset = "0x6FF7E0", VA = "0x6FF7E0")]
		public uint GetOverlayName(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0x6FF838", Offset = "0x6FF838", VA = "0x6FF838")]
		public EVROverlayError SetOverlayName(ulong ulOverlayHandle, string pchName)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0x6FF884", Offset = "0x6FF884", VA = "0x6FF884")]
		public EVROverlayError GetOverlayImageData(ulong ulOverlayHandle, IntPtr pvBuffer, uint unBufferSize, ref uint punWidth, ref uint punHeight)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x6FF8E8", Offset = "0x6FF8E8", VA = "0x6FF8E8")]
		public string GetOverlayErrorNameFromEnum(EVROverlayError error)
		{
			return null;
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0x6FF98C", Offset = "0x6FF98C", VA = "0x6FF98C")]
		public EVROverlayError SetOverlayRenderingPid(ulong ulOverlayHandle, uint unPID)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0x6FF9D8", Offset = "0x6FF9D8", VA = "0x6FF9D8")]
		public uint GetOverlayRenderingPid(ulong ulOverlayHandle)
		{
			return default(uint);
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0x6FFA1C", Offset = "0x6FFA1C", VA = "0x6FFA1C")]
		public EVROverlayError SetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool bEnabled)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0x6FFA6C", Offset = "0x6FFA6C", VA = "0x6FFA6C")]
		public EVROverlayError GetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, ref bool pbEnabled)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000972")]
		[Address(RVA = "0x6FFAC4", Offset = "0x6FFAC4", VA = "0x6FFAC4")]
		public EVROverlayError SetOverlayColor(ulong ulOverlayHandle, float fRed, float fGreen, float fBlue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0x6FFB28", Offset = "0x6FFB28", VA = "0x6FFB28")]
		public EVROverlayError GetOverlayColor(ulong ulOverlayHandle, ref float pfRed, ref float pfGreen, ref float pfBlue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0x6FFB8C", Offset = "0x6FFB8C", VA = "0x6FFB8C")]
		public EVROverlayError SetOverlayAlpha(ulong ulOverlayHandle, float fAlpha)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0x6FFBE0", Offset = "0x6FFBE0", VA = "0x6FFBE0")]
		public EVROverlayError GetOverlayAlpha(ulong ulOverlayHandle, ref float pfAlpha)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0x6FFC2C", Offset = "0x6FFC2C", VA = "0x6FFC2C")]
		public EVROverlayError SetOverlayTexelAspect(ulong ulOverlayHandle, float fTexelAspect)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x6FFC80", Offset = "0x6FFC80", VA = "0x6FFC80")]
		public EVROverlayError GetOverlayTexelAspect(ulong ulOverlayHandle, ref float pfTexelAspect)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0x6FFCCC", Offset = "0x6FFCCC", VA = "0x6FFCCC")]
		public EVROverlayError SetOverlaySortOrder(ulong ulOverlayHandle, uint unSortOrder)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0x6FFD18", Offset = "0x6FFD18", VA = "0x6FFD18")]
		public EVROverlayError GetOverlaySortOrder(ulong ulOverlayHandle, ref uint punSortOrder)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0x6FFD64", Offset = "0x6FFD64", VA = "0x6FFD64")]
		public EVROverlayError SetOverlayWidthInMeters(ulong ulOverlayHandle, float fWidthInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0x6FFDB8", Offset = "0x6FFDB8", VA = "0x6FFDB8")]
		public EVROverlayError GetOverlayWidthInMeters(ulong ulOverlayHandle, ref float pfWidthInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0x6FFE04", Offset = "0x6FFE04", VA = "0x6FFE04")]
		public EVROverlayError SetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0x6FFE60", Offset = "0x6FFE60", VA = "0x6FFE60")]
		public EVROverlayError GetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, ref float pfMinDistanceInMeters, ref float pfMaxDistanceInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0x6FFEBC", Offset = "0x6FFEBC", VA = "0x6FFEBC")]
		public EVROverlayError SetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace eTextureColorSpace)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0x6FFF08", Offset = "0x6FFF08", VA = "0x6FFF08")]
		public EVROverlayError GetOverlayTextureColorSpace(ulong ulOverlayHandle, ref EColorSpace peTextureColorSpace)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0x6FFF54", Offset = "0x6FFF54", VA = "0x6FFF54")]
		public EVROverlayError SetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0x6FFFA0", Offset = "0x6FFFA0", VA = "0x6FFFA0")]
		public EVROverlayError GetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x6FFFEC", Offset = "0x6FFFEC", VA = "0x6FFFEC")]
		public uint GetOverlayRenderModel(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref HmdColor_t pColor, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0x70004C", Offset = "0x70004C", VA = "0x70004C")]
		public EVROverlayError SetOverlayRenderModel(ulong ulOverlayHandle, string pchRenderModel, ref HmdColor_t pColor)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0x70009C", Offset = "0x70009C", VA = "0x70009C")]
		public EVROverlayError GetOverlayTransformType(ulong ulOverlayHandle, ref VROverlayTransformType peTransformType)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0x7000E8", Offset = "0x7000E8", VA = "0x7000E8")]
		public EVROverlayError SetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0x700138", Offset = "0x700138", VA = "0x700138")]
		public EVROverlayError GetOverlayTransformAbsolute(ulong ulOverlayHandle, ref ETrackingUniverseOrigin peTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0x700188", Offset = "0x700188", VA = "0x700188")]
		public EVROverlayError SetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint unTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0x7001D8", Offset = "0x7001D8", VA = "0x7001D8")]
		public EVROverlayError GetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, ref uint punTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0x700228", Offset = "0x700228", VA = "0x700228")]
		public EVROverlayError SetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint unDeviceIndex, string pchComponentName)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0x700278", Offset = "0x700278", VA = "0x700278")]
		public EVROverlayError GetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, ref uint punDeviceIndex, StringBuilder pchComponentName, uint unComponentNameSize)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0x7002D4", Offset = "0x7002D4", VA = "0x7002D4")]
		public EVROverlayError GetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ref ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0x70032C", Offset = "0x70032C", VA = "0x70032C")]
		public EVROverlayError SetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0x70037C", Offset = "0x70037C", VA = "0x70037C")]
		public EVROverlayError ShowOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0x7003C0", Offset = "0x7003C0", VA = "0x7003C0")]
		public EVROverlayError HideOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x700404", Offset = "0x700404", VA = "0x700404")]
		public bool IsOverlayVisible(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x700448", Offset = "0x700448", VA = "0x700448")]
		public EVROverlayError GetTransformForOverlayCoordinates(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdVector2_t coordinatesInOverlay, ref HmdMatrix34_t pmatTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0x7004A8", Offset = "0x7004A8", VA = "0x7004A8")]
		public bool PollNextOverlayEvent(ulong ulOverlayHandle, ref VREvent_t pEvent, uint uncbVREvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0x7009D0", Offset = "0x7009D0", VA = "0x7009D0")]
		public EVROverlayError GetOverlayInputMethod(ulong ulOverlayHandle, ref VROverlayInputMethod peInputMethod)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000993")]
		[Address(RVA = "0x700A1C", Offset = "0x700A1C", VA = "0x700A1C")]
		public EVROverlayError SetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod eInputMethod)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0x700A68", Offset = "0x700A68", VA = "0x700A68")]
		public EVROverlayError GetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0x700AB4", Offset = "0x700AB4", VA = "0x700AB4")]
		public EVROverlayError SetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0x700B00", Offset = "0x700B00", VA = "0x700B00")]
		public bool ComputeOverlayIntersection(ulong ulOverlayHandle, ref VROverlayIntersectionParams_t pParams, ref VROverlayIntersectionResults_t pResults)
		{
			return default(bool);
		}

		[Token(Token = "0x6000997")]
		[Address(RVA = "0x700B50", Offset = "0x700B50", VA = "0x700B50")]
		public bool IsHoverTargetOverlay(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0x700B94", Offset = "0x700B94", VA = "0x700B94")]
		public ulong GetGamepadFocusOverlay()
		{
			return default(ulong);
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0x700BBC", Offset = "0x700BBC", VA = "0x700BBC")]
		public EVROverlayError SetGamepadFocusOverlay(ulong ulNewFocusOverlay)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0x700C00", Offset = "0x700C00", VA = "0x700C00")]
		public EVROverlayError SetOverlayNeighbor(EOverlayDirection eDirection, ulong ulFrom, ulong ulTo)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0x700C5C", Offset = "0x700C5C", VA = "0x700C5C")]
		public EVROverlayError MoveGamepadFocusToNeighbor(EOverlayDirection eDirection, ulong ulFrom)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0x700CA8", Offset = "0x700CA8", VA = "0x700CA8")]
		public EVROverlayError SetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, IntPtr vCenter, float fRadius)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0x700D08", Offset = "0x700D08", VA = "0x700D08")]
		public EVROverlayError GetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, ref HmdVector2_t pvCenter, ref float pfRadius)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0x700D64", Offset = "0x700D64", VA = "0x700D64")]
		public EVROverlayError SetOverlayTexture(ulong ulOverlayHandle, ref Texture_t pTexture)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0x700DB0", Offset = "0x700DB0", VA = "0x700DB0")]
		public EVROverlayError ClearOverlayTexture(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x700DF4", Offset = "0x700DF4", VA = "0x700DF4")]
		public EVROverlayError SetOverlayRaw(ulong ulOverlayHandle, IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x700E54", Offset = "0x700E54", VA = "0x700E54")]
		public EVROverlayError SetOverlayFromFile(ulong ulOverlayHandle, string pchFilePath)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x700EA0", Offset = "0x700EA0", VA = "0x700EA0")]
		public EVROverlayError GetOverlayTexture(ulong ulOverlayHandle, ref IntPtr pNativeTextureHandle, IntPtr pNativeTextureRef, ref uint pWidth, ref uint pHeight, ref uint pNativeFormat, ref ETextureType pAPIType, ref EColorSpace pColorSpace, ref VRTextureBounds_t pTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x700F3C", Offset = "0x700F3C", VA = "0x700F3C")]
		public EVROverlayError ReleaseNativeOverlayHandle(ulong ulOverlayHandle, IntPtr pNativeTextureHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x700F88", Offset = "0x700F88", VA = "0x700F88")]
		public EVROverlayError GetOverlayTextureSize(ulong ulOverlayHandle, ref uint pWidth, ref uint pHeight)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x700FE4", Offset = "0x700FE4", VA = "0x700FE4")]
		public EVROverlayError CreateDashboardOverlay(string pchOverlayKey, string pchOverlayFriendlyName, ref ulong pMainHandle, ref ulong pThumbnailHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x701044", Offset = "0x701044", VA = "0x701044")]
		public bool IsDashboardVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x70106C", Offset = "0x70106C", VA = "0x70106C")]
		public bool IsActiveDashboardOverlay(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x7010B0", Offset = "0x7010B0", VA = "0x7010B0")]
		public EVROverlayError SetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint unProcessId)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x7010FC", Offset = "0x7010FC", VA = "0x7010FC")]
		public EVROverlayError GetDashboardOverlaySceneProcess(ulong ulOverlayHandle, ref uint punProcessId)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x701148", Offset = "0x701148", VA = "0x701148")]
		public void ShowDashboard(string pchOverlayToShow)
		{
		}

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x701178", Offset = "0x701178", VA = "0x701178")]
		public uint GetPrimaryDashboardDevice()
		{
			return default(uint);
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x7011A0", Offset = "0x7011A0", VA = "0x7011A0")]
		public EVROverlayError ShowKeyboard(int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x70121C", Offset = "0x70121C", VA = "0x70121C")]
		public EVROverlayError ShowKeyboardForOverlay(ulong ulOverlayHandle, int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x7012B8", Offset = "0x7012B8", VA = "0x7012B8")]
		public uint GetKeyboardText(StringBuilder pchText, uint cchText)
		{
			return default(uint);
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x7012F0", Offset = "0x7012F0", VA = "0x7012F0")]
		public void HideKeyboard()
		{
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x701318", Offset = "0x701318", VA = "0x701318")]
		public void SetKeyboardTransformAbsolute(ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToKeyboardTransform)
		{
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x701350", Offset = "0x701350", VA = "0x701350")]
		public void SetKeyboardPositionForOverlay(ulong ulOverlayHandle, HmdRect2_t avoidRect)
		{
		}

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x7013B0", Offset = "0x7013B0", VA = "0x7013B0")]
		public EVROverlayError SetOverlayIntersectionMask(ulong ulOverlayHandle, ref VROverlayIntersectionMaskPrimitive_t pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x701408", Offset = "0x701408", VA = "0x701408")]
		public EVROverlayError GetOverlayFlags(ulong ulOverlayHandle, ref uint pFlags)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x701454", Offset = "0x701454", VA = "0x701454")]
		public VRMessageOverlayResponse ShowMessageOverlay(string pchText, string pchCaption, string pchButton0Text, string pchButton1Text, string pchButton2Text, string pchButton3Text)
		{
			return default(VRMessageOverlayResponse);
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x7014B8", Offset = "0x7014B8", VA = "0x7014B8")]
		public void CloseMessageOverlay()
		{
		}
	}
	[Token(Token = "0x2000174")]
	public class CVRRenderModels
	{
		[Token(Token = "0x20003F9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x22640C", Offset = "0x22640C")]
		internal delegate bool _GetComponentStatePacked(string pchRenderModelName, string pchComponentName, ref VRControllerState_t_Packed pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState);

		[StructLayout(2)]
		[Token(Token = "0x20003FA")]
		private struct GetComponentStateUnion
		{
			[Token(Token = "0x4001605")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRRenderModels._GetComponentState pGetComponentState;

			[Token(Token = "0x4001606")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetComponentStatePacked pGetComponentStatePacked;
		}

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IVRRenderModels FnTable;

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x70160C", Offset = "0x70160C", VA = "0x70160C")]
		internal CVRRenderModels(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x701748", Offset = "0x701748", VA = "0x701748")]
		public EVRRenderModelError LoadRenderModel_Async(string pchRenderModelName, ref IntPtr ppRenderModel)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x701780", Offset = "0x701780", VA = "0x701780")]
		public void FreeRenderModel(IntPtr pRenderModel)
		{
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x7017B0", Offset = "0x7017B0", VA = "0x7017B0")]
		public EVRRenderModelError LoadTexture_Async(int textureId, ref IntPtr ppTexture)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x7017E8", Offset = "0x7017E8", VA = "0x7017E8")]
		public void FreeTexture(IntPtr pTexture)
		{
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x701818", Offset = "0x701818", VA = "0x701818")]
		public EVRRenderModelError LoadTextureD3D11_Async(int textureId, IntPtr pD3D11Device, ref IntPtr ppD3D11Texture2D)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x701864", Offset = "0x701864", VA = "0x701864")]
		public EVRRenderModelError LoadIntoTextureD3D11_Async(int textureId, IntPtr pDstTexture)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x70189C", Offset = "0x70189C", VA = "0x70189C")]
		public void FreeTextureD3D11(IntPtr pD3D11Texture2D)
		{
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x7018CC", Offset = "0x7018CC", VA = "0x7018CC")]
		public uint GetRenderModelName(uint unRenderModelIndex, StringBuilder pchRenderModelName, uint unRenderModelNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x701918", Offset = "0x701918", VA = "0x701918")]
		public uint GetRenderModelCount()
		{
			return default(uint);
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x701940", Offset = "0x701940", VA = "0x701940")]
		public uint GetComponentCount(string pchRenderModelName)
		{
			return default(uint);
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x701970", Offset = "0x701970", VA = "0x701970")]
		public uint GetComponentName(string pchRenderModelName, uint unComponentIndex, StringBuilder pchComponentName, uint unComponentNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x7019C4", Offset = "0x7019C4", VA = "0x7019C4")]
		public ulong GetComponentButtonMask(string pchRenderModelName, string pchComponentName)
		{
			return default(ulong);
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x7019FC", Offset = "0x7019FC", VA = "0x7019FC")]
		public uint GetComponentRenderModelName(string pchRenderModelName, string pchComponentName, StringBuilder pchComponentRenderModelName, uint unComponentRenderModelNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x701A50", Offset = "0x701A50", VA = "0x701A50")]
		public bool GetComponentStateForDevicePath(string pchRenderModelName, string pchComponentName, ulong devicePath, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState)
		{
			return default(bool);
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x701AA8", Offset = "0x701AA8", VA = "0x701AA8")]
		public bool GetComponentState(string pchRenderModelName, string pchComponentName, ref VRControllerState_t pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState)
		{
			return default(bool);
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x702154", Offset = "0x702154", VA = "0x702154")]
		public bool RenderModelHasComponent(string pchRenderModelName, string pchComponentName)
		{
			return default(bool);
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x70218C", Offset = "0x70218C", VA = "0x70218C")]
		public uint GetRenderModelThumbnailURL(string pchRenderModelName, StringBuilder pchThumbnailURL, uint unThumbnailURLLen, ref EVRRenderModelError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x7021E0", Offset = "0x7021E0", VA = "0x7021E0")]
		public uint GetRenderModelOriginalPath(string pchRenderModelName, StringBuilder pchOriginalPath, uint unOriginalPathLen, ref EVRRenderModelError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x702234", Offset = "0x702234", VA = "0x702234")]
		public string GetRenderModelErrorNameFromEnum(EVRRenderModelError error)
		{
			return null;
		}
	}
	[Token(Token = "0x2000175")]
	public class CVRNotifications
	{
		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IVRNotifications FnTable;

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x6FF318", Offset = "0x6FF318", VA = "0x6FF318")]
		internal CVRNotifications(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x6FF44C", Offset = "0x6FF44C", VA = "0x6FF44C")]
		public EVRNotificationError CreateNotification(ulong ulOverlayHandle, ulong ulUserValue, EVRNotificationType type, string pchText, EVRNotificationStyle style, ref NotificationBitmap_t pImage, ref uint pNotificationId)
		{
			return default(EVRNotificationError);
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x6FF4D4", Offset = "0x6FF4D4", VA = "0x6FF4D4")]
		public EVRNotificationError RemoveNotification(uint notificationId)
		{
			return default(EVRNotificationError);
		}
	}
	[Token(Token = "0x2000176")]
	public class CVRSettings
	{
		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IVRSettings FnTable;

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0x702934", Offset = "0x702934", VA = "0x702934")]
		internal CVRSettings(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x702A84", Offset = "0x702A84", VA = "0x702A84")]
		public string GetSettingsErrorNameFromEnum(EVRSettingsError eError)
		{
			return null;
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x702B28", Offset = "0x702B28", VA = "0x702B28")]
		public bool Sync(bool bForce, ref EVRSettingsError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x702B60", Offset = "0x702B60", VA = "0x702B60")]
		public void SetBool(string pchSection, string pchSettingsKey, bool bValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x702BB4", Offset = "0x702BB4", VA = "0x702BB4")]
		public void SetInt32(string pchSection, string pchSettingsKey, int nValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x702C08", Offset = "0x702C08", VA = "0x702C08")]
		public void SetFloat(string pchSection, string pchSettingsKey, float flValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x702C5C", Offset = "0x702C5C", VA = "0x702C5C")]
		public void SetString(string pchSection, string pchSettingsKey, string pchValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x702CB0", Offset = "0x702CB0", VA = "0x702CB0")]
		public bool GetBool(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x702CFC", Offset = "0x702CFC", VA = "0x702CFC")]
		public int GetInt32(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(int);
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x702D48", Offset = "0x702D48", VA = "0x702D48")]
		public float GetFloat(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(float);
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x702D94", Offset = "0x702D94", VA = "0x702D94")]
		public void GetString(string pchSection, string pchSettingsKey, StringBuilder pchValue, uint unValueLen, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x702DF0", Offset = "0x702DF0", VA = "0x702DF0")]
		public void RemoveSection(string pchSection, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x702E28", Offset = "0x702E28", VA = "0x702E28")]
		public void RemoveKeyInSection(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
		}
	}
	[Token(Token = "0x2000177")]
	public class CVRScreenshots
	{
		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IVRScreenshots FnTable;

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x7025E0", Offset = "0x7025E0", VA = "0x7025E0")]
		internal CVRScreenshots(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x702730", Offset = "0x702730", VA = "0x702730")]
		public EVRScreenshotError RequestScreenshot(ref uint pOutScreenshotHandle, EVRScreenshotType type, string pchPreviewFilename, string pchVRFilename)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x702784", Offset = "0x702784", VA = "0x702784")]
		public EVRScreenshotError HookScreenshot(EVRScreenshotType[] pSupportedTypes)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x7027C4", Offset = "0x7027C4", VA = "0x7027C4")]
		public EVRScreenshotType GetScreenshotPropertyType(uint screenshotHandle, ref EVRScreenshotError pError)
		{
			return default(EVRScreenshotType);
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x7027FC", Offset = "0x7027FC", VA = "0x7027FC")]
		public uint GetScreenshotPropertyFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames filenameType, StringBuilder pchFilename, uint cchFilename, ref EVRScreenshotError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x702858", Offset = "0x702858", VA = "0x702858")]
		public EVRScreenshotError UpdateScreenshotProgress(uint screenshotHandle, float flProgress)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0x702890", Offset = "0x702890", VA = "0x702890")]
		public EVRScreenshotError TakeStereoScreenshot(ref uint pOutScreenshotHandle, string pchPreviewFilename, string pchVRFilename)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x7028E0", Offset = "0x7028E0", VA = "0x7028E0")]
		public EVRScreenshotError SubmitScreenshot(uint screenshotHandle, EVRScreenshotType type, string pchSourcePreviewFilename, string pchSourceVRFilename)
		{
			return default(EVRScreenshotError);
		}
	}
	[Token(Token = "0x2000178")]
	public class CVRResources
	{
		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IVRResources FnTable;

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x70240C", Offset = "0x70240C", VA = "0x70240C")]
		internal CVRResources(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x702540", Offset = "0x702540", VA = "0x702540")]
		public uint LoadSharedResource(string pchResourceName, string pchBuffer, uint unBufferLen)
		{
			return default(uint);
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x70258C", Offset = "0x70258C", VA = "0x70258C")]
		public uint GetResourceFullPath(string pchResourceName, string pchResourceTypeDirectory, StringBuilder pchPathBuffer, uint unBufferLen)
		{
			return default(uint);
		}
	}
	[Token(Token = "0x2000179")]
	public class CVRDriverManager
	{
		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IVRDriverManager FnTable;

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x6FE43C", Offset = "0x6FE43C", VA = "0x6FE43C")]
		internal CVRDriverManager(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x6FE574", Offset = "0x6FE574", VA = "0x6FE574")]
		public uint GetDriverCount()
		{
			return default(uint);
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x6FE59C", Offset = "0x6FE59C", VA = "0x6FE59C")]
		public uint GetDriverName(uint nDriver, StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x6FE5E8", Offset = "0x6FE5E8", VA = "0x6FE5E8")]
		public ulong GetDriverHandle(string pchDriverName)
		{
			return default(ulong);
		}
	}
	[Token(Token = "0x200017A")]
	public class CVRInput
	{
		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IVRInput FnTable;

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x6FEB30", Offset = "0x6FEB30", VA = "0x6FEB30")]
		internal CVRInput(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x6FEC6C", Offset = "0x6FEC6C", VA = "0x6FEC6C")]
		public EVRInputError SetActionManifestPath(string pchActionManifestPath)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x6FEC9C", Offset = "0x6FEC9C", VA = "0x6FEC9C")]
		public EVRInputError GetActionSetHandle(string pchActionSetName, ref ulong pHandle)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x6FECE0", Offset = "0x6FECE0", VA = "0x6FECE0")]
		public EVRInputError GetActionHandle(string pchActionName, ref ulong pHandle)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x6FED24", Offset = "0x6FED24", VA = "0x6FED24")]
		public EVRInputError GetInputSourceHandle(string pchInputSourcePath, ref ulong pHandle)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x6FED68", Offset = "0x6FED68", VA = "0x6FED68")]
		public EVRInputError UpdateActionState(VRActiveActionSet_t[] pSets, uint unSizeOfVRSelectedActionSet_t)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x6FEDBC", Offset = "0x6FEDBC", VA = "0x6FEDBC")]
		public EVRInputError GetDigitalActionData(ulong action, ref InputDigitalActionData_t pActionData, uint unActionDataSize, ulong ulRestrictToDevice)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x6FEE1C", Offset = "0x6FEE1C", VA = "0x6FEE1C")]
		public EVRInputError GetAnalogActionData(ulong action, ref InputAnalogActionData_t pActionData, uint unActionDataSize, ulong ulRestrictToDevice)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x6FEE7C", Offset = "0x6FEE7C", VA = "0x6FEE7C")]
		public EVRInputError GetPoseActionData(ulong action, ETrackingUniverseOrigin eOrigin, float fPredictedSecondsFromNow, ref InputPoseActionData_t pActionData, uint unActionDataSize, ulong ulRestrictToDevice)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0x6FEF04", Offset = "0x6FEF04", VA = "0x6FEF04")]
		public EVRInputError GetSkeletalActionData(ulong action, ref InputSkeletalActionData_t pActionData, uint unActionDataSize, ulong ulRestrictToDevice)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x6FEF64", Offset = "0x6FEF64", VA = "0x6FEF64")]
		public EVRInputError GetSkeletalBoneData(ulong action, EVRSkeletalTransformSpace eTransformSpace, EVRSkeletalMotionRange eMotionRange, VRBoneTransform_t[] pTransformArray, ulong ulRestrictToDevice)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x6FEFE4", Offset = "0x6FEFE4", VA = "0x6FEFE4")]
		public EVRInputError GetSkeletalBoneDataCompressed(ulong action, EVRSkeletalTransformSpace eTransformSpace, EVRSkeletalMotionRange eMotionRange, IntPtr pvCompressedData, uint unCompressedSize, ref uint punRequiredCompressedSize, ulong ulRestrictToDevice)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x6FF078", Offset = "0x6FF078", VA = "0x6FF078")]
		public EVRInputError DecompressSkeletalBoneData(IntPtr pvCompressedBuffer, uint unCompressedBufferSize, ref EVRSkeletalTransformSpace peTransformSpace, VRBoneTransform_t[] pTransformArray)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x6FF0DC", Offset = "0x6FF0DC", VA = "0x6FF0DC")]
		public EVRInputError TriggerHapticVibrationAction(ulong action, float fStartSecondsFromNow, float fDurationSeconds, float fFrequency, float fAmplitude, ulong ulRestrictToDevice)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x6FF158", Offset = "0x6FF158", VA = "0x6FF158")]
		public EVRInputError GetActionOrigins(ulong actionSetHandle, ulong digitalActionHandle, ulong[] originsOut)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x6FF1C8", Offset = "0x6FF1C8", VA = "0x6FF1C8")]
		public EVRInputError GetOriginLocalizedName(ulong origin, StringBuilder pchNameArray, uint unNameArraySize)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x6FF218", Offset = "0x6FF218", VA = "0x6FF218")]
		public EVRInputError GetOriginTrackedDeviceInfo(ulong origin, ref InputOriginInfo_t pOriginInfo, uint unOriginInfoSize)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x6FF268", Offset = "0x6FF268", VA = "0x6FF268")]
		public EVRInputError ShowActionOrigins(ulong actionSetHandle, ulong ulActionHandle)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x6FF2B8", Offset = "0x6FF2B8", VA = "0x6FF2B8")]
		public EVRInputError ShowBindingsForActionSet(VRActiveActionSet_t[] pSets, uint unSizeOfVRSelectedActionSet_t, ulong originToHighlight)
		{
			return default(EVRInputError);
		}
	}
	[Token(Token = "0x200017B")]
	public class CVRIOBuffer
	{
		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IVRIOBuffer FnTable;

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x6FE864", Offset = "0x6FE864", VA = "0x6FE864")]
		internal CVRIOBuffer(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x6FE99C", Offset = "0x6FE99C", VA = "0x6FE99C")]
		public EIOBufferError Open(string pchPath, EIOBufferMode mode, uint unElementSize, uint unElements, ref ulong pulBuffer)
		{
			return default(EIOBufferError);
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x6FE9FC", Offset = "0x6FE9FC", VA = "0x6FE9FC")]
		public EIOBufferError Close(ulong ulBuffer)
		{
			return default(EIOBufferError);
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x6FEA40", Offset = "0x6FEA40", VA = "0x6FEA40")]
		public EIOBufferError Read(ulong ulBuffer, IntPtr pDst, uint unBytes, ref uint punRead)
		{
			return default(EIOBufferError);
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x6FEA9C", Offset = "0x6FEA9C", VA = "0x6FEA9C")]
		public EIOBufferError Write(ulong ulBuffer, IntPtr pSrc, uint unBytes)
		{
			return default(EIOBufferError);
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x6FEAEC", Offset = "0x6FEAEC", VA = "0x6FEAEC")]
		public ulong PropertyContainer(ulong ulBuffer)
		{
			return default(ulong);
		}
	}
	[Token(Token = "0x200017C")]
	public class CVRSpatialAnchors
	{
		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IVRSpatialAnchors FnTable;

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x702E74", Offset = "0x702E74", VA = "0x702E74")]
		internal CVRSpatialAnchors(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x702FA4", Offset = "0x702FA4", VA = "0x702FA4")]
		public EVRSpatialAnchorError CreateSpatialAnchorFromDescriptor(string pchDescriptor, ref uint pHandleOut)
		{
			return default(EVRSpatialAnchorError);
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x702FE4", Offset = "0x702FE4", VA = "0x702FE4")]
		public EVRSpatialAnchorError CreateSpatialAnchorFromPose(uint unDeviceIndex, ETrackingUniverseOrigin eOrigin, ref SpatialAnchorPose_t pPose, ref uint pHandleOut)
		{
			return default(EVRSpatialAnchorError);
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x703038", Offset = "0x703038", VA = "0x703038")]
		public EVRSpatialAnchorError GetSpatialAnchorPose(uint unHandle, ETrackingUniverseOrigin eOrigin, ref SpatialAnchorPose_t pPoseOut)
		{
			return default(EVRSpatialAnchorError);
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x703084", Offset = "0x703084", VA = "0x703084")]
		public EVRSpatialAnchorError GetSpatialAnchorDescriptor(uint unHandle, StringBuilder pchDescriptorOut, ref uint punDescriptorBufferLenInOut)
		{
			return default(EVRSpatialAnchorError);
		}
	}
	[Token(Token = "0x200017D")]
	public class OpenVRInterop
	{
		[PreserveSig]
		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x47BBA0", Offset = "0x47BBA0", VA = "0x47BBA0")]
		internal static extern uint InitInternal(ref EVRInitError peError, EVRApplicationType eApplicationType);

		[PreserveSig]
		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x47BC50", Offset = "0x47BC50", VA = "0x47BC50")]
		internal static extern uint InitInternal2(ref EVRInitError peError, EVRApplicationType eApplicationType, [In] string pStartupInfo);

		[PreserveSig]
		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x47BD28", Offset = "0x47BD28", VA = "0x47BD28")]
		internal static extern void ShutdownInternal();

		[PreserveSig]
		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x47BDC8", Offset = "0x47BDC8", VA = "0x47BDC8")]
		internal static extern bool IsHmdPresent();

		[PreserveSig]
		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x47BE70", Offset = "0x47BE70", VA = "0x47BE70")]
		internal static extern bool IsRuntimeInstalled();

		[PreserveSig]
		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x47BF98", Offset = "0x47BF98", VA = "0x47BF98")]
		internal static extern IntPtr GetStringForHmdError(EVRInitError error);

		[PreserveSig]
		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x47C040", Offset = "0x47C040", VA = "0x47C040")]
		internal static extern IntPtr GetGenericInterface([In] string pchInterfaceVersion, ref EVRInitError peError);

		[PreserveSig]
		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x47C110", Offset = "0x47C110", VA = "0x47C110")]
		internal static extern bool IsInterfaceVersionValid([In] string pchInterfaceVersion);

		[PreserveSig]
		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x47C1E0", Offset = "0x47C1E0", VA = "0x47C1E0")]
		internal static extern uint GetInitToken();

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x47DBE8", Offset = "0x47DBE8", VA = "0x47DBE8")]
		public OpenVRInterop()
		{
		}
	}
	[Token(Token = "0x200017E")]
	public enum EVREye
	{
		[Token(Token = "0x4000CF0")]
		Eye_Left,
		[Token(Token = "0x4000CF1")]
		Eye_Right
	}
	[Token(Token = "0x200017F")]
	public enum ETextureType
	{
		[Token(Token = "0x4000CF3")]
		Invalid = -1,
		[Token(Token = "0x4000CF4")]
		DirectX,
		[Token(Token = "0x4000CF5")]
		OpenGL,
		[Token(Token = "0x4000CF6")]
		Vulkan,
		[Token(Token = "0x4000CF7")]
		IOSurface,
		[Token(Token = "0x4000CF8")]
		DirectX12,
		[Token(Token = "0x4000CF9")]
		DXGISharedHandle,
		[Token(Token = "0x4000CFA")]
		Metal
	}
	[Token(Token = "0x2000180")]
	public enum EColorSpace
	{
		[Token(Token = "0x4000CFC")]
		Auto,
		[Token(Token = "0x4000CFD")]
		Gamma,
		[Token(Token = "0x4000CFE")]
		Linear
	}
	[Token(Token = "0x2000181")]
	public enum ETrackingResult
	{
		[Token(Token = "0x4000D00")]
		Uninitialized = 1,
		[Token(Token = "0x4000D01")]
		Calibrating_InProgress = 100,
		[Token(Token = "0x4000D02")]
		Calibrating_OutOfRange = 101,
		[Token(Token = "0x4000D03")]
		Running_OK = 200,
		[Token(Token = "0x4000D04")]
		Running_OutOfRange = 201
	}
	[Token(Token = "0x2000182")]
	public enum ETrackedDeviceClass
	{
		[Token(Token = "0x4000D06")]
		Invalid,
		[Token(Token = "0x4000D07")]
		HMD,
		[Token(Token = "0x4000D08")]
		Controller,
		[Token(Token = "0x4000D09")]
		GenericTracker,
		[Token(Token = "0x4000D0A")]
		TrackingReference,
		[Token(Token = "0x4000D0B")]
		DisplayRedirect,
		[Token(Token = "0x4000D0C")]
		Max
	}
	[Token(Token = "0x2000183")]
	public enum ETrackedControllerRole
	{
		[Token(Token = "0x4000D0E")]
		Invalid,
		[Token(Token = "0x4000D0F")]
		LeftHand,
		[Token(Token = "0x4000D10")]
		RightHand,
		[Token(Token = "0x4000D11")]
		OptOut,
		[Token(Token = "0x4000D12")]
		Max
	}
	[Token(Token = "0x2000184")]
	public enum ETrackingUniverseOrigin
	{
		[Token(Token = "0x4000D14")]
		TrackingUniverseSeated,
		[Token(Token = "0x4000D15")]
		TrackingUniverseStanding,
		[Token(Token = "0x4000D16")]
		TrackingUniverseRawAndUncalibrated
	}
	[Token(Token = "0x2000185")]
	public enum ETrackedDeviceProperty
	{
		[Token(Token = "0x4000D18")]
		Prop_Invalid = 0,
		[Token(Token = "0x4000D19")]
		Prop_TrackingSystemName_String = 1000,
		[Token(Token = "0x4000D1A")]
		Prop_ModelNumber_String = 1001,
		[Token(Token = "0x4000D1B")]
		Prop_SerialNumber_String = 1002,
		[Token(Token = "0x4000D1C")]
		Prop_RenderModelName_String = 1003,
		[Token(Token = "0x4000D1D")]
		Prop_WillDriftInYaw_Bool = 1004,
		[Token(Token = "0x4000D1E")]
		Prop_ManufacturerName_String = 1005,
		[Token(Token = "0x4000D1F")]
		Prop_TrackingFirmwareVersion_String = 1006,
		[Token(Token = "0x4000D20")]
		Prop_HardwareRevision_String = 1007,
		[Token(Token = "0x4000D21")]
		Prop_AllWirelessDongleDescriptions_String = 1008,
		[Token(Token = "0x4000D22")]
		Prop_ConnectedWirelessDongle_String = 1009,
		[Token(Token = "0x4000D23")]
		Prop_DeviceIsWireless_Bool = 1010,
		[Token(Token = "0x4000D24")]
		Prop_DeviceIsCharging_Bool = 1011,
		[Token(Token = "0x4000D25")]
		Prop_DeviceBatteryPercentage_Float = 1012,
		[Token(Token = "0x4000D26")]
		Prop_StatusDisplayTransform_Matrix34 = 1013,
		[Token(Token = "0x4000D27")]
		Prop_Firmware_UpdateAvailable_Bool = 1014,
		[Token(Token = "0x4000D28")]
		Prop_Firmware_ManualUpdate_Bool = 1015,
		[Token(Token = "0x4000D29")]
		Prop_Firmware_ManualUpdateURL_String = 1016,
		[Token(Token = "0x4000D2A")]
		Prop_HardwareRevision_Uint64 = 1017,
		[Token(Token = "0x4000D2B")]
		Prop_FirmwareVersion_Uint64 = 1018,
		[Token(Token = "0x4000D2C")]
		Prop_FPGAVersion_Uint64 = 1019,
		[Token(Token = "0x4000D2D")]
		Prop_VRCVersion_Uint64 = 1020,
		[Token(Token = "0x4000D2E")]
		Prop_RadioVersion_Uint64 = 1021,
		[Token(Token = "0x4000D2F")]
		Prop_DongleVersion_Uint64 = 1022,
		[Token(Token = "0x4000D30")]
		Prop_BlockServerShutdown_Bool = 1023,
		[Token(Token = "0x4000D31")]
		Prop_CanUnifyCoordinateSystemWithHmd_Bool = 1024,
		[Token(Token = "0x4000D32")]
		Prop_ContainsProximitySensor_Bool = 1025,
		[Token(Token = "0x4000D33")]
		Prop_DeviceProvidesBatteryStatus_Bool = 1026,
		[Token(Token = "0x4000D34")]
		Prop_DeviceCanPowerOff_Bool = 1027,
		[Token(Token = "0x4000D35")]
		Prop_Firmware_ProgrammingTarget_String = 1028,
		[Token(Token = "0x4000D36")]
		Prop_DeviceClass_Int32 = 1029,
		[Token(Token = "0x4000D37")]
		Prop_HasCamera_Bool = 1030,
		[Token(Token = "0x4000D38")]
		Prop_DriverVersion_String = 1031,
		[Token(Token = "0x4000D39")]
		Prop_Firmware_ForceUpdateRequired_Bool = 1032,
		[Token(Token = "0x4000D3A")]
		Prop_ViveSystemButtonFixRequired_Bool = 1033,
		[Token(Token = "0x4000D3B")]
		Prop_ParentDriver_Uint64 = 1034,
		[Token(Token = "0x4000D3C")]
		Prop_ResourceRoot_String = 1035,
		[Token(Token = "0x4000D3D")]
		Prop_RegisteredDeviceType_String = 1036,
		[Token(Token = "0x4000D3E")]
		Prop_InputProfilePath_String = 1037,
		[Token(Token = "0x4000D3F")]
		Prop_NeverTracked_Bool = 1038,
		[Token(Token = "0x4000D40")]
		Prop_NumCameras_Int32 = 1039,
		[Token(Token = "0x4000D41")]
		Prop_CameraFrameLayout_Int32 = 1040,
		[Token(Token = "0x4000D42")]
		Prop_ReportsTimeSinceVSync_Bool = 2000,
		[Token(Token = "0x4000D43")]
		Prop_SecondsFromVsyncToPhotons_Float = 2001,
		[Token(Token = "0x4000D44")]
		Prop_DisplayFrequency_Float = 2002,
		[Token(Token = "0x4000D45")]
		Prop_UserIpdMeters_Float = 2003,
		[Token(Token = "0x4000D46")]
		Prop_CurrentUniverseId_Uint64 = 2004,
		[Token(Token = "0x4000D47")]
		Prop_PreviousUniverseId_Uint64 = 2005,
		[Token(Token = "0x4000D48")]
		Prop_DisplayFirmwareVersion_Uint64 = 2006,
		[Token(Token = "0x4000D49")]
		Prop_IsOnDesktop_Bool = 2007,
		[Token(Token = "0x4000D4A")]
		Prop_DisplayMCType_Int32 = 2008,
		[Token(Token = "0x4000D4B")]
		Prop_DisplayMCOffset_Float = 2009,
		[Token(Token = "0x4000D4C")]
		Prop_DisplayMCScale_Float = 2010,
		[Token(Token = "0x4000D4D")]
		Prop_EdidVendorID_Int32 = 2011,
		[Token(Token = "0x4000D4E")]
		Prop_DisplayMCImageLeft_String = 2012,
		[Token(Token = "0x4000D4F")]
		Prop_DisplayMCImageRight_String = 2013,
		[Token(Token = "0x4000D50")]
		Prop_DisplayGCBlackClamp_Float = 2014,
		[Token(Token = "0x4000D51")]
		Prop_EdidProductID_Int32 = 2015,
		[Token(Token = "0x4000D52")]
		Prop_CameraToHeadTransform_Matrix34 = 2016,
		[Token(Token = "0x4000D53")]
		Prop_DisplayGCType_Int32 = 2017,
		[Token(Token = "0x4000D54")]
		Prop_DisplayGCOffset_Float = 2018,
		[Token(Token = "0x4000D55")]
		Prop_DisplayGCScale_Float = 2019,
		[Token(Token = "0x4000D56")]
		Prop_DisplayGCPrescale_Float = 2020,
		[Token(Token = "0x4000D57")]
		Prop_DisplayGCImage_String = 2021,
		[Token(Token = "0x4000D58")]
		Prop_LensCenterLeftU_Float = 2022,
		[Token(Token = "0x4000D59")]
		Prop_LensCenterLeftV_Float = 2023,
		[Token(Token = "0x4000D5A")]
		Prop_LensCenterRightU_Float = 2024,
		[Token(Token = "0x4000D5B")]
		Prop_LensCenterRightV_Float = 2025,
		[Token(Token = "0x4000D5C")]
		Prop_UserHeadToEyeDepthMeters_Float = 2026,
		[Token(Token = "0x4000D5D")]
		Prop_CameraFirmwareVersion_Uint64 = 2027,
		[Token(Token = "0x4000D5E")]
		Prop_CameraFirmwareDescription_String = 2028,
		[Token(Token = "0x4000D5F")]
		Prop_DisplayFPGAVersion_Uint64 = 2029,
		[Token(Token = "0x4000D60")]
		Prop_DisplayBootloaderVersion_Uint64 = 2030,
		[Token(Token = "0x4000D61")]
		Prop_DisplayHardwareVersion_Uint64 = 2031,
		[Token(Token = "0x4000D62")]
		Prop_AudioFirmwareVersion_Uint64 = 2032,
		[Token(Token = "0x4000D63")]
		Prop_CameraCompatibilityMode_Int32 = 2033,
		[Token(Token = "0x4000D64")]
		Prop_ScreenshotHorizontalFieldOfViewDegrees_Float = 2034,
		[Token(Token = "0x4000D65")]
		Prop_ScreenshotVerticalFieldOfViewDegrees_Float = 2035,
		[Token(Token = "0x4000D66")]
		Prop_DisplaySuppressed_Bool = 2036,
		[Token(Token = "0x4000D67")]
		Prop_DisplayAllowNightMode_Bool = 2037,
		[Token(Token = "0x4000D68")]
		Prop_DisplayMCImageWidth_Int32 = 2038,
		[Token(Token = "0x4000D69")]
		Prop_DisplayMCImageHeight_Int32 = 2039,
		[Token(Token = "0x4000D6A")]
		Prop_DisplayMCImageNumChannels_Int32 = 2040,
		[Token(Token = "0x4000D6B")]
		Prop_DisplayMCImageData_Binary = 2041,
		[Token(Token = "0x4000D6C")]
		Prop_SecondsFromPhotonsToVblank_Float = 2042,
		[Token(Token = "0x4000D6D")]
		Prop_DriverDirectModeSendsVsyncEvents_Bool = 2043,
		[Token(Token = "0x4000D6E")]
		Prop_DisplayDebugMode_Bool = 2044,
		[Token(Token = "0x4000D6F")]
		Prop_GraphicsAdapterLuid_Uint64 = 2045,
		[Token(Token = "0x4000D70")]
		Prop_DriverProvidedChaperonePath_String = 2048,
		[Token(Token = "0x4000D71")]
		Prop_ExpectedTrackingReferenceCount_Int32 = 2049,
		[Token(Token = "0x4000D72")]
		Prop_ExpectedControllerCount_Int32 = 2050,
		[Token(Token = "0x4000D73")]
		Prop_NamedIconPathControllerLeftDeviceOff_String = 2051,
		[Token(Token = "0x4000D74")]
		Prop_NamedIconPathControllerRightDeviceOff_String = 2052,
		[Token(Token = "0x4000D75")]
		Prop_NamedIconPathTrackingReferenceDeviceOff_String = 2053,
		[Token(Token = "0x4000D76")]
		Prop_DoNotApplyPrediction_Bool = 2054,
		[Token(Token = "0x4000D77")]
		Prop_CameraToHeadTransforms_Matrix34_Array = 2055,
		[Token(Token = "0x4000D78")]
		Prop_DistortionMeshResolution_Int32 = 2056,
		[Token(Token = "0x4000D79")]
		Prop_DriverIsDrawingControllers_Bool = 2057,
		[Token(Token = "0x4000D7A")]
		Prop_DriverRequestsApplicationPause_Bool = 2058,
		[Token(Token = "0x4000D7B")]
		Prop_DriverRequestsReducedRendering_Bool = 2059,
		[Token(Token = "0x4000D7C")]
		Prop_MinimumIpdStepMeters_Float = 2060,
		[Token(Token = "0x4000D7D")]
		Prop_AudioBridgeFirmwareVersion_Uint64 = 2061,
		[Token(Token = "0x4000D7E")]
		Prop_ImageBridgeFirmwareVersion_Uint64 = 2062,
		[Token(Token = "0x4000D7F")]
		Prop_ImuToHeadTransform_Matrix34 = 2063,
		[Token(Token = "0x4000D80")]
		Prop_ImuFactoryGyroBias_Vector3 = 2064,
		[Token(Token = "0x4000D81")]
		Prop_ImuFactoryGyroScale_Vector3 = 2065,
		[Token(Token = "0x4000D82")]
		Prop_ImuFactoryAccelerometerBias_Vector3 = 2066,
		[Token(Token = "0x4000D83")]
		Prop_ImuFactoryAccelerometerScale_Vector3 = 2067,
		[Token(Token = "0x4000D84")]
		Prop_ConfigurationIncludesLighthouse20Features_Bool = 2069,
		[Token(Token = "0x4000D85")]
		Prop_DriverRequestedMuraCorrectionMode_Int32 = 2200,
		[Token(Token = "0x4000D86")]
		Prop_DriverRequestedMuraFeather_InnerLeft_Int32 = 2201,
		[Token(Token = "0x4000D87")]
		Prop_DriverRequestedMuraFeather_InnerRight_Int32 = 2202,
		[Token(Token = "0x4000D88")]
		Prop_DriverRequestedMuraFeather_InnerTop_Int32 = 2203,
		[Token(Token = "0x4000D89")]
		Prop_DriverRequestedMuraFeather_InnerBottom_Int32 = 2204,
		[Token(Token = "0x4000D8A")]
		Prop_DriverRequestedMuraFeather_OuterLeft_Int32 = 2205,
		[Token(Token = "0x4000D8B")]
		Prop_DriverRequestedMuraFeather_OuterRight_Int32 = 2206,
		[Token(Token = "0x4000D8C")]
		Prop_DriverRequestedMuraFeather_OuterTop_Int32 = 2207,
		[Token(Token = "0x4000D8D")]
		Prop_DriverRequestedMuraFeather_OuterBottom_Int32 = 2208,
		[Token(Token = "0x4000D8E")]
		Prop_AttachedDeviceId_String = 3000,
		[Token(Token = "0x4000D8F")]
		Prop_SupportedButtons_Uint64 = 3001,
		[Token(Token = "0x4000D90")]
		Prop_Axis0Type_Int32 = 3002,
		[Token(Token = "0x4000D91")]
		Prop_Axis1Type_Int32 = 3003,
		[Token(Token = "0x4000D92")]
		Prop_Axis2Type_Int32 = 3004,
		[Token(Token = "0x4000D93")]
		Prop_Axis3Type_Int32 = 3005,
		[Token(Token = "0x4000D94")]
		Prop_Axis4Type_Int32 = 3006,
		[Token(Token = "0x4000D95")]
		Prop_ControllerRoleHint_Int32 = 3007,
		[Token(Token = "0x4000D96")]
		Prop_FieldOfViewLeftDegrees_Float = 4000,
		[Token(Token = "0x4000D97")]
		Prop_FieldOfViewRightDegrees_Float = 4001,
		[Token(Token = "0x4000D98")]
		Prop_FieldOfViewTopDegrees_Float = 4002,
		[Token(Token = "0x4000D99")]
		Prop_FieldOfViewBottomDegrees_Float = 4003,
		[Token(Token = "0x4000D9A")]
		Prop_TrackingRangeMinimumMeters_Float = 4004,
		[Token(Token = "0x4000D9B")]
		Prop_TrackingRangeMaximumMeters_Float = 4005,
		[Token(Token = "0x4000D9C")]
		Prop_ModeLabel_String = 4006,
		[Token(Token = "0x4000D9D")]
		Prop_IconPathName_String = 5000,
		[Token(Token = "0x4000D9E")]
		Prop_NamedIconPathDeviceOff_String = 5001,
		[Token(Token = "0x4000D9F")]
		Prop_NamedIconPathDeviceSearching_String = 5002,
		[Token(Token = "0x4000DA0")]
		Prop_NamedIconPathDeviceSearchingAlert_String = 5003,
		[Token(Token = "0x4000DA1")]
		Prop_NamedIconPathDeviceReady_String = 5004,
		[Token(Token = "0x4000DA2")]
		Prop_NamedIconPathDeviceReadyAlert_String = 5005,
		[Token(Token = "0x4000DA3")]
		Prop_NamedIconPathDeviceNotReady_String = 5006,
		[Token(Token = "0x4000DA4")]
		Prop_NamedIconPathDeviceStandby_String = 5007,
		[Token(Token = "0x4000DA5")]
		Prop_NamedIconPathDeviceAlertLow_String = 5008,
		[Token(Token = "0x4000DA6")]
		Prop_DisplayHiddenArea_Binary_Start = 5100,
		[Token(Token = "0x4000DA7")]
		Prop_DisplayHiddenArea_Binary_End = 5150,
		[Token(Token = "0x4000DA8")]
		Prop_ParentContainer = 5151,
		[Token(Token = "0x4000DA9")]
		Prop_UserConfigPath_String = 6000,
		[Token(Token = "0x4000DAA")]
		Prop_InstallPath_String = 6001,
		[Token(Token = "0x4000DAB")]
		Prop_HasDisplayComponent_Bool = 6002,
		[Token(Token = "0x4000DAC")]
		Prop_HasControllerComponent_Bool = 6003,
		[Token(Token = "0x4000DAD")]
		Prop_HasCameraComponent_Bool = 6004,
		[Token(Token = "0x4000DAE")]
		Prop_HasDriverDirectModeComponent_Bool = 6005,
		[Token(Token = "0x4000DAF")]
		Prop_HasVirtualDisplayComponent_Bool = 6006,
		[Token(Token = "0x4000DB0")]
		Prop_HasSpatialAnchorsSupport_Bool = 6007,
		[Token(Token = "0x4000DB1")]
		Prop_ControllerType_String = 7000,
		[Token(Token = "0x4000DB2")]
		Prop_LegacyInputProfile_String = 7001,
		[Token(Token = "0x4000DB3")]
		Prop_VendorSpecific_Reserved_Start = 10000,
		[Token(Token = "0x4000DB4")]
		Prop_VendorSpecific_Reserved_End = 10999,
		[Token(Token = "0x4000DB5")]
		Prop_TrackedDeviceProperty_Max = 1000000
	}
	[Token(Token = "0x2000186")]
	public enum ETrackedPropertyError
	{
		[Token(Token = "0x4000DB7")]
		TrackedProp_Success,
		[Token(Token = "0x4000DB8")]
		TrackedProp_WrongDataType,
		[Token(Token = "0x4000DB9")]
		TrackedProp_WrongDeviceClass,
		[Token(Token = "0x4000DBA")]
		TrackedProp_BufferTooSmall,
		[Token(Token = "0x4000DBB")]
		TrackedProp_UnknownProperty,
		[Token(Token = "0x4000DBC")]
		TrackedProp_InvalidDevice,
		[Token(Token = "0x4000DBD")]
		TrackedProp_CouldNotContactServer,
		[Token(Token = "0x4000DBE")]
		TrackedProp_ValueNotProvidedByDevice,
		[Token(Token = "0x4000DBF")]
		TrackedProp_StringExceedsMaximumLength,
		[Token(Token = "0x4000DC0")]
		TrackedProp_NotYetAvailable,
		[Token(Token = "0x4000DC1")]
		TrackedProp_PermissionDenied,
		[Token(Token = "0x4000DC2")]
		TrackedProp_InvalidOperation,
		[Token(Token = "0x4000DC3")]
		TrackedProp_CannotWriteToWildcards
	}
	[Token(Token = "0x2000187")]
	public enum EVRSubmitFlags
	{
		[Token(Token = "0x4000DC5")]
		Submit_Default = 0,
		[Token(Token = "0x4000DC6")]
		Submit_LensDistortionAlreadyApplied = 1,
		[Token(Token = "0x4000DC7")]
		Submit_GlRenderBuffer = 2,
		[Token(Token = "0x4000DC8")]
		Submit_Reserved = 4,
		[Token(Token = "0x4000DC9")]
		Submit_TextureWithPose = 8,
		[Token(Token = "0x4000DCA")]
		Submit_TextureWithDepth = 0x10
	}
	[Token(Token = "0x2000188")]
	public enum EVRState
	{
		[Token(Token = "0x4000DCC")]
		Undefined = -1,
		[Token(Token = "0x4000DCD")]
		Off,
		[Token(Token = "0x4000DCE")]
		Searching,
		[Token(Token = "0x4000DCF")]
		Searching_Alert,
		[Token(Token = "0x4000DD0")]
		Ready,
		[Token(Token = "0x4000DD1")]
		Ready_Alert,
		[Token(Token = "0x4000DD2")]
		NotReady,
		[Token(Token = "0x4000DD3")]
		Standby,
		[Token(Token = "0x4000DD4")]
		Ready_Alert_Low
	}
	[Token(Token = "0x2000189")]
	public enum EVREventType
	{
		[Token(Token = "0x4000DD6")]
		VREvent_None = 0,
		[Token(Token = "0x4000DD7")]
		VREvent_TrackedDeviceActivated = 100,
		[Token(Token = "0x4000DD8")]
		VREvent_TrackedDeviceDeactivated = 101,
		[Token(Token = "0x4000DD9")]
		VREvent_TrackedDeviceUpdated = 102,
		[Token(Token = "0x4000DDA")]
		VREvent_TrackedDeviceUserInteractionStarted = 103,
		[Token(Token = "0x4000DDB")]
		VREvent_TrackedDeviceUserInteractionEnded = 104,
		[Token(Token = "0x4000DDC")]
		VREvent_IpdChanged = 105,
		[Token(Token = "0x4000DDD")]
		VREvent_EnterStandbyMode = 106,
		[Token(Token = "0x4000DDE")]
		VREvent_LeaveStandbyMode = 107,
		[Token(Token = "0x4000DDF")]
		VREvent_TrackedDeviceRoleChanged = 108,
		[Token(Token = "0x4000DE0")]
		VREvent_WatchdogWakeUpRequested = 109,
		[Token(Token = "0x4000DE1")]
		VREvent_LensDistortionChanged = 110,
		[Token(Token = "0x4000DE2")]
		VREvent_PropertyChanged = 111,
		[Token(Token = "0x4000DE3")]
		VREvent_WirelessDisconnect = 112,
		[Token(Token = "0x4000DE4")]
		VREvent_WirelessReconnect = 113,
		[Token(Token = "0x4000DE5")]
		VREvent_ButtonPress = 200,
		[Token(Token = "0x4000DE6")]
		VREvent_ButtonUnpress = 201,
		[Token(Token = "0x4000DE7")]
		VREvent_ButtonTouch = 202,
		[Token(Token = "0x4000DE8")]
		VREvent_ButtonUntouch = 203,
		[Token(Token = "0x4000DE9")]
		VREvent_DualAnalog_Press = 250,
		[Token(Token = "0x4000DEA")]
		VREvent_DualAnalog_Unpress = 251,
		[Token(Token = "0x4000DEB")]
		VREvent_DualAnalog_Touch = 252,
		[Token(Token = "0x4000DEC")]
		VREvent_DualAnalog_Untouch = 253,
		[Token(Token = "0x4000DED")]
		VREvent_DualAnalog_Move = 254,
		[Token(Token = "0x4000DEE")]
		VREvent_DualAnalog_ModeSwitch1 = 255,
		[Token(Token = "0x4000DEF")]
		VREvent_DualAnalog_ModeSwitch2 = 256,
		[Token(Token = "0x4000DF0")]
		VREvent_DualAnalog_Cancel = 257,
		[Token(Token = "0x4000DF1")]
		VREvent_MouseMove = 300,
		[Token(Token = "0x4000DF2")]
		VREvent_MouseButtonDown = 301,
		[Token(Token = "0x4000DF3")]
		VREvent_MouseButtonUp = 302,
		[Token(Token = "0x4000DF4")]
		VREvent_FocusEnter = 303,
		[Token(Token = "0x4000DF5")]
		VREvent_FocusLeave = 304,
		[Token(Token = "0x4000DF6")]
		VREvent_Scroll = 305,
		[Token(Token = "0x4000DF7")]
		VREvent_TouchPadMove = 306,
		[Token(Token = "0x4000DF8")]
		VREvent_OverlayFocusChanged = 307,
		[Token(Token = "0x4000DF9")]
		VREvent_InputFocusCaptured = 400,
		[Token(Token = "0x4000DFA")]
		VREvent_InputFocusReleased = 401,
		[Token(Token = "0x4000DFB")]
		VREvent_SceneFocusLost = 402,
		[Token(Token = "0x4000DFC")]
		VREvent_SceneFocusGained = 403,
		[Token(Token = "0x4000DFD")]
		VREvent_SceneApplicationChanged = 404,
		[Token(Token = "0x4000DFE")]
		VREvent_SceneFocusChanged = 405,
		[Token(Token = "0x4000DFF")]
		VREvent_InputFocusChanged = 406,
		[Token(Token = "0x4000E00")]
		VREvent_SceneApplicationSecondaryRenderingStarted = 407,
		[Token(Token = "0x4000E01")]
		VREvent_SceneApplicationUsingWrongGraphicsAdapter = 408,
		[Token(Token = "0x4000E02")]
		VREvent_ActionBindingReloaded = 409,
		[Token(Token = "0x4000E03")]
		VREvent_HideRenderModels = 410,
		[Token(Token = "0x4000E04")]
		VREvent_ShowRenderModels = 411,
		[Token(Token = "0x4000E05")]
		VREvent_ConsoleOpened = 420,
		[Token(Token = "0x4000E06")]
		VREvent_ConsoleClosed = 421,
		[Token(Token = "0x4000E07")]
		VREvent_OverlayShown = 500,
		[Token(Token = "0x4000E08")]
		VREvent_OverlayHidden = 501,
		[Token(Token = "0x4000E09")]
		VREvent_DashboardActivated = 502,
		[Token(Token = "0x4000E0A")]
		VREvent_DashboardDeactivated = 503,
		[Token(Token = "0x4000E0B")]
		VREvent_DashboardThumbSelected = 504,
		[Token(Token = "0x4000E0C")]
		VREvent_DashboardRequested = 505,
		[Token(Token = "0x4000E0D")]
		VREvent_ResetDashboard = 506,
		[Token(Token = "0x4000E0E")]
		VREvent_RenderToast = 507,
		[Token(Token = "0x4000E0F")]
		VREvent_ImageLoaded = 508,
		[Token(Token = "0x4000E10")]
		VREvent_ShowKeyboard = 509,
		[Token(Token = "0x4000E11")]
		VREvent_HideKeyboard = 510,
		[Token(Token = "0x4000E12")]
		VREvent_OverlayGamepadFocusGained = 511,
		[Token(Token = "0x4000E13")]
		VREvent_OverlayGamepadFocusLost = 512,
		[Token(Token = "0x4000E14")]
		VREvent_OverlaySharedTextureChanged = 513,
		[Token(Token = "0x4000E15")]
		VREvent_ScreenshotTriggered = 516,
		[Token(Token = "0x4000E16")]
		VREvent_ImageFailed = 517,
		[Token(Token = "0x4000E17")]
		VREvent_DashboardOverlayCreated = 518,
		[Token(Token = "0x4000E18")]
		VREvent_SwitchGamepadFocus = 519,
		[Token(Token = "0x4000E19")]
		VREvent_RequestScreenshot = 520,
		[Token(Token = "0x4000E1A")]
		VREvent_ScreenshotTaken = 521,
		[Token(Token = "0x4000E1B")]
		VREvent_ScreenshotFailed = 522,
		[Token(Token = "0x4000E1C")]
		VREvent_SubmitScreenshotToDashboard = 523,
		[Token(Token = "0x4000E1D")]
		VREvent_ScreenshotProgressToDashboard = 524,
		[Token(Token = "0x4000E1E")]
		VREvent_PrimaryDashboardDeviceChanged = 525,
		[Token(Token = "0x4000E1F")]
		VREvent_RoomViewShown = 526,
		[Token(Token = "0x4000E20")]
		VREvent_RoomViewHidden = 527,
		[Token(Token = "0x4000E21")]
		VREvent_Notification_Shown = 600,
		[Token(Token = "0x4000E22")]
		VREvent_Notification_Hidden = 601,
		[Token(Token = "0x4000E23")]
		VREvent_Notification_BeginInteraction = 602,
		[Token(Token = "0x4000E24")]
		VREvent_Notification_Destroyed = 603,
		[Token(Token = "0x4000E25")]
		VREvent_Quit = 700,
		[Token(Token = "0x4000E26")]
		VREvent_ProcessQuit = 701,
		[Token(Token = "0x4000E27")]
		VREvent_QuitAborted_UserPrompt = 702,
		[Token(Token = "0x4000E28")]
		VREvent_QuitAcknowledged = 703,
		[Token(Token = "0x4000E29")]
		VREvent_DriverRequestedQuit = 704,
		[Token(Token = "0x4000E2A")]
		VREvent_ChaperoneDataHasChanged = 800,
		[Token(Token = "0x4000E2B")]
		VREvent_ChaperoneUniverseHasChanged = 801,
		[Token(Token = "0x4000E2C")]
		VREvent_ChaperoneTempDataHasChanged = 802,
		[Token(Token = "0x4000E2D")]
		VREvent_ChaperoneSettingsHaveChanged = 803,
		[Token(Token = "0x4000E2E")]
		VREvent_SeatedZeroPoseReset = 804,
		[Token(Token = "0x4000E2F")]
		VREvent_AudioSettingsHaveChanged = 820,
		[Token(Token = "0x4000E30")]
		VREvent_BackgroundSettingHasChanged = 850,
		[Token(Token = "0x4000E31")]
		VREvent_CameraSettingsHaveChanged = 851,
		[Token(Token = "0x4000E32")]
		VREvent_ReprojectionSettingHasChanged = 852,
		[Token(Token = "0x4000E33")]
		VREvent_ModelSkinSettingsHaveChanged = 853,
		[Token(Token = "0x4000E34")]
		VREvent_EnvironmentSettingsHaveChanged = 854,
		[Token(Token = "0x4000E35")]
		VREvent_PowerSettingsHaveChanged = 855,
		[Token(Token = "0x4000E36")]
		VREvent_EnableHomeAppSettingsHaveChanged = 856,
		[Token(Token = "0x4000E37")]
		VREvent_SteamVRSectionSettingChanged = 857,
		[Token(Token = "0x4000E38")]
		VREvent_LighthouseSectionSettingChanged = 858,
		[Token(Token = "0x4000E39")]
		VREvent_NullSectionSettingChanged = 859,
		[Token(Token = "0x4000E3A")]
		VREvent_UserInterfaceSectionSettingChanged = 860,
		[Token(Token = "0x4000E3B")]
		VREvent_NotificationsSectionSettingChanged = 861,
		[Token(Token = "0x4000E3C")]
		VREvent_KeyboardSectionSettingChanged = 862,
		[Token(Token = "0x4000E3D")]
		VREvent_PerfSectionSettingChanged = 863,
		[Token(Token = "0x4000E3E")]
		VREvent_DashboardSectionSettingChanged = 864,
		[Token(Token = "0x4000E3F")]
		VREvent_WebInterfaceSectionSettingChanged = 865,
		[Token(Token = "0x4000E40")]
		VREvent_TrackersSectionSettingChanged = 866,
		[Token(Token = "0x4000E41")]
		VREvent_StatusUpdate = 900,
		[Token(Token = "0x4000E42")]
		VREvent_WebInterface_InstallDriverCompleted = 950,
		[Token(Token = "0x4000E43")]
		VREvent_MCImageUpdated = 1000,
		[Token(Token = "0x4000E44")]
		VREvent_FirmwareUpdateStarted = 1100,
		[Token(Token = "0x4000E45")]
		VREvent_FirmwareUpdateFinished = 1101,
		[Token(Token = "0x4000E46")]
		VREvent_KeyboardClosed = 1200,
		[Token(Token = "0x4000E47")]
		VREvent_KeyboardCharInput = 1201,
		[Token(Token = "0x4000E48")]
		VREvent_KeyboardDone = 1202,
		[Token(Token = "0x4000E49")]
		VREvent_ApplicationTransitionStarted = 1300,
		[Token(Token = "0x4000E4A")]
		VREvent_ApplicationTransitionAborted = 1301,
		[Token(Token = "0x4000E4B")]
		VREvent_ApplicationTransitionNewAppStarted = 1302,
		[Token(Token = "0x4000E4C")]
		VREvent_ApplicationListUpdated = 1303,
		[Token(Token = "0x4000E4D")]
		VREvent_ApplicationMimeTypeLoad = 1304,
		[Token(Token = "0x4000E4E")]
		VREvent_ApplicationTransitionNewAppLaunchComplete = 1305,
		[Token(Token = "0x4000E4F")]
		VREvent_ProcessConnected = 1306,
		[Token(Token = "0x4000E50")]
		VREvent_ProcessDisconnected = 1307,
		[Token(Token = "0x4000E51")]
		VREvent_Compositor_MirrorWindowShown = 1400,
		[Token(Token = "0x4000E52")]
		VREvent_Compositor_MirrorWindowHidden = 1401,
		[Token(Token = "0x4000E53")]
		VREvent_Compositor_ChaperoneBoundsShown = 1410,
		[Token(Token = "0x4000E54")]
		VREvent_Compositor_ChaperoneBoundsHidden = 1411,
		[Token(Token = "0x4000E55")]
		VREvent_TrackedCamera_StartVideoStream = 1500,
		[Token(Token = "0x4000E56")]
		VREvent_TrackedCamera_StopVideoStream = 1501,
		[Token(Token = "0x4000E57")]
		VREvent_TrackedCamera_PauseVideoStream = 1502,
		[Token(Token = "0x4000E58")]
		VREvent_TrackedCamera_ResumeVideoStream = 1503,
		[Token(Token = "0x4000E59")]
		VREvent_TrackedCamera_EditingSurface = 1550,
		[Token(Token = "0x4000E5A")]
		VREvent_PerformanceTest_EnableCapture = 1600,
		[Token(Token = "0x4000E5B")]
		VREvent_PerformanceTest_DisableCapture = 1601,
		[Token(Token = "0x4000E5C")]
		VREvent_PerformanceTest_FidelityLevel = 1602,
		[Token(Token = "0x4000E5D")]
		VREvent_MessageOverlay_Closed = 1650,
		[Token(Token = "0x4000E5E")]
		VREvent_MessageOverlayCloseRequested = 1651,
		[Token(Token = "0x4000E5F")]
		VREvent_Input_HapticVibration = 1700,
		[Token(Token = "0x4000E60")]
		VREvent_Input_BindingLoadFailed = 1701,
		[Token(Token = "0x4000E61")]
		VREvent_Input_BindingLoadSuccessful = 1702,
		[Token(Token = "0x4000E62")]
		VREvent_Input_ActionManifestReloaded = 1703,
		[Token(Token = "0x4000E63")]
		VREvent_Input_ActionManifestLoadFailed = 1704,
		[Token(Token = "0x4000E64")]
		VREvent_SpatialAnchors_PoseUpdated = 1800,
		[Token(Token = "0x4000E65")]
		VREvent_SpatialAnchors_DescriptorUpdated = 1801,
		[Token(Token = "0x4000E66")]
		VREvent_SpatialAnchors_RequestPoseUpdate = 1802,
		[Token(Token = "0x4000E67")]
		VREvent_SpatialAnchors_RequestDescriptorUpdate = 1803,
		[Token(Token = "0x4000E68")]
		VREvent_VendorSpecific_Reserved_Start = 10000,
		[Token(Token = "0x4000E69")]
		VREvent_VendorSpecific_Reserved_End = 19999
	}
	[Token(Token = "0x200018A")]
	public enum EDeviceActivityLevel
	{
		[Token(Token = "0x4000E6B")]
		k_EDeviceActivityLevel_Unknown = -1,
		[Token(Token = "0x4000E6C")]
		k_EDeviceActivityLevel_Idle,
		[Token(Token = "0x4000E6D")]
		k_EDeviceActivityLevel_UserInteraction,
		[Token(Token = "0x4000E6E")]
		k_EDeviceActivityLevel_UserInteraction_Timeout,
		[Token(Token = "0x4000E6F")]
		k_EDeviceActivityLevel_Standby
	}
	[Token(Token = "0x200018B")]
	public enum EVRButtonId
	{
		[Token(Token = "0x4000E71")]
		k_EButton_System = 0,
		[Token(Token = "0x4000E72")]
		k_EButton_ApplicationMenu = 1,
		[Token(Token = "0x4000E73")]
		k_EButton_Grip = 2,
		[Token(Token = "0x4000E74")]
		k_EButton_DPad_Left = 3,
		[Token(Token = "0x4000E75")]
		k_EButton_DPad_Up = 4,
		[Token(Token = "0x4000E76")]
		k_EButton_DPad_Right = 5,
		[Token(Token = "0x4000E77")]
		k_EButton_DPad_Down = 6,
		[Token(Token = "0x4000E78")]
		k_EButton_A = 7,
		[Token(Token = "0x4000E79")]
		k_EButton_ProximitySensor = 31,
		[Token(Token = "0x4000E7A")]
		k_EButton_Axis0 = 32,
		[Token(Token = "0x4000E7B")]
		k_EButton_Axis1 = 33,
		[Token(Token = "0x4000E7C")]
		k_EButton_Axis2 = 34,
		[Token(Token = "0x4000E7D")]
		k_EButton_Axis3 = 35,
		[Token(Token = "0x4000E7E")]
		k_EButton_Axis4 = 36,
		[Token(Token = "0x4000E7F")]
		k_EButton_SteamVR_Touchpad = 32,
		[Token(Token = "0x4000E80")]
		k_EButton_SteamVR_Trigger = 33,
		[Token(Token = "0x4000E81")]
		k_EButton_Dashboard_Back = 2,
		[Token(Token = "0x4000E82")]
		k_EButton_Knuckles_A = 2,
		[Token(Token = "0x4000E83")]
		k_EButton_Knuckles_B = 1,
		[Token(Token = "0x4000E84")]
		k_EButton_Knuckles_JoyStick = 35,
		[Token(Token = "0x4000E85")]
		k_EButton_Max = 64
	}
	[Token(Token = "0x200018C")]
	public enum EVRMouseButton
	{
		[Token(Token = "0x4000E87")]
		Left = 1,
		[Token(Token = "0x4000E88")]
		Right = 2,
		[Token(Token = "0x4000E89")]
		Middle = 4
	}
	[Token(Token = "0x200018D")]
	public enum EDualAnalogWhich
	{
		[Token(Token = "0x4000E8B")]
		k_EDualAnalog_Left,
		[Token(Token = "0x4000E8C")]
		k_EDualAnalog_Right
	}
	[Token(Token = "0x200018E")]
	public enum EVRInputError
	{
		[Token(Token = "0x4000E8E")]
		None,
		[Token(Token = "0x4000E8F")]
		NameNotFound,
		[Token(Token = "0x4000E90")]
		WrongType,
		[Token(Token = "0x4000E91")]
		InvalidHandle,
		[Token(Token = "0x4000E92")]
		InvalidParam,
		[Token(Token = "0x4000E93")]
		NoSteam,
		[Token(Token = "0x4000E94")]
		MaxCapacityReached,
		[Token(Token = "0x4000E95")]
		IPCError,
		[Token(Token = "0x4000E96")]
		NoActiveActionSet,
		[Token(Token = "0x4000E97")]
		InvalidDevice,
		[Token(Token = "0x4000E98")]
		InvalidSkeleton,
		[Token(Token = "0x4000E99")]
		InvalidBoneCount,
		[Token(Token = "0x4000E9A")]
		InvalidCompressedData,
		[Token(Token = "0x4000E9B")]
		NoData,
		[Token(Token = "0x4000E9C")]
		BufferTooSmall,
		[Token(Token = "0x4000E9D")]
		MismatchedActionManifest,
		[Token(Token = "0x4000E9E")]
		MissingSkeletonData
	}
	[Token(Token = "0x200018F")]
	public enum EVRSpatialAnchorError
	{
		[Token(Token = "0x4000EA0")]
		Success,
		[Token(Token = "0x4000EA1")]
		Internal,
		[Token(Token = "0x4000EA2")]
		UnknownHandle,
		[Token(Token = "0x4000EA3")]
		ArrayTooSmall,
		[Token(Token = "0x4000EA4")]
		InvalidDescriptorChar,
		[Token(Token = "0x4000EA5")]
		NotYetAvailable,
		[Token(Token = "0x4000EA6")]
		NotAvailableInThisUniverse,
		[Token(Token = "0x4000EA7")]
		PermanentlyUnavailable,
		[Token(Token = "0x4000EA8")]
		WrongDriver,
		[Token(Token = "0x4000EA9")]
		DescriptorTooLong,
		[Token(Token = "0x4000EAA")]
		Unknown,
		[Token(Token = "0x4000EAB")]
		NoRoomCalibration,
		[Token(Token = "0x4000EAC")]
		InvalidArgument,
		[Token(Token = "0x4000EAD")]
		UnknownDriver
	}
	[Token(Token = "0x2000190")]
	public enum EHiddenAreaMeshType
	{
		[Token(Token = "0x4000EAF")]
		k_eHiddenAreaMesh_Standard,
		[Token(Token = "0x4000EB0")]
		k_eHiddenAreaMesh_Inverse,
		[Token(Token = "0x4000EB1")]
		k_eHiddenAreaMesh_LineLoop,
		[Token(Token = "0x4000EB2")]
		k_eHiddenAreaMesh_Max
	}
	[Token(Token = "0x2000191")]
	public enum EVRControllerAxisType
	{
		[Token(Token = "0x4000EB4")]
		k_eControllerAxis_None,
		[Token(Token = "0x4000EB5")]
		k_eControllerAxis_TrackPad,
		[Token(Token = "0x4000EB6")]
		k_eControllerAxis_Joystick,
		[Token(Token = "0x4000EB7")]
		k_eControllerAxis_Trigger
	}
	[Token(Token = "0x2000192")]
	public enum EVRControllerEventOutputType
	{
		[Token(Token = "0x4000EB9")]
		ControllerEventOutput_OSEvents,
		[Token(Token = "0x4000EBA")]
		ControllerEventOutput_VREvents
	}
	[Token(Token = "0x2000193")]
	public enum ECollisionBoundsStyle
	{
		[Token(Token = "0x4000EBC")]
		COLLISION_BOUNDS_STYLE_BEGINNER,
		[Token(Token = "0x4000EBD")]
		COLLISION_BOUNDS_STYLE_INTERMEDIATE,
		[Token(Token = "0x4000EBE")]
		COLLISION_BOUNDS_STYLE_SQUARES,
		[Token(Token = "0x4000EBF")]
		COLLISION_BOUNDS_STYLE_ADVANCED,
		[Token(Token = "0x4000EC0")]
		COLLISION_BOUNDS_STYLE_NONE,
		[Token(Token = "0x4000EC1")]
		COLLISION_BOUNDS_STYLE_COUNT
	}
	[Token(Token = "0x2000194")]
	public enum EVROverlayError
	{
		[Token(Token = "0x4000EC3")]
		None = 0,
		[Token(Token = "0x4000EC4")]
		UnknownOverlay = 10,
		[Token(Token = "0x4000EC5")]
		InvalidHandle = 11,
		[Token(Token = "0x4000EC6")]
		PermissionDenied = 12,
		[Token(Token = "0x4000EC7")]
		OverlayLimitExceeded = 13,
		[Token(Token = "0x4000EC8")]
		WrongVisibilityType = 14,
		[Token(Token = "0x4000EC9")]
		KeyTooLong = 15,
		[Token(Token = "0x4000ECA")]
		NameTooLong = 16,
		[Token(Token = "0x4000ECB")]
		KeyInUse = 17,
		[Token(Token = "0x4000ECC")]
		WrongTransformType = 18,
		[Token(Token = "0x4000ECD")]
		InvalidTrackedDevice = 19,
		[Token(Token = "0x4000ECE")]
		InvalidParameter = 20,
		[Token(Token = "0x4000ECF")]
		ThumbnailCantBeDestroyed = 21,
		[Token(Token = "0x4000ED0")]
		ArrayTooSmall = 22,
		[Token(Token = "0x4000ED1")]
		RequestFailed = 23,
		[Token(Token = "0x4000ED2")]
		InvalidTexture = 24,
		[Token(Token = "0x4000ED3")]
		UnableToLoadFile = 25,
		[Token(Token = "0x4000ED4")]
		KeyboardAlreadyInUse = 26,
		[Token(Token = "0x4000ED5")]
		NoNeighbor = 27,
		[Token(Token = "0x4000ED6")]
		TooManyMaskPrimitives = 29,
		[Token(Token = "0x4000ED7")]
		BadMaskPrimitive = 30,
		[Token(Token = "0x4000ED8")]
		TextureAlreadyLocked = 31,
		[Token(Token = "0x4000ED9")]
		TextureLockCapacityReached = 32,
		[Token(Token = "0x4000EDA")]
		TextureNotLocked = 33
	}
	[Token(Token = "0x2000195")]
	public enum EVRApplicationType
	{
		[Token(Token = "0x4000EDC")]
		VRApplication_Other,
		[Token(Token = "0x4000EDD")]
		VRApplication_Scene,
		[Token(Token = "0x4000EDE")]
		VRApplication_Overlay,
		[Token(Token = "0x4000EDF")]
		VRApplication_Background,
		[Token(Token = "0x4000EE0")]
		VRApplication_Utility,
		[Token(Token = "0x4000EE1")]
		VRApplication_VRMonitor,
		[Token(Token = "0x4000EE2")]
		VRApplication_SteamWatchdog,
		[Token(Token = "0x4000EE3")]
		VRApplication_Bootstrapper,
		[Token(Token = "0x4000EE4")]
		VRApplication_Max
	}
	[Token(Token = "0x2000196")]
	public enum EVRFirmwareError
	{
		[Token(Token = "0x4000EE6")]
		None,
		[Token(Token = "0x4000EE7")]
		Success,
		[Token(Token = "0x4000EE8")]
		Fail
	}
	[Token(Token = "0x2000197")]
	public enum EVRNotificationError
	{
		[Token(Token = "0x4000EEA")]
		OK = 0,
		[Token(Token = "0x4000EEB")]
		InvalidNotificationId = 100,
		[Token(Token = "0x4000EEC")]
		NotificationQueueFull = 101,
		[Token(Token = "0x4000EED")]
		InvalidOverlayHandle = 102,
		[Token(Token = "0x4000EEE")]
		SystemWithUserValueAlreadyExists = 103
	}
	[Token(Token = "0x2000198")]
	public enum EVRSkeletalMotionRange
	{
		[Token(Token = "0x4000EF0")]
		WithController,
		[Token(Token = "0x4000EF1")]
		WithoutController
	}
	[Token(Token = "0x2000199")]
	public enum EVRInitError
	{
		[Token(Token = "0x4000EF3")]
		None = 0,
		[Token(Token = "0x4000EF4")]
		Unknown = 1,
		[Token(Token = "0x4000EF5")]
		Init_InstallationNotFound = 100,
		[Token(Token = "0x4000EF6")]
		Init_InstallationCorrupt = 101,
		[Token(Token = "0x4000EF7")]
		Init_VRClientDLLNotFound = 102,
		[Token(Token = "0x4000EF8")]
		Init_FileNotFound = 103,
		[Token(Token = "0x4000EF9")]
		Init_FactoryNotFound = 104,
		[Token(Token = "0x4000EFA")]
		Init_InterfaceNotFound = 105,
		[Token(Token = "0x4000EFB")]
		Init_InvalidInterface = 106,
		[Token(Token = "0x4000EFC")]
		Init_UserConfigDirectoryInvalid = 107,
		[Token(Token = "0x4000EFD")]
		Init_HmdNotFound = 108,
		[Token(Token = "0x4000EFE")]
		Init_NotInitialized = 109,
		[Token(Token = "0x4000EFF")]
		Init_PathRegistryNotFound = 110,
		[Token(Token = "0x4000F00")]
		Init_NoConfigPath = 111,
		[Token(Token = "0x4000F01")]
		Init_NoLogPath = 112,
		[Token(Token = "0x4000F02")]
		Init_PathRegistryNotWritable = 113,
		[Token(Token = "0x4000F03")]
		Init_AppInfoInitFailed = 114,
		[Token(Token = "0x4000F04")]
		Init_Retry = 115,
		[Token(Token = "0x4000F05")]
		Init_InitCanceledByUser = 116,
		[Token(Token = "0x4000F06")]
		Init_AnotherAppLaunching = 117,
		[Token(Token = "0x4000F07")]
		Init_SettingsInitFailed = 118,
		[Token(Token = "0x4000F08")]
		Init_ShuttingDown = 119,
		[Token(Token = "0x4000F09")]
		Init_TooManyObjects = 120,
		[Token(Token = "0x4000F0A")]
		Init_NoServerForBackgroundApp = 121,
		[Token(Token = "0x4000F0B")]
		Init_NotSupportedWithCompositor = 122,
		[Token(Token = "0x4000F0C")]
		Init_NotAvailableToUtilityApps = 123,
		[Token(Token = "0x4000F0D")]
		Init_Internal = 124,
		[Token(Token = "0x4000F0E")]
		Init_HmdDriverIdIsNone = 125,
		[Token(Token = "0x4000F0F")]
		Init_HmdNotFoundPresenceFailed = 126,
		[Token(Token = "0x4000F10")]
		Init_VRMonitorNotFound = 127,
		[Token(Token = "0x4000F11")]
		Init_VRMonitorStartupFailed = 128,
		[Token(Token = "0x4000F12")]
		Init_LowPowerWatchdogNotSupported = 129,
		[Token(Token = "0x4000F13")]
		Init_InvalidApplicationType = 130,
		[Token(Token = "0x4000F14")]
		Init_NotAvailableToWatchdogApps = 131,
		[Token(Token = "0x4000F15")]
		Init_WatchdogDisabledInSettings = 132,
		[Token(Token = "0x4000F16")]
		Init_VRDashboardNotFound = 133,
		[Token(Token = "0x4000F17")]
		Init_VRDashboardStartupFailed = 134,
		[Token(Token = "0x4000F18")]
		Init_VRHomeNotFound = 135,
		[Token(Token = "0x4000F19")]
		Init_VRHomeStartupFailed = 136,
		[Token(Token = "0x4000F1A")]
		Init_RebootingBusy = 137,
		[Token(Token = "0x4000F1B")]
		Init_FirmwareUpdateBusy = 138,
		[Token(Token = "0x4000F1C")]
		Init_FirmwareRecoveryBusy = 139,
		[Token(Token = "0x4000F1D")]
		Init_USBServiceBusy = 140,
		[Token(Token = "0x4000F1E")]
		Init_VRWebHelperStartupFailed = 141,
		[Token(Token = "0x4000F1F")]
		Init_TrackerManagerInitFailed = 142,
		[Token(Token = "0x4000F20")]
		Driver_Failed = 200,
		[Token(Token = "0x4000F21")]
		Driver_Unknown = 201,
		[Token(Token = "0x4000F22")]
		Driver_HmdUnknown = 202,
		[Token(Token = "0x4000F23")]
		Driver_NotLoaded = 203,
		[Token(Token = "0x4000F24")]
		Driver_RuntimeOutOfDate = 204,
		[Token(Token = "0x4000F25")]
		Driver_HmdInUse = 205,
		[Token(Token = "0x4000F26")]
		Driver_NotCalibrated = 206,
		[Token(Token = "0x4000F27")]
		Driver_CalibrationInvalid = 207,
		[Token(Token = "0x4000F28")]
		Driver_HmdDisplayNotFound = 208,
		[Token(Token = "0x4000F29")]
		Driver_TrackedDeviceInterfaceUnknown = 209,
		[Token(Token = "0x4000F2A")]
		Driver_HmdDriverIdOutOfBounds = 211,
		[Token(Token = "0x4000F2B")]
		Driver_HmdDisplayMirrored = 212,
		[Token(Token = "0x4000F2C")]
		IPC_ServerInitFailed = 300,
		[Token(Token = "0x4000F2D")]
		IPC_ConnectFailed = 301,
		[Token(Token = "0x4000F2E")]
		IPC_SharedStateInitFailed = 302,
		[Token(Token = "0x4000F2F")]
		IPC_CompositorInitFailed = 303,
		[Token(Token = "0x4000F30")]
		IPC_MutexInitFailed = 304,
		[Token(Token = "0x4000F31")]
		IPC_Failed = 305,
		[Token(Token = "0x4000F32")]
		IPC_CompositorConnectFailed = 306,
		[Token(Token = "0x4000F33")]
		IPC_CompositorInvalidConnectResponse = 307,
		[Token(Token = "0x4000F34")]
		IPC_ConnectFailedAfterMultipleAttempts = 308,
		[Token(Token = "0x4000F35")]
		Compositor_Failed = 400,
		[Token(Token = "0x4000F36")]
		Compositor_D3D11HardwareRequired = 401,
		[Token(Token = "0x4000F37")]
		Compositor_FirmwareRequiresUpdate = 402,
		[Token(Token = "0x4000F38")]
		Compositor_OverlayInitFailed = 403,
		[Token(Token = "0x4000F39")]
		Compositor_ScreenshotsInitFailed = 404,
		[Token(Token = "0x4000F3A")]
		Compositor_UnableToCreateDevice = 405,
		[Token(Token = "0x4000F3B")]
		VendorSpecific_UnableToConnectToOculusRuntime = 1000,
		[Token(Token = "0x4000F3C")]
		VendorSpecific_WindowsNotInDevMode = 1001,
		[Token(Token = "0x4000F3D")]
		VendorSpecific_HmdFound_CantOpenDevice = 1101,
		[Token(Token = "0x4000F3E")]
		VendorSpecific_HmdFound_UnableToRequestConfigStart = 1102,
		[Token(Token = "0x4000F3F")]
		VendorSpecific_HmdFound_NoStoredConfig = 1103,
		[Token(Token = "0x4000F40")]
		VendorSpecific_HmdFound_ConfigTooBig = 1104,
		[Token(Token = "0x4000F41")]
		VendorSpecific_HmdFound_ConfigTooSmall = 1105,
		[Token(Token = "0x4000F42")]
		VendorSpecific_HmdFound_UnableToInitZLib = 1106,
		[Token(Token = "0x4000F43")]
		VendorSpecific_HmdFound_CantReadFirmwareVersion = 1107,
		[Token(Token = "0x4000F44")]
		VendorSpecific_HmdFound_UnableToSendUserDataStart = 1108,
		[Token(Token = "0x4000F45")]
		VendorSpecific_HmdFound_UnableToGetUserDataStart = 1109,
		[Token(Token = "0x4000F46")]
		VendorSpecific_HmdFound_UnableToGetUserDataNext = 1110,
		[Token(Token = "0x4000F47")]
		VendorSpecific_HmdFound_UserDataAddressRange = 1111,
		[Token(Token = "0x4000F48")]
		VendorSpecific_HmdFound_UserDataError = 1112,
		[Token(Token = "0x4000F49")]
		VendorSpecific_HmdFound_ConfigFailedSanityCheck = 1113,
		[Token(Token = "0x4000F4A")]
		Steam_SteamInstallationNotFound = 2000
	}
	[Token(Token = "0x200019A")]
	public enum EVRScreenshotType
	{
		[Token(Token = "0x4000F4C")]
		None,
		[Token(Token = "0x4000F4D")]
		Mono,
		[Token(Token = "0x4000F4E")]
		Stereo,
		[Token(Token = "0x4000F4F")]
		Cubemap,
		[Token(Token = "0x4000F50")]
		MonoPanorama,
		[Token(Token = "0x4000F51")]
		StereoPanorama
	}
	[Token(Token = "0x200019B")]
	public enum EVRScreenshotPropertyFilenames
	{
		[Token(Token = "0x4000F53")]
		Preview,
		[Token(Token = "0x4000F54")]
		VR
	}
	[Token(Token = "0x200019C")]
	public enum EVRTrackedCameraError
	{
		[Token(Token = "0x4000F56")]
		None = 0,
		[Token(Token = "0x4000F57")]
		OperationFailed = 100,
		[Token(Token = "0x4000F58")]
		InvalidHandle = 101,
		[Token(Token = "0x4000F59")]
		InvalidFrameHeaderVersion = 102,
		[Token(Token = "0x4000F5A")]
		OutOfHandles = 103,
		[Token(Token = "0x4000F5B")]
		IPCFailure = 104,
		[Token(Token = "0x4000F5C")]
		NotSupportedForThisDevice = 105,
		[Token(Token = "0x4000F5D")]
		SharedMemoryFailure = 106,
		[Token(Token = "0x4000F5E")]
		FrameBufferingFailure = 107,
		[Token(Token = "0x4000F5F")]
		StreamSetupFailure = 108,
		[Token(Token = "0x4000F60")]
		InvalidGLTextureId = 109,
		[Token(Token = "0x4000F61")]
		InvalidSharedTextureHandle = 110,
		[Token(Token = "0x4000F62")]
		FailedToGetGLTextureId = 111,
		[Token(Token = "0x4000F63")]
		SharedTextureFailure = 112,
		[Token(Token = "0x4000F64")]
		NoFrameAvailable = 113,
		[Token(Token = "0x4000F65")]
		InvalidArgument = 114,
		[Token(Token = "0x4000F66")]
		InvalidFrameBufferSize = 115
	}
	[Token(Token = "0x200019D")]
	public enum EVRTrackedCameraFrameLayout
	{
		[Token(Token = "0x4000F68")]
		Mono = 1,
		[Token(Token = "0x4000F69")]
		Stereo = 2,
		[Token(Token = "0x4000F6A")]
		VerticalLayout = 0x10,
		[Token(Token = "0x4000F6B")]
		HorizontalLayout = 0x20
	}
	[Token(Token = "0x200019E")]
	public enum EVRTrackedCameraFrameType
	{
		[Token(Token = "0x4000F6D")]
		Distorted,
		[Token(Token = "0x4000F6E")]
		Undistorted,
		[Token(Token = "0x4000F6F")]
		MaximumUndistorted,
		[Token(Token = "0x4000F70")]
		MAX_CAMERA_FRAME_TYPES
	}
	[Token(Token = "0x200019F")]
	public enum EVSync
	{
		[Token(Token = "0x4000F72")]
		None,
		[Token(Token = "0x4000F73")]
		WaitRender,
		[Token(Token = "0x4000F74")]
		NoWaitRender
	}
	[Token(Token = "0x20001A0")]
	public enum EVRMuraCorrectionMode
	{
		[Token(Token = "0x4000F76")]
		Default,
		[Token(Token = "0x4000F77")]
		NoCorrection
	}
	[Token(Token = "0x20001A1")]
	public enum Imu_OffScaleFlags
	{
		[Token(Token = "0x4000F79")]
		OffScale_AccelX = 1,
		[Token(Token = "0x4000F7A")]
		OffScale_AccelY = 2,
		[Token(Token = "0x4000F7B")]
		OffScale_AccelZ = 4,
		[Token(Token = "0x4000F7C")]
		OffScale_GyroX = 8,
		[Token(Token = "0x4000F7D")]
		OffScale_GyroY = 0x10,
		[Token(Token = "0x4000F7E")]
		OffScale_GyroZ = 0x20
	}
	[Token(Token = "0x20001A2")]
	public enum EVRApplicationError
	{
		[Token(Token = "0x4000F80")]
		None = 0,
		[Token(Token = "0x4000F81")]
		AppKeyAlreadyExists = 100,
		[Token(Token = "0x4000F82")]
		NoManifest = 101,
		[Token(Token = "0x4000F83")]
		NoApplication = 102,
		[Token(Token = "0x4000F84")]
		InvalidIndex = 103,
		[Token(Token = "0x4000F85")]
		UnknownApplication = 104,
		[Token(Token = "0x4000F86")]
		IPCFailed = 105,
		[Token(Token = "0x4000F87")]
		ApplicationAlreadyRunning = 106,
		[Token(Token = "0x4000F88")]
		InvalidManifest = 107,
		[Token(Token = "0x4000F89")]
		InvalidApplication = 108,
		[Token(Token = "0x4000F8A")]
		LaunchFailed = 109,
		[Token(Token = "0x4000F8B")]
		ApplicationAlreadyStarting = 110,
		[Token(Token = "0x4000F8C")]
		LaunchInProgress = 111,
		[Token(Token = "0x4000F8D")]
		OldApplicationQuitting = 112,
		[Token(Token = "0x4000F8E")]
		TransitionAborted = 113,
		[Token(Token = "0x4000F8F")]
		IsTemplate = 114,
		[Token(Token = "0x4000F90")]
		SteamVRIsExiting = 115,
		[Token(Token = "0x4000F91")]
		BufferTooSmall = 200,
		[Token(Token = "0x4000F92")]
		PropertyNotSet = 201,
		[Token(Token = "0x4000F93")]
		UnknownProperty = 202,
		[Token(Token = "0x4000F94")]
		InvalidParameter = 203
	}
	[Token(Token = "0x20001A3")]
	public enum EVRApplicationProperty
	{
		[Token(Token = "0x4000F96")]
		Name_String = 0,
		[Token(Token = "0x4000F97")]
		LaunchType_String = 11,
		[Token(Token = "0x4000F98")]
		WorkingDirectory_String = 12,
		[Token(Token = "0x4000F99")]
		BinaryPath_String = 13,
		[Token(Token = "0x4000F9A")]
		Arguments_String = 14,
		[Token(Token = "0x4000F9B")]
		URL_String = 15,
		[Token(Token = "0x4000F9C")]
		Description_String = 50,
		[Token(Token = "0x4000F9D")]
		NewsURL_String = 51,
		[Token(Token = "0x4000F9E")]
		ImagePath_String = 52,
		[Token(Token = "0x4000F9F")]
		Source_String = 53,
		[Token(Token = "0x4000FA0")]
		ActionManifestURL_String = 54,
		[Token(Token = "0x4000FA1")]
		IsDashboardOverlay_Bool = 60,
		[Token(Token = "0x4000FA2")]
		IsTemplate_Bool = 61,
		[Token(Token = "0x4000FA3")]
		IsInstanced_Bool = 62,
		[Token(Token = "0x4000FA4")]
		IsInternal_Bool = 63,
		[Token(Token = "0x4000FA5")]
		WantsCompositorPauseInStandby_Bool = 64,
		[Token(Token = "0x4000FA6")]
		LastLaunchTime_Uint64 = 70
	}
	[Token(Token = "0x20001A4")]
	public enum EVRApplicationTransitionState
	{
		[Token(Token = "0x4000FA8")]
		VRApplicationTransition_None = 0,
		[Token(Token = "0x4000FA9")]
		VRApplicationTransition_OldAppQuitSent = 10,
		[Token(Token = "0x4000FAA")]
		VRApplicationTransition_WaitingForExternalLaunch = 11,
		[Token(Token = "0x4000FAB")]
		VRApplicationTransition_NewAppLaunched = 20
	}
	[Token(Token = "0x20001A5")]
	public enum ChaperoneCalibrationState
	{
		[Token(Token = "0x4000FAD")]
		OK = 1,
		[Token(Token = "0x4000FAE")]
		Warning = 100,
		[Token(Token = "0x4000FAF")]
		Warning_BaseStationMayHaveMoved = 101,
		[Token(Token = "0x4000FB0")]
		Warning_BaseStationRemoved = 102,
		[Token(Token = "0x4000FB1")]
		Warning_SeatedBoundsInvalid = 103,
		[Token(Token = "0x4000FB2")]
		Error = 200,
		[Token(Token = "0x4000FB3")]
		Error_BaseStationUninitialized = 201,
		[Token(Token = "0x4000FB4")]
		Error_BaseStationConflict = 202,
		[Token(Token = "0x4000FB5")]
		Error_PlayAreaInvalid = 203,
		[Token(Token = "0x4000FB6")]
		Error_CollisionBoundsInvalid = 204
	}
	[Token(Token = "0x20001A6")]
	public enum EChaperoneConfigFile
	{
		[Token(Token = "0x4000FB8")]
		Live = 1,
		[Token(Token = "0x4000FB9")]
		Temp
	}
	[Token(Token = "0x20001A7")]
	public enum EChaperoneImportFlags
	{
		[Token(Token = "0x4000FBB")]
		EChaperoneImport_BoundsOnly = 1
	}
	[Token(Token = "0x20001A8")]
	public enum EVRCompositorError
	{
		[Token(Token = "0x4000FBD")]
		None = 0,
		[Token(Token = "0x4000FBE")]
		RequestFailed = 1,
		[Token(Token = "0x4000FBF")]
		IncompatibleVersion = 100,
		[Token(Token = "0x4000FC0")]
		DoNotHaveFocus = 101,
		[Token(Token = "0x4000FC1")]
		InvalidTexture = 102,
		[Token(Token = "0x4000FC2")]
		IsNotSceneApplication = 103,
		[Token(Token = "0x4000FC3")]
		TextureIsOnWrongDevice = 104,
		[Token(Token = "0x4000FC4")]
		TextureUsesUnsupportedFormat = 105,
		[Token(Token = "0x4000FC5")]
		SharedTexturesNotSupported = 106,
		[Token(Token = "0x4000FC6")]
		IndexOutOfRange = 107,
		[Token(Token = "0x4000FC7")]
		AlreadySubmitted = 108,
		[Token(Token = "0x4000FC8")]
		InvalidBounds = 109
	}
	[Token(Token = "0x20001A9")]
	public enum EVRCompositorTimingMode
	{
		[Token(Token = "0x4000FCA")]
		Implicit,
		[Token(Token = "0x4000FCB")]
		Explicit_RuntimePerformsPostPresentHandoff,
		[Token(Token = "0x4000FCC")]
		Explicit_ApplicationPerformsPostPresentHandoff
	}
	[Token(Token = "0x20001AA")]
	public enum VROverlayInputMethod
	{
		[Token(Token = "0x4000FCE")]
		None,
		[Token(Token = "0x4000FCF")]
		Mouse,
		[Token(Token = "0x4000FD0")]
		DualAnalog
	}
	[Token(Token = "0x20001AB")]
	public enum VROverlayTransformType
	{
		[Token(Token = "0x4000FD2")]
		VROverlayTransform_Absolute,
		[Token(Token = "0x4000FD3")]
		VROverlayTransform_TrackedDeviceRelative,
		[Token(Token = "0x4000FD4")]
		VROverlayTransform_SystemOverlay,
		[Token(Token = "0x4000FD5")]
		VROverlayTransform_TrackedComponent
	}
	[Token(Token = "0x20001AC")]
	public enum VROverlayFlags
	{
		[Token(Token = "0x4000FD7")]
		None,
		[Token(Token = "0x4000FD8")]
		Curved,
		[Token(Token = "0x4000FD9")]
		RGSS4X,
		[Token(Token = "0x4000FDA")]
		NoDashboardTab,
		[Token(Token = "0x4000FDB")]
		AcceptsGamepadEvents,
		[Token(Token = "0x4000FDC")]
		ShowGamepadFocus,
		[Token(Token = "0x4000FDD")]
		SendVRScrollEvents,
		[Token(Token = "0x4000FDE")]
		SendVRTouchpadEvents,
		[Token(Token = "0x4000FDF")]
		ShowTouchPadScrollWheel,
		[Token(Token = "0x4000FE0")]
		TransferOwnershipToInternalProcess,
		[Token(Token = "0x4000FE1")]
		SideBySide_Parallel,
		[Token(Token = "0x4000FE2")]
		SideBySide_Crossed,
		[Token(Token = "0x4000FE3")]
		Panorama,
		[Token(Token = "0x4000FE4")]
		StereoPanorama,
		[Token(Token = "0x4000FE5")]
		SortWithNonSceneOverlays,
		[Token(Token = "0x4000FE6")]
		VisibleInDashboard
	}
	[Token(Token = "0x20001AD")]
	public enum VRMessageOverlayResponse
	{
		[Token(Token = "0x4000FE8")]
		ButtonPress_0,
		[Token(Token = "0x4000FE9")]
		ButtonPress_1,
		[Token(Token = "0x4000FEA")]
		ButtonPress_2,
		[Token(Token = "0x4000FEB")]
		ButtonPress_3,
		[Token(Token = "0x4000FEC")]
		CouldntFindSystemOverlay,
		[Token(Token = "0x4000FED")]
		CouldntFindOrCreateClientOverlay,
		[Token(Token = "0x4000FEE")]
		ApplicationQuit
	}
	[Token(Token = "0x20001AE")]
	public enum EGamepadTextInputMode
	{
		[Token(Token = "0x4000FF0")]
		k_EGamepadTextInputModeNormal,
		[Token(Token = "0x4000FF1")]
		k_EGamepadTextInputModePassword,
		[Token(Token = "0x4000FF2")]
		k_EGamepadTextInputModeSubmit
	}
	[Token(Token = "0x20001AF")]
	public enum EGamepadTextInputLineMode
	{
		[Token(Token = "0x4000FF4")]
		k_EGamepadTextInputLineModeSingleLine,
		[Token(Token = "0x4000FF5")]
		k_EGamepadTextInputLineModeMultipleLines
	}
	[Token(Token = "0x20001B0")]
	public enum EOverlayDirection
	{
		[Token(Token = "0x4000FF7")]
		Up,
		[Token(Token = "0x4000FF8")]
		Down,
		[Token(Token = "0x4000FF9")]
		Left,
		[Token(Token = "0x4000FFA")]
		Right,
		[Token(Token = "0x4000FFB")]
		Count
	}
	[Token(Token = "0x20001B1")]
	public enum EVROverlayIntersectionMaskPrimitiveType
	{
		[Token(Token = "0x4000FFD")]
		OverlayIntersectionPrimitiveType_Rectangle,
		[Token(Token = "0x4000FFE")]
		OverlayIntersectionPrimitiveType_Circle
	}
	[Token(Token = "0x20001B2")]
	public enum EVRRenderModelError
	{
		[Token(Token = "0x4001000")]
		None = 0,
		[Token(Token = "0x4001001")]
		Loading = 100,
		[Token(Token = "0x4001002")]
		NotSupported = 200,
		[Token(Token = "0x4001003")]
		InvalidArg = 300,
		[Token(Token = "0x4001004")]
		InvalidModel = 301,
		[Token(Token = "0x4001005")]
		NoShapes = 302,
		[Token(Token = "0x4001006")]
		MultipleShapes = 303,
		[Token(Token = "0x4001007")]
		TooManyVertices = 304,
		[Token(Token = "0x4001008")]
		MultipleTextures = 305,
		[Token(Token = "0x4001009")]
		BufferTooSmall = 306,
		[Token(Token = "0x400100A")]
		NotEnoughNormals = 307,
		[Token(Token = "0x400100B")]
		NotEnoughTexCoords = 308,
		[Token(Token = "0x400100C")]
		InvalidTexture = 400
	}
	[Token(Token = "0x20001B3")]
	public enum EVRComponentProperty
	{
		[Token(Token = "0x400100E")]
		IsStatic = 1,
		[Token(Token = "0x400100F")]
		IsVisible = 2,
		[Token(Token = "0x4001010")]
		IsTouched = 4,
		[Token(Token = "0x4001011")]
		IsPressed = 8,
		[Token(Token = "0x4001012")]
		IsScrolled = 0x10
	}
	[Token(Token = "0x20001B4")]
	public enum EVRNotificationType
	{
		[Token(Token = "0x4001014")]
		Transient,
		[Token(Token = "0x4001015")]
		Persistent,
		[Token(Token = "0x4001016")]
		Transient_SystemWithUserValue
	}
	[Token(Token = "0x20001B5")]
	public enum EVRNotificationStyle
	{
		[Token(Token = "0x4001018")]
		None = 0,
		[Token(Token = "0x4001019")]
		Application = 100,
		[Token(Token = "0x400101A")]
		Contact_Disabled = 200,
		[Token(Token = "0x400101B")]
		Contact_Enabled = 201,
		[Token(Token = "0x400101C")]
		Contact_Active = 202
	}
	[Token(Token = "0x20001B6")]
	public enum EVRSettingsError
	{
		[Token(Token = "0x400101E")]
		None,
		[Token(Token = "0x400101F")]
		IPCFailed,
		[Token(Token = "0x4001020")]
		WriteFailed,
		[Token(Token = "0x4001021")]
		ReadFailed,
		[Token(Token = "0x4001022")]
		JsonParseFailed,
		[Token(Token = "0x4001023")]
		UnsetSettingHasNoDefault
	}
	[Token(Token = "0x20001B7")]
	public enum EVRScreenshotError
	{
		[Token(Token = "0x4001025")]
		None = 0,
		[Token(Token = "0x4001026")]
		RequestFailed = 1,
		[Token(Token = "0x4001027")]
		IncompatibleVersion = 100,
		[Token(Token = "0x4001028")]
		NotFound = 101,
		[Token(Token = "0x4001029")]
		BufferTooSmall = 102,
		[Token(Token = "0x400102A")]
		ScreenshotAlreadyInProgress = 108
	}
	[Token(Token = "0x20001B8")]
	public enum EVRSkeletalTransformSpace
	{
		[Token(Token = "0x400102C")]
		Model,
		[Token(Token = "0x400102D")]
		Parent,
		[Token(Token = "0x400102E")]
		Additive
	}
	[Token(Token = "0x20001B9")]
	public enum EVRInputFilterCancelType
	{
		[Token(Token = "0x4001030")]
		VRInputFilterCancel_Timers,
		[Token(Token = "0x4001031")]
		VRInputFilterCancel_Momentum
	}
	[Token(Token = "0x20001BA")]
	public enum EIOBufferError
	{
		[Token(Token = "0x4001033")]
		IOBuffer_Success = 0,
		[Token(Token = "0x4001034")]
		IOBuffer_OperationFailed = 100,
		[Token(Token = "0x4001035")]
		IOBuffer_InvalidHandle = 101,
		[Token(Token = "0x4001036")]
		IOBuffer_InvalidArgument = 102,
		[Token(Token = "0x4001037")]
		IOBuffer_PathExists = 103,
		[Token(Token = "0x4001038")]
		IOBuffer_PathDoesNotExist = 104,
		[Token(Token = "0x4001039")]
		IOBuffer_Permission = 105
	}
	[Token(Token = "0x20001BB")]
	public enum EIOBufferMode
	{
		[Token(Token = "0x400103B")]
		Read = 1,
		[Token(Token = "0x400103C")]
		Write = 2,
		[Token(Token = "0x400103D")]
		Create = 0x200
	}
	[StructLayout(2)]
	[Token(Token = "0x20001BC")]
	public struct VREvent_Data_t
	{
		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Reserved_t reserved;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Controller_t controller;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Mouse_t mouse;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Scroll_t scroll;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Process_t process;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Notification_t notification;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Overlay_t overlay;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Status_t status;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Ipd_t ipd;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Chaperone_t chaperone;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_PerformanceTest_t performanceTest;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_TouchPadMove_t touchPadMove;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_SeatedZeroPoseReset_t seatedZeroPoseReset;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Screenshot_t screenshot;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_ScreenshotProgress_t screenshotProgress;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_ApplicationLaunch_t applicationLaunch;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_EditingCameraSurface_t cameraSurface;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_MessageOverlay_t messageOverlay;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Property_t property;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_DualAnalog_t dualAnalog;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_HapticVibration_t hapticVibration;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_WebConsole_t webConsole;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_InputBindingLoad_t inputBinding;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_SpatialAnchor_t spatialAnchor;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Keyboard_t keyboard;
	}
	[StructLayout(2)]
	[Token(Token = "0x20001BD")]
	public struct VROverlayIntersectionMaskPrimitive_Data_t
	{
		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntersectionMaskRectangle_t m_Rectangle;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntersectionMaskCircle_t m_Circle;
	}
	[Token(Token = "0x20001BE")]
	public struct HmdMatrix34_t
	{
		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m0;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m1;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m2;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m3;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m4;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m5;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m6;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m7;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m8;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m9;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m10;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m11;
	}
	[Token(Token = "0x20001BF")]
	public struct HmdMatrix33_t
	{
		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m0;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m1;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m2;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m3;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m4;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m5;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m6;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m7;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m8;
	}
	[Token(Token = "0x20001C0")]
	public struct HmdMatrix44_t
	{
		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m0;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m1;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m2;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m3;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m4;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m5;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m6;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m7;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m8;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m9;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m10;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m11;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m12;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m13;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m14;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m15;
	}
	[Token(Token = "0x20001C1")]
	public struct HmdVector3_t
	{
		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float v2;
	}
	[Token(Token = "0x20001C2")]
	public struct HmdVector4_t
	{
		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float v2;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float v3;
	}
	[Token(Token = "0x20001C3")]
	public struct HmdVector3d_t
	{
		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double v0;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double v1;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double v2;
	}
	[Token(Token = "0x20001C4")]
	public struct HmdVector2_t
	{
		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;
	}
	[Token(Token = "0x20001C5")]
	public struct HmdQuaternion_t
	{
		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double w;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double x;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double y;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double z;
	}
	[Token(Token = "0x20001C6")]
	public struct HmdQuaternionf_t
	{
		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float w;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float x;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float y;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float z;
	}
	[Token(Token = "0x20001C7")]
	public struct HmdColor_t
	{
		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float r;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float g;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float b;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float a;
	}
	[Token(Token = "0x20001C8")]
	public struct HmdQuad_t
	{
		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vCorners0;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vCorners1;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HmdVector3_t vCorners2;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public HmdVector3_t vCorners3;
	}
	[Token(Token = "0x20001C9")]
	public struct HmdRect2_t
	{
		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector2_t vTopLeft;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HmdVector2_t vBottomRight;
	}
	[Token(Token = "0x20001CA")]
	public struct DistortionCoordinates_t
	{
		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float rfRed0;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float rfRed1;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float rfGreen0;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rfGreen1;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float rfBlue0;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rfBlue1;
	}
	[Token(Token = "0x20001CB")]
	public struct Texture_t
	{
		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr handle;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ETextureType eType;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public EColorSpace eColorSpace;
	}
	[Token(Token = "0x20001CC")]
	public struct TrackedDevicePose_t
	{
		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mDeviceToAbsoluteTracking;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdVector3_t vVelocity;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public HmdVector3_t vAngularVelocity;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ETrackingResult eTrackingResult;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool bPoseIsValid;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool bDeviceIsConnected;
	}
	[Token(Token = "0x20001CD")]
	public struct VRTextureBounds_t
	{
		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float uMin;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float vMin;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float uMax;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float vMax;
	}
	[Token(Token = "0x20001CE")]
	public struct VRTextureWithPose_t
	{
		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mDeviceToAbsoluteTracking;
	}
	[Token(Token = "0x20001CF")]
	public struct VRTextureDepthInfo_t
	{
		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr handle;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public HmdMatrix44_t mProjection;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public HmdVector2_t vRange;
	}
	[Token(Token = "0x20001D0")]
	public struct VRTextureWithDepth_t
	{
		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTextureDepthInfo_t depth;
	}
	[Token(Token = "0x20001D1")]
	public struct VRTextureWithPoseAndDepth_t
	{
		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTextureDepthInfo_t depth;
	}
	[Token(Token = "0x20001D2")]
	public struct VRVulkanTextureData_t
	{
		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong m_nImage;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pDevice;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public IntPtr m_pPhysicalDevice;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr m_pInstance;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr m_pQueue;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint m_nQueueFamilyIndex;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public uint m_nWidth;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public uint m_nHeight;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public uint m_nFormat;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_nSampleCount;
	}
	[Token(Token = "0x20001D3")]
	public struct D3D12TextureData_t
	{
		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pResource;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public IntPtr m_pCommandQueue;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNodeMask;
	}
	[Token(Token = "0x20001D4")]
	public struct VREvent_Controller_t
	{
		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint button;
	}
	[Token(Token = "0x20001D5")]
	public struct VREvent_Mouse_t
	{
		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint button;
	}
	[Token(Token = "0x20001D6")]
	public struct VREvent_Scroll_t
	{
		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float xdelta;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float ydelta;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint repeatCount;
	}
	[Token(Token = "0x20001D7")]
	public struct VREvent_TouchPadMove_t
	{
		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bFingerDown;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float flSecondsFingerDown;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float fValueXFirst;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float fValueYFirst;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float fValueXRaw;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fValueYRaw;
	}
	[Token(Token = "0x20001D8")]
	public struct VREvent_Notification_t
	{
		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong ulUserValue;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint notificationId;
	}
	[Token(Token = "0x20001D9")]
	public struct VREvent_Process_t
	{
		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint pid;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint oldPid;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool bForced;
	}
	[Token(Token = "0x20001DA")]
	public struct VREvent_Overlay_t
	{
		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong overlayHandle;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong devicePath;
	}
	[Token(Token = "0x20001DB")]
	public struct VREvent_Status_t
	{
		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint statusState;
	}
	[Token(Token = "0x20001DC")]
	public struct VREvent_Keyboard_t
	{
		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte cNewInput0;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public byte cNewInput1;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public byte cNewInput2;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public byte cNewInput3;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public byte cNewInput4;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public byte cNewInput5;

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public byte cNewInput6;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public byte cNewInput7;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong uUserValue;

		[Token(Token = "0x1700010C")]
		public string cNewInput
		{
			[Token(Token = "0x6000A11")]
			[Address(RVA = "0x47DD5C", Offset = "0x47DD5C", VA = "0x47DD5C")]
			get
			{
				return null;
			}
		}
	}
	[Token(Token = "0x20001DD")]
	public struct VREvent_Ipd_t
	{
		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float ipdMeters;
	}
	[Token(Token = "0x20001DE")]
	public struct VREvent_Chaperone_t
	{
		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong m_nPreviousUniverse;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong m_nCurrentUniverse;
	}
	[Token(Token = "0x20001DF")]
	public struct VREvent_Reserved_t
	{
		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong reserved0;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong reserved1;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong reserved2;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ulong reserved3;
	}
	[Token(Token = "0x20001E0")]
	public struct VREvent_PerformanceTest_t
	{
		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nFidelityLevel;
	}
	[Token(Token = "0x20001E1")]
	public struct VREvent_SeatedZeroPoseReset_t
	{
		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bResetBySystemMenu;
	}
	[Token(Token = "0x20001E2")]
	public struct VREvent_Screenshot_t
	{
		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint handle;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint type;
	}
	[Token(Token = "0x20001E3")]
	public struct VREvent_ScreenshotProgress_t
	{
		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float progress;
	}
	[Token(Token = "0x20001E4")]
	public struct VREvent_ApplicationLaunch_t
	{
		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint pid;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint unArgsHandle;
	}
	[Token(Token = "0x20001E5")]
	public struct VREvent_EditingCameraSurface_t
	{
		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong overlayHandle;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint nVisualMode;
	}
	[Token(Token = "0x20001E6")]
	public struct VREvent_MessageOverlay_t
	{
		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unVRMessageOverlayResponse;
	}
	[Token(Token = "0x20001E7")]
	public struct VREvent_Property_t
	{
		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong container;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ETrackedDeviceProperty prop;
	}
	[Token(Token = "0x20001E8")]
	public struct VREvent_DualAnalog_t
	{
		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float transformedX;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float transformedY;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EDualAnalogWhich which;
	}
	[Token(Token = "0x20001E9")]
	public struct VREvent_HapticVibration_t
	{
		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong containerHandle;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong componentHandle;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float fDurationSeconds;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fFrequency;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fAmplitude;
	}
	[Token(Token = "0x20001EA")]
	public struct VREvent_WebConsole_t
	{
		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong webConsoleHandle;
	}
	[Token(Token = "0x20001EB")]
	public struct VREvent_InputBindingLoad_t
	{
		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong ulAppContainer;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong pathMessage;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong pathUrl;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ulong pathControllerType;
	}
	[Token(Token = "0x20001EC")]
	public struct VREvent_InputActionManifestLoad_t
	{
		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong pathAppKey;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong pathMessage;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong pathMessageParam;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ulong pathManifestPath;
	}
	[Token(Token = "0x20001ED")]
	public struct VREvent_SpatialAnchor_t
	{
		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unHandle;
	}
	[Token(Token = "0x20001EE")]
	public struct VREvent_t
	{
		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint eventType;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint trackedDeviceIndex;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float eventAgeSeconds;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VREvent_Data_t data;
	}
	[Token(Token = "0x20001EF")]
	public struct VREvent_t_Packed
	{
		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint eventType;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint trackedDeviceIndex;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float eventAgeSeconds;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public VREvent_Data_t data;

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x47DF28", Offset = "0x47DF28", VA = "0x47DF28")]
		public VREvent_t_Packed(VREvent_t unpacked)
		{
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x47DF7C", Offset = "0x47DF7C", VA = "0x47DF7C")]
		public void Unpack(ref VREvent_t unpacked)
		{
		}
	}
	[Token(Token = "0x20001F0")]
	public struct HiddenAreaMesh_t
	{
		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr pVertexData;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint unTriangleCount;
	}
	[Token(Token = "0x20001F1")]
	public struct VRControllerAxis_t
	{
		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;
	}
	[Token(Token = "0x20001F2")]
	public struct VRControllerState_t
	{
		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unPacketNum;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong ulButtonPressed;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong ulButtonTouched;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRControllerAxis_t rAxis0;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRControllerAxis_t rAxis1;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VRControllerAxis_t rAxis2;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VRControllerAxis_t rAxis3;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public VRControllerAxis_t rAxis4;
	}
	[Token(Token = "0x20001F3")]
	public struct VRControllerState_t_Packed
	{
		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unPacketNum;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ulong ulButtonPressed;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public ulong ulButtonTouched;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public VRControllerAxis_t rAxis0;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public VRControllerAxis_t rAxis1;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public VRControllerAxis_t rAxis2;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public VRControllerAxis_t rAxis3;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public VRControllerAxis_t rAxis4;

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x47DC68", Offset = "0x47DC68", VA = "0x47DC68")]
		public VRControllerState_t_Packed(VRControllerState_t unpacked)
		{
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x47DCE4", Offset = "0x47DCE4", VA = "0x47DCE4")]
		public void Unpack(ref VRControllerState_t unpacked)
		{
		}
	}
	[Token(Token = "0x20001F4")]
	public struct Compositor_OverlaySettings
	{
		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint size;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool curved;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public bool antialias;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float scale;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float distance;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float alpha;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float uOffset;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float vOffset;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float uScale;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float vScale;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float gridDivs;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float gridWidth;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float gridScale;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdMatrix44_t transform;
	}
	[Token(Token = "0x20001F5")]
	public struct VRBoneTransform_t
	{
		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector4_t position;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HmdQuaternionf_t orientation;
	}
	[Token(Token = "0x20001F6")]
	public struct CameraVideoStreamFrameHeader_t
	{
		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EVRTrackedCameraFrameType eFrameType;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint nWidth;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint nHeight;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint nBytesPerPixel;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint nFrameSequence;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TrackedDevicePose_t standingTrackedDevicePose;
	}
	[Token(Token = "0x20001F7")]
	public struct DriverDirectMode_FrameTiming
	{
		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nSize;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumMisPresented;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nReprojectionFlags;
	}
	[Token(Token = "0x20001F8")]
	public struct ImuSample_t
	{
		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double fSampleTime;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HmdVector3d_t vAccel;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HmdVector3d_t vGyro;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public uint unOffScaleFlags;
	}
	[Token(Token = "0x20001F9")]
	public struct AppOverrideKeys_t
	{
		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr pchKey;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public IntPtr pchValue;
	}
	[Token(Token = "0x20001FA")]
	public struct Compositor_FrameTiming
	{
		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nSize;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nFrameIndex;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumMisPresented;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint m_nReprojectionFlags;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double m_flSystemTimeInSeconds;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_flPreSubmitGpuMs;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_flPostSubmitGpuMs;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_flTotalRenderGpuMs;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_flCompositorRenderGpuMs;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_flCompositorRenderCpuMs;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_flCompositorIdleCpuMs;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_flClientFrameIntervalMs;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_flPresentCallCpuMs;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_flWaitForPresentCpuMs;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float m_flSubmitFrameMs;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float m_flWaitGetPosesCalledMs;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float m_flNewPosesReadyMs;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float m_flNewFrameReadyMs;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float m_flCompositorUpdateStartMs;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float m_flCompositorUpdateEndMs;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float m_flCompositorRenderStartMs;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TrackedDevicePose_t m_HmdPose;
	}
	[Token(Token = "0x20001FB")]
	public struct Compositor_CumulativeStats
	{
		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nPid;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumReprojectedFrames;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNumFramePresentsOnStartup;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint m_nNumDroppedFramesOnStartup;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint m_nNumReprojectedFramesOnStartup;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public uint m_nNumLoading;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public uint m_nNumFramePresentsLoading;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public uint m_nNumDroppedFramesLoading;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_nNumReprojectedFramesLoading;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public uint m_nNumTimedOut;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public uint m_nNumFramePresentsTimedOut;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public uint m_nNumDroppedFramesTimedOut;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public uint m_nNumReprojectedFramesTimedOut;
	}
	[Token(Token = "0x20001FC")]
	public struct VROverlayIntersectionParams_t
	{
		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vSource;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vDirection;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ETrackingUniverseOrigin eOrigin;
	}
	[Token(Token = "0x20001FD")]
	public struct VROverlayIntersectionResults_t
	{
		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vPoint;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vNormal;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HmdVector2_t vUVs;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fDistance;
	}
	[Token(Token = "0x20001FE")]
	public struct IntersectionMaskRectangle_t
	{
		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flTopLeftX;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m_flTopLeftY;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_flWidth;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m_flHeight;
	}
	[Token(Token = "0x20001FF")]
	public struct IntersectionMaskCircle_t
	{
		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flCenterX;

		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m_flCenterY;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_flRadius;
	}
	[Token(Token = "0x2000200")]
	public struct VROverlayIntersectionMaskPrimitive_t
	{
		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EVROverlayIntersectionMaskPrimitiveType m_nPrimitiveType;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public VROverlayIntersectionMaskPrimitive_Data_t m_Primitive;
	}
	[Token(Token = "0x2000201")]
	public struct RenderModel_ComponentState_t
	{
		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mTrackingToComponentRenderModel;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdMatrix34_t mTrackingToComponentLocal;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public uint uProperties;
	}
	[Token(Token = "0x2000202")]
	public struct RenderModel_Vertex_t
	{
		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vPosition;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vNormal;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rfTextureCoord0;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float rfTextureCoord1;
	}
	[Token(Token = "0x2000203")]
	public struct RenderModel_TextureMap_t
	{
		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ushort unWidth;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public ushort unHeight;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public IntPtr rubTextureMapData;
	}
	[Token(Token = "0x2000204")]
	public struct RenderModel_TextureMap_t_Packed
	{
		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ushort unWidth;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public ushort unHeight;

		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public IntPtr rubTextureMapData;

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x47DBF0", Offset = "0x47DBF0", VA = "0x47DBF0")]
		public RenderModel_TextureMap_t_Packed(RenderModel_TextureMap_t unpacked)
		{
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x47DC04", Offset = "0x47DC04", VA = "0x47DC04")]
		public void Unpack(ref RenderModel_TextureMap_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000205")]
	public struct RenderModel_t
	{
		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr rVertexData;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint unVertexCount;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr rIndexData;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint unTriangleCount;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int diffuseTextureId;
	}
	[Token(Token = "0x2000206")]
	public struct RenderModel_t_Packed
	{
		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr rVertexData;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint unVertexCount;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr rIndexData;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint unTriangleCount;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int diffuseTextureId;

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x47DC20", Offset = "0x47DC20", VA = "0x47DC20")]
		public RenderModel_t_Packed(RenderModel_t unpacked)
		{
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x47DC3C", Offset = "0x47DC3C", VA = "0x47DC3C")]
		public void Unpack(ref RenderModel_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000207")]
	public struct RenderModel_ControllerMode_State_t
	{
		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bScrollWheelVisible;
	}
	[Token(Token = "0x2000208")]
	public struct NotificationBitmap_t
	{
		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pImageData;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int m_nWidth;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int m_nHeight;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int m_nBytesPerPixel;
	}
	[Token(Token = "0x2000209")]
	public struct CVRSettingHelper
	{
		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pSettings;
	}
	[Token(Token = "0x200020A")]
	public struct InputAnalogActionData_t
	{
		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bActive;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong activeOrigin;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float x;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float y;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float z;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float deltaX;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float deltaY;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float deltaZ;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fUpdateTime;
	}
	[Token(Token = "0x200020B")]
	public struct InputDigitalActionData_t
	{
		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bActive;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong activeOrigin;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool bState;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool bChanged;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fUpdateTime;
	}
	[Token(Token = "0x200020C")]
	public struct InputPoseActionData_t
	{
		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bActive;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong activeOrigin;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TrackedDevicePose_t pose;
	}
	[Token(Token = "0x200020D")]
	public struct InputSkeletalActionData_t
	{
		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bActive;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong activeOrigin;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint boneCount;
	}
	[Token(Token = "0x200020E")]
	public struct InputOriginInfo_t
	{
		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong devicePath;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint trackedDeviceIndex;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public byte rchRenderModelComponentName0;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		public byte rchRenderModelComponentName1;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		public byte rchRenderModelComponentName2;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
		public byte rchRenderModelComponentName3;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte rchRenderModelComponentName4;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public byte rchRenderModelComponentName5;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public byte rchRenderModelComponentName6;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public byte rchRenderModelComponentName7;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public byte rchRenderModelComponentName8;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public byte rchRenderModelComponentName9;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public byte rchRenderModelComponentName10;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public byte rchRenderModelComponentName11;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public byte rchRenderModelComponentName12;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public byte rchRenderModelComponentName13;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public byte rchRenderModelComponentName14;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public byte rchRenderModelComponentName15;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public byte rchRenderModelComponentName16;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public byte rchRenderModelComponentName17;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		public byte rchRenderModelComponentName18;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		public byte rchRenderModelComponentName19;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte rchRenderModelComponentName20;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public byte rchRenderModelComponentName21;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public byte rchRenderModelComponentName22;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public byte rchRenderModelComponentName23;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public byte rchRenderModelComponentName24;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public byte rchRenderModelComponentName25;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public byte rchRenderModelComponentName26;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		public byte rchRenderModelComponentName27;

		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public byte rchRenderModelComponentName28;

		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public byte rchRenderModelComponentName29;

		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public byte rchRenderModelComponentName30;

		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public byte rchRenderModelComponentName31;

		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public byte rchRenderModelComponentName32;

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public byte rchRenderModelComponentName33;

		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		public byte rchRenderModelComponentName34;

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
		public byte rchRenderModelComponentName35;

		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public byte rchRenderModelComponentName36;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public byte rchRenderModelComponentName37;

		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public byte rchRenderModelComponentName38;

		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		public byte rchRenderModelComponentName39;

		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public byte rchRenderModelComponentName40;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public byte rchRenderModelComponentName41;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		public byte rchRenderModelComponentName42;

		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
		public byte rchRenderModelComponentName43;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public byte rchRenderModelComponentName44;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public byte rchRenderModelComponentName45;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public byte rchRenderModelComponentName46;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		public byte rchRenderModelComponentName47;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public byte rchRenderModelComponentName48;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public byte rchRenderModelComponentName49;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		public byte rchRenderModelComponentName50;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
		public byte rchRenderModelComponentName51;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public byte rchRenderModelComponentName52;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public byte rchRenderModelComponentName53;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public byte rchRenderModelComponentName54;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		public byte rchRenderModelComponentName55;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public byte rchRenderModelComponentName56;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public byte rchRenderModelComponentName57;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		public byte rchRenderModelComponentName58;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
		public byte rchRenderModelComponentName59;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public byte rchRenderModelComponentName60;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public byte rchRenderModelComponentName61;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		public byte rchRenderModelComponentName62;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		public byte rchRenderModelComponentName63;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public byte rchRenderModelComponentName64;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public byte rchRenderModelComponentName65;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		public byte rchRenderModelComponentName66;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
		public byte rchRenderModelComponentName67;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public byte rchRenderModelComponentName68;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public byte rchRenderModelComponentName69;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public byte rchRenderModelComponentName70;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		public byte rchRenderModelComponentName71;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public byte rchRenderModelComponentName72;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public byte rchRenderModelComponentName73;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		public byte rchRenderModelComponentName74;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x57")]
		public byte rchRenderModelComponentName75;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public byte rchRenderModelComponentName76;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public byte rchRenderModelComponentName77;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		public byte rchRenderModelComponentName78;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		public byte rchRenderModelComponentName79;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public byte rchRenderModelComponentName80;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		public byte rchRenderModelComponentName81;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
		public byte rchRenderModelComponentName82;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
		public byte rchRenderModelComponentName83;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public byte rchRenderModelComponentName84;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public byte rchRenderModelComponentName85;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		public byte rchRenderModelComponentName86;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		public byte rchRenderModelComponentName87;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public byte rchRenderModelComponentName88;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		public byte rchRenderModelComponentName89;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		public byte rchRenderModelComponentName90;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
		public byte rchRenderModelComponentName91;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public byte rchRenderModelComponentName92;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public byte rchRenderModelComponentName93;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		public byte rchRenderModelComponentName94;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		public byte rchRenderModelComponentName95;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public byte rchRenderModelComponentName96;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		public byte rchRenderModelComponentName97;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
		public byte rchRenderModelComponentName98;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
		public byte rchRenderModelComponentName99;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public byte rchRenderModelComponentName100;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public byte rchRenderModelComponentName101;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		public byte rchRenderModelComponentName102;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		public byte rchRenderModelComponentName103;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public byte rchRenderModelComponentName104;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		public byte rchRenderModelComponentName105;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
		public byte rchRenderModelComponentName106;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x77")]
		public byte rchRenderModelComponentName107;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public byte rchRenderModelComponentName108;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		public byte rchRenderModelComponentName109;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		public byte rchRenderModelComponentName110;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
		public byte rchRenderModelComponentName111;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public byte rchRenderModelComponentName112;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		public byte rchRenderModelComponentName113;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
		public byte rchRenderModelComponentName114;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7F")]
		public byte rchRenderModelComponentName115;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public byte rchRenderModelComponentName116;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		public byte rchRenderModelComponentName117;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		public byte rchRenderModelComponentName118;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
		public byte rchRenderModelComponentName119;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public byte rchRenderModelComponentName120;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		public byte rchRenderModelComponentName121;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
		public byte rchRenderModelComponentName122;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x87")]
		public byte rchRenderModelComponentName123;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public byte rchRenderModelComponentName124;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		public byte rchRenderModelComponentName125;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		public byte rchRenderModelComponentName126;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
		public byte rchRenderModelComponentName127;

		[Token(Token = "0x1700010D")]
		public string rchRenderModelComponentName
		{
			[Token(Token = "0x6000A1A")]
			[Address(RVA = "0x47A710", Offset = "0x47A710", VA = "0x47A710")]
			get
			{
				return null;
			}
		}
	}
	[Token(Token = "0x200020F")]
	public struct VRActiveActionSet_t
	{
		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong ulActionSet;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong ulRestrictedToDevice;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong ulSecondaryActionSet;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint unPadding;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int nPriority;
	}
	[Token(Token = "0x2000210")]
	public struct SpatialAnchorPose_t
	{
		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mAnchorToAbsoluteTracking;
	}
	[Token(Token = "0x2000211")]
	public struct COpenVRContext
	{
		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pVRSystem;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public IntPtr m_pVRChaperone;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pVRChaperoneSetup;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public IntPtr m_pVRCompositor;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr m_pVROverlay;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr m_pVRResources;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr m_pVRRenderModels;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public IntPtr m_pVRExtendedDisplay;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr m_pVRSettings;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public IntPtr m_pVRApplications;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IntPtr m_pVRTrackedCamera;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public IntPtr m_pVRScreenshots;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IntPtr m_pVRDriverManager;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public IntPtr m_pVRInput;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IntPtr m_pVRIOBuffer;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public IntPtr m_pVRSpatialAnchors;
	}
	[Token(Token = "0x2000212")]
	public class OpenVR
	{
		[Token(Token = "0x20003FB")]
		private class COpenVRContext
		{
			[Token(Token = "0x4001607")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private CVRSystem m_pVRSystem;

			[Token(Token = "0x4001608")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private CVRChaperone m_pVRChaperone;

			[Token(Token = "0x4001609")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private CVRChaperoneSetup m_pVRChaperoneSetup;

			[Token(Token = "0x400160A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private CVRCompositor m_pVRCompositor;

			[Token(Token = "0x400160B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private CVROverlay m_pVROverlay;

			[Token(Token = "0x400160C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private CVRRenderModels m_pVRRenderModels;

			[Token(Token = "0x400160D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private CVRExtendedDisplay m_pVRExtendedDisplay;

			[Token(Token = "0x400160E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private CVRSettings m_pVRSettings;

			[Token(Token = "0x400160F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private CVRApplications m_pVRApplications;

			[Token(Token = "0x4001610")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private CVRScreenshots m_pVRScreenshots;

			[Token(Token = "0x4001611")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CVRTrackedCamera m_pVRTrackedCamera;

			[Token(Token = "0x4001612")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private CVRInput m_pVRInput;

			[Token(Token = "0x4001613")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private CVRSpatialAnchors m_pVRSpatialAnchors;

			[Token(Token = "0x600123D")]
			[Address(RVA = "0x47C484", Offset = "0x47C484", VA = "0x47C484")]
			public COpenVRContext()
			{
			}

			[Token(Token = "0x600123E")]
			[Address(RVA = "0x47D9BC", Offset = "0x47D9BC", VA = "0x47D9BC")]
			public void Clear()
			{
			}

			[Token(Token = "0x600123F")]
			[Address(RVA = "0x47DA60", Offset = "0x47DA60", VA = "0x47DA60")]
			private void CheckClear()
			{
			}

			[Token(Token = "0x6001240")]
			[Address(RVA = "0x47C548", Offset = "0x47C548", VA = "0x47C548")]
			public CVRSystem VRSystem()
			{
				return null;
			}

			[Token(Token = "0x6001241")]
			[Address(RVA = "0x47C6AC", Offset = "0x47C6AC", VA = "0x47C6AC")]
			public CVRChaperone VRChaperone()
			{
				return null;
			}

			[Token(Token = "0x6001242")]
			[Address(RVA = "0x47C810", Offset = "0x47C810", VA = "0x47C810")]
			public CVRChaperoneSetup VRChaperoneSetup()
			{
				return null;
			}

			[Token(Token = "0x6001243")]
			[Address(RVA = "0x47C974", Offset = "0x47C974", VA = "0x47C974")]
			public CVRCompositor VRCompositor()
			{
				return null;
			}

			[Token(Token = "0x6001244")]
			[Address(RVA = "0x47CAD8", Offset = "0x47CAD8", VA = "0x47CAD8")]
			public CVROverlay VROverlay()
			{
				return null;
			}

			[Token(Token = "0x6001245")]
			[Address(RVA = "0x47CC3C", Offset = "0x47CC3C", VA = "0x47CC3C")]
			public CVRRenderModels VRRenderModels()
			{
				return null;
			}

			[Token(Token = "0x6001246")]
			[Address(RVA = "0x47CDA0", Offset = "0x47CDA0", VA = "0x47CDA0")]
			public CVRExtendedDisplay VRExtendedDisplay()
			{
				return null;
			}

			[Token(Token = "0x6001247")]
			[Address(RVA = "0x47CF04", Offset = "0x47CF04", VA = "0x47CF04")]
			public CVRSettings VRSettings()
			{
				return null;
			}

			[Token(Token = "0x6001248")]
			[Address(RVA = "0x47D068", Offset = "0x47D068", VA = "0x47D068")]
			public CVRApplications VRApplications()
			{
				return null;
			}

			[Token(Token = "0x6001249")]
			[Address(RVA = "0x47D1CC", Offset = "0x47D1CC", VA = "0x47D1CC")]
			public CVRScreenshots VRScreenshots()
			{
				return null;
			}

			[Token(Token = "0x600124A")]
			[Address(RVA = "0x47D330", Offset = "0x47D330", VA = "0x47D330")]
			public CVRTrackedCamera VRTrackedCamera()
			{
				return null;
			}

			[Token(Token = "0x600124B")]
			[Address(RVA = "0x47D494", Offset = "0x47D494", VA = "0x47D494")]
			public CVRInput VRInput()
			{
				return null;
			}

			[Token(Token = "0x600124C")]
			[Address(RVA = "0x47D5F8", Offset = "0x47D5F8", VA = "0x47D5F8")]
			public CVRSpatialAnchors VRSpatialAnchors()
			{
				return null;
			}
		}

		[Token(Token = "0x4001244")]
		public const uint k_nDriverNone = uint.MaxValue;

		[Token(Token = "0x4001245")]
		public const uint k_unMaxDriverDebugResponseSize = 32768u;

		[Token(Token = "0x4001246")]
		public const uint k_unTrackedDeviceIndex_Hmd = 0u;

		[Token(Token = "0x4001247")]
		public const uint k_unMaxTrackedDeviceCount = 64u;

		[Token(Token = "0x4001248")]
		public const uint k_unTrackedDeviceIndexOther = 4294967294u;

		[Token(Token = "0x4001249")]
		public const uint k_unTrackedDeviceIndexInvalid = uint.MaxValue;

		[Token(Token = "0x400124A")]
		public const ulong k_ulInvalidPropertyContainer = 0uL;

		[Token(Token = "0x400124B")]
		public const uint k_unInvalidPropertyTag = 0u;

		[Token(Token = "0x400124C")]
		public const ulong k_ulInvalidDriverHandle = 0uL;

		[Token(Token = "0x400124D")]
		public const uint k_unFloatPropertyTag = 1u;

		[Token(Token = "0x400124E")]
		public const uint k_unInt32PropertyTag = 2u;

		[Token(Token = "0x400124F")]
		public const uint k_unUint64PropertyTag = 3u;

		[Token(Token = "0x4001250")]
		public const uint k_unBoolPropertyTag = 4u;

		[Token(Token = "0x4001251")]
		public const uint k_unStringPropertyTag = 5u;

		[Token(Token = "0x4001252")]
		public const uint k_unHmdMatrix34PropertyTag = 20u;

		[Token(Token = "0x4001253")]
		public const uint k_unHmdMatrix44PropertyTag = 21u;

		[Token(Token = "0x4001254")]
		public const uint k_unHmdVector3PropertyTag = 22u;

		[Token(Token = "0x4001255")]
		public const uint k_unHmdVector4PropertyTag = 23u;

		[Token(Token = "0x4001256")]
		public const uint k_unHiddenAreaPropertyTag = 30u;

		[Token(Token = "0x4001257")]
		public const uint k_unPathHandleInfoTag = 31u;

		[Token(Token = "0x4001258")]
		public const uint k_unActionPropertyTag = 32u;

		[Token(Token = "0x4001259")]
		public const uint k_unInputValuePropertyTag = 33u;

		[Token(Token = "0x400125A")]
		public const uint k_unWildcardPropertyTag = 34u;

		[Token(Token = "0x400125B")]
		public const uint k_unHapticVibrationPropertyTag = 35u;

		[Token(Token = "0x400125C")]
		public const uint k_unSkeletonPropertyTag = 36u;

		[Token(Token = "0x400125D")]
		public const uint k_unSpatialAnchorPosePropertyTag = 40u;

		[Token(Token = "0x400125E")]
		public const uint k_unOpenVRInternalReserved_Start = 1000u;

		[Token(Token = "0x400125F")]
		public const uint k_unOpenVRInternalReserved_End = 10000u;

		[Token(Token = "0x4001260")]
		public const uint k_unMaxPropertyStringSize = 32768u;

		[Token(Token = "0x4001261")]
		public const ulong k_ulInvalidActionHandle = 0uL;

		[Token(Token = "0x4001262")]
		public const ulong k_ulInvalidActionSetHandle = 0uL;

		[Token(Token = "0x4001263")]
		public const ulong k_ulInvalidInputValueHandle = 0uL;

		[Token(Token = "0x4001264")]
		public const uint k_unControllerStateAxisCount = 5u;

		[Token(Token = "0x4001265")]
		public const ulong k_ulOverlayHandleInvalid = 0uL;

		[Token(Token = "0x4001266")]
		public const uint k_unScreenshotHandleInvalid = 0u;

		[Token(Token = "0x4001267")]
		public const string IVRSystem_Version = "IVRSystem_019";

		[Token(Token = "0x4001268")]
		public const string IVRExtendedDisplay_Version = "IVRExtendedDisplay_001";

		[Token(Token = "0x4001269")]
		public const string IVRTrackedCamera_Version = "IVRTrackedCamera_003";

		[Token(Token = "0x400126A")]
		public const uint k_unMaxApplicationKeyLength = 128u;

		[Token(Token = "0x400126B")]
		public const string k_pch_MimeType_HomeApp = "vr/home";

		[Token(Token = "0x400126C")]
		public const string k_pch_MimeType_GameTheater = "vr/game_theater";

		[Token(Token = "0x400126D")]
		public const string IVRApplications_Version = "IVRApplications_006";

		[Token(Token = "0x400126E")]
		public const string IVRChaperone_Version = "IVRChaperone_003";

		[Token(Token = "0x400126F")]
		public const string IVRChaperoneSetup_Version = "IVRChaperoneSetup_005";

		[Token(Token = "0x4001270")]
		public const string IVRCompositor_Version = "IVRCompositor_022";

		[Token(Token = "0x4001271")]
		public const uint k_unVROverlayMaxKeyLength = 128u;

		[Token(Token = "0x4001272")]
		public const uint k_unVROverlayMaxNameLength = 128u;

		[Token(Token = "0x4001273")]
		public const uint k_unMaxOverlayCount = 64u;

		[Token(Token = "0x4001274")]
		public const uint k_unMaxOverlayIntersectionMaskPrimitivesCount = 32u;

		[Token(Token = "0x4001275")]
		public const string IVROverlay_Version = "IVROverlay_018";

		[Token(Token = "0x4001276")]
		public const string k_pch_Controller_Component_GDC2015 = "gdc2015";

		[Token(Token = "0x4001277")]
		public const string k_pch_Controller_Component_Base = "base";

		[Token(Token = "0x4001278")]
		public const string k_pch_Controller_Component_Tip = "tip";

		[Token(Token = "0x4001279")]
		public const string k_pch_Controller_Component_HandGrip = "handgrip";

		[Token(Token = "0x400127A")]
		public const string k_pch_Controller_Component_Status = "status";

		[Token(Token = "0x400127B")]
		public const string IVRRenderModels_Version = "IVRRenderModels_006";

		[Token(Token = "0x400127C")]
		public const uint k_unNotificationTextMaxSize = 256u;

		[Token(Token = "0x400127D")]
		public const string IVRNotifications_Version = "IVRNotifications_002";

		[Token(Token = "0x400127E")]
		public const uint k_unMaxSettingsKeyLength = 128u;

		[Token(Token = "0x400127F")]
		public const string IVRSettings_Version = "IVRSettings_002";

		[Token(Token = "0x4001280")]
		public const string k_pch_SteamVR_Section = "steamvr";

		[Token(Token = "0x4001281")]
		public const string k_pch_SteamVR_RequireHmd_String = "requireHmd";

		[Token(Token = "0x4001282")]
		public const string k_pch_SteamVR_ForcedDriverKey_String = "forcedDriver";

		[Token(Token = "0x4001283")]
		public const string k_pch_SteamVR_ForcedHmdKey_String = "forcedHmd";

		[Token(Token = "0x4001284")]
		public const string k_pch_SteamVR_DisplayDebug_Bool = "displayDebug";

		[Token(Token = "0x4001285")]
		public const string k_pch_SteamVR_DebugProcessPipe_String = "debugProcessPipe";

		[Token(Token = "0x4001286")]
		public const string k_pch_SteamVR_DisplayDebugX_Int32 = "displayDebugX";

		[Token(Token = "0x4001287")]
		public const string k_pch_SteamVR_DisplayDebugY_Int32 = "displayDebugY";

		[Token(Token = "0x4001288")]
		public const string k_pch_SteamVR_SendSystemButtonToAllApps_Bool = "sendSystemButtonToAllApps";

		[Token(Token = "0x4001289")]
		public const string k_pch_SteamVR_LogLevel_Int32 = "loglevel";

		[Token(Token = "0x400128A")]
		public const string k_pch_SteamVR_IPD_Float = "ipd";

		[Token(Token = "0x400128B")]
		public const string k_pch_SteamVR_Background_String = "background";

		[Token(Token = "0x400128C")]
		public const string k_pch_SteamVR_BackgroundUseDomeProjection_Bool = "backgroundUseDomeProjection";

		[Token(Token = "0x400128D")]
		public const string k_pch_SteamVR_BackgroundCameraHeight_Float = "backgroundCameraHeight";

		[Token(Token = "0x400128E")]
		public const string k_pch_SteamVR_BackgroundDomeRadius_Float = "backgroundDomeRadius";

		[Token(Token = "0x400128F")]
		public const string k_pch_SteamVR_GridColor_String = "gridColor";

		[Token(Token = "0x4001290")]
		public const string k_pch_SteamVR_PlayAreaColor_String = "playAreaColor";

		[Token(Token = "0x4001291")]
		public const string k_pch_SteamVR_ShowStage_Bool = "showStage";

		[Token(Token = "0x4001292")]
		public const string k_pch_SteamVR_ActivateMultipleDrivers_Bool = "activateMultipleDrivers";

		[Token(Token = "0x4001293")]
		public const string k_pch_SteamVR_DirectMode_Bool = "directMode";

		[Token(Token = "0x4001294")]
		public const string k_pch_SteamVR_DirectModeEdidVid_Int32 = "directModeEdidVid";

		[Token(Token = "0x4001295")]
		public const string k_pch_SteamVR_DirectModeEdidPid_Int32 = "directModeEdidPid";

		[Token(Token = "0x4001296")]
		public const string k_pch_SteamVR_UsingSpeakers_Bool = "usingSpeakers";

		[Token(Token = "0x4001297")]
		public const string k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float = "speakersForwardYawOffsetDegrees";

		[Token(Token = "0x4001298")]
		public const string k_pch_SteamVR_BaseStationPowerManagement_Bool = "basestationPowerManagement";

		[Token(Token = "0x4001299")]
		public const string k_pch_SteamVR_NeverKillProcesses_Bool = "neverKillProcesses";

		[Token(Token = "0x400129A")]
		public const string k_pch_SteamVR_SupersampleScale_Float = "supersampleScale";

		[Token(Token = "0x400129B")]
		public const string k_pch_SteamVR_AllowAsyncReprojection_Bool = "allowAsyncReprojection";

		[Token(Token = "0x400129C")]
		public const string k_pch_SteamVR_AllowReprojection_Bool = "allowInterleavedReprojection";

		[Token(Token = "0x400129D")]
		public const string k_pch_SteamVR_ForceReprojection_Bool = "forceReprojection";

		[Token(Token = "0x400129E")]
		public const string k_pch_SteamVR_ForceFadeOnBadTracking_Bool = "forceFadeOnBadTracking";

		[Token(Token = "0x400129F")]
		public const string k_pch_SteamVR_DefaultMirrorView_Int32 = "defaultMirrorView";

		[Token(Token = "0x40012A0")]
		public const string k_pch_SteamVR_ShowMirrorView_Bool = "showMirrorView";

		[Token(Token = "0x40012A1")]
		public const string k_pch_SteamVR_MirrorViewGeometry_String = "mirrorViewGeometry";

		[Token(Token = "0x40012A2")]
		public const string k_pch_SteamVR_StartMonitorFromAppLaunch = "startMonitorFromAppLaunch";

		[Token(Token = "0x40012A3")]
		public const string k_pch_SteamVR_StartCompositorFromAppLaunch_Bool = "startCompositorFromAppLaunch";

		[Token(Token = "0x40012A4")]
		public const string k_pch_SteamVR_StartDashboardFromAppLaunch_Bool = "startDashboardFromAppLaunch";

		[Token(Token = "0x40012A5")]
		public const string k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool = "startOverlayAppsFromDashboard";

		[Token(Token = "0x40012A6")]
		public const string k_pch_SteamVR_EnableHomeApp = "enableHomeApp";

		[Token(Token = "0x40012A7")]
		public const string k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32 = "CycleBackgroundImageTimeSec";

		[Token(Token = "0x40012A8")]
		public const string k_pch_SteamVR_RetailDemo_Bool = "retailDemo";

		[Token(Token = "0x40012A9")]
		public const string k_pch_SteamVR_IpdOffset_Float = "ipdOffset";

		[Token(Token = "0x40012AA")]
		public const string k_pch_SteamVR_AllowSupersampleFiltering_Bool = "allowSupersampleFiltering";

		[Token(Token = "0x40012AB")]
		public const string k_pch_SteamVR_SupersampleManualOverride_Bool = "supersampleManualOverride";

		[Token(Token = "0x40012AC")]
		public const string k_pch_SteamVR_EnableLinuxVulkanAsync_Bool = "enableLinuxVulkanAsync";

		[Token(Token = "0x40012AD")]
		public const string k_pch_SteamVR_AllowDisplayLockedMode_Bool = "allowDisplayLockedMode";

		[Token(Token = "0x40012AE")]
		public const string k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool = "haveStartedTutorialForNativeChaperoneDriver";

		[Token(Token = "0x40012AF")]
		public const string k_pch_SteamVR_ForceWindows32bitVRMonitor = "forceWindows32BitVRMonitor";

		[Token(Token = "0x40012B0")]
		public const string k_pch_SteamVR_DebugInput = "debugInput";

		[Token(Token = "0x40012B1")]
		public const string k_pch_SteamVR_LegacyInputRebinding = "legacyInputRebinding";

		[Token(Token = "0x40012B2")]
		public const string k_pch_SteamVR_DebugInputBinding = "debugInputBinding";

		[Token(Token = "0x40012B3")]
		public const string k_pch_SteamVR_InputBindingUIBlock = "inputBindingUI";

		[Token(Token = "0x40012B4")]
		public const string k_pch_SteamVR_RenderCameraMode = "renderCameraMode";

		[Token(Token = "0x40012B5")]
		public const string k_pch_Lighthouse_Section = "driver_lighthouse";

		[Token(Token = "0x40012B6")]
		public const string k_pch_Lighthouse_DisableIMU_Bool = "disableimu";

		[Token(Token = "0x40012B7")]
		public const string k_pch_Lighthouse_DisableIMUExceptHMD_Bool = "disableimuexcepthmd";

		[Token(Token = "0x40012B8")]
		public const string k_pch_Lighthouse_UseDisambiguation_String = "usedisambiguation";

		[Token(Token = "0x40012B9")]
		public const string k_pch_Lighthouse_DisambiguationDebug_Int32 = "disambiguationdebug";

		[Token(Token = "0x40012BA")]
		public const string k_pch_Lighthouse_PrimaryBasestation_Int32 = "primarybasestation";

		[Token(Token = "0x40012BB")]
		public const string k_pch_Lighthouse_DBHistory_Bool = "dbhistory";

		[Token(Token = "0x40012BC")]
		public const string k_pch_Lighthouse_EnableBluetooth_Bool = "enableBluetooth";

		[Token(Token = "0x40012BD")]
		public const string k_pch_Lighthouse_PowerManagedBaseStations_String = "PowerManagedBaseStations";

		[Token(Token = "0x40012BE")]
		public const string k_pch_Null_Section = "driver_null";

		[Token(Token = "0x40012BF")]
		public const string k_pch_Null_SerialNumber_String = "serialNumber";

		[Token(Token = "0x40012C0")]
		public const string k_pch_Null_ModelNumber_String = "modelNumber";

		[Token(Token = "0x40012C1")]
		public const string k_pch_Null_WindowX_Int32 = "windowX";

		[Token(Token = "0x40012C2")]
		public const string k_pch_Null_WindowY_Int32 = "windowY";

		[Token(Token = "0x40012C3")]
		public const string k_pch_Null_WindowWidth_Int32 = "windowWidth";

		[Token(Token = "0x40012C4")]
		public const string k_pch_Null_WindowHeight_Int32 = "windowHeight";

		[Token(Token = "0x40012C5")]
		public const string k_pch_Null_RenderWidth_Int32 = "renderWidth";

		[Token(Token = "0x40012C6")]
		public const string k_pch_Null_RenderHeight_Int32 = "renderHeight";

		[Token(Token = "0x40012C7")]
		public const string k_pch_Null_SecondsFromVsyncToPhotons_Float = "secondsFromVsyncToPhotons";

		[Token(Token = "0x40012C8")]
		public const string k_pch_Null_DisplayFrequency_Float = "displayFrequency";

		[Token(Token = "0x40012C9")]
		public const string k_pch_UserInterface_Section = "userinterface";

		[Token(Token = "0x40012CA")]
		public const string k_pch_UserInterface_StatusAlwaysOnTop_Bool = "StatusAlwaysOnTop";

		[Token(Token = "0x40012CB")]
		public const string k_pch_UserInterface_MinimizeToTray_Bool = "MinimizeToTray";

		[Token(Token = "0x40012CC")]
		public const string k_pch_UserInterface_Screenshots_Bool = "screenshots";

		[Token(Token = "0x40012CD")]
		public const string k_pch_UserInterface_ScreenshotType_Int = "screenshotType";

		[Token(Token = "0x40012CE")]
		public const string k_pch_Notifications_Section = "notifications";

		[Token(Token = "0x40012CF")]
		public const string k_pch_Notifications_DoNotDisturb_Bool = "DoNotDisturb";

		[Token(Token = "0x40012D0")]
		public const string k_pch_Keyboard_Section = "keyboard";

		[Token(Token = "0x40012D1")]
		public const string k_pch_Keyboard_TutorialCompletions = "TutorialCompletions";

		[Token(Token = "0x40012D2")]
		public const string k_pch_Keyboard_ScaleX = "ScaleX";

		[Token(Token = "0x40012D3")]
		public const string k_pch_Keyboard_ScaleY = "ScaleY";

		[Token(Token = "0x40012D4")]
		public const string k_pch_Keyboard_OffsetLeftX = "OffsetLeftX";

		[Token(Token = "0x40012D5")]
		public const string k_pch_Keyboard_OffsetRightX = "OffsetRightX";

		[Token(Token = "0x40012D6")]
		public const string k_pch_Keyboard_OffsetY = "OffsetY";

		[Token(Token = "0x40012D7")]
		public const string k_pch_Keyboard_Smoothing = "Smoothing";

		[Token(Token = "0x40012D8")]
		public const string k_pch_Perf_Section = "perfcheck";

		[Token(Token = "0x40012D9")]
		public const string k_pch_Perf_HeuristicActive_Bool = "heuristicActive";

		[Token(Token = "0x40012DA")]
		public const string k_pch_Perf_NotifyInHMD_Bool = "warnInHMD";

		[Token(Token = "0x40012DB")]
		public const string k_pch_Perf_NotifyOnlyOnce_Bool = "warnOnlyOnce";

		[Token(Token = "0x40012DC")]
		public const string k_pch_Perf_AllowTimingStore_Bool = "allowTimingStore";

		[Token(Token = "0x40012DD")]
		public const string k_pch_Perf_SaveTimingsOnExit_Bool = "saveTimingsOnExit";

		[Token(Token = "0x40012DE")]
		public const string k_pch_Perf_TestData_Float = "perfTestData";

		[Token(Token = "0x40012DF")]
		public const string k_pch_Perf_LinuxGPUProfiling_Bool = "linuxGPUProfiling";

		[Token(Token = "0x40012E0")]
		public const string k_pch_CollisionBounds_Section = "collisionBounds";

		[Token(Token = "0x40012E1")]
		public const string k_pch_CollisionBounds_Style_Int32 = "CollisionBoundsStyle";

		[Token(Token = "0x40012E2")]
		public const string k_pch_CollisionBounds_GroundPerimeterOn_Bool = "CollisionBoundsGroundPerimeterOn";

		[Token(Token = "0x40012E3")]
		public const string k_pch_CollisionBounds_CenterMarkerOn_Bool = "CollisionBoundsCenterMarkerOn";

		[Token(Token = "0x40012E4")]
		public const string k_pch_CollisionBounds_PlaySpaceOn_Bool = "CollisionBoundsPlaySpaceOn";

		[Token(Token = "0x40012E5")]
		public const string k_pch_CollisionBounds_FadeDistance_Float = "CollisionBoundsFadeDistance";

		[Token(Token = "0x40012E6")]
		public const string k_pch_CollisionBounds_ColorGammaR_Int32 = "CollisionBoundsColorGammaR";

		[Token(Token = "0x40012E7")]
		public const string k_pch_CollisionBounds_ColorGammaG_Int32 = "CollisionBoundsColorGammaG";

		[Token(Token = "0x40012E8")]
		public const string k_pch_CollisionBounds_ColorGammaB_Int32 = "CollisionBoundsColorGammaB";

		[Token(Token = "0x40012E9")]
		public const string k_pch_CollisionBounds_ColorGammaA_Int32 = "CollisionBoundsColorGammaA";

		[Token(Token = "0x40012EA")]
		public const string k_pch_Camera_Section = "camera";

		[Token(Token = "0x40012EB")]
		public const string k_pch_Camera_EnableCamera_Bool = "enableCamera";

		[Token(Token = "0x40012EC")]
		public const string k_pch_Camera_EnableCameraInDashboard_Bool = "enableCameraInDashboard";

		[Token(Token = "0x40012ED")]
		public const string k_pch_Camera_EnableCameraForCollisionBounds_Bool = "enableCameraForCollisionBounds";

		[Token(Token = "0x40012EE")]
		public const string k_pch_Camera_EnableCameraForRoomView_Bool = "enableCameraForRoomView";

		[Token(Token = "0x40012EF")]
		public const string k_pch_Camera_BoundsColorGammaR_Int32 = "cameraBoundsColorGammaR";

		[Token(Token = "0x40012F0")]
		public const string k_pch_Camera_BoundsColorGammaG_Int32 = "cameraBoundsColorGammaG";

		[Token(Token = "0x40012F1")]
		public const string k_pch_Camera_BoundsColorGammaB_Int32 = "cameraBoundsColorGammaB";

		[Token(Token = "0x40012F2")]
		public const string k_pch_Camera_BoundsColorGammaA_Int32 = "cameraBoundsColorGammaA";

		[Token(Token = "0x40012F3")]
		public const string k_pch_Camera_BoundsStrength_Int32 = "cameraBoundsStrength";

		[Token(Token = "0x40012F4")]
		public const string k_pch_Camera_RoomViewMode_Int32 = "cameraRoomViewMode";

		[Token(Token = "0x40012F5")]
		public const string k_pch_audio_Section = "audio";

		[Token(Token = "0x40012F6")]
		public const string k_pch_audio_OnPlaybackDevice_String = "onPlaybackDevice";

		[Token(Token = "0x40012F7")]
		public const string k_pch_audio_OnRecordDevice_String = "onRecordDevice";

		[Token(Token = "0x40012F8")]
		public const string k_pch_audio_OnPlaybackMirrorDevice_String = "onPlaybackMirrorDevice";

		[Token(Token = "0x40012F9")]
		public const string k_pch_audio_OffPlaybackDevice_String = "offPlaybackDevice";

		[Token(Token = "0x40012FA")]
		public const string k_pch_audio_OffRecordDevice_String = "offRecordDevice";

		[Token(Token = "0x40012FB")]
		public const string k_pch_audio_VIVEHDMIGain = "viveHDMIGain";

		[Token(Token = "0x40012FC")]
		public const string k_pch_Power_Section = "power";

		[Token(Token = "0x40012FD")]
		public const string k_pch_Power_PowerOffOnExit_Bool = "powerOffOnExit";

		[Token(Token = "0x40012FE")]
		public const string k_pch_Power_TurnOffScreensTimeout_Float = "turnOffScreensTimeout";

		[Token(Token = "0x40012FF")]
		public const string k_pch_Power_TurnOffControllersTimeout_Float = "turnOffControllersTimeout";

		[Token(Token = "0x4001300")]
		public const string k_pch_Power_ReturnToWatchdogTimeout_Float = "returnToWatchdogTimeout";

		[Token(Token = "0x4001301")]
		public const string k_pch_Power_AutoLaunchSteamVROnButtonPress = "autoLaunchSteamVROnButtonPress";

		[Token(Token = "0x4001302")]
		public const string k_pch_Power_PauseCompositorOnStandby_Bool = "pauseCompositorOnStandby";

		[Token(Token = "0x4001303")]
		public const string k_pch_Dashboard_Section = "dashboard";

		[Token(Token = "0x4001304")]
		public const string k_pch_Dashboard_EnableDashboard_Bool = "enableDashboard";

		[Token(Token = "0x4001305")]
		public const string k_pch_Dashboard_ArcadeMode_Bool = "arcadeMode";

		[Token(Token = "0x4001306")]
		public const string k_pch_Dashboard_EnableWebUI = "webUI";

		[Token(Token = "0x4001307")]
		public const string k_pch_Dashboard_EnableWebUIDevTools = "webUIDevTools";

		[Token(Token = "0x4001308")]
		public const string k_pch_Dashboard_EnableWebUIDashboardReplacement = "webUIDashboard";

		[Token(Token = "0x4001309")]
		public const string k_pch_modelskin_Section = "modelskins";

		[Token(Token = "0x400130A")]
		public const string k_pch_Driver_Enable_Bool = "enable";

		[Token(Token = "0x400130B")]
		public const string k_pch_WebInterface_Section = "WebInterface";

		[Token(Token = "0x400130C")]
		public const string k_pch_WebInterface_WebEnable_Bool = "WebEnable";

		[Token(Token = "0x400130D")]
		public const string k_pch_WebInterface_WebPort_String = "WebPort";

		[Token(Token = "0x400130E")]
		public const string k_pch_TrackingOverride_Section = "TrackingOverrides";

		[Token(Token = "0x400130F")]
		public const string k_pch_App_BindingAutosaveURLSuffix_String = "AutosaveURL";

		[Token(Token = "0x4001310")]
		public const string k_pch_App_BindingCurrentURLSuffix_String = "CurrentURL";

		[Token(Token = "0x4001311")]
		public const string k_pch_App_NeedToUpdateAutosaveSuffix_Bool = "NeedToUpdateAutosave";

		[Token(Token = "0x4001312")]
		public const string k_pch_App_ActionManifestURL_String = "ActionManifestURL";

		[Token(Token = "0x4001313")]
		public const string k_pch_Trackers_Section = "trackers";

		[Token(Token = "0x4001314")]
		public const string IVRScreenshots_Version = "IVRScreenshots_001";

		[Token(Token = "0x4001315")]
		public const string IVRResources_Version = "IVRResources_001";

		[Token(Token = "0x4001316")]
		public const string IVRDriverManager_Version = "IVRDriverManager_001";

		[Token(Token = "0x4001317")]
		public const uint k_unMaxActionNameLength = 64u;

		[Token(Token = "0x4001318")]
		public const uint k_unMaxActionSetNameLength = 64u;

		[Token(Token = "0x4001319")]
		public const uint k_unMaxActionOriginCount = 16u;

		[Token(Token = "0x400131A")]
		public const string IVRInput_Version = "IVRInput_004";

		[Token(Token = "0x400131B")]
		public const ulong k_ulInvalidIOBufferHandle = 0uL;

		[Token(Token = "0x400131C")]
		public const string IVRIOBuffer_Version = "IVRIOBuffer_001";

		[Token(Token = "0x400131D")]
		public const uint k_ulInvalidSpatialAnchorHandle = 0u;

		[Token(Token = "0x400131E")]
		public const string IVRSpatialAnchors_Version = "IVRSpatialAnchors_001";

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22B25C", Offset = "0x22B25C")]
		private static uint <VRToken>k__BackingField;

		[Token(Token = "0x4001320")]
		private const string FnTable_Prefix = "FnTable:";

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static COpenVRContext _OpenVRInternal_ModuleContext;

		[Token(Token = "0x1700010E")]
		private static uint VRToken
		{
			[Token(Token = "0x6000A24")]
			[Address(RVA = "0x47C278", Offset = "0x47C278", VA = "0x47C278")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22D438", Offset = "0x22D438")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6000A25")]
			[Address(RVA = "0x47C2F0", Offset = "0x47C2F0", VA = "0x47C2F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22D448", Offset = "0x22D448")]
			set
			{
			}
		}

		[Token(Token = "0x1700010F")]
		private static COpenVRContext OpenVRInternal_ModuleContext
		{
			[Token(Token = "0x6000A26")]
			[Address(RVA = "0x47C36C", Offset = "0x47C36C", VA = "0x47C36C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000110")]
		public static CVRSystem System
		{
			[Token(Token = "0x6000A27")]
			[Address(RVA = "0x47C4C0", Offset = "0x47C4C0", VA = "0x47C4C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000111")]
		public static CVRChaperone Chaperone
		{
			[Token(Token = "0x6000A28")]
			[Address(RVA = "0x47C624", Offset = "0x47C624", VA = "0x47C624")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000112")]
		public static CVRChaperoneSetup ChaperoneSetup
		{
			[Token(Token = "0x6000A29")]
			[Address(RVA = "0x47C788", Offset = "0x47C788", VA = "0x47C788")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000113")]
		public static CVRCompositor Compositor
		{
			[Token(Token = "0x6000A2A")]
			[Address(RVA = "0x47C8EC", Offset = "0x47C8EC", VA = "0x47C8EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000114")]
		public static CVROverlay Overlay
		{
			[Token(Token = "0x6000A2B")]
			[Address(RVA = "0x47CA50", Offset = "0x47CA50", VA = "0x47CA50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000115")]
		public static CVRRenderModels RenderModels
		{
			[Token(Token = "0x6000A2C")]
			[Address(RVA = "0x47CBB4", Offset = "0x47CBB4", VA = "0x47CBB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000116")]
		public static CVRExtendedDisplay ExtendedDisplay
		{
			[Token(Token = "0x6000A2D")]
			[Address(RVA = "0x47CD18", Offset = "0x47CD18", VA = "0x47CD18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000117")]
		public static CVRSettings Settings
		{
			[Token(Token = "0x6000A2E")]
			[Address(RVA = "0x47CE7C", Offset = "0x47CE7C", VA = "0x47CE7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000118")]
		public static CVRApplications Applications
		{
			[Token(Token = "0x6000A2F")]
			[Address(RVA = "0x47CFE0", Offset = "0x47CFE0", VA = "0x47CFE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000119")]
		public static CVRScreenshots Screenshots
		{
			[Token(Token = "0x6000A30")]
			[Address(RVA = "0x47D144", Offset = "0x47D144", VA = "0x47D144")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011A")]
		public static CVRTrackedCamera TrackedCamera
		{
			[Token(Token = "0x6000A31")]
			[Address(RVA = "0x47D2A8", Offset = "0x47D2A8", VA = "0x47D2A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011B")]
		public static CVRInput Input
		{
			[Token(Token = "0x6000A32")]
			[Address(RVA = "0x47D40C", Offset = "0x47D40C", VA = "0x47D40C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011C")]
		public static CVRSpatialAnchors SpatialAnchors
		{
			[Token(Token = "0x6000A33")]
			[Address(RVA = "0x47D570", Offset = "0x47D570", VA = "0x47D570")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x47BB9C", Offset = "0x47BB9C", VA = "0x47BB9C")]
		public static uint InitInternal(ref EVRInitError peError, EVRApplicationType eApplicationType)
		{
			return default(uint);
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x47BC48", Offset = "0x47BC48", VA = "0x47BC48")]
		public static uint InitInternal2(ref EVRInitError peError, EVRApplicationType eApplicationType, string pchStartupInfo)
		{
			return default(uint);
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x47BD24", Offset = "0x47BD24", VA = "0x47BD24")]
		public static void ShutdownInternal()
		{
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x47BDC0", Offset = "0x47BDC0", VA = "0x47BDC0")]
		public static bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x47BE68", Offset = "0x47BE68", VA = "0x47BE68")]
		public static bool IsRuntimeInstalled()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x47BF10", Offset = "0x47BF10", VA = "0x47BF10")]
		public static string GetStringForHmdError(EVRInitError error)
		{
			return null;
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x47C038", Offset = "0x47C038", VA = "0x47C038")]
		public static IntPtr GetGenericInterface(string pchInterfaceVersion, ref EVRInitError peError)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x47C10C", Offset = "0x47C10C", VA = "0x47C10C")]
		public static bool IsInterfaceVersionValid(string pchInterfaceVersion)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0x47C1DC", Offset = "0x47C1DC", VA = "0x47C1DC")]
		public static uint GetInitToken()
		{
			return default(uint);
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x47D6D4", Offset = "0x47D6D4", VA = "0x47D6D4")]
		public static CVRSystem Init(ref EVRInitError peError, EVRApplicationType eApplicationType = EVRApplicationType.VRApplication_Scene, string pchStartupInfo = "")
		{
			return null;
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x47D9E4", Offset = "0x47D9E4", VA = "0x47D9E4")]
		public static void Shutdown()
		{
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0x47DA54", Offset = "0x47DA54", VA = "0x47DA54")]
		public OpenVR()
		{
		}
	}
}
namespace OVRSimpleJSON
{
	[Token(Token = "0x2000213")]
	public enum JSONNodeType
	{
		[Token(Token = "0x4001323")]
		Array = 1,
		[Token(Token = "0x4001324")]
		Object = 2,
		[Token(Token = "0x4001325")]
		String = 3,
		[Token(Token = "0x4001326")]
		Number = 4,
		[Token(Token = "0x4001327")]
		NullValue = 5,
		[Token(Token = "0x4001328")]
		Boolean = 6,
		[Token(Token = "0x4001329")]
		None = 7,
		[Token(Token = "0x400132A")]
		Custom = 255
	}
	[Token(Token = "0x2000214")]
	public enum JSONTextMode
	{
		[Token(Token = "0x400132C")]
		Compact,
		[Token(Token = "0x400132D")]
		Indent
	}
	[Token(Token = "0x2000215")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x22470C", Offset = "0x22470C")]
	public abstract class JSONNode
	{
		[Token(Token = "0x20003FC")]
		public struct Enumerator
		{
			[Token(Token = "0x2000456")]
			private enum Type
			{
				[Token(Token = "0x40016BE")]
				None,
				[Token(Token = "0x40016BF")]
				Array,
				[Token(Token = "0x40016C0")]
				Object
			}

			[Token(Token = "0x4001614")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Type type;

			[Token(Token = "0x4001615")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			private Dictionary<string, JSONNode>.Enumerator m_Object;

			[Token(Token = "0x4001616")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private List<JSONNode>.Enumerator m_Array;

			[Token(Token = "0x17000193")]
			public bool IsValid
			{
				[Token(Token = "0x600124D")]
				[Address(RVA = "0x485D3C", Offset = "0x485D3C", VA = "0x485D3C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000194")]
			public KeyValuePair<string, JSONNode> Current
			{
				[Token(Token = "0x6001250")]
				[Address(RVA = "0x485D80", Offset = "0x485D80", VA = "0x485D80")]
				get
				{
					return default(KeyValuePair<string, JSONNode>);
				}
			}

			[Token(Token = "0x600124E")]
			[Address(RVA = "0x47E968", Offset = "0x47E968", VA = "0x47E968")]
			public Enumerator(List<JSONNode>.Enumerator aArrayEnum)
			{
			}

			[Token(Token = "0x600124F")]
			[Address(RVA = "0x485D4C", Offset = "0x485D4C", VA = "0x485D4C")]
			public Enumerator(Dictionary<string, JSONNode>.Enumerator aDictEnum)
			{
			}

			[Token(Token = "0x6001251")]
			[Address(RVA = "0x485E70", Offset = "0x485E70", VA = "0x485E70")]
			public bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20003FD")]
		public struct ValueEnumerator
		{
			[Token(Token = "0x4001617")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Enumerator m_Enumerator;

			[Token(Token = "0x17000195")]
			public JSONNode Current
			{
				[Token(Token = "0x6001255")]
				[Address(RVA = "0x486354", Offset = "0x486354", VA = "0x486354")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001252")]
			[Address(RVA = "0x4862A4", Offset = "0x4862A4", VA = "0x4862A4")]
			public ValueEnumerator(List<JSONNode>.Enumerator aArrayEnum)
			{
			}

			[Token(Token = "0x6001253")]
			[Address(RVA = "0x4862DC", Offset = "0x4862DC", VA = "0x4862DC")]
			public ValueEnumerator(Dictionary<string, JSONNode>.Enumerator aDictEnum)
			{
			}

			[Token(Token = "0x6001254")]
			[Address(RVA = "0x486310", Offset = "0x486310", VA = "0x486310")]
			public ValueEnumerator(Enumerator aEnumerator)
			{
			}

			[Token(Token = "0x6001256")]
			[Address(RVA = "0x4863B0", Offset = "0x4863B0", VA = "0x4863B0")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001257")]
			[Address(RVA = "0x4863B4", Offset = "0x4863B4", VA = "0x4863B4")]
			public ValueEnumerator GetEnumerator()
			{
				return default(ValueEnumerator);
			}
		}

		[Token(Token = "0x20003FE")]
		public struct KeyEnumerator
		{
			[Token(Token = "0x4001618")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Enumerator m_Enumerator;

			[Token(Token = "0x17000196")]
			public string Current
			{
				[Token(Token = "0x600125B")]
				[Address(RVA = "0x485FB4", Offset = "0x485FB4", VA = "0x485FB4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001258")]
			[Address(RVA = "0x485F04", Offset = "0x485F04", VA = "0x485F04")]
			public KeyEnumerator(List<JSONNode>.Enumerator aArrayEnum)
			{
			}

			[Token(Token = "0x6001259")]
			[Address(RVA = "0x485F3C", Offset = "0x485F3C", VA = "0x485F3C")]
			public KeyEnumerator(Dictionary<string, JSONNode>.Enumerator aDictEnum)
			{
			}

			[Token(Token = "0x600125A")]
			[Address(RVA = "0x485F70", Offset = "0x485F70", VA = "0x485F70")]
			public KeyEnumerator(Enumerator aEnumerator)
			{
			}

			[Token(Token = "0x600125C")]
			[Address(RVA = "0x486010", Offset = "0x486010", VA = "0x486010")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600125D")]
			[Address(RVA = "0x486014", Offset = "0x486014", VA = "0x486014")]
			public KeyEnumerator GetEnumerator()
			{
				return default(KeyEnumerator);
			}
		}

		[Token(Token = "0x20003FF")]
		public class LinqEnumerator : IEnumerator<KeyValuePair<string, JSONNode>>, IEnumerator, IDisposable, IEnumerable<KeyValuePair<string, JSONNode>>, IEnumerable
		{
			[Token(Token = "0x4001619")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private JSONNode m_Node;

			[Token(Token = "0x400161A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private Enumerator m_Enumerator;

			[Token(Token = "0x17000197")]
			public KeyValuePair<string, JSONNode> Current
			{
				[Token(Token = "0x600125F")]
				[Address(RVA = "0x486030", Offset = "0x486030", VA = "0x486030", Slot = "4")]
				get
				{
					return default(KeyValuePair<string, JSONNode>);
				}
			}

			[Token(Token = "0x17000198")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001260")]
				[Address(RVA = "0x486044", Offset = "0x486044", VA = "0x486044", Slot = "7")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600125E")]
			[Address(RVA = "0x480F40", Offset = "0x480F40", VA = "0x480F40")]
			internal LinqEnumerator(JSONNode aNode)
			{
			}

			[Token(Token = "0x6001261")]
			[Address(RVA = "0x4860C0", Offset = "0x4860C0", VA = "0x4860C0", Slot = "6")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001262")]
			[Address(RVA = "0x4860C8", Offset = "0x4860C8", VA = "0x4860C8", Slot = "5")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6001263")]
			[Address(RVA = "0x4860E8", Offset = "0x4860E8", VA = "0x4860E8", Slot = "9")]
			public IEnumerator<KeyValuePair<string, JSONNode>> GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001264")]
			[Address(RVA = "0x486154", Offset = "0x486154", VA = "0x486154", Slot = "8")]
			public void Reset()
			{
			}

			[Token(Token = "0x6001265")]
			[Address(RVA = "0x486238", Offset = "0x486238", VA = "0x486238", Slot = "10")]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000400")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226420", Offset = "0x226420")]
		private sealed class <get_Children>d__40 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400161B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x400161C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private JSONNode <>2__current;

			[Token(Token = "0x400161D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>l__initialThreadId;

			[Token(Token = "0x17000199")]
			private JSONNode System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6001269")]
				[Address(RVA = "0x4853C4", Offset = "0x4853C4", VA = "0x4853C4", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700019A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600126B")]
				[Address(RVA = "0x485444", Offset = "0x485444", VA = "0x485444", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001266")]
			[Address(RVA = "0x480C80", Offset = "0x480C80", VA = "0x480C80")]
			[DebuggerHidden]
			public <get_Children>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x6001267")]
			[Address(RVA = "0x4853A8", Offset = "0x4853A8", VA = "0x4853A8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001268")]
			[Address(RVA = "0x4853AC", Offset = "0x4853AC", VA = "0x4853AC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600126A")]
			[Address(RVA = "0x4853CC", Offset = "0x4853CC", VA = "0x4853CC", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600126C")]
			[Address(RVA = "0x48544C", Offset = "0x48544C", VA = "0x48544C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600126D")]
			[Address(RVA = "0x4854F4", Offset = "0x4854F4", VA = "0x4854F4", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000401")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226430", Offset = "0x226430")]
		private sealed class <get_DeepChildren>d__42 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400161E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x400161F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private JSONNode <>2__current;

			[Token(Token = "0x4001620")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001621")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public JSONNode <>4__this;

			[Token(Token = "0x4001622")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private IEnumerator<JSONNode> <>7__wrap1;

			[Token(Token = "0x4001623")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private IEnumerator<JSONNode> <>7__wrap2;

			[Token(Token = "0x1700019B")]
			private JSONNode System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6001273")]
				[Address(RVA = "0x485BF0", Offset = "0x485BF0", VA = "0x485BF0", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700019C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001275")]
				[Address(RVA = "0x485C70", Offset = "0x485C70", VA = "0x485C70", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600126E")]
			[Address(RVA = "0x480D38", Offset = "0x480D38", VA = "0x480D38")]
			[DebuggerHidden]
			public <get_DeepChildren>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x600126F")]
			[Address(RVA = "0x4854F8", Offset = "0x4854F8", VA = "0x4854F8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001270")]
			[Address(RVA = "0x485724", Offset = "0x485724", VA = "0x485724", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001271")]
			[Address(RVA = "0x485650", Offset = "0x485650", VA = "0x485650")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001272")]
			[Address(RVA = "0x48557C", Offset = "0x48557C", VA = "0x48557C")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6001274")]
			[Address(RVA = "0x485BF8", Offset = "0x485BF8", VA = "0x485BF8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001276")]
			[Address(RVA = "0x485C78", Offset = "0x485C78", VA = "0x485C78", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001277")]
			[Address(RVA = "0x485D38", Offset = "0x485D38", VA = "0x485D38", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool forceASCII;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool longAsString;

		[Token(Token = "0x4001330")]
		[ThreadStatic]
		private static StringBuilder m_EscapeBuilder;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static JSONContainerType VectorContainerType;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static JSONContainerType QuaternionContainerType;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static JSONContainerType RectContainerType;

		[Token(Token = "0x1700011D")]
		public abstract JSONNodeType Tag
		{
			[Token(Token = "0x6000A38")]
			get;
		}

		[Token(Token = "0x1700011E")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x6000A39")]
			[Address(RVA = "0x480ACC", Offset = "0x480ACC", VA = "0x480ACC", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A3A")]
			[Address(RVA = "0x480AD4", Offset = "0x480AD4", VA = "0x480AD4", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x1700011F")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x6000A3B")]
			[Address(RVA = "0x480AD8", Offset = "0x480AD8", VA = "0x480AD8", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A3C")]
			[Address(RVA = "0x480AE0", Offset = "0x480AE0", VA = "0x480AE0", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000120")]
		public virtual string Value
		{
			[Token(Token = "0x6000A3D")]
			[Address(RVA = "0x480AE4", Offset = "0x480AE4", VA = "0x480AE4", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A3E")]
			[Address(RVA = "0x480B34", Offset = "0x480B34", VA = "0x480B34", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x17000121")]
		public virtual int Count
		{
			[Token(Token = "0x6000A3F")]
			[Address(RVA = "0x480B38", Offset = "0x480B38", VA = "0x480B38", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000122")]
		public virtual bool IsNumber
		{
			[Token(Token = "0x6000A40")]
			[Address(RVA = "0x480B40", Offset = "0x480B40", VA = "0x480B40", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000123")]
		public virtual bool IsString
		{
			[Token(Token = "0x6000A41")]
			[Address(RVA = "0x480B48", Offset = "0x480B48", VA = "0x480B48", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000124")]
		public virtual bool IsBoolean
		{
			[Token(Token = "0x6000A42")]
			[Address(RVA = "0x480B50", Offset = "0x480B50", VA = "0x480B50", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000125")]
		public virtual bool IsNull
		{
			[Token(Token = "0x6000A43")]
			[Address(RVA = "0x480B58", Offset = "0x480B58", VA = "0x480B58", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000126")]
		public virtual bool IsArray
		{
			[Token(Token = "0x6000A44")]
			[Address(RVA = "0x480B60", Offset = "0x480B60", VA = "0x480B60", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000127")]
		public virtual bool IsObject
		{
			[Token(Token = "0x6000A45")]
			[Address(RVA = "0x480B68", Offset = "0x480B68", VA = "0x480B68", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000128")]
		public virtual bool Inline
		{
			[Token(Token = "0x6000A46")]
			[Address(RVA = "0x480B70", Offset = "0x480B70", VA = "0x480B70", Slot = "18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A47")]
			[Address(RVA = "0x480B78", Offset = "0x480B78", VA = "0x480B78", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x17000129")]
		public virtual IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x6000A4D")]
			[Address(RVA = "0x480C08", Offset = "0x480C08", VA = "0x480C08", Slot = "25")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x22D458", Offset = "0x22D458")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012A")]
		public IEnumerable<JSONNode> DeepChildren
		{
			[Token(Token = "0x6000A4E")]
			[Address(RVA = "0x480CAC", Offset = "0x480CAC", VA = "0x480CAC")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x22D4C8", Offset = "0x22D4C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012B")]
		public IEnumerable<KeyValuePair<string, JSONNode>> Linq
		{
			[Token(Token = "0x6000A53")]
			[Address(RVA = "0x480ED8", Offset = "0x480ED8", VA = "0x480ED8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012C")]
		public KeyEnumerator Keys
		{
			[Token(Token = "0x6000A54")]
			[Address(RVA = "0x481034", Offset = "0x481034", VA = "0x481034")]
			get
			{
				return default(KeyEnumerator);
			}
		}

		[Token(Token = "0x1700012D")]
		public ValueEnumerator Values
		{
			[Token(Token = "0x6000A55")]
			[Address(RVA = "0x481084", Offset = "0x481084", VA = "0x481084")]
			get
			{
				return default(ValueEnumerator);
			}
		}

		[Token(Token = "0x1700012E")]
		public virtual double AsDouble
		{
			[Token(Token = "0x6000A56")]
			[Address(RVA = "0x4810D4", Offset = "0x4810D4", VA = "0x4810D4", Slot = "29")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000A57")]
			[Address(RVA = "0x4811D8", Offset = "0x4811D8", VA = "0x4811D8", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x1700012F")]
		public virtual int AsInt
		{
			[Token(Token = "0x6000A58")]
			[Address(RVA = "0x481288", Offset = "0x481288", VA = "0x481288", Slot = "31")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000A59")]
			[Address(RVA = "0x4812D0", Offset = "0x4812D0", VA = "0x4812D0", Slot = "32")]
			set
			{
			}
		}

		[Token(Token = "0x17000130")]
		public virtual float AsFloat
		{
			[Token(Token = "0x6000A5A")]
			[Address(RVA = "0x481304", Offset = "0x481304", VA = "0x481304", Slot = "33")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A5B")]
			[Address(RVA = "0x48132C", Offset = "0x48132C", VA = "0x48132C", Slot = "34")]
			set
			{
			}
		}

		[Token(Token = "0x17000131")]
		public virtual bool AsBool
		{
			[Token(Token = "0x6000A5C")]
			[Address(RVA = "0x481360", Offset = "0x481360", VA = "0x481360", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A5D")]
			[Address(RVA = "0x481440", Offset = "0x481440", VA = "0x481440", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x17000132")]
		public virtual long AsLong
		{
			[Token(Token = "0x6000A5E")]
			[Address(RVA = "0x4814D0", Offset = "0x4814D0", VA = "0x4814D0", Slot = "37")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000A5F")]
			[Address(RVA = "0x481524", Offset = "0x481524", VA = "0x481524", Slot = "38")]
			set
			{
			}
		}

		[Token(Token = "0x17000133")]
		public virtual JSONArray AsArray
		{
			[Token(Token = "0x6000A60")]
			[Address(RVA = "0x481564", Offset = "0x481564", VA = "0x481564", Slot = "39")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000134")]
		public virtual JSONObject AsObject
		{
			[Token(Token = "0x6000A61")]
			[Address(RVA = "0x4815F0", Offset = "0x4815F0", VA = "0x4815F0", Slot = "40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000135")]
		internal static StringBuilder EscapeBuilder
		{
			[Token(Token = "0x6000A73")]
			[Address(RVA = "0x481EB0", Offset = "0x481EB0", VA = "0x481EB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0x480B7C", Offset = "0x480B7C", VA = "0x480B7C", Slot = "20")]
		public virtual void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0x480B80", Offset = "0x480B80", VA = "0x480B80", Slot = "21")]
		public virtual void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0x480BF0", Offset = "0x480BF0", VA = "0x480BF0", Slot = "22")]
		public virtual JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x480BF8", Offset = "0x480BF8", VA = "0x480BF8", Slot = "23")]
		public virtual JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x480C00", Offset = "0x480C00", VA = "0x480C00", Slot = "24")]
		public virtual JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x480D64", Offset = "0x480D64", VA = "0x480D64", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x480E1C", Offset = "0x480E1C", VA = "0x480E1C", Slot = "26")]
		public virtual string ToString(int aIndent)
		{
			return null;
		}

		[Token(Token = "0x6000A51")]
		internal abstract void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode);

		[Token(Token = "0x6000A52")]
		public abstract Enumerator GetEnumerator();

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x48167C", Offset = "0x48167C", VA = "0x48167C")]
		public static implicit operator JSONNode(string s)
		{
			return null;
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0x4816E4", Offset = "0x4816E4", VA = "0x4816E4")]
		public static implicit operator string(JSONNode d)
		{
			return null;
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x481790", Offset = "0x481790", VA = "0x481790")]
		public static implicit operator JSONNode(double n)
		{
			return null;
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x481808", Offset = "0x481808", VA = "0x481808")]
		public static implicit operator double(JSONNode d)
		{
			return default(double);
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x4818B8", Offset = "0x4818B8", VA = "0x4818B8")]
		public static implicit operator JSONNode(float n)
		{
			return null;
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x481934", Offset = "0x481934", VA = "0x481934")]
		public static implicit operator float(JSONNode d)
		{
			return default(float);
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x4819E0", Offset = "0x4819E0", VA = "0x4819E0")]
		public static implicit operator JSONNode(int n)
		{
			return null;
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x481A58", Offset = "0x481A58", VA = "0x481A58")]
		public static implicit operator int(JSONNode d)
		{
			return default(int);
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x481B04", Offset = "0x481B04", VA = "0x481B04")]
		public static implicit operator JSONNode(long n)
		{
			return null;
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x481C08", Offset = "0x481C08", VA = "0x481C08")]
		public static implicit operator long(JSONNode d)
		{
			return default(long);
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x481CB8", Offset = "0x481CB8", VA = "0x481CB8")]
		public static implicit operator JSONNode(bool b)
		{
			return null;
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x481D20", Offset = "0x481D20", VA = "0x481D20")]
		public static implicit operator bool(JSONNode d)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x481DCC", Offset = "0x481DCC", VA = "0x481DCC")]
		public static implicit operator JSONNode(KeyValuePair<string, JSONNode> aKeyValue)
		{
			return null;
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x47EC34", Offset = "0x47EC34", VA = "0x47EC34")]
		public static bool operator ==(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x481E14", Offset = "0x481E14", VA = "0x481E14")]
		public static bool operator !=(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x481E98", Offset = "0x481E98", VA = "0x481E98", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x481EA8", Offset = "0x481EA8", VA = "0x481EA8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x481FA8", Offset = "0x481FA8", VA = "0x481FA8")]
		internal static string Escape(string aText)
		{
			return null;
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x482384", Offset = "0x482384", VA = "0x482384")]
		private static JSONNode ParseElement(string token, bool quoted)
		{
			return null;
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x47E030", Offset = "0x47E030", VA = "0x47E030")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x4825FC", Offset = "0x4825FC", VA = "0x4825FC")]
		private static JSONNode GetContainer(JSONContainerType aType)
		{
			return null;
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x482688", Offset = "0x482688", VA = "0x482688")]
		public static implicit operator JSONNode(Vector2 aVec)
		{
			return null;
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x4828B4", Offset = "0x4828B4", VA = "0x4828B4")]
		public static implicit operator JSONNode(Vector3 aVec)
		{
			return null;
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x482B88", Offset = "0x482B88", VA = "0x482B88")]
		public static implicit operator JSONNode(Vector4 aVec)
		{
			return null;
		}

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0x482F08", Offset = "0x482F08", VA = "0x482F08")]
		public static implicit operator JSONNode(Quaternion aRot)
		{
			return null;
		}

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0x483288", Offset = "0x483288", VA = "0x483288")]
		public static implicit operator JSONNode(Rect aRect)
		{
			return null;
		}

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0x483680", Offset = "0x483680", VA = "0x483680")]
		public static implicit operator JSONNode(RectOffset aRect)
		{
			return null;
		}

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0x483A98", Offset = "0x483A98", VA = "0x483A98")]
		public static implicit operator Vector2(JSONNode aNode)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0x483B60", Offset = "0x483B60", VA = "0x483B60")]
		public static implicit operator Vector3(JSONNode aNode)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0x483C30", Offset = "0x483C30", VA = "0x483C30")]
		public static implicit operator Vector4(JSONNode aNode)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x483D04", Offset = "0x483D04", VA = "0x483D04")]
		public static implicit operator Quaternion(JSONNode aNode)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0x483DD8", Offset = "0x483DD8", VA = "0x483DD8")]
		public static implicit operator Rect(JSONNode aNode)
		{
			return default(Rect);
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0x483E4C", Offset = "0x483E4C", VA = "0x483E4C")]
		public static implicit operator RectOffset(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x483EE0", Offset = "0x483EE0", VA = "0x483EE0")]
		public Vector2 ReadVector2(Vector2 aDefault)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x48407C", Offset = "0x48407C", VA = "0x48407C")]
		public Vector2 ReadVector2(string aXName, string aYName)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x483AC4", Offset = "0x483AC4", VA = "0x483AC4")]
		public Vector2 ReadVector2()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x482758", Offset = "0x482758", VA = "0x482758")]
		public JSONNode WriteVector2(Vector2 aVec, string aXName = "x", string aYName = "y")
		{
			return null;
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x4841C0", Offset = "0x4841C0", VA = "0x4841C0")]
		public Vector3 ReadVector3(Vector3 aDefault)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x484404", Offset = "0x484404", VA = "0x484404")]
		public Vector3 ReadVector3(string aXName, string aYName, string aZName)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x483B8C", Offset = "0x483B8C", VA = "0x483B8C")]
		public Vector3 ReadVector3()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x48299C", Offset = "0x48299C", VA = "0x48299C")]
		public JSONNode WriteVector3(Vector3 aVec, string aXName = "x", string aYName = "y", string aZName = "z")
		{
			return null;
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x4845A0", Offset = "0x4845A0", VA = "0x4845A0")]
		public Vector4 ReadVector4(Vector4 aDefault)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x483C5C", Offset = "0x483C5C", VA = "0x483C5C")]
		public Vector4 ReadVector4()
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x482C44", Offset = "0x482C44", VA = "0x482C44")]
		public JSONNode WriteVector4(Vector4 aVec)
		{
			return null;
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x484878", Offset = "0x484878", VA = "0x484878")]
		public Quaternion ReadQuaternion(Quaternion aDefault)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x483D30", Offset = "0x483D30", VA = "0x483D30")]
		public Quaternion ReadQuaternion()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x482FC4", Offset = "0x482FC4", VA = "0x482FC4")]
		public JSONNode WriteQuaternion(Quaternion aRot)
		{
			return null;
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x484B50", Offset = "0x484B50", VA = "0x484B50")]
		public Rect ReadRect(Rect aDefault)
		{
			return default(Rect);
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x483E20", Offset = "0x483E20", VA = "0x483E20")]
		public Rect ReadRect()
		{
			return default(Rect);
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0x483344", Offset = "0x483344", VA = "0x483344")]
		public JSONNode WriteRect(Rect aRect)
		{
			return null;
		}

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0x484E28", Offset = "0x484E28", VA = "0x484E28")]
		public RectOffset ReadRectOffset(RectOffset aDefault)
		{
			return null;
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0x483E70", Offset = "0x483E70", VA = "0x483E70")]
		public RectOffset ReadRectOffset()
		{
			return null;
		}

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0x48371C", Offset = "0x48371C", VA = "0x48371C")]
		public JSONNode WriteRectOffset(RectOffset aRect)
		{
			return null;
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0x485124", Offset = "0x485124", VA = "0x485124")]
		public Matrix4x4 ReadMatrix()
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0x485290", Offset = "0x485290", VA = "0x485290")]
		public JSONNode WriteMatrix(Matrix4x4 aMatrix)
		{
			return null;
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x47F5C4", Offset = "0x47F5C4", VA = "0x47F5C4")]
		protected JSONNode()
		{
		}
	}
	[Token(Token = "0x2000216")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x224740", Offset = "0x224740")]
	public class JSONArray : JSONNode
	{
		[Token(Token = "0x2000402")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226440", Offset = "0x226440")]
		private sealed class <get_Children>d__22 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001624")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4001625")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private JSONNode <>2__current;

			[Token(Token = "0x4001626")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001627")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public JSONArray <>4__this;

			[Token(Token = "0x4001628")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x1700019D")]
			private JSONNode System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x600127C")]
				[Address(RVA = "0x47F7C0", Offset = "0x47F7C0", VA = "0x47F7C0", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700019E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600127E")]
				[Address(RVA = "0x47F840", Offset = "0x47F840", VA = "0x47F840", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001278")]
			[Address(RVA = "0x47F2F0", Offset = "0x47F2F0", VA = "0x47F2F0")]
			[DebuggerHidden]
			public <get_Children>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6001279")]
			[Address(RVA = "0x47F5CC", Offset = "0x47F5CC", VA = "0x47F5CC", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600127A")]
			[Address(RVA = "0x47F648", Offset = "0x47F648", VA = "0x47F648", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600127B")]
			[Address(RVA = "0x47F5E4", Offset = "0x47F5E4", VA = "0x47F5E4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600127D")]
			[Address(RVA = "0x47F7C8", Offset = "0x47F7C8", VA = "0x47F7C8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600127F")]
			[Address(RVA = "0x47F848", Offset = "0x47F848", VA = "0x47F848", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001280")]
			[Address(RVA = "0x47F908", Offset = "0x47F908", VA = "0x47F908", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private List<JSONNode> m_List;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool inline;

		[Token(Token = "0x17000136")]
		public override bool Inline
		{
			[Token(Token = "0x6000A9C")]
			[Address(RVA = "0x47E898", Offset = "0x47E898", VA = "0x47E898", Slot = "18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A9D")]
			[Address(RVA = "0x47E8A0", Offset = "0x47E8A0", VA = "0x47E8A0", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x17000137")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6000A9E")]
			[Address(RVA = "0x47E8A8", Offset = "0x47E8A8", VA = "0x47E8A8", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x17000138")]
		public override bool IsArray
		{
			[Token(Token = "0x6000A9F")]
			[Address(RVA = "0x47E8B0", Offset = "0x47E8B0", VA = "0x47E8B0", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000139")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000AA1")]
			[Address(RVA = "0x47E9A0", Offset = "0x47E9A0", VA = "0x47E9A0", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AA2")]
			[Address(RVA = "0x47EAF0", Offset = "0x47EAF0", VA = "0x47EAF0", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x1700013A")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000AA3")]
			[Address(RVA = "0x47EE8C", Offset = "0x47EE8C", VA = "0x47EE8C", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AA4")]
			[Address(RVA = "0x47EEF4", Offset = "0x47EEF4", VA = "0x47EEF4", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x1700013B")]
		public override int Count
		{
			[Token(Token = "0x6000AA5")]
			[Address(RVA = "0x47EFDC", Offset = "0x47EFDC", VA = "0x47EFDC", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700013C")]
		public override IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x6000AA9")]
			[Address(RVA = "0x47F264", Offset = "0x47F264", VA = "0x47F264", Slot = "25")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x22D538", Offset = "0x22D538")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x47E8B8", Offset = "0x47E8B8", VA = "0x47E8B8", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x47F034", Offset = "0x47F034", VA = "0x47F034", Slot = "20")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x47F11C", Offset = "0x47F11C", VA = "0x47F11C", Slot = "23")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x47F1EC", Offset = "0x47F1EC", VA = "0x47F1EC", Slot = "24")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x47F31C", Offset = "0x47F31C", VA = "0x47F31C", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x47F514", Offset = "0x47F514", VA = "0x47F514")]
		public JSONArray()
		{
		}
	}
	[Token(Token = "0x2000217")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x224774", Offset = "0x224774")]
	public class JSONObject : JSONNode
	{
		[Token(Token = "0x2000403")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226450", Offset = "0x226450")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4001629")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public JSONNode aNode;

			[Token(Token = "0x6001281")]
			[Address(RVA = "0x487700", Offset = "0x487700", VA = "0x487700")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6001282")]
			[Address(RVA = "0x487B58", Offset = "0x487B58", VA = "0x487B58")]
			internal bool <Remove>b__0(KeyValuePair<string, JSONNode> k)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000404")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226460", Offset = "0x226460")]
		private sealed class <get_Children>d__23 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400162A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x400162B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private JSONNode <>2__current;

			[Token(Token = "0x400162C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>l__initialThreadId;

			[Token(Token = "0x400162D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public JSONObject <>4__this;

			[Token(Token = "0x400162E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x1700019F")]
			private JSONNode System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6001287")]
				[Address(RVA = "0x487DE4", Offset = "0x487DE4", VA = "0x487DE4", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001289")]
				[Address(RVA = "0x487E64", Offset = "0x487E64", VA = "0x487E64", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001283")]
			[Address(RVA = "0x487794", Offset = "0x487794", VA = "0x487794")]
			[DebuggerHidden]
			public <get_Children>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6001284")]
			[Address(RVA = "0x487BDC", Offset = "0x487BDC", VA = "0x487BDC", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001285")]
			[Address(RVA = "0x487C58", Offset = "0x487C58", VA = "0x487C58", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001286")]
			[Address(RVA = "0x487BF4", Offset = "0x487BF4", VA = "0x487BF4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001288")]
			[Address(RVA = "0x487DEC", Offset = "0x487DEC", VA = "0x487DEC", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600128A")]
			[Address(RVA = "0x487E6C", Offset = "0x487E6C", VA = "0x487E6C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600128B")]
			[Address(RVA = "0x487F2C", Offset = "0x487F2C", VA = "0x487F2C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private Dictionary<string, JSONNode> m_Dict;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool inline;

		[Token(Token = "0x1700013D")]
		public override bool Inline
		{
			[Token(Token = "0x6000AAC")]
			[Address(RVA = "0x486C28", Offset = "0x486C28", VA = "0x486C28", Slot = "18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AAD")]
			[Address(RVA = "0x486C30", Offset = "0x486C30", VA = "0x486C30", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x1700013E")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6000AAE")]
			[Address(RVA = "0x486C38", Offset = "0x486C38", VA = "0x486C38", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x1700013F")]
		public override bool IsObject
		{
			[Token(Token = "0x6000AAF")]
			[Address(RVA = "0x486C40", Offset = "0x486C40", VA = "0x486C40", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000140")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000AB1")]
			[Address(RVA = "0x486CFC", Offset = "0x486CFC", VA = "0x486CFC", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AB2")]
			[Address(RVA = "0x486DD0", Offset = "0x486DD0", VA = "0x486DD0", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000141")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000AB3")]
			[Address(RVA = "0x486F1C", Offset = "0x486F1C", VA = "0x486F1C", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AB4")]
			[Address(RVA = "0x486FD0", Offset = "0x486FD0", VA = "0x486FD0", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000142")]
		public override int Count
		{
			[Token(Token = "0x6000AB5")]
			[Address(RVA = "0x487128", Offset = "0x487128", VA = "0x487128", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000143")]
		public override IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x6000ABA")]
			[Address(RVA = "0x487708", Offset = "0x487708", VA = "0x487708", Slot = "25")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x22D5A8", Offset = "0x22D5A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x486C48", Offset = "0x486C48", VA = "0x486C48", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x487194", Offset = "0x487194", VA = "0x487194", Slot = "20")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x487380", Offset = "0x487380", VA = "0x487380", Slot = "22")]
		public override JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x487460", Offset = "0x487460", VA = "0x487460", Slot = "23")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x487540", Offset = "0x487540", VA = "0x487540", Slot = "24")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x4877C0", Offset = "0x4877C0", VA = "0x4877C0", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x47FF18", Offset = "0x47FF18", VA = "0x47FF18")]
		public JSONObject()
		{
		}
	}
	[Token(Token = "0x2000218")]
	public class JSONString : JSONNode
	{
		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private string m_Data;

		[Token(Token = "0x17000144")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6000ABD")]
			[Address(RVA = "0x487F30", Offset = "0x487F30", VA = "0x487F30", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x17000145")]
		public override bool IsString
		{
			[Token(Token = "0x6000ABE")]
			[Address(RVA = "0x487F38", Offset = "0x487F38", VA = "0x487F38", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000146")]
		public override string Value
		{
			[Token(Token = "0x6000AC0")]
			[Address(RVA = "0x487F5C", Offset = "0x487F5C", VA = "0x487F5C", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AC1")]
			[Address(RVA = "0x487F64", Offset = "0x487F64", VA = "0x487F64", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x487F40", Offset = "0x487F40", VA = "0x487F40", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x48069C", Offset = "0x48069C", VA = "0x48069C")]
		public JSONString(string aData)
		{
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x487F6C", Offset = "0x487F6C", VA = "0x487F6C", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x48804C", Offset = "0x48804C", VA = "0x48804C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x488178", Offset = "0x488178", VA = "0x488178", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000219")]
	public class JSONNumber : JSONNode
	{
		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private double m_Data;

		[Token(Token = "0x17000147")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6000AC6")]
			[Address(RVA = "0x486664", Offset = "0x486664", VA = "0x486664", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x17000148")]
		public override bool IsNumber
		{
			[Token(Token = "0x6000AC7")]
			[Address(RVA = "0x48666C", Offset = "0x48666C", VA = "0x48666C", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000149")]
		public override string Value
		{
			[Token(Token = "0x6000AC9")]
			[Address(RVA = "0x486690", Offset = "0x486690", VA = "0x486690", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000ACA")]
			[Address(RVA = "0x48671C", Offset = "0x48671C", VA = "0x48671C", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x1700014A")]
		public override double AsDouble
		{
			[Token(Token = "0x6000ACB")]
			[Address(RVA = "0x486804", Offset = "0x486804", VA = "0x486804", Slot = "29")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000ACC")]
			[Address(RVA = "0x486810", Offset = "0x486810", VA = "0x486810", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x1700014B")]
		public override long AsLong
		{
			[Token(Token = "0x6000ACD")]
			[Address(RVA = "0x486820", Offset = "0x486820", VA = "0x486820", Slot = "37")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000ACE")]
			[Address(RVA = "0x486858", Offset = "0x486858", VA = "0x486858", Slot = "38")]
			set
			{
			}
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x486674", Offset = "0x486674", VA = "0x486674", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x480208", Offset = "0x480208", VA = "0x480208")]
		public JSONNumber(double aData)
		{
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x486878", Offset = "0x486878", VA = "0x486878")]
		public JSONNumber(string aData)
		{
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x486910", Offset = "0x486910", VA = "0x486910", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x486950", Offset = "0x486950", VA = "0x486950")]
		private static bool IsNumeric(object value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x486AA4", Offset = "0x486AA4", VA = "0x486AA4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x486C1C", Offset = "0x486C1C", VA = "0x486C1C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x200021A")]
	public class JSONBool : JSONNode
	{
		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool m_Data;

		[Token(Token = "0x1700014C")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6000AD5")]
			[Address(RVA = "0x47F90C", Offset = "0x47F90C", VA = "0x47F90C", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x1700014D")]
		public override bool IsBoolean
		{
			[Token(Token = "0x6000AD6")]
			[Address(RVA = "0x47F914", Offset = "0x47F914", VA = "0x47F914", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700014E")]
		public override string Value
		{
			[Token(Token = "0x6000AD8")]
			[Address(RVA = "0x47F938", Offset = "0x47F938", VA = "0x47F938", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AD9")]
			[Address(RVA = "0x47F944", Offset = "0x47F944", VA = "0x47F944", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x1700014F")]
		public override bool AsBool
		{
			[Token(Token = "0x6000ADA")]
			[Address(RVA = "0x47F9E4", Offset = "0x47F9E4", VA = "0x47F9E4", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000ADB")]
			[Address(RVA = "0x47F9EC", Offset = "0x47F9EC", VA = "0x47F9EC", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x47F91C", Offset = "0x47F91C", VA = "0x47F91C", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x47F9F4", Offset = "0x47F9F4", VA = "0x47F9F4")]
		public JSONBool(bool aData)
		{
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x47FA78", Offset = "0x47FA78", VA = "0x47FA78")]
		public JSONBool(string aData)
		{
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x47FB10", Offset = "0x47FB10", VA = "0x47FB10", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x47FB9C", Offset = "0x47FB9C", VA = "0x47FB9C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x47FC2C", Offset = "0x47FC2C", VA = "0x47FC2C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x200021B")]
	public class JSONNull : JSONNode
	{
		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static JSONNull m_StaticInstance;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static bool reuseSameInstance;

		[Token(Token = "0x17000150")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6000AE3")]
			[Address(RVA = "0x48644C", Offset = "0x48644C", VA = "0x48644C", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x17000151")]
		public override bool IsNull
		{
			[Token(Token = "0x6000AE4")]
			[Address(RVA = "0x486454", Offset = "0x486454", VA = "0x486454", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000152")]
		public override string Value
		{
			[Token(Token = "0x6000AE6")]
			[Address(RVA = "0x486478", Offset = "0x486478", VA = "0x486478", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AE7")]
			[Address(RVA = "0x4864C8", Offset = "0x4864C8", VA = "0x4864C8", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x17000153")]
		public override bool AsBool
		{
			[Token(Token = "0x6000AE8")]
			[Address(RVA = "0x4864CC", Offset = "0x4864CC", VA = "0x4864CC", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AE9")]
			[Address(RVA = "0x4864D4", Offset = "0x4864D4", VA = "0x4864D4", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x47EDD0", Offset = "0x47EDD0", VA = "0x47EDD0")]
		public static JSONNull CreateOrGet()
		{
			return null;
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x4863D0", Offset = "0x4863D0", VA = "0x4863D0")]
		private JSONNull()
		{
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x48645C", Offset = "0x48645C", VA = "0x48645C", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x4864D8", Offset = "0x4864D8", VA = "0x4864D8", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x486578", Offset = "0x486578", VA = "0x486578", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x486580", Offset = "0x486580", VA = "0x486580", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}
	}
	[Token(Token = "0x200021C")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x2247A8", Offset = "0x2247A8")]
	internal class JSONLazyCreator : JSONNode
	{
		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private JSONNode m_Node;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private string m_Key;

		[Token(Token = "0x17000154")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6000AEE")]
			[Address(RVA = "0x47FC38", Offset = "0x47FC38", VA = "0x47FC38", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x17000155")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000AF3")]
			[Address(RVA = "0x47FCE8", Offset = "0x47FCE8", VA = "0x47FCE8", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AF4")]
			[Address(RVA = "0x47FD50", Offset = "0x47FD50", VA = "0x47FD50", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000156")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000AF5")]
			[Address(RVA = "0x47FDF8", Offset = "0x47FDF8", VA = "0x47FDF8", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AF6")]
			[Address(RVA = "0x47FE68", Offset = "0x47FE68", VA = "0x47FE68", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000157")]
		public override int AsInt
		{
			[Token(Token = "0x6000AFD")]
			[Address(RVA = "0x480178", Offset = "0x480178", VA = "0x480178", Slot = "31")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000AFE")]
			[Address(RVA = "0x48029C", Offset = "0x48029C", VA = "0x48029C", Slot = "32")]
			set
			{
			}
		}

		[Token(Token = "0x17000158")]
		public override float AsFloat
		{
			[Token(Token = "0x6000AFF")]
			[Address(RVA = "0x480330", Offset = "0x480330", VA = "0x480330", Slot = "33")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B00")]
			[Address(RVA = "0x4803C0", Offset = "0x4803C0", VA = "0x4803C0", Slot = "34")]
			set
			{
			}
		}

		[Token(Token = "0x17000159")]
		public override double AsDouble
		{
			[Token(Token = "0x6000B01")]
			[Address(RVA = "0x480458", Offset = "0x480458", VA = "0x480458", Slot = "29")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000B02")]
			[Address(RVA = "0x4804F4", Offset = "0x4804F4", VA = "0x4804F4", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x1700015A")]
		public override long AsLong
		{
			[Token(Token = "0x6000B03")]
			[Address(RVA = "0x480588", Offset = "0x480588", VA = "0x480588", Slot = "37")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000B04")]
			[Address(RVA = "0x480720", Offset = "0x480720", VA = "0x480720", Slot = "38")]
			set
			{
			}
		}

		[Token(Token = "0x1700015B")]
		public override bool AsBool
		{
			[Token(Token = "0x6000B05")]
			[Address(RVA = "0x480860", Offset = "0x480860", VA = "0x480860", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B06")]
			[Address(RVA = "0x4808E4", Offset = "0x4808E4", VA = "0x4808E4", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x1700015C")]
		public override JSONArray AsArray
		{
			[Token(Token = "0x6000B07")]
			[Address(RVA = "0x480968", Offset = "0x480968", VA = "0x480968", Slot = "39")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015D")]
		public override JSONObject AsObject
		{
			[Token(Token = "0x6000B08")]
			[Address(RVA = "0x4809E4", Offset = "0x4809E4", VA = "0x4809E4", Slot = "40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x47FC40", Offset = "0x47FC40", VA = "0x47FC40", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x47EA64", Offset = "0x47EA64", VA = "0x47EA64")]
		public JSONLazyCreator(JSONNode aNode)
		{
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x47FC5C", Offset = "0x47FC5C", VA = "0x47FC5C")]
		public JSONLazyCreator(JSONNode aNode, string aKey)
		{
		}

		[Token(Token = "0x6000AF2")]
		private T Set<T>(T aVal) where T : JSONNode
		{
			return null;
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x47FFC8", Offset = "0x47FFC8", VA = "0x47FFC8", Slot = "21")]
		public override void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x480070", Offset = "0x480070", VA = "0x480070", Slot = "20")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x480120", Offset = "0x480120", VA = "0x480120")]
		public static bool operator ==(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x48013C", Offset = "0x48013C", VA = "0x48013C")]
		public static bool operator !=(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x480154", Offset = "0x480154", VA = "0x480154", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x480170", Offset = "0x480170", VA = "0x480170", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x480A60", Offset = "0x480A60", VA = "0x480A60", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}
	}
	[Token(Token = "0x200021D")]
	public static class JSON
	{
		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x47DFB8", Offset = "0x47DFB8", VA = "0x47DFB8")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}
	}
	[Token(Token = "0x200021E")]
	public enum JSONContainerType
	{
		[Token(Token = "0x4001340")]
		Array,
		[Token(Token = "0x4001341")]
		Object
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x200021F")]
	public enum FaceType : uint
	{
		[Token(Token = "0x4001343")]
		TRIANGLES,
		[Token(Token = "0x4001344")]
		QUADS
	}
	[Token(Token = "0x2000220")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x4001346")]
		ABSORPTION,
		[Token(Token = "0x4001347")]
		TRANSMISSION,
		[Token(Token = "0x4001348")]
		SCATTERING
	}
	[Token(Token = "0x2000221")]
	public struct MeshGroup
	{
		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public UIntPtr faceCount;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public FaceType faceType;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public IntPtr material;
	}
}
namespace DG.Tweening
{
	[Token(Token = "0x2000222")]
	public static class DOTweenModuleAudio
	{
		[Token(Token = "0x2000405")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226470", Offset = "0x226470")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x400162F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AudioSource target;

			[Token(Token = "0x600128C")]
			[Address(RVA = "0x3DB798", Offset = "0x3DB798", VA = "0x3DB798")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x600128D")]
			[Address(RVA = "0x3DC0BC", Offset = "0x3DC0BC", VA = "0x3DC0BC")]
			internal float <DOFade>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x600128E")]
			[Address(RVA = "0x3DC0E4", Offset = "0x3DC0E4", VA = "0x3DC0E4")]
			internal void <DOFade>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000406")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226480", Offset = "0x226480")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001630")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AudioSource target;

			[Token(Token = "0x600128F")]
			[Address(RVA = "0x3DB918", Offset = "0x3DB918", VA = "0x3DB918")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6001290")]
			[Address(RVA = "0x3DC114", Offset = "0x3DC114", VA = "0x3DC114")]
			internal float <DOPitch>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6001291")]
			[Address(RVA = "0x3DC13C", Offset = "0x3DC13C", VA = "0x3DC13C")]
			internal void <DOPitch>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000407")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226490", Offset = "0x226490")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001631")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AudioMixer target;

			[Token(Token = "0x4001632")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public string floatName;

			[Token(Token = "0x6001292")]
			[Address(RVA = "0x3DBAB4", Offset = "0x3DBAB4", VA = "0x3DBAB4")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001293")]
			[Address(RVA = "0x3DC16C", Offset = "0x3DC16C", VA = "0x3DC16C")]
			internal float <DOSetFloat>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6001294")]
			[Address(RVA = "0x3DC1B4", Offset = "0x3DC1B4", VA = "0x3DC1B4")]
			internal void <DOSetFloat>b__1(float x)
			{
			}
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x3DB5EC", Offset = "0x3DB5EC", VA = "0x3DB5EC")]
		public static TweenerCore<float, float, FloatOptions> DOFade(this AudioSource target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x3DB7A0", Offset = "0x3DB7A0", VA = "0x3DB7A0")]
		public static TweenerCore<float, float, FloatOptions> DOPitch(this AudioSource target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x3DB920", Offset = "0x3DB920", VA = "0x3DB920")]
		public static TweenerCore<float, float, FloatOptions> DOSetFloat(this AudioMixer target, string floatName, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x3DBABC", Offset = "0x3DBABC", VA = "0x3DBABC")]
		public static int DOComplete(this AudioMixer target, bool withCallbacks = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0x3DBB40", Offset = "0x3DBB40", VA = "0x3DBB40")]
		public static int DOKill(this AudioMixer target, bool complete = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x3DBBC4", Offset = "0x3DBBC4", VA = "0x3DBBC4")]
		public static int DOFlip(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0x3DBC40", Offset = "0x3DBC40", VA = "0x3DBC40")]
		public static int DOGoto(this AudioMixer target, float to, bool andPlay = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0x3DBCCC", Offset = "0x3DBCCC", VA = "0x3DBCCC")]
		public static int DOPause(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0x3DBD48", Offset = "0x3DBD48", VA = "0x3DBD48")]
		public static int DOPlay(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x3DBDC4", Offset = "0x3DBDC4", VA = "0x3DBDC4")]
		public static int DOPlayBackwards(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0x3DBE40", Offset = "0x3DBE40", VA = "0x3DBE40")]
		public static int DOPlayForward(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x3DBEBC", Offset = "0x3DBEBC", VA = "0x3DBEBC")]
		public static int DORestart(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x3DBF44", Offset = "0x3DBF44", VA = "0x3DBF44")]
		public static int DORewind(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x3DBFC4", Offset = "0x3DBFC4", VA = "0x3DBFC4")]
		public static int DOSmoothRewind(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x3DC040", Offset = "0x3DC040", VA = "0x3DC040")]
		public static int DOTogglePause(this AudioMixer target)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000223")]
	public static class DOTweenModulePhysics
	{
		[Token(Token = "0x2000408")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2264A0", Offset = "0x2264A0")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001633")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Rigidbody target;

			[Token(Token = "0x6001295")]
			[Address(RVA = "0x3DC1EC", Offset = "0x3DC1EC", VA = "0x3DC1EC")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6001296")]
			[Address(RVA = "0x3DD8D4", Offset = "0x3DD8D4", VA = "0x3DD8D4")]
			internal Vector3 <DOMove>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x2000409")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2264B0", Offset = "0x2264B0")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001634")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Rigidbody target;

			[Token(Token = "0x6001297")]
			[Address(RVA = "0x3DDA78", Offset = "0x3DDA78", VA = "0x3DDA78")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6001298")]
			[Address(RVA = "0x3DDA80", Offset = "0x3DDA80", VA = "0x3DDA80")]
			internal Vector3 <DOMoveX>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x200040A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2264C0", Offset = "0x2264C0")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001635")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Rigidbody target;

			[Token(Token = "0x6001299")]
			[Address(RVA = "0x3DDAB0", Offset = "0x3DDAB0", VA = "0x3DDAB0")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x600129A")]
			[Address(RVA = "0x3DDAB8", Offset = "0x3DDAB8", VA = "0x3DDAB8")]
			internal Vector3 <DOMoveY>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x200040B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2264D0", Offset = "0x2264D0")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001636")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Rigidbody target;

			[Token(Token = "0x600129B")]
			[Address(RVA = "0x3DDAE8", Offset = "0x3DDAE8", VA = "0x3DDAE8")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x600129C")]
			[Address(RVA = "0x3DDAF0", Offset = "0x3DDAF0", VA = "0x3DDAF0")]
			internal Vector3 <DOMoveZ>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x200040C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2264E0", Offset = "0x2264E0")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001637")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Rigidbody target;

			[Token(Token = "0x600129D")]
			[Address(RVA = "0x3DDB20", Offset = "0x3DDB20", VA = "0x3DDB20")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x600129E")]
			[Address(RVA = "0x3DDB28", Offset = "0x3DDB28", VA = "0x3DDB28")]
			internal Quaternion <DORotate>b__0()
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x200040D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2264F0", Offset = "0x2264F0")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4001638")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Rigidbody target;

			[Token(Token = "0x600129F")]
			[Address(RVA = "0x3DDB58", Offset = "0x3DDB58", VA = "0x3DDB58")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x60012A0")]
			[Address(RVA = "0x3DDB60", Offset = "0x3DDB60", VA = "0x3DDB60")]
			internal Quaternion <DOLookAt>b__0()
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x200040E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226500", Offset = "0x226500")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4001639")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Rigidbody target;

			[Token(Token = "0x400163A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float startPosY;

			[Token(Token = "0x400163B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool offsetYSet;

			[Token(Token = "0x400163C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float offsetY;

			[Token(Token = "0x400163D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Sequence s;

			[Token(Token = "0x400163E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 endValue;

			[Token(Token = "0x400163F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Tween yTween;

			[Token(Token = "0x60012A1")]
			[Address(RVA = "0x3DDB90", Offset = "0x3DDB90", VA = "0x3DDB90")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x60012A2")]
			[Address(RVA = "0x3DDB98", Offset = "0x3DDB98", VA = "0x3DDB98")]
			internal Vector3 <DOJump>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60012A3")]
			[Address(RVA = "0x3DDBC8", Offset = "0x3DDBC8", VA = "0x3DDBC8")]
			internal void <DOJump>b__1()
			{
			}

			[Token(Token = "0x60012A4")]
			[Address(RVA = "0x3DDC08", Offset = "0x3DDC08", VA = "0x3DDC08")]
			internal Vector3 <DOJump>b__2()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60012A5")]
			[Address(RVA = "0x3DDC38", Offset = "0x3DDC38", VA = "0x3DDC38")]
			internal Vector3 <DOJump>b__3()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60012A6")]
			[Address(RVA = "0x3DDC68", Offset = "0x3DDC68", VA = "0x3DDC68")]
			internal void <DOJump>b__4()
			{
			}
		}

		[Token(Token = "0x200040F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226510", Offset = "0x226510")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001640")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Rigidbody target;

			[Token(Token = "0x60012A7")]
			[Address(RVA = "0x3DDD54", Offset = "0x3DDD54", VA = "0x3DDD54")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x60012A8")]
			[Address(RVA = "0x3DDD5C", Offset = "0x3DDD5C", VA = "0x3DDD5C")]
			internal Vector3 <DOPath>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x2000410")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226520", Offset = "0x226520")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4001641")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Transform trans;

			[Token(Token = "0x4001642")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Rigidbody target;

			[Token(Token = "0x60012A9")]
			[Address(RVA = "0x3DDD8C", Offset = "0x3DDD8C", VA = "0x3DDD8C")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x60012AA")]
			[Address(RVA = "0x3DDD94", Offset = "0x3DDD94", VA = "0x3DDD94")]
			internal Vector3 <DOLocalPath>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60012AB")]
			[Address(RVA = "0x3DDDC4", Offset = "0x3DDDC4", VA = "0x3DDDC4")]
			internal void <DOLocalPath>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000411")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226530", Offset = "0x226530")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4001643")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Rigidbody target;

			[Token(Token = "0x60012AC")]
			[Address(RVA = "0x3DDF04", Offset = "0x3DDF04", VA = "0x3DDF04")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x60012AD")]
			[Address(RVA = "0x3DDF0C", Offset = "0x3DDF0C", VA = "0x3DDF0C")]
			internal Vector3 <DOPath>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x2000412")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226540", Offset = "0x226540")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4001644")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Transform trans;

			[Token(Token = "0x4001645")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Rigidbody target;

			[Token(Token = "0x60012AE")]
			[Address(RVA = "0x3DD8CC", Offset = "0x3DD8CC", VA = "0x3DD8CC")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x60012AF")]
			[Address(RVA = "0x3DD904", Offset = "0x3DD904", VA = "0x3DD904")]
			internal Vector3 <DOLocalPath>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60012B0")]
			[Address(RVA = "0x3DD934", Offset = "0x3DD934", VA = "0x3DD934")]
			internal void <DOLocalPath>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x3D9A54", Offset = "0x3D9A54", VA = "0x3D9A54")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMove(this Rigidbody target, Vector3 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x3DC1F4", Offset = "0x3DC1F4", VA = "0x3DC1F4")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveX(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x3DC3C8", Offset = "0x3DC3C8", VA = "0x3DC3C8")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveY(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x3DC59C", Offset = "0x3DC59C", VA = "0x3DC59C")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveZ(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x3D9C04", Offset = "0x3D9C04", VA = "0x3D9C04")]
		public static TweenerCore<Quaternion, Vector3, QuaternionOptions> DORotate(this Rigidbody target, Vector3 endValue, float duration, RotateMode mode = RotateMode.Fast)
		{
			return null;
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x3DC770", Offset = "0x3DC770", VA = "0x3DC770")]
		public static TweenerCore<Quaternion, Vector3, QuaternionOptions> DOLookAt(this Rigidbody target, Vector3 towards, float duration, AxisConstraint axisConstraint = AxisConstraint.None, [Optional] Vector3? up)
		{
			return null;
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x3DC9E4", Offset = "0x3DC9E4", VA = "0x3DC9E4")]
		public static Sequence DOJump(this Rigidbody target, Vector3 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x3DCF9C", Offset = "0x3DCF9C", VA = "0x3DCF9C")]
		public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOPath(this Rigidbody target, Vector3[] path, float duration, PathType pathType = PathType.Linear, PathMode pathMode = PathMode.Full3D, int resolution = 10, [Optional] Color? gizmoColor)
		{
			return null;
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x3DD204", Offset = "0x3DD204", VA = "0x3DD204")]
		public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOLocalPath(this Rigidbody target, Vector3[] path, float duration, PathType pathType = PathType.Linear, PathMode pathMode = PathMode.Full3D, int resolution = 10, [Optional] Color? gizmoColor)
		{
			return null;
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x3DD4BC", Offset = "0x3DD4BC", VA = "0x3DD4BC")]
		internal static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOPath(this Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode = PathMode.Full3D)
		{
			return null;
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x3DD6A0", Offset = "0x3DD6A0", VA = "0x3DD6A0")]
		internal static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOLocalPath(this Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode = PathMode.Full3D)
		{
			return null;
		}
	}
	[Token(Token = "0x2000224")]
	public static class DOTweenModulePhysics2D
	{
		[Token(Token = "0x2000413")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226550", Offset = "0x226550")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001646")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Rigidbody2D target;

			[Token(Token = "0x60012B1")]
			[Address(RVA = "0x3DE0EC", Offset = "0x3DE0EC", VA = "0x3DE0EC")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60012B2")]
			[Address(RVA = "0x3DEAA0", Offset = "0x3DEAA0", VA = "0x3DEAA0")]
			internal Vector2 <DOMove>b__0()
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x2000414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226560", Offset = "0x226560")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001647")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Rigidbody2D target;

			[Token(Token = "0x60012B3")]
			[Address(RVA = "0x3DE2B8", Offset = "0x3DE2B8", VA = "0x3DE2B8")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60012B4")]
			[Address(RVA = "0x3DEAD0", Offset = "0x3DEAD0", VA = "0x3DEAD0")]
			internal Vector2 <DOMoveX>b__0()
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x2000415")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226570", Offset = "0x226570")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001648")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Rigidbody2D target;

			[Token(Token = "0x60012B5")]
			[Address(RVA = "0x3DE484", Offset = "0x3DE484", VA = "0x3DE484")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x60012B6")]
			[Address(RVA = "0x3DEB00", Offset = "0x3DEB00", VA = "0x3DEB00")]
			internal Vector2 <DOMoveY>b__0()
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x2000416")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226580", Offset = "0x226580")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001649")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Rigidbody2D target;

			[Token(Token = "0x60012B7")]
			[Address(RVA = "0x3DE614", Offset = "0x3DE614", VA = "0x3DE614")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x60012B8")]
			[Address(RVA = "0x3DEB30", Offset = "0x3DEB30", VA = "0x3DEB30")]
			internal float <DORotate>b__0()
			{
				return default(float);
			}
		}

		[Token(Token = "0x2000417")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226590", Offset = "0x226590")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x400164A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Rigidbody2D target;

			[Token(Token = "0x400164B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float startPosY;

			[Token(Token = "0x400164C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool offsetYSet;

			[Token(Token = "0x400164D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float offsetY;

			[Token(Token = "0x400164E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Sequence s;

			[Token(Token = "0x400164F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector2 endValue;

			[Token(Token = "0x4001650")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Tween yTween;

			[Token(Token = "0x60012B9")]
			[Address(RVA = "0x3DEA98", Offset = "0x3DEA98", VA = "0x3DEA98")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x60012BA")]
			[Address(RVA = "0x3DEB58", Offset = "0x3DEB58", VA = "0x3DEB58")]
			internal Vector2 <DOJump>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60012BB")]
			[Address(RVA = "0x3DEB88", Offset = "0x3DEB88", VA = "0x3DEB88")]
			internal void <DOJump>b__1(Vector2 x)
			{
			}

			[Token(Token = "0x60012BC")]
			[Address(RVA = "0x3DEBC0", Offset = "0x3DEBC0", VA = "0x3DEBC0")]
			internal void <DOJump>b__2()
			{
			}

			[Token(Token = "0x60012BD")]
			[Address(RVA = "0x3DEC00", Offset = "0x3DEC00", VA = "0x3DEC00")]
			internal Vector2 <DOJump>b__3()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60012BE")]
			[Address(RVA = "0x3DEC30", Offset = "0x3DEC30", VA = "0x3DEC30")]
			internal void <DOJump>b__4(Vector2 x)
			{
			}

			[Token(Token = "0x60012BF")]
			[Address(RVA = "0x3DEC68", Offset = "0x3DEC68", VA = "0x3DEC68")]
			internal void <DOJump>b__5()
			{
			}
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x3DDF3C", Offset = "0x3DDF3C", VA = "0x3DDF3C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMove(this Rigidbody2D target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x3DE0F4", Offset = "0x3DE0F4", VA = "0x3DE0F4")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMoveX(this Rigidbody2D target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x3DE2C0", Offset = "0x3DE2C0", VA = "0x3DE2C0")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMoveY(this Rigidbody2D target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x3DE48C", Offset = "0x3DE48C", VA = "0x3DE48C")]
		public static TweenerCore<float, float, FloatOptions> DORotate(this Rigidbody2D target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x3DE61C", Offset = "0x3DE61C", VA = "0x3DE61C")]
		public static Sequence DOJump(this Rigidbody2D target, Vector2 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}
	}
	[Token(Token = "0x2000225")]
	public static class DOTweenModuleSprite
	{
		[Token(Token = "0x2000418")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2265A0", Offset = "0x2265A0")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001651")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public SpriteRenderer target;

			[Token(Token = "0x60012C0")]
			[Address(RVA = "0x3DEF70", Offset = "0x3DEF70", VA = "0x3DEF70")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60012C1")]
			[Address(RVA = "0x3DF57C", Offset = "0x3DF57C", VA = "0x3DF57C")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60012C2")]
			[Address(RVA = "0x3DF5AC", Offset = "0x3DF5AC", VA = "0x3DF5AC")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000419")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2265B0", Offset = "0x2265B0")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001652")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public SpriteRenderer target;

			[Token(Token = "0x60012C3")]
			[Address(RVA = "0x3DF0F0", Offset = "0x3DF0F0", VA = "0x3DF0F0")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60012C4")]
			[Address(RVA = "0x3DF600", Offset = "0x3DF600", VA = "0x3DF600")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60012C5")]
			[Address(RVA = "0x3DF630", Offset = "0x3DF630", VA = "0x3DF630")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200041A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2265C0", Offset = "0x2265C0")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001653")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Color to;

			[Token(Token = "0x4001654")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SpriteRenderer target;

			[Token(Token = "0x60012C6")]
			[Address(RVA = "0x3DF574", Offset = "0x3DF574", VA = "0x3DF574")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x60012C7")]
			[Address(RVA = "0x3DF684", Offset = "0x3DF684", VA = "0x3DF684")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60012C8")]
			[Address(RVA = "0x3DF694", Offset = "0x3DF694", VA = "0x3DF694")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x3DEDD4", Offset = "0x3DEDD4", VA = "0x3DEDD4")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this SpriteRenderer target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x3DEF78", Offset = "0x3DEF78", VA = "0x3DEF78")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this SpriteRenderer target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x3DF0F8", Offset = "0x3DF0F8", VA = "0x3DF0F8")]
		public static Sequence DOGradientColor(this SpriteRenderer target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x3DF314", Offset = "0x3DF314", VA = "0x3DF314")]
		public static Tweener DOBlendableColor(this SpriteRenderer target, Color endValue, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x2000226")]
	public static class DOTweenModuleUI
	{
		[Token(Token = "0x200041B")]
		public static class Utils
		{
			[Token(Token = "0x60012C9")]
			[Address(RVA = "0x3E5938", Offset = "0x3E5938", VA = "0x3E5938")]
			public static Vector2 SwitchToRectTransform(RectTransform from, RectTransform to)
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x200041C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2265D0", Offset = "0x2265D0")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001655")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public CanvasGroup target;

			[Token(Token = "0x60012CA")]
			[Address(RVA = "0x3DF908", Offset = "0x3DF908", VA = "0x3DF908")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60012CB")]
			[Address(RVA = "0x3E3F88", Offset = "0x3E3F88", VA = "0x3E3F88")]
			internal float <DOFade>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x60012CC")]
			[Address(RVA = "0x3E3FB0", Offset = "0x3E3FB0", VA = "0x3E3FB0")]
			internal void <DOFade>b__1(float x)
			{
			}
		}

		[Token(Token = "0x200041D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2265E0", Offset = "0x2265E0")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001656")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Graphic target;

			[Token(Token = "0x60012CD")]
			[Address(RVA = "0x3DFAAC", Offset = "0x3DFAAC", VA = "0x3DFAAC")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60012CE")]
			[Address(RVA = "0x3E446C", Offset = "0x3E446C", VA = "0x3E446C")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60012CF")]
			[Address(RVA = "0x3E44A4", Offset = "0x3E44A4", VA = "0x3E44A4")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200041E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2265F0", Offset = "0x2265F0")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001657")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Graphic target;

			[Token(Token = "0x60012D0")]
			[Address(RVA = "0x3DFC2C", Offset = "0x3DFC2C", VA = "0x3DFC2C")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x60012D1")]
			[Address(RVA = "0x3E4DB0", Offset = "0x3E4DB0", VA = "0x3E4DB0")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60012D2")]
			[Address(RVA = "0x3E4DE8", Offset = "0x3E4DE8", VA = "0x3E4DE8")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200041F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226600", Offset = "0x226600")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001658")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Image target;

			[Token(Token = "0x60012D3")]
			[Address(RVA = "0x3DFDD0", Offset = "0x3DFDD0", VA = "0x3DFDD0")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x60012D4")]
			[Address(RVA = "0x3E5508", Offset = "0x3E5508", VA = "0x3E5508")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60012D5")]
			[Address(RVA = "0x3E5540", Offset = "0x3E5540", VA = "0x3E5540")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000420")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226610", Offset = "0x226610")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001659")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Image target;

			[Token(Token = "0x60012D6")]
			[Address(RVA = "0x3DFF50", Offset = "0x3DFF50", VA = "0x3DFF50")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x60012D7")]
			[Address(RVA = "0x3E559C", Offset = "0x3E559C", VA = "0x3E559C")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60012D8")]
			[Address(RVA = "0x3E55D4", Offset = "0x3E55D4", VA = "0x3E55D4")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000421")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226620", Offset = "0x226620")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x400165A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Image target;

			[Token(Token = "0x60012D9")]
			[Address(RVA = "0x3E0100", Offset = "0x3E0100", VA = "0x3E0100")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x60012DA")]
			[Address(RVA = "0x3E5630", Offset = "0x3E5630", VA = "0x3E5630")]
			internal float <DOFillAmount>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x60012DB")]
			[Address(RVA = "0x3E5650", Offset = "0x3E5650", VA = "0x3E5650")]
			internal void <DOFillAmount>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000422")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226630", Offset = "0x226630")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x400165B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public LayoutElement target;

			[Token(Token = "0x60012DC")]
			[Address(RVA = "0x3E04DC", Offset = "0x3E04DC", VA = "0x3E04DC")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x60012DD")]
			[Address(RVA = "0x3E5680", Offset = "0x3E5680", VA = "0x3E5680")]
			internal Vector2 <DOFlexibleSize>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60012DE")]
			[Address(RVA = "0x3E5700", Offset = "0x3E5700", VA = "0x3E5700")]
			internal void <DOFlexibleSize>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000423")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226640", Offset = "0x226640")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x400165C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public LayoutElement target;

			[Token(Token = "0x60012DF")]
			[Address(RVA = "0x3E067C", Offset = "0x3E067C", VA = "0x3E067C")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x60012E0")]
			[Address(RVA = "0x3E5768", Offset = "0x3E5768", VA = "0x3E5768")]
			internal Vector2 <DOMinSize>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60012E1")]
			[Address(RVA = "0x3E57E8", Offset = "0x3E57E8", VA = "0x3E57E8")]
			internal void <DOMinSize>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000424")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226650", Offset = "0x226650")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x400165D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public LayoutElement target;

			[Token(Token = "0x60012E2")]
			[Address(RVA = "0x3E081C", Offset = "0x3E081C", VA = "0x3E081C")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x60012E3")]
			[Address(RVA = "0x3E5850", Offset = "0x3E5850", VA = "0x3E5850")]
			internal Vector2 <DOPreferredSize>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60012E4")]
			[Address(RVA = "0x3E58D0", Offset = "0x3E58D0", VA = "0x3E58D0")]
			internal void <DOPreferredSize>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000425")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226660", Offset = "0x226660")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x400165E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Outline target;

			[Token(Token = "0x60012E5")]
			[Address(RVA = "0x3E09C0", Offset = "0x3E09C0", VA = "0x3E09C0")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x60012E6")]
			[Address(RVA = "0x3E3FE0", Offset = "0x3E3FE0", VA = "0x3E3FE0")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60012E7")]
			[Address(RVA = "0x3E400C", Offset = "0x3E400C", VA = "0x3E400C")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000426")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226670", Offset = "0x226670")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x400165F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Outline target;

			[Token(Token = "0x60012E8")]
			[Address(RVA = "0x3E0B40", Offset = "0x3E0B40", VA = "0x3E0B40")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x60012E9")]
			[Address(RVA = "0x3E4060", Offset = "0x3E4060", VA = "0x3E4060")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60012EA")]
			[Address(RVA = "0x3E408C", Offset = "0x3E408C", VA = "0x3E408C")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000427")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226680", Offset = "0x226680")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4001660")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Outline target;

			[Token(Token = "0x60012EB")]
			[Address(RVA = "0x3E0CD4", Offset = "0x3E0CD4", VA = "0x3E0CD4")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x60012EC")]
			[Address(RVA = "0x3E40E0", Offset = "0x3E40E0", VA = "0x3E40E0")]
			internal Vector2 <DOScale>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60012ED")]
			[Address(RVA = "0x3E410C", Offset = "0x3E410C", VA = "0x3E410C")]
			internal void <DOScale>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000428")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226690", Offset = "0x226690")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4001661")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public RectTransform target;

			[Token(Token = "0x60012EE")]
			[Address(RVA = "0x3E0E74", Offset = "0x3E0E74", VA = "0x3E0E74")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x60012EF")]
			[Address(RVA = "0x3E4144", Offset = "0x3E4144", VA = "0x3E4144")]
			internal Vector2 <DOAnchorPos>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60012F0")]
			[Address(RVA = "0x3E4174", Offset = "0x3E4174", VA = "0x3E4174")]
			internal void <DOAnchorPos>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000429")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2266A0", Offset = "0x2266A0")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4001662")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public RectTransform target;

			[Token(Token = "0x60012F1")]
			[Address(RVA = "0x3E1034", Offset = "0x3E1034", VA = "0x3E1034")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x60012F2")]
			[Address(RVA = "0x3E41AC", Offset = "0x3E41AC", VA = "0x3E41AC")]
			internal Vector2 <DOAnchorPosX>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60012F3")]
			[Address(RVA = "0x3E41DC", Offset = "0x3E41DC", VA = "0x3E41DC")]
			internal void <DOAnchorPosX>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200042A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2266B0", Offset = "0x2266B0")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4001663")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public RectTransform target;

			[Token(Token = "0x60012F4")]
			[Address(RVA = "0x3E11F4", Offset = "0x3E11F4", VA = "0x3E11F4")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x60012F5")]
			[Address(RVA = "0x3E4214", Offset = "0x3E4214", VA = "0x3E4214")]
			internal Vector2 <DOAnchorPosY>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60012F6")]
			[Address(RVA = "0x3E4244", Offset = "0x3E4244", VA = "0x3E4244")]
			internal void <DOAnchorPosY>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200042B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2266C0", Offset = "0x2266C0")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4001664")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public RectTransform target;

			[Token(Token = "0x60012F7")]
			[Address(RVA = "0x3E13A0", Offset = "0x3E13A0", VA = "0x3E13A0")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x60012F8")]
			[Address(RVA = "0x3E427C", Offset = "0x3E427C", VA = "0x3E427C")]
			internal Vector3 <DOAnchorPos3D>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60012F9")]
			[Address(RVA = "0x3E42AC", Offset = "0x3E42AC", VA = "0x3E42AC")]
			internal void <DOAnchorPos3D>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x200042C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2266D0", Offset = "0x2266D0")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x4001665")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public RectTransform target;

			[Token(Token = "0x60012FA")]
			[Address(RVA = "0x3E1570", Offset = "0x3E1570", VA = "0x3E1570")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x60012FB")]
			[Address(RVA = "0x3E42F8", Offset = "0x3E42F8", VA = "0x3E42F8")]
			internal Vector3 <DOAnchorPos3DX>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60012FC")]
			[Address(RVA = "0x3E4328", Offset = "0x3E4328", VA = "0x3E4328")]
			internal void <DOAnchorPos3DX>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x200042D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2266E0", Offset = "0x2266E0")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4001666")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public RectTransform target;

			[Token(Token = "0x60012FD")]
			[Address(RVA = "0x3E1740", Offset = "0x3E1740", VA = "0x3E1740")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x60012FE")]
			[Address(RVA = "0x3E4374", Offset = "0x3E4374", VA = "0x3E4374")]
			internal Vector3 <DOAnchorPos3DY>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60012FF")]
			[Address(RVA = "0x3E43A4", Offset = "0x3E43A4", VA = "0x3E43A4")]
			internal void <DOAnchorPos3DY>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x200042E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2266F0", Offset = "0x2266F0")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4001667")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public RectTransform target;

			[Token(Token = "0x6001300")]
			[Address(RVA = "0x3E1910", Offset = "0x3E1910", VA = "0x3E1910")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6001301")]
			[Address(RVA = "0x3E43F0", Offset = "0x3E43F0", VA = "0x3E43F0")]
			internal Vector3 <DOAnchorPos3DZ>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001302")]
			[Address(RVA = "0x3E4420", Offset = "0x3E4420", VA = "0x3E4420")]
			internal void <DOAnchorPos3DZ>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x200042F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226700", Offset = "0x226700")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x4001668")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public RectTransform target;

			[Token(Token = "0x6001303")]
			[Address(RVA = "0x3E1AB0", Offset = "0x3E1AB0", VA = "0x3E1AB0")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x6001304")]
			[Address(RVA = "0x3E4500", Offset = "0x3E4500", VA = "0x3E4500")]
			internal Vector2 <DOAnchorMax>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001305")]
			[Address(RVA = "0x3E4530", Offset = "0x3E4530", VA = "0x3E4530")]
			internal void <DOAnchorMax>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000430")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226710", Offset = "0x226710")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4001669")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public RectTransform target;

			[Token(Token = "0x6001306")]
			[Address(RVA = "0x3E1C50", Offset = "0x3E1C50", VA = "0x3E1C50")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6001307")]
			[Address(RVA = "0x3E4568", Offset = "0x3E4568", VA = "0x3E4568")]
			internal Vector2 <DOAnchorMin>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001308")]
			[Address(RVA = "0x3E4598", Offset = "0x3E4598", VA = "0x3E4598")]
			internal void <DOAnchorMin>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000431")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226720", Offset = "0x226720")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x400166A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public RectTransform target;

			[Token(Token = "0x6001309")]
			[Address(RVA = "0x3E1DE4", Offset = "0x3E1DE4", VA = "0x3E1DE4")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x600130A")]
			[Address(RVA = "0x3E45D0", Offset = "0x3E45D0", VA = "0x3E45D0")]
			internal Vector2 <DOPivot>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600130B")]
			[Address(RVA = "0x3E4600", Offset = "0x3E4600", VA = "0x3E4600")]
			internal void <DOPivot>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000432")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226730", Offset = "0x226730")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x400166B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public RectTransform target;

			[Token(Token = "0x600130C")]
			[Address(RVA = "0x3E1FA0", Offset = "0x3E1FA0", VA = "0x3E1FA0")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x600130D")]
			[Address(RVA = "0x3E4638", Offset = "0x3E4638", VA = "0x3E4638")]
			internal Vector2 <DOPivotX>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600130E")]
			[Address(RVA = "0x3E4668", Offset = "0x3E4668", VA = "0x3E4668")]
			internal void <DOPivotX>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000433")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226740", Offset = "0x226740")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x400166C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public RectTransform target;

			[Token(Token = "0x600130F")]
			[Address(RVA = "0x3E215C", Offset = "0x3E215C", VA = "0x3E215C")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x6001310")]
			[Address(RVA = "0x3E46A0", Offset = "0x3E46A0", VA = "0x3E46A0")]
			internal Vector2 <DOPivotY>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001311")]
			[Address(RVA = "0x3E46D0", Offset = "0x3E46D0", VA = "0x3E46D0")]
			internal void <DOPivotY>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000434")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226750", Offset = "0x226750")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x400166D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public RectTransform target;

			[Token(Token = "0x6001312")]
			[Address(RVA = "0x3E22FC", Offset = "0x3E22FC", VA = "0x3E22FC")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x6001313")]
			[Address(RVA = "0x3E4708", Offset = "0x3E4708", VA = "0x3E4708")]
			internal Vector2 <DOSizeDelta>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001314")]
			[Address(RVA = "0x3E4738", Offset = "0x3E4738", VA = "0x3E4738")]
			internal void <DOSizeDelta>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000435")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226760", Offset = "0x226760")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x400166E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public RectTransform target;

			[Token(Token = "0x6001315")]
			[Address(RVA = "0x3E24F0", Offset = "0x3E24F0", VA = "0x3E24F0")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x6001316")]
			[Address(RVA = "0x3E4770", Offset = "0x3E4770", VA = "0x3E4770")]
			internal Vector3 <DOPunchAnchorPos>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001317")]
			[Address(RVA = "0x3E481C", Offset = "0x3E481C", VA = "0x3E481C")]
			internal void <DOPunchAnchorPos>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000436")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226770", Offset = "0x226770")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x400166F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public RectTransform target;

			[Token(Token = "0x6001318")]
			[Address(RVA = "0x3E26C0", Offset = "0x3E26C0", VA = "0x3E26C0")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x6001319")]
			[Address(RVA = "0x3E48E0", Offset = "0x3E48E0", VA = "0x3E48E0")]
			internal Vector3 <DOShakeAnchorPos>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600131A")]
			[Address(RVA = "0x3E498C", Offset = "0x3E498C", VA = "0x3E498C")]
			internal void <DOShakeAnchorPos>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000437")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226780", Offset = "0x226780")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x4001670")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public RectTransform target;

			[Token(Token = "0x600131B")]
			[Address(RVA = "0x3E28CC", Offset = "0x3E28CC", VA = "0x3E28CC")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x600131C")]
			[Address(RVA = "0x3E4A50", Offset = "0x3E4A50", VA = "0x3E4A50")]
			internal Vector3 <DOShakeAnchorPos>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600131D")]
			[Address(RVA = "0x3E4AFC", Offset = "0x3E4AFC", VA = "0x3E4AFC")]
			internal void <DOShakeAnchorPos>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000438")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226790", Offset = "0x226790")]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x4001671")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public RectTransform target;

			[Token(Token = "0x4001672")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float startPosY;

			[Token(Token = "0x4001673")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool offsetYSet;

			[Token(Token = "0x4001674")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float offsetY;

			[Token(Token = "0x4001675")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Sequence s;

			[Token(Token = "0x4001676")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector2 endValue;

			[Token(Token = "0x600131E")]
			[Address(RVA = "0x3E2D4C", Offset = "0x3E2D4C", VA = "0x3E2D4C")]
			public <>c__DisplayClass29_0()
			{
			}

			[Token(Token = "0x600131F")]
			[Address(RVA = "0x3E4BC0", Offset = "0x3E4BC0", VA = "0x3E4BC0")]
			internal Vector2 <DOJumpAnchorPos>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001320")]
			[Address(RVA = "0x3E4BF0", Offset = "0x3E4BF0", VA = "0x3E4BF0")]
			internal void <DOJumpAnchorPos>b__1(Vector2 x)
			{
			}

			[Token(Token = "0x6001321")]
			[Address(RVA = "0x3E4C28", Offset = "0x3E4C28", VA = "0x3E4C28")]
			internal void <DOJumpAnchorPos>b__2()
			{
			}

			[Token(Token = "0x6001322")]
			[Address(RVA = "0x3E4C68", Offset = "0x3E4C68", VA = "0x3E4C68")]
			internal Vector2 <DOJumpAnchorPos>b__3()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001323")]
			[Address(RVA = "0x3E4C98", Offset = "0x3E4C98", VA = "0x3E4C98")]
			internal void <DOJumpAnchorPos>b__4(Vector2 x)
			{
			}

			[Token(Token = "0x6001324")]
			[Address(RVA = "0x3E4CD0", Offset = "0x3E4CD0", VA = "0x3E4CD0")]
			internal void <DOJumpAnchorPos>b__5()
			{
			}
		}

		[Token(Token = "0x2000439")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2267A0", Offset = "0x2267A0")]
		private sealed class <>c__DisplayClass30_0
		{
			[Token(Token = "0x4001677")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ScrollRect target;

			[Token(Token = "0x6001325")]
			[Address(RVA = "0x3E2EE4", Offset = "0x3E2EE4", VA = "0x3E2EE4")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x6001326")]
			[Address(RVA = "0x3E4E44", Offset = "0x3E4E44", VA = "0x3E4E44")]
			internal Vector2 <DONormalizedPos>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001327")]
			[Address(RVA = "0x3E4EB4", Offset = "0x3E4EB4", VA = "0x3E4EB4")]
			internal void <DONormalizedPos>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200043A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2267B0", Offset = "0x2267B0")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x4001678")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ScrollRect target;

			[Token(Token = "0x6001328")]
			[Address(RVA = "0x3E3068", Offset = "0x3E3068", VA = "0x3E3068")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x6001329")]
			[Address(RVA = "0x3E4F0C", Offset = "0x3E4F0C", VA = "0x3E4F0C")]
			internal float <DOHorizontalNormalizedPos>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x600132A")]
			[Address(RVA = "0x3E4F34", Offset = "0x3E4F34", VA = "0x3E4F34")]
			internal void <DOHorizontalNormalizedPos>b__1(float x)
			{
			}
		}

		[Token(Token = "0x200043B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2267C0", Offset = "0x2267C0")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x4001679")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ScrollRect target;

			[Token(Token = "0x600132B")]
			[Address(RVA = "0x3E31EC", Offset = "0x3E31EC", VA = "0x3E31EC")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x600132C")]
			[Address(RVA = "0x3E4F64", Offset = "0x3E4F64", VA = "0x3E4F64")]
			internal float <DOVerticalNormalizedPos>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x600132D")]
			[Address(RVA = "0x3E4F8C", Offset = "0x3E4F8C", VA = "0x3E4F8C")]
			internal void <DOVerticalNormalizedPos>b__1(float x)
			{
			}
		}

		[Token(Token = "0x200043C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2267D0", Offset = "0x2267D0")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x400167A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Slider target;

			[Token(Token = "0x600132E")]
			[Address(RVA = "0x3E3378", Offset = "0x3E3378", VA = "0x3E3378")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x600132F")]
			[Address(RVA = "0x3E4FBC", Offset = "0x3E4FBC", VA = "0x3E4FBC")]
			internal float <DOValue>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6001330")]
			[Address(RVA = "0x3E4FEC", Offset = "0x3E4FEC", VA = "0x3E4FEC")]
			internal void <DOValue>b__1(float x)
			{
			}
		}

		[Token(Token = "0x200043D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2267E0", Offset = "0x2267E0")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x400167B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Text target;

			[Token(Token = "0x6001331")]
			[Address(RVA = "0x3E351C", Offset = "0x3E351C", VA = "0x3E351C")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x6001332")]
			[Address(RVA = "0x3E5024", Offset = "0x3E5024", VA = "0x3E5024")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001333")]
			[Address(RVA = "0x3E505C", Offset = "0x3E505C", VA = "0x3E505C")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200043E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2267F0", Offset = "0x2267F0")]
		private sealed class <>c__DisplayClass35_0
		{
			[Token(Token = "0x400167C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Text target;

			[Token(Token = "0x6001334")]
			[Address(RVA = "0x3E369C", Offset = "0x3E369C", VA = "0x3E369C")]
			public <>c__DisplayClass35_0()
			{
			}

			[Token(Token = "0x6001335")]
			[Address(RVA = "0x3E50B8", Offset = "0x3E50B8", VA = "0x3E50B8")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001336")]
			[Address(RVA = "0x3E50F0", Offset = "0x3E50F0", VA = "0x3E50F0")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200043F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226800", Offset = "0x226800")]
		private sealed class <>c__DisplayClass36_0
		{
			[Token(Token = "0x400167D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Text target;

			[Token(Token = "0x6001337")]
			[Address(RVA = "0x3E3830", Offset = "0x3E3830", VA = "0x3E3830")]
			public <>c__DisplayClass36_0()
			{
			}

			[Token(Token = "0x6001338")]
			[Address(RVA = "0x3E514C", Offset = "0x3E514C", VA = "0x3E514C")]
			internal string <DOText>b__0()
			{
				return null;
			}

			[Token(Token = "0x6001339")]
			[Address(RVA = "0x3E517C", Offset = "0x3E517C", VA = "0x3E517C")]
			internal void <DOText>b__1(string x)
			{
			}
		}

		[Token(Token = "0x2000440")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226810", Offset = "0x226810")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x400167E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Color to;

			[Token(Token = "0x400167F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Graphic target;

			[Token(Token = "0x600133A")]
			[Address(RVA = "0x3E3AA0", Offset = "0x3E3AA0", VA = "0x3E3AA0")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x600133B")]
			[Address(RVA = "0x3E51B4", Offset = "0x3E51B4", VA = "0x3E51B4")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x600133C")]
			[Address(RVA = "0x3E51C4", Offset = "0x3E51C4", VA = "0x3E51C4")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000441")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226820", Offset = "0x226820")]
		private sealed class <>c__DisplayClass38_0
		{
			[Token(Token = "0x4001680")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Color to;

			[Token(Token = "0x4001681")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Image target;

			[Token(Token = "0x600133D")]
			[Address(RVA = "0x3E3D10", Offset = "0x3E3D10", VA = "0x3E3D10")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x600133E")]
			[Address(RVA = "0x3E52D0", Offset = "0x3E52D0", VA = "0x3E52D0")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x600133F")]
			[Address(RVA = "0x3E52E0", Offset = "0x3E52E0", VA = "0x3E52E0")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000442")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226830", Offset = "0x226830")]
		private sealed class <>c__DisplayClass39_0
		{
			[Token(Token = "0x4001682")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Color to;

			[Token(Token = "0x4001683")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Text target;

			[Token(Token = "0x6001340")]
			[Address(RVA = "0x3E3F80", Offset = "0x3E3F80", VA = "0x3E3F80")]
			public <>c__DisplayClass39_0()
			{
			}

			[Token(Token = "0x6001341")]
			[Address(RVA = "0x3E53EC", Offset = "0x3E53EC", VA = "0x3E53EC")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001342")]
			[Address(RVA = "0x3E53FC", Offset = "0x3E53FC", VA = "0x3E53FC")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x3DF790", Offset = "0x3DF790", VA = "0x3DF790")]
		public static TweenerCore<float, float, FloatOptions> DOFade(this CanvasGroup target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x3DF910", Offset = "0x3DF910", VA = "0x3DF910")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Graphic target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x3DFAB4", Offset = "0x3DFAB4", VA = "0x3DFAB4")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Graphic target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x3DFC34", Offset = "0x3DFC34", VA = "0x3DFC34")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Image target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x3DFDD8", Offset = "0x3DFDD8", VA = "0x3DFDD8")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Image target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x3DFF58", Offset = "0x3DFF58", VA = "0x3DFF58")]
		public static TweenerCore<float, float, FloatOptions> DOFillAmount(this Image target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x3E0108", Offset = "0x3E0108", VA = "0x3E0108")]
		public static Sequence DOGradientColor(this Image target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x3E0344", Offset = "0x3E0344", VA = "0x3E0344")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOFlexibleSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0x3E04E4", Offset = "0x3E04E4", VA = "0x3E04E4")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMinSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0x3E0684", Offset = "0x3E0684", VA = "0x3E0684")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPreferredSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x3E0824", Offset = "0x3E0824", VA = "0x3E0824")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Outline target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0x3E09C8", Offset = "0x3E09C8", VA = "0x3E09C8")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Outline target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0x3E0B48", Offset = "0x3E0B48", VA = "0x3E0B48")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOScale(this Outline target, Vector2 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0x3E0CDC", Offset = "0x3E0CDC", VA = "0x3E0CDC")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPos(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0x3E0E7C", Offset = "0x3E0E7C", VA = "0x3E0E7C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPosX(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0x3E103C", Offset = "0x3E103C", VA = "0x3E103C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPosY(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0x3E11FC", Offset = "0x3E11FC", VA = "0x3E11FC")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3D(this RectTransform target, Vector3 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x3E13A8", Offset = "0x3E13A8", VA = "0x3E13A8")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DX(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x3E1578", Offset = "0x3E1578", VA = "0x3E1578")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DY(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x3E1748", Offset = "0x3E1748", VA = "0x3E1748")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DZ(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x3E1918", Offset = "0x3E1918", VA = "0x3E1918")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorMax(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x3E1AB8", Offset = "0x3E1AB8", VA = "0x3E1AB8")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorMin(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x3E1C58", Offset = "0x3E1C58", VA = "0x3E1C58")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivot(this RectTransform target, Vector2 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x3E1DEC", Offset = "0x3E1DEC", VA = "0x3E1DEC")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivotX(this RectTransform target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x3E1FA8", Offset = "0x3E1FA8", VA = "0x3E1FA8")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivotY(this RectTransform target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x3E2164", Offset = "0x3E2164", VA = "0x3E2164")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOSizeDelta(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x3E2304", Offset = "0x3E2304", VA = "0x3E2304")]
		public static Tweener DOPunchAnchorPos(this RectTransform target, Vector2 punch, float duration, int vibrato = 10, float elasticity = 1f, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x3E24F8", Offset = "0x3E24F8", VA = "0x3E24F8")]
		public static Tweener DOShakeAnchorPos(this RectTransform target, float duration, float strength = 100f, int vibrato = 10, float randomness = 90f, bool snapping = false, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x3E26C8", Offset = "0x3E26C8", VA = "0x3E26C8")]
		public static Tweener DOShakeAnchorPos(this RectTransform target, float duration, Vector2 strength, int vibrato = 10, float randomness = 90f, bool snapping = false, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x3E28D4", Offset = "0x3E28D4", VA = "0x3E28D4")]
		public static Sequence DOJumpAnchorPos(this RectTransform target, Vector2 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x3E2D54", Offset = "0x3E2D54", VA = "0x3E2D54")]
		public static Tweener DONormalizedPos(this ScrollRect target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x3E2EEC", Offset = "0x3E2EEC", VA = "0x3E2EEC")]
		public static Tweener DOHorizontalNormalizedPos(this ScrollRect target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x3E3070", Offset = "0x3E3070", VA = "0x3E3070")]
		public static Tweener DOVerticalNormalizedPos(this ScrollRect target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x3E31F4", Offset = "0x3E31F4", VA = "0x3E31F4")]
		public static TweenerCore<float, float, FloatOptions> DOValue(this Slider target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x3E3380", Offset = "0x3E3380", VA = "0x3E3380")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Text target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x3E3524", Offset = "0x3E3524", VA = "0x3E3524")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Text target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x3E36A4", Offset = "0x3E36A4", VA = "0x3E36A4")]
		public static TweenerCore<string, string, StringOptions> DOText(this Text target, string endValue, float duration, bool richTextEnabled = true, ScrambleMode scrambleMode = ScrambleMode.None, [Optional] string scrambleChars)
		{
			return null;
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x3E3838", Offset = "0x3E3838", VA = "0x3E3838")]
		public static Tweener DOBlendableColor(this Graphic target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x3E3AA8", Offset = "0x3E3AA8", VA = "0x3E3AA8")]
		public static Tweener DOBlendableColor(this Image target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x3E3D18", Offset = "0x3E3D18", VA = "0x3E3D18")]
		public static Tweener DOBlendableColor(this Text target, Color endValue, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x2000227")]
	public static class DOTweenModuleUnityVersion
	{
		[Token(Token = "0x2000443")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226840", Offset = "0x226840")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4001684")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Material target;

			[Token(Token = "0x4001685")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int propertyID;

			[Token(Token = "0x6001343")]
			[Address(RVA = "0x3E67FC", Offset = "0x3E67FC", VA = "0x3E67FC")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6001344")]
			[Address(RVA = "0x3E6A4C", Offset = "0x3E6A4C", VA = "0x3E6A4C")]
			internal Vector2 <DOOffset>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001345")]
			[Address(RVA = "0x3E6A84", Offset = "0x3E6A84", VA = "0x3E6A84")]
			internal void <DOOffset>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000444")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226850", Offset = "0x226850")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4001686")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Material target;

			[Token(Token = "0x4001687")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int propertyID;

			[Token(Token = "0x6001346")]
			[Address(RVA = "0x3E6A44", Offset = "0x3E6A44", VA = "0x3E6A44")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6001347")]
			[Address(RVA = "0x3E6AD0", Offset = "0x3E6AD0", VA = "0x3E6AD0")]
			internal Vector2 <DOTiling>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001348")]
			[Address(RVA = "0x3E6B08", Offset = "0x3E6B08", VA = "0x3E6B08")]
			internal void <DOTiling>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x3E5D04", Offset = "0x3E5D04", VA = "0x3E5D04")]
		public static Sequence DOGradientColor(this Material target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x3E5F28", Offset = "0x3E5F28", VA = "0x3E5F28")]
		public static Sequence DOGradientColor(this Material target, Gradient gradient, string property, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x3E615C", Offset = "0x3E615C", VA = "0x3E615C")]
		public static CustomYieldInstruction WaitForCompletion(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x3E6214", Offset = "0x3E6214", VA = "0x3E6214")]
		public static CustomYieldInstruction WaitForRewind(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x3E62CC", Offset = "0x3E62CC", VA = "0x3E62CC")]
		public static CustomYieldInstruction WaitForKill(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x3E6384", Offset = "0x3E6384", VA = "0x3E6384")]
		public static CustomYieldInstruction WaitForElapsedLoops(this Tween t, int elapsedLoops, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x3E6444", Offset = "0x3E6444", VA = "0x3E6444")]
		public static CustomYieldInstruction WaitForPosition(this Tween t, float position, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x3E6504", Offset = "0x3E6504", VA = "0x3E6504")]
		public static CustomYieldInstruction WaitForStart(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x3E65BC", Offset = "0x3E65BC", VA = "0x3E65BC")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOOffset(this Material target, Vector2 endValue, int propertyID, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x3E6804", Offset = "0x3E6804", VA = "0x3E6804")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOTiling(this Material target, Vector2 endValue, int propertyID, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x2000228")]
	public static class DOTweenCYInstruction
	{
		[Token(Token = "0x2000445")]
		public class WaitForCompletion : CustomYieldInstruction
		{
			[Token(Token = "0x4001688")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private readonly Tween t;

			[Token(Token = "0x170001A1")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6001349")]
				[Address(RVA = "0x3DB2E4", Offset = "0x3DB2E4", VA = "0x3DB2E4", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x600134A")]
			[Address(RVA = "0x3DB328", Offset = "0x3DB328", VA = "0x3DB328")]
			public WaitForCompletion(Tween tween)
			{
			}
		}

		[Token(Token = "0x2000446")]
		public class WaitForRewind : CustomYieldInstruction
		{
			[Token(Token = "0x4001689")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private readonly Tween t;

			[Token(Token = "0x170001A2")]
			public override bool keepWaiting
			{
				[Token(Token = "0x600134B")]
				[Address(RVA = "0x3DB4B4", Offset = "0x3DB4B4", VA = "0x3DB4B4", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x600134C")]
			[Address(RVA = "0x3DB55C", Offset = "0x3DB55C", VA = "0x3DB55C")]
			public WaitForRewind(Tween tween)
			{
			}
		}

		[Token(Token = "0x2000447")]
		public class WaitForKill : CustomYieldInstruction
		{
			[Token(Token = "0x400168A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private readonly Tween t;

			[Token(Token = "0x170001A3")]
			public override bool keepWaiting
			{
				[Token(Token = "0x600134D")]
				[Address(RVA = "0x3DB3C4", Offset = "0x3DB3C4", VA = "0x3DB3C4", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x600134E")]
			[Address(RVA = "0x3DB3E4", Offset = "0x3DB3E4", VA = "0x3DB3E4")]
			public WaitForKill(Tween tween)
			{
			}
		}

		[Token(Token = "0x2000448")]
		public class WaitForElapsedLoops : CustomYieldInstruction
		{
			[Token(Token = "0x400168B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private readonly Tween t;

			[Token(Token = "0x400168C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private readonly int elapsedLoops;

			[Token(Token = "0x170001A4")]
			public override bool keepWaiting
			{
				[Token(Token = "0x600134F")]
				[Address(RVA = "0x3DB348", Offset = "0x3DB348", VA = "0x3DB348", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001350")]
			[Address(RVA = "0x3DB39C", Offset = "0x3DB39C", VA = "0x3DB39C")]
			public WaitForElapsedLoops(Tween tween, int elapsedLoops)
			{
			}
		}

		[Token(Token = "0x2000449")]
		public class WaitForPosition : CustomYieldInstruction
		{
			[Token(Token = "0x400168D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private readonly Tween t;

			[Token(Token = "0x400168E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private readonly float position;

			[Token(Token = "0x170001A5")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6001351")]
				[Address(RVA = "0x3DB404", Offset = "0x3DB404", VA = "0x3DB404", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001352")]
			[Address(RVA = "0x3DB48C", Offset = "0x3DB48C", VA = "0x3DB48C")]
			public WaitForPosition(Tween tween, float position)
			{
			}
		}

		[Token(Token = "0x200044A")]
		public class WaitForStart : CustomYieldInstruction
		{
			[Token(Token = "0x400168F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private readonly Tween t;

			[Token(Token = "0x170001A6")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6001353")]
				[Address(RVA = "0x3DB57C", Offset = "0x3DB57C", VA = "0x3DB57C", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001354")]
			[Address(RVA = "0x3DB5CC", Offset = "0x3DB5CC", VA = "0x3DB5CC")]
			public WaitForStart(Tween tween)
			{
			}
		}
	}
	[Token(Token = "0x2000229")]
	public static class DOTweenModuleUtils
	{
		[Token(Token = "0x200044B")]
		public static class Physics
		{
			[Token(Token = "0x6001355")]
			[Address(RVA = "0x3E6CE4", Offset = "0x3E6CE4", VA = "0x3E6CE4")]
			public static void SetOrientationOnPath(PathOptions options, Tween t, Quaternion newRot, Transform trans)
			{
			}

			[Token(Token = "0x6001356")]
			[Address(RVA = "0x3E6E54", Offset = "0x3E6E54", VA = "0x3E6E54")]
			public static bool HasRigidbody2D(Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x6001357")]
			[Address(RVA = "0x3E6EFC", Offset = "0x3E6EFC", VA = "0x3E6EFC")]
			[Preserve]
			public static bool HasRigidbody(Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x6001358")]
			[Address(RVA = "0x3E6FA4", Offset = "0x3E6FA4", VA = "0x3E6FA4")]
			[Preserve]
			public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> CreateDOTweenPathTween(MonoBehaviour target, bool tweenRigidbody, bool isLocal, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode)
			{
				return null;
			}
		}

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _initialized;

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x3E6B54", Offset = "0x3E6B54", VA = "0x3E6B54")]
		[Preserve]
		public static void Init()
		{
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x3E6C0C", Offset = "0x3E6C0C", VA = "0x3E6C0C")]
		[Preserve]
		private static void Preserver()
		{
		}
	}
	[Token(Token = "0x200022A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x22483C", Offset = "0x22483C")]
	public class DOTweenAnimation : ABSAnimationComponent
	{
		[Token(Token = "0x200044C")]
		public enum AnimationType
		{
			[Token(Token = "0x4001691")]
			None,
			[Token(Token = "0x4001692")]
			Move,
			[Token(Token = "0x4001693")]
			LocalMove,
			[Token(Token = "0x4001694")]
			Rotate,
			[Token(Token = "0x4001695")]
			LocalRotate,
			[Token(Token = "0x4001696")]
			Scale,
			[Token(Token = "0x4001697")]
			Color,
			[Token(Token = "0x4001698")]
			Fade,
			[Token(Token = "0x4001699")]
			Text,
			[Token(Token = "0x400169A")]
			PunchPosition,
			[Token(Token = "0x400169B")]
			PunchRotation,
			[Token(Token = "0x400169C")]
			PunchScale,
			[Token(Token = "0x400169D")]
			ShakePosition,
			[Token(Token = "0x400169E")]
			ShakeRotation,
			[Token(Token = "0x400169F")]
			ShakeScale,
			[Token(Token = "0x40016A0")]
			CameraAspect,
			[Token(Token = "0x40016A1")]
			CameraBackgroundColor,
			[Token(Token = "0x40016A2")]
			CameraFieldOfView,
			[Token(Token = "0x40016A3")]
			CameraOrthoSize,
			[Token(Token = "0x40016A4")]
			CameraPixelRect,
			[Token(Token = "0x40016A5")]
			CameraRect,
			[Token(Token = "0x40016A6")]
			UIWidthHeight
		}

		[Token(Token = "0x200044D")]
		public enum TargetType
		{
			[Token(Token = "0x40016A8")]
			Unset,
			[Token(Token = "0x40016A9")]
			Camera,
			[Token(Token = "0x40016AA")]
			CanvasGroup,
			[Token(Token = "0x40016AB")]
			Image,
			[Token(Token = "0x40016AC")]
			Light,
			[Token(Token = "0x40016AD")]
			RectTransform,
			[Token(Token = "0x40016AE")]
			Renderer,
			[Token(Token = "0x40016AF")]
			SpriteRenderer,
			[Token(Token = "0x40016B0")]
			Rigidbody,
			[Token(Token = "0x40016B1")]
			Rigidbody2D,
			[Token(Token = "0x40016B2")]
			Text,
			[Token(Token = "0x40016B3")]
			Transform,
			[Token(Token = "0x40016B4")]
			tk2dBaseSprite,
			[Token(Token = "0x40016B5")]
			tk2dTextMesh,
			[Token(Token = "0x40016B6")]
			TextMeshPro,
			[Token(Token = "0x40016B7")]
			TextMeshProUGUI
		}

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool targetIsSelf;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public GameObject targetGO;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool tweenTargetIsTargetGO;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float delay;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float duration;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Ease easeType;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve easeCurve;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public LoopType loopType;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int loops;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public string id;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool isRelative;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool isFrom;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		public bool isIndependentUpdate;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		public bool autoKill;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool isActive;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		public bool isValid;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Component target;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public AnimationType animationType;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public TargetType targetType;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public TargetType forcedTargetType;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool autoPlay;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		public bool useTargetAsV3;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float endValueFloat;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Vector3 endValueV3;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Vector2 endValueV2;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public Color endValueColor;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public string endValueString;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Rect endValueRect;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Transform endValueTransform;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public bool optionalBool0;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float optionalFloat0;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public int optionalInt0;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public RotateMode optionalRotationMode;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public ScrambleMode optionalScrambleMode;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public string optionalString;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private bool _tweenCreated;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int _playCount;

		[Token(Token = "0x1400000B")]
		public static event Action<DOTweenAnimation> OnReset
		{
			[Token(Token = "0x6000B62")]
			[Address(RVA = "0x3D76D8", Offset = "0x3D76D8", VA = "0x3D76D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22DB88", Offset = "0x22DB88")]
			add
			{
			}
			[Token(Token = "0x6000B63")]
			[Address(RVA = "0x3D779C", Offset = "0x3D779C", VA = "0x3D779C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22DB98", Offset = "0x22DB98")]
			remove
			{
			}
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x3D7860", Offset = "0x3D7860", VA = "0x3D7860")]
		private static void Dispatch_OnReset(DOTweenAnimation anim)
		{
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x3D78E0", Offset = "0x3D78E0", VA = "0x3D78E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x3D9788", Offset = "0x3D9788", VA = "0x3D9788")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x3D97CC", Offset = "0x3D97CC", VA = "0x3D97CC")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x3D97D0", Offset = "0x3D97D0", VA = "0x3D97D0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x3D7930", Offset = "0x3D7930", VA = "0x3D7930")]
		public void CreateTween()
		{
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x3D9DC0", Offset = "0x3D9DC0", VA = "0x3D9DC0", Slot = "4")]
		public override void DOPlay()
		{
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x3D9E4C", Offset = "0x3D9E4C", VA = "0x3D9E4C", Slot = "5")]
		public override void DOPlayBackwards()
		{
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x3D9ED8", Offset = "0x3D9ED8", VA = "0x3D9ED8", Slot = "6")]
		public override void DOPlayForward()
		{
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0x3D9F64", Offset = "0x3D9F64", VA = "0x3D9F64", Slot = "7")]
		public override void DOPause()
		{
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x3D9FF0", Offset = "0x3D9FF0", VA = "0x3D9FF0", Slot = "8")]
		public override void DOTogglePause()
		{
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x3DA07C", Offset = "0x3DA07C", VA = "0x3DA07C", Slot = "9")]
		public override void DORewind()
		{
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x3DA1B4", Offset = "0x3DA1B4", VA = "0x3DA1B4", Slot = "10")]
		public override void DORestart()
		{
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x3DA1C8", Offset = "0x3DA1C8", VA = "0x3DA1C8", Slot = "11")]
		public override void DORestart(bool fromHere)
		{
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x3DA6BC", Offset = "0x3DA6BC", VA = "0x3DA6BC", Slot = "12")]
		public override void DOComplete()
		{
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x3DA74C", Offset = "0x3DA74C", VA = "0x3DA74C", Slot = "13")]
		public override void DOKill()
		{
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0x3DA7E4", Offset = "0x3DA7E4", VA = "0x3DA7E4")]
		public void DOPlayById(string id)
		{
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0x3DA878", Offset = "0x3DA878", VA = "0x3DA878")]
		public void DOPlayAllById(string id)
		{
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x3DA8F4", Offset = "0x3DA8F4", VA = "0x3DA8F4")]
		public void DOPauseAllById(string id)
		{
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x3DA970", Offset = "0x3DA970", VA = "0x3DA970")]
		public void DOPlayBackwardsById(string id)
		{
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x3DAA04", Offset = "0x3DAA04", VA = "0x3DAA04")]
		public void DOPlayBackwardsAllById(string id)
		{
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x3DAA80", Offset = "0x3DAA80", VA = "0x3DAA80")]
		public void DOPlayForwardById(string id)
		{
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x3DAB14", Offset = "0x3DAB14", VA = "0x3DAB14")]
		public void DOPlayForwardAllById(string id)
		{
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x3DAB90", Offset = "0x3DAB90", VA = "0x3DAB90")]
		public void DOPlayNext()
		{
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x3DACD8", Offset = "0x3DACD8", VA = "0x3DACD8")]
		public void DORewindAndPlayNext()
		{
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x3DAD78", Offset = "0x3DAD78", VA = "0x3DAD78")]
		public void DORewindAllById(string id)
		{
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0x3DAE04", Offset = "0x3DAE04", VA = "0x3DAE04")]
		public void DORestartById(string id)
		{
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x3DAEB8", Offset = "0x3DAEB8", VA = "0x3DAEB8")]
		public void DORestartAllById(string id)
		{
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0x3DAF4C", Offset = "0x3DAF4C", VA = "0x3DAF4C")]
		public List<Tween> GetTweens()
		{
			return null;
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0x3D982C", Offset = "0x3D982C", VA = "0x3D982C")]
		public static TargetType TypeToDOTargetType(Type t)
		{
			return default(TargetType);
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x3DB058", Offset = "0x3DB058", VA = "0x3DB058")]
		public Tween CreateEditorPreview()
		{
			return null;
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x3D9814", Offset = "0x3D9814", VA = "0x3D9814")]
		private GameObject GetTweenGO()
		{
			return null;
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x3DA2C0", Offset = "0x3DA2C0", VA = "0x3DA2C0")]
		private void ReEvaluateRelativeTween()
		{
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0x3DB08C", Offset = "0x3DB08C", VA = "0x3DB08C")]
		public DOTweenAnimation()
		{
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0x3DB2D8", Offset = "0x3DB2D8", VA = "0x3DB2D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x22DBA8", Offset = "0x22DBA8")]
		private void <CreateTween>b__47_0()
		{
		}
	}
	[Token(Token = "0x200022B")]
	public static class DOTweenAnimationExtensions
	{
		[Token(Token = "0x6000B87")]
		public static bool IsSameOrSubclassOf<T>(this Component t)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200022C")]
	public static class DOTweenProShortcuts
	{
		[Token(Token = "0x200044E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226860", Offset = "0x226860")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x40016B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Transform target;

			[Token(Token = "0x6001359")]
			[Address(RVA = "0x3E752C", Offset = "0x3E752C", VA = "0x3E752C")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x600135A")]
			[Address(RVA = "0x3E7904", Offset = "0x3E7904", VA = "0x3E7904")]
			internal Vector3 <DOSpiral>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600135B")]
			[Address(RVA = "0x3E7934", Offset = "0x3E7934", VA = "0x3E7934")]
			internal void <DOSpiral>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x200044F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x226870", Offset = "0x226870")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x40016B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Rigidbody target;

			[Token(Token = "0x600135C")]
			[Address(RVA = "0x3E78FC", Offset = "0x3E78FC", VA = "0x3E78FC")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x600135D")]
			[Address(RVA = "0x3E7980", Offset = "0x3E7980", VA = "0x3E7980")]
			internal Vector3 <DOSpiral>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x3E710C", Offset = "0x3E710C", VA = "0x3E710C")]
		static DOTweenProShortcuts()
		{
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x3E7168", Offset = "0x3E7168", VA = "0x3E7168")]
		public static Tweener DOSpiral(this Transform target, float duration, [Optional] Vector3? axis, SpiralMode mode = SpiralMode.Expand, float speed = 1f, float frequency = 10f, float depth = 0f, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x3E7534", Offset = "0x3E7534", VA = "0x3E7534")]
		public static Tweener DOSpiral(this Rigidbody target, float duration, [Optional] Vector3? axis, SpiralMode mode = SpiralMode.Expand, float speed = 1f, float frequency = 10f, float depth = 0f, bool snapping = false)
		{
			return null;
		}
	}
}
namespace DCHelperTools
{
	[Token(Token = "0x200022D")]
	public class DC
	{
		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x3C9178", Offset = "0x3C9178", VA = "0x3C9178")]
		public static float MapRadial01(float input, float centre, float radius)
		{
			return default(float);
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x3D6260", Offset = "0x3D6260", VA = "0x3D6260")]
		public static float Mean(float[] input)
		{
			return default(float);
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x3D62EC", Offset = "0x3D62EC", VA = "0x3D62EC")]
		public static float RMS(float[] input)
		{
			return default(float);
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x3D63F0", Offset = "0x3D63F0", VA = "0x3D63F0")]
		public static float WaveshapeDistort(float val, float amount)
		{
			return default(float);
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x3D64CC", Offset = "0x3D64CC", VA = "0x3D64CC")]
		public static float InverseWaveshapeDistort(float val, float amount)
		{
			return default(float);
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x3C69C4", Offset = "0x3C69C4", VA = "0x3C69C4")]
		public static float Tanh(float val)
		{
			return default(float);
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x3D65E0", Offset = "0x3D65E0", VA = "0x3D65E0")]
		public static float Map(float inValue, float inMin, float inMax, float outMin, float outMax)
		{
			return default(float);
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x3D6610", Offset = "0x3D6610", VA = "0x3D6610")]
		public static float LinearToDecibel(float linear)
		{
			return default(float);
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x3D66BC", Offset = "0x3D66BC", VA = "0x3D66BC")]
		public static float DecibelToLinear(float dB)
		{
			return default(float);
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x3C7D4C", Offset = "0x3C7D4C", VA = "0x3C7D4C")]
		public static float MidiToFrequency(float midinote)
		{
			return default(float);
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x3C6DB0", Offset = "0x3C6DB0", VA = "0x3C6DB0")]
		public static float Cos01(float val)
		{
			return default(float);
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x3C6D14", Offset = "0x3C6D14", VA = "0x3C6D14")]
		public static float Fmod(float a, float b)
		{
			return default(float);
		}

		[Token(Token = "0x6000B97")]
		public static void ShuffleList<E>(IList<E> list)
		{
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x3D6750", Offset = "0x3D6750", VA = "0x3D6750")]
		public static void ShuffleIntArray(int[] array)
		{
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x3D682C", Offset = "0x3D682C", VA = "0x3D682C")]
		public DC()
		{
		}
	}
	[Token(Token = "0x200022E")]
	public class Osc
	{
		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float freq;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float phaseOffset;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float phase;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool fixedTime;

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x3D6F78", Offset = "0x3D6F78", VA = "0x3D6F78")]
		public void SetFixed(bool val)
		{
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x3C6928", Offset = "0x3C6928", VA = "0x3C6928")]
		public float Update()
		{
			return default(float);
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x3D701C", Offset = "0x3D701C", VA = "0x3D701C")]
		private float Sin(float val)
		{
			return default(float);
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x3D6F80", Offset = "0x3D6F80", VA = "0x3D6F80")]
		private float Fmod(float a, float b)
		{
			return default(float);
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x3D70E4", Offset = "0x3D70E4", VA = "0x3D70E4")]
		public void ResetPhase(float newPhase)
		{
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x3C603C", Offset = "0x3C603C", VA = "0x3C603C")]
		public Osc()
		{
		}
	}
	[Token(Token = "0x200022F")]
	public class Smooth
	{
		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float smoothFactor;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float valPrev;

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x3C547C", Offset = "0x3C547C", VA = "0x3C547C")]
		public Smooth(float smoothFactor = 0.5f)
		{
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x3C5540", Offset = "0x3C5540", VA = "0x3C5540")]
		public float Update(float val)
		{
			return default(float);
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x3D739C", Offset = "0x3D739C", VA = "0x3D739C")]
		public void Init(float val)
		{
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x3D73A4", Offset = "0x3D73A4", VA = "0x3D73A4")]
		public float GetLastValue()
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000230")]
	public class Delta
	{
		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private float valPrev;

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x3C69A8", Offset = "0x3C69A8", VA = "0x3C69A8")]
		public float Update(float val)
		{
			return default(float);
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x3C604C", Offset = "0x3C604C", VA = "0x3C604C")]
		public Delta()
		{
		}
	}
	[Token(Token = "0x2000231")]
	public class Deadzone
	{
		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float threshold;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private int currentValue;

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x3C8B54", Offset = "0x3C8B54", VA = "0x3C8B54")]
		public Deadzone(float threshold = 0.5f, int init = 0)
		{
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x3D6834", Offset = "0x3D6834", VA = "0x3D6834")]
		public int Update(float val)
		{
			return default(int);
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x3D6A90", Offset = "0x3D6A90", VA = "0x3D6A90")]
		public float UpdateMagnetic(float val, float attraction)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000232")]
	public class TemporalHysteresis
	{
		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float timeThreshold;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private int activeValue;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float activeTime;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float deviationTime;

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x3C8B7C", Offset = "0x3C8B7C", VA = "0x3C8B7C")]
		public TemporalHysteresis(float timeThreshold, int init = 0)
		{
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x3D73AC", Offset = "0x3D73AC", VA = "0x3D73AC")]
		public int Update(int value)
		{
			return default(int);
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x3D7438", Offset = "0x3D7438", VA = "0x3D7438")]
		public float GetActiveTime()
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000233")]
	public class LowPassFilter
	{
		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float cutoff;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float resonance;

		[Token(Token = "0x4001383")]
		private const float CUTOFF_MAX = 128f;

		[Token(Token = "0x4001384")]
		private const float CUTOFF_MIN = 0f;

		[Token(Token = "0x4001385")]
		private const float RESONANCE_MAX = 128f;

		[Token(Token = "0x4001386")]
		private const float RESONANCE_MIN = 0f;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float c;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float r;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float v0;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float v1;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int sampleRate;

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x3D6DEC", Offset = "0x3D6DEC", VA = "0x3D6DEC")]
		public LowPassFilter(float sampleRate)
		{
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x3D6E24", Offset = "0x3D6E24", VA = "0x3D6E24")]
		public float Process(float input)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000234")]
	public class PseudoSine
	{
		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float frequency;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float phase;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float isr;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float sr;

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x3D71C0", Offset = "0x3D71C0", VA = "0x3D71C0")]
		public PseudoSine(float sampleRate)
		{
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x3D71FC", Offset = "0x3D71FC", VA = "0x3D71FC")]
		public float Process()
		{
			return default(float);
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x3D72D4", Offset = "0x3D72D4", VA = "0x3D72D4")]
		private float Sin(float val)
		{
			return default(float);
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x3D7238", Offset = "0x3D7238", VA = "0x3D7238")]
		private float Fmod(float a, float b)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000235")]
	public class Polyblep
	{
		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float frequency;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float isr;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float sr;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float phase;

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x3D70EC", Offset = "0x3D70EC", VA = "0x3D70EC")]
		public Polyblep(float sampleRate)
		{
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x3D712C", Offset = "0x3D712C", VA = "0x3D712C")]
		public float Process()
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000236")]
	public class Envelope
	{
		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float attack;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float release;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float isr;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float sr;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float time;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool noteOffTriggered;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float valueAtNoteOff;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float timeAtNoteOff;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float valueAtNoteOn;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool useDeltaTime;

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x3D6C4C", Offset = "0x3D6C4C", VA = "0x3D6C4C")]
		public Envelope(float sampleRate, bool useDeltaTime = false)
		{
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0x3D6CB8", Offset = "0x3D6CB8", VA = "0x3D6CB8")]
		public float Process()
		{
			return default(float);
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x3D6DBC", Offset = "0x3D6DBC", VA = "0x3D6DBC")]
		public void Trigger()
		{
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x3D6DD0", Offset = "0x3D6DD0", VA = "0x3D6DD0")]
		public void On()
		{
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x3D6DE0", Offset = "0x3D6DE0", VA = "0x3D6DE0")]
		public void Off()
		{
		}
	}
	[Token(Token = "0x2000237")]
	public class Tick
	{
		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float bpm;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float ticksPerBeat;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float isr;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float sr;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float time;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public UnityEvent m_Tick;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent m_Start;

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0x3D7440", Offset = "0x3D7440", VA = "0x3D7440")]
		public Tick(float sampleRate, float bpm = 120f, float ticksPerBeat = 1f)
		{
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x3D7514", Offset = "0x3D7514", VA = "0x3D7514")]
		public float Process()
		{
			return default(float);
		}
	}
}
